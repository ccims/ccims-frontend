var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AccessTokenDialogComponent.html",[0,0.085,1,0.915]],["body/components/AccessTokenDialogComponent.html",[0,0.146,1,1.571,2,0.855,3,0.08,4,0.072,5,0.759,6,1.066,7,1.044,8,1.001,9,0.072,10,7.369,11,1.869,12,6.273,13,1.906,14,1.269,15,1.97,16,0.921,17,1.384,18,1.349,19,1.814,20,1.427,21,0.937,22,3.071,23,0.937,24,2.712,25,0.089,26,0.534,27,1.42,28,3.379,29,4.073,30,0.855,31,7.733,32,6.848,33,0.678,34,2.665,35,3.343,36,3.379,37,0.696,38,6.38,39,0.508,40,0.008,41,0.537,42,0.15,43,0.407,44,3.172,45,0.703,46,1.061,47,3.562,48,4.184,49,0.338,50,0.864,51,0.71,52,6.38,53,0.177,54,0.327,55,1.436,56,1.296,57,1.639,58,3.172,59,2.124,60,0.098,61,0.012,62,1.645,63,0.694,64,1.289,65,4.184,66,2.398,67,4.184,68,4.849,69,2.771,70,2.48,71,3.828,72,1.906,73,5.649,74,7.733,75,6.38,76,6.848,77,5.649,78,3.467,79,6.38,80,4.522,81,7.661,82,4.522,83,3.9,84,4.809,85,2.788,86,2.319,87,4.809,88,2.951,89,2.48,90,2.771,91,4.725,92,1.857,93,2.274,94,3.562,95,1.044,96,1.243,97,1.217,98,0.793,99,1.673,100,1.044,101,1.958,102,0.94,103,0.828,104,1.028,105,1.296,106,0.96,107,1.044,108,0.96,109,0.94,110,1.044,111,0.96,112,1.044,113,0.901,114,0.921,115,0.96,116,0.94,117,0.901,118,1.024,119,1.596,120,0.921,121,0.072,122,0.94,123,0.988,124,0.96,125,0.96,126,0.864,127,1.044,128,0.921,129,1.044,130,0.96,131,1.044,132,0.96,133,1.044,134,0.94,135,1.044,136,0.94,137,1.044,138,0.663,139,1.044,140,0.94,141,0.456,142,1.044,143,0.96,144,1.044,145,0.96,146,1.596,147,0.96,148,1.044,149,0.96,150,1.596,151,0.96,152,1.044,153,0.981,154,1.044,155,0.921,156,1.044,157,0.96,158,1.044,159,0.94,160,0.882,161,1.044,162,0.96,163,1.352,164,1.41,165,0.96,166,1.044,167,0.921,168,0.534,169,1.044,170,0.94,171,0.96,172,1.044,173,0.96,174,1.044,175,0.94,176,0.94,177,0.921,178,1.044,179,0.94,180,1.044,181,0.882,182,0.742,183,0.921,184,1.044,185,0.921,186,1.217,187,0.94,188,0.96,189,0.599,190,0.901,191,0.726,192,0.96,193,0.981,194,1.044,195,0.96,196,0.882,197,1.044,198,0.96,199,1.044,200,0.901,201,0.96,202,0.96,203,0.882,204,1.044,205,0.96,206,0.663,207,0.793,208,0.901,209,0.94,210,1.044,211,0.921,212,1.044,213,0.921,214,1.044,215,0.901,216,1.044,217,0.901,218,1.044,219,0.901,220,0.981,221,1.044,222,0.006,223,0.006]],["title/components/AddProjectMemberDialogComponent.html",[0,0.085,102,0.896]],["body/components/AddProjectMemberDialogComponent.html",[0,0.154,1,0.908,2,0.823,3,0.076,4,0.068,5,0.718,6,1.009,7,0.988,8,0.947,9,0.068,11,0.89,13,1.803,14,1.222,15,1.914,16,0.871,17,1.382,18,1.345,19,0.89,20,1.268,21,0.902,22,2.984,23,0.902,24,2.612,25,0.084,26,0.514,27,1.3,28,3.302,30,0.823,33,0.642,34,2.521,35,3.128,37,0.747,39,0.48,40,0.008,41,0.528,42,0.146,43,0.385,44,3.002,45,0.677,46,1.031,50,1.382,51,1.135,53,0.172,54,0.309,55,1.359,56,0.908,57,1.302,60,0.093,61,0.011,62,1.556,64,1.219,70,2.346,85,3.067,86,1.956,90,3.602,92,1.757,93,1.593,95,0.988,96,1.197,97,1.172,98,0.75,99,1.635,100,0.988,101,1.937,102,1.504,103,1.592,104,1.132,105,1.927,106,0.908,107,0.988,108,0.908,109,0.89,110,0.988,111,0.908,112,0.988,113,0.853,114,0.871,115,0.941,116,0.89,117,0.853,118,0.986,119,1.551,120,0.871,121,0.068,122,0.89,123,0.981,124,0.908,125,0.908,126,0.817,127,0.988,128,0.871,129,0.988,130,0.908,131,0.988,132,0.908,133,0.988,134,0.89,135,0.988,136,0.89,137,0.988,138,0.627,139,0.988,140,0.89,141,0.432,142,0.988,143,0.908,144,0.988,145,0.908,146,1.551,147,0.908,148,0.988,149,0.908,150,1.551,151,0.908,152,0.988,153,0.928,154,0.988,155,0.871,156,0.988,157,0.908,158,0.988,159,0.89,160,0.835,161,0.988,162,0.908,163,1.302,164,1.358,165,0.908,166,0.988,167,0.871,168,0.505,169,0.988,170,0.89,171,0.908,172,0.988,173,0.908,174,0.988,175,0.89,176,0.89,177,0.871,178,0.988,179,0.89,180,0.988,181,0.835,182,0.702,183,0.871,184,0.988,185,0.871,186,1.172,187,0.89,188,0.908,189,0.577,190,0.853,191,0.687,192,0.908,193,0.928,194,0.988,195,0.908,196,0.835,197,0.988,198,0.908,199,0.988,200,0.853,201,0.908,202,0.908,203,0.835,204,0.988,205,0.908,206,0.627,207,0.75,208,0.853,209,0.89,210,0.988,211,0.871,212,0.988,213,0.871,214,0.988,215,0.853,216,0.988,217,0.853,218,0.988,219,0.853,220,0.928,221,0.988,222,0.005,223,0.005,224,7.764,225,6.215,226,0.374,227,2.685,228,4.108,229,5.44,230,6.144,231,1.996,232,4.355,233,4.355,234,1.149,235,2.759,236,6.215,237,6.215,238,7.019,239,4.262,240,5.697,241,6.144,242,3.959,243,1.954,244,2.068,245,4.977,246,1.329,247,3.959,248,0.898,249,3.368,250,3.715,251,3.622,252,4.471,253,1.803,254,2.068,255,1.672,256,2.009,257,4.471,258,4.471,259,2.612,260,0.531,261,4.471,262,3.959,263,3.959,264,4.977,265,4.977,266,5.44,267,1.632,268,1.632,269,4.977,270,2.858,271,3.37,272,3.959,273,3.959,274,2.068,275,2.858,276,1.901,277,2.355,278,3.169,279,3.169]],["title/components/AppComponent.html",[0,0.085,106,0.915]],["body/components/AppComponent.html",[0,0.149,1,1.006,2,0.882,3,0.084,4,0.075,5,0.795,6,1.117,7,1.094,8,1.049,9,0.075,11,0.985,16,0.965,17,1.386,18,1.351,19,0.985,20,0.831,21,0.967,23,0.967,25,0.093,26,0.551,33,0.711,37,0.567,39,0.532,40,0.008,41,0.544,42,0.17,43,0.427,49,0.354,50,0.905,51,1.184,53,0.182,54,0.342,56,1.006,57,1.395,60,0.103,61,0.013,63,0.727,95,1.094,96,1.283,97,1.256,98,0.831,99,1.705,100,1.094,101,1.975,102,0.985,103,1.153,104,1.039,105,1.338,106,1.601,107,1.094,108,1.006,109,0.985,110,1.094,111,1.006,112,1.094,113,0.945,114,0.965,115,0.975,116,0.985,117,0.945,118,1.057,119,1.634,120,0.965,121,0.075,122,0.985,123,1,124,1.006,125,1.006,126,0.905,127,1.094,128,0.965,129,1.094,130,1.006,131,1.094,132,1.006,133,1.094,134,0.985,135,1.094,136,0.985,137,1.094,138,0.695,139,1.094,140,0.985,141,0.478,142,1.094,143,1.006,144,1.094,145,1.006,146,1.634,147,1.006,148,1.094,149,1.006,150,1.634,151,1.006,152,1.094,153,1.028,154,1.094,155,0.965,156,1.094,157,1.006,158,1.094,159,0.985,160,0.925,161,1.094,162,1.006,163,1.395,164,1.455,165,1.006,166,1.094,167,0.965,168,0.56,169,1.094,170,0.985,171,1.006,172,1.094,173,1.006,174,1.094,175,0.985,176,0.985,177,0.965,178,1.094,179,0.985,180,1.094,181,0.925,182,0.778,183,0.965,184,1.094,185,0.965,186,1.256,187,0.985,188,1.006,189,0.618,190,0.945,191,0.761,192,1.006,193,1.028,194,1.094,195,1.006,196,0.925,197,1.094,198,1.006,199,1.094,200,0.945,201,1.006,202,1.006,203,0.925,204,1.094,205,1.006,206,0.695,207,0.831,208,0.945,209,0.985,210,1.094,211,0.965,212,1.094,213,0.965,214,1.094,215,0.945,216,1.094,217,0.945,218,1.094,219,0.945,220,1.028,221,1.094,222,0.006,223,0.006,246,1.072,260,1.039,280,4.385,281,2.001,282,7.395,283,6.583,284,2.349,285,4.952,286,8.435,287,8.609,288,6.583,289,5.333,290,4.012,291,3.733,292,3.51,293,0.945,294,4.952,295,4.962,296,2.434,297,4.952,298,4.962,299,3.733,300,4.952,301,3.236,302,4.952,303,4.952,304,4.952,305,4.952,306,4.952,307,3.733,308,4.012,309,5.991,310,3.421,311,2.691,312,2.434,313,3.733,314,7.395,315,0.778,316,4.621,317,2.244,318,2.434,319,4.952,320,4.952,321,4.952,322,4.42,323,4.012,324,6.583,325,5.83,326,4.952,327,4.952,328,4.952]],["title/modules/AppModule.html",[329,3.024,330,3.395]],["body/modules/AppModule.html",[0,0.113,1,1.643,3,0.073,4,0.065,9,0.065,11,1.19,12,3.24,18,0.603,40,0.008,49,0.307,53,0.237,54,0.297,55,1.306,56,1.643,57,1.267,58,2.885,59,3.861,60,0.089,61,0.011,104,0.961,105,1.215,106,1.802,111,1.643,113,1.542,114,1.575,116,1.609,117,0.82,118,0.96,120,1.575,121,0.091,122,1.609,123,0.869,124,1.643,128,1.575,132,1.643,134,1.609,157,1.643,160,1.51,162,1.643,163,0.911,165,1.643,167,1.575,170,1.609,171,1.643,176,1.609,179,1.609,183,1.575,185,1.575,187,1.609,191,0.66,192,1.643,193,0.892,195,1.643,198,1.643,200,1.542,202,1.643,203,0.803,215,1.542,217,1.542,219,1.542,222,0.005,223,0.005,255,1.607,260,0.817,277,1.648,290,3.482,291,4.506,292,3.046,301,2.113,307,4.506,315,0.675,318,2.113,330,7.278,331,2.627,332,4.238,333,3.806,334,3.806,335,3.806,336,3.806,337,5.732,338,5.429,339,5.429,340,4.506,341,3.046,342,3.482,343,4.843,344,4.506,345,5.978,346,5.294,347,6.087,348,5.294,349,4.506,350,4.298,351,4.298,352,5.294,353,3.806,354,5.978,355,3.046,356,5.294,357,3.806,358,5.294,359,4.238,360,5.294,361,3.806,362,5.294,363,5.294,364,3.806,365,5.294,366,3.806,367,4.014,368,5.294,369,5.294,370,3.806,371,0.97,372,3.24,373,3.482,374,3.24,375,3.806,376,3.482,377,4.298,378,3.482,379,4.298,380,4.298,381,5.294,382,3.046,383,3.505,384,3.806,385,4.298,386,5.294,387,5.294,388,5.978,389,3.51,390,6.087,391,4.298,392,5.978,393,5.978,394,4.298,395,5.978,396,3.806,397,5.294,398,5.978,399,5.978,400,4.298,401,6.087,402,2.627,403,5.294,404,4.298,405,3.482,406,4.298,407,4.298,408,3.806,409,3.806,410,3.806,411,2.256,412,3.839,413,5.294,414,3.806,415,5.294,416,3.806,417,2.52,418,5.294,419,3.806,420,5.978,421,4.298,422,4.298,423,3.806,424,5.267,425,3.24,426,5.978,427,2.52,428,6.087,429,5.294,430,4.843,431,2.336,432,5.294,433,2.748,434,3.482,435,5.978,436,3.482,437,3.482,438,3.046,439,3.482,440,5.978,441,3.24,442,3.806,443,3.249,444,2.748,445,3.806,446,3.822,447,2.424,448,2.885,449,4.298,450,3.482,451,5.978,452,3.482,453,3.806,454,4.298,455,3.482,456,4.298,457,3.046,458,4.298,459,2.542,460,3.24,461,3.806,462,4.298,463,3.24,464,4.298,465,5.294,466,3.736,467,3.806,468,3.482,469,4.843,470,3.806,471,4.298,472,3.24,473,4.298,474,2.885,475,4.298,476,3.482,477,3.806,478,3.806,479,3.806,480,4.298,481,3.482,482,4.298,483,4.298,484,3.482,485,2.748,486,3.806,487,2.885,488,3.806,489,4.298,490,4.298,491,4.298,492,3.482,493,4.238,494,5.294]],["title/modules/AppRoutingModule.html",[329,3.024,337,3.192]],["body/modules/AppRoutingModule.html",[0,0.177,3,0.1,4,0.089,9,0.089,40,0.008,53,0.229,54,0.408,60,0.122,61,0.015,94,6.832,104,1,123,0.904,128,1.436,134,1.675,140,1.466,141,0.776,160,1.376,170,1.675,175,1.466,176,1.466,177,1.436,179,1.466,183,1.436,222,0.006,223,0.006,260,0.701,331,3.605,337,5.223,344,4.446,349,5.555,371,1.331,372,4.446,373,5.97,374,4.446,375,5.223,383,3.458,384,5.223,408,5.223,409,5.223,410,5.223,446,3.771,459,3.133,460,4.446,461,5.223,495,5.898,496,5.898,497,6.058,498,7.369,499,2.153,500,5.898,501,4.446,502,5.223,503,5.223,504,5.898,505,4.446,506,4.181,507,5.223,508,9.516,509,5.223,510,8.838,511,7.369,512,3.409,513,9.064,514,4.778,515,1.833,516,3.605,517,4.181,518,5.898,519,7.369,520,5.898,521,3.96,522,4.181,523,3.326,524,4.778,525,5.223,526,5.898,527,4.778]],["title/interfaces/AppState.html",[121,0.068,528,3.395]],["body/interfaces/AppState.html",[3,0.102,4,0.091,8,1.275,9,0.091,25,0.114,26,0.624,40,0.008,41,0.388,42,0.125,43,0.643,45,0.663,49,0.43,53,0.218,54,0.416,60,0.155,61,0.015,63,1.096,89,3.158,104,1.108,121,0.091,189,0.565,222,0.006,223,0.006,231,1.955,246,1.302,248,0.887,260,0.964,281,1.828,293,1.148,315,0.945,317,2.124,499,2.196,512,2.783,514,4.874,528,6.113,529,1.641,530,4.874,531,6.868,532,1.792,533,7.507,534,5.328,535,3.917,536,4.264,537,1.54,538,2.86,539,4.039,540,2.491,541,1.713,542,4.573,543,4.874,544,2.704,545,2.704,546,5.328,547,2.48,548,0.924,549,2.37,550,4.039,551,5.328,552,4.661,553,2.629,554,5.328,555,2.629,556,3.158,557,3.543,558,4.535,559,6.868,560,5.328,561,2.783,562,3.846,563,3.393,564,5.328,565,5.328,566,4.039,567,3.27,568,4.535,569,2.629,570,5.328,571,4.874,572,2.558,573,3.27,574,2.867,575,1.99,576,3.27,577,5.328,578,5.624,579,4.535,580,5.328,581,6.606,582,6.606,583,3.915,584,6.606,585,6.606,586,5.328,587,5.328,588,5.328,589,6.606,590,6.606,591,4.264,592,5.328,593,5.328,594,4.374,595,1.641,596,4.874,597,5.328,598,4.874,599,3.27,600,5.328,601,5.328,602,1.416,603,5.328,604,6.044,605,5.328,606,5.328,607,5.328,608,0.701,609,5.328,610,5.328,611,2.426]],["title/guards/AuthGuard.html",[503,3.192,612,3.395]],["body/guards/AuthGuard.html",[3,0.104,4,0.093,9,0.093,14,1.221,25,0.116,30,1.012,33,1.084,37,0.651,39,0.811,40,0.008,41,0.487,42,0.157,43,0.651,45,0.832,53,0.201,54,0.424,60,0.127,61,0.016,63,1.109,206,1.281,222,0.007,223,0.007,226,0.632,246,1.327,260,0.729,281,1.864,315,1.341,402,4.615,499,2.239,503,6.05,509,8.086,521,6.07,524,6.626,532,1.814,535,4.104,552,3.219,555,2.68,557,3.899,575,1.852,578,5.691,579,5.691,598,6.116,599,4.104,602,1.443,608,0.802,612,5.691,613,6.134,614,5.432,615,4.257,616,5.691,617,4.104,618,6.727,619,8.535,620,7.55,621,4.615,622,2.628,623,4.827,624,8.535,625,4.348,626,4.671,627,6.134,628,7.55,629,8.535,630,8.535,631,6.134,632,7.55,633,7.55,634,7.55,635,3.393,636,7.55,637,2.196,638,6.134,639,5.352,640,6.134,641,2.294,642,6.134,643,6.134,644,5.432,645,6.134]],["title/injectables/AuthenticationService.html",[532,1.082,626,2.286]],["body/injectables/AuthenticationService.html",[3,0.092,4,0.082,9,0.082,11,1.678,25,0.102,26,0.582,27,1.337,30,0.932,33,0.774,37,0.775,39,0.828,40,0.008,41,0.595,42,0.179,43,0.664,45,0.929,46,1.132,49,0.643,50,0.985,51,0.809,53,0.212,54,0.372,60,0.112,61,0.014,63,1.196,121,0.082,160,1.521,186,1.327,189,0.653,206,1.335,222,0.006,223,0.006,226,0.582,233,5.772,248,0.64,260,0.827,281,1.637,293,1.028,317,1.981,382,3.819,459,2.291,499,1.967,521,5.977,532,1.295,535,3.948,537,1.379,540,2.23,547,2.92,548,1.394,549,2.21,575,1.707,608,0.765,615,3.923,618,5.808,626,3.531,639,5.976,641,2.015,646,2.23,647,4.365,648,5.244,649,7.466,650,5.636,651,6.161,652,4.978,653,7.779,654,4.044,655,6.823,656,7.211,657,6.597,658,6.957,659,5.244,660,6.823,661,5.388,662,7.211,663,6.957,664,6.161,665,5.388,666,6.161,667,5.976,668,5.388,669,6.161,670,3.781,671,5.153,672,4.754,673,6.161,674,5.636,675,3.923,676,6.138,677,4.345,678,4.253,679,5.388,680,4.671,681,6.161,682,6.161,683,5.388,684,4.518,685,5.388,686,5.388,687,5.388,688,5.388,689,3.617,690,4.061,691,1.567,692,3.617,693,4.771,694,4.771,695,4.365,696,4.771,697,4.771,698,4.771,699,4.771,700,4.771,701,4.771,702,4.771,703,4.061,704,4.771,705,2.23,706,4.771,707,4.771,708,4.771,709,4.771,710,4.771,711,4.771,712,4.771,713,4.771,714,4.771,715,4.771,716,4.771,717,4.365,718,4.771]],["title/classes/CCIMSValidators.html",[61,0.011,719,2.286]],["body/classes/CCIMSValidators.html",[3,0.105,4,0.093,9,0.093,25,0.116,26,0.634,37,0.737,40,0.008,41,0.576,50,1.563,51,1.285,53,0.151,60,0.128,61,0.021,72,2.486,77,5.459,196,1.731,222,0.007,223,0.007,226,0.516,227,3.309,233,5.368,254,3.793,255,2.306,267,2.765,318,3.031,552,4.303,637,2.487,654,4.91,719,3.844,720,2.251,721,5.459,722,7.574,723,6.707,724,6.445,725,2.833,726,1.745,727,4.63,728,3.977,729,8.198,730,8.198,731,7.772,732,8.198,733,8.551,734,6.165,735,9.14,736,6.061,737,7.912,738,7.574,739,6.136,740,7.574,741,6.165,742,4.63,743,7.574,744,6.136,745,4.63,746,7.574,747,5.709,748,7.574,749,6.165,750,6.165,751,6.445,752,3.975,753,1.391,754,5.459,755,6.165,756,6.165,757,4.37,758,6.165]],["title/components/CacheNodeComponent.html",[0,0.085,108,0.915]],["body/components/CacheNodeComponent.html",[0,0.158,1,0.986,2,0.87,3,0.083,4,0.074,5,1.043,7,1.072,8,1.028,9,0.074,11,0.965,14,1.292,15,1.996,16,0.945,17,1.386,18,1.349,19,0.965,20,0.814,25,0.092,26,0.543,33,0.697,37,0.723,39,0.521,40,0.008,41,0.541,42,0.169,43,0.418,50,0.887,51,0.729,53,0.206,54,0.335,56,0.986,57,1.376,60,0.101,61,0.012,64,1.323,95,1.072,96,1.265,97,1.239,98,0.814,99,1.692,100,1.072,101,1.968,102,0.965,103,0.85,104,1.034,105,1.32,106,0.986,107,1.072,108,1.588,109,1.621,110,1.072,111,0.986,112,1.072,113,0.926,114,0.945,115,0.968,116,0.965,117,0.926,118,1.043,119,1.618,120,0.945,121,0.074,122,0.965,123,0.991,124,0.986,125,0.986,126,0.887,127,1.072,128,0.945,129,1.072,130,0.986,131,1.072,132,0.986,133,1.072,134,0.965,135,1.072,136,0.965,137,1.072,138,0.681,139,1.072,140,0.965,141,0.468,142,1.072,143,0.986,144,1.072,145,0.986,146,1.618,147,0.986,148,1.072,149,0.986,150,1.618,151,0.986,152,1.072,153,1.007,154,1.072,155,0.945,156,1.072,157,0.986,158,1.072,159,0.965,160,0.906,161,1.072,162,0.986,163,1.376,164,1.435,165,0.986,166,1.072,167,0.945,168,1.039,169,1.072,170,0.965,171,0.986,172,1.072,173,0.986,174,1.072,175,0.965,176,0.965,177,0.945,178,1.072,179,0.965,180,1.072,181,0.906,182,0.762,183,0.945,184,1.072,185,0.945,186,1.239,187,0.965,188,0.986,189,0.61,190,0.926,191,0.745,192,0.986,193,1.007,194,1.072,195,0.986,196,0.906,197,1.072,198,0.986,199,1.072,200,0.926,201,0.986,202,0.986,203,0.906,204,1.072,205,0.986,206,0.681,207,0.814,208,0.926,209,1.292,210,1.072,211,0.945,212,1.072,213,0.945,214,1.072,215,0.926,216,1.072,217,0.926,218,1.072,219,0.926,220,1.007,221,1.072,222,0.006,223,0.006,226,0.406,234,1.177,243,2.12,248,0.772,293,0.926,315,1.228,537,1.242,602,1.142,726,1.687,759,7.584,760,4.297,761,3.408,762,2.919,763,2.878,764,4.915,765,7.32,766,2.371,767,5.518,768,2.966,769,3.137,770,6.494,771,4.852,772,3.662,773,5.751,774,4.895,775,6.494,776,4.603,777,3.808,778,2.49,779,4.852,780,3.004,781,5.751,782,5.261,783,3.716,784,4.852,785,3.598,786,4.852,787,3.03,788,2.845,789,3.931,790,2.672,791,1.541,792,2.009,793,2.313,794,4.852,795,3.258,796,4.852,797,4.852,798,4.852,799,4.852,800,4.852,801,4.852,802,4.852,803,1.907,804,4.852]],["title/interfaces/CoalescedTimelineItem.html",[121,0.068,805,2.879]],["body/interfaces/CoalescedTimelineItem.html",[0,0.131,3,0.063,4,0.056,9,0.056,14,0.74,17,0.534,18,0.522,21,0.546,23,0.546,25,0.07,26,0.451,27,0.885,40,0.008,41,0.409,42,0.188,45,0.877,46,0.932,49,0.611,51,0.953,53,0.2,54,0.257,60,0.112,61,0.009,63,1.023,66,4.037,83,2.273,88,1.72,94,2.803,104,0.442,118,1.118,121,0.096,123,0.875,168,0.61,181,1.007,182,0.847,196,0.694,198,0.756,201,1.895,206,1.223,207,1.569,222,0.005,223,0.005,226,0.311,227,1.625,246,1.507,248,0.754,260,0.968,293,0.709,308,4.369,309,4.369,315,0.847,317,1.982,371,2.02,466,2.021,469,3.012,499,1.357,516,2.273,529,1.014,535,1.671,538,3.123,545,1.671,547,1.236,548,1.136,549,2.016,550,3.621,569,2.773,575,2.119,579,5.811,583,2.831,602,1.871,608,0.841,611,2.175,635,1.671,637,1.082,654,1.951,691,2.025,726,1.462,728,1.581,751,2.803,753,1.217,762,2.424,769,2.765,777,3.162,778,1.834,787,1.539,790,2.317,791,1.713,792,1.539,793,1.772,805,5.084,806,1.772,807,3.012,808,3.041,809,4.776,810,5.393,811,2.948,812,6.545,813,5.393,814,2.571,815,5.393,816,2.116,817,2.96,818,2.931,819,4.426,820,2.571,821,3.621,822,4.776,823,5.393,824,4.369,825,7.953,826,3.465,827,6.272,828,2.495,829,1.625,830,3.579,831,2.18,832,2.377,833,1.539,834,2.651,835,1.887,836,1.208,837,2.377,838,2.377,839,4.776,840,2.18,841,3.575,842,3.718,843,2.635,844,2.18,845,3.718,846,3.718,847,3.718,848,3.718,849,3.718,850,3.718,851,3.718,852,3.718,853,3.718,854,3.718,855,3.718,856,3.718,857,3.718,858,3.718,859,3.718,860,3.718,861,2.803,862,3.012,863,3.579,864,4.499,865,2.18,866,1.539,867,3.718,868,1.208,869,6.347,870,3.012,871,2.273,872,4.066,873,2.495,874,3.718,875,3.718,876,5.62,877,1.581,878,3.718,879,3.718,880,3.718,881,2.635,882,3.718,883,5.393,884,3.292,885,2.18,886,3.012,887,3.292,888,1.772,889,3.718,890,1.671,891,3.718,892,3.718,893,3.718,894,3.718,895,3.292,896,3.718,897,3.718,898,7.953,899,8.146,900,4.726,901,8.303,902,5.774,903,5.391,904,3.579,905,6.347,906,6.347,907,0.74,908,3.718,909,5.886,910,3.718,911,7.709,912,4.776,913,3.718,914,8.146,915,3.012,916,5.64,917,8.146,918,3.718,919,3.718,920,5.393,921,6.347,922,5.393,923,5.393,924,2.931,925,2.496,926,2.831,927,2.496,928,2.803,929,3.718,930,3.718,931,3.718,932,3.718,933,3.012,934,3.718,935,3.718,936,3.718,937,5.393,938,6.347,939,3.718,940,6.347,941,3.718,942,1.828,943,6.347,944,5.393,945,2.097,946,3.718,947,3.718,948,2.097,949,3.718,950,3.718,951,3.718,952,3.292,953,2.273,954,2.635,955,3.718,956,2.18,957,3.784,958,3.718,959,3.718,960,3.718,961,3.718,962,3.718,963,3.718,964,3.012,965,2.377,966,3.718,967,3.718,968,3.718,969,3.718,970,2.803,971,3.718,972,3.718,973,2.377]],["title/components/CommentComponent.html",[0,0.085,111,0.915]],["body/components/CommentComponent.html",[0,0.157,1,0.829,2,0.772,3,0.069,4,0.062,5,0.655,6,0.92,7,0.901,8,0.864,9,0.062,11,0.812,14,1.147,15,1.823,16,0.795,17,1.377,18,1.34,19,0.812,20,1.218,21,0.847,23,0.847,25,0.077,26,0.482,27,1.473,30,0.772,33,0.586,36,3.174,37,0.732,39,0.619,40,0.008,41,0.527,42,0.159,43,0.497,45,0.635,46,1.067,49,0.478,50,1.222,51,1.004,53,0.214,54,0.282,55,1.24,56,0.829,57,1.221,59,1.833,60,0.085,61,0.01,63,0.847,64,1.113,85,2.518,95,0.901,96,1.123,97,1.099,98,0.684,99,1.572,100,0.901,101,1.902,102,0.812,103,0.715,104,1.009,105,1.171,106,0.829,107,0.901,108,0.829,109,0.812,110,0.901,111,1.476,112,0.901,113,0.778,114,0.795,115,0.91,116,0.812,117,1.275,118,0.925,119,1.477,120,0.795,121,0.062,122,0.812,123,1.002,124,0.829,125,0.829,126,0.746,127,0.901,128,0.795,129,0.901,130,0.829,131,0.901,132,0.829,133,0.901,134,0.812,135,0.901,136,0.812,137,0.901,138,0.572,139,0.901,140,0.812,141,0.394,142,0.901,143,0.829,144,0.901,145,0.829,146,1.477,147,0.829,148,0.901,149,0.829,150,1.477,151,0.829,152,0.901,153,0.847,154,0.901,155,0.795,156,0.901,157,0.829,158,0.901,159,0.812,160,0.762,161,0.901,162,0.829,163,1.221,164,1.274,165,0.829,166,0.901,167,0.795,168,0.461,169,0.901,170,0.812,171,0.829,172,0.901,173,0.829,174,0.901,175,0.812,176,0.812,177,0.795,178,0.901,179,0.812,180,0.901,181,0.762,182,0.641,183,0.795,184,0.901,185,1.123,186,1.099,187,0.812,188,0.829,189,0.682,190,0.778,191,0.627,192,0.829,193,0.847,194,0.901,195,0.829,196,0.762,197,0.901,198,0.829,199,0.901,200,0.778,201,0.829,202,0.829,203,0.762,204,0.901,205,0.829,206,0.809,207,0.684,208,0.778,209,0.812,210,0.901,211,0.795,212,0.901,213,0.795,214,0.901,215,0.778,216,0.901,217,0.778,218,0.901,219,0.778,220,0.847,221,0.901,222,0.005,223,0.005,226,0.665,234,0.572,246,1.721,248,0.863,260,0.485,284,1.296,293,0.778,315,1.334,427,2.392,466,2.217,467,3.612,516,4.085,537,1.044,548,1.116,549,2.526,575,1.001,602,1.356,637,1.677,670,3.133,678,2.494,726,1.673,752,3.025,753,1.3,763,2.627,766,2.104,768,2.494,769,2.974,773,5.104,778,2.606,785,3.285,787,2.386,790,2.44,791,1.831,792,1.689,793,1.944,803,1.604,806,4.102,819,3.025,830,4.484,831,2.392,832,2.608,833,1.689,886,3.305,926,2.141,974,3.612,975,2.666,976,7.544,977,5.764,978,2.666,979,6.683,980,5.764,981,6.683,982,6.683,983,6.431,984,5.764,985,6.683,986,7.263,987,3.004,988,2.784,989,4.079,990,4.079,991,4.079,992,3.25,993,3.523,994,4.085,995,4.787,996,4.079,997,4.345,998,4.079,999,3.87,1000,5.764,1001,4.079,1002,4.085,1003,4.079,1004,4.258,1005,5.475,1006,4.079,1007,3.685,1008,4.079,1009,2.892,1010,2.608,1011,1.689,1012,1.604,1013,1.689,1014,4.079,1015,1.873,1016,4.079,1017,4.079,1018,4.079,1019,4.079,1020,4.079,1021,4.079,1022,5.764,1023,4.079,1024,4.085,1025,5.764,1026,4.079,1027,4.079,1028,2.608,1029,3.305,1030,2.608,1031,2.739,1032,3.172,1033,2.608,1034,2.494,1035,2.3,1036,3.075,1037,3.612,1038,3.612,1039,2.739,1040,4.079,1041,3.305,1042,4.079,1043,3.305,1044,1.873,1045,2.217,1046,5.764,1047,5.764,1048,4.079,1049,5.764]],["title/components/ComponentContextMenuComponent.html",[0,0.085,113,0.859]],["body/components/ComponentContextMenuComponent.html",[0,0.168,1,0.704,2,0.686,3,0.059,4,0.052,5,0.556,6,0.781,7,0.765,8,0.734,9,0.052,11,0.689,14,1.019,16,0.675,17,1.366,18,1.327,19,0.689,20,1.205,21,0.752,23,0.752,25,0.065,26,0.428,27,1,30,0.686,33,0.497,37,0.67,39,0.55,40,0.008,41,0.501,42,0.166,43,0.441,45,0.564,46,1.104,49,0.537,50,0.936,51,0.769,53,0.185,54,0.239,56,0.704,57,1.085,60,0.106,61,0.013,63,1.198,69,5.195,72,1.397,78,1.882,86,2.095,93,1.234,95,0.765,96,0.998,97,1.162,98,0.581,99,1.456,100,0.765,101,1.833,102,0.689,103,0.607,104,0.986,105,1.04,106,0.704,107,0.765,108,0.704,109,0.689,110,0.765,111,0.704,112,0.765,113,1.434,114,0.675,115,0.893,116,0.689,117,0.661,118,0.822,119,1.346,120,0.675,121,0.102,122,0.689,123,0.957,124,0.704,125,0.704,126,0.633,127,0.765,128,0.675,129,0.765,130,0.704,131,0.765,132,0.704,133,0.765,134,0.689,135,0.765,136,0.689,137,0.765,138,0.944,139,0.765,140,0.689,141,0.693,142,0.765,143,0.704,144,0.765,145,0.704,146,1.346,147,0.704,148,0.765,149,0.704,150,1.346,151,0.704,152,0.765,153,0.719,154,0.765,155,0.675,156,0.765,157,0.704,158,0.765,159,0.689,160,0.647,161,0.765,162,0.704,163,1.085,164,1.131,165,0.704,166,0.765,167,1.187,168,0.922,169,0.765,170,0.689,171,0.704,172,0.765,173,0.704,174,0.765,175,0.689,176,0.689,177,0.675,178,0.765,179,0.689,180,0.765,181,0.647,182,0.544,183,0.675,184,0.765,185,0.675,186,0.977,187,0.689,188,0.704,189,0.572,190,0.661,191,0.532,192,0.704,193,0.719,194,0.765,195,0.704,196,0.956,197,0.765,198,0.704,199,0.765,200,0.661,201,0.704,202,0.704,203,1.607,204,0.765,205,0.704,206,0.486,207,0.581,208,0.661,209,0.689,210,0.765,211,0.675,212,0.765,213,0.675,214,0.765,215,0.661,216,0.765,217,0.661,218,0.765,219,0.661,220,0.719,221,0.765,222,0.004,223,0.004,226,0.428,234,1.008,243,1.513,246,1.108,248,0.8,253,1.397,260,0.893,267,2.457,268,2.744,276,2.177,277,1.328,281,1.052,284,1.1,293,0.661,298,2.611,299,6.253,315,1.057,317,0.986,441,2.611,443,5.062,444,5.105,446,2.214,447,1.953,448,2.325,459,2.177,532,0.832,545,1.556,548,1.034,549,2.138,575,2.001,583,1.818,602,1.433,608,0.572,635,1.556,637,1.772,670,1.882,671,2.117,672,1.953,691,1.489,692,2.325,728,2.861,753,0.781,763,2.395,778,2.443,780,2.369,803,1.361,814,3.583,820,1.651,828,2.818,829,1.513,836,1.979,866,1.434,868,2.333,873,1.602,877,1.472,907,1.674,997,2.611,1015,2.734,1050,5.66,1051,2.455,1052,3.13,1053,3.002,1054,4.935,1055,4.148,1056,4.935,1057,5.12,1058,3.463,1059,5.09,1060,3.197,1061,3.532,1062,3.463,1063,3.463,1064,4.148,1065,2.273,1066,3.483,1067,3.463,1068,2.44,1069,3.289,1070,3.467,1071,4.77,1072,3.434,1073,4.408,1074,4.682,1075,3.463,1076,3.463,1077,4.935,1078,3.463,1079,3.463,1080,4.935,1081,3.463,1082,4.318,1083,2.806,1084,2.806,1085,5.452,1086,4.935,1087,5.09,1088,5.452,1089,2.806,1090,2.806,1091,2.806,1092,2.455,1093,1.295,1094,2.455,1095,3.894,1096,3.629,1097,2.611,1098,1.953,1099,3.437,1100,3.002,1101,4.302,1102,1.151,1103,3.13,1104,2.455,1105,2.611,1106,4.592,1107,2.806,1108,2.806,1109,4.148,1110,2.806,1111,2.887,1112,2.806,1113,2.806,1114,2.806,1115,2.806,1116,2.806,1117,2.806,1118,4.148,1119,2.806,1120,2.806,1121,4.148,1122,2.806,1123,2.214,1124,2.806,1125,2.806,1126,2.806,1127,2.806,1128,2.806,1129,2.806,1130,2.806,1131,2.806,1132,2.806,1133,2.806,1134,2.806,1135,4.935,1136,2.806,1137,4.935,1138,2.806,1139,3.859,1140,2.806,1141,2.806,1142,2.806,1143,4.935,1144,2.806,1145,2.806,1146,2.806,1147,2.806,1148,4.148,1149,2.806,1150,2.806,1151,1.882,1152,4.148,1153,4.148,1154,2.806,1155,3.859,1156,2.806,1157,2.806,1158,2.806,1159,2.806,1160,2.806,1161,2.806,1162,2.806,1163,2.806,1164,2.806,1165,2.806,1166,2.611,1167,2.806,1168,2.806,1169,2.806,1170,2.806,1171,5.12,1172,5.12,1173,3.067,1174,1.264,1175,4.534,1176,1.556,1177,1.702,1178,1.758,1179,1.651,1180,2.455,1181,3.463,1182,2.455,1183,2.806,1184,5.394,1185,2.611,1186,3.463,1187,2.031,1188,2.806,1189,3.463,1190,3.463,1191,1.818,1192,2.806,1193,1.513,1194,1.434,1195,1.125,1196,2.455,1197,1.472,1198,3.463,1199,2.806,1200,2.214,1201,1.818]],["title/interfaces/ComponentContextMenuData.html",[121,0.068,1059,3.192]],["body/interfaces/ComponentContextMenuData.html",[0,0.168,3,0.076,4,0.068,9,0.068,14,0.887,20,1.028,21,0.655,23,0.655,25,0.084,26,0.513,27,0.732,40,0.008,42,0.188,46,1.109,49,0.638,53,0.194,54,0.308,60,0.127,61,0.016,63,1.272,69,5.353,72,1.797,78,3.332,86,1.708,97,0.85,104,0.833,113,1.337,115,0.53,121,0.12,123,0.753,138,1.111,141,0.824,167,1.194,168,0.965,189,0.419,203,1.594,222,0.005,223,0.005,226,0.373,234,0.983,246,1.327,248,0.897,253,1.797,260,0.972,267,2.755,268,2.238,281,1.354,293,0.85,298,3.36,299,6.164,315,1.101,317,1.269,441,3.36,443,5.001,444,2.849,446,2.849,447,2.513,448,2.992,459,1.895,529,1.215,532,1.071,545,2.003,548,1.256,549,1.948,575,2.125,583,2.339,602,1.442,608,0.658,635,2.755,637,2.379,670,2.422,671,2.724,672,2.513,691,1.783,692,2.992,728,3.209,753,1.006,763,2.41,778,2.902,780,2.062,803,1.752,814,2.922,820,2.922,828,2.836,829,1.948,836,2.277,866,2.538,868,2.773,873,2.062,877,1.895,997,3.36,1015,2.875,1050,3.159,1051,3.159,1052,2.724,1053,2.613,1054,3.611,1055,3.611,1056,3.611,1059,4.967,1060,2.339,1061,3.217,1064,3.611,1065,2.149,1066,3.533,1068,2.124,1069,3.598,1070,3.562,1071,4.345,1072,3.385,1073,4.425,1074,4.795,1077,4.966,1080,4.966,1082,4.967,1083,3.611,1084,3.611,1085,6.114,1086,6.411,1087,5.938,1088,7.015,1089,3.611,1090,3.611,1091,3.611,1092,3.159,1093,1.667,1094,3.159,1095,5.059,1096,4.345,1097,4.621,1098,3.457,1099,4.705,1100,4.109,1101,5.228,1102,2.038,1103,3.747,1104,3.159,1105,3.36,1106,5.282,1107,3.611,1108,3.611,1109,4.966,1110,3.611,1111,3.457,1112,3.611,1113,3.611,1114,3.611,1115,3.611,1116,3.611,1117,3.611,1118,4.966,1119,3.611,1120,3.611,1121,4.966,1122,3.611,1123,2.849,1124,3.611,1125,3.611,1126,3.611,1127,3.611,1128,3.611,1129,3.611,1130,3.611,1131,3.611,1132,3.611,1133,3.611,1134,3.611,1135,5.677,1136,3.611,1137,5.677,1138,3.611,1139,3.36,1140,3.611,1141,3.611,1142,3.611,1143,5.677,1144,3.611,1145,3.611,1146,3.611,1147,3.611,1148,4.966,1149,3.611,1150,3.611,1151,2.422,1152,4.966,1153,4.966,1154,3.611,1155,4.621,1156,3.611,1157,3.611,1158,3.611,1159,3.611,1160,3.611,1161,3.611,1162,3.611,1163,3.611,1164,3.611,1165,3.611,1166,3.36,1167,3.611,1168,3.611,1169,3.611,1170,3.611]],["title/injectables/ComponentContextMenuService.html",[532,1.082,1099,3.024]],["body/injectables/ComponentContextMenuService.html",[0,0.166,3,0.075,4,0.067,9,0.067,14,0.875,20,1.019,21,0.646,23,0.646,25,0.083,27,0.722,30,0.814,33,0.632,37,0.524,39,0.653,40,0.008,41,0.392,42,0.173,43,0.524,45,0.485,46,1.103,49,0.625,53,0.194,54,0.304,60,0.126,61,0.015,63,1.268,69,5.319,72,1.774,78,2.391,86,1.693,97,1.328,104,0.827,113,1.503,115,0.722,121,0.105,123,0.748,138,1.105,141,0.76,167,1.184,168,0.976,189,0.413,203,1.632,222,0.005,223,0.005,226,0.508,234,0.853,246,1.315,248,0.936,253,1.774,260,0.968,267,2.541,268,2.218,281,1.337,293,0.839,298,3.317,299,6.413,315,1.093,317,1.253,441,3.317,443,5.04,444,4.45,446,2.813,447,2.481,448,2.954,459,1.871,532,1.057,545,2.731,548,1.251,549,1.93,575,2.119,583,2.309,602,1.43,608,0.654,635,1.977,637,2.025,646,1.821,670,2.391,671,2.689,672,2.481,691,1.768,692,2.954,728,3.191,753,0.993,763,2.389,778,2.839,780,2.035,803,1.73,814,2.896,820,2.097,828,2.811,829,1.923,836,2.559,866,1.821,868,2.713,873,2.035,877,2.583,997,4.58,1015,2.869,1050,4.934,1051,3.119,1052,2.689,1053,2.58,1054,3.564,1055,3.564,1056,3.564,1059,4.307,1060,2.309,1061,3.189,1064,3.564,1065,2.422,1066,3.655,1068,2.097,1069,3.525,1070,3.716,1071,4.307,1072,3.522,1073,4.776,1074,5.125,1077,4.923,1080,4.923,1082,4.934,1083,3.564,1084,3.564,1085,6.892,1086,5.639,1087,6.03,1088,6.081,1089,3.564,1090,3.564,1091,3.564,1092,3.119,1093,1.646,1094,3.119,1095,5.036,1096,4.307,1097,3.317,1098,2.481,1099,4.673,1100,4.619,1101,5.207,1102,1.462,1103,2.689,1104,3.119,1105,3.317,1106,5.938,1107,4.923,1108,3.564,1109,4.923,1110,3.564,1111,3.426,1112,3.564,1113,3.564,1114,3.564,1115,3.564,1116,3.564,1117,3.564,1118,4.923,1119,3.564,1120,3.564,1121,4.923,1122,3.564,1123,2.813,1124,3.564,1125,3.564,1126,3.564,1127,3.564,1128,3.564,1129,3.564,1130,3.564,1131,3.564,1132,3.564,1133,3.564,1134,3.564,1135,5.639,1136,3.564,1137,5.639,1138,3.564,1139,3.317,1140,3.564,1141,3.564,1142,3.564,1143,5.639,1144,3.564,1145,3.564,1146,3.564,1147,3.564,1148,4.923,1149,3.564,1150,3.564,1151,2.391,1152,4.923,1153,4.923,1154,3.564,1155,4.58,1156,3.564,1157,3.564,1158,3.564,1159,3.564,1160,3.564,1161,3.564,1162,3.564,1163,3.564,1164,3.564,1165,3.564,1166,3.317,1167,3.564,1168,3.564,1169,3.564,1170,3.564,1202,4.4,1203,4.4,1204,4.4]],["title/interfaces/ComponentNode.html",[121,0.068,1205,2.641]],["body/interfaces/ComponentNode.html",[0,0.153,3,0.09,4,0.123,5,1.106,9,0.104,25,0.1,26,0.576,40,0.008,42,0.189,49,0.661,53,0.199,60,0.143,61,0.018,104,0.63,115,0.63,121,0.139,123,0.74,138,0.744,141,0.665,168,0.972,189,0.788,191,0.815,222,0.006,223,0.006,234,1.228,248,0.909,260,0.63,284,2.43,296,4.124,316,3.11,515,1.648,529,1.447,541,1.51,548,1.321,595,2.42,608,0.833,622,1.847,720,1.937,725,1.984,817,2.255,836,1.724,907,1.766,953,3.243,1065,1.961,1066,3.351,1069,3.649,1070,3.442,1093,1.984,1197,3.252,1205,4.747,1206,2.384,1207,2.991,1208,4.757,1209,5.132,1210,3.999,1211,3.283,1212,2.883,1213,2.528,1214,3.239,1215,3.283,1216,2.693,1217,2.784,1218,4.157,1219,4.249,1220,4.484,1221,3.243,1222,3.243,1223,3.243,1224,3.243,1225,3.243,1226,3.243,1227,3.243,1228,3.243,1229,3.186,1230,3.243,1231,3.243,1232,4.21,1233,3.76,1234,3.391,1235,3.11,1236,2.255,1237,3.744,1238,3.391,1239,3.391,1240,1.804,1241,2.454,1242,2.528,1243,3.243,1244,2.883,1245,2.608,1246,2.883,1247,3.243,1248,3.391,1249,2.085,1250,3.391,1251,2.693,1252,3.391,1253,2.318,1254,3.391,1255,2.991,1256,3.391,1257,3.243,1258,3.391,1259,4.313,1260,2.784,1261,2.991,1262,2.528,1263,3.884,1264,3.391,1265,3.391,1266,3.391,1267,4.038,1268,3.391,1269,4.403,1270,3.391,1271,3.391,1272,3.391,1273,3.243,1274,1.937,1275,3.884,1276,4.89,1277,3.391,1278,3.391,1279,4.403,1280,3.391,1281,4.403,1282,4.403,1283,3.391,1284,3.391,1285,4.157,1286,4.403,1287,3.243,1288,4.21,1289,4.403,1290,3.391,1291,4.565,1292,3.615,1293,3.391,1294,3.243,1295,3.391,1296,3.391,1297,3.391,1298,3.243,1299,4.038,1300,3.243,1301,2.991,1302,3.243,1303,2.784]],["title/injectables/ComponentStoreService.html",[532,1.082,1304,2.879]],["body/injectables/ComponentStoreService.html",[0,0.105,2,0.952,3,0.095,4,0.084,9,0.119,25,0.105,30,0.952,33,0.799,37,0.772,39,0.963,40,0.008,41,0.578,42,0.186,43,0.772,45,0.976,49,0.668,53,0.203,54,0.385,60,0.116,61,0.014,63,1.279,182,1.116,222,0.006,223,0.006,226,0.466,227,3.104,231,2.308,234,1.157,260,0.661,281,1.692,293,1.062,532,1.707,537,1.424,540,2.304,541,1.585,547,3.008,548,1.338,555,2.432,608,0.831,646,2.304,691,1.619,726,1.803,818,3.861,925,4.77,1245,3.492,1304,4.542,1305,8.013,1306,3.559,1307,6.291,1308,5.355,1309,6.291,1310,4.48,1311,8.243,1312,5.755,1313,6.291,1314,5.039,1315,7.299,1316,7.104,1317,4.77,1318,7.104,1319,7.104,1320,7.104,1321,7.104,1322,7.104,1323,7.104,1324,7.104,1325,5.567,1326,8.243,1327,7.825,1328,8.243,1329,7.825,1330,7.299,1331,7.825,1332,8.243,1333,7.825,1334,8.243,1335,7.299,1336,8.243,1337,8.243,1338,8.243,1339,5.567,1340,7.104,1341,6.678,1342,4.929,1343,7.104,1344,4.929,1345,7.104,1346,5.567,1347,7.104,1348,4.929,1349,7.104,1350,5.567,1351,7.104,1352,4.929,1353,7.104,1354,7.299,1355,4.929,1356,7.104,1357,5.567,1358,4.929,1359,5.567,1360,5.567,1361,5.567,1362,5.567,1363,5.567,1364,5.567,1365,5.567]],["title/injectables/ComponentsService.html",[532,1.082,1366,3.395]],["body/injectables/ComponentsService.html",[3,0.106,4,0.095,9,0.095,25,0.118,30,1.024,33,1.097,37,0.76,39,0.947,40,0.008,41,0.568,42,0.183,43,0.76,45,0.947,49,0.67,53,0.203,54,0.432,60,0.13,61,0.016,63,1.262,104,1.021,222,0.007,223,0.007,281,1.901,371,2.068,532,1.836,541,1.781,548,1.32,555,2.734,608,0.807,646,2.59,790,2.284,791,1.987,1330,7.61,1366,5.76,1367,4.148,1368,5.54,1369,7.642,1370,6.767,1371,7.642,1372,7.642,1373,6.256,1374,8.594,1375,8.251,1376,8.594,1377,8.251,1378,8.251,1379,7.61,1380,6.256,1381,7.642,1382,7.642,1383,6.256,1384,6.767,1385,6.256,1386,7.642,1387,6.095,1388,6.256,1389,7.642,1390,6.256,1391,5.068,1392,6.256,1393,4.716,1394,5.068,1395,6.256,1396,6.256,1397,6.256,1398,6.256]],["title/interfaces/CreateComponentData.html",[121,0.068,1399,3.395]],["body/interfaces/CreateComponentData.html",[0,0.174,3,0.105,4,0.094,9,0.094,13,2.491,17,0.887,18,0.867,20,1.272,21,0.907,22,2.626,23,0.907,24,2.626,25,0.117,26,0.634,27,1.014,28,2.699,35,3.139,40,0.008,41,0.398,42,0.128,46,1.114,49,0.663,53,0.225,54,0.427,55,1.877,60,0.128,61,0.016,62,2.15,63,1.205,70,3.979,72,2.491,85,2.699,103,1.082,114,1.203,115,0.975,121,0.094,141,0.596,181,1.532,222,0.007,223,0.007,226,0.634,232,4.378,234,0.867,239,3.483,244,2.857,248,1.044,249,3.8,250,4.206,253,2.491,254,2.857,255,2.31,256,2.776,260,0.734,411,3.241,412,3.036,512,2.857,529,1.684,541,1.758,544,2.776,552,3.979,608,0.58,622,2.15,635,2.776,719,3.135,726,1.971,727,3.775,814,2.943,829,2.699,837,3.948,838,3.948,868,2.853,871,3.775,907,1.229,1093,2.31,1212,3.357,1236,2.626,1304,4.847,1314,3.775,1341,6.142,1399,6.184,1400,4.847,1401,6.714,1402,4.445,1403,3.621,1404,4.655,1405,3.483,1406,3.948,1407,4.146,1408,5.469,1409,5.374,1410,5.469,1411,4.378,1412,4.146,1413,5.003,1414,6.142,1415,5.003,1416,5.003,1417,4.378,1418,3.775,1419,3.621,1420,4.378,1421,6.142,1422,4.378,1423,2.943,1424,3.135,1425,3.948,1426,4.655,1427,5.469,1428,5.469,1429,5.469,1430,5.469,1431,5.469]],["title/components/CreateComponentDialogComponent.html",[0,0.085,114,0.877]],["body/components/CreateComponentDialogComponent.html",[0,0.179,1,0.825,2,0.769,3,0.069,4,0.062,5,0.652,6,0.916,7,0.897,8,0.86,9,0.062,11,0.808,13,1.637,16,0.791,17,1.376,18,1.34,19,0.808,20,1.283,21,0.844,22,2.834,23,0.844,24,2.442,25,0.077,26,0.48,27,1.255,28,3.166,30,0.769,33,0.583,34,2.289,35,3.166,37,0.763,39,0.716,40,0.008,41,0.575,42,0.176,43,0.574,45,0.735,46,1.064,47,3.059,49,0.657,50,1.398,51,1.149,53,0.208,54,0.281,55,1.233,56,0.825,57,1.217,60,0.084,61,0.01,62,1.413,63,0.979,70,3.014,72,1.637,85,2.912,86,1.131,92,1.595,95,0.897,96,1.119,97,1.095,98,0.681,99,1.568,100,0.897,101,1.9,102,0.808,103,1.006,104,0.991,105,1.167,106,0.825,107,0.897,108,0.825,109,0.808,110,0.897,111,0.825,112,0.897,113,0.774,114,1.412,115,1.072,116,0.808,117,0.774,118,0.922,119,1.473,120,0.791,121,0.087,122,0.808,123,0.969,124,0.825,125,0.825,126,0.742,127,0.897,128,0.791,129,0.897,130,0.825,131,0.897,132,0.825,133,0.897,134,0.808,135,0.897,136,0.808,137,0.897,138,0.57,139,0.897,140,0.808,141,0.554,142,0.897,143,0.825,144,0.897,145,0.825,146,1.473,147,0.825,148,0.897,149,0.825,150,1.473,151,0.825,152,0.897,153,0.842,154,0.897,155,0.791,156,0.897,157,0.825,158,0.897,159,0.808,160,0.758,161,0.897,162,0.825,163,1.217,164,1.269,165,0.825,166,0.897,167,0.791,168,0.459,169,0.897,170,0.808,171,0.825,172,0.897,173,0.825,174,0.897,175,0.808,176,0.808,177,0.791,178,0.897,179,0.808,180,0.897,181,1.524,182,0.638,183,0.791,184,0.897,185,0.791,186,1.095,187,0.808,188,0.825,189,0.539,190,0.774,191,0.624,192,0.825,193,0.842,194,0.897,195,0.825,196,0.758,197,0.897,198,0.825,199,0.897,200,0.774,201,0.825,202,0.825,203,0.758,204,0.897,205,0.825,206,0.57,207,0.681,208,0.774,209,0.808,210,0.897,211,0.791,212,0.897,213,0.791,214,0.897,215,0.774,216,0.897,217,0.774,218,0.897,219,0.774,220,0.842,221,0.897,222,0.005,223,0.005,226,0.664,232,2.877,234,1.073,239,4.086,240,4.329,242,3.594,243,2.509,244,2.657,245,3.288,248,1.022,249,3.697,250,4.099,251,4.652,253,1.637,254,1.878,255,1.518,256,1.824,260,0.482,270,2.595,411,4.678,412,4.381,431,3.121,512,1.878,541,1.155,544,1.824,552,4.607,608,0.381,622,1.413,635,1.824,719,2.06,726,1.67,727,2.481,766,2.096,814,1.934,829,1.774,837,2.595,838,2.595,868,2.355,871,3.51,907,0.808,1093,1.518,1212,2.206,1236,1.726,1304,4.633,1314,2.481,1341,4.652,1399,5.764,1400,4.633,1401,5.902,1402,4.249,1403,2.38,1404,3.059,1405,2.289,1406,4.261,1407,4.475,1408,5.902,1409,4.071,1410,3.594,1411,4.724,1412,3.856,1413,5.399,1414,5.87,1415,5.399,1416,5.399,1417,4.724,1418,3.51,1419,2.38,1420,4.071,1421,6.755,1422,5.786,1423,1.934,1424,2.06,1425,2.595,1426,3.059,1427,3.594,1428,3.594,1429,5.086,1430,3.594,1431,3.594,1432,5.743,1433,3.594,1434,4.059,1435,3.059,1436,3.594,1437,3.288,1438,3.594,1439,3.594,1440,3.288,1441,3.594,1442,3.672,1443,5.086,1444,5.462,1445,4.633,1446,5.086,1447,3.059,1448,2.877]],["title/components/CreateEditLabelDialogComponent.html",[0,0.085,116,0.896]],["body/components/CreateEditLabelDialogComponent.html",[0,0.16,1,0.688,2,1.034,3,0.058,4,0.101,5,0.543,6,0.763,7,0.748,8,0.717,9,0.051,11,0.673,13,1.365,14,1.001,15,1.639,16,0.659,17,1.366,18,1.327,19,0.673,20,1.331,21,0.739,22,2.555,23,0.739,24,2.14,25,0.064,26,0.421,27,0.986,30,0.674,33,0.486,35,2.754,37,0.721,39,0.764,40,0.008,41,0.572,42,0.165,43,0.434,45,0.662,46,1.045,49,0.552,50,1.3,51,1.068,53,0.195,54,0.234,55,1.028,56,0.688,57,1.066,60,0.104,61,0.009,63,0.739,64,0.923,66,1.717,85,2.199,86,0.943,93,1.206,95,0.748,96,0.98,97,0.96,98,0.568,99,1.44,100,0.748,101,1.823,102,0.673,103,0.593,104,0.963,105,1.023,106,0.688,107,0.748,108,0.688,109,0.673,110,0.748,111,0.688,112,0.748,113,0.645,114,0.659,115,1.055,116,1.324,117,1.717,118,1.531,119,1.328,120,0.659,121,0.076,122,0.673,123,0.948,124,0.688,125,0.688,126,0.619,127,0.748,128,0.659,129,0.748,130,0.688,131,0.748,132,0.688,133,0.748,134,0.673,135,0.748,136,0.673,137,0.748,138,0.475,139,0.748,140,0.673,141,0.327,142,0.748,143,0.688,144,0.748,145,0.688,146,1.328,147,0.688,148,0.748,149,0.688,150,1.328,151,0.688,152,0.748,153,0.702,154,0.748,155,0.659,156,0.748,157,0.688,158,0.748,159,0.673,160,0.632,161,0.748,162,0.688,163,1.066,164,1.112,165,0.688,166,0.748,167,0.659,168,0.843,169,0.748,170,0.673,171,0.688,172,0.748,173,0.688,174,0.748,175,0.673,176,0.673,177,0.659,178,0.748,179,0.673,180,0.748,181,0.632,182,0.531,183,0.659,184,0.748,185,0.659,186,0.96,187,0.673,188,0.688,189,0.7,190,0.645,191,0.923,192,0.688,193,0.702,194,0.748,195,0.688,196,0.632,197,0.748,198,0.688,199,0.748,200,0.645,201,0.688,202,0.688,203,0.94,204,0.748,205,0.688,206,0.998,207,1.295,208,0.645,209,0.673,210,0.748,211,0.659,212,0.748,213,0.659,214,0.748,215,0.645,216,0.748,217,0.645,218,0.748,219,0.645,220,0.702,221,0.748,222,0.004,223,0.004,226,0.7,234,1.137,235,2.796,243,1.479,244,2.328,246,1.539,248,0.995,249,3.024,250,2.474,253,1.365,254,1.565,255,1.266,256,1.521,259,1.439,260,0.963,271,2.551,274,1.565,275,2.163,276,2.14,277,3.34,278,2.398,279,2.398,293,0.645,315,1.045,317,1.433,371,1.682,411,4.447,412,4.166,431,1.839,516,2.068,548,0.773,553,2.199,557,2.199,608,0.668,611,2.423,637,1.464,719,1.717,726,0.78,745,2.068,753,0.763,769,2.887,778,2.757,790,1.837,791,1.599,792,1.401,814,2.399,816,1.028,820,1.613,833,1.401,835,1.717,868,1.099,954,3.567,978,2.328,987,2.7,988,2.551,993,3.673,1002,3.567,1005,5.016,1011,1.401,1012,1.33,1013,1.401,1015,1.635,1024,3.567,1028,3.841,1044,1.952,1045,2.735,1068,2.864,1072,1.401,1174,1.235,1178,1.717,1195,1.952,1236,2.14,1274,1.235,1391,4.077,1405,1.908,1418,3.076,1426,2.551,1435,2.551,1442,3.217,1449,2.641,1450,5.819,1451,5.321,1452,5.321,1453,5.321,1454,5.321,1455,5.033,1456,5.892,1457,5.892,1458,2.741,1459,4.077,1460,4.456,1461,3.384,1462,4.456,1463,4.456,1464,3.794,1465,1.984,1466,3.384,1467,4.077,1468,3.384,1469,4.456,1470,3.035,1471,4.456,1472,2.741,1473,3.384,1474,2.616,1475,2.262,1476,3.841,1477,2.996,1478,2.551,1479,3.567,1480,5.892,1481,4.456,1482,2.996,1483,1.717,1484,2.996,1485,2.163,1486,2.551,1487,2.996,1488,6.601,1489,5.321,1490,3.794,1491,3.866,1492,2.996,1493,1.984,1494,2.996,1495,2.996,1496,2.398,1497,2.996,1498,6.298,1499,2.996,1500,2.996,1501,1.984,1502,2.996,1503,1.479,1504,4.456,1505,2.996,1506,4.456,1507,2.996,1508,2.996,1509,1.565,1510,2.996,1511,2.551,1512,3.841,1513,3.841,1514,2.996,1515,2.996,1516,2.996,1517,1.984,1518,4.456,1519,2.996,1520,2.996,1521,2.996,1522,2.996,1523,3.567,1524,2.996,1525,2.996,1526,2.996,1527,2.996,1528,2.996,1529,4.456,1530,2.996,1531,2.996,1532,2.996,1533,3.379,1534,5.321,1535,4.529,1536,5.321,1537,3.794,1538,5.033,1539,3.567,1540,5.033,1541,3.217,1542,1.839,1543,2.551,1544,3.384,1545,4.456,1546,1.908,1547,3.384,1548,2.272,1549,1.297]],["title/interfaces/CreateEditLabelDialogData.html",[121,0.068,1450,3.395]],["body/interfaces/CreateEditLabelDialogData.html",[0,0.157,2,0.974,3,0.081,4,0.11,9,0.073,13,1.93,14,0.952,15,1.755,17,0.687,18,0.671,20,1.361,21,0.703,22,2.034,23,0.703,24,2.034,25,0.09,26,0.538,27,0.785,35,2.663,39,0.781,40,0.008,41,0.523,42,0.168,43,0.67,46,0.945,49,0.46,53,0.213,54,0.331,55,1.454,60,0.134,61,0.012,63,0.945,64,1.305,66,3.266,104,0.765,115,0.924,116,0.952,117,1.593,118,1.504,121,0.073,123,0.691,168,0.879,189,0.784,191,0.988,206,0.903,207,1.401,222,0.006,223,0.006,226,0.699,234,1.091,235,2.529,244,2.213,246,1.682,248,0.993,249,3.09,250,2.352,253,1.93,254,2.213,255,1.79,256,2.15,260,1.044,277,2.98,293,0.913,315,1.142,317,1.362,371,1.64,411,2.511,412,2.352,431,3.497,516,4.751,529,1.305,548,1.117,553,2.091,557,2.091,608,0.683,611,2.931,637,1.872,719,2.429,753,1.08,769,2.719,778,3.106,790,2.349,791,2.044,792,1.981,814,2.28,816,1.454,820,3.066,833,1.981,835,2.429,868,2.526,954,4.56,978,2.213,987,2.15,988,2.466,993,3.933,1002,3.391,1005,4.85,1011,1.981,1012,1.881,1013,1.981,1015,2.09,1024,4.56,1028,4.647,1044,2.09,1045,3.497,1068,2.28,1236,2.034,1391,5.212,1405,2.698,1418,2.925,1426,3.607,1449,2.511,1450,5.859,1451,4.237,1452,4.237,1453,4.237,1454,4.237,1456,4.237,1457,4.237,1460,4.237,1462,4.237,1463,4.237,1464,3.607,1467,3.876,1469,4.237,1470,3.056,1471,4.237,1474,2.529,1475,2.15,1476,4.647,1479,3.391,1480,5.697,1481,4.237,1483,2.429,1484,5.697,1485,4.113,1486,4.85,1487,6.883,1488,7.396,1489,6.436,1490,4.85,1491,4.408,1492,4.237,1493,2.805,1494,4.237,1495,4.237,1496,3.391,1497,4.237,1498,7.182,1499,4.237,1500,4.237,1501,2.805,1502,4.237,1503,2.091,1504,5.697,1505,4.237,1506,5.697,1507,4.237,1508,4.237,1509,2.213,1510,4.237,1511,3.607,1512,4.647,1513,4.647,1514,4.237,1515,4.237,1516,4.237,1517,2.805,1518,5.697,1519,4.237,1520,4.237,1521,4.237,1522,4.237,1523,4.56,1524,4.237,1525,4.237,1526,4.237,1527,4.237,1528,4.237,1529,5.697,1530,4.237,1531,4.237,1532,4.237,1533,4.319,1534,6.436,1535,5.479,1536,6.436,1537,4.85]],["title/interfaces/CreateInterfaceData.html",[121,0.068,1550,3.192]],["body/interfaces/CreateInterfaceData.html",[0,0.143,3,0.105,4,0.094,9,0.094,13,2.493,17,0.888,18,0.867,20,1.377,21,0.908,22,2.628,23,0.908,24,2.628,25,0.117,26,0.635,27,1.347,28,2.701,35,3.14,40,0.008,42,0.182,46,1.206,49,0.647,53,0.225,54,0.427,55,1.878,60,0.157,61,0.016,62,2.152,63,1.29,70,3.244,115,1.044,120,1.204,121,0.14,141,0.597,222,0.007,223,0.007,226,0.517,234,0.867,235,2.43,239,3.486,244,2.859,246,1.852,248,0.901,249,3.49,250,3.038,253,2.493,254,2.859,255,2.312,256,2.778,315,1.192,411,3.244,412,3.038,529,1.686,544,2.778,548,0.95,602,1.785,608,0.58,626,3.85,719,3.137,726,1.748,814,2.946,868,2.008,925,4.15,987,2.778,988,2.908,1011,2.559,1012,2.43,1013,2.559,1044,2.465,1045,3.36,1065,2.159,1066,2.559,1069,3.451,1070,2.628,1093,2.312,1212,3.36,1263,4.826,1314,3.778,1400,4.85,1402,4.448,1403,3.624,1405,3.486,1406,3.952,1407,4.15,1411,4.381,1412,4.15,1417,4.381,1418,3.778,1420,4.381,1491,4.651,1550,5.818,1551,4.637,1552,4.381,1553,4.85,1554,4.659,1555,4.381,1556,4.15,1557,5.473,1558,5.473,1559,5.473,1560,5.473,1561,5.007,1562,5.473,1563,5.377,1564,4.381]],["title/components/CreateInterfaceDialogComponent.html",[0,0.085,120,0.877]],["body/components/CreateInterfaceDialogComponent.html",[0,0.139,1,0.863,2,0.794,3,0.072,4,0.064,5,0.682,6,0.958,7,0.938,8,0.9,9,0.064,11,0.845,13,1.712,16,0.827,17,1.379,18,1.342,19,0.845,20,1.351,21,0.871,22,2.903,23,0.871,24,2.52,25,0.08,26,0.496,27,1.439,28,3.23,30,0.794,33,0.61,34,2.394,35,3.219,37,0.756,39,0.637,40,0.008,41,0.57,42,0.184,43,0.511,44,2.85,45,0.753,46,1.183,47,3.2,49,0.632,50,1.084,51,0.89,53,0.211,54,0.293,55,1.29,56,0.863,57,1.256,60,0.123,61,0.011,62,1.478,63,1.142,70,2.228,85,2.59,86,1.183,92,1.669,95,0.938,96,1.155,97,1.131,98,0.712,99,1.599,100,0.938,101,1.917,102,0.845,103,0.743,104,1.002,105,1.204,106,0.863,107,0.938,108,0.863,109,0.845,110,0.938,111,0.863,112,0.938,113,0.81,114,0.827,115,1.087,116,0.845,117,0.81,118,0.952,119,1.509,120,1.44,121,0.144,122,0.845,123,0.974,124,0.863,125,0.863,126,0.776,127,0.938,128,0.827,129,0.938,130,0.863,131,0.938,132,0.863,133,0.938,134,0.845,135,0.938,136,0.845,137,0.938,138,0.596,139,0.938,140,0.845,141,0.572,142,0.938,143,0.863,144,0.938,145,0.863,146,1.509,147,0.863,148,0.938,149,0.863,150,1.509,151,0.863,152,0.938,153,0.881,154,0.938,155,0.827,156,0.938,157,0.863,158,0.938,159,0.845,160,0.793,161,0.938,162,0.863,163,1.256,164,1.31,165,0.863,166,0.938,167,0.827,168,0.48,169,0.938,170,0.845,171,0.863,172,0.938,173,0.863,174,0.938,175,0.845,176,0.845,177,0.827,178,0.938,179,0.845,180,0.938,181,0.793,182,0.667,183,0.827,184,0.938,185,0.827,186,1.131,187,0.845,188,0.863,189,0.557,190,0.81,191,0.652,192,0.863,193,0.881,194,0.938,195,0.863,196,0.793,197,0.938,198,0.863,199,0.938,200,0.81,201,0.863,202,0.863,203,0.793,204,0.938,205,0.863,206,0.596,207,0.712,208,0.81,209,0.845,210,0.938,211,0.827,212,0.938,213,0.827,214,0.938,215,0.81,216,0.938,217,0.81,218,0.938,219,0.81,220,0.881,221,0.938,222,0.005,223,0.005,226,0.65,234,1.091,235,2.684,239,4.168,240,4.468,243,1.855,244,2.742,246,1.599,248,0.878,249,3.306,250,2.913,251,3.439,253,1.712,254,1.964,255,1.588,256,1.908,270,2.714,315,0.931,411,4.644,412,4.35,544,1.908,548,0.652,602,1.739,608,0.399,626,3.752,719,2.155,726,1.366,766,2.164,814,2.023,868,2.219,925,2.85,987,3.069,988,2.833,1011,1.757,1012,1.669,1013,1.757,1044,1.926,1045,2.307,1065,1.687,1066,1.757,1069,1.712,1070,1.805,1093,1.588,1212,2.307,1263,2.394,1314,2.595,1400,4.725,1402,4.334,1403,2.489,1405,2.394,1406,4.366,1407,4.585,1411,4.84,1412,3.979,1417,4.84,1418,3.623,1420,4.201,1435,3.2,1437,3.439,1442,3.789,1447,3.2,1448,3.009,1478,3.2,1491,4.017,1550,5.511,1552,3.009,1553,4.725,1554,3.2,1555,4.84,1556,4.585,1557,6.047,1558,3.759,1559,3.759,1560,3.759,1561,3.439,1562,3.759,1563,4.201,1564,5.239,1565,4.201,1566,3.759,1567,3.759,1568,3.439]],["title/components/CreateIssueDialogComponent.html",[0,0.085,122,0.896]],["body/components/CreateIssueDialogComponent.html",[0,0.144,1,0.737,2,1.106,3,0.062,4,0.055,5,0.583,6,0.819,7,0.802,8,0.769,9,0.055,11,0.722,13,1.463,14,1.054,15,1.707,16,0.707,17,1.371,18,1.332,19,0.722,20,1.357,21,0.778,22,2.661,23,0.778,24,2.253,25,0.068,26,0.443,27,1.436,28,3.007,29,3.529,30,0.71,33,0.521,34,2.046,35,3.03,36,3.007,37,0.748,39,0.569,40,0.008,41,0.509,42,0.159,43,0.457,44,2.436,45,0.759,46,1.159,49,0.259,50,1.338,51,1.1,53,0.211,54,0.251,55,1.103,56,0.737,57,1.123,59,1.631,60,0.11,61,0.009,62,1.263,63,1.123,64,0.99,70,2.781,85,2.315,86,1.476,89,2.781,93,1.889,95,0.802,96,1.032,97,1.011,98,0.609,99,1.489,100,0.802,101,1.853,102,0.722,103,0.636,104,0.962,105,1.077,106,0.737,107,0.802,108,0.737,109,0.722,110,0.802,111,0.737,112,0.802,113,0.692,114,0.707,115,1.07,116,0.722,117,0.692,118,0.851,119,1.383,120,0.707,121,0.095,122,1.369,123,1.027,124,0.737,125,0.737,126,0.663,127,0.802,128,0.707,129,0.802,130,0.737,131,0.802,132,0.737,133,0.802,134,0.722,135,0.802,136,0.722,137,0.802,138,0.509,139,0.802,140,0.722,141,0.35,142,0.802,143,0.737,144,0.802,145,0.737,146,1.383,147,0.737,148,0.802,149,0.737,150,1.383,151,0.737,152,0.802,153,0.753,154,0.802,155,0.707,156,0.802,157,0.737,158,0.802,159,1.054,160,0.678,161,0.802,162,0.737,163,1.123,164,1.171,165,0.737,166,0.802,167,0.707,168,0.41,169,0.802,170,0.722,171,0.737,172,0.802,173,0.737,174,0.802,175,0.722,176,0.722,177,0.707,178,0.802,179,0.722,180,0.802,181,0.678,182,0.57,183,0.707,184,0.802,185,1.032,186,1.011,187,0.722,188,0.737,189,0.498,190,0.692,191,0.557,192,0.737,193,0.753,194,0.802,195,0.737,196,0.678,197,0.802,198,0.737,199,0.802,200,0.692,201,0.737,202,0.737,203,0.678,204,0.802,205,0.737,206,0.509,207,0.609,208,0.692,209,0.722,210,0.802,211,0.707,212,0.802,213,0.707,214,0.802,215,0.692,216,0.802,217,0.692,218,0.802,219,0.692,220,0.753,221,0.802,222,0.005,223,0.005,234,1.108,235,2.46,239,2.988,243,2.315,244,2.451,246,1.708,248,0.818,249,3.112,250,3.383,253,1.463,254,1.679,255,1.357,256,1.631,259,2.253,260,0.908,274,2.451,284,2.622,310,3.536,311,2.88,312,2.605,315,0.983,367,3.557,371,1.196,383,2.127,389,1.631,411,4.593,412,4.301,427,2.127,466,1.972,516,3.239,548,0.557,557,2.735,561,1.679,562,2.32,602,1.473,611,2.137,641,1.982,719,1.842,727,2.218,739,4.292,753,0.819,769,2.952,778,2.129,790,1.934,791,1.683,792,1.502,811,2.034,814,1.729,816,1.61,829,1.586,833,2.193,836,1.179,868,1.179,885,2.127,907,1.369,973,4.4,987,2.813,988,2.638,994,3.756,995,3.881,1010,2.32,1011,1.502,1012,1.426,1013,1.502,1028,2.32,1030,2.32,1031,2.436,1033,2.32,1034,2.218,1035,2.046,1044,1.179,1045,2.88,1103,2.218,1191,1.904,1195,1.179,1214,1.325,1236,1.543,1274,1.325,1292,2.781,1312,2.939,1405,2.046,1436,3.213,1439,3.213,1440,2.939,1442,3.387,1447,2.735,1472,2.939,1474,2.46,1491,2.88,1523,2.572,1555,4.436,1563,4.436,1564,4.878,1565,2.572,1567,4.692,1569,6.094,1570,6.094,1571,6.094,1572,4.68,1573,3.628,1574,3.628,1575,4.692,1576,3.628,1577,4.692,1578,3.628,1579,3.978,1580,4.692,1581,4.29,1582,4.692,1583,3.628,1584,5.07,1585,4.001,1586,3.387,1587,4.292,1588,2.939,1589,2.572,1590,3.177,1591,3.213,1592,3.213,1593,3.213,1594,3.213,1595,3.213,1596,4.692,1597,4.692,1598,4.292,1599,2.735,1600,2.572,1601,3.213,1602,3.213,1603,3.213,1604,2.939,1605,3.213,1606,3.213,1607,3.213,1608,3.213,1609,3.213,1610,3.213,1611,3.213,1612,1.972,1613,3.213,1614,3.213,1615,3.213,1616,3.213,1617,3.213,1618,3.756,1619,3.213,1620,2.572,1621,3.213,1622,2.127,1623,3.213,1624,3.213,1625,3.213,1626,3.213,1627,2.735,1628,3.213,1629,2.735,1630,3.557,1631,2.046,1632,2.88,1633,5.298,1634,2.127,1635,3.213,1636,1.502,1637,1.842,1638,3.213,1639,3.628,1640,2.939,1641,3.213,1642,3.628]],["title/components/CreateProjectDialogComponent.html",[0,0.085,124,0.915]],["body/components/CreateProjectDialogComponent.html",[0,0.153,1,0.884,2,0.808,3,0.074,4,0.066,5,0.698,6,0.981,7,0.961,8,0.922,9,0.066,11,0.865,13,1.754,16,0.847,17,1.38,18,1.344,19,0.865,20,1.316,21,0.885,22,2.941,23,0.885,24,2.563,25,0.082,26,0.504,27,1.392,28,3.264,30,0.808,33,0.625,34,2.453,35,3.247,37,0.759,39,0.647,40,0.008,41,0.589,42,0.173,43,0.519,44,2.92,45,0.762,46,1.192,47,3.279,49,0.623,50,1.102,51,0.906,53,0.204,54,0.301,55,1.322,56,0.884,57,1.277,60,0.09,61,0.011,62,1.514,63,1.016,70,2.283,85,2.634,95,0.961,96,1.174,97,1.15,98,0.73,99,1.616,100,0.961,101,1.927,102,0.865,103,0.762,104,1.137,105,1.225,106,0.884,107,0.961,108,0.884,109,0.865,110,0.961,111,0.884,112,0.961,113,0.83,114,0.847,115,1.09,116,0.865,117,0.83,118,0.968,119,1.529,120,0.847,121,0.066,122,0.865,123,0.978,124,1.518,125,0.884,126,0.795,127,0.961,128,0.847,129,0.961,130,0.884,131,0.961,132,0.884,133,0.961,134,0.865,135,0.961,136,0.865,137,0.961,138,0.61,139,0.961,140,0.865,141,0.42,142,0.961,143,0.884,144,0.961,145,0.884,146,1.529,147,0.884,148,0.961,149,0.884,150,1.529,151,0.884,152,0.961,153,0.903,154,0.961,155,0.847,156,0.961,157,0.884,158,0.961,159,0.865,160,0.812,161,0.961,162,0.884,163,1.277,164,1.332,165,0.884,166,0.961,167,0.847,168,0.492,169,0.961,170,0.865,171,0.884,172,0.961,173,0.884,174,0.961,175,0.865,176,0.865,177,0.847,178,0.961,179,0.865,180,0.961,181,0.812,182,0.683,183,0.847,184,0.961,185,0.847,186,1.15,187,0.865,188,0.884,189,0.701,190,0.83,191,0.668,192,0.884,193,0.903,194,0.961,195,0.884,196,0.812,197,0.961,198,0.884,199,0.961,200,0.83,201,0.884,202,0.884,203,0.812,204,0.961,205,0.884,206,1.048,207,0.73,208,0.83,209,0.865,210,0.961,211,0.847,212,0.961,213,0.847,214,0.961,215,0.83,216,0.961,217,0.83,218,0.961,219,0.83,220,0.903,221,0.961,222,0.005,223,0.005,226,0.749,227,2.634,235,2.719,239,4.212,240,4.544,246,1.616,248,0.888,249,3.335,250,2.963,254,2.012,255,1.627,259,1.849,315,0.947,411,4.664,412,4.368,542,4.212,544,1.955,559,5.604,602,1.757,719,2.208,726,1.594,731,6.126,766,2.201,987,3.109,988,2.863,1011,1.801,1012,1.71,1013,1.801,1044,1.959,1045,2.364,1236,2.941,1314,2.659,1400,4.775,1405,2.453,1406,4.423,1412,4.047,1418,3.685,1420,4.273,1435,3.279,1437,3.524,1438,3.852,1442,4.775,1447,3.279,1459,3.524,1478,3.279,1482,3.852,1491,4.06,1555,4.904,1561,3.524,1563,4.273,1564,5.294,1565,4.273,1568,3.524,1643,6.918,1644,3.279,1645,2.659,1646,4.35,1647,4.35,1648,4.35,1649,4.35]],["title/components/CursorPaginatorComponent.html",[0,0.085,125,0.915]],["body/components/CursorPaginatorComponent.html",[0,0.159,1,1.01,2,0.884,3,0.085,4,0.075,5,0.798,6,1.121,7,1.098,8,1.053,9,0.075,11,0.989,16,0.968,17,1.387,18,1.351,19,0.989,20,0.834,21,0.969,23,0.969,25,0.094,37,0.569,40,0.008,41,0.53,42,0.137,53,0.162,54,0.343,56,1.01,57,1.398,60,0.103,61,0.013,86,1.384,93,2.352,95,1.098,96,1.286,97,1.259,98,0.834,99,1.708,100,1.098,101,1.976,102,0.989,103,0.87,104,1.04,105,1.341,106,1.01,107,1.098,108,1.01,109,0.989,110,1.098,111,1.01,112,1.098,113,0.948,114,0.968,115,0.976,116,0.989,117,0.948,118,1.189,119,1.637,120,0.968,121,0.075,122,0.989,123,0.994,124,1.01,125,1.604,126,1.648,127,1.098,128,0.968,129,1.098,130,1.01,131,1.098,132,1.01,133,1.098,134,0.989,135,1.098,136,0.989,137,1.098,138,0.697,139,1.098,140,0.989,141,0.48,142,1.098,143,1.01,144,1.098,145,1.01,146,1.637,147,1.01,148,1.098,149,1.01,150,1.637,151,1.01,152,1.098,153,1.031,154,1.098,155,0.968,156,1.098,157,1.01,158,1.098,159,0.989,160,0.928,161,1.098,162,1.01,163,1.398,164,1.458,165,1.01,166,1.098,167,0.968,168,0.562,169,1.098,170,0.989,171,1.01,172,1.098,173,1.01,174,1.098,175,0.989,176,0.989,177,0.968,178,1.098,179,0.989,180,1.098,181,0.928,182,0.781,183,0.968,184,1.098,185,0.968,186,1.259,187,0.989,188,1.01,189,0.62,190,0.948,191,0.763,192,1.01,193,1.031,194,1.098,195,1.01,196,0.928,197,1.098,198,1.01,199,1.098,200,0.948,201,1.01,202,1.01,203,0.928,204,1.098,205,1.01,206,0.697,207,0.834,208,0.948,209,0.989,210,1.098,211,0.968,212,1.098,213,0.968,214,1.098,215,0.948,216,1.098,217,0.948,218,1.098,219,0.948,220,1.031,221,1.098,222,0.006,223,0.006,226,0.416,267,1.814,277,1.905,371,1.671,431,2.701,574,3.145,641,3.312,725,2.468,726,1.707,753,1.121,766,2.409,790,1.814,793,2.368,811,2.144,816,2.005,834,4.235,1065,1.878,1102,1.652,1103,4.033,1174,1.814,1191,3.463,1195,2.144,1542,3.586,1549,2.529,1636,2.057,1650,6.56,1651,6.001,1652,4.4,1653,3.869,1654,6.598,1655,4.17,1656,5.584,1657,7.408,1658,6.598,1659,7.408,1660,4.969,1661,6.598,1662,4.969,1663,6.598,1664,3.349,1665,4.677,1666,5.843,1667,6.598,1668,6.598,1669,5.843,1670,3.243,1671,3.746,1672,3.746,1673,4.969,1674,4.969,1675,4.4,1676,3.746,1677,3.177,1678,4.4]],["title/classes/DataNode.html",[61,0.011,785,2.214]],["body/classes/DataNode.html",[3,0.038,4,0.034,9,0.034,14,0.918,15,1.258,19,0.918,25,0.042,26,0.445,27,0.873,30,0.489,37,0.66,39,0.766,40,0.008,41,0.343,42,0.164,43,0.505,45,0.925,46,0.922,50,0.843,51,0.879,53,0.144,60,0.122,61,0.017,63,1.077,64,1.258,66,1.137,72,1.471,78,1.982,88,2.708,92,0.88,96,0.71,103,0.392,109,0.918,115,0.433,121,0.034,126,1.261,168,0.881,182,0.92,189,0.67,207,0.774,222,0.003,223,0.003,226,0.305,227,0.978,228,3.411,231,0.728,234,1.31,235,2.601,246,1.829,248,0.872,260,0.99,293,1.014,315,1.273,317,2.18,371,1.728,459,0.952,485,1.432,523,2.601,537,0.573,538,2.537,545,2.073,547,1.768,548,1.307,549,2.512,557,0.978,563,1.263,567,1.217,569,0.978,572,1.961,573,2.507,574,3.154,575,1.436,595,0.994,602,1.377,608,0.845,616,1.688,617,2.507,621,2.229,622,0.779,623,2.949,641,2.347,659,2.749,672,1.263,675,2.601,691,2.184,705,0.927,720,0.817,724,1.688,726,1.063,752,1.175,753,1.951,757,2.585,761,2.791,762,3.501,763,1.813,767,2.749,769,2.668,772,3.539,774,1.688,776,4.691,777,1.313,778,2.784,780,3.542,785,3.937,787,3.036,791,0.711,795,1.503,803,1.813,811,2.488,816,1.108,817,0.952,818,1.982,819,2.421,820,1.067,826,1.006,833,0.927,834,2.614,841,1.51,844,3.433,877,3.361,888,1.067,890,2.073,907,0.726,924,1.217,942,2.268,948,3.301,956,2.705,973,1.432,978,2.904,992,1.263,999,2.448,1004,1.313,1015,2.846,1032,0.927,1035,3.301,1044,0.728,1053,1.313,1065,2.031,1073,1.313,1098,2.601,1123,1.432,1208,2.89,1240,2.689,1242,1.067,1244,1.217,1249,0.88,1253,0.978,1310,1.217,1367,1.687,1425,2.331,1449,1.914,1465,3.118,1470,2.09,1475,1.006,1479,1.587,1483,1.137,1491,3.182,1493,2.705,1496,2.585,1501,2.705,1503,3.669,1517,2.138,1533,4.443,1549,1.398,1579,1.217,1612,1.982,1620,2.585,1630,1.503,1632,3.749,1634,1.313,1653,2.138,1664,1.137,1679,1.503,1680,2.954,1681,5.776,1682,5.085,1683,3.737,1684,2.954,1685,5.779,1686,2.954,1687,3.737,1688,3.737,1689,2.954,1690,2.954,1691,2.954,1692,2.954,1693,3.097,1694,2.954,1695,2.954,1696,3.737,1697,3.4,1698,2.954,1699,4.413,1700,4.743,1701,4.743,1702,3.229,1703,5.085,1704,3.229,1705,3.737,1706,4.15,1707,7.335,1708,2.239,1709,2.239,1710,2.954,1711,4.988,1712,2.749,1713,2.239,1714,2.239,1715,2.239,1716,4.392,1717,3.4,1718,2.954,1719,3.737,1720,2.954,1721,2.954,1722,2.954,1723,2.954,1724,2.239,1725,2.954,1726,1.983,1727,2.239,1728,2.239,1729,2.954,1730,2.239,1731,2.749,1732,3.737,1733,2.954,1734,2.954,1735,2.239,1736,2.954,1737,2.954,1738,2.507,1739,2.954,1740,1.983,1741,2.239,1742,5.529,1743,4.413,1744,1.369,1745,2.138,1746,1.217,1747,1.369,1748,3.25,1749,1.688,1750,2.585,1751,1.587,1752,1.587,1753,4.988,1754,2.229,1755,2.749,1756,1.982,1757,1.688,1758,1.587,1759,3.477,1760,2.585,1761,1.814,1762,1.688,1763,2.585,1764,1.432,1765,1.688,1766,1.688,1767,2.749,1768,1.688,1769,3.27,1770,1.587,1771,1.814,1772,1.814,1773,1.814,1774,2.087,1775,2.448,1776,1.587,1777,1.688,1778,1.587,1779,1.137,1780,1.814,1781,1.814,1782,2.954,1783,2.749,1784,1.688,1785,3.737,1786,3.737,1787,1.814,1788,1.814,1789,2.056,1790,2.954,1791,1.503,1792,1.814,1793,1.814,1794,1.688,1795,2.954,1796,1.814,1797,2.749,1798,1.814,1799,1.814,1800,2.331,1801,1.814,1802,1.814,1803,1.814,1804,1.814,1805,1.814,1806,1.587,1807,0.952,1808,5.085,1809,3.69,1810,1.688,1811,3.737,1812,3.737,1813,1.688,1814,1.369,1815,6.203,1816,1.814,1817,1.814,1818,1.814,1819,4.308,1820,1.814,1821,2.954,1822,1.814,1823,3.737,1824,2.954,1825,3.737,1826,1.814,1827,3.737,1828,1.814,1829,4.308,1830,1.814,1831,1.814,1832,1.814,1833,1.814,1834,1.688,1835,1.503,1836,1.313,1837,1.587,1838,1.814,1839,1.814,1840,3.737,1841,1.587,1842,1.814,1843,1.814,1844,2.016,1845,4.743,1846,1.814,1847,1.688,1848,1.688,1849,2.601,1850,1.814,1851,1.688,1852,2.331,1853,1.688,1854,1.814,1855,1.814,1856,4.308,1857,3.737,1858,3.737,1859,1.217,1860,1.688,1861,1.688,1862,1.688,1863,2.954,1864,3.737,1865,1.814,1866,1.814,1867,4.743,1868,1.814,1869,1.814,1870,3.25,1871,2.749,1872,1.814,1873,1.814,1874,3.737,1875,1.688,1876,2.954,1877,1.814,1878,1.814,1879,3.737,1880,1.369,1881,1.814,1882,1.814,1883,1.814,1884,1.814,1885,1.814,1886,2.954,1887,1.814,1888,1.814,1889,2.954,1890,1.814,1891,1.814,1892,1.814,1893,1.814,1894,1.814,1895,2.448,1896,2.749,1897,2.954,1898,1.814,1899,1.313,1900,1.814,1901,1.217,1902,2.954,1903,1.814,1904,1.688,1905,1.503,1906,2.949,1907,2.138,1908,3.359,1909,1.814,1910,1.814,1911,1.814,1912,1.814,1913,1.688,1914,1.814,1915,1.814,1916,1.814,1917,1.814,1918,1.814,1919,1.814,1920,1.814,1921,1.814,1922,1.814,1923,1.814,1924,1.814,1925,1.814,1926,1.814,1927,2.949,1928,1.814,1929,4.743,1930,1.814,1931,2.954,1932,1.814,1933,1.814,1934,1.688,1935,2.749,1936,1.688,1937,1.313,1938,1.814,1939,1.814,1940,1.814,1941,1.814,1942,4.308,1943,3.737,1944,4.308,1945,3.737,1946,1.814,1947,1.814,1948,1.814,1949,4.743,1950,1.814,1951,1.814,1952,3.737,1953,3.737,1954,3.737,1955,3.737,1956,1.587,1957,3.477,1958,1.814,1959,1.814,1960,1.814,1961,3.477,1962,1.814,1963,2.585,1964,1.814,1965,1.814,1966,1.814,1967,1.814,1968,2.954,1969,1.814,1970,1.814,1971,1.432,1972,1.814,1973,1.432,1974,1.814,1975,1.814,1976,1.814,1977,1.433,1978,1.814,1979,1.814,1980,1.814,1981,3.477,1982,1.814,1983,3.737,1984,3.737,1985,1.587,1986,1.814,1987,1.814,1988,1.814,1989,1.814,1990,1.814,1991,1.814,1992,1.814,1993,1.814,1994,1.814,1995,1.814,1996,1.814,1997,1.814,1998,1.814,1999,1.814,2000,1.814,2001,1.814,2002,1.688,2003,1.688,2004,1.432,2005,1.688,2006,1.432,2007,3.27,2008,1.587,2009,1.814,2010,2.056,2011,1.587,2012,1.587,2013,1.814,2014,1.369,2015,1.814,2016,1.814,2017,1.814,2018,1.688,2019,1.914,2020,1.814,2021,2.749,2022,1.814,2023,1.814,2024,1.688,2025,1.814,2026,1.814,2027,1.814,2028,1.814,2029,1.688,2030,1.814,2031,1.814,2032,1.814,2033,1.814,2034,1.814,2035,1.814,2036,2.331,2037,1.814,2038,1.587,2039,1.814,2040,1.263,2041,1.263,2042,1.814,2043,1.814,2044,1.814,2045,1.814,2046,1.814,2047,1.814]],["title/classes/DataQuery.html",[61,0.011,1681,3.024]],["body/classes/DataQuery.html",[3,0.037,4,0.033,9,0.033,14,0.705,15,0.967,19,1.144,25,0.041,26,0.436,27,0.582,30,0.475,37,0.693,39,0.779,40,0.008,41,0.336,42,0.165,43,0.495,45,0.952,46,0.907,50,0.823,51,0.864,53,0.141,60,0.119,61,0.016,63,1.065,64,0.967,66,1.098,72,1.429,78,1.926,88,2.409,92,0.85,96,0.691,103,0.621,109,1.036,115,0.421,121,0.054,126,1.244,168,0.857,182,0.903,189,0.662,207,0.755,222,0.003,223,0.003,226,0.297,227,0.945,228,3.356,231,0.703,234,1.321,235,2.675,246,1.818,248,0.883,260,0.983,293,0.859,315,1.276,317,2.158,371,1.711,459,0.92,485,1.383,523,2.937,537,0.553,538,2.499,545,1.593,547,2.052,548,1.307,549,2.581,557,0.945,563,1.999,567,1.926,569,0.945,572,1.507,573,3.124,574,3.244,575,1.41,595,1.228,602,1.453,608,0.843,616,1.63,617,3.124,621,2.753,622,0.753,623,3.947,641,2.309,659,2.672,672,1.22,675,2.937,691,2.161,705,0.895,720,0.789,724,1.63,726,0.817,752,1.135,753,1.94,757,3.192,761,2.734,762,3.687,763,1.393,767,2.672,769,2.309,772,3.677,774,2.672,776,5.264,777,1.268,778,2.701,780,3.625,785,3.726,787,3.074,791,0.687,795,1.452,803,1.393,811,2.463,816,1.077,817,0.92,818,1.926,819,2.734,820,1.689,826,0.972,833,0.895,834,2.826,841,1.467,844,3.62,877,3.572,888,1.031,890,2.024,907,0.705,924,1.175,942,1.742,948,3.482,956,2.641,973,1.383,978,3.016,992,1.22,999,2.38,1004,1.268,1015,2.832,1032,1.467,1035,3.482,1044,0.703,1053,1.268,1065,2.114,1073,1.268,1098,2.54,1123,1.383,1208,2.831,1240,2.624,1242,1.031,1244,1.926,1249,0.85,1253,0.945,1310,1.175,1367,3.719,1425,2.266,1449,1.86,1465,2.078,1470,2.047,1475,0.972,1479,2.512,1483,1.098,1491,3.124,1493,2.641,1496,2.512,1501,2.641,1503,3.776,1517,2.078,1533,4.377,1549,1.726,1579,1.175,1612,1.926,1620,2.512,1630,1.452,1632,4.12,1634,1.268,1653,2.641,1664,1.098,1679,1.452,1680,1.752,1681,5.455,1682,4.219,1683,2.871,1684,1.752,1685,4.657,1686,1.752,1687,2.871,1688,2.871,1689,1.752,1690,1.752,1691,1.752,1692,1.752,1693,2.38,1694,1.752,1695,1.752,1696,2.871,1697,2.879,1698,1.752,1699,4.333,1700,4.657,1701,5.002,1702,3.139,1703,5.513,1704,3.139,1705,4.219,1706,4.377,1710,2.871,1711,5.13,1712,2.672,1716,4.419,1717,3.675,1718,2.871,1719,4.219,1720,2.871,1721,2.871,1722,2.871,1723,2.871,1725,2.871,1726,1.915,1729,2.871,1731,2.672,1732,4.219,1733,2.871,1734,2.871,1736,2.871,1737,2.871,1738,2.831,1739,2.871,1740,1.915,1742,5.816,1743,4.915,1744,1.322,1745,2.078,1746,1.175,1747,1.322,1748,3.184,1749,1.63,1750,2.512,1751,1.533,1752,1.533,1753,4.915,1754,2.167,1755,2.672,1756,1.926,1757,1.63,1758,1.533,1759,3.395,1760,2.512,1761,1.752,1762,1.63,1763,2.512,1764,1.383,1765,1.63,1766,1.63,1767,3.395,1768,1.63,1769,3.192,1770,1.533,1771,2.871,1772,2.871,1773,2.871,1774,2.324,1775,3.497,1776,2.512,1777,2.672,1778,2.512,1779,1.799,1780,2.871,1781,2.871,1782,4.219,1783,3.926,1784,2.672,1785,3.648,1786,3.648,1787,2.871,1788,2.871,1789,2.937,1790,4.657,1791,2.38,1792,2.871,1793,2.871,1794,2.672,1795,3.648,1796,2.871,1797,3.395,1798,2.871,1799,2.871,1800,2.879,1801,2.871,1802,1.752,1803,1.752,1804,2.871,1805,2.871,1806,2.512,1807,1.507,1808,5.002,1809,3.726,1810,1.63,1811,3.648,1812,3.648,1813,1.63,1814,1.322,1815,6.141,1816,1.752,1817,1.752,1818,1.752,1819,4.219,1820,1.752,1821,3.648,1822,2.871,1823,3.648,1824,2.871,1825,3.648,1826,1.752,1827,4.219,1828,1.752,1829,4.219,1830,1.752,1831,1.752,1832,1.752,1833,1.752,1834,1.63,1835,1.452,1836,1.268,1837,1.533,1838,1.752,1839,1.752,1840,3.648,1841,1.533,1842,1.752,1843,1.752,1844,1.968,1845,4.657,1846,1.752,1847,1.63,1848,1.63,1849,2.54,1850,1.752,1851,1.63,1852,2.879,1853,1.63,1854,1.752,1855,1.752,1856,4.219,1857,3.648,1858,3.648,1859,1.175,1860,1.63,1861,1.63,1862,1.63,1863,2.871,1864,3.648,1865,1.752,1866,1.752,1867,4.657,1868,1.752,1869,1.752,1870,3.184,1871,2.672,1872,1.752,1873,2.871,1874,3.648,1875,1.63,1876,2.871,1877,1.752,1878,1.752,1879,3.648,1880,1.322,1881,1.752,1882,1.752,1883,1.752,1884,1.752,1885,1.752,1886,2.871,1887,1.752,1888,1.752,1889,2.871,1890,1.752,1891,1.752,1892,1.752,1893,3.648,1894,1.752,1895,2.38,1896,2.672,1897,2.871,1898,1.752,1899,1.268,1900,1.752,1901,1.175,1902,2.871,1903,1.752,1904,1.63,1905,1.452,1906,2.879,1907,2.078,1908,3.309,1909,1.752,1910,1.752,1911,1.752,1912,1.752,1913,1.63,1914,1.752,1915,1.752,1916,1.752,1917,1.752,1918,1.752,1919,1.752,1920,1.752,1921,1.752,1922,1.752,1923,1.752,1924,1.752,1925,1.752,1926,1.752,1927,2.879,1928,1.752,1929,4.657,1930,1.752,1931,2.871,1932,1.752,1933,1.752,1934,1.63,1935,2.672,1936,1.63,1937,1.268,1938,1.752,1939,1.752,1940,1.752,1941,1.752,1942,4.219,1943,3.648,1944,4.219,1945,3.648,1946,1.752,1947,1.752,1948,1.752,1949,4.657,1950,1.752,1951,1.752,1952,3.648,1953,3.648,1954,3.648,1955,3.648,1956,1.533,1957,3.395,1958,1.752,1959,1.752,1960,1.752,1961,3.395,1962,1.752,1963,2.512,1964,1.752,1965,1.752,1966,1.752,1967,1.752,1968,2.871,1969,1.752,1970,1.752,1971,1.383,1972,1.752,1973,1.383,1974,1.752,1975,1.752,1976,1.752,1977,1.393,1978,1.752,1979,1.752,1980,1.752,1981,3.395,1982,1.752,1983,3.648,1984,3.648,1985,1.533,1986,1.752,1987,1.752,1988,1.752,1989,1.752,1990,1.752,1991,1.752,1992,1.752,1993,1.752,1994,1.752,1995,1.752,1996,1.752,1997,1.752,1998,1.752,1999,1.752,2000,1.752,2001,1.752,2002,1.63,2003,1.63,2004,1.383,2005,1.63,2006,1.383,2007,3.192,2008,1.533,2009,1.752,2010,1.999,2011,1.533,2012,1.533,2013,1.752,2014,1.322,2015,1.752,2016,1.752,2017,1.752,2018,1.63,2019,1.86,2020,1.752,2021,2.672,2022,1.752,2023,1.752,2024,1.63,2025,1.752,2026,1.752,2027,1.752,2028,1.752,2029,1.63,2030,1.752,2031,1.752,2032,1.752,2033,1.752,2034,1.752,2035,1.752,2036,2.266,2037,1.752,2038,1.533,2039,1.752,2040,1.22,2041,1.22,2042,1.752,2043,1.752,2044,1.752,2045,1.752,2046,1.752,2047,1.752,2048,2.163,2049,2.163,2050,2.163,2051,2.163,2052,2.163,2053,2.163,2054,2.163,2055,2.163,2056,2.163,2057,2.163,2058,2.163,2059,2.163,2060,2.163,2061,2.163,2062,2.163,2063,2.163,2064,2.163,2065,2.163,2066,2.163]],["title/injectables/DataService.html",[532,1.082,769,1.685]],["body/injectables/DataService.html",[3,0.091,4,0.081,9,0.081,17,1.104,19,1.38,25,0.101,26,0.58,30,0.929,33,0.996,37,0.726,39,0.926,40,0.008,41,0.524,42,0.187,43,0.701,45,0.967,46,0.788,50,0.981,53,0.207,54,0.371,60,0.111,61,0.014,63,0.788,182,0.843,189,0.504,222,0.006,223,0.006,226,0.449,227,3.552,231,2.254,234,1.289,248,1.043,260,1.043,281,1.63,371,1.946,532,1.667,545,3.118,548,1.366,553,2.344,555,2.344,608,0.722,623,4.435,646,2.22,691,2.018,725,2.006,753,1.98,762,3.654,769,2.595,778,2.933,785,4.138,790,1.958,834,4.138,835,4.126,841,3.57,877,3.456,1015,2.254,1035,3.025,1240,1.824,1314,4.24,1367,3.989,1464,5.229,1470,3.533,1579,3.77,1748,4.969,1749,4.043,1756,3.77,1774,1.912,1809,3.41,1896,4.043,1901,4.77,1908,2.723,1927,4.435,2019,3.641,2021,4.043,2024,5.229,2067,4.75,2068,5.62,2069,6.937,2070,6.937,2071,4.658,2072,6.937,2073,6.937,2074,6.143,2075,7.199,2076,8.129,2077,6.832,2078,6.937,2079,6.937,2080,6.937,2081,5.364,2082,5.364,2083,6.937,2084,5.364,2085,6.937,2086,3.601,2087,3.145,2088,3.145,2089,5.364,2090,7.689,2091,5.364,2092,5.364,2093,5.364,2094,5.364,2095,5.364,2096,3.429,2097,5.364,2098,5.364,2099,5.364,2100,6.937,2101,5.364,2102,5.364,2103,4.345,2104,5.364,2105,5.364,2106,6.937,2107,5.364,2108,5.364,2109,5.364,2110,5.364,2111,5.364,2112,5.364,2113,5.364]],["title/interfaces/DialogData.html",[121,0.068,1572,2.879]],["body/interfaces/DialogData.html",[0,0.151,2,1.184,3,0.088,4,0.079,9,0.079,13,2.095,14,1.034,15,1.853,17,0.746,18,0.729,20,1.398,21,0.763,22,2.208,23,0.763,24,2.208,25,0.098,26,0.568,27,1.318,28,2.27,29,3.831,35,2.812,36,2.969,40,0.008,42,0.167,46,1.112,49,0.541,53,0.223,54,0.359,55,1.578,59,2.334,60,0.141,61,0.013,62,1.808,63,1.179,64,1.417,70,3.566,89,3.566,115,0.99,121,0.115,122,1.034,123,0.982,159,1.034,185,1.012,222,0.006,223,0.006,226,0.435,234,1.127,235,2.042,244,2.403,246,1.803,248,0.807,249,3.219,250,3.34,253,2.095,254,2.403,255,1.943,256,2.334,260,1.016,284,2.405,310,3.502,315,1.189,371,1.533,383,3.046,411,2.726,412,2.553,427,3.046,466,2.823,516,4.153,529,1.417,548,0.798,557,3.308,561,2.403,562,3.321,602,1.222,611,2.095,641,1.943,719,2.636,727,3.175,739,4.208,753,1.172,769,2.832,778,2.962,790,2.48,791,2.158,792,2.15,811,2.207,814,2.476,816,1.578,829,2.27,833,2.812,836,1.688,868,2.609,885,3.046,973,5.134,987,2.334,988,2.604,994,4.815,995,3.831,1010,3.321,1011,2.15,1012,2.042,1013,2.15,1028,3.321,1030,3.321,1031,3.487,1033,3.321,1034,3.175,1035,2.929,1044,1.688,1045,3.692,1103,3.175,1214,1.896,1236,2.208,1292,3.566,1312,5.504,1405,2.929,1474,2.671,1491,3.692,1523,3.682,1555,3.682,1563,5.366,1564,3.682,1569,6.016,1570,4.6,1571,4.6,1572,4.84,1575,4.6,1577,4.6,1579,4.364,1580,4.6,1581,4.801,1582,4.6,1584,5.504,1585,4.343,1586,3.321,1587,5.504,1588,4.208,1589,3.682,1590,2.636,1591,4.6,1592,4.6,1593,4.6,1594,4.6,1595,4.6,1596,6.016,1597,6.016,1598,5.504,1599,3.915,1600,3.682,1601,4.6,1602,4.6,1603,4.6,1604,4.208,1605,4.6,1606,4.6,1607,4.6,1608,4.6,1609,4.6,1610,4.6,1611,4.6,1612,2.823,1613,4.6,1614,4.6,1615,4.6,1616,4.6,1617,4.6,1618,4.815,1619,4.6,1620,3.682,1621,4.6,1622,3.046,1623,4.6,1624,4.6,1625,4.6,1626,4.6,1627,3.915,1628,4.6,1629,5.121,1630,4.561,1631,2.929]],["title/interfaces/DialogData-1.html",[121,0.057,816,1.139,1572,2.396]],["body/interfaces/DialogData-1.html",[0,0.149,3,0.097,4,0.086,9,0.086,13,2.3,14,1.135,15,1.967,17,0.819,18,0.8,20,1.47,21,0.838,22,2.425,23,0.838,24,2.425,25,0.108,26,0.604,27,0.936,28,3.152,35,2.986,36,2.492,40,0.008,42,0.182,43,0.717,46,1.162,49,0.65,53,0.194,54,0.394,55,1.733,60,0.15,61,0.014,62,1.985,64,1.555,88,2.638,121,0.086,185,1.111,186,1.51,189,0.823,196,1.71,206,1.111,222,0.006,223,0.006,234,1.012,239,3.216,244,2.638,248,0.857,249,3.067,253,2.3,255,2.133,256,2.563,259,3.828,260,0.678,284,2.784,293,1.088,315,0.896,317,1.623,371,1.628,427,3.344,529,1.555,608,0.536,795,3.829,826,3.557,840,5.138,866,2.986,926,2.993,1004,4.23,1030,3.646,1032,2.986,1033,5.485,1179,3.439,1242,2.718,1308,4.299,1423,3.439,1572,5.059,1599,6.467,1600,6.308,1627,4.299,1676,4.299,1844,2.492,1907,4.23,2114,4.299,2115,6.467,2116,7.008,2117,5.356,2118,6.389,2119,5.313,2120,7.008,2121,6.389,2122,6.411,2123,6.389,2124,4.62,2125,5.05,2126,5.05,2127,4.62,2128,5.05,2129,4.042,2130,5.05,2131,5.05,2132,5.05,2133,5.05,2134,4.62,2135,5.05,2136,3.486,2137,5.05,2138,2.895,2139,5.05,2140,5.05,2141,5.05,2142,5.05,2143,3.829]],["title/interfaces/FilterSelection.html",[121,0.068,2144,2.879]],["body/interfaces/FilterSelection.html",[0,0.151,3,0.1,4,0.089,9,0.089,14,1.171,15,2.007,17,0.845,18,0.826,21,0.864,23,0.864,25,0.111,26,0.616,27,0.966,40,0.008,41,0.379,42,0.167,49,0.601,50,1.076,51,0.884,53,0.213,54,0.407,60,0.153,61,0.015,63,1.081,64,1.605,97,1.122,118,1.39,121,0.112,141,0.568,155,1.146,196,1.571,222,0.006,223,0.006,231,2.391,246,1.592,248,0.874,260,0.699,293,1.122,315,0.924,318,2.892,371,1.328,389,2.644,431,3.198,515,1.828,529,1.605,537,1.506,539,3.95,540,2.436,544,2.644,547,2.446,556,3.862,576,3.198,608,0.553,615,3.318,617,3.198,680,4.94,684,3.45,808,3.318,811,1.912,821,3.95,904,3.318,1044,1.912,1102,1.956,1253,2.571,1403,3.45,1474,3.592,1476,3.762,1503,2.571,1509,3.891,1539,4.171,1880,3.597,2129,4.171,2138,2.987,2144,5.377,2145,4.171,2146,3.597,2147,4.171,2148,5.93,2149,6.016,2150,5.961,2151,5.961,2152,5.961,2153,6.504,2154,4.435,2155,4.94,2156,4.767,2157,4.743,2158,3.95,2159,4.767,2160,3.762,2161,5.69,2162,4.767,2163,4.767,2164,4.767,2165,4.767,2166,4.767,2167,4.435,2168,5.546,2169,4.767,2170,3.762,2171,4.767,2172,4.767,2173,3.597,2174,4.767,2175,4.767,2176,4.435,2177,3.95,2178,5.39,2179,4.435,2180,4.767,2181,4.767,2182,4.767,2183,4.767,2184,4.767,2185,4.767,2186,4.435,2187,4.767,2188,4.767,2189,4.767,2190,4.767,2191,5.961,2192,4.767,2193,4.767,2194,4.767,2195,4.171,2196,4.94]],["title/interfaces/FilterState.html",[121,0.068,2197,3.192]],["body/interfaces/FilterState.html",[3,0.12,4,0.107,9,0.107,25,0.134,26,0.688,40,0.008,42,0.186,53,0.202,60,0.171,118,1.138,121,0.107,222,0.007,223,0.007,529,1.932,541,2.017,1214,2.586,1809,3.482,2144,5.724,2146,4.33,2197,5.833,2198,5.739,2199,7.059,2200,7.928,2201,5.739,2202,7.288,2203,7.085,2204,7.085]],["title/components/FrameComponent.html",[0,0.085,128,0.877]],["body/components/FrameComponent.html",[0,0.159,1,0.86,2,0.792,3,0.072,4,0.064,5,1.095,6,0.955,7,0.935,8,0.897,9,0.064,11,0.842,16,0.825,17,1.379,18,1.342,19,0.842,20,0.71,21,0.869,23,0.869,25,0.08,26,0.495,27,1.405,30,0.792,33,0.608,37,0.712,39,0.635,40,0.008,41,0.533,42,0.153,43,0.51,45,0.652,46,0.869,50,1.246,51,1.167,53,0.203,54,0.293,56,0.86,57,1.253,60,0.088,61,0.011,69,4.718,86,1.648,93,2.631,95,0.935,96,1.152,97,1.128,98,0.71,99,1.597,100,0.935,101,1.916,102,0.842,103,0.741,104,1.031,105,1.202,106,0.86,107,0.935,108,0.86,109,0.842,110,0.935,111,0.86,112,0.935,113,0.807,114,0.825,115,0.923,116,0.842,117,0.807,118,0.95,119,1.507,120,0.825,121,0.064,122,0.842,123,0.974,124,0.86,125,0.86,126,0.774,127,0.935,128,1.438,129,0.935,130,0.86,131,0.935,132,0.86,133,0.935,134,0.842,135,0.935,136,0.842,137,0.935,138,0.594,139,0.935,140,0.842,141,0.409,142,0.935,143,0.86,144,0.935,145,0.86,146,1.507,147,0.86,148,0.935,149,0.86,150,1.507,151,0.86,152,0.935,153,0.878,154,0.935,155,0.825,156,0.935,157,0.86,158,0.935,159,0.842,160,0.79,161,0.935,162,0.86,163,1.253,164,1.307,165,0.86,166,0.935,167,0.825,168,0.478,169,0.935,170,0.842,171,0.86,172,0.935,173,0.86,174,0.935,175,0.842,176,0.842,177,0.825,178,0.935,179,0.842,180,0.935,181,0.79,182,0.665,183,0.825,184,0.935,185,0.825,186,1.128,187,0.842,188,0.86,189,0.555,190,0.807,191,0.65,192,0.86,193,1.714,194,0.935,195,0.86,196,0.79,197,0.935,198,0.86,199,0.935,200,0.807,201,0.86,202,0.86,203,1.45,204,0.935,205,0.86,206,1.159,207,0.71,208,0.807,209,0.842,210,0.935,211,0.825,212,0.935,213,0.825,214,0.935,215,0.807,216,0.935,217,0.807,218,0.935,219,0.807,220,0.878,221,0.935,222,0.005,223,0.005,226,0.354,248,0.703,267,1.545,268,2.489,274,1.958,276,1.799,281,1.286,293,0.807,315,0.929,317,1.205,355,3,499,1.545,537,1.083,540,1.752,547,2.266,552,3.104,553,2.584,556,4.076,569,2.584,572,2.515,599,2.3,602,1.392,608,0.397,611,2.977,617,3.215,684,2.482,691,1.231,705,2.448,816,2.36,822,5.238,902,4.192,907,1.177,964,5.98,1066,2.448,1087,4.192,1102,2.454,1139,5.564,1174,1.545,1195,1.375,1197,3.138,1200,3.781,1201,3.578,1245,2.907,1253,2.584,1655,3.518,1670,3.351,1806,4.192,2157,4.538,2170,4.965,2205,3.748,2206,5.915,2207,5.915,2208,5.915,2209,4.458,2210,5.915,2211,7.382,2212,3.002,2213,7.382,2214,5.915,2215,5.238,2216,5.915,2217,8.047,2218,4.792,2219,5.915,2220,5.915,2221,4.458,2222,5.238,2223,5.915,2224,6.818,2225,5.915,2226,5.523,2227,6.818,2228,6.818,2229,5.915,2230,7.382,2231,3.748,2232,6.066,2233,4.232,2234,5.915,2235,7.382,2236,4.232,2237,5.915,2238,4.232,2239,5.238,2240,4.792,2241,5.238,2242,4.792,2243,5.238,2244,5.139,2245,4.232,2246,5.915,2247,4.232,2248,4.232,2249,4.232,2250,3.19,2251,3.19,2252,4.458,2253,5.915,2254,4.232,2255,4.232,2256,4.232,2257,4.232,2258,4.232,2259,4.232,2260,7.382,2261,8.26,2262,5.139,2263,3.335,2264,2.842,2265,4.232,2266,3.748,2267,3.429,2268,4.232,2269,4.232,2270,5.915,2271,4.232,2272,3.429,2273,3]],["title/classes/GraphComponent.html",[61,0.011,1210,2.147]],["body/classes/GraphComponent.html",[0,0.161,2,1.125,3,0.071,4,0.063,9,0.063,25,0.079,26,0.49,30,0.785,37,0.666,39,0.629,40,0.008,41,0.541,42,0.179,43,0.505,45,0.809,49,0.524,53,0.144,60,0.152,61,0.019,121,0.117,123,0.939,138,0.95,141,0.773,189,0.392,222,0.005,223,0.005,226,0.349,231,2.889,234,1.198,248,0.978,260,1.076,310,2.71,312,2.052,515,2.812,529,2.456,541,1.188,548,1.343,572,1.774,575,2.165,595,2.001,608,0.828,635,1.876,691,2.604,705,2.801,720,1.524,728,3.751,752,4.407,753,1.322,808,2.354,863,4.735,865,2.447,890,2.632,957,2.268,975,1.931,1015,1.356,1065,2.281,1210,3.683,1211,3.225,1213,3.818,1214,2.821,1240,2.302,1241,1.931,1249,1.641,1260,2.19,1423,1.989,1475,3.297,1581,4.354,1586,2.668,1590,3.435,1622,2.447,1631,3.303,1756,2.268,1774,1.488,1779,3.435,1814,4.897,1844,1.824,1977,1.641,2040,2.354,2041,3.816,2071,2.802,2274,4.697,2275,2.668,2276,4.745,2277,5.187,2278,4.174,2279,4.174,2280,4.174,2281,4.152,2282,5.73,2283,4.174,2284,4.926,2285,5.524,2286,4.152,2287,4.174,2288,4.174,2289,2.118,2290,2.958,2291,4.152,2292,2.958,2293,2.958,2294,5.477,2295,2.668,2296,2.802,2297,5.188,2298,5.679,2299,4.543,2300,2.802,2301,2.668,2302,2.802,2303,4.354,2304,5.2,2305,2.802,2306,5.188,2307,5.477,2308,5.122,2309,2.551,2310,2.668,2311,5.188,2312,4.136,2313,3.744,2314,2.958,2315,2.802,2316,2.958,2317,3.932,2318,2.802,2319,2.668,2320,2.958,2321,2.958,2322,2.958,2323,2.958,2324,2.958,2325,2.668,2326,2.958,2327,2.551,2328,2.958,2329,2.958,2330,2.958,2331,2.958,2332,2.958,2333,2.958,2334,4.152,2335,5.477,2336,4.543,2337,3.744,2338,3.932,2339,2.958,2340,3.58,2341,2.958,2342,2.958,2343,2.958,2344,2.958,2345,2.958,2346,2.958,2347,2.958,2348,2.958,2349,2.958,2350,4.152,2351,4.796,2352,4.796,2353,4.796,2354,2.354,2355,2.958,2356,2.958,2357,2.354,2358,2.354,2359,2.447,2360,4.543,2361,5.393,2362,3.932,2363,4.796,2364,4.152,2365,2.958,2366,2.958,2367,2.958,2368,2.958,2369,4.152,2370,2.958,2371,2.958,2372,2.958,2373,2.958,2374,2.958,2375,2.958,2376,2.958,2377,2.958,2378,2.958,2379,2.958,2380,2.958,2381,2.958,2382,2.958,2383,2.958,2384,2.958,2385,4.543,2386,2.668,2387,4.152,2388,4.152,2389,2.958,2390,2.958,2391,2.958,2392,2.958,2393,2.958,2394,2.958,2395,2.958,2396,2.958,2397,4.152,2398,2.958,2399,2.958,2400,2.802,2401,2.958,2402,2.802,2403,2.354,2404,4.796,2405,2.958,2406,2.958,2407,2.958,2408,2.958,2409,2.668,2410,2.958,2411,2.958,2412,2.958,2413,2.958,2414,2.958,2415,2.958,2416,2.958,2417,2.958]],["title/interfaces/GraphData.html",[121,0.068,2303,2.448]],["body/interfaces/GraphData.html",[0,0.156,2,1.176,3,0.072,4,0.065,9,0.065,25,0.08,26,0.497,40,0.008,41,0.477,42,0.182,45,0.655,49,0.489,53,0.146,60,0.154,61,0.019,121,0.118,123,0.943,138,1.039,141,0.778,189,0.4,222,0.005,223,0.005,226,0.356,231,2.851,234,1.219,248,0.983,260,1.079,310,2.749,312,2.094,515,2.79,529,2.505,541,1.213,548,1.317,572,1.811,575,2.172,595,2.019,608,0.831,635,1.914,691,2.663,705,2.832,728,3.589,752,4.43,753,1.341,808,2.402,863,4.39,865,2.498,890,2.67,957,2.315,975,1.971,1015,1.384,1065,2.295,1210,3.261,1211,3.261,1213,2.03,1214,2.842,1240,2.327,1241,1.971,1249,1.675,1260,2.236,1423,2.03,1475,3.327,1581,4.383,1586,2.723,1590,3.473,1622,2.498,1631,3.35,1756,2.315,1774,1.518,1779,3.757,1814,4.929,1844,1.861,1977,1.675,2040,2.402,2041,3.858,2071,2.86,2274,2.498,2275,2.723,2281,3.019,2282,4.97,2284,4.593,2285,5.414,2286,3.019,2289,2.162,2290,3.019,2291,4.211,2292,3.019,2293,3.019,2294,5.865,2295,2.723,2296,2.86,2297,5.227,2298,5.716,2299,4.593,2300,2.86,2301,3.798,2302,3.989,2303,4.497,2304,5.865,2305,2.86,2306,5.667,2307,5.983,2308,5.396,2309,2.604,2310,2.723,2311,5.227,2312,4.182,2313,3.798,2314,3.019,2315,2.86,2316,3.019,2317,3.989,2318,2.86,2319,2.723,2320,3.019,2321,3.019,2322,3.019,2323,3.019,2324,3.019,2325,2.723,2326,3.019,2327,2.604,2328,3.019,2329,3.019,2330,3.019,2331,3.019,2332,3.019,2333,3.019,2334,4.211,2335,5.518,2336,4.593,2337,3.798,2338,3.989,2339,3.019,2340,3.632,2341,3.019,2342,3.019,2343,3.019,2344,3.019,2345,3.019,2346,3.019,2347,3.019,2348,3.019,2349,3.019,2350,4.211,2351,4.849,2352,4.849,2353,4.849,2354,2.402,2355,3.019,2356,3.019,2357,2.402,2358,2.402,2359,2.498,2360,4.593,2361,5.412,2362,3.989,2363,4.849,2364,4.211,2365,3.019,2366,3.019,2367,3.019,2368,3.019,2369,4.211,2370,3.019,2371,3.019,2372,3.019,2373,3.019,2374,3.019,2375,3.019,2376,3.019,2377,3.019,2378,3.019,2379,3.019,2380,3.019,2381,3.019,2382,3.019,2383,3.019,2384,3.019,2385,4.593,2386,2.723,2387,4.211,2388,4.211,2389,3.019,2390,3.019,2391,3.019,2392,3.019,2393,3.019,2394,3.019,2395,3.019,2396,3.019,2397,4.211,2398,3.019,2399,3.019,2400,2.86,2401,3.019,2402,2.86,2403,2.402,2404,4.849,2405,3.019,2406,3.019,2407,3.019,2408,3.019,2409,2.723,2410,3.019,2411,3.019,2412,3.019,2413,3.019,2414,3.019,2415,3.019,2416,3.019,2417,3.019]],["title/classes/GraphDataFactory.html",[61,0.011,2309,2.753]],["body/classes/GraphDataFactory.html",[0,0.158,2,1.124,3,0.071,4,0.063,9,0.063,25,0.079,30,0.783,37,0.504,39,0.628,40,0.008,41,0.516,42,0.174,43,0.504,45,0.808,49,0.483,53,0.144,60,0.152,61,0.019,121,0.117,123,0.947,138,1.029,141,0.794,189,0.391,222,0.005,223,0.005,226,0.348,231,2.888,234,1.238,248,0.977,260,1.075,310,2.705,312,2.047,515,2.78,529,2.455,541,1.185,548,1.31,572,1.77,575,2.164,595,1.999,608,0.828,635,2.628,691,2.565,705,2.798,720,1.52,728,3.75,752,4.477,753,1.319,808,2.348,863,4.354,865,3.429,890,2.628,957,2.263,975,1.926,1015,1.353,1065,2.279,1210,3.221,1211,3.221,1213,3.221,1214,3.001,1240,2.299,1241,1.926,1249,1.637,1260,2.185,1423,1.985,1475,3.294,1581,4.351,1586,2.662,1590,3.43,1622,3.429,1631,3.297,1756,2.263,1774,2.084,1779,3.919,1814,4.893,1844,1.82,1977,1.637,2040,3.297,2041,3.811,2071,3.926,2274,3.963,2275,2.662,2281,2.952,2282,4.921,2284,4.537,2285,5.375,2286,2.952,2289,2.114,2290,2.952,2291,5.195,2292,2.952,2293,2.952,2294,5.472,2295,2.662,2296,2.796,2297,5.183,2298,5.674,2299,4.537,2300,2.796,2301,2.662,2302,2.796,2303,4.793,2304,5.195,2305,2.796,2306,5.183,2307,5.472,2308,5.118,2309,3.574,2310,3.738,2311,5.635,2312,4.893,2313,4.686,2314,4.145,2315,3.926,2316,4.145,2317,4.921,2318,3.926,2319,3.738,2320,4.145,2321,2.952,2322,2.952,2323,2.952,2324,2.952,2325,3.738,2326,4.145,2327,3.574,2328,4.145,2329,2.952,2330,2.952,2331,2.952,2332,2.952,2333,2.952,2334,4.145,2335,5.472,2336,4.537,2337,3.738,2338,3.926,2339,2.952,2340,3.574,2341,2.952,2342,2.952,2343,2.952,2344,2.952,2345,2.952,2346,2.952,2347,2.952,2348,2.952,2349,2.952,2350,4.145,2351,4.79,2352,4.79,2353,4.79,2354,2.348,2355,2.952,2356,2.952,2357,2.348,2358,2.348,2359,2.441,2360,4.537,2361,5.391,2362,3.926,2363,4.79,2364,4.145,2365,2.952,2366,2.952,2367,2.952,2368,2.952,2369,4.145,2370,2.952,2371,2.952,2372,2.952,2373,2.952,2374,2.952,2375,2.952,2376,2.952,2377,2.952,2378,2.952,2379,2.952,2380,2.952,2381,2.952,2382,2.952,2383,2.952,2384,2.952,2385,4.537,2386,2.662,2387,4.145,2388,4.145,2389,2.952,2390,2.952,2391,2.952,2392,2.952,2393,2.952,2394,2.952,2395,2.952,2396,2.952,2397,4.145,2398,2.952,2399,2.952,2400,2.796,2401,2.952,2402,2.796,2403,2.348,2404,4.79,2405,2.952,2406,2.952,2407,2.952,2408,2.952,2409,2.662,2410,2.952,2411,2.952,2412,2.952,2413,2.952,2414,2.952,2415,2.952,2416,2.952,2417,2.952,2418,5.848,2419,5.848,2420,4.164,2421,4.164]],["title/classes/GraphInterface.html",[61,0.011,1211,2.147]],["body/classes/GraphInterface.html",[0,0.155,2,1.124,3,0.071,4,0.063,9,0.063,25,0.079,26,0.489,30,0.783,37,0.709,39,0.628,40,0.008,41,0.541,42,0.181,43,0.504,45,0.808,49,0.524,53,0.144,60,0.152,61,0.019,121,0.117,123,0.939,138,0.948,141,0.745,189,0.391,222,0.005,223,0.005,231,2.839,234,1.197,248,0.977,260,1.075,310,2.705,312,2.047,515,2.811,529,2.455,541,1.185,548,1.342,572,1.77,575,2.164,595,1.999,608,0.828,635,1.871,691,2.603,705,2.798,720,1.52,728,3.75,752,4.405,753,1.319,808,2.348,863,4.354,865,2.441,890,2.628,957,2.263,975,1.926,1015,1.353,1065,2.279,1210,3.221,1211,3.68,1213,4,1214,2.818,1240,2.299,1241,1.926,1249,1.637,1260,2.185,1423,1.985,1475,3.294,1581,4.351,1586,2.662,1590,3.43,1622,2.441,1631,3.297,1756,2.263,1774,1.484,1779,3.43,1814,4.893,1844,1.82,1977,1.637,2040,2.348,2041,3.811,2071,2.796,2274,4.921,2275,2.662,2276,4.737,2277,5.178,2281,2.952,2282,4.921,2284,4.537,2285,5.375,2286,2.952,2289,2.114,2290,2.952,2291,4.145,2292,2.952,2293,2.952,2294,5.472,2295,2.662,2296,2.796,2297,5.183,2298,5.674,2299,4.537,2300,2.796,2301,2.662,2302,2.796,2303,4.351,2304,5.195,2305,2.796,2306,5.183,2307,5.472,2308,5.118,2309,2.545,2310,2.662,2311,5.183,2312,4.131,2313,3.738,2314,2.952,2315,2.796,2316,2.952,2317,3.926,2318,2.796,2319,2.662,2320,2.952,2321,2.952,2322,2.952,2323,2.952,2324,2.952,2325,2.662,2326,2.952,2327,2.545,2328,2.952,2329,2.952,2330,2.952,2331,2.952,2332,2.952,2333,2.952,2334,4.145,2335,5.472,2336,4.537,2337,3.738,2338,3.926,2339,2.952,2340,3.574,2341,2.952,2342,2.952,2343,2.952,2344,2.952,2345,2.952,2346,2.952,2347,2.952,2348,2.952,2349,2.952,2350,4.145,2351,4.79,2352,4.79,2353,4.79,2354,2.348,2355,2.952,2356,2.952,2357,2.348,2358,2.348,2359,2.441,2360,5.635,2361,5.391,2362,3.926,2363,5.472,2364,5.195,2365,4.145,2366,2.952,2367,2.952,2368,2.952,2369,4.145,2370,2.952,2371,2.952,2372,2.952,2373,4.145,2374,2.952,2375,2.952,2376,2.952,2377,2.952,2378,2.952,2379,2.952,2380,2.952,2381,2.952,2382,2.952,2383,2.952,2384,2.952,2385,4.537,2386,2.662,2387,4.145,2388,4.145,2389,2.952,2390,2.952,2391,2.952,2392,2.952,2393,2.952,2394,2.952,2395,2.952,2396,2.952,2397,4.145,2398,2.952,2399,2.952,2400,2.796,2401,2.952,2402,2.796,2403,2.348,2404,4.79,2405,2.952,2406,2.952,2407,2.952,2408,2.952,2409,2.662,2410,2.952,2411,2.952,2412,2.952,2413,2.952,2414,2.952,2415,2.952,2416,2.952,2417,2.952,2422,4.164,2423,4.164,2424,4.164,2425,4.164,2426,4.164,2427,4.164,2428,4.164,2429,4.164]],["title/classes/GraphIssue.html",[61,0.011,2308,2.879]],["body/classes/GraphIssue.html",[0,0.154,2,1.12,3,0.07,4,0.062,9,0.062,25,0.077,26,0.484,30,0.775,37,0.687,39,0.622,40,0.008,41,0.514,42,0.181,43,0.627,45,0.802,49,0.479,53,0.142,60,0.151,61,0.019,121,0.116,123,0.959,138,0.941,141,0.741,189,0.385,222,0.005,223,0.005,226,0.484,231,2.919,234,1.193,248,0.973,260,1.073,310,3.552,312,2.017,515,2.819,529,2.45,541,1.168,548,1.351,572,1.744,575,2.158,595,1.986,608,0.826,635,1.844,691,2.559,705,3.178,720,1.498,728,3.74,752,4.522,753,1.306,808,2.313,863,4.617,865,2.405,890,2.601,957,2.23,975,1.898,1015,1.333,1065,2.268,1210,3.195,1211,3.195,1213,3.902,1214,2.908,1240,2.28,1241,1.898,1249,1.613,1260,2.153,1423,1.955,1475,3.272,1581,4.62,1586,2.623,1590,3.403,1622,2.405,1631,3.263,1756,2.23,1774,1.462,1779,3.403,1814,4.87,1844,1.793,1977,1.613,2040,2.313,2041,3.78,2071,2.754,2274,4.801,2275,2.623,2276,4.688,2281,2.908,2282,4.888,2284,5.155,2285,5.613,2286,2.908,2289,2.082,2290,2.908,2291,4.102,2292,2.908,2293,2.908,2294,5.442,2295,2.623,2296,2.754,2297,5.349,2298,5.647,2299,4.501,2300,2.754,2301,2.623,2302,2.754,2303,4.33,2304,5.161,2305,2.754,2306,5.155,2307,5.442,2308,5.435,2309,2.508,2310,2.623,2311,5.155,2312,4.098,2313,3.699,2314,2.908,2315,2.754,2316,2.908,2317,3.885,2318,2.754,2319,2.623,2320,2.908,2321,2.908,2322,2.908,2323,2.908,2324,2.908,2325,2.623,2326,2.908,2327,2.508,2328,2.908,2329,2.908,2330,2.908,2331,2.908,2332,2.908,2333,2.908,2334,4.102,2335,5.442,2336,4.501,2337,3.699,2338,3.885,2339,2.908,2340,3.537,2341,2.908,2342,2.908,2343,2.908,2344,2.908,2345,2.908,2346,2.908,2347,2.908,2348,2.908,2349,2.908,2350,4.102,2351,4.752,2352,4.752,2353,4.752,2354,2.313,2355,2.908,2356,2.908,2357,2.313,2358,2.313,2359,2.405,2360,4.501,2361,5.457,2362,3.885,2363,4.752,2364,4.102,2365,2.908,2366,2.908,2367,2.908,2368,2.908,2369,4.102,2370,2.908,2371,2.908,2372,2.908,2373,2.908,2374,2.908,2375,2.908,2376,2.908,2377,2.908,2378,2.908,2379,2.908,2380,2.908,2381,2.908,2382,2.908,2383,2.908,2384,2.908,2385,5.349,2386,4.286,2387,5.161,2388,5.161,2389,4.102,2390,4.102,2391,2.908,2392,2.908,2393,2.908,2394,2.908,2395,4.102,2396,2.908,2397,4.102,2398,2.908,2399,2.908,2400,2.754,2401,2.908,2402,2.754,2403,2.313,2404,4.752,2405,2.908,2406,2.908,2407,2.908,2408,2.908,2409,2.623,2410,2.908,2411,2.908,2412,2.908,2413,2.908,2414,2.908,2415,2.908,2416,2.908,2417,2.908,2430,5.787,2431,4.103,2432,4.103,2433,4.103,2434,4.103,2435,4.103,2436,4.103]],["title/modules/GraphQLModule.html",[329,3.024,338,3.024]],["body/modules/GraphQLModule.html",[3,0.091,4,0.082,9,0.082,11,1.532,27,0.883,40,0.008,53,0.224,54,0.372,60,0.169,61,0.014,109,1.677,115,0.639,182,0.845,203,1.005,206,0.755,222,0.006,223,0.006,231,1.748,248,0.826,260,1.097,301,2.645,315,1.092,331,4.249,338,4.666,344,4.055,349,5.239,381,6.155,382,3.813,402,3.289,423,6.155,424,3.813,425,6.708,443,4.185,481,6.992,485,3.439,492,4.358,493,5.458,522,3.813,527,4.358,575,2.117,595,2.1,608,0.791,626,4.381,637,2.022,641,2.012,671,4.249,672,3.919,676,4.055,689,3.612,690,4.055,753,1.836,782,4.358,809,4.764,928,4.055,1015,1.748,1044,2.644,1194,2.227,1236,2.287,1237,3.778,1409,3.813,1424,3.528,1449,2.824,1556,5.464,1756,2.924,1770,3.813,1778,3.813,1844,2.351,1906,3.439,2068,4.358,2403,3.919,2437,4.358,2438,6.951,2439,6.951,2440,6.951,2441,5.658,2442,6.951,2443,6.951,2444,7.7,2445,5.38,2446,8.899,2447,5.38,2448,5.38,2449,4.764,2450,5.38,2451,5.38,2452,4.764,2453,4.764,2454,6.827,2455,5.38,2456,4.358,2457,4.764,2458,4.764,2459,4.764,2460,4.764,2461,6.238,2462,6.238,2463,4.666,2464,4.764,2465,4.358,2466,4.764,2467,4.764,2468,4.764,2469,4.764,2470,5.631,2471,6.238,2472,4.358,2473,4.358,2474,4.358,2475,4.358,2476,4.358,2477,4.764,2478,7.462,2479,4.764,2480,4.764,2481,3.439,2482,7.7,2483,8.63,2484,5.38,2485,6.951,2486,4.358,2487,5.38,2488,4.444,2489,5.38,2490,5.38,2491,5.38,2492,5.38,2493,5.38,2494,5.38,2495,5.38,2496,4.764,2497,5.38,2498,5.38,2499,5.38,2500,5.38,2501,5.38,2502,7.7,2503,6.155,2504,5.38,2505,5.38,2506,5.38,2507,5.38,2508,6.951,2509,6.951,2510,5.38,2511,4.764,2512,5.38,2513,5.38,2514,5.38,2515,5.38,2516,4.764,2517,6.951,2518,6.951]],["title/modules/GraphsModule.html",[329,3.024,339,3.024]],["body/modules/GraphsModule.html",[3,0.071,4,0.064,9,0.064,18,0.825,40,0.008,53,0.235,54,0.29,55,1.276,59,2.643,60,0.122,61,0.015,89,3.086,102,1.597,104,0.699,105,1.195,108,1.631,118,0.674,123,0.79,125,1.795,130,1.795,136,1.597,138,1.257,140,1.783,141,0.568,143,1.795,145,1.795,147,1.795,149,1.795,151,1.795,153,1.833,155,1.564,173,1.795,175,1.597,177,1.564,181,1.649,188,1.795,190,1.531,191,0.645,205,1.795,209,1.757,211,1.721,213,1.721,222,0.005,223,0.005,225,2.976,226,0.351,255,1.57,290,3.401,291,4.433,292,2.976,318,2.064,329,3.948,331,2.566,332,4.168,339,6.467,340,4.433,341,2.976,343,4.764,344,3.164,346,5.208,347,6.011,348,5.208,349,4.433,352,5.208,353,3.717,356,6.011,357,3.717,358,6.011,359,4.168,360,6.011,361,3.717,362,6.011,363,6.011,364,3.717,365,6.011,366,3.717,367,3.948,368,5.208,369,5.208,370,3.717,373,4.764,383,2.461,386,5.208,387,5.208,389,2.643,403,5.208,405,3.401,413,6.011,414,3.717,415,6.011,416,5.208,417,3.448,418,6.011,419,3.717,429,5.208,430,4.764,431,2.282,432,5.208,433,2.684,434,3.401,453,3.717,465,5.208,466,3.689,469,4.764,492,3.401,493,2.976,494,3.717,501,3.164,502,3.717,505,3.164,506,2.976,507,3.717,527,4.764,789,3.401,837,2.684,838,2.684,1093,1.57,1094,2.976,1215,2.001,1588,3.401,1640,3.401,1651,3.401,1806,4.168,1913,4.433,2146,2.566,2201,3.401,2519,3.717,2520,3.717,2521,3.717,2522,4.198,2523,5.881,2524,5.881,2525,5.881,2526,3.164,2527,4.198,2528,5.881,2529,4.764,2530,3.164,2531,4.168,2532,5.881,2533,4.198,2534,5.881,2535,4.198,2536,5.881,2537,3.164,2538,6.788,2539,4.198,2540,4.198,2541,4.198,2542,5.881,2543,3.595,2544,7.744,2545,3.401,2546,4.198,2547,5.881,2548,4.198,2549,3.401,2550,4.198,2551,3.401,2552,3.401,2553,4.198,2554,5.881,2555,4.198,2556,4.198,2557,4.198,2558,3.401,2559,4.198,2560,4.198,2561,5.881,2562,4.198,2563,5.881,2564,4.198,2565,4.198,2566,3.401,2567,4.198,2568,3.401,2569,4.198,2570,4.198,2571,3.717]],["title/interfaces/InterfaceNode.html",[121,0.068,1218,2.448]],["body/interfaces/InterfaceNode.html",[0,0.153,3,0.09,4,0.123,5,1.106,9,0.104,25,0.1,26,0.576,40,0.008,42,0.189,49,0.666,53,0.199,60,0.143,61,0.018,104,0.63,115,0.63,121,0.139,123,0.74,138,0.744,141,0.665,168,0.972,189,0.788,191,0.815,222,0.006,223,0.006,234,1.136,248,0.909,260,0.63,284,2.43,296,4.124,316,3.11,515,1.648,529,1.447,541,1.51,548,1.321,595,2.42,608,0.833,622,1.847,720,1.937,725,1.984,817,2.255,836,1.724,907,1.766,953,3.243,1065,1.961,1066,3.351,1069,3.649,1070,3.442,1093,1.984,1197,3.252,1205,4.484,1206,2.384,1207,2.991,1208,4.757,1209,5.132,1210,3.645,1211,3.283,1212,2.883,1213,2.528,1214,3.239,1215,3.283,1216,2.693,1217,2.784,1218,4.4,1219,4.249,1220,4.484,1221,3.243,1222,3.243,1223,3.243,1224,3.243,1225,3.243,1226,3.243,1227,3.243,1228,3.243,1229,3.186,1230,3.243,1231,3.243,1232,4.21,1233,3.76,1234,3.391,1235,3.11,1236,2.255,1237,3.744,1238,3.391,1239,3.391,1240,1.804,1241,2.454,1242,2.528,1243,3.243,1244,2.883,1245,2.608,1246,2.883,1247,3.243,1248,3.391,1249,2.085,1250,3.391,1251,2.693,1252,3.391,1253,2.318,1254,3.391,1255,2.991,1256,3.391,1257,3.243,1258,3.391,1259,4.313,1260,2.784,1261,2.991,1262,2.528,1263,4.731,1264,3.391,1265,3.391,1266,3.391,1267,4.038,1268,3.391,1269,4.403,1270,3.391,1271,3.391,1272,3.391,1273,3.243,1274,1.937,1275,3.884,1276,4.89,1277,3.391,1278,3.391,1279,4.403,1280,3.391,1281,4.403,1282,4.403,1283,3.391,1284,3.391,1285,4.157,1286,4.403,1287,3.243,1288,4.21,1289,4.403,1290,3.391,1291,4.565,1292,3.615,1293,3.391,1294,3.243,1295,3.391,1296,3.391,1297,3.391,1298,3.243,1299,4.038,1300,3.243,1301,2.991,1302,3.243,1303,2.784]],["title/injectables/InterfaceStoreService.html",[532,1.082,1553,2.879]],["body/injectables/InterfaceStoreService.html",[0,0.108,2,0.97,3,0.097,4,0.087,9,0.12,25,0.108,27,1.538,30,0.97,33,0.823,37,0.756,39,0.942,40,0.008,41,0.581,42,0.182,43,0.756,45,0.947,49,0.675,53,0.205,54,0.396,60,0.119,61,0.015,63,1.224,115,0.86,222,0.006,223,0.006,226,0.719,227,3.162,234,1.016,260,0.86,281,1.741,293,1.093,529,1.973,532,1.739,537,1.466,540,2.372,545,3.252,547,2.856,548,1.28,555,2.504,608,0.807,646,2.372,691,1.667,726,1.827,818,3.933,833,2.372,1032,2.995,1041,5.862,1068,3.971,1236,3.077,1245,3.557,1306,3.663,1344,5.074,1348,5.074,1352,5.074,1370,6.408,1379,7.377,1384,6.408,1465,3.36,1553,4.626,1774,2.579,2007,5.129,2289,2.908,2572,7.889,2573,7.236,2574,7.236,2575,5.862,2576,4.626,2577,5.455,2578,7.236,2579,7.236,2580,7.236,2581,5.73,2582,8.331,2583,7.931,2584,8.331,2585,7.931,2586,8.331,2587,7.377,2588,8.331,2589,8.331,2590,5.73,2591,7.236,2592,6.408,2593,8.331,2594,5.73,2595,6.408,2596,7.236,2597,5.73,2598,7.236,2599,7.377,2600,7.236,2601,7.236,2602,5.73,2603,5.73,2604,4.319,2605,5.73,2606,5.73,2607,5.73]],["title/components/IssueCategoryComponent.html",[0,0.085,130,0.915]],["body/components/IssueCategoryComponent.html",[0,0.152,1,1.072,2,0.92,3,0.09,4,0.08,5,0.847,6,1.191,7,1.166,8,1.118,9,0.08,11,1.05,16,1.028,17,1.389,18,1.354,19,1.05,20,0.885,21,1.008,23,1.008,25,0.1,37,0.455,40,0.008,41,0.54,42,0.11,53,0.169,54,0.365,56,1.072,57,1.455,60,0.11,61,0.013,95,1.166,96,1.337,97,1.309,98,0.885,99,1.748,100,1.166,101,1.997,102,1.05,103,0.924,104,1.053,105,1.395,106,1.072,107,1.166,108,1.072,109,1.05,110,1.166,111,1.072,112,1.166,113,1.007,114,1.028,115,0.995,116,1.05,117,1.007,118,1.102,119,1.686,120,1.028,121,0.08,122,1.05,123,1.016,124,1.072,125,1.072,126,0.965,127,1.166,128,1.028,129,1.166,130,1.642,131,1.166,132,1.072,133,1.166,134,1.05,135,1.166,136,1.05,137,1.166,138,0.741,139,1.166,140,1.05,141,0.51,142,1.166,143,1.072,144,1.166,145,1.072,146,1.686,147,1.072,148,1.166,149,1.072,150,1.686,151,1.072,152,1.166,153,1.095,154,1.166,155,1.028,156,1.166,157,1.072,158,1.166,159,1.05,160,0.986,161,1.166,162,1.072,163,1.455,164,1.517,165,1.072,166,1.166,167,1.028,168,0.597,169,1.166,170,1.05,171,1.072,172,1.166,173,1.072,174,1.166,175,1.05,176,1.05,177,1.028,178,1.166,179,1.05,180,1.166,181,0.986,182,0.829,183,1.028,184,1.166,185,1.028,186,1.309,187,1.05,188,1.072,189,0.645,190,1.007,191,0.811,192,1.072,193,1.095,194,1.166,195,1.072,196,0.986,197,1.166,198,1.072,199,1.166,200,1.007,201,1.072,202,1.072,203,0.986,204,1.166,205,1.072,206,0.741,207,0.885,208,1.007,209,1.05,210,1.166,211,1.028,212,1.166,213,1.028,214,1.166,215,1.007,216,1.166,217,1.007,218,1.166,219,1.007,220,1.095,221,1.166,222,0.006,223,0.006,276,2.244,310,4.044,311,3.731,312,3.374,313,5.175,726,1.582,766,2.506,791,1.677,811,1.715,833,2.185,907,1.366,1174,1.927,1176,2.372,1177,2.594,1179,2.515,1187,3.094,1191,2.77,1193,3,1194,2.185,1195,1.715,1214,2.785,1274,1.927,1546,2.976,1632,3.731,2212,2.679,2568,5.561,2608,4.609,2609,4.674,2610,7.629,2611,6.865,2612,5.278,2613,3.374,2614,3.978,2615,2.869,2616,4.674]],["title/components/IssueContentsComponent.html",[0,0.085,132,0.915]],["body/components/IssueContentsComponent.html",[0,0.148,1,0.79,2,0.746,3,0.066,4,0.059,5,0.624,6,0.877,7,0.859,8,0.824,9,0.059,11,0.774,14,1.108,15,1.775,16,0.758,17,1.374,18,1.338,19,0.774,20,0.652,21,0.818,23,0.818,25,0.073,26,0.466,27,1.471,30,0.746,33,0.558,37,0.711,39,0.418,40,0.008,41,0.505,42,0.148,43,0.335,45,0.717,46,1.15,49,0.398,50,0.711,51,0.584,53,0.203,54,0.269,56,0.79,57,1.18,60,0.081,61,0.01,64,1.06,86,1.083,89,2.041,95,0.859,96,1.085,97,1.063,98,0.652,99,1.538,100,0.859,101,1.882,102,0.774,103,0.681,104,1.012,105,1.132,106,0.79,107,0.859,108,0.79,109,0.774,110,0.859,111,0.79,112,0.859,113,0.742,114,0.758,115,0.894,116,0.774,117,1.063,118,0.894,119,1.438,120,0.758,121,0.059,122,0.774,123,1.021,124,0.79,125,0.79,126,0.711,127,0.859,128,0.758,129,0.859,130,0.79,131,0.859,132,1.444,133,0.859,134,0.774,135,0.859,136,0.774,137,0.859,138,0.546,139,0.859,140,0.774,141,0.375,142,0.859,143,0.79,144,0.859,145,0.79,146,1.438,147,0.79,148,0.859,149,0.79,150,1.438,151,0.79,152,0.859,153,0.807,154,0.859,155,0.758,156,0.859,157,0.79,158,0.859,159,1.295,160,0.726,161,0.859,162,0.79,163,1.506,164,1.231,165,0.79,166,0.859,167,0.758,168,0.63,169,0.859,170,0.774,171,0.79,172,0.859,173,0.79,174,0.859,175,0.774,176,0.774,177,0.758,178,0.859,179,0.774,180,0.859,181,0.726,182,0.611,183,0.758,184,0.859,185,0.758,186,1.063,187,0.774,188,0.79,189,0.523,190,0.742,191,1.156,192,0.79,193,0.807,194,0.859,195,0.79,196,1.216,197,0.859,198,0.79,199,0.859,200,0.742,201,1.444,202,0.79,203,1.327,204,0.859,205,0.79,206,0.782,207,1.408,208,0.742,209,0.774,210,0.859,211,0.758,212,0.859,213,0.758,214,0.859,215,0.742,216,0.859,217,0.742,218,0.859,219,0.742,220,0.807,221,0.859,222,0.005,223,0.005,226,0.325,233,3.948,234,0.782,243,1.699,246,1.408,267,1.419,274,1.799,276,2.767,284,1.235,293,0.742,315,1.022,322,3.74,383,4.922,515,1.731,537,0.995,548,0.856,549,2.258,617,3.863,639,2.756,678,2.377,695,3.15,726,1.5,745,2.377,753,1.257,763,2.559,766,2.033,768,2.377,769,2.928,785,3.494,787,2.694,790,2.376,791,1.77,792,1.61,793,1.853,803,1.528,806,4.001,811,1.263,814,2.655,816,1.182,829,1.699,833,2.306,834,2.738,835,1.974,836,1.263,868,2.115,884,3.443,900,3.561,907,1.815,956,2.28,976,7.261,993,2.377,995,4.008,1004,3.266,1005,2.931,1007,3.561,1015,2.309,1024,2.756,1028,2.486,1069,2.625,1072,2.942,1073,3.266,1102,1.292,1174,2.857,1176,3.194,1177,2.738,1178,3.304,1179,3.585,1187,2.28,1191,3.73,1193,2.844,1194,1.61,1195,2.619,1200,2.486,1274,2.595,1485,3.561,1542,3.538,1546,2.193,1549,2.495,1636,2.306,1637,1.974,1655,1.853,1664,2.827,1670,2.738,1677,2.486,1907,2.28,2209,4.199,2212,1.974,2267,4.513,2272,3.15,2273,2.756,2615,3.863,2616,3.443,2617,3.443,2618,4.199,2619,5.038,2620,6.509,2621,5.57,2622,6.509,2623,6.509,2624,7.107,2625,6.294,2626,7.107,2627,5.57,2628,3.888,2629,3.888,2630,3.888,2631,4.933,2632,3.888,2633,3.888,2634,5.57,2635,5.57,2636,3.888,2637,2.611,2638,2.486,2639,3.888,2640,3.888,2641,3.888,2642,6.294,2643,2.756,2644,3.888,2645,3.888,2646,3.888,2647,3.888,2648,3.888,2649,3.888,2650,3.888,2651,3.888,2652,3.888,2653,5.57,2654,3.888,2655,5.57,2656,3.888,2657,5.57,2658,5.57,2659,5.57,2660,4.933,2661,3.15,2662,4.199,2663,2.756,2664,3.443,2665,3.027,2666,2.28,2667,3.443,2668,1.911,2669,3.948,2670,2.756,2671,2.931,2672,4.933]],["title/components/IssueDetailComponent.html",[0,0.085,134,0.896]],["body/components/IssueDetailComponent.html",[0,0.132,1,0.666,2,0.658,3,0.056,4,0.05,5,0.526,6,0.739,7,0.724,8,0.694,9,0.05,11,0.652,14,0.978,15,1.607,16,0.638,17,1.364,18,1.325,19,0.652,20,0.55,21,0.722,23,0.722,25,0.062,26,0.493,27,1.511,30,0.658,33,0.47,37,0.752,39,0.528,40,0.008,41,0.492,42,0.167,43,0.423,45,0.722,46,1.03,49,0.526,50,1.283,51,1.054,53,0.204,54,0.226,56,0.666,57,1.041,60,0.068,61,0.008,63,0.866,64,0.893,85,2.147,86,1.955,89,2.578,92,1.931,93,1.751,95,0.724,96,1.148,97,0.937,98,0.55,99,1.417,100,0.724,101,1.808,102,0.652,103,0.574,104,0.955,105,0.998,106,0.666,107,0.724,108,0.666,109,0.652,110,0.724,111,0.666,112,0.724,113,0.625,114,0.638,115,0.834,116,0.652,117,1.249,118,0.946,119,1.302,120,0.638,121,0.05,122,0.652,123,1.023,124,0.666,125,0.666,126,0.599,127,0.724,128,0.638,129,0.724,130,0.666,131,0.724,132,0.666,133,0.724,134,1.303,135,0.724,136,0.652,137,0.724,138,0.46,139,0.724,140,0.652,141,0.316,142,0.724,143,0.666,144,0.724,145,0.666,146,1.302,147,0.666,148,0.724,149,0.666,150,1.302,151,0.666,152,0.724,153,0.68,154,0.724,155,0.638,156,0.724,157,0.666,158,1.302,159,0.652,160,0.612,161,0.724,162,0.666,163,1.041,164,1.086,165,0.666,166,0.724,167,0.638,168,0.37,169,0.724,170,0.652,171,0.666,172,0.724,173,0.666,174,0.724,175,0.652,176,0.652,177,0.638,178,0.724,179,0.652,180,0.724,181,0.612,182,0.515,183,0.638,184,0.724,185,0.638,186,0.937,187,0.652,188,0.666,189,0.461,190,0.625,191,0.503,192,0.666,193,0.68,194,0.724,195,0.666,196,0.917,197,0.724,198,0.666,199,0.724,200,0.625,201,0.666,202,0.666,203,0.917,204,0.724,205,0.666,206,0.689,207,0.55,208,0.625,209,0.652,210,0.724,211,0.638,212,0.724,213,0.638,214,0.724,215,0.625,216,0.724,217,0.625,218,0.724,219,0.625,220,0.68,221,0.724,222,0.004,223,0.004,226,0.274,227,2.147,235,1.288,243,1.432,246,1.653,248,1,249,2.506,250,2.415,254,1.516,255,1.225,259,2.506,260,0.389,270,2.095,274,3.029,276,2.089,277,1.883,284,2.64,293,0.625,309,2.654,310,3.893,311,2.67,312,2.415,315,1.029,318,1.61,322,3.957,323,2.654,367,3.298,383,5.151,389,2.649,417,2.881,459,2.089,466,1.781,499,1.196,516,3.603,537,0.838,541,0.933,548,0.906,549,2.496,553,3.219,561,1.516,562,2.095,569,2.861,572,1.393,575,0.804,602,1.651,608,0.308,611,2.641,637,0.953,641,1.837,648,3.703,670,4.27,726,0.755,745,4.003,763,2.317,768,2.003,769,2.755,785,2.897,787,2.44,790,2.152,791,1.561,792,1.356,793,1.562,803,1.288,806,4.187,811,2.128,816,2.387,819,1.719,829,1.432,830,4.154,831,1.921,832,2.095,836,1.065,862,2.654,868,1.915,885,1.921,886,3.98,888,1.562,903,3.141,907,1.466,952,6.523,975,1.516,976,3.98,993,4.003,1004,1.921,1007,3.768,1024,3.482,1028,2.095,1072,1.356,1082,4.178,1100,3.456,1102,2.611,1174,2.39,1176,2.943,1177,1.61,1178,1.663,1191,3.682,1193,2.861,1194,2.711,1195,2.659,1237,1.781,1274,2.788,1287,3.003,1448,2.322,1465,1.921,1542,4.003,1549,2.51,1590,2.494,1604,2.654,1632,2.67,1634,3.456,1635,2.901,1636,2.034,1637,2.494,1638,2.901,1640,2.654,1670,3.949,1764,2.095,1776,2.322,2212,2.494,2221,3.703,2273,3.482,2571,4.35,2615,2.67,2619,2.322,2642,4.35,2661,2.654,2665,2.67,2666,3.456,2668,2.415,2669,2.322,2673,2.901,2674,5.894,2675,4.913,2676,4.614,2677,5.894,2678,5.894,2679,5.894,2680,5.894,2681,5.894,2682,5.799,2683,4.35,2684,6.548,2685,6.548,2686,4.913,2687,3.276,2688,4.913,2689,4.396,2690,4.913,2691,3.276,2692,3.703,2693,4.35,2694,3.276,2695,3.276,2696,6.212,2697,3.276,2698,4.913,2699,3.276,2700,3.276,2701,3.276,2702,3.276,2703,3.276,2704,3.276,2705,3.276,2706,3.276,2707,3.276,2708,3.276,2709,4.35,2710,4.35,2711,3.276,2712,3.276,2713,2.2,2714,2.901,2715,1.719,2716,3.276,2717,3.276,2718,2.901,2719,3.276,2720,3.276,2721,3.276,2722,3.276,2723,3.276,2724,3.276,2725,3.276,2726,5.799,2727,5.894,2728,3.276,2729,3.276,2730,2.901,2731,4.913,2732,3.276,2733,3.276,2734,3.276,2735,3.276,2736,3.276,2737,2.47,2738,4.35,2739,3.276,2740,5.22,2741,4.913,2742,3.276,2743,4.913,2744,3.276,2745,3.276,2746,2.47,2747,2.901,2748,3.276,2749,3.276,2750,2.901,2751,2.809,2752,3.276,2753,2.901,2754,3.276,2755,5.799,2756,2.67,2757,2.901,2758,3.276,2759,3.276,2760,3.276,2761,3.276,2762,2.654,2763,4.35,2764,2.47,2765,2.901,2766,2.901,2767,3.276]],["title/components/IssueFilterComponent.html",[0,0.085,136,0.896]],["body/components/IssueFilterComponent.html",[0,0.115,1,0.577,2,0.591,3,0.048,4,0.082,5,0.456,6,0.641,7,0.628,8,0.602,9,0.043,11,0.565,16,0.554,17,1.354,18,1.316,19,0.565,20,0.477,21,0.647,23,0.647,25,0.168,26,0.452,29,4.099,30,0.591,37,0.733,39,0.748,40,0.008,41,0.553,42,0.194,43,0.6,45,0.921,46,0.967,49,0.617,50,1.373,51,1.279,53,0.133,54,0.196,56,0.577,57,0.934,60,0.059,61,0.011,86,1.941,87,2.142,89,2.313,90,1.666,92,1.117,93,1.924,95,0.628,96,0.859,97,0.841,98,0.477,99,1.316,100,0.628,101,1.742,102,0.565,103,1.22,104,0.954,105,0.896,106,0.577,107,0.628,108,0.577,109,0.565,110,0.628,111,0.577,112,0.628,113,0.542,114,0.554,115,0.782,116,0.565,117,0.542,118,1.367,119,1.193,120,0.554,121,0.043,122,0.565,123,0.963,124,0.577,125,0.577,126,0.52,127,0.628,128,0.554,129,0.628,130,0.577,131,0.628,132,0.577,133,0.628,134,0.565,135,0.628,136,1.446,137,0.628,138,0.399,139,0.628,140,0.565,141,0.274,142,0.628,143,0.577,144,0.628,145,0.577,146,1.193,147,0.577,148,0.628,149,0.577,150,1.193,151,0.577,152,0.628,153,0.59,154,0.628,155,0.554,156,0.628,157,0.577,158,0.628,159,1.31,160,0.531,161,0.628,162,0.577,163,0.934,164,0.974,165,0.577,166,0.628,167,0.554,168,0.744,169,0.628,170,0.565,171,0.577,172,0.628,173,0.577,174,0.628,175,0.565,176,0.565,177,0.554,178,0.628,179,0.565,180,0.628,181,0.531,182,1.325,183,0.554,184,0.628,185,0.554,186,1.256,187,0.565,188,0.577,189,0.571,190,0.542,191,0.829,192,0.577,193,0.59,194,0.628,195,0.577,196,1.136,197,0.628,198,0.577,199,0.628,200,0.542,201,0.577,202,0.577,203,1.136,204,0.628,205,0.577,206,0.619,207,1.219,208,0.542,209,0.565,210,0.628,211,0.554,212,0.628,213,0.554,214,0.628,215,0.542,216,0.628,217,0.542,218,0.628,219,0.542,220,0.59,221,0.628,222,0.004,223,0.004,226,0.608,231,0.923,248,0.828,259,1.208,260,0.917,274,2.039,284,2.213,301,1.397,310,2.039,311,1.545,312,1.397,315,0.446,367,1.908,371,1.218,389,1.277,402,1.737,417,2.584,436,3.571,515,2.258,538,3.202,548,1.211,549,1.4,561,2.814,569,1.926,575,1.892,583,2.313,594,2.584,595,1.659,608,0.683,617,3.307,676,2.142,677,2.485,726,1.244,727,1.737,766,1.609,790,1.037,791,0.903,792,1.176,806,4.088,811,1.977,816,2.001,817,2.296,819,2.313,826,3.376,833,1.176,835,1.442,836,0.923,841,2.518,863,1.602,868,1.754,877,1.208,900,2.818,903,3.889,907,1.622,965,3.452,1002,3.124,1032,1.176,1035,1.602,1065,2.32,1068,2.9,1072,2.726,1100,1.666,1102,1.795,1111,1.602,1174,2.404,1176,2.734,1177,1.397,1178,2.237,1179,2.101,1191,3.656,1193,2.359,1194,1.176,1195,2.561,1214,1.037,1229,3.223,1249,1.117,1274,1.971,1303,1.491,1448,2.014,1464,3.322,1465,2.584,1470,2.391,1474,2.588,1475,3.266,1485,2.818,1490,2.142,1509,3.475,1511,2.142,1539,4.312,1541,2.818,1542,2.935,1549,2.07,1551,1.737,1581,2.935,1590,1.442,1631,1.602,1632,1.545,1634,1.666,1636,1.176,1637,1.442,1670,3.237,1738,2.396,1774,1.571,1794,2.142,1807,1.874,1899,1.666,1985,3.124,2136,2.694,2173,1.737,2310,2.818,2325,1.817,2340,3.3,2354,2.485,2357,1.602,2358,1.602,2359,1.666,2386,1.817,2531,6.08,2615,2.396,2638,1.817,2665,2.396,2668,2.167,2669,3.124,2689,2.959,2747,2.516,2751,1.354,2768,2.302,2769,6.652,2770,5.399,2771,4.408,2772,8.578,2773,5.399,2774,6.766,2775,5.399,2776,3.625,2777,4.408,2778,4.408,2779,6.084,2780,4.408,2781,4.408,2782,4.408,2783,4.408,2784,4.781,2785,3.322,2786,5.399,2787,2.842,2788,2.842,2789,3.827,2790,2.842,2791,3.903,2792,4.408,2793,2.842,2794,7.783,2795,4.408,2796,2.842,2797,3.903,2798,2.842,2799,4.408,2800,2.818,2801,4.408,2802,2.842,2803,3.903,2804,4.408,2805,2.842,2806,4.408,2807,6.967,2808,2.842,2809,4.408,2810,4.408,2811,4.408,2812,4.408,2813,2.842,2814,4.408,2815,2.842,2816,3.571,2817,2.842,2818,4.928,2819,4.408,2820,2.842,2821,2.842,2822,2.842,2823,2.842,2824,2.959,2825,2.959,2826,2.516,2827,4.374,2828,4.07,2829,4.781,2830,1.817,2831,1.817,2832,2.516,2833,2.516,2834,2.302,2835,3.571,2836,2.302,2837,2.516,2838,6.169,2839,2.516,2840,5.831,2841,4.209,2842,4.209,2843,2.516,2844,4.209,2845,5.831,2846,2.516,2847,1.908,2848,2.959,2849,2.014,2850,2.516,2851,1.817,2852,1.908,2853,2.516,2854,2.842,2855,2.694,2856,2.842,2857,2.842,2858,2.842,2859,2.842,2860,2.842,2861,2.842,2862,2.842,2863,2.842,2864,5.399,2865,4.408,2866,4.667,2867,4.408,2868,4.408,2869,2.842,2870,4.408,2871,2.842,2872,2.842,2873,2.842,2874,2.842,2875,4.408,2876,2.842,2877,2.842,2878,2.842,2879,2.842,2880,2.842,2881,2.842,2882,4.408,2883,4.408,2884,4.408,2885,4.408,2886,4.408,2887,4.408,2888,2.842,2889,2.302,2890,2.302,2891,2.842,2892,1.737,2893,2.516,2894,2.842,2895,6.084,2896,4.408,2897,1.817,2898,4.408,2899,1.602]],["title/interfaces/IssueFolderNode.html",[121,0.068,1275,2.54]],["body/interfaces/IssueFolderNode.html",[0,0.152,3,0.09,4,0.122,5,1.102,9,0.104,25,0.1,26,0.574,40,0.008,42,0.193,49,0.666,53,0.199,60,0.142,61,0.017,104,0.627,115,0.627,121,0.139,123,0.737,138,0.741,141,0.663,168,0.988,189,0.787,191,0.811,222,0.006,223,0.006,234,1.134,248,0.907,260,0.627,284,2.424,296,4.117,316,3.094,515,1.64,529,1.439,541,1.502,548,1.319,595,2.417,608,0.832,622,1.837,720,1.927,725,1.974,817,2.244,836,1.715,907,1.764,953,3.226,1065,1.954,1066,3.345,1069,3.645,1070,3.435,1093,1.974,1197,3.244,1205,4.473,1206,2.372,1207,2.976,1208,4.752,1209,5.034,1210,3.636,1211,3.272,1212,2.869,1213,2.515,1214,3.3,1215,3.272,1216,2.679,1217,2.77,1218,4.147,1219,4.24,1220,4.473,1221,3.226,1222,3.226,1223,3.226,1224,3.226,1225,3.226,1226,3.226,1227,3.226,1228,3.226,1229,3.176,1230,3.226,1231,3.226,1232,4.196,1233,3.75,1234,3.374,1235,3.094,1236,2.244,1237,3.731,1238,3.374,1239,3.374,1240,1.795,1241,2.442,1242,2.515,1243,3.226,1244,2.869,1245,2.594,1246,2.869,1247,3.226,1248,3.374,1249,2.075,1250,3.374,1251,2.679,1252,3.374,1253,2.306,1254,3.374,1255,2.976,1256,3.374,1257,3.226,1258,3.374,1259,4.302,1260,2.77,1261,2.976,1262,2.515,1263,3.871,1264,3.374,1265,3.374,1266,3.374,1267,4.025,1268,3.374,1269,4.389,1270,3.374,1271,3.374,1272,3.374,1273,3.226,1274,1.927,1275,4.302,1276,5.489,1277,3.374,1278,3.374,1279,4.389,1280,3.374,1281,4.389,1282,4.389,1283,3.374,1284,3.374,1285,4.147,1286,4.389,1287,3.226,1288,4.196,1289,4.389,1290,3.374,1291,4.556,1292,3.603,1293,3.374,1294,3.226,1295,3.374,1296,3.374,1297,3.374,1298,3.226,1299,4.025,1300,3.226,1301,2.976,1302,3.226,1303,2.77]],["title/injectables/IssueGraphApiService.html",[532,1.082,2900,3.395]],["body/injectables/IssueGraphApiService.html",[0,0.168,3,0.082,4,0.073,9,0.073,25,0.091,30,0.868,33,0.694,37,0.701,39,0.946,40,0.008,41,0.525,42,0.169,43,0.701,45,0.86,49,0.673,53,0.21,54,0.334,60,0.134,61,0.016,63,1.073,88,2.996,121,0.127,123,0.838,141,0.866,182,1.366,186,1.235,196,1.364,206,1.095,222,0.006,223,0.006,226,0.542,231,2.722,234,1.142,260,0.927,281,1.469,293,0.922,301,2.376,311,3.52,318,3.184,371,1.761,515,2.528,529,1.766,532,1.556,537,1.237,540,2.001,541,1.376,544,2.172,547,2.428,548,1.199,555,2.112,572,2.754,573,3.52,575,2.161,608,0.787,615,3.652,622,2.255,646,2.001,691,1.406,725,2.422,752,3.399,841,2.681,868,2.104,907,1.454,948,2.725,1093,3.133,1214,2.667,1291,4.401,1292,4.096,1424,3.288,1449,3.399,1474,3.293,1779,3.961,1861,4.882,2019,3.399,2148,5.838,2149,5.24,2157,4.401,2161,4.591,2167,4.882,2199,5.883,2222,5.735,2242,5.247,2274,4.912,2285,4.348,2289,4.517,2301,4.141,2303,2.627,2305,4.348,2309,2.954,2312,5.12,2317,5.24,2327,3.959,2900,5.507,2901,4.279,2902,6.477,2903,7.804,2904,5.735,2905,5.735,2906,5.735,2907,6.477,2908,4.833,2909,7.804,2910,7.305,2911,7.804,2912,7.305,2913,7.804,2914,7.305,2915,7.804,2916,4.833,2917,6.477,2918,6.477,2919,4.833,2920,6.911,2921,6.477,2922,4.833,2923,5.735,2924,6.477,2925,6.477,2926,6.477,2927,6.477,2928,6.477,2929,6.477,2930,6.477,2931,6.477,2932,6.911,2933,6.477,2934,4.833,2935,6.477,2936,4.833,2937,6.477,2938,6.477,2939,6.477,2940,5.735,2941,6.477,2942,6.477,2943,7.804,2944,4.833,2945,4.833,2946,4.833,2947,4.833,2948,4.833,2949,3.915,2950,4.833,2951,4.833,2952,4.833,2953,4.833,2954,4.833,2955,6.477,2956,4.833,2957,4.833,2958,6.477,2959,4.833,2960,4.833,2961,4.833,2962,4.833,2963,4.833,2964,4.833,2965,4.833,2966,4.833,2967,4.833,2968,4.833]],["title/injectables/IssueGraphClassSettersService.html",[532,1.082,2969,3.395]],["body/injectables/IssueGraphClassSettersService.html",[3,0.097,4,0.086,9,0.086,25,0.107,30,0.965,37,0.49,39,0.611,40,0.008,41,0.51,42,0.118,43,0.49,45,0.627,46,0.836,49,0.515,53,0.204,54,0.393,60,0.118,61,0.024,123,0.611,138,1.011,141,0.845,168,1.046,222,0.006,223,0.006,226,0.603,246,1.559,260,0.856,281,1.729,295,4.289,296,4.527,315,1.376,532,1.731,545,3.237,555,2.486,575,1.767,608,0.845,622,2.508,637,2.096,646,2.355,720,2.63,841,3.44,865,4.872,957,4.516,1052,4.403,1101,5.312,1206,3.237,1215,3.768,1216,2.888,1217,2.986,1240,2.45,1241,3.332,1251,4.779,1299,4.224,1301,3.208,1303,2.986,1859,3.915,2136,5.079,2138,3.656,2463,5.88,2969,5.43,2970,6.379,2971,5.836,2972,5.038,2973,5.836,2974,5.836,2975,7.755,2976,5.43,2977,7.204,2978,7.204,2979,7.095,2980,5.689,2981,6.379,2982,6.379,2983,7.204,2984,3.82,2985,8.31,2986,7.905,2987,8.758,2988,5.038,2989,5.43,2990,5.689,2991,5.689,2992,5.689,2993,7.905,2994,5.038,2995,5.038,2996,7.591,2997,5.689,2998,5.689,2999,5.689]],["title/components/IssueGraphControlsComponent.html",[0,0.085,140,0.896]],["body/components/IssueGraphControlsComponent.html",[0,0.166,1,0.696,2,0.897,3,0.058,4,0.052,5,0.55,6,0.773,7,0.757,8,0.726,9,0.052,11,0.682,14,1.011,16,0.668,17,1.366,18,1.33,19,0.682,20,1.199,21,0.746,23,0.746,25,0.065,26,0.425,27,1.307,29,2.865,30,0.681,33,0.492,36,3.124,37,0.758,39,0.368,40,0.008,41,0.483,42,0.155,43,0.295,45,0.738,46,1.1,49,0.363,50,1.369,51,1.165,53,0.211,54,0.237,55,1.041,56,0.696,57,1.077,60,0.071,61,0.009,62,1.193,63,1.169,85,1.497,86,0.955,93,1.811,95,0.757,96,0.99,97,0.969,98,0.575,99,1.449,100,0.757,101,1.828,102,0.682,103,1.06,104,0.946,105,1.032,106,0.696,107,0.757,108,0.696,109,0.682,110,0.757,111,0.696,112,0.757,113,0.654,114,0.668,115,0.921,116,0.682,117,0.654,118,1.075,119,1.338,120,0.668,121,0.052,122,0.682,123,0.991,124,0.696,125,0.696,126,0.627,127,0.757,128,0.668,129,0.757,130,0.696,131,0.757,132,0.696,133,0.757,134,0.682,135,0.757,136,0.682,137,0.757,138,1.003,139,0.757,140,1.332,141,0.92,142,0.757,143,0.696,144,0.757,145,0.696,146,1.338,147,0.696,148,0.757,149,0.696,150,1.338,151,0.696,152,0.757,153,0.711,154,0.757,155,1.304,156,0.757,157,0.696,158,0.757,159,0.682,160,0.64,161,0.757,162,0.696,163,1.077,164,1.123,165,0.696,166,0.757,167,0.668,168,0.387,169,0.757,170,0.682,171,0.696,172,0.757,173,0.696,174,0.757,175,0.682,176,0.682,177,0.668,178,0.757,179,0.682,180,0.757,181,0.64,182,0.538,183,0.668,184,0.757,185,0.668,186,0.969,187,0.682,188,0.696,189,0.477,190,0.654,191,0.526,192,0.696,193,0.711,194,0.757,195,0.696,196,0.64,197,0.757,198,0.696,199,0.757,200,0.654,201,0.696,202,0.696,203,1.25,204,0.757,205,0.696,206,0.481,207,0.575,208,0.654,209,0.682,210,0.757,211,0.668,212,0.757,213,0.668,214,0.757,215,0.654,216,0.757,217,0.654,218,0.757,219,0.654,220,0.711,221,0.757,222,0.004,223,0.006,226,0.287,234,1.051,243,2.22,248,0.983,259,2.574,268,1.855,276,2.16,277,2.567,295,2.583,296,1.685,310,1.585,311,3.886,312,2.497,315,1.25,367,4.065,499,1.251,501,6.668,536,2.429,537,0.877,538,2.321,540,1.419,541,0.976,547,2.012,557,3.273,558,3.83,561,1.585,562,2.191,567,1.863,569,2.926,599,3.29,608,0.322,675,1.932,684,4.391,691,0.997,763,2.38,772,1.932,787,1.419,803,1.347,816,2.035,821,2.301,828,2.801,829,1.497,844,2.009,868,1.967,873,2.801,881,2.429,907,0.682,933,4.116,978,2.35,1072,2.506,1093,1.9,1094,2.429,1102,2.012,1103,4.578,1106,4.563,1176,2.283,1183,2.776,1195,2.642,1196,4.291,1197,2.16,1201,1.799,1206,3.976,1214,2.21,1253,3.387,1274,1.855,1402,4.391,1403,2.009,1407,4.065,1458,2.776,1474,1.347,1486,3.83,1493,2.009,1509,3.586,1549,1.314,1590,3.399,1632,2.761,1670,3.811,1677,2.191,1836,2.979,1880,3.105,1937,2.979,1977,2.632,2144,3.248,2146,2.095,2148,2.301,2157,4.223,2197,2.429,2199,6.001,2200,4.499,2201,2.776,2212,3.935,2262,2.583,2263,1.932,2264,2.301,2303,2.761,2312,3.105,2319,4.956,2354,4.223,2357,1.932,2358,1.932,2359,2.009,2362,4.065,2665,1.863,2668,1.685,2676,3.776,2715,1.799,2751,1.633,2756,1.863,2800,3.248,2816,5.793,2949,2.776,3000,3.035,3001,3.411,3002,6.696,3003,5.08,3004,5.08,3005,5.08,3006,7.489,3007,4.116,3008,4.904,3009,4.904,3010,5.08,3011,6.054,3012,5.08,3013,4.904,3014,6.054,3015,5.361,3016,6.696,3017,5.929,3018,6.696,3019,6.696,3020,5.08,3021,3.427,3022,5.08,3023,6.054,3024,4.499,3025,5.08,3026,5.08,3027,5.08,3028,3.427,3029,3.427,3030,5.08,3031,2.579,3032,4.499,3033,3.427,3034,5.08,3035,5.08,3036,3.427,3037,3.427,3038,3.427,3039,3.427,3040,5.08,3041,3.427,3042,5.08,3043,3.427,3044,3.427,3045,6.696,3046,3.427,3047,3.427,3048,3.427,3049,3.035,3050,3.427,3051,3.035,3052,2.776,3053,3.427,3054,3.427,3055,3.427,3056,2.301,3057,3.427,3058,3.427,3059,3.427,3060,3.427,3061,3.427,3062,5.08,3063,3.427,3064,2.776,3065,3.035,3066,3.035,3067,3.427,3068,3.427,3069,5.08,3070,3.427,3071,3.427,3072,3.427,3073,3.427,3074,3.427,3075,3.427,3076,5.08,3077,3.035,3078,3.035,3079,3.427,3080,3.427,3081,3.427,3082,3.427,3083,2.429,3084,3.427,3085,3.035,3086,5.08,3087,4.499,3088,4.499,3089,5.08,3090,5.08,3091,2.776,3092,2.301,3093,4.499,3094,3.427,3095,3.427,3096,4.281,3097,5.08,3098,2.776,3099,3.427,3100,3.035,3101,3.035]],["title/injectables/IssueGraphDynamicTemplateRegistryService.html",[532,1.082,3102,3.395]],["body/injectables/IssueGraphDynamicTemplateRegistryService.html",[3,0.106,4,0.095,5,1.505,9,0.095,25,0.118,30,1.023,37,0.538,39,0.671,40,0.008,41,0.403,42,0.13,43,0.538,45,0.688,46,1.211,53,0.216,54,0.432,60,0.13,61,0.016,138,1.071,141,0.865,168,0.706,222,0.007,223,0.007,226,0.639,281,1.898,443,4.149,532,1.834,545,3.431,555,2.729,575,1.532,608,0.586,622,2.658,637,2.221,646,2.585,753,1.409,816,1.898,841,3.555,904,4.305,907,1.641,957,4.149,970,4.708,1052,4.666,1101,4.88,1197,2.655,1206,3.431,1215,4.094,1216,3.17,1233,3.07,1251,4.821,1273,3.817,1537,5.754,2463,6.017,2973,6.184,2974,6.184,2976,5.754,2984,4.193,3102,5.754,3103,6.76,3104,6.184,3105,6.756,3106,5.53,3107,7.605,3108,7.634,3109,7.634,3110,6.245,3111,6.245,3112,6.245,3113,6.76,3114,5.53,3115,5.059,3116,6.245,3117,6.245,3118,7.634,3119,6.245,3120,6.245,3121,6.245,3122,6.245,3123,6.245,3124,6.245,3125,6.245,3126,6.245]],["title/injectables/IssueGraphLinkHandlesService.html",[532,1.082,3127,3.395]],["body/injectables/IssueGraphLinkHandlesService.html",[3,0.087,4,0.139,9,0.078,25,0.097,30,0.903,37,0.648,39,0.808,40,0.008,41,0.485,42,0.18,43,0.648,45,0.829,46,1.105,53,0.204,54,0.354,60,0.106,61,0.013,63,1.219,138,0.945,141,0.851,168,1.007,222,0.006,223,0.006,226,0.668,260,0.801,281,1.558,296,4.592,315,1.255,317,1.918,532,1.619,545,3.028,555,2.241,575,2.036,596,5.457,608,0.779,622,2.345,637,1.96,646,2.123,747,5.078,753,2.058,841,3.647,903,5.108,907,1.59,957,4.719,970,7.166,1052,4.118,1066,2.789,1070,2.864,1101,5.108,1206,3.591,1215,3.808,1216,2.603,1217,2.691,1251,4.728,1285,4.788,1551,4.884,2463,5.719,2973,5.457,2974,5.457,2976,5.078,2979,6.901,2981,5.965,2984,3.443,2989,3.865,3113,8.026,3114,4.541,3115,6.095,3127,5.078,3128,7.075,3129,6.473,3130,4.541,3131,6.737,3132,6.737,3133,6.737,3134,6.737,3135,8.81,3136,5.128,3137,6.723,3138,5.128,3139,8.518,3140,5.128,3141,6.737,3142,5.128,3143,6.662,3144,5.965,3145,7.523,3146,5.457,3147,5.128,3148,5.128,3149,5.128,3150,5.128,3151,5.128,3152,5.128,3153,5.128,3154,5.128,3155,5.128,3156,5.128,3157,7.99,3158,6.737,3159,6.737,3160,7.99,3161,5.128,3162,5.128,3163,6.737,3164,5.128,3165,5.128]],["title/injectables/IssueGraphStateService.html",[532,1.082,1402,2.641]],["body/injectables/IssueGraphStateService.html",[0,0.152,2,0.919,3,0.09,4,0.08,9,0.08,25,0.1,26,0.574,30,0.919,33,0.757,37,0.722,39,0.868,40,0.008,41,0.521,42,0.174,43,0.696,45,0.89,49,0.655,51,1.213,53,0.215,54,0.365,60,0.109,61,0.013,63,0.775,121,0.13,123,0.566,141,0.904,186,1.309,222,0.006,223,0.006,226,0.441,231,2.229,234,1.07,248,0.906,281,1.603,293,1.006,317,1.501,529,2.203,532,1.649,536,5.725,537,1.35,538,3.434,539,3.541,540,2.183,547,3.106,548,1.241,555,2.304,556,4.239,557,3.915,573,3.729,575,1.871,608,0.716,635,3.084,637,1.996,646,2.183,675,3.869,684,5.125,725,2.566,902,4.864,927,4.607,933,5.559,1093,3.211,1291,5.165,1292,4.505,1402,4.023,1493,5.299,1509,3.174,1836,4.023,1880,5.119,2019,3.601,2157,4.555,2158,4.607,2170,4.876,2197,4.864,2244,3.975,2251,3.975,2274,5.033,2303,2.866,2319,4.387,2354,4.841,2692,5.172,2800,5.164,2900,6.089,2904,6.076,2905,4.67,2906,6.076,2920,7.153,2949,4.272,3008,4.272,3009,4.272,3013,6.543,3049,4.67,3052,4.272,3065,6.076,3066,6.076,3083,6.282,3166,4.67,3167,5.274,3168,6.861,3169,6.861,3170,6.861,3171,5.274,3172,6.861,3173,5.274,3174,6.861,3175,7.627,3176,8.077,3177,6.861,3178,6.076,3179,8.077,3180,6.861,3181,6.861,3182,6.861,3183,6.861,3184,6.861,3185,5.274,3186,5.274,3187,3.975,3188,6.861,3189,5.274,3190,5.274,3191,5.274,3192,5.274,3193,5.274,3194,5.274,3195,5.274,3196,5.274,3197,5.274,3198,5.274,3199,5.274,3200,5.274,3201,5.274,3202,5.274]],["title/classes/IssueGroupContainerBehaviour.html",[61,0.011,3203,3.395]],["body/classes/IssueGroupContainerBehaviour.html",[3,0.081,4,0.072,9,0.072,14,1.277,25,0.146,26,0.537,30,0.86,37,0.719,39,0.779,40,0.008,41,0.468,42,0.151,43,0.625,45,0.799,46,1.065,49,0.66,50,1.326,51,1.09,53,0.205,60,0.099,61,0.012,82,4.548,83,2.913,86,2.021,93,1.699,123,0.512,141,0.619,168,1.02,189,0.603,193,0.989,203,1.449,222,0.006,223,0.006,248,0.862,260,1.055,268,2.648,293,0.909,315,1.139,317,2.065,371,1.075,541,1.357,563,2.687,595,1.3,608,0.448,611,3.438,691,1.867,720,1.74,747,3.592,753,1.075,816,1.448,836,1.548,907,1.696,915,3.861,978,2.205,1066,3.003,1070,2.728,1072,3.212,1074,2.794,1206,3.832,1214,1.74,1215,3.699,1216,2.419,1217,2.501,1219,4.475,1233,3.566,1240,1.621,1242,3.058,1251,4.743,1267,3.762,1274,2.957,1317,3.2,1549,2.975,1664,3.257,1665,4.548,2177,3.2,2327,2.913,2663,4.548,2984,3.2,3146,3.861,3203,3.592,3204,6.907,3205,3.861,3206,6.872,3207,6.416,3208,6.424,3209,6.424,3210,6.416,3211,6.416,3212,6.416,3213,4.766,3214,4.766,3215,4.766,3216,5.682,3217,7.55,3218,7.987,3219,7.777,3220,4.766,3221,5.682,3222,4.766,3223,4.766,3224,4.766,3225,4.22,3226,4.308,3227,4.22,3228,5.682,3229,5.682,3230,3.861,3231,4.22,3232,4.22,3233,4.22,3234,3.378,3235,3.861,3236,4.22,3237,5.682,3238,3.592,3239,4.22,3240,5.682,3241,4.22,3242,4.22,3243,4.22,3244,7.172,3245,4.22,3246,6.872,3247,7.172,3248,7.172,3249,5.682,3250,4.22,3251,4.22,3252,4.22,3253,7.172,3254,7.172,3255,8.153,3256,5.682,3257,5.682,3258,5.682,3259,6.424,3260,4.22,3261,4.22,3262,4.22,3263,5.682,3264,5.682,3265,3.861,3266,4.22,3267,4.22,3268,4.22,3269,4.22,3270,4.22,3271,4.22,3272,5.682,3273,4.22,3274,4.22,3275,5.682,3276,4.22,3277,4.22,3278,4.22,3279,4.22,3280,4.22,3281,4.22,3282,4.22,3283,5.682,3284,4.22,3285,4.22]],["title/interfaces/IssueGroupContainerNode.html",[121,0.068,1219,2.364]],["body/interfaces/IssueGroupContainerNode.html",[0,0.152,3,0.09,4,0.122,5,1.102,9,0.104,25,0.1,26,0.574,40,0.008,42,0.19,49,0.666,53,0.199,60,0.142,61,0.017,104,0.627,115,0.627,121,0.139,123,0.737,138,0.741,141,0.663,168,0.988,189,0.821,191,0.811,222,0.006,223,0.006,234,1.134,248,0.907,260,0.627,284,2.424,296,4.117,316,3.094,515,1.64,529,1.439,541,1.502,548,1.319,595,2.417,608,0.832,622,1.837,720,1.927,725,1.974,817,2.244,836,1.715,907,1.764,953,3.226,1065,1.954,1066,3.345,1069,3.713,1070,3.435,1093,1.974,1197,3.244,1205,4.473,1206,2.372,1207,2.976,1208,4.752,1209,5.034,1210,3.636,1211,3.272,1212,2.869,1213,2.515,1214,3.236,1215,3.272,1216,2.679,1217,2.77,1218,4.147,1219,4.396,1220,4.473,1221,3.226,1222,3.226,1223,3.226,1224,3.226,1225,3.226,1226,3.226,1227,3.226,1228,3.226,1229,3.176,1230,3.226,1231,3.226,1232,4.196,1233,3.75,1234,3.374,1235,3.094,1236,2.244,1237,3.731,1238,3.374,1239,3.374,1240,1.795,1241,2.442,1242,2.515,1243,3.226,1244,2.869,1245,2.594,1246,2.869,1247,3.226,1248,3.374,1249,2.075,1250,3.374,1251,2.679,1252,3.374,1253,2.306,1254,3.374,1255,2.976,1256,3.374,1257,3.226,1258,3.374,1259,4.302,1260,2.77,1261,2.976,1262,2.515,1263,3.871,1264,3.374,1265,3.374,1266,3.374,1267,4.025,1268,3.374,1269,5.355,1270,3.374,1271,3.374,1272,3.374,1273,3.226,1274,1.927,1275,3.871,1276,4.878,1277,3.374,1278,3.374,1279,4.389,1280,3.374,1281,4.389,1282,4.389,1283,3.374,1284,3.374,1285,4.147,1286,4.389,1287,3.226,1288,4.196,1289,4.389,1290,3.374,1291,4.556,1292,3.603,1293,3.374,1294,3.226,1295,3.374,1296,3.374,1297,3.374,1298,3.226,1299,4.025,1300,3.226,1301,2.976,1302,3.226,1303,2.77]],["title/classes/IssueGroupContainerParentBehaviour.html",[61,0.011,3234,3.192]],["body/classes/IssueGroupContainerParentBehaviour.html",[3,0.083,4,0.074,9,0.074,14,1.301,25,0.148,26,0.547,30,0.876,33,0.704,37,0.676,39,0.702,40,0.008,41,0.422,42,0.136,43,0.563,45,0.54,46,0.72,49,0.651,50,1.195,51,0.982,53,0.207,60,0.102,61,0.012,82,4.635,83,2.996,86,2.05,93,1.747,123,0.526,141,0.71,168,1.009,189,0.614,193,1.017,203,1.466,222,0.006,223,0.006,226,0.41,248,0.874,260,1.06,268,2.686,293,0.935,315,1.027,317,2.094,371,1.106,541,1.395,563,3.687,595,1.337,608,0.46,611,3.463,691,1.902,720,1.789,747,3.695,753,1.106,816,1.49,836,1.593,907,1.709,915,3.971,978,3.025,1066,3.046,1070,2.78,1072,3.249,1074,2.874,1206,3.675,1214,1.789,1215,3.741,1216,2.488,1217,2.572,1219,3.861,1233,2.409,1240,1.667,1242,3.116,1251,4.626,1267,3.834,1274,2.985,1317,4.39,1549,3.009,1664,3.319,1665,4.635,2177,3.291,2327,2.996,2663,4.635,2984,3.291,3146,3.971,3204,6.624,3205,3.971,3206,7.241,3208,6.515,3209,6.515,3216,4.34,3217,7.241,3218,7.725,3219,7.604,3221,4.34,3225,4.34,3226,5.27,3227,4.34,3228,5.79,3229,5.79,3230,5.297,3231,5.79,3232,5.79,3233,5.79,3234,4.635,3235,5.297,3236,5.79,3237,6.95,3238,3.695,3239,4.34,3240,5.79,3241,4.34,3242,4.34,3243,4.34,3244,7.241,3245,4.34,3246,6.95,3247,7.241,3248,7.241,3249,5.79,3250,4.34,3251,4.34,3252,4.34,3253,7.241,3254,7.241,3255,8.18,3256,5.79,3257,5.79,3258,5.79,3259,6.515,3260,4.34,3261,4.34,3262,4.34,3263,5.79,3264,5.79,3265,3.971,3266,4.34,3267,4.34,3268,4.34,3269,4.34,3270,4.34,3271,4.34,3272,5.79,3273,4.34,3274,4.34,3275,5.79,3276,4.34,3277,4.34,3278,4.34,3279,4.34,3280,4.34,3281,4.34,3282,4.34,3283,5.79,3284,4.34,3285,4.34,3286,6.538,3287,4.902,3288,6.538,3289,4.902,3290,4.902]],["title/components/IssueIconComponent.html",[0,0.085,143,0.915]],["body/components/IssueIconComponent.html",[0,0.158,1,0.987,2,0.871,3,0.083,4,0.074,5,0.78,6,1.096,7,1.074,8,1.03,9,0.074,11,0.967,16,0.947,17,1.386,18,1.35,19,0.967,20,0.815,21,0.955,23,0.955,25,0.092,30,0.871,37,0.631,40,0.008,41,0.526,42,0.101,45,0.716,49,0.347,53,0.16,54,0.336,56,0.987,57,1.377,60,0.101,61,0.012,95,1.074,96,1.266,97,1.24,98,0.815,99,1.692,100,1.074,101,1.968,102,0.967,103,0.851,104,1.035,105,1.321,106,0.987,107,1.074,108,0.987,109,0.967,110,1.074,111,0.987,112,1.074,113,0.927,114,0.947,115,0.969,116,0.967,117,0.927,118,1.044,119,1.619,120,0.947,121,0.074,122,0.967,123,1.023,124,0.987,125,0.987,126,0.888,127,1.074,128,0.947,129,1.074,130,0.987,131,1.074,132,0.987,133,1.074,134,0.967,135,1.074,136,0.967,137,1.074,138,0.682,139,1.074,140,0.967,141,0.469,142,1.074,143,1.589,144,1.074,145,0.987,146,1.619,147,0.987,148,1.074,149,0.987,150,1.619,151,0.987,152,1.074,153,1.008,154,1.074,155,0.947,156,1.074,157,0.987,158,1.074,159,0.967,160,0.907,161,1.074,162,0.987,163,1.377,164,1.436,165,0.987,166,1.074,167,0.947,168,0.549,169,1.074,170,0.967,171,0.987,172,1.074,173,0.987,174,1.074,175,0.967,176,0.967,177,0.947,178,1.074,179,0.967,180,1.074,181,0.907,182,0.763,183,0.947,184,1.074,185,0.947,186,1.24,187,0.967,188,0.987,189,0.61,190,0.927,191,0.746,192,0.987,193,1.008,194,1.074,195,0.987,196,0.907,197,1.074,198,0.987,199,1.074,200,0.927,201,0.987,202,0.987,203,0.907,204,1.074,205,0.987,206,0.682,207,0.815,208,0.927,209,0.967,210,1.074,211,0.947,212,1.074,213,0.947,214,1.074,215,0.927,216,1.074,217,0.927,218,1.074,219,0.927,220,1.008,221,1.074,222,0.006,223,0.006,226,0.406,260,0.997,268,1.774,274,3.007,310,3.772,311,3.533,312,3.195,313,3.662,316,3.811,317,1.383,318,2.388,322,5.251,325,4.303,541,1.383,608,0.61,623,4.156,726,1.498,736,4.607,766,2.373,791,1.544,841,2.691,975,3.007,1100,2.849,1102,2.161,1214,1.774,1274,1.774,2117,2.97,2119,3.262,2212,3.97,2357,3.665,2358,3.665,2552,6.336,2608,5.251,2751,3.098,2756,2.641,3291,4.303,3292,7.325,3293,6.5,3294,7.821,3295,7.821,3296,4.859,3297,4.859,3298,4.859,3299,7.821,3300,6.5,3301,6.5,3302,4.859,3303,6.5,3304,4.859,3305,4.859,3306,3.973,3307,4.303,3308,4.859]],["title/components/IssueItemComponent.html",[0,0.085,145,0.915]],["body/components/IssueItemComponent.html",[0,0.163,1,0.948,2,0.847,3,0.122,4,0.071,5,0.749,6,1.052,7,1.031,8,0.988,9,0.071,11,0.928,16,0.909,17,1.384,18,1.348,19,0.928,20,0.782,21,0.929,23,0.929,25,0.088,30,0.847,33,0.67,37,0.714,39,0.501,40,0.008,41,0.534,42,0.167,43,0.402,45,0.791,49,0.452,50,1.156,51,0.95,53,0.176,54,0.322,56,0.948,57,1.34,60,0.097,61,0.012,95,1.031,96,1.232,97,1.206,98,0.782,99,1.665,100,1.031,101,1.953,102,0.928,103,0.817,104,1.05,105,1.285,106,0.948,107,1.031,108,0.948,109,0.928,110,1.031,111,0.948,112,1.031,113,0.89,114,0.909,115,0.955,116,0.928,117,0.89,118,1.015,119,1.585,120,0.909,121,0.071,122,0.928,123,1.024,124,0.948,125,0.948,126,0.853,127,1.031,128,0.909,129,1.031,130,0.948,131,1.031,132,0.948,133,1.031,134,0.928,135,1.031,136,0.928,137,1.031,138,0.655,139,1.031,140,0.928,141,0.45,142,1.031,143,0.948,144,1.031,145,1.563,146,1.585,147,0.948,148,1.031,149,0.948,150,1.585,151,0.948,152,1.031,153,0.968,154,1.031,155,0.909,156,1.031,157,0.948,158,1.031,159,1.258,160,0.871,161,1.031,162,0.948,163,1.34,164,1.397,165,0.948,166,1.031,167,0.909,168,0.527,169,1.031,170,0.928,171,0.948,172,1.031,173,0.948,174,1.031,175,0.928,176,0.928,177,0.909,178,1.031,179,0.928,180,1.031,181,0.871,182,0.733,183,0.909,184,1.031,185,0.909,186,1.206,187,0.928,188,0.948,189,0.594,190,0.89,191,0.717,192,0.948,193,0.968,194,1.031,195,0.948,196,0.871,197,1.031,198,0.948,199,1.031,200,0.89,201,0.948,202,0.948,203,0.871,204,1.031,205,0.948,206,0.655,207,1.29,208,0.89,209,0.928,210,1.031,211,0.909,212,1.031,213,0.909,214,1.031,215,0.89,216,1.031,217,0.89,218,1.031,219,0.89,220,0.968,221,1.031,222,0.005,223,0.005,226,0.39,246,1.665,268,2.308,276,1.983,293,0.89,308,3.779,315,0.993,371,1.427,499,1.703,512,2.158,515,1.449,535,3.726,541,1.328,548,0.971,552,3.319,569,2.763,602,1.488,608,0.438,625,3.306,725,2.365,726,1.853,753,1.427,766,2.308,791,1.482,868,2.331,877,2.689,907,1.258,975,2.925,994,4.482,1102,2.385,1174,1.703,1176,2.096,1177,2.293,1193,2.038,1195,1.515,1261,3.566,1485,4.043,1549,1.788,1581,3.9,1636,2.618,1637,2.367,1655,2.223,1699,5.408,1774,2.254,1835,3.131,2014,3.865,2117,3.865,2212,2.367,2549,6.869,2608,5.692,2613,2.982,2614,3.516,2615,2.535,2665,2.535,2666,4.207,2715,2.448,2738,6.812,2751,2.223,2756,2.535,3031,3.21,3306,2.851,3309,2.851,3310,5.812,3311,4.043,3312,7.692,3313,8.04,3314,6.324,3315,4.664,3316,6.324,3317,4.664,3318,3.708,3319,4.13,3320,3.779,3321,4.13,3322,4.664,3323,4.664,3324,4.664,3325,4.664,3326,4.13]],["title/components/IssueLabelComponent.html",[0,0.085,147,0.915]],["body/components/IssueLabelComponent.html",[0,0.141,1,0.893,2,0.813,3,0.075,4,0.067,5,0.706,6,0.992,7,0.971,8,0.931,9,0.067,11,0.874,16,0.856,17,1.381,18,1.344,19,0.874,20,0.737,21,0.892,23,0.892,25,0.083,26,0.508,27,1.231,30,0.813,37,0.599,39,0.652,40,0.008,41,0.557,42,0.091,43,0.523,45,0.669,49,0.434,51,0.66,53,0.149,54,0.304,56,0.893,57,1.287,60,0.091,61,0.011,95,0.971,96,1.183,97,1.158,98,0.737,99,1.623,100,0.971,101,1.931,102,0.874,103,0.77,104,1.011,105,1.234,106,0.893,107,0.971,108,0.893,109,0.874,110,0.971,111,0.893,112,0.971,113,0.838,114,0.856,115,0.936,116,0.874,117,0.838,118,1.48,119,1.537,120,0.856,121,0.067,122,0.874,123,1.005,124,0.893,125,0.893,126,0.803,127,0.971,128,0.856,129,0.971,130,0.893,131,0.971,132,0.893,133,0.971,134,0.874,135,0.971,136,0.874,137,0.971,138,0.617,139,0.971,140,0.874,141,0.424,142,0.971,143,0.893,144,0.971,145,0.893,146,1.537,147,1.525,148,0.971,149,0.893,150,1.537,151,0.893,152,0.971,153,0.912,154,0.971,155,0.856,156,0.971,157,0.893,158,0.971,159,0.874,160,0.821,161,0.971,162,0.893,163,1.287,164,1.342,165,0.893,166,0.971,167,0.856,168,0.497,169,0.971,170,0.874,171,0.893,172,0.971,173,0.893,174,0.971,175,0.874,176,0.874,177,0.856,178,0.971,179,0.874,180,0.971,181,0.821,182,0.69,183,0.856,184,0.971,185,0.856,186,1.158,187,0.874,188,0.893,189,0.57,190,0.838,191,0.675,192,0.893,193,0.912,194,0.971,195,0.893,196,1.134,197,0.971,198,0.893,199,0.971,200,0.838,201,0.893,202,0.893,203,0.821,204,0.971,205,0.893,206,0.617,207,0.737,208,0.838,209,0.874,210,0.971,211,0.856,212,0.971,213,0.856,214,0.971,215,0.838,216,0.971,217,0.838,218,0.971,219,0.838,220,0.912,221,0.971,222,0.005,223,0.005,226,0.582,246,0.951,276,3.616,277,3.586,278,4.303,541,1.251,550,5.037,569,3.039,575,1.49,602,1.034,608,0.705,703,3.313,726,1.399,728,2.957,745,4.252,752,2.306,766,2.216,791,1.396,841,2.513,907,1.208,954,5.581,1102,2.494,1174,1.604,1176,3.126,1177,2.16,1178,2.231,1195,1.428,1533,5.037,1537,5.935,1653,2.577,1789,2.478,1835,2.95,1961,4.576,2284,2.95,2354,3.424,2481,2.809,2545,6.078,2608,5.037,2615,2.389,2618,4.576,2665,4.078,2666,2.577,2668,2.984,2751,2.894,2756,3.3,2762,3.56,2763,6.972,3092,4.076,3098,4.918,3226,2.95,3306,2.686,3327,3.891,3328,6.956,3329,6.071,3330,6.071,3331,6.071,3332,4.395,3333,6.071,3334,4.395,3335,7.502,3336,7.874,3337,6.078,3338,6.071,3339,4.395,3340,6.16,3341,6.644,3342,6.071,3343,7.874,3344,4.395,3345,3.891,3346,4.395,3347,4.395,3348,4.395,3349,4.395,3350,4.395,3351,4.395,3352,4.395,3353,4.395,3354,3.56,3355,4.395,3356,4.395,3357,4.395,3358,4.395,3359,4.395,3360,4.395,3361,4.395,3362,4.395,3363,4.395,3364,4.395,3365,3.56,3366,4.395,3367,4.395,3368,4.395,3369,4.395,3370,4.395,3371,4.395,3372,4.395,3373,6.071,3374,6.071]],["title/components/IssueListComponent.html",[0,0.085,149,0.915]],["body/components/IssueListComponent.html",[0,0.167,1,0.563,2,0.998,3,0.047,4,0.042,5,0.445,6,0.625,7,0.612,8,0.587,9,0.042,11,0.551,14,0.859,15,1.448,16,0.539,17,1.351,18,1.311,19,0.551,20,1.249,21,0.634,23,0.634,25,0.052,26,0.361,27,1.437,30,0.579,33,0.62,36,2.621,37,0.775,39,0.699,40,0.008,41,0.504,42,0.185,43,0.723,45,0.843,46,0.955,49,0.61,50,1.097,51,0.901,53,0.204,54,0.191,55,0.841,56,0.563,57,0.915,59,1.244,60,0.057,61,0.007,63,1.244,64,0.755,66,1.405,86,1.203,95,0.612,96,0.842,97,0.824,98,0.464,99,1.298,100,0.612,101,1.729,102,0.551,103,0.485,104,0.885,105,0.878,106,0.563,107,0.612,108,0.563,109,0.551,110,0.612,111,0.563,112,0.612,113,0.528,114,0.539,115,0.987,116,0.551,117,0.528,118,0.853,119,1.173,120,0.539,121,0.127,122,0.859,123,1.017,124,0.563,125,0.563,126,0.79,127,0.612,128,0.539,129,0.612,130,0.563,131,0.612,132,0.563,133,0.612,134,0.551,135,0.612,136,0.551,137,0.612,138,0.389,139,0.612,140,0.551,141,0.267,142,0.612,143,0.563,144,0.612,145,0.563,146,1.173,147,0.563,148,0.612,149,1.219,150,1.173,151,0.563,152,0.612,153,0.575,154,0.612,155,0.539,156,0.612,157,0.563,158,0.612,159,0.551,160,0.517,161,0.612,162,0.563,163,0.915,164,0.954,165,0.563,166,0.612,167,0.539,168,0.735,169,0.612,170,0.551,171,0.563,172,0.612,173,0.563,174,0.612,175,0.551,176,0.551,177,0.539,178,0.612,179,0.551,180,0.612,181,1.12,182,1.17,183,0.539,184,0.612,185,0.539,186,1.013,187,0.551,188,0.563,189,0.647,190,0.528,191,0.425,192,0.563,193,0.575,194,0.612,195,0.563,196,0.517,197,0.612,198,0.563,199,0.612,200,0.528,201,0.563,202,0.563,203,0.517,204,0.612,205,0.563,206,0.913,207,0.464,208,0.528,209,0.551,210,0.612,211,0.539,212,0.612,213,0.539,214,0.612,215,0.528,216,0.612,217,0.528,218,0.612,219,0.528,220,0.575,221,0.612,222,0.004,223,0.006,226,0.64,228,2.348,234,0.745,243,2.321,246,0.935,248,0.819,249,2.258,255,1.036,260,0.713,270,2.761,274,1.281,284,1.906,310,3.746,311,2.886,312,2.611,313,3.256,315,0.678,322,3.565,371,1.727,412,1.361,437,2.243,499,1.011,515,2.631,523,2.436,529,0.755,535,3.235,537,0.709,538,3.273,548,0.922,550,4.367,569,1.21,575,1.827,595,1.178,608,0.699,611,1.742,641,2.433,652,2.64,726,1.224,762,1.244,763,2.088,766,1.577,769,2.692,778,1.806,785,3.198,787,2.693,790,1.939,791,1.372,792,1.146,793,1.32,803,1.088,806,4.276,816,1.614,820,1.32,826,1.941,828,2.457,829,1.21,833,1.146,834,2.611,835,1.405,836,0.9,837,1.77,838,1.77,840,4.041,841,3.584,861,2.087,865,2.533,868,2.114,871,2.64,873,1.281,877,2.258,881,4.252,888,3.1,895,3.825,900,3.395,903,5.002,907,0.859,1111,1.561,1179,1.32,1180,1.963,1197,1.177,1200,1.77,1201,1.453,1214,2.19,1218,1.505,1249,1.698,1262,2.859,1422,1.963,1470,2.927,1474,2.927,1509,3.54,1581,3.536,1585,4.602,1589,3.062,1590,1.405,1632,1.505,1645,3.667,1656,4.003,1665,1.963,1706,1.963,1776,3.062,1977,1.698,2138,2.192,2212,3.045,2263,2.436,2264,2.9,2289,3.045,2318,2.9,2357,2.436,2358,2.436,2359,2.533,2409,1.77,2526,2.087,2530,2.087,2531,6.359,2537,2.087,2676,3.887,2715,2.787,2769,5.312,2784,4.703,2836,5.584,2855,2.64,2982,3.825,2989,3.256,3318,2.533,3345,3.825,3375,2.087,3376,4.903,3377,4.003,3378,4.302,3379,3.499,3380,5.311,3381,4.302,3382,5.311,3383,5.311,3384,5.311,3385,4.302,3386,5.311,3387,5.311,3388,4.302,3389,3.825,3390,3.825,3391,4.319,3392,4.319,3393,5.999,3394,4.86,3395,5.999,3396,2.769,3397,3.825,3398,2.769,3399,2.452,3400,4.319,3401,2.769,3402,4.319,3403,2.769,3404,3.825,3405,4.319,3406,2.769,3407,4.319,3408,4.319,3409,2.769,3410,2.769,3411,3.825,3412,2.769,3413,4.319,3414,4.319,3415,3.825,3416,5.999,3417,4.319,3418,6.892,3419,4.319,3420,2.769,3421,7.199,3422,4.319,3423,3.825,3424,4.319,3425,2.769,3426,2.769,3427,2.769,3428,2.769,3429,2.769,3430,2.769,3431,2.769,3432,2.769,3433,4.302,3434,2.769,3435,2.769,3436,4.302,3437,3.499,3438,2.769,3439,2.769,3440,2.769,3441,4.302,3442,3.499,3443,2.769,3444,2.769,3445,3.499,3446,2.769,3447,5.311,3448,2.769,3449,2.452,3450,5.311,3451,4.319,3452,2.769,3453,3.825,3454,6.505,3455,4.319,3456,2.452,3457,5.311,3458,2.769,3459,2.769,3460,4.302,3461,2.769,3462,2.769,3463,2.769,3464,2.769,3465,4.319,3466,4.319,3467,2.769,3468,2.243,3469,2.769,3470,2.769,3471,2.769,3472,2.769,3473,2.769,3474,2.243,3475,2.769,3476,2.769,3477,2.243,3478,2.243,3479,2.243,3480,2.243,3481,2.769,3482,2.769,3483,2.243,3484,2.243,3485,2.243,3486,2.769,3487,2.769,3488,2.769,3489,2.769,3490,2.769,3491,5.999,3492,2.769,3493,5.311,3494,2.769,3495,2.769,3496,2.452,3497,2.769,3498,2.769,3499,4.319,3500,2.769,3501,6.505,3502,4.319,3503,4.319,3504,2.769,3505,2.769,3506,4.319,3507,2.769,3508,4.319,3509,2.769,3510,2.769,3511,2.087,3512,2.769,3513,4.319,3514,2.769,3515,2.769,3516,4.319,3517,4.319,3518,4.319,3519,4.319,3520,2.452,3521,2.452,3522,2.452,3523,2.087,3524,2.769,3525,2.769,3526,2.769,3527,2.452]],["title/components/IssueLocationComponent.html",[0,0.085,151,0.915]],["body/components/IssueLocationComponent.html",[0,0.166,1,0.945,2,0.846,3,0.079,4,0.071,5,0.747,6,1.05,7,1.028,8,0.986,9,0.071,11,0.926,16,0.906,17,1.384,18,1.348,19,0.926,20,0.78,21,0.927,23,0.927,25,0.088,30,0.846,33,0.668,37,0.692,39,0.5,40,0.008,41,0.534,42,0.149,43,0.401,45,0.847,46,0.927,49,0.451,53,0.176,54,0.322,56,0.945,57,1.338,60,0.097,61,0.012,86,1.759,95,1.028,96,1.23,97,1.204,98,0.78,99,1.663,100,1.028,101,1.952,102,0.926,103,0.815,104,1.05,105,1.283,106,0.945,107,1.028,108,0.945,109,0.926,110,1.028,111,0.945,112,1.028,113,0.887,114,0.906,115,0.955,116,0.926,117,0.887,118,1.014,119,1.583,120,0.906,121,0.109,122,0.926,123,1.01,124,0.945,125,0.945,126,0.851,127,1.028,128,0.906,129,1.028,130,0.945,131,1.028,132,0.945,133,1.028,134,0.926,135,1.028,136,0.926,137,1.028,138,0.653,139,1.028,140,0.926,141,0.449,142,1.028,143,0.945,144,1.028,145,0.945,146,1.583,147,0.945,148,1.028,149,0.945,150,1.583,151,1.561,152,1.028,153,0.965,154,1.028,155,0.906,156,1.028,157,0.945,158,1.583,159,0.926,160,0.869,161,1.028,162,0.945,163,1.338,164,1.395,165,0.945,166,1.028,167,0.906,168,0.526,169,1.028,170,0.926,171,0.945,172,1.028,173,0.945,174,1.028,175,0.926,176,0.926,177,0.906,178,1.028,179,0.926,180,1.028,181,0.869,182,0.731,183,0.906,184,1.028,185,0.906,186,1.204,187,0.926,188,0.945,189,0.593,190,0.887,191,0.715,192,0.945,193,0.965,194,1.028,195,0.945,196,1.435,197,1.028,198,0.945,199,1.028,200,0.887,201,0.945,202,0.945,203,0.869,204,1.028,205,0.945,206,0.653,207,0.78,208,0.887,209,0.926,210,1.028,211,0.906,212,1.028,213,0.906,214,1.028,215,0.887,216,1.028,217,0.887,218,1.028,219,0.887,220,0.965,221,1.028,222,0.005,223,0.005,226,0.389,268,1.698,276,3.046,277,3.079,293,0.887,315,0.992,499,1.698,535,3.723,548,0.97,602,1.485,608,0.437,625,3.298,641,2.361,726,1.651,766,2.304,791,1.478,833,1.926,868,2.328,907,1.256,912,4.12,975,2.92,1102,1.546,1174,1.698,1176,3.723,1177,3.522,1178,3.204,1179,3.009,1184,4.12,1193,2.758,1194,2.613,1195,2.051,1485,4.036,1546,4.53,1631,5.028,1636,2.613,1655,2.217,1774,2.25,2566,6.711,2608,5.562,2666,4.71,2668,2.287,2669,3.298,2671,3.507,2715,3.313,2750,4.12,2751,2.217,2756,2.529,3096,4.036,3318,3.701,3337,5.805,3404,5.59,3528,4.12,3529,7.165,3530,6.313,3531,7.684,3532,7.684,3533,6.313,3534,7.165,3535,4.652,3536,4.652,3537,6.313,3538,4.652,3539,6.313,3540,4.652,3541,4.652,3542,6.313,3543,6.313,3544,7.684,3545,3.769,3546,3.298,3547,4.652,3548,4.652,3549,4.652,3550,3.298,3551,4.652,3552,4.652,3553,6.313,3554,4.652,3555,4.652]],["title/interfaces/IssueNode.html",[121,0.068,1209,2.641]],["body/interfaces/IssueNode.html",[0,0.156,3,0.086,4,0.121,5,1.074,9,0.113,25,0.096,26,0.559,40,0.008,42,0.192,43,0.576,49,0.667,53,0.195,60,0.139,61,0.02,104,0.795,115,0.795,121,0.139,123,0.718,138,0.938,141,0.722,168,1.005,189,0.776,191,1.027,222,0.006,223,0.006,226,0.424,234,1.16,248,0.889,260,0.603,284,2.698,296,4.174,316,2.973,515,1.575,529,1.383,541,1.443,548,1.366,595,2.397,608,0.825,622,2.328,720,2.441,725,2.501,817,2.843,836,1.647,907,1.749,953,4.087,1065,1.904,1066,3.293,1069,3.62,1070,3.382,1093,1.896,1197,3.181,1205,4.387,1206,2.279,1207,2.859,1208,4.706,1209,5.077,1210,3.566,1211,3.187,1212,2.756,1213,2.417,1214,3.208,1215,3.187,1216,2.574,1217,2.661,1218,4.067,1219,4.457,1220,4.387,1221,3.099,1222,3.099,1223,3.099,1224,3.099,1225,3.099,1226,3.099,1227,3.099,1228,3.099,1229,3.093,1230,3.099,1231,3.099,1232,5.054,1233,3.678,1234,4.275,1235,3.921,1236,2.843,1237,4.324,1238,4.275,1239,4.275,1240,2.274,1241,3.093,1242,3.187,1243,4.087,1244,3.634,1245,3.287,1246,3.634,1247,4.087,1248,4.275,1249,2.629,1250,4.275,1251,3.394,1252,4.275,1253,2.922,1254,4.275,1255,3.771,1256,4.275,1257,4.087,1258,3.241,1259,4.219,1260,2.661,1261,2.859,1262,2.417,1263,3.771,1264,3.241,1265,3.241,1266,3.241,1267,3.921,1268,3.241,1269,4.275,1270,3.241,1271,3.241,1272,3.241,1273,3.099,1274,1.851,1275,3.771,1276,4.783,1277,3.241,1278,3.241,1279,4.275,1280,3.241,1281,4.275,1282,4.275,1283,3.241,1284,3.241,1285,4.067,1286,4.275,1287,3.099,1288,4.087,1289,4.275,1290,3.241,1291,4.486,1292,3.509,1293,3.241,1294,3.099,1295,3.241,1296,3.241,1297,3.241,1298,3.099,1299,3.921,1300,3.099,1301,2.859,1302,3.099,1303,2.661]],["title/injectables/IssueStoreService.html",[532,1.082,3556,3.649]],["body/injectables/IssueStoreService.html",[3,0.081,4,0.072,9,0.11,25,0.09,30,0.86,33,0.684,37,0.79,39,0.985,40,0.008,41,0.591,42,0.19,43,0.79,45,1.006,49,0.596,53,0.191,54,0.329,60,0.099,61,0.012,63,1.333,115,0.762,222,0.006,223,0.006,226,0.399,227,2.804,234,0.9,281,1.448,293,0.909,515,1.993,532,1.542,537,1.22,540,1.973,541,1.357,545,2.884,547,2.692,548,0.986,555,2.082,608,0.857,646,1.973,691,1.386,753,1.448,814,3.058,818,3.487,983,5.682,1235,3.762,1245,3.154,1306,3.047,1317,4.308,1342,4.22,1355,4.22,1424,3.257,1425,4.102,1587,6.287,2077,4.837,2575,5.198,2576,4.961,2577,4.837,2604,4.837,2625,5.682,2660,5.682,3556,5.198,3557,8.153,3558,6.416,3559,3.922,3560,6.416,3561,6.416,3562,6.416,3563,6.416,3564,6.416,3565,6.416,3566,6.416,3567,6.416,3568,6.416,3569,6.416,3570,6.416,3571,4.766,3572,7.76,3573,7.254,3574,7.76,3575,7.254,3576,7.76,3577,7.254,3578,7.76,3579,7.254,3580,7.76,3581,7.254,3582,7.76,3583,7.254,3584,7.76,3585,7.254,3586,7.76,3587,7.254,3588,7.76,3589,7.254,3590,7.76,3591,7.254,3592,7.76,3593,7.254,3594,7.76,3595,7.254,3596,7.76,3597,7.76,3598,7.76,3599,4.766,3600,6.416,3601,6.416,3602,7.76,3603,4.766,3604,6.416,3605,6.416,3606,8.343,3607,4.766,3608,6.416,3609,7.76,3610,4.766,3611,6.416,3612,6.416,3613,7.76,3614,6.416,3615,6.416,3616,4.766,3617,6.416,3618,6.416,3619,8.343,3620,4.766,3621,6.416,3622,4.766,3623,6.416,3624,4.766,3625,6.416,3626,8.343,3627,4.766,3628,6.416,3629,7.76,3630,4.766,3631,6.416,3632,6.416,3633,7.76,3634,4.766,3635,6.416,3636,6.416,3637,7.76,3638,4.766,3639,6.416,3640,6.416,3641,8.343,3642,6.416,3643,8.343,3644,4.766,3645,4.766,3646,4.766,3647,4.766,3648,4.766,3649,4.766,3650,4.766,3651,4.766,3652,4.766,3653,4.766,3654,4.766,3655,4.766,3656,4.766,3657,4.766,3658,4.766,3659,4.766,3660,4.766]],["title/directives/ItemDirective.html",[98,0.756,209,0.896]],["body/directives/ItemDirective.html",[2,1.112,3,0.122,4,0.109,9,0.109,16,1.399,17,1.191,40,0.008,53,0.177,54,0.496,60,0.149,61,0.018,98,1.508,207,1.392,208,1.37,209,1.651,222,0.007,223,0.007,226,0.601,402,5.071,637,2.413,1409,5.88,3661,6.361,3662,7.346,3663,8.296,3664,8.296,3665,8.296]],["title/components/LabelSearchComponent.html",[0,0.085,155,0.877]],["body/components/LabelSearchComponent.html",[0,0.151,1,0.855,2,0.789,3,0.072,4,0.064,5,0.675,6,0.949,7,0.929,8,0.891,9,0.064,11,0.837,14,1.172,15,1.853,16,0.819,17,1.378,18,1.342,19,0.837,20,0.705,21,0.865,23,0.865,25,0.079,26,0.493,27,1.115,30,0.789,33,0.604,37,0.737,39,0.632,40,0.008,41,0.542,42,0.161,43,0.507,45,0.749,46,0.865,49,0.421,50,1.417,51,1.239,53,0.19,54,0.291,56,0.855,57,1.248,60,0.122,61,0.011,63,1.081,64,1.147,90,2.466,95,0.929,96,1.147,97,1.404,98,0.705,99,1.593,100,0.929,101,1.914,102,0.837,103,0.737,104,1,105,1.197,106,0.855,107,0.929,108,0.855,109,0.837,110,0.929,111,0.855,112,0.929,113,0.802,114,0.819,115,0.921,116,0.837,117,0.802,118,1.419,119,1.501,120,0.819,121,0.103,122,0.837,123,0.973,124,0.855,125,0.855,126,0.769,127,0.929,128,0.819,129,0.929,130,0.855,131,0.929,132,0.855,133,0.929,134,0.837,135,0.929,136,0.837,137,0.929,138,0.59,139,0.929,140,0.837,141,0.656,142,0.929,143,0.855,144,0.929,145,0.855,146,1.501,147,0.855,148,0.929,149,0.855,150,1.501,151,0.855,152,0.929,153,0.873,154,0.929,155,1.434,156,0.929,157,0.855,158,0.929,159,0.837,160,0.785,161,0.929,162,0.855,163,1.248,164,1.301,165,0.855,166,0.929,167,0.819,168,0.475,169,0.929,170,0.837,171,0.855,172,0.929,173,0.855,174,0.929,175,0.837,176,0.837,177,0.819,178,0.929,179,0.837,180,0.929,181,0.785,182,0.661,183,0.819,184,0.929,185,0.819,186,1.123,187,0.837,188,0.855,189,0.553,190,0.802,191,0.646,192,0.855,193,0.873,194,0.929,195,0.855,196,1.54,197,0.929,198,0.855,199,0.929,200,0.802,201,0.855,202,0.855,203,1.1,204,0.929,205,0.855,206,0.59,207,0.988,208,0.802,209,0.837,210,0.929,211,0.819,212,0.929,213,0.819,214,0.929,215,0.802,216,0.929,217,0.802,218,0.929,219,0.802,220,0.873,221,0.929,222,0.005,223,0.005,226,0.352,231,2.208,246,1.47,248,0.875,260,0.5,268,1.535,293,0.802,315,0.661,318,2.067,371,0.949,389,3.781,431,4.211,515,1.829,537,1.076,539,2.823,540,1.741,544,1.89,547,2.258,556,3.863,576,3.2,608,0.395,615,3.32,617,3.2,680,4.562,684,2.466,808,2.371,811,1.366,821,3.953,904,2.371,907,0.837,1044,1.366,1102,1.957,1176,1.89,1183,3.407,1197,2.503,1253,2.573,1403,2.466,1474,3.405,1476,2.688,1503,2.573,1509,3.814,1539,2.981,1634,3.452,1880,3.599,2129,4.174,2138,2.989,2144,4.954,2145,6.139,2146,5.294,2147,2.981,2148,4.942,2149,5.535,2150,4.77,2151,4.77,2152,4.77,2153,5.504,2154,3.17,2155,4.942,2156,3.407,2157,4.528,2158,3.953,2159,4.77,2160,3.764,2161,5.492,2162,4.77,2163,5.504,2164,4.77,2165,5.504,2166,5.504,2167,5.122,2168,5.122,2169,4.77,2170,4.344,2171,3.407,2172,4.77,2173,2.57,2174,4.77,2175,5.963,2176,3.17,2177,2.823,2178,4.562,2179,3.17,2180,3.407,2181,3.407,2182,3.407,2183,3.407,2184,3.407,2185,3.407,2186,3.17,2187,3.407,2188,5.963,2189,3.407,2190,3.407,2191,4.77,2192,3.407,2193,3.407,2194,3.407,2195,2.981,2196,3.953,2668,2.067,3666,5.888,3667,4.205,3668,5.888,3669,4.205,3670,4.205,3671,4.205,3672,4.205,3673,4.205,3674,4.205,3675,4.205,3676,5.888,3677,3.724]],["title/injectables/LabelStoreService.html",[532,1.082,2155,3.024]],["body/injectables/LabelStoreService.html",[3,0.103,4,0.092,9,0.092,25,0.114,30,1.003,33,0.869,37,0.701,39,0.873,40,0.008,41,0.581,42,0.176,43,0.701,45,0.896,49,0.656,50,1.106,51,0.909,53,0.209,54,0.418,60,0.169,61,0.015,63,1.194,104,1.01,118,1.364,141,0.723,222,0.006,223,0.007,226,0.626,231,2.76,277,2.32,281,1.839,293,1.154,317,2.131,532,1.799,537,1.549,540,2.505,547,2.997,548,1.341,549,2.699,555,2.644,571,6.882,575,1.995,595,1.65,608,0.798,646,2.505,691,1.76,816,1.839,833,2.505,868,2.76,1306,3.869,1310,4.07,1474,3.496,1509,3.464,1977,3.196,2011,5.307,2149,4.063,2155,5.027,2157,4.222,2158,5.027,2186,4.562,2195,5.307,2338,5.459,2361,3.699,2604,4.562,3083,5.307,3678,6.882,3679,7.487,3680,7.487,3681,6.052,3682,8.894,3683,6.052,3684,7.487,3685,5.359,3686,7.487,3687,9.242,3688,6.052,3689,7.487,3690,6.052,3691,6.052,3692,6.052,3693,6.052,3694,6.052,3695,6.052,3696,6.052]],["title/classes/LayoutNode.html",[61,0.011,3697,3.192]],["body/classes/LayoutNode.html",[0,0.132,3,0.075,4,0.127,9,0.067,25,0.084,26,0.51,27,1.463,30,0.817,33,0.876,37,0.778,39,0.75,40,0.008,41,0.45,42,0.186,43,0.602,45,0.829,46,1.025,49,0.538,50,1.6,51,1.299,53,0.109,61,0.018,63,0.896,83,2.704,84,3.335,103,0.775,115,0.894,121,0.067,141,0.674,168,1.065,189,0.741,222,0.005,223,0.005,226,0.584,246,0.957,248,1.012,260,0.994,296,4.011,315,0.958,548,1.212,553,1.933,563,3.936,568,3.335,573,2.405,575,2.051,608,0.656,654,4.807,705,3.461,720,1.615,728,3.789,742,2.704,777,2.594,817,2.593,826,3.137,836,2.768,863,2.495,872,5.262,888,2.109,907,1.664,916,3.584,924,2.405,928,3.335,942,2.998,1034,2.704,1053,3.576,1065,2.648,1066,3.267,1069,3.183,1070,3.199,1071,3.136,1092,3.136,1093,1.655,1174,3.052,1185,3.335,1240,3.071,1241,2.822,1245,2.998,1262,2.109,1285,3.794,1535,4.598,1612,2.405,1622,2.594,1789,3.439,1813,3.335,1837,4.323,1841,4.323,1937,4.412,1956,3.136,2012,3.136,2038,3.136,2486,3.584,2889,6.394,2890,6.095,3007,4.941,3226,5.478,3238,4.598,3468,3.584,3511,5.671,3546,3.136,3697,5.333,3698,7.355,3699,3.584,3700,6.099,3701,6.099,3702,6.099,3703,6.099,3704,6.099,3705,6.099,3706,6.099,3707,6.099,3708,6.099,3709,6.099,3710,6.181,3711,6.663,3712,6.099,3713,4.424,3714,6.61,3715,4.424,3716,4.424,3717,4.424,3718,4.424,3719,6.099,3720,4.424,3721,4.424,3722,4.424,3723,6.663,3724,4.424,3725,4.424,3726,4.424,3727,4.687,3728,4.424,3729,6.844,3730,4.424,3731,5.401,3732,4.424,3733,5.401,3734,6.181,3735,5.401,3736,5.401,3737,5.401,3738,4.424,3739,3.918,3740,3.918,3741,3.918,3742,3.918,3743,3.918,3744,3.918,3745,6.181,3746,5.655,3747,3.918,3748,3.918,3749,5.401,3750,3.918,3751,3.918,3752,3.918,3753,3.918,3754,3.918,3755,3.918,3756,3.918,3757,3.918,3758,3.918,3759,3.918,3760,3.918,3761,3.584,3762,3.335,3763,3.918,3764,3.918,3765,3.918,3766,3.918,3767,6.181,3768,5.401,3769,3.918,3770,3.918,3771,3.918,3772,5.401,3773,3.918,3774,5.655,3775,3.918,3776,3.918,3777,3.918,3778,3.918,3779,3.918,3780,3.584,3781,3.918,3782,3.918,3783,3.918,3784,3.918,3785,3.918,3786,3.584,3787,3.918,3788,3.918,3789,3.918,3790,3.918,3791,3.918,3792,3.918,3793,3.918,3794,3.918,3795,3.918,3796,5.401]],["title/components/LinkedIssueItemComponent.html",[0,0.085,157,0.915]],["body/components/LinkedIssueItemComponent.html",[0,0.148,1,0.886,2,0.928,3,0.074,4,0.066,5,0.7,6,0.984,7,0.963,8,0.924,9,0.066,11,0.868,14,1.201,15,1.889,16,0.849,17,1.38,18,1.344,19,0.868,20,0.731,21,0.887,23,0.887,25,0.082,26,0.505,27,1.227,30,0.809,33,0.626,37,0.677,39,0.468,40,0.008,41,0.524,42,0.163,43,0.376,45,0.481,46,0.64,49,0.534,50,1.104,53,0.205,54,0.301,56,0.886,57,1.28,60,0.091,61,0.011,63,0.887,64,1.189,90,2.556,94,5.636,95,0.963,96,1.176,97,1.152,98,0.731,99,1.618,100,0.963,101,1.928,102,0.868,103,0.764,104,1.037,105,1.227,106,0.886,107,0.963,108,0.886,109,0.868,110,0.963,111,0.886,112,0.963,113,0.832,114,0.849,115,0.933,116,0.868,117,0.832,118,0.97,119,1.531,120,0.849,121,0.066,122,0.868,123,1.027,124,0.886,125,0.886,126,0.797,127,0.963,128,0.849,129,0.963,130,0.886,131,0.963,132,0.886,133,0.963,134,0.868,135,0.963,136,0.868,137,0.963,138,0.612,139,0.963,140,0.868,141,0.421,142,0.963,143,0.886,144,0.963,145,0.886,146,1.531,147,0.886,148,0.963,149,0.886,150,1.531,151,0.886,152,0.963,153,0.905,154,0.963,155,0.849,156,0.963,157,1.519,158,1.531,159,1.793,160,0.814,161,0.963,162,0.886,163,1.28,164,1.334,165,0.886,166,0.963,167,0.849,168,0.493,169,0.963,170,0.868,171,0.886,172,0.963,173,0.886,174,0.963,175,0.868,176,0.868,177,0.849,178,0.963,179,0.868,180,0.963,181,0.814,182,0.685,183,0.849,184,0.963,185,0.849,186,1.152,187,0.868,188,0.886,189,0.567,190,0.832,191,0.67,192,0.886,193,0.905,194,0.963,195,0.886,196,1.396,197,0.963,198,0.886,199,0.963,200,0.832,201,0.886,202,0.886,203,1.128,204,0.963,205,0.886,206,0.972,207,1.162,208,0.832,209,0.868,210,0.963,211,0.849,212,0.963,213,0.849,214,0.963,215,0.832,216,0.963,217,0.832,218,0.963,219,0.832,220,0.905,221,0.963,222,0.005,223,0.005,226,0.365,228,3.282,235,2.723,267,2.204,268,2.204,293,0.832,318,2.143,371,1.362,468,6.58,499,1.592,512,2.017,515,1.355,535,3.743,537,1.116,548,1.064,572,3.179,583,3.169,641,2.258,726,1.596,753,1.563,761,3.169,763,2.723,766,2.204,768,2.665,769,3.038,780,3.459,785,2.968,787,2.5,790,2.529,791,1.918,792,1.805,793,2.078,803,1.714,806,3.871,833,1.805,836,1.417,868,2.251,885,2.556,975,2.793,994,4.28,995,4.216,1015,1.962,1191,2.288,1193,2.639,1194,1.805,1195,1.962,1200,3.86,1261,3.405,1485,3.86,1549,2.315,1669,5.347,1971,2.787,2040,2.459,2272,3.532,2670,3.091,2672,3.861,2715,2.288,2740,5.347,2764,3.287,2899,2.459,3309,2.665,3310,5.612,3311,3.86,3318,3.54,3320,3.532,3321,3.861,3376,3.287,3797,7.851,3798,6.038,3799,7.477,3800,6.038,3801,4.28,3802,6.927,3803,7.477,3804,4.36,3805,6.038,3806,4.36,3807,4.36,3808,6.038,3809,6.038,3810,4.36,3811,4.36,3812,4.36,3813,4.36,3814,6.038,3815,6.038,3816,4.36,3817,4.36,3818,4.36,3819,4.36,3820,6.038,3821,4.36,3822,4.36,3823,4.36,3824,4.36,3825,3.861,3826,4.36,3827,4.36]],["title/interfaces/ListId.html",[121,0.068,1470,1.77]],["body/interfaces/ListId.html",[0,0.152,2,0.637,3,0.081,4,0.072,9,0.072,25,0.09,26,0.536,40,0.008,42,0.195,45,0.524,49,0.609,51,1.088,60,0.189,88,2.963,92,1.868,104,0.861,118,0.763,121,0.11,123,0.778,126,1.417,159,1.274,168,1.069,206,0.899,222,0.006,223,0.006,226,0.398,231,2.709,234,0.899,248,0.761,260,0.921,281,1.946,317,1.353,371,2.084,459,2.021,512,2.199,515,2.647,529,1.296,538,2.777,548,1.453,549,1.51,566,3.191,569,2.077,575,1.985,576,2.583,591,5.495,595,2.207,602,1.118,608,0.76,637,1.863,691,1.383,753,1.955,762,3.747,778,2.946,811,2.354,818,2.583,827,3.369,835,3.935,836,2.354,841,3.209,864,3.369,885,3.755,890,2.136,942,2.337,965,3.039,978,3.351,1009,3.369,1065,1.823,1074,4.545,1229,2.963,1246,2.583,1249,1.868,1262,3.053,1310,2.583,1367,2.199,1424,3.251,1470,3.047,1474,1.868,1475,2.136,1483,3.251,1503,2.077,1585,3.039,1745,2.787,1746,3.937,1774,1.694,1807,2.723,1844,2.799,1895,3.191,1899,3.755,1901,4.213,1906,4.095,1908,2.413,1973,3.039,2010,3.612,2019,2.495,2087,2.787,2088,4.248,2136,2.905,2138,2.413,2289,2.413,2403,4.701,2637,3.191,2638,3.039,2643,4.54,2825,4.864,2830,4.095,2847,3.191,2848,3.191,3828,3.039,3829,5.869,3830,5.869,3831,5.189,3832,4.828,3833,5.843,3834,3.583,3835,3.583,3836,3.851,3837,3.851,3838,3.851,3839,3.851,3840,3.851,3841,3.583,3842,5.189,3843,3.039,3844,5.189,3845,5.189,3846,5.189,3847,5.189,3848,3.851,3849,3.851,3850,5.189,3851,3.851,3852,3.851,3853,3.851,3854,3.851,3855,3.851,3856,3.851,3857,3.851,3858,3.851,3859,3.851,3860,3.851,3861,3.851,3862,3.583,3863,3.583,3864,3.583,3865,3.583,3866,3.583,3867,3.583,3868,3.583,3869,3.369,3870,3.851,3871,3.851,3872,3.851,3873,3.851,3874,3.851,3875,3.851,3876,3.851,3877,3.851]],["title/interfaces/ListParams.html",[121,0.068,1745,2.641]],["body/interfaces/ListParams.html",[0,0.138,2,0.647,3,0.082,4,0.073,9,0.073,25,0.091,26,0.541,40,0.008,42,0.193,43,0.672,45,0.532,49,0.611,51,1.097,60,0.19,88,2.233,92,2.544,104,0.769,118,0.775,121,0.111,123,0.695,126,1.626,159,0.96,168,1.058,206,0.908,222,0.006,223,0.006,226,0.404,231,2.643,234,0.908,248,0.769,260,0.927,281,1.967,317,1.374,371,2.052,459,2.052,512,2.233,515,2.423,529,1.316,538,3.332,548,1.45,549,1.533,566,4.345,569,2.828,575,1.996,576,2.623,591,4.587,595,2.218,602,1.718,608,0.764,637,1.882,691,1.404,753,1.961,762,3.656,778,2.957,811,2.372,818,2.623,827,3.421,835,3.285,836,2.372,841,3.229,864,3.421,885,2.83,890,3.506,942,2.372,965,3.085,978,3.377,1009,3.421,1065,2.316,1074,3.794,1229,2.994,1246,2.623,1249,1.897,1262,2.3,1310,2.623,1367,2.233,1424,3.285,1470,2.87,1474,1.897,1475,2.169,1483,3.285,1503,2.828,1585,3.085,1745,3.794,1746,3.968,1774,1.72,1807,2.751,1844,2.828,1895,3.24,1899,3.794,1901,3.517,1906,5.353,1908,3.706,1973,3.085,2010,2.722,2019,2.533,2087,2.83,2088,4.28,2136,2.95,2138,2.45,2289,2.45,2403,4.117,2637,3.24,2638,3.085,2643,3.421,2825,4.345,2830,3.085,2847,3.24,2848,3.24,3828,3.085,3829,5.242,3830,5.242,3831,3.91,3832,4.878,3833,5.88,3834,3.638,3835,3.638,3836,3.91,3837,3.91,3838,3.91,3839,3.91,3840,3.91,3841,3.638,3842,5.242,3843,3.085,3844,5.242,3845,5.242,3846,5.242,3847,5.242,3848,3.91,3849,3.91,3850,5.242,3851,3.91,3852,3.91,3853,3.91,3854,3.91,3855,3.91,3856,3.91,3857,3.91,3858,3.91,3859,3.91,3860,3.91,3861,3.91,3862,3.638,3863,3.638,3864,3.638,3865,3.638,3866,3.638,3867,3.638,3868,3.638,3869,3.421,3870,5.242,3871,3.91,3872,3.91,3873,3.91,3874,3.91,3875,3.91,3876,3.91,3877,3.91]],["title/components/LoginComponent.html",[0,0.085,160,0.841]],["body/components/LoginComponent.html",[0,0.154,1,0.902,2,0.819,3,0.076,4,0.067,5,0.713,6,1.002,7,0.981,8,0.941,9,0.067,11,0.884,14,1.217,15,1.907,16,0.865,17,1.381,18,1.345,19,1.392,20,0.745,21,0.898,23,0.898,25,0.084,26,0.512,30,0.819,33,0.638,37,0.721,39,0.477,40,0.008,41,0.527,42,0.145,43,0.383,45,0.489,46,1.027,49,0.437,50,1.279,51,1.051,53,0.201,54,0.307,56,0.902,57,1.296,60,0.092,61,0.011,63,1.027,64,1.211,86,1.704,89,4.287,92,1.746,93,1.583,95,0.981,96,1.191,97,1.166,98,0.745,99,1.631,100,0.981,101,1.935,102,0.884,103,0.778,104,1.013,105,1.243,106,0.902,107,0.981,108,0.902,109,0.884,110,0.981,111,0.902,112,0.981,113,0.847,114,0.865,115,0.939,116,0.884,117,0.847,118,0.982,119,1.545,120,0.865,121,0.067,122,0.884,123,0.98,124,0.902,125,0.902,126,0.812,127,0.981,128,0.865,129,0.981,130,0.902,131,0.981,132,0.902,133,0.981,134,0.884,135,0.981,136,0.884,137,0.981,138,0.623,139,0.981,140,0.884,141,0.429,142,0.981,143,0.902,144,0.981,145,0.902,146,1.545,147,0.902,148,0.981,149,0.902,150,1.545,151,0.902,152,0.981,153,0.921,154,0.981,155,0.865,156,0.981,157,0.902,158,0.981,159,0.884,160,1.407,161,0.981,162,0.902,163,1.296,164,1.351,165,0.902,166,0.981,167,0.865,168,0.502,169,0.981,170,0.884,171,0.902,172,0.981,173,0.902,174,0.981,175,0.884,176,0.884,177,0.865,178,0.981,179,0.884,180,0.981,181,0.829,182,0.697,183,0.865,184,0.981,185,0.865,186,1.166,187,0.884,188,0.902,189,0.708,190,0.847,191,0.682,192,0.902,193,0.921,194,0.981,195,0.902,196,0.829,197,0.981,198,0.902,199,0.981,200,0.847,201,0.902,202,0.902,203,0.829,204,0.981,205,0.902,206,1.109,207,0.745,208,0.847,209,0.884,210,0.981,211,0.865,212,0.981,213,0.865,214,0.981,215,0.847,216,0.981,217,0.847,218,0.981,219,0.847,220,0.921,221,0.981,222,0.005,223,0.005,226,0.371,234,0.623,246,1.845,250,3.006,254,2.054,255,1.661,259,1.888,281,1.858,293,0.847,315,0.697,317,1.741,382,3.148,499,1.621,521,6.127,522,4.957,524,4.954,535,3.761,540,1.838,552,3.209,599,3.324,615,3.448,626,4.328,644,6.193,667,5.602,674,4.954,677,4.456,753,1.002,772,2.504,840,3.585,907,0.884,956,2.604,1044,2.448,1175,3.932,1195,2.448,1201,2.33,1253,3.293,1274,2.232,1400,4.818,1406,4.471,1542,2.413,1548,2.981,1549,1.702,1556,4.696,1636,1.838,1655,2.116,2452,3.932,2488,2.839,2496,3.932,2676,4.249,2746,3.347,3878,3.932,3879,5.415,3880,7.536,3881,6.115,3882,6.994,3883,6.115,3884,6.994,3885,4.696,3886,6.994,3887,6.193,3888,6.673,3889,3.597,3890,4.441,3891,4.441,3892,6.115,3893,5.415,3894,6.115,3895,6.115,3896,6.115,3897,6.994,3898,6.115,3899,4.441,3900,4.441,3901,4.441,3902,4.441,3903,6.193,3904,4.441,3905,6.115,3906,4.441,3907,4.441,3908,4.441,3909,6.994,3910,4.441,3911,3.932,3912,4.441,3913,6.115,3914,4.441,3915,6.115,3916,4.441,3917,3.932,3918,3.932,3919,4.441,3920,4.441,3921,5.415,3922,4.441,3923,4.441]],["title/components/MarkdownEditorComponent.html",[0,0.085,162,0.915]],["body/components/MarkdownEditorComponent.html",[0,0.164,1,0.983,2,0.869,3,0.082,4,0.073,5,0.777,6,1.092,7,1.069,8,1.025,9,0.073,11,0.963,16,0.943,17,1.385,18,1.35,19,0.963,20,0.812,21,0.952,23,0.952,25,0.091,26,0.542,30,0.869,37,0.673,40,0.008,41,0.525,42,0.152,45,0.533,46,0.711,49,0.463,50,0.885,51,0.727,53,0.119,54,0.334,56,0.983,57,1.374,60,0.1,61,0.012,86,1.348,95,1.069,96,1.263,97,1.237,98,0.812,99,1.69,100,1.069,101,1.967,102,0.963,103,0.848,104,1.034,105,1.317,106,0.983,107,1.069,108,0.983,109,0.963,110,1.069,111,0.983,112,1.069,113,0.923,114,0.943,115,0.968,116,0.963,117,0.923,118,1.041,119,1.615,120,0.943,121,0.073,122,0.963,123,0.991,124,0.983,125,0.983,126,0.885,127,1.069,128,0.943,129,1.069,130,0.983,131,1.069,132,0.983,133,1.069,134,0.963,135,1.069,136,0.963,137,1.069,138,0.679,139,1.069,140,0.963,141,0.467,142,1.069,143,0.983,144,1.069,145,0.983,146,1.615,147,0.983,148,1.069,149,0.983,150,1.615,151,0.983,152,1.069,153,1.004,154,1.069,155,0.943,156,1.069,157,0.983,158,1.069,159,0.963,160,0.904,161,1.069,162,1.587,163,1.928,164,1.432,165,0.983,166,1.069,167,0.943,168,0.547,169,1.069,170,0.963,171,0.983,172,1.069,173,0.983,174,1.069,175,0.963,176,0.963,177,0.943,178,1.069,179,0.963,180,1.069,181,0.904,182,0.76,183,0.943,184,1.069,185,0.943,186,1.237,187,0.963,188,0.983,189,0.609,190,0.923,191,1.397,192,0.983,193,1.004,194,1.069,195,0.983,196,0.904,197,1.069,198,0.983,199,1.069,200,0.923,201,0.983,202,0.983,203,0.904,204,1.069,205,0.983,206,0.679,207,0.812,208,0.923,209,0.963,210,1.069,211,0.943,212,1.069,213,0.943,214,1.069,215,0.923,216,1.069,217,0.923,218,1.069,219,0.923,220,1.004,221,1.069,222,0.006,223,0.006,226,0.405,248,0.575,277,1.855,424,4.595,450,6.326,452,6.596,553,3.662,726,1.494,745,2.958,766,2.366,1074,4.578,1176,3.509,1177,2.379,1195,1.572,1196,3.43,1247,3.963,1274,1.767,1543,3.648,1774,1.725,1977,2.548,2004,4.992,2119,3.249,2576,5.472,2665,2.63,2668,2.379,2785,4.887,2789,5.771,2824,4.352,2835,5.252,2940,5.741,3265,3.92,3318,3.801,3550,3.43,3762,4.887,3924,6.596,3925,3.648,3926,6.483,3927,6.483,3928,6.473,3929,5.741,3930,7.31,3931,7.809,3932,7.31,3933,4.839,3934,6.483,3935,4.839,3936,6.483,3937,3.801,3938,4.839,3939,6.483,3940,6.483,3941,4.839,3942,6.483,3943,4.839,3944,4.839,3945,4.839,3946,3.249,3947,4.839]],["title/components/MarkdownPreviewComponent.html",[0,0.085,165,0.915]],["body/components/MarkdownPreviewComponent.html",[0,0.161,1,1.063,2,0.915,3,0.089,4,0.079,5,0.84,6,1.18,7,1.156,8,1.109,9,0.079,11,1.041,14,1.358,15,2.072,16,1.019,17,1.389,18,1.354,19,1.041,20,0.878,21,1.003,23,1.003,25,0.099,33,0.751,37,0.451,40,0.008,41,0.539,42,0.109,46,0.768,49,0.576,53,0.129,54,0.362,56,1.063,57,1.446,60,0.109,61,0.013,64,1.427,95,1.156,96,1.33,97,1.302,98,0.878,99,1.742,100,1.156,101,1.994,102,1.041,103,0.916,104,1.051,105,1.387,106,1.063,107,1.156,108,1.063,109,1.041,110,1.156,111,1.063,112,1.156,113,0.998,114,1.019,115,0.993,116,1.041,117,0.998,118,1.096,119,1.679,120,1.019,121,0.079,122,1.041,123,1,124,1.063,125,1.063,126,0.956,127,1.156,128,1.019,129,1.156,130,1.063,131,1.156,132,1.063,133,1.156,134,1.041,135,1.156,136,1.041,137,1.156,138,0.734,139,1.156,140,1.041,141,0.505,142,1.156,143,1.063,144,1.156,145,1.063,146,1.679,147,1.063,148,1.156,149,1.063,150,1.679,151,1.063,152,1.156,153,1.086,154,1.156,155,1.019,156,1.156,157,1.063,158,1.156,159,1.041,160,0.977,161,1.156,162,1.063,163,1.949,164,1.508,165,1.636,166,1.156,167,1.019,168,0.591,169,1.156,170,1.041,171,1.063,172,1.156,173,1.063,174,1.156,175,1.041,176,1.041,177,1.019,178,1.156,179,1.041,180,1.156,181,0.977,182,0.822,183,1.019,184,1.156,185,1.019,186,1.302,187,1.041,188,1.063,189,0.641,190,0.998,191,0.804,192,1.063,193,1.086,194,1.156,195,1.063,196,0.977,197,1.156,198,1.063,199,1.156,200,0.998,201,1.063,202,1.063,203,0.977,204,1.156,205,1.063,206,0.734,207,0.878,208,0.998,209,1.041,210,1.156,211,1.019,212,1.156,213,1.019,214,1.156,215,0.998,216,1.156,217,0.998,218,1.156,219,0.998,220,1.086,221,1.156,222,0.006,223,0.006,226,0.438,315,1.072,455,5.53,726,1.573,766,2.492,975,3.158,1015,1.7,1102,1.739,1905,3.513,2209,5.145,2576,4.364,2577,3.944,2618,5.145,2751,2.494,3306,3.198,3411,4.633,3924,5.53,3946,4.583,3948,4.633,3949,6.826,3950,7.597,3951,6.826,3952,7.597,3953,5.232,3954,4.633]],["title/classes/MultiSourceList.html",[61,0.011,3955,3.024]],["body/classes/MultiSourceList.html",[0,0.132,2,0.441,3,0.056,4,0.126,9,0.05,13,1.327,14,0.655,15,1.344,17,0.472,18,0.462,20,0.552,21,0.483,22,1.399,23,0.483,24,1.399,25,0.062,26,0.412,27,1.522,28,1.437,30,0.66,33,0.708,35,2.04,37,0.758,39,0.755,40,0.008,41,0.423,42,0.181,43,0.706,45,0.843,46,1.123,49,0.624,50,1.2,51,1.108,53,0.193,54,0.227,55,1,60,0.136,61,0.013,62,1.145,63,1.123,64,0.897,72,1.327,92,1.937,103,0.576,115,0.586,117,1.127,121,0.09,126,1.2,168,0.372,182,1.235,189,0.8,190,0.628,191,1.388,207,1.237,222,0.008,223,0.004,226,0.275,234,1.073,235,1.937,244,1.522,246,1.655,248,0.988,253,1.327,256,1.478,260,1.061,284,1.045,301,1.617,315,1.287,371,1.94,537,0.842,538,2.828,548,1.175,549,2.085,553,1.437,561,2.28,567,2.678,574,1.568,602,1.159,608,0.791,621,4.011,637,2.288,652,3.012,691,2.146,720,1.201,725,1.23,728,2.79,742,3.012,753,0.742,761,3.444,763,1.937,764,2.209,769,3.266,778,2.949,780,3.251,783,2.501,787,2.446,790,2.157,791,1.045,792,1.362,793,1.568,803,1.293,811,2.662,826,2.215,834,3.626,844,1.929,877,2.095,890,1.478,907,0.655,924,1.788,927,3.308,942,2.422,945,2.779,978,2.28,988,1.889,992,2.779,1011,1.362,1012,1.293,1013,1.362,1015,1.601,1032,1.362,1039,2.209,1044,1.069,1065,1.682,1068,3.127,1240,2.39,1423,2.349,1433,2.913,1449,2.586,1470,3.269,1474,1.293,1483,1.67,1501,1.929,1503,2.153,1509,2.28,1512,2.103,1513,2.103,1517,1.929,1541,3.15,1566,2.913,1579,3.566,1664,2.999,1697,4.195,1716,2.779,1738,1.788,1744,2.011,1746,3.211,1747,2.011,1774,2.106,1807,1.399,1809,3.867,1836,1.929,1849,1.855,1852,2.103,1870,3.612,1901,4.157,1908,3.567,2010,1.855,2086,2.209,2087,1.929,2088,1.929,2096,2.103,2160,3.778,2173,2.011,2543,5.405,2776,2.209,2800,3.15,2841,5.237,2842,3.778,2844,2.103,2852,4.405,2866,3.493,2899,1.855,3559,2.011,3801,3.493,3843,2.103,3885,4.405,3937,1.929,3946,3.308,3955,4.953,3956,5.653,3957,5.929,3958,3.715,3959,3.715,3960,5.029,3961,4.454,3962,5.297,3963,4.454,3964,4.946,3965,4.454,3966,4.928,3967,4.188,3968,4.946,3969,4.946,3970,3.29,3971,4.928,3972,2.913,3973,3.715,3974,3.715,3975,3.715,3976,3.715,3977,4.364,3978,3.29,3979,5.765,3980,3.29,3981,3.715,3982,3.29,3983,3.715,3984,3.29,3985,3.29,3986,3.15,3987,3.715,3988,3.715,3989,3.29,3990,3.715,3991,3.715,3992,3.715,3993,3.29,3994,3.29,3995,3.715,3996,3.715,3997,3.29,3998,3.29,3999,2.48,4000,2.011,4001,3.012,4002,4.454,4003,3.715,4004,2.48,4005,2.332,4006,2.48,4007,2.48,4008,2.48,4009,3.715,4010,3.715,4011,2.48,4012,2.48,4013,2.48,4014,2.48,4015,3.715,4016,2.48,4017,3.715,4018,2.48,4019,2.48,4020,2.48,4021,2.48,4022,2.48,4023,2.48,4024,2.48,4025,2.48,4026,2.48,4027,2.48,4028,2.48,4029,2.48,4030,2.48,4031,2.48,4032,3.715,4033,4.454,4034,2.48,4035,2.48,4036,2.332,4037,2.48,4038,2.48,4039,2.48,4040,2.332,4041,2.48,4042,2.48,4043,2.48,4044,4.454,4045,2.48,4046,2.48,4047,2.48,4048,2.48,4049,2.48,4050,2.48,4051,2.48,4052,2.48,4053,2.48,4054,2.48,4055,2.48,4056,2.48,4057,2.48,4058,2.48,4059,2.209,4060,3.15,4061,4.188,4062,2.332,4063,2.332,4064,2.332,4065,3.493,4066,2.332,4067,2.332,4068,2.332,4069,2.48,4070,2.332,4071,2.48,4072,2.48,4073,3.493,4074,2.48,4075,2.48,4076,4.188,4077,2.48,4078,2.332,4079,2.48,4080,2.48,4081,3.715,4082,3.715,4083,2.48,4084,2.332,4085,2.48,4086,2.48,4087,2.48,4088,2.48,4089,2.48,4090,2.48,4091,2.48,4092,2.48,4093,3.715,4094,2.48,4095,2.48,4096,2.48,4097,2.48,4098,2.48,4099,2.48,4100,3.715,4101,2.48,4102,2.48,4103,2.48,4104,2.48,4105,2.48,4106,2.48,4107,2.48,4108,2.48,4109,2.48,4110,2.48,4111,2.48,4112,2.48,4113,3.715,4114,2.48,4115,2.48,4116,2.48,4117,2.48,4118,2.48,4119,2.332,4120,2.48]],["title/classes/NodeCache.html",[61,0.011,1927,2.879]],["body/classes/NodeCache.html",[3,0.04,4,0.036,9,0.036,14,0.754,15,1.034,19,0.948,25,0.044,26,0.458,27,0.622,30,0.508,33,0.337,37,0.553,39,0.8,40,0.008,41,0.353,42,0.175,43,0.553,45,0.903,46,0.345,50,0.429,51,0.716,53,0.147,60,0.125,61,0.016,63,1.14,64,1.034,66,1.924,72,1.528,78,2.59,88,2.204,92,0.923,96,0.738,103,0.411,109,1.194,115,0.279,121,0.036,126,1.284,168,0.904,182,0.942,189,0.681,207,0.799,222,0.003,223,0.003,226,0.196,227,1.026,228,3.487,231,0.763,234,1.295,235,2.15,246,1.82,248,0.922,260,0.991,293,0.909,315,1.272,317,2.209,371,1.751,459,0.998,485,1.501,523,2.137,537,0.601,538,2.588,545,1.703,547,1.818,548,1.325,549,2.506,557,1.026,563,1.324,567,1.276,569,1.026,572,1.611,573,2.59,574,2.86,575,1.472,595,1.034,602,1.412,608,0.847,616,1.77,617,2.59,621,2.317,622,0.818,623,3.046,641,2.4,672,2.137,675,2.687,691,2.356,705,0.972,720,0.857,724,1.77,726,0.873,752,1.232,753,1.965,757,2.686,761,1.989,762,3.487,763,1.49,767,2.857,769,2.4,772,2.687,774,1.77,776,4.548,777,1.377,778,2.9,780,3.445,785,3.932,787,2.794,791,0.746,795,1.577,803,1.49,811,2.521,816,1.152,817,0.998,818,2.59,819,1.989,820,1.119,826,1.055,833,0.972,834,2.688,841,1.973,844,3.518,877,3.401,888,1.119,890,2.142,907,0.754,924,1.276,942,1.863,948,3.384,956,2.794,973,1.501,978,2.776,992,1.324,999,1.577,1004,1.377,1015,2.864,1032,0.972,1035,3.084,1044,0.763,1053,1.377,1065,2.065,1073,1.377,1098,3.084,1123,1.501,1208,2.59,1240,2.837,1242,1.806,1244,1.276,1249,1.49,1253,1.026,1310,1.276,1367,2.968,1425,3.046,1449,2.501,1465,2.222,1470,2.15,1475,1.055,1479,1.665,1483,1.192,1491,3.261,1493,2.222,1496,1.665,1501,2.222,1503,3.578,1517,2.222,1533,4.532,1549,1.453,1579,1.276,1612,2.06,1620,1.665,1630,1.577,1632,3.669,1634,1.377,1653,2.222,1664,1.192,1679,1.577,1680,1.902,1681,5.21,1682,4.43,1683,3.07,1684,1.902,1685,4.861,1686,1.902,1687,3.07,1688,3.07,1689,1.902,1690,1.902,1691,1.902,1692,1.902,1693,2.545,1694,1.902,1695,1.902,1696,3.07,1697,3.046,1698,1.902,1699,2.857,1700,3.07,1701,3.07,1703,3.86,1705,1.902,1706,3.378,1710,1.902,1711,4.523,1712,1.77,1716,4.09,1717,3.496,1718,1.902,1719,3.07,1720,1.902,1721,1.902,1722,1.902,1723,1.902,1725,1.902,1729,1.902,1731,1.77,1732,3.07,1733,1.902,1734,1.902,1736,1.902,1737,1.902,1738,2.06,1739,1.902,1742,5.468,1743,4.523,1744,1.435,1745,2.222,1746,1.276,1747,1.435,1748,3.922,1749,1.77,1750,2.686,1751,1.665,1752,1.665,1753,5.088,1754,2.317,1755,2.857,1756,2.06,1757,1.77,1758,1.665,1759,3.592,1760,2.686,1761,1.902,1762,1.77,1763,2.686,1764,1.501,1765,1.77,1766,1.77,1767,2.857,1768,1.77,1769,3.378,1770,1.665,1771,1.902,1772,1.902,1773,1.902,1774,2.139,1775,2.545,1776,1.665,1777,1.77,1778,1.665,1779,1.192,1780,1.902,1781,1.902,1782,3.07,1783,2.857,1784,1.77,1785,3.86,1786,3.86,1787,1.902,1788,1.902,1789,2.137,1790,3.07,1791,1.577,1792,1.902,1793,1.902,1794,1.77,1795,3.07,1796,1.902,1797,2.857,1798,1.902,1799,1.902,1800,2.423,1801,1.902,1802,1.902,1803,1.902,1804,1.902,1805,1.902,1806,1.665,1807,0.998,1808,5.198,1809,3.981,1810,1.77,1811,3.86,1812,4.43,1813,1.77,1814,1.435,1815,6.286,1816,1.902,1817,1.902,1818,1.902,1819,4.43,1820,1.902,1821,3.07,1822,1.902,1823,3.86,1824,3.07,1825,3.86,1826,1.902,1827,3.86,1828,1.902,1829,4.43,1830,1.902,1831,1.902,1832,1.902,1833,1.902,1834,1.77,1835,1.577,1836,1.377,1837,1.665,1838,1.902,1839,1.902,1840,3.86,1841,1.665,1842,1.902,1843,1.902,1844,2.082,1845,4.861,1846,1.902,1847,1.77,1848,1.77,1849,2.687,1850,1.902,1851,1.77,1852,2.423,1853,1.77,1854,1.902,1855,1.902,1856,4.43,1857,3.86,1858,3.86,1859,1.276,1860,1.77,1861,1.77,1862,1.77,1863,3.07,1864,3.86,1865,1.902,1866,1.902,1867,4.861,1868,1.902,1869,1.902,1870,3.668,1871,2.857,1872,1.902,1873,1.902,1874,3.86,1875,1.77,1876,3.07,1877,1.902,1878,1.902,1879,3.86,1880,1.435,1881,1.902,1882,1.902,1883,1.902,1884,1.902,1885,1.902,1886,3.07,1887,1.902,1888,1.902,1889,3.07,1890,1.902,1891,1.902,1892,1.902,1893,1.902,1894,1.902,1895,2.545,1896,3.592,1897,3.07,1898,1.902,1899,1.377,1900,1.902,1901,1.276,1902,3.07,1903,1.902,1904,1.77,1905,1.577,1906,3.046,1907,2.222,1908,3.426,1909,1.902,1910,1.902,1911,1.902,1912,1.902,1913,1.77,1914,1.902,1915,1.902,1916,1.902,1917,1.902,1918,1.902,1919,1.902,1920,1.902,1921,1.902,1922,1.902,1923,1.902,1924,1.902,1925,1.902,1926,1.902,1927,3.496,1928,1.902,1929,4.861,1930,1.902,1931,3.07,1932,1.902,1933,1.902,1934,1.77,1935,2.857,1936,1.77,1937,1.377,1938,1.902,1939,1.902,1940,1.902,1941,1.902,1942,4.43,1943,3.86,1944,4.43,1945,3.86,1946,1.902,1947,1.902,1948,1.902,1949,4.861,1950,1.902,1951,1.902,1952,3.86,1953,3.86,1954,3.86,1955,3.86,1956,1.665,1957,3.592,1958,1.902,1959,1.902,1960,1.902,1961,3.592,1962,1.902,1963,2.686,1964,1.902,1965,1.902,1966,1.902,1967,1.902,1968,3.07,1969,1.902,1970,1.902,1971,1.501,1972,1.902,1973,1.501,1974,1.902,1975,1.902,1976,1.902,1977,1.49,1978,1.902,1979,1.902,1980,1.902,1981,3.592,1982,1.902,1983,3.86,1984,3.86,1985,1.665,1986,1.902,1987,1.902,1988,1.902,1989,1.902,1990,1.902,1991,1.902,1992,1.902,1993,1.902,1994,1.902,1995,1.902,1996,1.902,1997,1.902,1998,1.902,1999,1.902,2000,1.902,2001,1.902,2002,1.77,2003,1.77,2004,1.501,2005,1.77,2006,1.501,2007,3.876,2008,1.665,2009,1.902,2010,2.137,2011,1.665,2012,2.686,2013,3.07,2014,2.317,2015,3.07,2016,1.902,2017,1.902,2018,1.77,2019,2.501,2020,3.07,2021,2.857,2022,1.902,2023,1.902,2024,2.857,2025,1.902,2026,1.902,2027,1.902,2028,3.07,2029,2.857,2030,3.07,2031,3.07,2032,1.902,2033,1.902,2034,1.902,2035,1.902,2036,2.423,2037,1.902,2038,1.665,2039,1.902,2040,1.324,2041,1.324,2042,1.902,2043,1.902,2044,1.902,2045,1.902,2046,1.902,2047,1.902,2075,3.356,4121,3.79,4122,3.79,4123,3.79,4124,2.348,4125,2.348,4126,2.348]],["title/components/NodeDetailsComponent.html",[0,0.085,167,0.877]],["body/components/NodeDetailsComponent.html",[0,0.167,1,0.569,2,0.928,3,0.048,4,0.042,5,0.449,6,0.632,7,0.618,8,0.593,9,0.042,11,0.557,14,0.867,15,1.458,16,0.545,17,1.352,18,1.312,19,1.064,20,1.161,21,0.64,23,0.64,25,0.053,26,0.364,27,1.439,30,0.584,33,0.402,36,2.637,37,0.776,39,0.468,40,0.008,41,0.559,42,0.185,43,0.375,45,0.895,46,1.235,49,0.611,50,1.366,51,1.123,53,0.2,54,0.193,55,0.851,56,0.569,57,0.923,59,1.258,60,0.111,61,0.007,63,1.247,64,0.763,72,1.129,85,1.903,86,0.78,90,1.641,93,1.906,95,0.618,96,0.849,97,0.831,98,0.469,99,1.306,100,0.618,101,1.734,102,0.557,103,0.49,104,0.933,105,0.885,106,0.569,107,0.618,108,0.569,109,0.557,110,0.618,111,0.569,112,0.618,113,0.534,114,0.545,115,0.777,116,0.557,117,1.247,118,0.699,119,1.182,120,0.545,121,0.131,122,0.557,123,0.912,124,0.569,125,0.569,126,0.512,127,0.618,128,0.545,129,0.618,130,0.569,131,0.618,132,0.569,133,0.618,134,0.557,135,0.618,136,0.557,137,0.618,138,0.393,139,0.618,140,0.557,141,0.27,142,0.618,143,0.569,144,0.618,145,0.569,146,1.182,147,0.569,148,0.618,149,0.569,150,1.182,151,0.569,152,0.618,153,0.581,154,0.618,155,0.545,156,0.618,157,0.569,158,0.618,159,0.557,160,0.523,161,0.618,162,0.569,163,0.923,164,0.962,165,0.569,166,0.618,167,1.176,168,1.015,169,0.618,170,0.557,171,0.569,172,0.618,173,0.569,174,0.618,175,0.557,176,0.557,177,0.545,178,0.618,179,0.557,180,0.618,181,1.221,182,0.44,183,0.545,184,0.618,185,0.849,186,0.831,187,0.557,188,0.569,189,0.409,190,0.534,191,0.43,192,0.569,193,0.581,194,0.618,195,0.569,196,0.523,197,0.618,198,0.569,199,0.618,200,0.534,201,0.569,202,0.569,203,0.523,204,0.618,205,0.569,206,0.393,207,0.469,208,0.534,209,0.557,210,0.618,211,0.545,212,0.618,213,0.545,214,0.618,215,0.534,216,0.618,217,0.534,218,0.618,219,0.534,220,0.581,221,0.618,222,0.004,223,0.004,226,0.625,234,0.611,246,1.498,248,0.965,249,3.499,250,3.674,254,2.015,255,1.047,260,0.888,268,1.952,274,2.015,284,1.384,293,0.534,315,0.44,389,1.958,417,1.641,427,1.641,431,2.367,447,5.095,459,2.78,499,1.022,529,1.646,535,3.111,544,1.958,548,0.927,552,4.262,553,2.637,595,1.188,602,1.258,608,0.65,625,1.984,670,3.28,678,1.711,719,1.421,726,1.595,766,1.59,778,1.819,790,1.022,792,1.159,816,1.324,828,2.474,829,1.223,833,1.159,835,1.421,836,1.961,837,1.789,838,1.789,840,2.554,866,1.159,868,1.737,873,1.295,888,2.076,904,2.456,907,0.867,926,3.431,987,2.403,988,2.313,995,2.456,1010,1.789,1011,1.159,1012,1.1,1013,1.159,1015,1.961,1029,3.529,1030,2.785,1031,2.924,1032,3.178,1033,2.785,1034,2.663,1035,2.456,1036,3.283,1043,3.529,1095,3.858,1096,3.79,1102,0.93,1155,2.11,1178,1.421,1195,1.415,1199,2.267,1229,1.295,1261,1.578,1262,1.334,1304,4.621,1308,2.11,1315,5.343,1335,4.735,1354,3.857,1358,4.735,1404,2.11,1405,1.578,1411,3.79,1412,2.924,1413,4.332,1414,5.609,1415,4.332,1416,4.332,1417,3.79,1418,2.663,1419,3.135,1421,4.888,1422,4.907,1442,2.785,1443,3.857,1444,5.634,1445,4.778,1446,3.857,1448,1.984,1470,2.102,1549,1.67,1553,4.621,1554,2.11,1598,3.529,1634,2.554,1670,2.966,1777,2.11,1859,2.367,1904,3.283,1937,1.641,1963,1.984,1971,1.789,1977,1.712,2074,4.735,2115,3.283,2143,4.051,2263,3.403,2289,1.421,2587,5.789,2599,3.857,2663,1.984,2818,2.267,2830,1.789,3031,1.421,3093,3.857,3306,2.663,3456,3.857,3460,2.267,4127,6.404,4128,2.11,4129,5.347,4130,4.356,4131,4.735,4132,4.735,4133,6.131,4134,5.347,4135,5.347,4136,6.034,4137,6.034,4138,6.034,4139,6.034,4140,6.034,4141,6.034,4142,4.356,4143,6.034,4144,4.356,4145,2.799,4146,4.356,4147,2.799,4148,2.799,4149,2.799,4150,2.799,4151,3.857,4152,2.799,4153,3.087,4154,2.799,4155,2.799,4156,2.799,4157,2.799,4158,2.799,4159,2.799,4160,4.356,4161,2.799,4162,2.799,4163,2.799,4164,2.799,4165,2.799,4166,2.799,4167,2.799,4168,2.799,4169,2.799,4170,2.799,4171,2.799,4172,2.799,4173,2.799,4174,2.799,4175,2.799,4176,2.799,4177,2.799,4178,2.799,4179,2.799,4180,2.799,4181,5.789,4182,7.372,4183,5.855,4184,3.857,4185,3.857,4186,2.478,4187,2.799,4188,2.799,4189,2.799,4190,2.799,4191,2.799,4192,2.799,4193,4.356,4194,5.855,4195,2.799,4196,4.356,4197,2.799,4198,4.356,4199,2.799,4200,2.799,4201,2.799,4202,2.799,4203,2.799,4204,2.799,4205,2.799,4206,4.356,4207,2.799,4208,2.799,4209,4.356,4210,4.356,4211,2.799,4212,2.799,4213,5.347,4214,4.356,4215,2.799,4216,2.799,4217,2.799,4218,2.799,4219,2.799,4220,6.923,4221,4.356,4222,4.356,4223,4.356,4224,2.799,4225,6.034,4226,4.356,4227,6.923,4228,2.799,4229,4.356,4230,2.799,4231,2.799,4232,4.356,4233,4.356,4234,2.799,4235,4.356,4236,2.799,4237,2.799,4238,2.799,4239,2.799,4240,2.799,4241,2.799,4242,2.799,4243,2.799,4244,2.799,4245,2.799,4246,4.356,4247,2.799,4248,2.799,4249,2.799,4250,6.034,4251,5.347,4252,2.799]],["title/components/NodeDetailsPageComponent.html",[0,0.085,170,0.896]],["body/components/NodeDetailsPageComponent.html",[0,0.147,1,0.982,2,0.868,3,0.082,4,0.073,5,0.776,6,1.09,7,1.068,8,1.024,9,0.073,11,0.962,14,1.289,15,1.992,16,0.942,17,1.384,18,1.349,19,0.962,20,0.811,21,0.951,23,0.951,25,0.091,26,0.542,30,0.868,33,0.694,37,0.701,39,0.696,40,0.008,41,0.552,42,0.169,43,0.558,45,0.533,46,0.951,49,0.558,50,1.336,51,1.097,53,0.18,54,0.334,56,0.982,57,1.373,60,0.1,61,0.012,63,0.951,64,1.318,95,1.068,96,1.262,97,1.235,98,0.811,99,1.689,100,1.068,101,1.966,102,0.962,103,0.846,104,1.033,105,1.316,106,0.982,107,1.068,108,0.982,109,0.962,110,1.068,111,0.982,112,1.068,113,0.922,114,0.942,115,0.967,116,0.962,117,0.922,118,1.04,119,1.614,120,0.942,121,0.073,122,0.962,123,0.991,124,0.982,125,0.982,126,0.884,127,1.068,128,0.942,129,1.068,130,0.982,131,1.068,132,0.982,133,1.068,134,0.962,135,1.068,136,0.962,137,1.068,138,0.678,139,1.068,140,0.962,141,0.625,142,1.068,143,0.982,144,1.068,145,0.982,146,1.614,147,0.982,148,1.068,149,0.982,150,1.614,151,0.982,152,1.068,153,1.003,154,1.068,155,0.942,156,1.068,157,0.982,158,1.068,159,0.962,160,0.903,161,1.068,162,0.982,163,1.373,164,1.431,165,0.982,166,1.068,167,0.942,168,0.947,169,1.068,170,1.553,171,0.982,172,1.068,173,0.982,174,1.068,175,0.962,176,0.962,177,0.942,178,1.068,179,0.962,180,1.068,181,0.903,182,0.759,183,0.942,184,1.068,185,0.942,186,1.235,187,0.962,188,0.982,189,0.608,190,0.922,191,0.742,192,0.982,193,1.003,194,1.068,195,0.982,196,0.903,197,1.068,198,0.982,199,1.068,200,0.922,201,0.982,202,0.982,203,0.903,204,1.068,205,0.982,206,0.678,207,0.811,208,0.922,209,0.962,210,1.068,211,0.942,212,1.068,213,0.942,214,1.068,215,0.922,216,1.068,217,0.922,218,1.068,219,0.922,220,1.003,221,1.068,222,0.006,223,0.006,260,0.77,293,0.922,317,2.475,446,3.09,447,2.725,448,3.245,459,3.935,460,6.314,499,1.764,535,3.845,599,3.52,602,1.719,778,2.485,836,2.374,868,2.374,926,3.399,1060,3.834,1061,4.096,1095,4.67,1151,2.627,1291,4.119,1292,3.834,2676,4.401,2715,3.399,3056,3.245,3496,4.279,3889,3.915,4127,5.938,4182,5.735,4183,3.915,4185,5.735,4194,3.915,4253,4.279,4254,7.305,4255,6.477,4256,6.477,4257,6.477,4258,6.477,4259,4.833,4260,4.833,4261,4.833,4262,4.833,4263,4.833]],["title/interfaces/NodeId.html",[121,0.068,778,1.532]],["body/interfaces/NodeId.html",[0,0.138,2,0.651,3,0.083,4,0.074,9,0.074,25,0.092,26,0.544,40,0.008,42,0.195,45,0.535,49,0.63,51,1.1,60,0.19,88,2.248,92,1.91,104,0.772,118,0.78,121,0.111,123,0.698,126,1.43,159,0.967,168,1.066,206,0.912,222,0.006,223,0.006,226,0.406,231,2.784,234,0.912,248,0.772,260,0.929,281,1.975,317,1.383,371,2.041,459,2.066,512,2.248,515,2.43,529,1.325,538,2.808,548,1.464,549,1.544,566,3.262,569,2.123,575,2,576,2.641,591,4.607,595,2.223,602,1.143,608,0.766,637,2.131,691,1.413,753,1.964,762,3.85,778,2.914,811,2.112,818,3.533,827,3.444,835,3.299,836,2.649,841,3.238,864,3.444,885,2.849,890,2.184,942,2.388,965,3.106,978,3.389,1009,3.444,1065,1.85,1074,3.811,1229,3.007,1246,2.641,1249,1.91,1262,2.316,1310,2.641,1367,2.248,1424,3.299,1470,2.879,1474,1.91,1475,2.921,1483,3.299,1503,2.123,1585,3.106,1745,2.849,1746,3.981,1774,1.732,1807,2.764,1844,2.84,1895,3.262,1899,3.811,1901,3.533,1906,4.156,1908,2.466,1973,3.106,2010,2.74,2019,2.55,2087,2.849,2088,4.295,2136,2.97,2138,2.466,2289,2.466,2403,4.131,2637,3.262,2638,3.106,2643,3.444,2825,4.364,2830,3.106,2847,3.262,2848,3.262,3828,3.106,3829,5.934,3830,5.934,3831,3.936,3832,4.9,3833,5.896,3834,3.662,3835,3.662,3836,3.936,3837,3.936,3838,3.936,3839,3.936,3840,5.266,3841,4.9,3842,5.266,3843,3.106,3844,5.266,3845,5.266,3846,5.266,3847,5.266,3848,3.936,3849,3.936,3850,5.266,3851,3.936,3852,3.936,3853,3.936,3854,3.936,3855,3.936,3856,3.936,3857,3.936,3858,3.936,3859,3.936,3860,3.936,3861,3.936,3862,3.662,3863,3.662,3864,3.662,3865,3.662,3866,3.662,3867,3.662,3868,3.662,3869,3.444,3870,3.936,3871,3.936,3872,3.936,3873,3.936,3874,3.936,3875,3.936,3876,3.936,3877,3.936]],["title/interfaces/Position.html",[121,0.068,1069,1.816]],["body/interfaces/Position.html",[0,0.152,3,0.09,4,0.123,5,1.103,9,0.104,25,0.1,26,0.575,40,0.008,42,0.19,49,0.661,53,0.199,60,0.143,61,0.017,104,0.628,115,0.628,121,0.139,123,0.738,138,0.742,141,0.663,168,0.971,189,0.787,191,0.812,222,0.006,223,0.006,234,1.135,248,0.907,260,0.628,284,2.425,296,4.119,316,3.099,515,1.642,529,1.441,541,1.505,548,1.32,595,2.418,608,0.833,622,1.84,720,1.929,725,1.977,817,2.247,836,1.717,907,1.764,953,3.231,1065,2.445,1066,3.62,1069,3.673,1070,3.718,1093,1.977,1197,3.246,1205,4.477,1206,2.375,1207,2.98,1208,4.668,1209,5.036,1210,3.639,1211,3.275,1212,2.873,1213,2.519,1214,3.237,1215,3.275,1216,2.683,1217,2.774,1218,4.15,1219,4.243,1220,4.477,1221,3.231,1222,3.231,1223,3.231,1224,3.231,1225,3.231,1226,3.231,1227,3.231,1228,3.231,1229,3.179,1230,3.231,1231,3.231,1232,4.2,1233,3.753,1234,3.379,1235,3.099,1236,2.247,1237,3.735,1238,3.379,1239,3.379,1240,1.798,1241,2.445,1242,2.519,1243,3.231,1244,2.873,1245,2.598,1246,2.873,1247,3.231,1248,3.379,1249,2.078,1250,3.379,1251,2.683,1252,3.379,1253,2.31,1254,3.379,1255,2.98,1256,3.379,1257,3.231,1258,3.379,1259,4.305,1260,2.774,1261,2.98,1262,2.519,1263,3.875,1264,3.379,1265,3.379,1266,3.379,1267,4.029,1268,3.379,1269,4.393,1270,3.379,1271,3.379,1272,3.379,1273,3.231,1274,1.929,1275,3.875,1276,4.881,1277,3.379,1278,3.379,1279,4.393,1280,3.379,1281,4.393,1282,4.393,1283,3.379,1284,3.379,1285,4.15,1286,4.393,1287,3.231,1288,4.2,1289,4.393,1290,3.379,1291,4.559,1292,3.606,1293,3.379,1294,3.231,1295,3.379,1296,3.379,1297,3.379,1298,3.231,1299,4.029,1300,3.231,1301,2.98,1302,3.231,1303,2.774]],["title/interfaces/Positions.html",[121,0.068,4264,3.649]],["body/interfaces/Positions.html",[0,0.166,2,0.735,3,0.026,4,0.083,5,0.976,9,0.023,14,0.299,15,0.711,17,0.216,18,0.211,20,1.02,21,0.221,23,0.221,25,0.028,26,0.39,27,0.676,30,0.201,36,1.139,40,0.008,42,0.171,45,0.454,46,0.685,49,0.503,50,0.275,51,0.226,53,0.2,54,0.104,55,0.457,59,1.552,60,0.031,61,0.012,63,1.296,64,0.41,66,2.593,68,2.318,69,4.126,72,0.606,80,1.848,82,1.066,83,1.594,85,0.657,86,1.423,93,0.536,96,0.293,97,0.287,103,0.263,104,0.41,113,0.287,114,0.293,115,0.554,120,0.293,121,0.133,123,0.943,138,0.211,141,0.87,168,1.034,186,0.287,189,0.387,191,0.231,196,0.281,206,0.815,222,0.002,223,0.003,226,0.126,228,3.436,234,0.967,246,1.414,248,0.751,260,1.09,267,0.952,268,1.865,271,1.966,281,1.848,293,0.287,295,1.133,296,4.467,301,1.697,310,2.537,311,0.817,315,1.056,317,2.138,322,2.318,340,4.134,341,1.066,355,1.066,371,0.588,412,1.697,428,1.331,437,2.113,442,1.331,443,3.965,444,0.961,445,1.331,446,0.961,447,0.848,448,1.009,459,2.468,487,2.767,493,1.066,499,0.549,512,0.696,515,2.362,523,1.47,529,1.658,535,1.552,536,1.066,537,0.385,540,0.622,541,0.428,544,1.172,548,0.892,549,1.097,550,2.318,553,0.657,556,1.369,557,1.509,558,1.133,561,2.813,562,2.207,563,0.848,567,0.817,569,0.657,572,1.109,573,1.877,574,0.717,575,2.08,576,1.877,583,4.372,594,1.529,602,0.97,608,0.774,611,2.212,615,1.947,617,0.817,622,2.45,637,0.759,641,2.683,648,1.133,650,1.218,654,0.789,671,3.352,672,3.093,680,2.767,684,1.529,691,0.437,703,1.133,705,1.93,720,1.26,723,1.331,726,0.601,728,1.109,742,0.919,751,1.133,753,0.93,761,1.369,762,2.609,763,1.025,772,0.848,777,1.529,787,0.622,803,0.591,814,2.222,816,1.553,817,2.332,818,1.417,821,2.318,824,2.797,828,1.206,829,0.657,841,2.115,861,5.192,863,0.848,865,2.416,868,0.847,873,1.206,876,1.331,881,5.251,888,0.717,890,1.852,900,3.506,903,5.546,904,0.848,907,1.513,924,1.417,925,3.13,942,0.739,945,1.47,956,2.733,957,4.528,970,5.192,973,3.266,992,1.47,1007,3.888,1015,0.489,1032,1.079,1034,0.919,1041,2.113,1052,3.352,1065,0.983,1066,2.851,1068,0.717,1069,2.71,1070,2.928,1072,0.622,1087,1.066,1093,0.975,1095,2.207,1097,1.966,1099,1.009,1100,2.733,1101,3.506,1102,1.148,1111,0.848,1174,2.119,1179,3.579,1188,2.113,1206,0.676,1208,0.817,1213,0.717,1214,1.702,1215,1.964,1216,0.763,1217,0.789,1218,0.817,1219,2.163,1233,1.697,1236,1.982,1240,2.481,1241,2.685,1242,0.717,1243,0.919,1244,1.417,1245,1.697,1249,1.357,1251,4.08,1253,1.139,1257,2.111,1259,0.848,1263,1.47,1275,1.47,1285,2.981,1288,2.111,1294,2.111,1304,2.207,1307,1.331,1310,0.817,1317,4.512,1402,1.529,1403,0.882,1404,1.133,1407,1.009,1422,3.304,1445,0.961,1449,2.163,1467,3.777,1475,0.676,1476,2.207,1486,1.133,1493,2.733,1541,0.961,1550,1.848,1551,2.519,1553,2.207,1554,1.133,1579,3.305,1589,4.988,1590,0.763,1630,2.767,1641,1.331,1645,3.993,1655,1.964,1672,2.603,1712,1.133,1738,0.817,1774,0.536,1779,1.324,1784,1.966,1789,0.848,1807,0.639,1844,0.657,1859,0.817,1860,1.133,1862,1.133,1907,0.882,1936,1.133,1971,2.207,1977,2.008,1981,1.133,1985,2.447,2004,1.667,2040,0.848,2103,1.218,2122,1.218,2148,1.009,2158,1.009,2170,0.961,2176,1.133,2178,2.318,2209,1.133,2218,1.218,2226,1.218,2232,2.603,2240,1.218,2250,1.133,2251,1.133,2252,1.133,2264,2.318,2302,2.318,2303,1.877,2306,1.751,2310,0.961,2311,1.751,2312,1.594,2315,1.009,2336,1.009,2337,0.961,2340,2.519,2400,4.386,2402,1.009,2403,1.947,2409,0.961,2456,1.218,2463,4.083,2465,1.218,2618,3.514,2631,1.331,2676,1.947,2689,3.13,2693,1.331,2696,3.058,2714,1.331,2715,1.369,2718,1.331,2855,0.919,2899,2.324,2923,1.331,2969,2.603,2971,1.218,2975,2.309,2976,1.133,2979,6.23,2984,1.009,2988,6.65,2989,5.192,2994,4.857,2995,4.524,2996,4.524,3001,1.009,3009,1.218,3013,1.218,3015,2.309,3017,3.058,3031,1.753,3032,4.524,3051,2.309,3052,1.218,3064,1.218,3078,3.649,3083,1.848,3085,1.331,3088,1.331,3102,2.603,3104,1.218,3105,3.106,3107,2.309,3115,2.113,3127,2.603,3129,1.218,3137,3.338,3143,1.331,3144,3.649,3178,2.309,3203,2.603,3226,3.43,3230,2.113,3234,1.848,3235,1.218,3307,1.331,3415,1.331,3423,2.309,3449,2.309,3511,1.133,3662,1.331,3697,1.848,3714,1.218,3727,1.751,3746,1.218,3761,1.218,3762,1.966,3780,4.139,3835,1.133,3841,1.133,3879,1.331,4183,1.218,4194,1.218,4264,6.295,4265,1.331,4266,5.109,4267,2.608,4268,2.608,4269,2.608,4270,2.608,4271,4.662,4272,2.608,4273,6.887,4274,1.504,4275,1.504,4276,1.504,4277,1.504,4278,1.331,4279,1.504,4280,1.504,4281,1.504,4282,1.504,4283,1.504,4284,1.504,4285,2.608,4286,1.504,4287,1.504,4288,1.504,4289,2.608,4290,4.121,4291,1.504,4292,1.504,4293,1.504,4294,3.453,4295,1.504,4296,1.504,4297,2.608,4298,1.504,4299,1.504,4300,1.504,4301,1.504,4302,1.504,4303,1.504,4304,2.608,4305,1.504,4306,1.504,4307,1.504,4308,1.504,4309,1.504,4310,1.504,4311,1.331,4312,1.504,4313,1.504,4314,1.504,4315,1.504,4316,1.504,4317,1.504,4318,1.504,4319,1.504,4320,7.407,4321,1.504,4322,3.453,4323,1.504,4324,5.109,4325,1.504,4326,2.608,4327,1.504,4328,1.504,4329,2.608,4330,1.504,4331,1.504,4332,2.608,4333,1.504,4334,1.504,4335,1.504,4336,1.504,4337,4.121,4338,2.608,4339,5.109,4340,3.453,4341,1.751,4342,2.608,4343,2.608,4344,1.504,4345,2.603,4346,1.504,4347,1.504,4348,1.504,4349,1.504,4350,1.504,4351,1.504,4352,1.504,4353,1.331,4354,1.504,4355,1.504,4356,1.504,4357,1.504,4358,1.504,4359,1.504,4360,1.504,4361,1.504,4362,2.608,4363,1.504,4364,1.504,4365,1.504,4366,1.504,4367,1.504,4368,3.453,4369,1.504,4370,1.504,4371,2.608,4372,1.504,4373,2.608,4374,1.504,4375,3.453,4376,1.504,4377,1.504,4378,4.134,4379,4.662,4380,1.504,4381,2.608,4382,1.504,4383,2.608,4384,1.504,4385,1.504,4386,2.608,4387,1.504,4388,2.608,4389,2.608,4390,5.805,4391,6.533,4392,3.453,4393,3.453,4394,3.453,4395,4.121,4396,2.608,4397,1.504,4398,1.504,4399,1.504,4400,1.504,4401,1.504,4402,1.504,4403,1.504,4404,4.121,4405,1.504,4406,6.887,4407,3.453,4408,3.453,4409,3.453,4410,1.504,4411,1.504,4412,1.504,4413,2.608,4414,4.662,4415,1.504,4416,1.504,4417,1.504,4418,1.504,4419,1.504,4420,1.504,4421,1.504,4422,1.504,4423,1.504,4424,1.504,4425,1.504,4426,1.504,4427,1.504,4428,3.453,4429,1.504,4430,1.504,4431,1.504,4432,1.504,4433,1.504,4434,1.504,4435,1.504,4436,2.113,4437,1.504,4438,3.453,4439,1.504,4440,1.504,4441,1.504,4442,4.121,4443,4.121,4444,1.504,4445,1.504,4446,1.504,4447,1.504,4448,3.453,4449,4.662,4450,4.121,4451,2.608,4452,1.504,4453,2.608,4454,1.504,4455,1.504,4456,1.504,4457,1.504,4458,1.504,4459,1.504,4460,1.504,4461,1.331,4462,1.504,4463,1.504,4464,1.504,4465,1.504,4466,1.504,4467,4.662,4468,1.504,4469,2.608,4470,1.504,4471,1.504,4472,1.504,4473,1.504,4474,3.453,4475,1.504,4476,1.504,4477,1.218,4478,1.504,4479,2.608,4480,5.109,4481,5.109,4482,2.608,4483,5.109,4484,1.504,4485,1.504,4486,1.504,4487,1.504,4488,1.504,4489,2.608,4490,1.133,4491,2.608,4492,1.133,4493,1.504,4494,1.504,4495,1.504,4496,4.662,4497,1.504,4498,1.504,4499,1.504,4500,1.504,4501,4.121,4502,1.504,4503,1.504,4504,1.331,4505,1.504,4506,1.331,4507,2.608,4508,2.608,4509,2.608,4510,2.608,4511,3.453,4512,2.608,4513,1.504,4514,3.453,4515,1.504,4516,1.504,4517,1.504,4518,1.504,4519,1.504,4520,1.504,4521,2.608,4522,1.504,4523,4.662,4524,1.504,4525,1.504,4526,1.504,4527,4.121,4528,1.504,4529,1.504,4530,4.121,4531,1.504,4532,4.121,4533,1.504,4534,2.113,4535,1.504,4536,1.504,4537,1.504,4538,2.608,4539,1.504,4540,1.504,4541,1.504,4542,2.608,4543,1.504,4544,1.504,4545,1.504,4546,1.504,4547,1.504,4548,1.504,4549,4.121,4550,1.504,4551,1.504,4552,2.608,4553,1.504,4554,1.504,4555,1.966,4556,2.608,4557,1.504,4558,1.504,4559,1.504,4560,4.662,4561,2.608,4562,1.504,4563,1.504,4564,1.504,4565,1.504,4566,1.504,4567,3.453,4568,1.504,4569,1.504,4570,1.504,4571,2.608,4572,1.504,4573,1.504,4574,1.504,4575,1.504,4576,2.608,4577,1.504,4578,4.662,4579,1.504,4580,1.504,4581,1.504,4582,1.504,4583,1.504,4584,1.504,4585,1.504,4586,1.504,4587,1.504,4588,1.504,4589,1.504,4590,1.504,4591,1.504,4592,1.504,4593,1.331,4594,1.504,4595,1.504,4596,1.504,4597,1.504,4598,1.504,4599,1.504,4600,1.504,4601,2.608,4602,3.453,4603,1.504,4604,1.504,4605,1.504,4606,1.504,4607,2.608,4608,1.504,4609,1.504,4610,1.504,4611,1.504,4612,1.504,4613,1.504,4614,1.504,4615,2.608,4616,1.504,4617,1.504,4618,1.504,4619,1.504,4620,1.504,4621,1.504,4622,1.504,4623,1.504,4624,1.504,4625,1.504,4626,1.504,4627,1.504,4628,1.504,4629,1.504,4630,1.504,4631,1.504,4632,1.504,4633,2.608,4634,2.608,4635,2.608,4636,2.608,4637,1.504,4638,1.504,4639,1.504,4640,1.504,4641,1.504,4642,1.504,4643,2.608,4644,1.504,4645,1.504,4646,1.504,4647,1.504,4648,1.504,4649,2.608,4650,1.504,4651,1.504,4652,1.504,4653,1.504,4654,1.331,4655,1.504,4656,1.504,4657,1.504,4658,1.504,4659,1.504,4660,1.504,4661,1.504,4662,1.504,4663,1.504,4664,1.504,4665,1.504,4666,1.504,4667,1.504,4668,1.504,4669,2.608,4670,1.504,4671,1.504,4672,1.504,4673,1.504,4674,1.504,4675,2.608,4676,1.504,4677,1.504,4678,1.504,4679,1.504,4680,4.121,4681,4.121,4682,2.608,4683,1.504,4684,2.608,4685,1.504,4686,1.504,4687,1.504,4688,1.504,4689,1.504,4690,3.453,4691,1.504,4692,1.504,4693,2.608,4694,1.504,4695,2.608,4696,1.504,4697,2.608,4698,1.504,4699,1.504,4700,1.504,4701,1.504,4702,1.504,4703,2.608,4704,2.608,4705,2.608,4706,2.309,4707,2.608,4708,2.608,4709,2.608,4710,2.608,4711,1.504,4712,2.608,4713,2.608,4714,2.608,4715,1.504,4716,2.608,4717,2.608,4718,1.504,4719,1.504,4720,1.504,4721,1.504,4722,2.608,4723,1.504,4724,1.504,4725,2.608,4726,2.608,4727,2.608,4728,1.331,4729,1.504,4730,1.504,4731,3.453,4732,3.453,4733,3.453,4734,3.453,4735,1.504,4736,1.504,4737,1.504,4738,1.504,4739,4.121,4740,1.504,4741,4.121,4742,1.504,4743,3.453,4744,1.504,4745,3.453,4746,1.504,4747,1.504,4748,1.504,4749,1.504,4750,1.504,4751,1.504,4752,1.504,4753,1.504,4754,2.608,4755,1.504,4756,1.504,4757,1.504,4758,1.504,4759,1.504,4760,1.504,4761,1.218,4762,1.066,4763,1.504,4764,1.504,4765,1.504,4766,1.504,4767,1.504,4768,1.504,4769,1.504,4770,1.504,4771,1.504,4772,1.504]],["title/components/ProfileSettingsDialogComponent.html",[0,0.085,171,0.915]],["body/components/ProfileSettingsDialogComponent.html",[0,0.142,1,0.907,2,0.822,3,0.076,4,0.068,5,0.717,6,1.008,7,0.987,8,0.946,9,0.068,11,0.888,13,1.801,14,1.221,15,1.913,16,0.87,17,1.381,18,1.345,19,0.888,20,1.406,21,0.902,22,2.982,23,0.902,24,2.61,25,0.084,26,0.514,27,1.484,28,3.301,30,0.822,32,6.689,33,0.641,34,2.518,35,3.278,36,3.301,37,0.755,39,0.659,40,0.008,41,0.54,42,0.157,43,0.529,45,0.873,46,1.231,48,3.954,49,0.319,50,1.282,51,1.054,53,0.172,54,0.309,55,1.357,56,1.247,57,2.011,58,2.998,59,2.007,60,0.093,61,0.011,62,1.554,63,0.656,64,1.218,65,3.954,66,2.266,67,3.954,68,4.709,69,2.618,70,2.343,71,3.617,72,2.829,73,5.436,85,3.575,86,1.244,87,3.366,95,0.987,96,1.196,97,1.171,98,0.749,99,1.635,100,0.987,101,1.937,102,0.888,103,0.782,104,1.015,105,1.247,106,0.907,107,0.987,108,0.907,109,0.888,110,0.987,111,0.907,112,0.987,113,0.852,114,0.87,115,0.941,116,0.888,117,0.852,118,0.986,119,1.55,120,0.87,121,0.068,122,0.888,123,0.981,124,0.907,125,0.907,126,0.816,127,0.987,128,0.87,129,0.987,130,0.907,131,0.987,132,0.907,133,0.987,134,0.888,135,0.987,136,0.888,137,0.987,138,0.627,139,0.987,140,0.888,141,0.431,142,0.987,143,0.907,144,0.987,145,0.907,146,1.55,147,0.907,148,0.987,149,0.907,150,1.55,151,0.907,152,0.987,153,0.927,154,0.987,155,0.87,156,0.987,157,0.907,158,0.987,159,0.888,160,0.834,161,0.987,162,0.907,163,1.301,164,1.356,165,0.907,166,0.987,167,0.87,168,0.505,169,0.987,170,0.888,171,1.535,172,1.937,173,0.907,174,0.987,175,0.888,176,0.888,177,0.87,178,0.987,179,0.888,180,0.987,181,0.834,182,0.701,183,0.87,184,0.987,185,0.87,186,1.171,187,0.888,188,0.907,189,0.576,190,0.852,191,0.686,192,0.907,193,0.927,194,0.987,195,0.907,196,0.834,197,0.987,198,0.907,199,0.987,200,0.852,201,0.907,202,0.907,203,0.834,204,0.987,205,0.907,206,0.627,207,0.749,208,0.852,209,0.888,210,0.987,211,0.87,212,0.987,213,0.87,214,0.987,215,0.852,216,0.987,217,0.852,218,0.987,219,0.852,220,0.927,221,0.987,222,0.005,223,0.005,226,0.587,245,3.617,246,1.635,247,5.436,248,0.729,315,1.102,472,6.673,594,3.599,602,1.65,608,0.419,667,6.052,670,2.427,1007,3.924,1068,2.926,1441,3.954,1444,5.694,1478,3.366,1565,3.165,4773,7.839,4774,7.422,4775,7.014,4776,7.553,4777,5.436,4778,7.553,4779,4.465,4780,5.436,4781,3.954,4782,4.465,4783,7.014,4784,3.954,4785,6.138,4786,7.553,4787,7.553]],["title/components/ProjectHeaderComponent.html",[0,0.085,173,0.915]],["body/components/ProjectHeaderComponent.html",[0,0.16,1,1.029,2,0.895,3,0.086,4,0.077,5,0.813,6,1.142,7,1.119,8,1.073,9,0.077,11,1.007,16,0.986,17,1.387,18,1.352,19,1.007,20,0.849,21,0.981,23,0.981,25,0.096,37,0.576,40,0.008,41,0.558,42,0.139,49,0.568,53,0.124,54,0.35,56,1.029,57,1.416,60,0.105,61,0.013,86,1.861,92,2.626,95,1.119,96,1.302,97,1.274,98,0.849,99,1.72,100,1.119,101,1.983,102,1.007,103,0.887,104,1.114,105,1.358,106,1.029,107,1.119,108,1.029,109,1.007,110,1.119,111,1.029,112,1.119,113,0.966,114,0.986,115,0.982,116,1.007,117,0.966,118,1.073,119,1.652,120,0.986,121,0.077,122,1.007,123,0.996,124,1.029,125,1.029,126,0.926,127,1.119,128,0.986,129,1.119,130,1.029,131,1.119,132,1.029,133,1.119,134,1.007,135,1.119,136,1.007,137,1.119,138,0.711,139,1.119,140,1.007,141,0.489,142,1.119,143,1.029,144,1.119,145,1.029,146,1.652,147,1.029,148,1.119,149,1.029,150,1.652,151,1.029,152,1.119,153,1.051,154,1.119,155,0.986,156,1.119,157,1.029,158,1.119,159,1.007,160,0.946,161,1.119,162,1.029,163,1.416,164,1.476,165,1.029,166,1.119,167,0.986,168,0.572,169,1.119,170,1.007,171,1.029,172,1.119,173,1.616,174,1.119,175,1.007,176,1.007,177,0.986,178,1.119,179,1.007,180,1.119,181,0.946,182,0.795,183,0.986,184,1.119,185,0.986,186,1.274,187,1.007,188,1.029,189,0.627,190,0.966,191,0.778,192,1.029,193,1.051,194,1.119,195,1.029,196,0.946,197,1.119,198,1.029,199,1.119,200,0.966,201,1.029,202,1.029,203,1.248,204,1.119,205,1.029,206,0.711,207,0.849,208,0.966,209,1.007,210,1.119,211,0.986,212,1.119,213,0.986,214,1.119,215,0.966,216,1.119,217,0.966,218,1.119,219,0.966,220,1.051,221,1.119,222,0.006,223,0.006,226,0.424,267,2.439,268,1.848,277,1.941,284,2.626,548,1.221,726,1.723,766,2.439,811,1.645,868,2.685,907,1.329,975,3.09,1072,2.765,1174,1.848,1187,3.917,1193,2.919,1194,2.096,1195,2.171,1546,2.855,1548,4.485,1549,1.941,1636,3.095,1637,3.391,1655,2.413,1678,5.916,1849,3.767,2212,2.57,2263,2.855,2273,4.735,2558,6.057,2613,3.237,2897,4.271,3096,3.237,3523,3.817,4490,3.817,4788,4.78,4789,4.483,4790,7.477,4791,6.681,4792,7.319,4793,5.063,4794,5.063,4795,4.102]],["title/components/ProjectIssueListComponent.html",[0,0.085,175,0.896]],["body/components/ProjectIssueListComponent.html",[0,0.154,1,0.905,2,0.821,3,0.076,4,0.067,5,0.715,6,1.004,7,0.984,8,0.943,9,0.067,11,0.886,14,1.219,15,1.91,16,0.867,17,1.381,18,1.345,19,0.886,20,0.747,21,0.9,23,0.9,25,0.084,26,0.512,27,1.421,33,0.639,37,0.65,39,0.478,40,0.008,41,0.527,42,0.17,43,0.384,46,0.654,49,0.438,53,0.201,54,0.308,56,0.905,57,1.298,60,0.092,61,0.011,63,0.654,64,1.214,86,2.102,93,2.496,95,0.984,96,1.193,97,1.168,98,0.747,99,1.632,100,0.984,101,1.936,102,0.886,103,0.78,104,1.106,105,1.245,106,0.905,107,0.984,108,0.905,109,0.886,110,0.984,111,0.905,112,0.984,113,0.849,114,0.867,115,0.94,116,0.886,117,0.849,118,0.984,119,1.547,120,0.867,121,0.067,122,0.886,123,1.017,124,0.905,125,0.905,126,0.814,127,0.984,128,0.867,129,0.984,130,0.905,131,0.984,132,0.905,133,0.984,134,0.886,135,0.984,136,0.886,137,0.984,138,0.625,139,0.984,140,0.886,141,0.43,142,0.984,143,0.905,144,0.984,145,0.905,146,1.547,147,0.905,148,0.984,149,1.607,150,1.547,151,0.905,152,0.984,153,0.924,154,0.984,155,0.867,156,0.984,157,0.905,158,0.984,159,0.886,160,0.831,161,0.984,162,0.905,163,1.298,164,1.353,165,0.905,166,0.984,167,0.867,168,0.792,169,0.984,170,0.886,171,0.905,172,0.984,173,0.905,174,0.984,175,1.501,176,0.886,177,0.867,178,0.984,179,0.886,180,0.984,181,0.831,182,0.699,183,0.867,184,0.984,185,0.867,186,1.168,187,0.886,188,0.905,189,0.575,190,0.849,191,0.684,192,0.905,193,0.924,194,0.984,195,0.905,196,1.144,197,0.984,198,0.905,199,0.984,200,0.849,201,0.905,202,0.905,203,1.477,204,0.984,205,0.905,206,0.625,207,0.747,208,0.849,209,0.886,210,0.984,211,0.867,212,0.984,213,0.867,214,0.984,215,0.849,216,0.984,217,0.849,218,0.984,219,0.849,220,0.924,221,0.984,222,0.005,223,0.005,226,0.512,260,0.529,267,1.625,268,2.556,277,1.706,284,2.513,293,0.849,371,1.702,499,1.625,505,5.962,515,1.903,548,1.215,552,3.215,575,1.503,599,3.806,652,3.744,762,2.753,769,3.191,785,3.442,790,2.556,791,1.946,792,1.843,793,2.122,811,1.446,833,1.843,835,2.259,836,1.446,866,2.536,868,2.275,872,4.617,907,1.219,1072,3.123,1102,2.036,1174,1.625,1179,2.122,1182,3.155,1187,4.423,1193,3.06,1194,2.899,1195,2.721,1201,2.336,1274,1.625,1309,5.424,1470,2.753,1546,2.51,1548,4.112,1549,1.706,1636,2.899,1637,3.109,1655,2.122,1677,2.846,1849,3.454,1977,2.408,2221,4.617,2263,2.51,2613,2.846,2676,4.254,2715,3.215,2746,3.355,2751,2.919,2756,3.329,2828,3.355,2830,2.846,2897,3.916,3056,2.989,3096,2.846,3318,3.591,3375,3.355,3378,5.673,3379,4.962,3523,3.355,3889,3.606,4132,6.201,4184,3.942,4461,5.424,4788,5.057,4795,3.606,4796,6.125,4797,6.125,4798,3.942,4799,3.942,4800,3.355,4801,4.451,4802,3.942,4803,5.424,4804,3.942,4805,3.942,4806,3.942]],["title/components/ProjectListComponent.html",[0,0.085,176,0.896]],["body/components/ProjectListComponent.html",[0,0.148,1,0.804,2,0.756,3,0.067,4,0.06,5,0.636,6,0.893,7,0.875,8,0.839,9,0.06,11,0.788,14,1.123,15,1.793,16,0.771,17,1.375,18,1.338,19,1.308,20,1.202,21,0.829,23,0.829,25,0.075,26,0.472,27,1.384,30,0.756,33,0.568,36,3.131,37,0.737,39,0.606,40,0.008,41,0.522,42,0.163,43,0.486,45,0.79,46,1.238,49,0.47,50,1.31,51,0.988,53,0.207,54,0.274,55,1.203,56,0.804,57,1.196,59,1.779,60,0.082,61,0.01,63,1.113,64,1.08,86,2.11,92,2.978,93,2.011,95,0.875,96,1.099,97,1.076,98,0.664,99,1.551,100,0.875,101,1.89,102,0.788,103,0.693,104,1.112,105,1.146,106,0.804,107,0.875,108,0.804,109,0.788,110,0.875,111,0.804,112,0.875,113,0.755,114,0.771,115,1.016,116,0.788,117,0.755,118,0.906,119,1.453,120,0.771,121,0.06,122,0.788,123,0.965,124,1.146,125,0.804,126,0.724,127,0.875,128,0.771,129,0.875,130,0.804,131,0.875,132,0.804,133,0.875,134,0.788,135,0.875,136,0.788,137,0.875,138,0.556,139,0.875,140,0.788,141,0.635,142,0.875,143,0.804,144,0.875,145,0.804,146,1.453,147,0.804,148,0.875,149,0.804,150,1.453,151,0.804,152,0.875,153,0.821,154,0.875,155,0.771,156,0.875,157,0.804,158,0.875,159,0.788,160,0.739,161,0.875,162,0.804,163,1.196,164,1.247,165,0.804,166,0.875,167,0.771,168,0.448,169,0.875,170,0.788,171,0.804,172,0.875,173,0.804,174,0.875,175,0.788,176,1.426,177,0.771,178,0.875,179,0.788,180,0.875,181,0.739,182,0.622,183,0.771,184,0.875,185,0.771,186,1.254,187,0.788,188,0.804,189,0.53,190,0.755,191,0.608,192,0.804,193,0.821,194,0.875,195,0.804,196,0.739,197,0.875,198,0.804,199,0.875,200,0.755,201,0.804,202,0.804,203,1.228,204,0.875,205,0.804,206,1.105,207,0.664,208,0.755,209,0.788,210,0.875,211,0.771,212,0.875,213,0.771,214,0.875,215,0.755,216,0.875,217,0.755,218,0.875,219,0.755,220,0.821,221,0.875,222,0.005,223,0.005,226,0.331,228,3.067,232,2.806,235,2.584,246,1.551,259,2.795,260,0.67,268,1.445,274,1.831,276,1.683,277,2.163,293,0.755,315,0.622,371,2.069,372,6.522,411,2.078,412,1.946,512,3.956,541,1.127,542,4.041,543,3.207,544,1.779,583,3.975,602,1.327,608,0.372,622,1.378,641,2.11,726,1.3,840,3.308,907,1.123,925,2.658,954,2.806,987,2.954,988,2.747,1011,1.639,1012,1.556,1013,1.639,1032,2.336,1036,2.984,1044,1.833,1045,2.152,1072,2.966,1174,2.4,1179,3.133,1180,4.66,1182,2.806,1187,3.854,1195,2.778,1201,3.975,1233,2.773,1274,2.06,1491,3.573,1503,1.73,1542,2.152,1543,4.955,1546,3.707,1548,3.788,1549,2.52,1645,3.449,2212,3.337,2263,2.232,2273,2.806,2340,2.42,2361,3.449,2661,3.207,2662,2.984,2666,3.854,3091,3.207,3092,2.658,3337,3.207,3375,2.984,3378,5.326,3379,4.571,3397,3.505,3399,3.505,3546,4.66,4436,3.207,4788,5.532,4792,5.821,4798,3.505,4799,3.505,4807,5.642,4808,5.642,4809,5.642,4810,6.574,4811,6.574,4812,7.166,4813,5.642,4814,7.166,4815,7.166,4816,3.959,4817,5.642,4818,4.253,4819,5.642,4820,3.959,4821,3.959,4822,3.959,4823,3.959,4824,5.642,4825,6.574,4826,6.574,4827,3.959,4828,3.959,4829,3.959,4830,3.959,4831,3.959,4832,3.959,4833,3.959,4834,3.959,4835,3.959,4836,3.959,4837,3.959,4838,5.642,4839,3.959,4840,3.959,4841,2.658,4842,3.959,4843,3.959,4844,3.959,4845,3.505,4846,3.959,4847,5.642,4848,5.642,4849,4.996,4850,3.959,4851,4.996,4852,3.959,4853,3.505,4854,5.821,4855,6.574,4856,3.959,4857,3.959,4858,3.959,4859,3.505,4860,3.959,4861,3.959,4862,3.505,4863,3.959,4864,3.959]],["title/components/ProjectMembersComponent.html",[0,0.085,177,0.877]],["body/components/ProjectMembersComponent.html",[0,0.139,1,0.67,2,0.661,3,0.056,4,0.05,5,0.529,6,0.744,7,0.729,8,0.699,9,0.05,11,0.656,14,0.982,15,1.614,16,0.642,17,1.364,18,1.325,19,0.656,20,0.993,21,0.725,23,0.725,25,0.062,26,0.413,27,1.321,29,1.859,30,0.661,33,0.473,36,2.871,37,0.758,39,0.706,40,0.008,41,0.555,42,0.177,43,0.566,45,0.775,46,1.085,49,0.575,50,1.201,51,0.987,53,0.207,54,0.228,55,1.002,56,0.67,57,1.046,59,1.482,60,0.102,61,0.008,63,0.725,64,0.899,68,3.314,72,1.33,80,3.499,86,1.83,87,2.485,88,2.284,92,1.296,93,2.109,95,0.729,96,0.962,97,0.942,98,0.553,99,1.522,100,0.729,101,1.811,102,0.982,103,1.151,104,1.094,105,1.5,106,0.67,107,0.729,108,0.67,109,0.656,110,0.729,111,0.67,112,0.729,113,0.629,114,0.642,115,0.836,116,0.656,117,0.629,118,0.793,119,1.307,120,0.642,121,0.1,122,0.656,123,0.938,124,0.67,125,0.67,126,0.902,127,0.729,128,0.642,129,0.729,130,0.67,131,0.729,132,0.67,133,0.729,134,0.656,135,0.729,136,0.656,137,0.729,138,0.463,139,0.729,140,0.656,141,0.318,142,0.729,143,0.67,144,0.729,145,0.67,146,1.307,147,0.67,148,0.729,149,0.67,150,1.307,151,0.67,152,0.729,153,0.684,154,0.729,155,0.642,156,0.729,157,0.67,158,0.729,159,0.656,160,0.616,161,0.729,162,0.67,163,1.046,164,1.091,165,0.67,166,0.729,167,0.642,168,0.373,169,0.729,170,0.656,171,0.67,172,0.729,173,0.67,174,0.729,175,0.656,176,0.656,177,1.28,178,0.729,179,0.656,180,0.729,181,0.616,182,0.518,183,0.642,184,0.729,185,0.642,186,1.408,187,0.982,188,0.67,189,0.464,190,0.629,191,0.507,192,0.67,193,0.684,194,0.729,195,0.67,196,1.227,197,0.729,198,0.67,199,0.729,200,0.629,201,0.67,202,0.67,203,1.314,204,0.729,205,0.67,206,1.13,207,0.553,208,0.629,209,0.656,210,0.729,211,0.642,212,0.729,213,0.642,214,0.729,215,0.629,216,0.729,217,0.629,218,0.729,219,0.629,220,0.684,221,0.729,222,0.004,223,0.004,225,2.337,226,0.276,228,2.683,231,1.604,234,1.036,243,2.585,248,0.781,249,2.516,255,1.233,259,2.099,260,0.781,265,5.322,266,4.371,267,1.204,268,2.398,274,1.525,277,1.264,284,2.235,293,0.629,301,1.621,371,1.849,417,1.933,438,2.337,439,2.671,487,3.314,499,1.204,506,6.269,517,5.579,537,0.844,538,2.268,541,0.939,542,3.704,544,1.482,547,1.967,548,1.366,572,1.402,583,1.73,594,2.894,599,3.216,611,1.991,622,2.06,641,1.233,677,1.859,744,2.671,762,1.482,811,1.071,816,1.5,817,1.402,826,2.952,829,1.441,866,1.365,868,2.286,888,1.571,900,2.108,907,1.4,999,2.214,1010,2.108,1072,3.258,1102,1.641,1111,1.859,1174,1.204,1179,2.353,1180,2.337,1182,3.499,1187,3.852,1193,2.871,1194,2.449,1195,2.615,1197,1.402,1200,2.108,1201,2.591,1274,1.204,1458,2.671,1546,3.336,1548,4.41,1549,1.264,1629,2.485,1636,2.449,1637,2.506,1644,2.485,1655,1.571,1656,4.952,1672,3.721,1677,2.108,1717,3.156,1849,2.784,2006,2.108,2143,4.41,2263,1.859,2264,3.314,2313,3.156,2481,3.156,2526,2.485,2529,4.793,2530,2.485,2537,2.485,2576,2.108,2613,2.108,2676,3.704,2715,3.105,2746,2.485,2751,2.353,2756,2.683,2849,6.302,2851,4.894,2897,3.156,3056,2.214,3096,4.72,3318,2.894,3376,4.952,3377,4.952,3381,4.793,3385,4.793,3388,4.793,3389,4.371,3390,4.371,3394,5.322,3433,5.322,3436,4.793,3437,3.999,3441,4.793,3442,3.999,3445,3.999,3474,3.999,3477,2.671,3478,2.671,3479,2.671,3480,2.671,3483,2.671,3484,2.671,3485,2.671,3520,2.92,3521,2.92,3522,2.92,3523,3.721,3527,2.92,3727,3.314,4341,3.314,4378,2.485,4477,2.671,4788,5.655,4795,2.671,4800,3.721,4802,2.92,4803,4.371,4804,2.92,4805,2.92,4806,2.92,4818,4.46,4865,2.671,4866,3.499,4867,4.371,4868,4.793,4869,3.721,4870,6.229,4871,5.239,4872,4.371,4873,5.239,4874,4.371,4875,5.239,4876,5.239,4877,4.936,4878,3.297,4879,4.371,4880,3.297,4881,5.817,4882,4.371,4883,3.297,4884,3.297,4885,3.297,4886,3.297,4887,4.371,4888,5.817,4889,3.297,4890,4.371,4891,7.323,4892,4.371,4893,4.371,4894,4.371,4895,3.999,4896,4.371,4897,4.371,4898,3.297,4899,3.297,4900,3.297,4901,4.371,4902,4.371,4903,4.371,4904,4.371,4905,4.371,4906,4.371,4907,4.371,4908,4.371,4909,4.371,4910,4.371,4911,4.371,4912,4.371,4913,3.297,4914,3.297,4915,4.371,4916,3.297,4917,4.793,4918,3.297,4919,3.297,4920,3.297,4921,3.297,4922,3.297,4923,2.92,4924,2.92,4925,2.92,4926,2.485,4927,2.92,4928,2.92,4929,4.371,4930,4.371,4931,4.371,4932,2.92,4933,2.92,4934,2.92,4935,2.92,4936,2.92,4937,2.92,4938,2.92,4939,2.92,4940,2.92,4941,2.92,4942,2.92,4943,2.92,4944,4.371,4945,2.92,4946,2.92,4947,2.92,4948,2.92,4949,2.92,4950,2.92,4951,2.92,4952,2.92,4953,2.671,4954,2.92,4955,2.485,4956,4.936,4957,4.936,4958,3.297]],["title/components/ProjectOverviewComponent.html",[0,0.085,179,0.896]],["body/components/ProjectOverviewComponent.html",[0,0.153,1,0.884,2,0.808,3,0.074,4,0.066,5,0.698,6,0.981,7,0.961,8,0.922,9,0.066,11,0.865,14,1.199,15,1.887,16,0.847,17,1.38,18,1.344,19,0.865,20,1.253,21,0.885,23,0.885,25,0.082,26,0.504,27,1.332,30,0.808,33,0.625,36,3.264,37,0.717,39,0.647,40,0.008,41,0.555,42,0.168,43,0.519,45,0.664,46,1.152,49,0.494,50,0.795,51,0.653,53,0.216,54,0.301,55,1.322,56,0.884,57,1.277,59,1.955,60,0.09,61,0.011,63,1.192,64,1.186,86,1.212,93,1.55,95,0.961,96,1.174,97,1.15,98,0.73,99,1.616,100,0.961,101,1.927,102,0.865,103,0.762,104,1.115,105,1.225,106,0.884,107,0.961,108,0.884,109,0.865,110,0.961,111,0.884,112,0.961,113,0.83,114,0.847,115,0.932,116,0.865,117,0.83,118,0.968,119,1.529,120,0.847,121,0.066,122,0.865,123,0.978,124,0.884,125,0.884,126,0.795,127,0.961,128,0.847,129,0.961,130,0.884,131,0.961,132,0.884,133,0.961,134,0.865,135,0.961,136,0.865,137,0.961,138,0.61,139,0.961,140,0.865,141,0.42,142,0.961,143,0.884,144,0.961,145,0.884,146,1.529,147,0.884,148,0.961,149,0.884,150,1.529,151,0.884,152,0.961,153,0.903,154,0.961,155,0.847,156,0.961,157,0.884,158,0.961,159,0.865,160,0.812,161,0.961,162,0.884,163,1.277,164,1.332,165,0.884,166,0.961,167,0.847,168,0.492,169,0.961,170,0.865,171,0.884,172,0.961,173,0.884,174,0.961,175,0.865,176,0.865,177,0.847,178,0.961,179,1.486,180,0.961,181,1.554,182,0.683,183,0.847,184,0.961,185,1.174,186,1.15,187,0.865,188,0.884,189,0.566,190,0.83,191,0.668,192,0.884,193,0.903,194,0.961,195,0.884,196,0.812,197,0.961,198,0.884,199,0.961,200,0.83,201,0.884,202,0.884,203,0.812,204,0.961,205,0.884,206,0.61,207,0.73,208,0.83,209,0.865,210,0.961,211,0.847,212,0.961,213,0.847,214,0.961,215,0.83,216,0.961,217,0.83,218,0.961,219,0.83,220,0.903,221,0.961,222,0.005,223,0.005,226,0.679,228,3.276,234,0.61,243,1.901,259,2.563,260,0.517,284,1.382,293,0.83,374,6.395,427,2.55,499,1.588,535,3.74,542,4.212,544,1.955,548,1.063,599,3.76,602,1.628,608,0.408,670,2.364,768,2.659,769,3.036,785,3.401,790,2.525,791,1.915,792,1.801,793,2.073,811,1.413,828,3.2,829,1.901,833,1.801,836,1.413,837,2.781,838,2.781,868,2.248,871,3.685,873,2.012,926,2.283,987,3.109,988,2.863,1007,3.854,1010,2.781,1011,1.801,1012,1.71,1013,1.801,1029,3.524,1030,2.781,1031,2.92,1032,3.36,1033,2.781,1034,2.659,1035,2.453,1036,3.279,1037,3.852,1038,3.852,1039,2.92,1043,3.524,1044,1.959,1045,2.364,1060,3.631,1061,3.92,1102,1.446,1178,2.208,1193,1.901,1194,1.801,1195,1.959,1197,2.563,1546,2.453,1644,3.279,1670,2.138,2115,3.279,2676,4.212,2715,3.164,2828,3.279,2892,3.685,3056,2.92,4534,3.524,4777,5.338,4780,5.338,4784,3.852,4788,5.424,4800,3.279,4818,5.215,4841,4.645,4869,4.544,4959,3.852,4960,6.028,4961,6.918,4962,6.028,4963,6.614,4964,6.028,4965,4.35,4966,4.35,4967,4.35,4968,4.35,4969,4.35,4970,4.35,4971,4.35,4972,4.35,4973,4.35,4974,7.469,4975,4.35]],["title/injectables/ProjectStoreService.html",[532,1.082,542,2.54]],["body/injectables/ProjectStoreService.html",[3,0.095,4,0.085,9,0.085,25,0.105,30,0.954,33,0.802,37,0.751,39,0.936,40,0.008,41,0.598,42,0.181,43,0.751,45,0.939,49,0.673,53,0.209,54,0.386,60,0.116,61,0.014,63,1.252,66,3.613,104,1.036,115,0.981,222,0.006,223,0.006,226,0.713,227,3.606,232,5.046,234,1.158,260,0.931,281,1.697,293,1.065,371,1.606,512,4.032,531,6.686,532,1.71,537,1.429,538,2.141,540,2.311,541,1.59,542,4.014,545,3.199,547,2.944,548,1.402,555,2.44,572,3.027,608,0.8,622,3.034,626,4.189,637,2.071,646,2.311,691,1.624,726,1.64,1032,3.416,1306,3.57,1423,3.393,1552,3.958,1556,4.779,2592,6.304,2595,6.304,2604,4.209,2892,4.351,3559,4.351,3685,4.945,4151,6.304,4917,4.523,4963,6.939,4976,7.843,4977,7.118,4978,8.253,4979,8.253,4980,7.118,4981,7.118,4982,7.118,4983,7.118,4984,5.584,4985,7.836,4986,8.253,4987,8.253,4988,7.836,4989,8.253,4990,7.836,4991,8.253,4992,8.253,4993,5.584,4994,5.584,4995,7.118,4996,5.584,4997,7.118,4998,7.118,4999,5.584,5000,7.118,5001,5.584,5002,7.118,5003,7.118,5004,6.304,5005,5.584,5006,5.584,5007,5.584,5008,5.584,5009,5.584,5010,5.584,5011,5.584]],["title/injectables/ProjectsService.html",[532,1.082,5012,3.395]],["body/injectables/ProjectsService.html",[3,0.114,4,0.102,9,0.102,25,0.127,30,1.069,33,1.145,37,0.733,39,0.914,40,0.008,41,0.548,42,0.177,43,0.733,45,0.879,49,0.608,53,0.209,54,0.464,60,0.139,61,0.017,63,1.171,222,0.007,223,0.007,281,2.041,371,1.8,532,1.916,541,1.912,548,1.225,555,2.934,608,0.749,646,2.78,790,2.452,791,2.133,1367,4.071,1387,5.909,1393,5.062,1394,5.44,5004,5.947,5012,6.012,5013,5.947,5014,7.975,5015,7.975,5016,6.716,5017,8.801,5018,8.507,5019,8.801,5020,6.716,5021,7.975,5022,7.975,5023,6.716,5024,7.975,5025,6.716,5026,6.716,5027,6.716]],["title/injectables/QueriesService.html",[532,1.082,1748,2.753]],["body/injectables/QueriesService.html",[2,1.175,3,0.113,4,0.101,9,0.101,25,0.125,26,0.663,27,1.55,33,1.138,37,0.772,39,0.714,40,0.008,41,0.429,42,0.186,43,0.573,53,0.22,54,0.459,60,0.138,61,0.017,222,0.007,223,0.007,281,2.02,512,4.146,515,2.784,532,1.905,555,2.905,646,2.752,1366,6.756,1367,4.207,1748,4.846,2851,5.73,5012,6.756,5028,5.887,5029,6.648,5030,7.936,5031,6.756,5032,6.648,5033,6.648,5034,6.648,5035,6.648,5036,6.648,5037,6.648,5038,6.648,5039,6.648,5040,6.648]],["title/directives/QueryBodyDirective.html",[98,0.756,211,0.877]],["body/directives/QueryBodyDirective.html",[0,0.161,3,0.076,4,0.068,5,1.452,9,0.068,14,0.89,16,0.871,17,1.085,18,0.627,21,0.657,23,0.657,25,0.084,26,0.514,27,1.3,33,0.642,37,0.529,39,0.48,40,0.008,41,0.288,42,0.128,43,0.385,46,1.164,51,0.672,53,0.186,54,0.309,60,0.157,61,0.018,62,2.139,63,1.031,78,2.43,88,3.496,96,1.197,97,0.853,98,1.406,181,1.411,182,1.466,206,0.627,208,0.853,211,1.472,213,1.367,222,0.005,223,0.005,226,0.374,234,0.627,235,2.971,259,3.764,267,2.562,275,4.487,293,0.853,315,0.702,359,3.169,389,3.894,523,2.521,537,1.144,547,2.787,549,1.952,557,3.577,561,2.068,575,1.722,595,1.914,602,1.445,608,0.659,611,1.803,635,2.009,637,2.304,641,1.672,654,2.346,675,2.521,678,4.29,725,2.298,726,1.416,736,4.355,753,1.705,763,2.415,772,3.464,780,2.068,783,4.021,787,3.388,788,2.621,803,1.757,816,1.359,820,2.928,828,2.842,866,3.471,871,3.755,873,3.247,877,1.901,948,2.521,987,2.009,988,2.355,995,3.958,1011,1.851,1012,1.757,1013,1.851,1015,1.453,1044,2.901,1060,2.346,1061,3.224,1098,2.521,1151,4.108,1229,2.068,1255,2.521,1419,4.645,1445,2.858,1612,4.306,1618,4.355,1645,2.733,1653,4.115,1693,4.125,1754,2.733,1775,3.002,1789,2.521,1791,3.002,1800,2.858,1809,3.02,1844,2.685,1859,3.815,2488,3.928,2619,4.355,2689,3.002,2713,5.319,2737,5.697,2892,2.733,3031,2.269,3187,4.631,3937,2.621,3986,2.858,4000,2.733,4345,3.37,4492,3.37,4555,3.37,4866,3.169,5041,4.975,5042,3.169,5043,6.122,5044,4.977,5045,3.37,5046,4.471,5047,4.471,5048,5.686,5049,5.291,5050,5.291,5051,3.622,5052,3.622,5053,3.622,5054,3.622,5055,3.622,5056,3.622,5057,3.622,5058,3.622,5059,4.631,5060,4.977,5061,3.622,5062,4.977,5063,4.977,5064,4.977,5065,4.977,5066,3.622,5067,4.977,5068,4.631,5069,3.622,5070,3.622,5071,3.622,5072,3.622,5073,3.622,5074,4.977,5075,3.622,5076,3.37,5077,3.622,5078,3.622,5079,5.686,5080,3.622,5081,5.686,5082,3.622,5083,3.622,5084,6.792,5085,6.122,5086,4.977,5087,3.622,5088,3.37,5089,3.622,5090,3.622,5091,5.686,5092,3.622,5093,3.622,5094,3.622,5095,4.977,5096,4.977,5097,3.622,5098,3.622,5099,3.622,5100,3.622,5101,3.622,5102,3.622,5103,3.622]],["title/directives/QueryButtonDirective.html",[98,0.756,213,0.877]],["body/directives/QueryButtonDirective.html",[0,0.161,3,0.076,4,0.068,5,1.408,9,0.068,14,0.891,16,0.873,17,1.086,18,0.629,21,0.658,23,0.658,25,0.085,26,0.515,27,1.301,33,0.643,37,0.53,39,0.481,40,0.008,41,0.289,42,0.128,43,0.386,46,1.164,51,0.673,53,0.186,54,0.31,60,0.157,61,0.018,62,2.141,63,1.032,78,2.434,88,3.499,96,1.198,97,1.443,98,1.407,181,1.48,182,1.463,206,0.629,208,0.854,211,1.369,213,1.474,222,0.005,223,0.005,226,0.375,234,0.629,235,2.973,259,3.823,267,2.565,275,4.492,293,0.854,315,0.704,359,3.175,389,3.84,523,2.526,537,1.146,547,2.788,549,1.954,557,3.665,561,2.072,575,1.724,595,1.916,602,1.447,608,0.66,611,1.806,635,2.013,637,2.306,641,1.675,654,2.351,675,2.526,678,4.295,725,2.301,726,1.417,736,4.36,753,1.707,763,2.418,772,3.469,780,2.072,783,3.122,787,3.39,788,2.626,803,1.761,816,1.361,820,2.932,828,2.846,866,3.39,871,3.76,873,3.25,877,1.904,948,2.526,987,2.013,988,2.358,995,3.962,1011,1.854,1012,1.761,1013,1.854,1015,1.455,1044,2.901,1060,2.351,1061,3.228,1098,2.526,1151,4.111,1229,2.072,1255,2.526,1419,4.648,1445,2.864,1612,4.309,1618,4.36,1645,2.738,1653,4.119,1693,3.007,1754,2.738,1775,3.007,1789,2.526,1791,3.007,1800,2.864,1809,3.024,1844,2.688,1859,3.819,2488,3.933,2619,3.175,2689,3.007,2713,5.078,2737,5.296,2892,2.738,3031,2.273,3187,4.637,3937,2.626,3986,2.864,4000,2.738,4345,3.376,4492,3.376,4555,3.376,4866,4.36,5041,4.98,5042,3.175,5043,5.692,5044,3.629,5048,6.635,5049,5.296,5050,5.296,5051,4.983,5052,4.983,5053,3.629,5054,3.629,5055,3.629,5056,3.629,5057,3.629,5058,3.629,5059,4.637,5060,4.983,5061,3.629,5062,4.983,5063,4.983,5064,4.983,5065,4.983,5066,3.629,5067,4.983,5068,4.637,5069,3.629,5070,3.629,5071,3.629,5072,3.629,5073,3.629,5074,4.983,5075,3.629,5076,3.376,5077,3.629,5078,3.629,5079,5.692,5080,3.629,5081,5.692,5082,3.629,5083,3.629,5084,6.796,5085,6.127,5086,4.983,5087,3.629,5088,3.376,5089,3.629,5090,3.629,5091,5.692,5092,3.629,5093,3.629,5094,3.629,5095,4.983,5096,4.983,5097,3.629,5098,3.629,5099,3.629,5100,3.629,5101,3.629,5102,3.629,5103,3.629,5104,4.479,5105,4.479,5106,4.479]],["title/components/QueryComponent.html",[0,0.085,181,0.841]],["body/components/QueryComponent.html",[0,0.162,1,0.619,2,0.623,3,0.052,4,0.046,5,1.411,6,0.687,7,0.673,8,0.645,9,0.046,11,0.606,14,0.925,16,0.593,17,1.36,18,1.319,19,0.606,20,0.511,21,0.683,23,0.683,25,0.057,26,0.389,27,1.292,30,0.623,33,0.437,37,0.704,39,0.606,40,0.008,41,0.48,42,0.163,43,0.544,45,0.695,46,1.18,49,0.218,50,0.85,51,0.948,53,0.155,54,0.21,56,0.619,57,0.985,60,0.131,61,0.014,62,1.618,63,1.094,78,2.527,86,1.571,88,3.554,93,1.657,95,0.673,96,1.229,97,1.075,98,1.289,99,1.365,100,0.673,101,1.775,102,0.606,103,0.533,104,0.913,105,0.945,106,0.619,107,0.673,108,0.619,109,0.606,110,0.673,111,0.619,112,0.673,113,0.581,114,0.593,115,0.807,116,0.606,117,0.581,118,0.746,119,1.246,120,0.593,121,0.046,122,0.606,123,0.926,124,0.619,125,0.619,126,0.557,127,0.673,128,0.593,129,0.673,130,0.619,131,0.673,132,0.619,133,0.673,134,0.606,135,0.673,136,0.606,137,0.673,138,0.427,139,0.673,140,0.606,141,0.294,142,0.673,143,0.619,144,0.673,145,0.619,146,1.246,147,0.619,148,0.673,149,0.619,150,1.246,151,0.619,152,0.673,153,0.632,154,0.673,155,0.593,156,0.673,157,0.619,158,0.673,159,0.606,160,0.569,161,0.673,162,0.619,163,0.985,164,1.027,165,0.619,166,0.673,167,0.593,168,0.344,169,0.673,170,0.606,171,0.619,172,0.673,173,0.619,174,0.673,175,0.606,176,0.606,177,0.593,178,0.673,179,0.606,180,0.673,181,1.47,182,1.459,183,0.593,184,0.673,185,0.593,186,0.887,187,0.606,188,0.619,189,0.437,190,0.581,191,0.468,192,0.619,193,0.632,194,0.673,195,0.619,196,0.868,197,0.673,198,0.619,199,0.673,200,0.581,201,0.619,202,0.619,203,0.569,204,0.673,205,0.619,206,0.791,207,0.511,208,0.581,209,0.606,210,0.673,211,1.395,212,0.673,213,1.395,214,0.673,215,0.581,216,0.673,217,0.581,218,0.673,219,0.581,220,0.632,221,0.673,222,0.004,223,0.004,226,0.389,234,0.652,235,3.094,243,2.031,259,3.774,267,2.981,268,1.697,275,4.344,276,1.976,277,2.419,293,0.581,315,0.73,359,2.159,389,3.842,523,2.621,537,0.779,547,2.816,549,1.791,557,3.357,561,2.151,575,1.383,595,2.095,602,1.484,608,0.529,611,1.875,635,2.089,637,2.084,641,1.739,654,1.598,675,1.717,678,4.378,725,2.109,726,1.071,736,4.472,753,1.424,763,2.216,766,1.697,772,3.558,780,2.151,783,2.36,787,3.428,788,1.786,803,1.197,811,1.51,816,1.413,820,3.007,828,2.608,866,3.38,871,3.857,873,3.143,877,1.976,907,1.255,948,2.621,987,2.089,988,2.419,995,4.201,1011,1.261,1012,1.197,1013,1.261,1015,0.99,1044,2.908,1060,2.959,1061,3.311,1098,2.621,1102,1.545,1151,3.429,1174,1.697,1176,2.836,1177,2.285,1193,2.031,1194,2.612,1195,0.99,1197,1.976,1229,1.409,1255,2.621,1419,4.616,1445,2.972,1465,2.726,1503,1.331,1542,2.527,1612,4.365,1618,3.295,1636,1.261,1637,1.546,1645,2.842,1653,4.2,1670,3.102,1671,3.504,1693,2.045,1754,2.842,1764,1.947,1775,2.045,1789,1.717,1791,3.121,1800,2.972,1809,3.102,1844,2.031,1859,3.893,1937,2.726,2262,2.296,2263,1.717,2488,4.034,2615,1.655,2619,2.159,2665,2.527,2668,2.285,2669,3.295,2689,2.045,2713,5.002,2737,4.756,2757,2.697,2762,2.467,2892,2.842,3031,2.36,3096,4.034,3098,3.766,3187,4.25,3937,2.726,3986,2.972,4000,2.842,4345,3.504,4490,4.25,4492,3.504,4555,3.504,4854,2.697,4866,2.159,5041,5.87,5042,2.159,5043,5.111,5044,2.467,5048,5.111,5049,4.756,5050,5.616,5051,2.467,5052,2.467,5053,3.766,5054,3.766,5055,3.766,5056,3.766,5057,3.766,5058,3.766,5059,4.756,5060,5.111,5061,3.766,5062,5.505,5063,5.111,5064,5.111,5065,5.111,5066,3.766,5067,5.111,5068,4.756,5069,3.766,5070,3.766,5071,3.766,5072,3.766,5073,4.568,5074,5.111,5075,5.505,5076,3.504,5077,3.766,5078,3.766,5079,5.111,5080,4.568,5081,4.568,5082,2.467,5083,2.467,5084,6.036,5085,5.505,5086,3.766,5087,3.766,5088,3.504,5089,3.766,5090,3.766,5091,4.568,5092,2.467,5093,2.467,5094,2.467,5095,5.505,5096,3.766,5097,2.467,5098,2.467,5099,2.467,5100,3.766,5101,3.766,5102,5.111,5103,2.467,5107,4.649,5108,3.046,5109,4.649,5110,3.046,5111,3.046,5112,3.046,5113,3.046,5114,3.046,5115,3.046,5116,3.046,5117,3.046,5118,3.046,5119,3.046,5120,3.046]],["title/interfaces/QueryListParams.html",[121,0.068,1387,3.024]],["body/interfaces/QueryListParams.html",[3,0.114,4,0.102,9,0.102,25,0.127,26,0.668,40,0.008,42,0.187,43,0.809,49,0.652,53,0.165,60,0.166,66,3.415,72,2.713,121,0.102,222,0.007,223,0.007,234,0.944,248,0.8,529,1.835,537,1.722,547,2.927,595,1.835,608,0.632,762,3.024,888,3.207,956,5.163,1044,2.186,1065,2.596,1068,3.207,1367,3.112,1387,5.36,1716,3.794,1847,5.072,1848,5.072,1851,5.072,1853,5.072,1907,5.163,1908,4.321,1971,5.63,2441,4.517,2791,5.958,5121,5.958,5122,8.806,5123,6.728,5124,6.728,5125,6.728,5126,5.958,5127,6.728,5128,6.728,5129,6.728,5130,6.728]],["title/components/RegisterComponent.html",[0,0.085,183,0.877]],["body/components/RegisterComponent.html",[0,0.129,1,0.733,2,0.707,3,0.061,4,0.055,5,0.579,6,0.813,7,0.797,8,0.764,9,0.055,11,0.717,16,0.702,17,1.37,18,1.332,19,0.717,20,0.605,21,0.775,23,0.775,25,0.068,26,0.441,30,0.707,33,0.518,37,0.722,39,0.819,40,0.008,41,0.553,42,0.164,43,0.591,45,0.841,46,1.186,49,0.545,50,1.254,51,1.213,53,0.198,54,0.249,56,0.733,57,1.117,60,0.075,61,0.009,63,1.072,68,3.54,86,1.004,89,4.454,92,1.417,95,0.797,96,1.027,97,1.006,98,0.605,99,1.485,100,0.797,101,1.85,102,0.717,103,0.631,104,0.96,105,1.072,106,0.733,107,0.797,108,0.733,109,0.717,110,0.797,111,0.733,112,0.797,113,0.688,114,0.702,115,0.868,116,0.717,117,0.688,118,0.847,119,1.378,120,0.702,121,0.055,122,0.717,123,0.952,124,0.733,125,0.733,126,0.659,127,0.797,128,0.702,129,0.797,130,0.733,131,0.797,132,0.733,133,0.797,134,0.717,135,0.797,136,0.717,137,0.797,138,0.506,139,0.797,140,0.717,141,0.348,142,0.797,143,0.733,144,0.797,145,0.733,146,1.378,147,0.733,148,0.797,149,0.733,150,1.378,151,0.733,152,0.797,153,0.748,154,0.797,155,0.702,156,0.797,157,0.733,158,0.797,159,0.717,160,0.673,161,0.797,162,0.733,163,1.117,164,1.165,165,0.733,166,0.797,167,0.702,168,0.408,169,0.797,170,0.717,171,0.733,172,0.797,173,0.733,174,0.797,175,0.717,176,0.717,177,0.702,178,0.797,179,0.717,180,0.797,181,0.673,182,0.566,183,1.337,184,0.797,185,0.702,186,1.006,187,0.717,188,0.733,189,0.495,190,0.688,191,0.554,192,0.733,193,0.748,194,0.797,195,0.733,196,0.673,197,0.797,198,0.733,199,0.797,200,0.688,201,0.733,202,0.733,203,0.673,204,0.797,205,0.733,206,1.156,207,0.605,208,0.688,209,0.717,210,0.797,211,0.702,212,0.797,213,0.702,214,0.797,215,0.688,216,0.797,217,0.688,218,0.797,219,0.688,220,0.748,221,0.797,222,0.005,223,0.005,226,0.638,231,2.229,234,0.963,237,4.67,246,1.141,248,0.428,249,2.651,250,3.065,254,1.668,255,1.348,259,1.533,260,0.741,270,2.305,289,4.272,293,0.688,301,2.592,315,1.237,317,1.501,318,2.592,341,5.406,402,2.204,417,4.472,499,1.316,521,4.606,522,6.144,535,3.54,537,0.922,547,1.753,553,2.304,575,1.791,576,2.866,583,4.003,602,0.848,608,0.586,635,1.62,641,2.566,667,6.509,677,5.096,689,2.42,690,2.717,717,4.272,726,0.831,727,3.223,754,3.192,761,2.768,777,2.114,841,2.581,903,3.986,957,4.145,964,5.558,987,2.802,988,2.63,1011,1.492,1012,1.417,1013,1.492,1044,2.721,1045,2.866,1072,1.492,1103,3.223,1166,5.749,1191,1.892,1195,1.171,1236,2.917,1314,3.223,1400,4.386,1406,3.371,1424,1.83,1442,3.371,1444,6.088,1445,5.164,1551,3.223,1600,5.584,1676,6.088,1779,2.677,1875,2.717,1977,2.073,2124,4.272,2134,4.272,2138,3.165,2354,2.033,2441,5.423,2709,3.192,2726,5.521,2755,4.67,2803,6.465,2816,4.272,2849,2.555,2932,5.521,3008,4.272,3024,3.192,3083,2.555,3885,4.186,3887,5.521,3888,4.67,3893,4.67,3903,5.521,3911,3.192,3917,3.192,3918,3.192,4378,3.975,4436,5.558,4593,4.67,4845,4.67,4851,3.192,4891,6.675,4953,4.272,5131,3.192,5132,6.076,5133,6.235,5134,5.273,5135,6.235,5136,5.521,5137,6.235,5138,5.273,5139,5.273,5140,6.861,5141,3.605,5142,6.235,5143,6.861,5144,6.235,5145,6.861,5146,5.273,5147,5.273,5148,3.605,5149,6.861,5150,5.273,5151,3.605,5152,5.273,5153,5.273,5154,3.605,5155,5.273,5156,5.273,5157,5.273,5158,3.605,5159,5.273,5160,3.605,5161,3.605,5162,5.273,5163,3.605,5164,5.273,5165,5.273,5166,5.273,5167,3.605,5168,3.605,5169,5.273,5170,5.273,5171,3.605,5172,3.605,5173,5.273,5174,3.605,5175,3.605,5176,3.605,5177,3.605,5178,3.605,5179,3.605,5180,3.605,5181,3.605,5182,3.605,5183,3.605,5184,3.605,5185,3.605,5186,3.192,5187,3.605,5188,5.273,5189,3.605,5190,5.273,5191,5.273,5192,3.605,5193,3.605,5194,3.605,5195,3.605,5196,3.605,5197,8.077,5198,5.273]],["title/interfaces/RelationEdge.html",[121,0.068,1220,2.641]],["body/interfaces/RelationEdge.html",[0,0.153,3,0.09,4,0.123,5,1.106,9,0.104,25,0.1,26,0.576,40,0.008,42,0.189,49,0.661,53,0.199,60,0.143,61,0.018,104,0.63,115,0.63,121,0.139,123,0.74,138,0.744,141,0.665,168,0.972,189,0.822,191,0.815,222,0.006,223,0.006,234,1.136,248,0.909,260,0.63,284,2.43,296,4.226,316,3.11,515,1.648,529,1.447,541,1.51,548,1.321,595,2.42,608,0.833,622,1.847,720,1.937,725,1.984,817,2.255,836,1.724,907,1.766,953,3.243,1065,1.961,1066,3.351,1069,3.649,1070,3.442,1093,1.984,1197,3.252,1205,4.484,1206,2.384,1207,2.991,1208,4.757,1209,5.041,1210,3.645,1211,3.283,1212,2.883,1213,2.528,1214,3.239,1215,3.283,1216,2.693,1217,2.784,1218,4.157,1219,4.249,1220,4.747,1221,3.243,1222,3.243,1223,3.243,1224,3.243,1225,3.243,1226,3.243,1227,3.243,1228,3.243,1229,3.186,1230,3.243,1231,3.243,1232,4.21,1233,3.76,1234,3.391,1235,3.11,1236,2.255,1237,3.744,1238,3.391,1239,3.391,1240,1.804,1241,2.454,1242,2.528,1243,3.243,1244,2.883,1245,2.608,1246,2.883,1247,3.243,1248,3.391,1249,2.085,1250,3.391,1251,2.693,1252,3.391,1253,2.318,1254,3.391,1255,2.991,1256,3.391,1257,3.243,1258,3.391,1259,4.313,1260,2.784,1261,2.991,1262,2.528,1263,3.884,1264,3.391,1265,3.391,1266,3.391,1267,4.038,1268,3.391,1269,4.403,1270,3.391,1271,3.391,1272,3.391,1273,3.243,1274,1.937,1275,3.884,1276,4.89,1277,3.391,1278,3.391,1279,5.363,1280,3.391,1281,4.403,1282,4.403,1283,3.391,1284,3.391,1285,4.157,1286,4.403,1287,3.243,1288,4.21,1289,4.403,1290,3.391,1291,4.565,1292,3.615,1293,3.391,1294,3.243,1295,3.391,1296,3.391,1297,3.391,1298,3.243,1299,4.038,1300,3.243,1301,2.991,1302,3.243,1303,2.784]],["title/components/RemoveDialogComponent.html",[0,0.085,185,0.877]],["body/components/RemoveDialogComponent.html",[0,0.149,1,0.81,2,0.759,3,0.068,4,0.06,5,0.64,6,0.899,7,0.881,8,0.844,9,0.06,11,0.793,13,1.607,14,1.128,15,1.799,16,0.776,17,1.375,18,1.338,19,0.793,20,1.453,21,0.833,22,2.805,23,0.833,24,2.41,25,0.075,26,0.474,27,1.246,28,3.448,30,0.759,33,0.572,34,2.247,35,3.144,36,2.477,37,0.7,39,0.428,40,0.008,41,0.535,42,0.169,43,0.343,45,0.625,46,1.115,49,0.472,50,1.036,51,0.852,53,0.162,54,0.275,55,1.211,56,0.81,57,1.201,60,0.118,61,0.01,62,1.387,64,1.087,85,2.477,86,1.11,88,2.622,93,1.42,95,0.881,96,1.104,97,1.081,98,0.668,99,1.555,100,0.881,101,1.892,102,0.793,103,0.698,104,0.986,105,1.152,106,0.81,107,0.881,108,0.81,109,0.793,110,0.881,111,0.81,112,0.881,113,0.76,114,0.776,115,0.902,116,0.793,117,0.76,118,0.91,119,1.458,120,0.776,121,0.086,122,0.793,123,0.966,124,0.81,125,0.81,126,0.728,127,0.881,128,0.776,129,0.881,130,0.81,131,0.881,132,0.81,133,0.881,134,0.793,135,0.881,136,0.793,137,0.881,138,0.559,139,0.881,140,0.793,141,0.385,142,0.881,143,0.81,144,0.881,145,0.81,146,1.458,147,0.81,148,0.881,149,0.81,150,1.458,151,0.81,152,0.881,153,0.827,154,0.881,155,0.776,156,0.881,157,0.81,158,0.881,159,0.793,160,0.744,161,0.881,162,0.81,163,1.201,164,1.253,165,0.81,166,0.881,167,0.776,168,0.45,169,0.881,170,0.793,171,0.81,172,0.881,173,0.81,174,0.881,175,0.793,176,0.793,177,0.776,178,0.881,179,0.793,180,0.881,181,0.744,182,0.626,183,0.776,184,0.881,185,1.4,186,1.611,187,0.793,188,0.81,189,0.713,190,0.76,191,0.612,192,0.81,193,0.827,194,0.881,195,0.81,196,1.577,197,0.881,198,0.81,199,0.881,200,0.76,201,0.81,202,0.81,203,1.232,204,0.881,205,0.81,206,1.009,207,0.668,208,0.76,209,0.793,210,0.881,211,0.776,212,0.881,213,0.776,214,0.881,215,0.76,216,0.881,217,0.76,218,0.881,219,0.76,220,0.827,221,0.881,222,0.005,223,0.005,226,0.333,234,1.139,239,4.053,243,1.741,244,2.622,248,0.854,249,2.805,253,1.607,255,1.49,256,1.791,259,3.452,260,0.674,267,2.069,274,2.622,275,2.548,276,1.694,277,2.173,278,2.825,279,2.825,284,2.507,293,1.081,315,0.626,317,1.134,371,0.899,427,4.866,608,0.374,745,2.436,795,3.806,811,1.295,816,1.723,826,1.791,840,3.869,866,1.65,907,1.313,926,2.975,965,3.624,1004,2.336,1030,3.624,1032,3.267,1033,4.218,1102,2.193,1174,1.455,1176,3.23,1179,1.899,1191,2.091,1193,2.883,1194,2.731,1195,1.295,1200,2.548,1201,3.463,1242,2.702,1274,2.069,1308,4.273,1423,1.899,1459,3.228,1477,5.02,1572,4.855,1599,4.973,1600,6.202,1627,3.004,1636,2.347,1637,2.023,1655,1.899,1670,3.879,1676,3.004,1797,3.004,1844,1.741,1907,2.336,1937,3.324,2114,6.255,2115,4.973,2116,5.843,2117,4.824,2118,3.529,2119,4.825,2120,5.843,2121,3.529,2122,5.345,2123,5.843,2124,4.592,2125,5.02,2126,5.02,2127,4.592,2128,5.02,2129,4.018,2130,5.02,2131,5.02,2132,5.02,2133,5.843,2134,3.228,2135,3.529,2136,4.033,2137,5.02,2138,3.349,2139,5.843,2140,5.02,2141,3.529,2142,3.529,2143,4.825,2212,2.023,2262,3.004,2263,2.247,2488,3.624,2613,2.548,2614,3.004,2668,2.786,2751,1.899,2756,2.166,2897,2.548,3550,4.018,3786,3.228,3972,3.529,3977,3.529,5199,3.985,5200,3.985,5201,5.02,5202,3.985,5203,5.669,5204,5.669,5205,3.985,5206,7.187,5207,5.669,5208,3.985,5209,3.985,5210,3.985]],["title/components/RemoveProjectMemberComponentComponent.html",[0,0.085,187,0.896]],["body/components/RemoveProjectMemberComponentComponent.htmltitle/components/SetEditorComponent.html",[0,0.085,188,0.915]],["body/components/SetEditorComponent.html",[0,0.122,1,0.653,2,0.649,3,0.055,4,0.049,5,0.516,6,0.725,7,0.71,8,0.681,9,0.049,11,0.639,14,0.963,15,1.589,16,0.626,17,1.362,18,1.324,19,0.639,20,1.341,21,0.711,23,0.711,25,0.061,27,0.795,29,3.657,30,0.649,33,0.695,36,2.834,37,0.744,39,0.345,40,0.008,41,0.471,42,0.181,43,0.277,45,0.642,46,0.472,49,0.558,50,1.186,51,0.974,53,0.192,54,0.222,55,0.977,56,0.653,57,1.374,59,1.444,60,0.067,61,0.008,63,1.115,64,0.876,86,0.895,90,1.884,95,0.71,96,0.943,97,0.924,98,0.539,99,1.403,100,0.71,101,1.799,102,0.639,103,0.563,104,0.928,105,0.984,106,0.653,107,0.71,108,0.653,109,0.639,110,0.71,111,0.653,112,0.71,113,0.613,114,0.626,115,0.95,116,0.639,117,1.553,118,0.778,119,1.287,120,0.626,121,0.049,122,0.639,123,0.946,124,0.653,125,0.653,126,0.587,127,0.71,128,0.626,129,0.71,130,0.653,131,0.71,132,0.653,133,0.71,134,0.639,135,0.71,136,0.639,137,0.71,138,0.451,139,0.71,140,0.639,141,0.31,142,0.71,143,0.653,144,0.71,145,0.653,146,1.287,147,0.653,148,0.71,149,0.653,150,1.287,151,0.653,152,0.71,153,0.667,154,0.71,155,0.626,156,0.71,157,0.653,158,1.287,159,0.639,160,0.6,161,0.71,162,0.653,163,1.026,164,1.07,165,0.653,166,0.71,167,0.626,168,0.733,169,0.71,170,0.639,171,0.653,172,0.71,173,0.653,174,0.71,175,0.639,176,0.639,177,0.626,178,0.71,179,0.639,180,0.71,181,0.6,182,1.192,183,0.626,184,0.71,185,0.626,186,0.924,187,0.639,188,1.318,189,0.859,190,0.924,191,1.288,192,0.653,193,0.667,194,0.71,195,0.653,196,1.366,197,0.71,198,0.653,199,0.71,200,0.613,201,0.653,202,0.653,203,0.6,204,0.71,205,0.653,206,0.818,207,1.341,208,0.613,209,0.963,210,0.71,211,0.626,212,0.71,213,0.626,214,0.71,215,0.613,216,0.71,217,0.613,218,0.71,219,0.613,220,0.667,221,0.71,222,0.007,223,0.004,226,0.269,234,0.818,246,1.403,248,0.827,260,0.382,267,1.173,268,1.768,269,2.603,284,2.21,315,1.019,317,1.981,371,1.891,523,2.73,537,0.822,538,1.856,548,0.744,557,2.546,574,3.091,595,1.589,602,0.756,608,0.455,622,1.119,637,1.887,671,3.964,705,1.33,725,1.811,726,1.931,727,2.96,728,1.366,753,1.65,763,2.29,764,3.251,766,1.768,768,1.964,769,2.735,778,2.581,781,2.846,782,2.603,783,2.458,787,2.004,788,1.884,789,2.603,790,2.127,791,1.021,792,1.33,793,1.532,803,1.263,811,2.863,817,2.059,820,2.308,826,2.618,829,1.404,834,2.38,841,2.004,870,3.923,904,1.812,975,2.24,993,2.96,1002,3.432,1004,2.839,1015,2.688,1032,2.412,1065,0.915,1082,3.432,1102,2.156,1179,2.308,1193,1.404,1194,1.33,1197,1.366,1240,1.647,1419,4.914,1470,2.983,1475,2.618,1476,3.096,1503,2.116,1509,3.767,1512,4.146,1513,4.448,1589,3.432,1612,2.632,1632,2.632,1636,1.33,1637,1.631,1653,3.802,1670,1.58,1671,2.422,1716,4.279,1717,3.096,1738,2.632,1758,3.432,1774,2.311,1779,1.631,1783,3.65,1870,1.964,1899,1.884,1908,1.631,1973,3.096,1977,2.29,2008,4.13,2096,2.054,2117,1.964,2119,2.157,2179,3.65,2221,3.65,2543,5.318,2662,2.422,2670,2.278,2671,2.422,2682,5.743,2710,6.161,2751,1.532,2776,2.157,2785,3.65,2789,4.932,2797,5.743,2824,3.912,2831,3.096,2834,3.923,2841,4.675,2842,4.675,2844,4.993,2897,2.054,2899,3.285,3077,4.288,3306,1.964,3559,2.96,3925,2.422,3928,5.159,3929,4.288,3956,5.562,3960,3.725,4036,2.278,4059,5.244,4060,3.096,4061,6.12,4062,5.183,4063,4.597,4064,4.597,4065,4.597,4066,4.597,4067,4.597,4068,2.278,4070,2.278,4073,4.597,4076,5.183,4078,2.278,4084,2.278,4119,2.278,4311,4.288,4761,2.603,5059,3.65,5088,2.422,5220,6.485,5221,5.826,5222,5.826,5223,5.826,5224,3.214,5225,3.214,5226,4.842,5227,3.214,5228,3.214,5229,3.214,5230,6.485,5231,6.485,5232,4.842,5233,3.214,5234,3.214,5235,3.214,5236,3.214,5237,4.842,5238,4.842,5239,3.214,5240,4.842,5241,4.842,5242,3.214,5243,4.842,5244,3.214,5245,4.842,5246,3.214,5247,3.214,5248,3.214,5249,4.842,5250,3.214,5251,3.214,5252,3.214,5253,3.214,5254,3.214,5255,3.214,5256,3.214,5257,4.842,5258,3.214,5259,3.214,5260,3.214,5261,3.214,5262,4.842,5263,3.214,5264,3.214,5265,3.214,5266,3.214,5267,3.214,5268,3.214,5269,3.214,5270,3.214,5271,3.214,5272,3.214,5273,3.214,5274,3.214,5275,3.214,5276,3.214,5277,3.214,5278,3.214,5279,3.214,5280,3.214,5281,3.214,5282,3.214,5283,3.214,5284,3.214,5285,3.214,5286,3.214,5287,3.214,5288,3.214,5289,3.214,5290,3.214]],["title/components/SetEditorDialogComponent.html",[0,0.085,190,0.859]],["body/components/SetEditorDialogComponent.html",[0,0.136,1,0.565,2,0.713,3,0.047,4,0.119,5,0.446,6,0.627,7,0.614,8,0.589,9,0.042,11,0.553,13,1.121,14,0.862,15,1.452,16,0.542,17,1.352,18,1.311,19,0.553,20,1.158,21,0.636,22,2.263,23,0.636,24,1.842,25,0.052,26,0.362,27,1.478,28,2.326,30,0.58,33,0.622,35,2.489,37,0.736,39,0.7,40,0.008,41,0.505,42,0.168,43,0.562,45,0.795,46,1.059,49,0.548,50,1.191,51,1.037,53,0.183,54,0.192,55,0.845,56,0.565,57,0.918,60,0.125,61,0.011,62,0.968,63,1.207,64,0.758,72,1.121,85,1.893,86,1.207,92,1.093,93,0.991,95,0.614,96,0.844,97,0.826,98,0.466,99,1.301,100,0.614,101,1.731,102,0.553,103,1.053,104,0.886,105,0.88,106,0.565,107,0.614,108,0.565,109,0.553,110,0.614,111,0.565,112,0.614,113,0.53,114,0.542,115,0.931,116,0.553,117,1.317,118,0.696,119,1.176,120,0.542,121,0.091,122,0.553,123,0.91,124,0.565,125,0.565,126,1.191,127,0.614,128,0.542,129,0.614,130,0.565,131,0.614,132,0.565,133,0.614,134,0.553,135,0.614,136,0.553,137,0.614,138,0.39,139,0.614,140,0.553,141,0.268,142,0.614,143,0.565,144,0.614,145,0.565,146,1.176,147,0.565,148,0.614,149,0.565,150,1.176,151,0.565,152,0.614,153,0.577,154,0.614,155,0.542,156,0.614,157,0.565,158,0.614,159,0.553,160,0.519,161,0.614,162,0.565,163,0.918,164,0.957,165,0.565,166,0.614,167,0.542,168,0.49,169,0.614,170,0.553,171,0.565,172,0.614,173,0.565,174,0.614,175,0.553,176,0.553,177,0.542,178,0.614,179,0.553,180,0.614,181,0.519,182,1.024,183,0.542,184,0.614,185,0.542,186,0.826,187,0.553,188,0.565,189,0.834,190,1.147,191,1.391,192,0.565,193,0.577,194,0.614,195,0.565,196,1.123,197,0.614,198,0.565,199,0.614,200,0.53,201,0.565,202,0.565,203,1.123,204,0.614,205,0.565,206,0.39,207,1.314,208,0.53,209,0.553,210,0.614,211,0.542,212,0.614,213,0.542,214,0.614,215,0.53,216,0.614,217,0.53,218,0.614,219,0.53,220,0.577,221,0.614,222,0.007,223,0.004,226,0.233,234,1.046,235,1.093,243,1.215,244,2.004,246,1.56,248,0.976,253,1.121,256,1.249,260,1.035,268,1.015,276,1.182,284,0.883,301,1.366,315,1.171,371,1.767,417,1.63,537,0.711,538,2.041,548,1.107,549,1.376,553,1.215,561,1.286,567,1.511,574,1.325,602,1.019,608,0.761,621,2.648,637,2.008,652,1.699,691,1.749,725,1.04,728,1.842,742,1.699,753,0.627,761,2.274,763,2.093,764,1.866,768,1.699,769,2.985,778,2.827,780,2.781,783,2.199,787,2.489,790,1.943,791,0.883,792,1.151,793,1.325,803,1.093,811,2.701,816,0.845,826,1.249,834,3.203,844,1.63,877,2.263,890,1.249,904,1.567,907,1.196,924,1.511,927,1.866,942,3.203,945,1.567,956,1.63,978,1.286,988,2.305,992,1.567,1011,1.151,1012,1.093,1013,1.151,1015,1.408,1032,2.204,1039,1.866,1044,0.903,1065,0.791,1068,1.325,1102,1.998,1174,1.015,1176,2.393,1177,1.366,1178,2.702,1187,1.63,1191,2.274,1193,2.326,1194,2.204,1195,2.117,1201,2.274,1240,2.045,1274,1.943,1423,1.325,1449,1.459,1470,2.931,1474,1.093,1483,1.411,1501,1.63,1503,1.215,1509,3.544,1512,3.403,1513,3.403,1517,1.63,1541,4.609,1542,2.893,1579,2.355,1636,1.151,1655,1.325,1664,2.199,1670,2.13,1697,1.777,1716,2.443,1738,1.511,1744,1.699,1746,3.542,1747,1.699,1774,1.544,1807,1.182,1809,2.955,1835,1.866,1836,1.63,1849,1.567,1852,1.777,1870,3.254,1901,3.542,1908,2.199,2010,1.567,2086,1.866,2087,1.63,2088,1.63,2096,1.777,2160,2.77,2173,1.699,2177,2.909,2543,5.261,2615,1.511,2663,1.97,2665,1.511,2666,1.63,2668,1.366,2670,4.619,2671,2.095,2751,2.537,2764,2.095,2776,3.574,2800,1.777,2841,3.843,2842,4.166,2844,1.777,2852,4.036,2866,3.071,2899,2.443,3326,2.461,3545,2.252,3559,1.699,3801,1.97,3843,1.777,3885,1.866,3937,1.63,3946,2.909,3955,4.036,3956,5.502,3957,4.531,3958,2.095,3959,2.095,3960,3.843,3961,2.095,3962,3.266,3963,2.095,3964,2.095,3965,2.095,3967,1.97,3968,2.095,3969,2.095,3973,2.095,3974,2.095,3975,2.095,3976,2.095,3979,4.912,3981,2.095,3983,2.095,3986,1.777,3987,2.095,3988,2.095,3990,2.095,3991,2.095,3992,2.095,3995,2.095,3996,2.095,3999,2.095,4000,1.699,4001,2.648,4002,4.013,4003,3.266,4004,2.095,4005,1.97,4006,2.095,4007,2.095,4008,2.095,4009,3.266,4010,3.266,4011,2.095,4012,2.095,4013,2.095,4014,2.095,4015,3.266,4016,2.095,4017,3.266,4018,2.095,4019,2.095,4020,2.095,4021,2.095,4022,2.095,4023,2.095,4024,2.095,4025,2.095,4026,2.095,4027,2.095,4028,2.095,4029,2.095,4030,2.095,4031,2.095,4032,3.266,4033,4.013,4034,2.095,4035,2.095,4036,1.97,4037,2.095,4038,2.095,4039,2.095,4040,1.97,4041,2.095,4042,2.095,4043,2.095,4044,4.013,4045,2.095,4046,2.095,4047,2.095,4048,2.095,4049,2.095,4050,2.095,4051,2.095,4052,2.095,4053,2.095,4054,2.095,4055,2.095,4056,2.095,4057,2.095,4058,2.095,4059,1.866,4060,4.166,4061,4.619,4062,1.97,4063,1.97,4064,1.97,4065,4.619,4066,1.97,4067,1.97,4068,3.774,4069,4.013,4070,3.774,4071,4.013,4072,2.095,4073,3.071,4074,2.095,4075,2.095,4076,3.774,4077,2.095,4078,1.97,4079,2.095,4080,2.095,4081,3.266,4082,3.266,4083,2.095,4084,1.97,4085,2.095,4086,2.095,4087,2.095,4088,2.095,4089,2.095,4090,2.095,4091,4.531,4092,2.095,4093,3.266,4094,2.095,4095,3.266,4096,2.095,4097,3.266,4098,2.095,4099,3.266,4100,3.266,4101,2.095,4102,2.095,4103,2.095,4104,2.095,4105,3.266,4106,2.095,4107,2.095,4108,2.095,4109,2.095,4110,2.095,4111,2.095,4112,2.095,4113,3.266,4114,2.095,4115,2.095,4116,2.095,4117,2.095,4118,2.095,4119,1.97,4120,2.095,5201,3.836,5291,4.332,5292,4.332,5293,4.332,5294,4.332,5295,4.332,5296,2.779,5297,2.779,5298,2.779,5299,2.779,5300,2.779,5301,2.779,5302,2.779,5303,2.779,5304,2.779,5305,2.779,5306,2.779,5307,2.779,5308,2.779,5309,2.779,5310,2.779,5311,4.332,5312,4.332,5313,4.332,5314,2.779,5315,2.779,5316,2.779,5317,2.779,5318,2.779,5319,5.324,5320,2.779,5321,2.779,5322,2.779,5323,2.779,5324,2.779,5325,2.779]],["title/interfaces/SetEditorDialogData.html",[121,0.068,4060,2.879]],["body/interfaces/SetEditorDialogData.html",[0,0.131,2,0.5,3,0.063,4,0.128,9,0.057,13,1.506,14,0.743,15,1.475,17,0.536,18,0.524,20,0.626,21,0.548,22,1.587,23,0.548,24,1.587,25,0.07,26,0.453,27,1.462,28,1.631,33,0.536,35,2.239,40,0.008,42,0.184,43,0.665,46,0.934,49,0.637,51,0.561,53,0.2,54,0.258,55,1.135,60,0.145,61,0.014,62,1.3,63,1.17,64,1.018,72,1.506,92,1.468,103,0.654,115,0.643,117,1.213,121,0.096,126,1.275,168,0.422,182,1.096,189,0.812,190,0.712,191,1.186,207,1.17,222,0.007,223,0.005,234,0.979,235,1.468,244,1.727,246,1.671,248,0.988,253,1.506,256,1.678,260,1.079,284,2.216,301,1.835,315,1.281,371,1.905,529,1.018,537,0.955,538,2.439,548,1.223,549,1.719,553,1.631,561,1.727,567,2.029,574,1.779,595,2.302,602,0.878,608,0.812,621,3.307,637,2.154,652,2.282,691,2.029,725,1.396,728,2.3,742,2.282,753,0.842,761,2.839,763,2.126,764,4.683,769,3.05,778,3.012,780,3.227,783,3.541,787,2.633,790,2.322,791,1.186,792,1.546,793,1.779,803,1.468,811,2.65,826,1.678,834,3.429,844,2.189,877,1.587,890,1.678,907,0.743,924,2.029,927,2.507,942,1.835,945,2.105,978,1.727,988,2.074,992,2.105,1011,1.546,1012,1.468,1013,1.546,1015,1.758,1032,1.546,1039,2.507,1044,1.213,1065,1.063,1068,1.779,1240,2.372,1423,1.779,1449,1.959,1470,3.398,1474,1.468,1483,1.895,1501,2.189,1503,1.631,1509,1.727,1512,2.387,1513,2.387,1517,2.189,1541,3.458,1579,2.94,1664,2.746,1697,2.387,1716,3.05,1738,2.029,1744,2.282,1746,3.458,1747,2.282,1774,1.928,1807,1.587,1809,3.429,1836,2.189,1849,2.105,1852,2.387,1870,3.307,1901,4.024,1908,2.746,2010,2.105,2086,2.507,2087,2.189,2088,2.189,2096,2.387,2160,3.458,2173,2.282,2543,2.282,2776,2.507,2800,2.387,2841,5.091,2842,4.936,2844,4.459,2852,4.683,2866,3.834,2899,2.105,3559,2.282,3801,2.646,3843,2.387,3885,2.507,3937,2.189,3946,3.632,3955,4.271,3956,2.387,3957,5.258,3958,2.814,3959,2.814,3960,4.936,3961,2.814,3962,4.078,3963,2.814,3964,2.814,3965,2.814,3967,2.646,3968,2.814,3969,2.814,3973,2.814,3974,2.814,3975,2.814,3976,2.814,3979,5.581,3981,2.814,3983,2.814,3986,2.387,3987,2.814,3988,2.814,3990,2.814,3991,2.814,3992,2.814,3995,2.814,3996,2.814,3999,2.814,4000,2.282,4001,3.307,4002,4.795,4003,4.078,4004,2.814,4005,2.646,4006,2.814,4007,2.814,4008,2.814,4009,4.078,4010,4.078,4011,2.814,4012,2.814,4013,2.814,4014,2.814,4015,4.078,4016,2.814,4017,4.078,4018,2.814,4019,2.814,4020,2.814,4021,2.814,4022,2.814,4023,2.814,4024,2.814,4025,2.814,4026,2.814,4027,2.814,4028,2.814,4029,2.814,4030,2.814,4031,2.814,4032,4.078,4033,4.795,4034,2.814,4035,2.814,4036,2.646,4037,2.814,4038,2.814,4039,2.814,4040,2.646,4041,2.814,4042,2.814,4043,2.814,4044,4.795,4045,2.814,4046,2.814,4047,2.814,4048,2.814,4049,2.814,4050,2.814,4051,2.814,4052,2.814,4053,2.814,4054,2.814,4055,2.814,4056,2.814,4057,2.814,4058,2.814,4059,2.507,4060,4.067,4061,5.472,4062,4.944,4063,4.944,4064,4.944,4065,5.248,4066,4.944,4067,4.944,4068,2.646,4069,2.814,4070,2.646,4071,2.814,4072,2.814,4073,3.834,4074,2.814,4075,2.814,4076,4.509,4077,2.814,4078,2.646,4079,2.814,4080,2.814,4081,4.078,4082,4.078,4083,2.814,4084,2.646,4085,2.814,4086,2.814,4087,2.814,4088,2.814,4089,2.814,4090,2.814,4091,2.814,4092,2.814,4093,4.078,4094,2.814,4095,2.814,4096,2.814,4097,2.814,4098,2.814,4099,2.814,4100,4.078,4101,2.814,4102,2.814,4103,2.814,4104,2.814,4105,2.814,4106,2.814,4107,2.814,4108,2.814,4109,2.814,4110,2.814,4111,2.814,4112,2.814,4113,4.078,4114,2.814,4115,2.814,4116,2.814,4117,2.814,4118,2.814,4119,2.646,4120,2.814]],["title/interfaces/SetMultiSource.html",[121,0.068,3960,2.879]],["body/interfaces/SetMultiSource.html",[0,0.132,2,0.732,3,0.064,4,0.131,9,0.057,13,1.525,14,0.753,15,1.489,17,0.543,18,0.531,20,0.634,21,0.556,22,1.608,23,0.556,24,1.608,25,0.071,26,0.457,27,1.465,28,1.653,33,0.543,35,2.261,40,0.008,42,0.161,43,0.605,46,0.941,49,0.585,51,0.568,53,0.201,54,0.261,55,1.149,60,0.146,61,0.014,62,1.317,63,1.174,64,1.032,72,1.525,92,1.487,103,0.663,115,0.649,117,1.222,121,0.106,126,1.283,168,0.428,182,1.102,189,0.821,190,0.722,191,1.228,207,1.177,222,0.007,223,0.005,226,0.316,234,0.985,235,1.487,244,1.75,246,1.678,248,0.991,253,1.525,256,1.7,260,1.08,284,1.202,301,1.859,315,1.286,371,1.988,529,1.032,537,0.968,538,2.457,548,1.228,549,1.735,553,1.653,561,1.75,567,2.056,574,1.803,595,1.489,602,0.89,608,0.814,621,3.338,637,2.256,652,2.312,691,2.041,725,2.042,728,2.725,742,2.312,753,0.853,761,2.866,763,2.147,764,2.539,769,3.061,778,3.018,780,3.698,783,2.772,787,2.653,790,2.339,791,1.202,792,1.566,793,1.803,803,1.487,811,2.815,826,1.7,834,3.45,844,2.218,877,1.608,890,1.7,907,0.753,924,2.056,927,2.539,942,1.859,945,2.133,978,1.75,988,2.093,992,2.133,1011,1.566,1012,1.487,1013,1.566,1015,1.774,1032,1.566,1039,2.539,1044,1.229,1065,1.077,1068,1.803,1240,2.719,1423,1.803,1449,1.985,1470,3.406,1474,2.147,1483,1.92,1501,2.218,1503,1.653,1509,1.75,1512,2.418,1513,2.418,1517,2.218,1541,3.491,1579,2.968,1664,2.772,1697,2.418,1716,3.079,1738,2.968,1744,2.312,1746,3.483,1747,2.312,1774,1.946,1807,1.608,1809,3.45,1836,3.202,1849,3.079,1852,2.418,1870,3.338,1901,4.448,1908,2.772,2010,3.079,2086,2.539,2087,2.218,2088,2.218,2096,2.418,2160,4.097,2173,2.312,2543,2.312,2776,2.539,2800,2.418,2841,4.486,2842,4.097,2844,2.418,2852,5.495,2866,3.871,2899,2.133,3559,2.312,3801,2.681,3843,2.418,3885,2.539,3937,2.218,3946,3.666,3955,4.303,3956,2.418,3957,5.61,3958,2.851,3959,2.851,3960,4.758,3961,2.851,3962,4.116,3963,2.851,3964,2.851,3965,2.851,3967,2.681,3968,2.851,3969,2.851,3973,2.851,3974,2.851,3975,2.851,3976,2.851,3979,6.382,3981,2.851,3983,2.851,3986,2.418,3987,2.851,3988,2.851,3990,2.851,3991,2.851,3992,2.851,3995,2.851,3996,2.851,3999,2.851,4000,2.312,4001,4.29,4002,5.845,4003,5.845,4004,4.116,4005,2.681,4006,2.851,4007,2.851,4008,2.851,4009,4.116,4010,4.116,4011,2.851,4012,2.851,4013,2.851,4014,2.851,4015,4.116,4016,2.851,4017,4.116,4018,2.851,4019,2.851,4020,2.851,4021,2.851,4022,2.851,4023,2.851,4024,2.851,4025,2.851,4026,2.851,4027,2.851,4028,2.851,4029,2.851,4030,2.851,4031,2.851,4032,4.116,4033,4.831,4034,2.851,4035,2.851,4036,2.681,4037,2.851,4038,2.851,4039,2.851,4040,2.681,4041,2.851,4042,2.851,4043,2.851,4044,4.831,4045,2.851,4046,2.851,4047,2.851,4048,2.851,4049,2.851,4050,2.851,4051,2.851,4052,2.851,4053,2.851,4054,2.851,4055,2.851,4056,2.851,4057,2.851,4058,2.851,4059,2.539,4060,3.491,4061,4.543,4062,2.681,4063,2.681,4064,2.681,4065,3.871,4066,2.681,4067,2.681,4068,2.681,4069,2.851,4070,2.681,4071,2.851,4072,2.851,4073,3.871,4074,2.851,4075,2.851,4076,4.543,4077,2.851,4078,2.681,4079,2.851,4080,2.851,4081,4.116,4082,4.116,4083,2.851,4084,2.681,4085,2.851,4086,2.851,4087,2.851,4088,2.851,4089,2.851,4090,2.851,4091,2.851,4092,2.851,4093,4.116,4094,2.851,4095,2.851,4096,2.851,4097,2.851,4098,2.851,4099,2.851,4100,4.116,4101,2.851,4102,2.851,4103,2.851,4104,2.851,4105,2.851,4106,2.851,4107,2.851,4108,2.851,4109,2.851,4110,2.851,4111,2.851,4112,2.851,4113,4.116,4114,2.851,4115,2.851,4116,2.851,4117,2.851,4118,2.851,4119,2.681,4120,2.851]],["title/components/SettingsDialogComponent.html",[0,0.085,56,0.915]],["body/components/SettingsDialogComponent.html",[0,0.143,1,1.263,2,0.833,3,0.077,4,0.069,5,0.73,6,1.026,7,1.005,8,0.964,9,0.069,11,1.706,12,3.427,13,1.834,14,1.237,15,1.931,16,0.886,17,1.382,18,1.346,19,1.586,20,1.438,21,0.913,22,3.011,23,0.913,24,2.642,25,0.086,26,0.52,27,1.458,28,3.326,30,0.833,33,0.653,34,2.564,35,3.299,36,3.326,37,0.726,39,0.488,40,0.008,41,0.53,42,0.158,43,0.392,44,3.053,45,0.78,46,1.118,49,0.444,50,1.136,51,0.934,53,0.22,54,0.489,55,1.889,56,1.547,57,1.947,58,5.757,59,2.793,60,0.094,61,0.012,62,1.583,63,0.668,64,1.24,70,3.262,72,1.834,95,1.005,96,1.211,97,1.186,98,0.763,99,1.647,100,1.005,101,1.944,102,0.905,103,0.796,104,1.019,105,1.263,106,0.924,107,1.005,108,0.924,109,0.905,110,1.005,111,0.924,112,1.005,113,0.867,114,0.886,115,0.947,116,0.905,117,0.867,118,0.998,119,1.565,120,0.886,121,0.069,122,0.905,123,0.983,124,0.924,125,0.924,126,0.831,127,1.005,128,0.886,129,1.005,130,0.924,131,1.005,132,0.924,133,1.005,134,0.905,135,1.005,136,0.905,137,1.005,138,0.638,139,1.005,140,0.905,141,0.439,142,1.005,143,0.924,144,1.005,145,0.924,146,1.565,147,0.924,148,1.005,149,0.924,150,1.565,151,0.924,152,1.005,153,0.944,154,1.005,155,0.886,156,1.005,157,0.924,158,1.005,159,0.905,160,0.849,161,1.005,162,0.924,163,1.317,164,1.373,165,0.924,166,1.005,167,0.886,168,0.514,169,1.005,170,0.905,171,1.263,172,1.761,173,0.924,174,1.005,175,0.905,176,0.905,177,0.886,178,1.005,179,0.905,180,1.005,181,0.849,182,0.714,183,0.886,184,1.005,185,0.886,186,1.186,187,0.905,188,0.924,189,0.584,190,0.867,191,0.698,192,0.924,193,0.944,194,1.005,195,0.924,196,0.849,197,1.005,198,0.924,199,1.005,200,0.867,201,0.924,202,0.924,203,0.849,204,1.005,205,0.924,206,0.638,207,0.763,208,0.867,209,0.905,210,1.005,211,0.886,212,1.005,213,0.886,214,1.005,215,0.867,216,1.005,217,0.867,218,1.005,219,0.867,220,0.944,221,1.005,222,0.005,223,0.005,249,1.933,253,1.834,254,2.103,255,1.701,256,2.043,355,3.223,472,3.427,537,1.164,540,1.882,547,1.511,626,2.308,691,1.323,726,1.048,1100,3.644,1440,3.683,1472,3.683,1552,3.223,1565,4.405,1568,3.683,2232,3.427,2244,3.427,2250,3.427,2789,3.223,2824,3.053,2855,2.779,3340,6.74,3341,6.74,4781,4.026,5326,7.593,5327,9.066,5328,7.969,5329,7.611,5330,7.611,5331,7.611,5332,7.081,5333,4.547,5334,4.547,5335,4.547,5336,6.215,5337,4.547,5338,6.215,5339,6.215,5340,4.547,5341,5.503]],["title/components/SideNavComponent.html",[0,0.085,192,0.915]],["body/components/SideNavComponent.html",[0,0.154,1,0.902,2,0.819,3,0.119,4,0.067,5,0.713,6,1.002,7,0.981,8,0.941,9,0.067,11,0.884,16,0.865,17,1.381,18,1.345,19,0.884,20,0.745,21,0.898,23,0.898,25,0.084,26,0.512,27,1.451,33,0.638,37,0.755,39,0.477,40,0.008,41,0.55,42,0.18,43,0.383,49,0.317,50,1.493,51,1.227,53,0.201,54,0.307,56,0.902,57,1.296,60,0.092,61,0.011,62,1.546,69,3.585,95,0.981,96,1.191,97,1.166,98,0.745,99,1.631,100,0.981,101,1.935,102,0.884,103,0.778,104,1.051,105,1.243,106,0.902,107,0.981,108,0.902,109,0.884,110,0.981,111,0.902,112,0.981,113,0.847,114,0.865,115,0.939,116,0.884,117,0.847,118,0.982,119,1.545,120,0.865,121,0.067,122,0.884,123,0.98,124,0.902,125,0.902,126,0.812,127,0.981,128,0.865,129,0.981,130,0.902,131,0.981,132,0.902,133,0.981,134,0.884,135,0.981,136,0.884,137,0.981,138,0.623,139,0.981,140,0.884,141,0.789,142,0.981,143,0.902,144,0.981,145,0.902,146,1.545,147,0.902,148,0.981,149,0.902,150,1.545,151,0.902,152,0.981,153,0.921,154,0.981,155,0.865,156,0.981,157,0.902,158,0.981,159,0.884,160,0.829,161,0.981,162,0.902,163,1.296,164,1.351,165,0.902,166,0.981,167,0.865,168,0.502,169,0.981,170,0.884,171,0.902,172,0.981,173,0.902,174,0.981,175,0.884,176,0.884,177,0.865,178,0.981,179,0.884,180,0.981,181,0.829,182,0.697,183,0.865,184,0.981,185,0.865,186,1.166,187,0.884,188,0.902,189,0.574,190,0.847,191,0.682,192,1.531,193,1.769,194,0.981,195,0.902,196,0.829,197,0.981,198,0.902,199,0.981,200,0.847,201,0.902,202,0.902,203,1.407,204,0.981,205,0.902,206,0.623,207,1.026,208,0.847,209,0.884,210,0.981,211,0.865,212,0.981,213,0.865,214,0.981,215,0.847,216,0.981,217,0.847,218,0.981,219,0.847,220,0.921,221,0.981,222,0.005,223,0.005,226,0.371,274,3.235,276,1.888,277,2.344,371,1.38,378,7.164,499,1.621,512,3.486,515,2.173,517,4.957,535,3.935,549,1.943,556,4.148,608,0.417,654,3.671,725,2.287,907,1.392,975,2.829,987,3.552,988,3.03,1011,1.838,1012,1.746,1013,1.838,1052,3.738,1072,1.838,1174,2.232,1178,2.254,1195,1.443,1196,3.148,1233,3.006,1423,2.116,1549,1.702,1636,1.838,1637,2.254,1675,3.932,2011,3.148,2170,4.818,2212,2.254,2215,5.415,2251,3.347,2615,2.413,2818,3.597,2892,3.738,2897,2.839,3087,5.415,3091,3.597,3092,2.981,3318,3.585,4534,3.597,4841,4.105,4849,5.415,4859,6.193,5342,7.831,5343,3.932,5344,6.115,5345,6.115,5346,5.415,5347,6.994,5348,6.115,5349,6.994,5350,6.994,5351,6.994,5352,6.994,5353,7.903,5354,6.994,5355,4.441,5356,6.115,5357,4.441,5358,4.441,5359,4.441,5360,6.115,5361,4.441,5362,4.441,5363,4.441,5364,4.441,5365,4.441,5366,4.441,5367,4.441,5368,4.441,5369,4.441,5370,4.441,5371,4.441,5372,7.536,5373,4.441,5374,4.441,5375,4.441,5376,4.441,5377,4.441,5378,4.441,5379,3.932]],["title/injectables/StateService.html",[532,1.082,556,2.364]],["body/injectables/StateService.html",[3,0.093,4,0.083,8,1.155,9,0.083,25,0.103,26,0.586,30,0.939,33,0.782,37,0.729,39,0.832,40,0.008,41,0.545,42,0.17,43,0.668,45,0.854,46,0.8,49,0.554,50,1.281,51,1.053,53,0.213,54,0.377,60,0.145,61,0.014,63,1.201,89,3.678,104,1.103,121,0.083,189,0.512,222,0.006,223,0.006,226,0.586,231,2.277,246,1.179,248,0.921,260,0.921,281,1.656,293,1.039,315,1.101,317,1.995,499,1.989,512,2.521,514,5.677,528,5.839,530,4.414,531,5.677,532,1.684,533,7.242,534,4.825,535,4.112,536,3.862,537,1.394,538,2.97,539,3.658,540,2.256,541,1.551,542,4.967,543,4.414,544,2.449,545,3.149,546,6.206,547,2.718,548,1.077,549,2.598,550,4.705,551,6.206,552,4.802,553,3.062,554,6.206,555,2.381,556,3.678,557,3.899,558,5.283,559,7.228,560,4.825,561,3.242,562,4.48,563,3.952,564,6.206,565,6.206,566,4.705,567,3.809,568,5.283,569,3.062,570,6.206,571,5.677,572,2.98,573,3.809,574,3.34,575,1.901,576,3.809,577,6.206,578,6.164,579,5.283,580,6.206,581,6.206,582,6.206,583,3.678,584,6.206,585,6.206,586,4.825,587,4.825,588,4.825,589,6.206,590,6.206,591,3.862,592,4.825,593,6.206,594,4.795,595,1.911,596,5.677,597,6.206,598,5.677,599,3.809,600,6.206,601,6.206,602,1.649,603,4.825,604,5.677,605,4.825,606,4.825,607,4.825,608,0.658,609,4.825,610,4.825,611,2.197,625,3.862,646,2.256,5380,7.008,5381,7.008,5382,7.008,5383,5.449,5384,5.449,5385,5.449]],["title/components/TextDisplayComponent.html",[0,0.085,195,0.915]],["body/components/TextDisplayComponent.html",[0,0.149,1,0.82,2,0.766,3,0.069,4,0.061,5,0.648,6,0.911,7,0.892,8,0.855,9,0.061,11,0.803,16,0.786,17,1.376,18,1.339,19,0.803,20,0.677,21,0.84,23,0.84,25,0.076,26,0.479,30,0.766,37,0.762,39,0.614,40,0.008,41,0.525,42,0.176,43,0.493,45,0.732,46,1.121,49,0.595,50,1.321,51,1.29,53,0.141,54,0.279,56,0.82,57,1.212,60,0.119,61,0.01,63,0.976,85,2.5,86,1.851,90,2.366,93,2.576,95,0.892,96,1.114,97,1.091,98,0.677,99,1.564,100,0.892,101,1.897,102,0.803,103,0.707,104,0.989,105,1.162,106,0.82,107,0.892,108,0.82,109,0.803,110,0.892,111,0.82,112,0.892,113,0.77,114,0.786,115,0.907,116,0.803,117,1.588,118,1.161,119,1.468,120,0.786,121,0.061,122,0.803,123,0.968,124,0.82,125,0.82,126,0.738,127,0.892,128,0.786,129,0.892,130,0.82,131,0.892,132,0.82,133,0.892,134,0.803,135,0.892,136,0.803,137,0.892,138,0.566,139,0.892,140,0.803,141,0.39,142,0.892,143,0.82,144,0.892,145,0.82,146,1.468,147,0.82,148,0.892,149,0.82,150,1.468,151,0.82,152,0.892,153,0.838,154,0.892,155,0.786,156,0.892,157,0.82,158,0.892,159,0.803,160,0.754,161,0.892,162,0.82,163,1.212,164,1.264,165,0.82,166,0.892,167,0.786,168,0.456,169,0.892,170,0.803,171,0.82,172,0.892,173,0.82,174,0.892,175,0.803,176,0.803,177,0.786,178,0.892,179,0.803,180,0.892,181,0.754,182,0.634,183,0.786,184,0.892,185,0.786,186,1.091,187,0.803,188,0.82,189,0.624,190,0.77,191,0.62,192,0.82,193,0.838,194,0.892,195,1.469,196,1.761,197,0.892,198,0.82,199,0.892,200,0.77,201,0.82,202,0.82,203,1.425,204,0.892,205,0.82,206,1.112,207,0.677,208,0.77,209,0.803,210,0.892,211,0.786,212,0.892,213,0.786,214,0.892,215,0.77,216,0.892,217,0.77,218,0.892,219,0.77,220,0.838,221,0.892,222,0.005,223,0.005,226,0.338,246,1.715,259,2.432,267,3.039,268,2.786,276,2.432,277,2.771,284,1.817,315,1.135,463,6.713,561,3.074,575,0.99,576,3.109,595,1.812,602,1.865,608,0.379,611,1.628,654,3.487,659,4.312,670,4.147,726,1.826,766,2.088,840,4.474,866,2.992,888,1.924,904,4.303,907,1.657,993,3.497,1007,4.621,1069,1.628,1072,1.671,1073,2.366,1102,2.887,1173,3.574,1174,2.639,1176,2.571,1177,1.984,1178,2.049,1179,2.726,1191,3.794,1193,2.5,1194,1.671,1195,1.311,1197,3.244,1419,3.896,1542,2.194,1636,2.368,1645,2.467,1655,1.924,1859,2.194,2041,3.226,2117,2.467,2613,2.58,2614,3.042,2615,3.109,2665,3.109,2666,3.354,2668,1.984,2683,5.065,2692,3.042,2713,2.71,2751,1.924,2756,2.194,3096,2.58,3550,2.861,4040,4.055,4131,5.884,4133,7.499,4181,5.065,4341,2.71,4490,3.042,4862,3.574,4868,3.27,5386,7.214,5387,3.27,5388,5.72,5389,6.644,5390,5.72,5391,6.644,5392,6.644,5393,7.228,5394,8.149,5395,6.644,5396,4.036,5397,5.884,5398,4.036,5399,4.036,5400,4.036,5401,5.72,5402,5.72,5403,4.036,5404,4.036,5405,4.036,5406,4.036,5407,4.036,5408,4.036,5409,4.036,5410,4.036,5411,4.036,5412,4.036,5413,4.036,5414,5.72,5415,4.036,5416,4.036,5417,5.72,5418,5.72,5419,4.036,5420,4.036,5421,4.036,5422,6.644,5423,4.036,5424,3.574,5425,3.574,5426,4.036,5427,4.036,5428,4.036]],["title/interfaces/TextFragment.html",[121,0.068,2196,3.024]],["body/interfaces/TextFragment.html",[0,0.152,3,0.101,4,0.09,9,0.09,14,1.178,15,2.014,17,0.85,18,0.83,21,0.869,23,0.869,25,0.112,26,0.618,27,0.971,40,0.008,41,0.543,42,0.153,49,0.602,50,1.082,51,0.889,53,0.213,54,0.409,60,0.153,61,0.015,63,1.085,64,1.614,97,1.129,118,1.393,121,0.112,141,0.571,155,1.153,196,1.574,222,0.006,223,0.006,231,2.399,246,1.598,248,0.877,260,0.703,293,1.129,315,0.93,318,2.909,371,1.335,389,2.66,431,3.216,515,1.839,529,1.614,537,1.514,539,3.973,540,2.45,544,2.66,547,2.454,556,3.875,576,3.216,608,0.556,615,3.337,617,3.216,680,4.958,684,3.47,808,3.337,811,1.923,821,3.973,904,3.337,1044,1.923,1102,1.967,1253,2.586,1403,3.47,1474,3.477,1476,3.783,1503,2.586,1509,3.899,1539,4.195,1880,3.617,2129,4.195,2138,3.004,2144,5.146,2145,4.195,2146,3.617,2147,4.195,2148,5.404,2149,5.823,2150,5.982,2151,5.982,2152,5.982,2153,6.521,2154,4.461,2155,4.958,2156,4.794,2157,4.753,2158,3.973,2159,4.794,2160,3.783,2161,5.705,2162,4.794,2163,4.794,2164,4.794,2165,4.794,2166,4.794,2167,4.461,2168,5.566,2169,4.794,2170,3.783,2171,4.794,2172,4.794,2173,3.617,2174,4.794,2175,4.794,2176,4.461,2177,3.973,2178,5.404,2179,4.461,2180,4.794,2181,4.794,2182,4.794,2183,4.794,2184,4.794,2185,4.794,2186,4.461,2187,4.794,2188,4.794,2189,4.794,2190,4.794,2191,5.982,2192,4.794,2193,4.794,2194,4.794,2195,4.195,2196,5.404]],["title/classes/TimeFormatter.html",[61,0.011,830,2.54]],["body/classes/TimeFormatter.html",[3,0.095,4,0.085,9,0.085,25,0.106,30,0.956,37,0.676,39,0.843,40,0.008,41,0.506,42,0.163,43,0.676,45,0.865,49,0.675,60,0.116,61,0.018,81,7.316,83,4.797,89,4.578,222,0.006,223,0.006,226,0.691,248,0.933,260,1.037,575,2.027,594,4.182,608,0.843,720,2.045,725,3.09,751,4.222,757,5.056,806,3.938,816,2.168,819,4.336,830,4.022,831,4.844,861,4.222,862,4.537,863,3.158,1065,2.429,1192,6.358,1664,3.62,1779,2.843,1977,2.202,2004,4.56,2325,5.282,2481,4.56,4005,6.048,4353,7.316,5186,4.96,5425,7.316,5429,4.96,5430,7.133,5431,7.133,5432,7.133,5433,7.133,5434,5.601,5435,8.722,5436,7.133,5437,7.133,5438,7.133,5439,7.133,5440,7.133,5441,7.133,5442,7.133,5443,7.133,5444,8.532,5445,7.133,5446,5.601,5447,6.316,5448,7.133,5449,8.864,5450,7.133,5451,7.133,5452,9.129,5453,5.601,5454,7.133,5455,6.316,5456,5.601,5457,7.133,5458,5.601,5459,7.133,5460,5.601,5461,5.601,5462,5.601,5463,5.601,5464,7.848,5465,5.601,5466,5.601,5467,7.133,5468,5.601,5469,5.601,5470,7.133,5471,7.133,5472,5.601,5473,5.601,5474,5.601,5475,5.601,5476,5.601,5477,5.601,5478,5.601,5479,5.601,5480,5.601]],["title/directives/TimelineCoalescedItemsDirective.html",[98,0.756,215,0.859]],["body/directives/TimelineCoalescedItemsDirective.html",[0,0.149,3,0.097,4,0.086,5,1.504,9,0.086,14,1.135,16,1.111,17,1.232,18,0.8,21,0.838,23,0.838,25,0.108,26,0.604,27,1.184,33,0.819,37,0.622,39,0.613,40,0.008,41,0.368,42,0.15,43,0.491,53,0.194,54,0.394,60,0.173,61,0.021,62,2.755,98,1.525,189,0.677,200,1.376,201,1.872,207,1.536,208,1.088,215,1.51,217,1.376,219,1.376,220,1.183,222,0.006,223,0.006,226,0.477,227,2.492,234,0.8,246,1.234,248,0.678,267,3.38,293,1.088,315,1.133,317,1.623,389,4.047,433,3.646,457,4.042,466,3.921,474,5.313,622,1.985,637,2.419,705,2.361,726,1.823,753,1.287,783,4.571,788,3.344,805,4.612,806,3.772,812,6.211,819,2.993,828,3.337,830,4.69,831,3.344,832,3.646,843,4.042,866,3.551,873,2.638,909,4.042,926,3.786,945,3.216,1060,2.993,1061,3.786,1151,3.1,1807,2.425,1977,2.242,2014,3.486,2036,3.646,2831,3.646,2855,3.486,3001,3.829,3031,2.895,3309,3.486,3311,3.646,3320,4.62,4001,5.084,4153,4.042,4762,4.042,5045,4.299,5481,6.269,5482,5.438,5483,5.703,5484,5.438,5485,5.438,5486,4.042,5487,4.299,5488,4.299,5489,4.299,5490,4.299,5491,4.299,5492,4.299,5493,4.299,5494,4.299,5495,5.965,5496,4.299,5497,5.438,5498,4.299,5499,4.299,5500,4.299]],["title/components/TimelineItemComponent.html",[0,0.085,200,0.859]],["body/components/TimelineItemComponent.html",[0,0.144,1,0.733,2,0.707,3,0.061,4,0.055,5,1.379,6,0.814,7,0.797,8,0.764,9,0.055,11,0.718,14,1.05,16,0.703,17,1.371,18,1.332,19,0.718,20,0.605,21,0.775,23,0.775,25,0.118,26,0.441,33,0.518,37,0.696,39,0.387,40,0.008,41,0.492,42,0.168,43,0.311,50,1.14,51,0.937,53,0.153,54,0.249,56,0.733,57,1.118,60,0.142,61,0.017,62,2.171,86,2.125,93,1.88,95,0.797,96,1.028,97,1.006,98,1.405,99,1.485,100,0.797,101,1.851,102,0.718,103,0.632,104,0.96,105,1.072,106,0.733,107,0.797,108,0.733,109,0.718,110,0.797,111,0.733,112,0.797,113,0.688,114,0.703,115,0.868,116,0.718,117,0.688,118,0.847,119,1.378,120,0.703,121,0.055,122,0.718,123,0.952,124,0.733,125,0.733,126,0.659,127,0.797,128,0.703,129,0.797,130,0.733,131,0.797,132,0.733,133,0.797,134,0.718,135,0.797,136,0.718,137,0.797,138,0.506,139,0.797,140,0.718,141,0.348,142,0.797,143,0.733,144,0.797,145,0.733,146,1.378,147,0.733,148,0.797,149,0.733,150,1.378,151,0.733,152,0.797,153,0.748,154,0.797,155,0.703,156,0.797,157,0.733,158,0.797,159,0.718,160,0.674,161,0.797,162,0.733,163,1.118,164,1.166,165,0.733,166,0.797,167,0.703,168,0.408,169,0.797,170,0.718,171,0.733,172,0.797,173,0.733,174,0.797,175,0.718,176,0.718,177,0.703,178,0.797,179,0.718,180,0.797,181,0.674,182,0.567,183,0.703,184,0.797,185,0.703,186,1.006,187,0.718,188,0.733,189,0.686,190,0.688,191,0.554,192,0.733,193,0.748,194,0.797,195,0.733,196,0.985,197,0.797,198,0.733,199,0.797,200,1.393,201,1.883,202,0.733,203,1.539,204,0.797,205,0.733,206,0.506,207,1.487,208,0.688,209,0.718,210,0.797,211,0.703,212,0.797,213,0.703,214,0.797,215,1.309,216,0.797,217,1.309,218,0.797,219,1.309,220,1.095,221,0.797,222,0.005,223,0.005,226,0.302,227,2.305,234,0.74,243,2.725,246,1.142,248,0.627,267,3.254,268,1.926,276,3.105,277,2.924,279,2.557,284,1.146,293,0.688,315,0.98,317,1.502,371,0.814,389,3.541,433,3.373,457,2.557,466,2.867,474,5.532,602,0.849,611,1.455,622,1.836,637,1.814,705,2.184,726,1.437,753,0.814,766,1.926,783,3.872,788,2.115,805,3.987,806,3.927,811,1.172,812,5.726,816,1.603,819,2.769,828,2.885,830,4.555,831,2.115,832,2.306,843,4.421,866,3.467,873,1.668,907,1.783,909,4.421,926,3.602,945,2.975,995,3.517,1060,2.769,1061,3.602,1069,3.177,1072,3.411,1073,4.024,1102,2.281,1111,2.034,1151,1.96,1174,1.926,1176,3.957,1177,2.593,1179,2.514,1180,3.739,1182,5.176,1193,2.305,1194,1.493,1195,2.56,1196,4.864,1199,4.274,1201,2.769,1274,2.666,1303,1.893,1542,1.96,1543,3.976,1546,2.034,1549,3.02,1634,2.115,1636,1.493,1655,3.48,1670,3.373,1677,2.306,1742,4.701,1807,2.243,1907,3.093,1977,2.074,2014,3.225,2036,3.373,2117,3.225,2267,2.922,2615,3.39,2662,2.719,2664,5.523,2665,3.39,2666,3.093,2667,3.194,2668,4.051,2751,2.514,2756,2.867,2765,3.194,2766,3.194,2831,3.373,2855,3.225,2899,2.975,3001,3.542,3031,2.678,3309,2.205,3311,3.373,3546,2.557,3550,2.557,3677,6.077,4001,3.812,4153,3.739,4762,2.557,4774,3.194,4853,3.194,5379,5.523,5424,4.671,5481,4.701,5482,2.719,5484,5.173,5485,4.701,5486,3.739,5487,3.976,5488,4.701,5489,3.976,5490,4.701,5491,3.976,5492,4.701,5493,4.701,5494,2.719,5495,4.701,5496,2.719,5497,3.976,5498,2.719,5499,2.719,5500,2.719,5501,3.607,5502,5.275,5503,3.607,5504,3.607,5505,3.607,5506,3.607,5507,3.607,5508,3.607,5509,5.275,5510,3.607,5511,3.607,5512,3.607,5513,3.607,5514,3.607,5515,3.607,5516,4.671,5517,3.607,5518,3.607,5519,5.275,5520,3.607,5521,5.275,5522,3.607,5523,7.302,5524,3.607,5525,3.607,5526,3.607,5527,3.607,5528,3.607,5529,3.607,5530,3.607]],["title/directives/TimelineItemDeletedDirective.html",[98,0.756,217,0.859]],["body/directives/TimelineItemDeletedDirective.html",[0,0.149,3,0.097,4,0.086,5,1.503,9,0.086,14,1.131,16,1.108,17,1.231,18,0.798,21,0.835,23,0.835,25,0.107,26,0.602,27,1.182,33,0.816,37,0.62,39,0.611,40,0.008,41,0.367,42,0.149,43,0.49,53,0.194,54,0.393,60,0.172,61,0.021,62,2.751,98,1.524,189,0.742,200,1.507,201,1.871,207,1.535,208,1.084,215,1.373,217,1.507,219,1.373,220,1.18,222,0.006,223,0.006,226,0.476,227,2.484,234,0.798,246,1.23,248,0.676,267,3.379,293,1.084,315,1.241,317,1.618,389,4.044,433,3.634,457,4.03,466,3.913,474,5.305,622,1.979,637,2.417,705,2.353,726,1.821,753,1.283,783,4.568,788,3.333,805,4.603,806,3.766,812,6.075,819,2.984,828,3.331,830,4.684,831,3.333,832,3.634,843,4.03,866,3.548,873,2.63,909,4.03,926,3.779,945,3.206,1060,2.984,1061,3.779,1151,3.09,1807,2.417,1977,2.235,2014,3.475,2036,3.634,2831,3.634,2855,3.475,3001,3.817,3031,2.885,3309,3.475,3311,3.634,4001,5.078,4153,4.03,4762,5.104,5045,4.285,5481,6.262,5482,4.285,5484,5.957,5485,5.957,5486,4.03,5487,4.285,5488,4.285,5489,4.285,5490,4.285,5491,4.285,5492,4.285,5493,4.285,5494,4.285,5495,5.957,5496,4.285,5497,5.427,5498,4.285,5499,4.285,5500,4.285,5531,5.685,5532,5.685]],["title/directives/TimelineSingleItemDirective.html",[98,0.756,219,0.859]],["body/directives/TimelineSingleItemDirective.html",[0,0.149,3,0.097,4,0.086,5,1.504,9,0.086,14,1.135,16,1.111,17,1.232,18,0.8,21,0.838,23,0.838,25,0.108,26,0.604,27,1.184,33,0.819,37,0.622,39,0.613,40,0.008,41,0.368,42,0.15,43,0.491,53,0.194,54,0.394,60,0.173,61,0.021,62,2.755,98,1.525,189,0.677,200,1.376,201,1.872,207,1.536,208,1.088,215,1.376,217,1.376,219,1.51,220,1.497,222,0.006,223,0.006,226,0.477,227,2.492,234,0.8,246,1.234,248,0.678,267,3.38,293,1.088,315,1.133,317,1.623,389,4.047,433,3.646,457,4.042,466,3.921,474,5.313,622,1.985,637,2.419,705,2.361,726,1.823,753,1.287,783,4.571,788,3.344,805,4.612,806,3.772,812,6.211,819,2.993,828,3.337,830,4.69,831,3.344,832,3.646,843,4.042,866,3.551,873,2.638,909,4.042,926,3.786,945,3.216,1060,2.993,1061,3.786,1151,3.1,1807,2.425,1977,2.242,2014,3.486,2036,3.646,2831,3.646,2855,3.486,3001,3.829,3031,2.895,3309,3.486,3311,3.646,3319,5.05,4001,5.084,4153,4.042,4762,4.042,5045,4.299,5481,6.269,5482,4.299,5484,5.438,5485,5.438,5486,4.042,5487,4.299,5488,4.299,5489,4.299,5490,4.299,5491,4.299,5492,4.299,5493,4.299,5494,4.299,5495,5.965,5496,4.299,5497,5.438,5498,4.299,5499,4.299,5500,4.299,5533,5.05]],["title/components/TopToolbarComponent.html",[0,0.085,202,0.915]],["body/components/TopToolbarComponent.html",[0,0.153,1,0.894,2,0.814,3,0.075,4,0.067,5,0.707,6,0.993,7,0.972,8,0.932,9,0.067,11,0.875,16,0.857,17,1.381,18,1.345,19,0.875,20,1.259,21,0.893,23,0.893,25,0.115,26,0.508,27,1.435,30,0.814,33,0.632,36,3.28,37,0.719,39,0.473,40,0.008,41,0.525,42,0.164,43,0.379,45,0.67,46,0.893,50,1.111,51,0.913,53,0.205,54,0.304,55,1.337,56,1.235,57,1.726,58,2.954,59,1.977,60,0.091,61,0.011,63,0.646,69,4.401,71,3.564,95,0.972,96,1.184,97,1.159,98,0.738,99,1.624,100,0.972,101,1.931,102,0.875,103,0.771,104,1.026,105,1.235,106,0.894,107,0.972,108,0.894,109,0.875,110,0.972,111,0.894,112,0.972,113,0.839,114,0.857,115,0.936,116,0.875,117,0.839,118,0.976,119,1.538,120,0.857,121,0.067,122,0.875,123,0.979,124,0.894,125,0.894,126,0.804,127,0.972,128,1.356,129,0.972,130,0.894,131,0.972,132,0.894,133,0.972,134,0.875,135,0.972,136,0.875,137,0.972,138,0.617,139,0.972,140,0.875,141,0.425,142,0.972,143,0.894,144,0.972,145,0.894,146,1.538,147,0.894,148,0.972,149,0.894,150,1.538,151,0.894,152,0.972,153,0.913,154,0.972,155,0.857,156,0.972,157,0.894,158,0.972,159,0.875,160,0.822,161,0.972,162,0.894,163,1.288,164,1.343,165,0.894,166,0.972,167,0.857,168,0.497,169,0.972,170,0.875,171,0.894,172,0.972,173,0.894,174,0.972,175,0.875,176,0.875,177,0.857,178,0.972,179,0.875,180,0.972,181,0.822,182,0.691,183,0.857,184,0.972,185,0.857,186,1.159,187,0.875,188,0.894,189,0.571,190,0.839,191,0.676,192,0.894,193,1.635,194,0.972,195,0.894,196,0.822,197,0.972,198,0.894,199,0.972,200,0.839,201,0.894,202,1.525,203,1.649,204,0.972,205,0.894,206,0.977,207,0.738,208,0.839,209,0.875,210,0.972,211,0.857,212,0.972,213,0.857,214,0.972,215,0.839,216,0.972,217,0.839,218,0.972,219,0.839,220,0.913,221,0.972,222,0.005,223,0.005,226,0.368,246,1.315,248,0.523,259,2.583,267,1.606,274,2.811,293,0.839,318,2.987,355,3.119,376,6.892,470,3.896,525,6.647,537,1.126,540,1.821,547,2.314,549,1.398,569,2.655,572,2.583,602,1.035,615,3.426,626,3.998,657,4.923,691,1.28,705,1.821,726,1.4,745,2.689,766,2.218,816,2.394,881,4.307,902,4.307,907,1.385,1053,3.563,1069,1.774,1072,2.515,1174,1.606,1176,2.731,1177,2.163,1178,3.084,1187,2.58,1195,1.43,1201,3.653,1549,2.329,1552,3.119,1556,5.289,1636,1.821,1655,2.097,1670,2.987,1671,3.317,1677,2.813,1738,3.303,2119,2.954,2157,3.426,2212,4.134,2218,4.923,2226,5.639,2231,3.896,2232,6.14,2239,5.381,2240,4.923,2241,5.381,2242,4.923,2243,5.381,2244,5.247,2250,3.317,2266,7.213,2668,2.163,2753,3.896,2785,4.58,2789,4.934,2824,4.08,2892,3.714,3031,3.084,3101,5.381,3365,4.923,3921,5.381,4926,4.58,5341,5.381,5516,3.896,5534,7.533,5535,3.896,5536,7.506,5537,6.076,5538,6.96,5539,6.076,5540,7.506,5541,7.506,5542,6.96,5543,6.96,5544,4.4,5545,4.4,5546,4.4,5547,4.4,5548,4.4,5549,4.4,5550,4.4,5551,4.4,5552,4.4]],["title/interfaces/User.html",[121,0.068,206,0.632]],["body/interfaces/User.html",[3,0.103,4,0.092,9,0.092,11,1.62,25,0.115,26,0.627,27,1.231,40,0.008,41,0.592,42,0.156,45,0.669,46,0.891,49,0.651,53,0.219,54,0.419,60,0.126,61,0.015,63,1.102,121,0.092,160,1.4,186,1.157,189,0.57,206,1.326,222,0.006,223,0.006,233,5.315,248,0.721,260,0.891,281,1.844,293,1.157,317,1.727,382,4.3,459,2.579,499,2.215,521,5.465,529,1.655,532,1.458,535,3.658,537,1.553,540,2.511,547,2.826,548,1.411,549,1.927,575,1.84,608,0.798,615,3.421,618,5.653,626,3.079,639,5.315,641,2.269,647,4.915,648,4.573,649,7.208,650,4.915,651,5.372,652,4.584,653,7.208,654,3.184,655,5.372,656,5.372,657,4.915,660,5.372,662,6.641,664,5.372,666,5.372,667,5.77,669,5.372,670,3.297,671,4.975,672,4.59,673,5.372,674,4.915,675,3.421,676,5.653,677,4.229,678,3.708,680,4.073,681,5.372,682,5.372,684,4.397,689,4.073,690,4.573,691,1.765,692,4.073,693,5.372,694,5.372,695,4.915,696,5.372,697,5.372,698,5.372,699,5.372,700,5.372,701,5.372,702,5.372,703,4.573,704,5.372,705,2.511,706,5.372,707,5.372,708,5.372,709,5.372,710,5.372,711,5.372,712,5.372,713,5.372,714,5.372,715,5.372,716,5.372,717,4.915,718,5.372]],["title/components/UserItemComponent.html",[0,0.085,205,0.915]],["body/components/UserItemComponent.html",[0,0.16,1,1.025,2,0.893,3,0.086,4,0.076,5,0.81,6,1.138,7,1.114,8,1.068,9,0.076,11,1.003,16,0.982,17,1.387,18,1.352,19,1.003,20,0.846,21,0.979,23,0.979,25,0.095,37,0.643,40,0.008,41,0.587,42,0.155,50,1.218,51,1.001,53,0.164,54,0.348,56,1.025,57,1.412,60,0.105,61,0.013,95,1.114,96,1.298,97,1.271,98,0.846,99,1.718,100,1.114,101,1.981,102,1.003,103,0.883,104,1.043,105,1.354,106,1.025,107,1.114,108,1.025,109,1.003,110,1.114,111,1.025,112,1.114,113,0.962,114,0.982,115,0.981,116,1.003,117,0.962,118,1.07,119,1.649,120,0.982,121,0.076,122,1.003,123,0.995,124,1.025,125,1.025,126,0.922,127,1.114,128,0.982,129,1.114,130,1.025,131,1.114,132,1.025,133,1.114,134,1.003,135,1.114,136,1.003,137,1.114,138,0.708,139,1.114,140,1.003,141,0.487,142,1.114,143,1.025,144,1.114,145,1.025,146,1.649,147,1.025,148,1.114,149,1.025,150,1.649,151,1.025,152,1.114,153,1.046,154,1.114,155,0.982,156,1.114,157,1.025,158,1.114,159,1.003,160,0.942,161,1.114,162,1.025,163,1.412,164,1.472,165,1.025,166,1.114,167,0.982,168,0.57,169,1.114,170,1.003,171,1.025,172,1.114,173,1.025,174,1.114,175,1.003,176,1.003,177,0.982,178,1.114,179,1.003,180,1.114,181,0.942,182,0.792,183,0.982,184,1.114,185,0.982,186,1.271,187,1.003,188,1.025,189,0.626,190,0.962,191,0.775,192,1.025,193,1.046,194,1.114,195,1.025,196,0.942,197,1.114,198,1.025,199,1.114,200,0.962,201,1.025,202,1.025,203,0.942,204,1.114,205,1.613,206,1.309,207,1.252,208,0.962,209,1.003,210,1.114,211,0.982,212,1.114,213,0.982,214,1.114,215,0.962,216,1.114,217,0.962,218,1.114,219,0.962,220,1.046,221,1.114,222,0.006,223,0.006,226,0.422,234,0.935,246,1.718,264,5.397,541,1.435,602,1.567,677,4.207,726,1.829,766,2.432,791,1.602,975,3.082,1102,2.874,1636,2.758,1637,3.382,1731,5.624,1764,4.259,2551,6.43,2670,3.574,2764,3.801,3031,3.382,3309,3.082,3310,6.044,3311,4.259,5533,4.465,5553,7.029,5554,7.461,5555,5.042,5556,6.662,5557,5.042,5558,6.662,5559,5.042]],["title/injectables/UserNotifyService.html",[532,1.082,988,1.727]],["body/injectables/UserNotifyService.html",[3,0.129,4,0.094,9,0.094,25,0.116,30,1.015,33,0.886,37,0.757,39,0.881,40,0.008,41,0.529,42,0.17,43,0.707,45,0.835,46,1.113,49,0.639,53,0.186,54,0.426,60,0.128,61,0.016,63,1.113,203,1.415,206,1.254,222,0.007,223,0.007,226,0.686,227,3.311,281,1.875,293,1.177,315,1.343,424,4.374,425,6.182,481,6.929,485,4.845,532,1.483,545,3.406,575,2.012,618,5.712,646,2.554,692,4.143,866,3.541,948,3.48,987,3.844,988,2.905,1012,3.362,1015,2.462,1044,3.06,1194,3.137,1237,4.119,1465,3.618,2453,5.464,2470,6.139,2472,6.139,2473,6.139,2474,6.139,2475,6.139,2488,5.844,3100,6.71,5068,4.651,5560,7.574,5561,5.464,5562,7.578,5563,7.578,5564,6.171,5565,6.171,5566,7.578,5567,6.171,5568,7.578,5569,7.578,5570,7.578,5571,7.578,5572,6.171,5573,6.171,5574,6.171,5575,6.171,5576,6.171,5577,6.171,5578,6.171,5579,6.171,5580,6.171]],["title/injectables/UsersService.html",[532,1.082,5031,3.395]],["body/injectables/UsersService.html",[3,0.11,4,0.098,9,0.098,25,0.122,30,1.045,33,1.12,37,0.722,39,0.838,40,0.008,41,0.503,42,0.18,43,0.672,45,0.86,49,0.646,53,0.206,54,0.448,60,0.134,61,0.016,63,1.146,182,1.398,222,0.007,223,0.007,281,1.968,532,1.875,538,3.411,541,1.843,555,2.829,608,0.787,639,6.163,646,2.68,677,3.651,790,2.364,791,2.057,888,3.086,1367,4.022,1393,4.881,1394,5.245,1509,2.995,1551,4.77,1717,4.139,1774,2.308,2029,4.881,2096,4.139,3869,5.531,5031,5.882,5581,5.734,5582,6.475,5583,8.695,5584,8.376,5585,8.695,5586,6.475,5587,7.803,5588,6.475,5589,7.803,5590,6.475,5591,6.475,5592,6.475,5593,6.475,5594,6.475,5595,6.475,5596,6.475,5597,6.475,5598,6.475,5599,6.475,5600,6.475,5601,5.734,5602,6.475,5603,6.475]],["title/classes/Vector.html",[61,0.011,3729,3.395]],["body/classes/Vector.html",[0,0.138,2,0.56,3,0.071,4,0.136,9,0.063,25,0.079,26,0.49,27,1.542,30,0.785,33,0.972,37,0.784,39,0.902,40,0.008,41,0.542,42,0.18,43,0.724,45,0.993,46,0.861,49,0.299,50,1.342,51,0.881,53,0.103,61,0.017,78,2.271,84,5.533,103,1.354,115,0.697,141,0.566,168,0.998,189,0.55,222,0.005,223,0.005,226,0.714,248,1.064,260,0.978,296,2.054,315,0.921,548,0.642,553,1.826,563,2.356,568,3.15,573,2.271,575,2.019,595,1.599,602,1.379,608,0.636,637,1.216,654,2.193,705,2.427,720,1.525,728,2.492,737,6.845,742,3.583,777,2.45,817,1.777,824,3.385,826,1.878,836,2.385,872,4.419,888,1.992,907,1.699,916,3.385,924,2.271,928,3.15,942,3.328,1034,2.554,1053,2.45,1065,2.609,1066,3.581,1069,2.364,1070,3.571,1071,2.962,1092,2.962,1093,1.563,1174,2.14,1240,2.903,1241,1.933,1245,2.054,1262,1.992,1285,4.565,1535,4.419,1612,2.271,1622,2.45,1754,3.583,1789,4.359,1837,2.962,1841,4.155,1937,4.304,1956,2.962,2012,2.962,2018,4.419,2038,4.155,2041,2.356,2117,5.031,2486,4.749,2889,3.385,2890,3.385,3007,5.947,3137,3.385,3226,6.106,3238,5.104,3365,3.385,3468,3.385,3511,4.419,3545,5.485,3697,2.962,3698,7.334,3699,3.385,3710,3.7,3711,5.191,3714,4.749,3723,3.7,3727,3.935,3729,7.271,3731,3.7,3733,3.7,3734,5.191,3735,3.7,3736,3.7,3737,3.7,3739,5.191,3740,5.191,3741,5.191,3742,5.191,3743,3.7,3744,3.7,3745,7.097,3746,5.947,3747,6.5,3748,5.191,3749,5.191,3750,3.7,3751,3.7,3752,3.7,3753,3.7,3754,3.7,3755,3.7,3756,3.7,3757,3.7,3758,3.7,3759,3.7,3760,3.7,3761,3.385,3762,3.15,3763,3.7,3764,3.7,3765,3.7,3766,3.7,3767,5.996,3768,5.191,3769,3.7,3770,3.7,3771,3.7,3772,5.191,3773,3.7,3774,6.492,3775,3.7,3776,3.7,3777,3.7,3778,3.7,3779,3.7,3780,5.947,3781,3.7,3782,3.7,3783,3.7,3784,3.7,3785,3.7,3786,3.385,3787,3.7,3788,3.7,3789,3.7,3790,3.7,3791,3.7,3792,3.7,3793,3.7,3794,3.7,3795,3.7,3796,5.191,4706,3.7,5346,3.7,5604,5.862,5605,5.862,5606,6.771,5607,6.771,5608,7.34,5609,6.771,5610,6.771,5611,6.771,5612,5.862,5613,4.178,5614,4.178,5615,4.178,5616,4.178,5617,4.178,5618,4.178,5619,4.178,5620,5.862,5621,4.178,5622,4.178,5623,5.862,5624,4.178,5625,4.178,5626,4.178,5627,4.178,5628,4.178,5629,4.178,5630,4.178,5631,4.178,5632,4.178,5633,4.178,5634,4.178,5635,4.178,5636,4.178,5637,4.178,5638,5.862,5639,5.862,5640,5.862,5641,4.178,5642,4.178,5643,4.178,5644,4.178,5645,4.178,5646,4.178,5647,4.178,5648,4.178,5649,4.178]],["title/coverage.html",[5650,5.468]],["body/coverage.html",[0,0.178,1,0.625,5,0.752,9,0.047,10,2.722,11,0.932,12,2.317,13,3.549,40,0.008,42,0.064,56,0.625,57,0.992,58,2.064,61,0.022,80,2.179,82,2.179,83,1.879,84,3.529,93,3.336,98,1.206,102,0.612,104,0.854,105,1.288,106,0.625,108,0.625,111,0.625,113,0.586,114,0.599,116,0.612,117,0.893,118,1.018,120,0.599,121,0.139,122,0.612,123,0.803,124,0.625,125,0.625,128,0.599,130,0.625,132,0.625,134,0.612,136,0.612,138,0.431,140,0.612,141,0.865,143,0.625,145,0.625,147,0.625,149,0.625,151,0.625,153,0.638,155,0.599,157,0.625,160,0.574,162,0.625,165,0.625,167,0.599,170,0.612,171,0.625,173,0.625,175,0.612,176,0.612,177,0.599,179,0.612,181,0.574,183,0.599,185,0.599,187,0.612,188,0.625,190,0.586,191,0.974,192,0.625,195,0.625,198,0.625,200,0.586,202,0.625,205,0.625,206,0.431,209,0.612,211,0.599,213,0.599,215,0.586,217,0.586,219,0.586,222,0.004,223,0.004,224,2.722,225,2.179,248,0.365,280,2.722,307,2.317,342,4.594,371,0.694,372,2.317,374,2.317,376,2.49,378,2.49,383,3.325,411,4.142,412,3.88,427,2.745,438,2.179,443,4.29,444,4.053,447,1.733,452,2.49,455,2.49,459,1.991,460,2.317,463,2.317,468,2.49,472,2.317,474,4.257,476,2.49,484,2.49,501,2.317,503,2.179,505,2.317,506,3.319,528,2.317,530,3.793,532,2.125,542,1.733,556,1.613,595,2.476,611,1.24,612,2.317,614,2.722,626,1.56,647,3.793,689,3.143,719,1.56,721,2.722,753,0.694,759,2.722,760,2.722,769,1.15,778,1.046,785,1.511,805,1.965,806,4.171,807,3.793,830,1.733,831,1.802,834,1.511,907,1.883,974,2.722,988,1.178,1012,1.208,1050,4.494,1051,4.494,1059,2.179,1069,1.24,1093,3.309,1099,2.064,1104,2.179,1185,2.317,1188,4.594,1192,4.594,1205,1.802,1206,4.056,1207,4.868,1209,1.802,1210,1.465,1211,1.465,1213,3.672,1218,1.671,1219,1.613,1220,1.802,1221,1.879,1222,1.879,1223,1.879,1224,1.879,1225,1.879,1226,1.879,1227,1.879,1228,1.879,1259,1.733,1275,1.733,1304,1.965,1305,2.722,1306,4.596,1366,2.317,1367,4.241,1368,2.722,1387,2.064,1393,2.317,1399,2.317,1402,1.802,1450,2.317,1470,1.208,1483,1.56,1545,2.722,1550,2.179,1553,1.965,1572,2.993,1650,2.722,1651,2.49,1652,2.722,1664,1.56,1665,4.836,1679,5.018,1681,2.064,1744,1.879,1745,2.745,1747,1.879,1748,1.879,1751,2.179,1752,2.179,1760,2.179,1763,2.179,1769,2.179,1834,2.317,1905,2.064,1927,1.965,2067,2.722,2077,2.317,2086,2.064,2087,1.802,2114,4.274,2144,1.965,2145,4.019,2146,3.466,2147,4.019,2154,2.317,2155,2.064,2196,2.064,2197,2.179,2198,2.49,2205,2.722,2252,2.317,2274,4.72,2275,4.925,2303,1.671,2308,1.965,2309,1.879,2437,5.824,2454,2.49,2461,2.49,2462,2.49,2471,2.49,2476,2.49,2481,1.965,2531,5.095,2543,4.171,2545,2.49,2549,2.49,2551,2.49,2552,2.49,2558,2.49,2566,2.49,2568,2.49,2572,2.722,2608,4.581,2609,2.722,2617,2.722,2637,2.064,2673,2.722,2768,5.528,2774,2.49,2825,2.064,2827,2.49,2900,2.317,2901,2.722,2969,2.317,2970,2.722,2971,2.49,2972,2.722,3000,2.722,3102,2.317,3103,2.722,3104,2.49,3105,2.317,3106,2.722,3127,2.317,3128,2.722,3129,2.49,3130,2.722,3166,2.722,3203,2.317,3204,4.594,3205,4.594,3234,2.179,3291,2.722,3306,2.862,3309,4.569,3327,2.722,3354,4.594,3375,4.274,3377,2.317,3528,2.722,3546,4.494,3556,2.49,3557,2.722,3661,2.722,3678,3.793,3697,2.179,3698,4.594,3699,4.594,3727,3.143,3729,2.317,3774,2.49,3828,5.147,3878,2.722,3924,3.793,3925,3.529,3948,2.722,3955,2.064,3956,4.362,3960,1.965,4060,1.965,4127,3.319,4128,2.317,4253,2.722,4264,2.49,4265,4.146,4278,2.722,4341,2.064,4506,2.722,4654,2.722,4728,2.722,4761,7.334,4773,2.722,4788,4.596,4789,2.722,4865,3.793,4895,3.793,4955,2.317,4959,2.722,4976,2.722,5012,2.317,5013,2.722,5028,2.722,5030,2.722,5031,2.317,5041,4.019,5042,4.019,5121,4.146,5131,2.722,5211,2.722,5326,2.722,5342,2.722,5343,2.722,5386,2.49,5387,2.49,5429,2.722,5447,2.722,5534,2.722,5535,2.722,5553,2.722,5560,2.722,5561,2.722,5581,2.722,5650,2.722,5651,3.074,5652,7.704,5653,9.079,5654,6.34,5655,5.671,5656,7.474,5657,3.074,5658,3.074,5659,3.074,5660,6.34,5661,7.474,5662,5.671,5663,3.074,5664,7.189,5665,7.474,5666,6.823,5667,9.079,5668,4.682,5669,3.074,5670,3.074,5671,4.682,5672,3.074,5673,5.671,5674,5.528,5675,2.49,5676,2.49,5677,3.074,5678,3.074,5679,6.823,5680,2.722,5681,3.074,5682,4.682,5683,3.074,5684,3.074,5685,3.074,5686,3.074,5687,3.074,5688,3.074,5689,4.682,5690,5.671,5691,4.682,5692,2.722,5693,3.074,5694,3.074,5695,3.074,5696,4.682,5697,3.074,5698,3.074,5699,3.074,5700,3.074,5701,3.074,5702,3.074,5703,3.074,5704,3.074,5705,3.074,5706,5.671,5707,3.074,5708,4.682,5709,4.682,5710,3.074,5711,3.074,5712,3.074,5713,3.074,5714,4.682,5715,3.074,5716,3.074,5717,3.074,5718,3.074,5719,5.671,5720,3.074,5721,3.074,5722,3.074,5723,3.074,5724,3.074,5725,4.682,5726,3.074,5727,3.074,5728,3.074,5729,2.722,5730,3.074,5731,3.074,5732,7.189,5733,3.074,5734,3.074,5735,3.074,5736,3.074,5737,3.074,5738,3.074,5739,3.074,5740,3.074,5741,3.074,5742,4.682,5743,3.074,5744,3.074,5745,3.074,5746,4.146,5747,4.146,5748,3.074,5749,3.074,5750,3.074,5751,3.074,5752,4.146,5753,4.146,5754,4.146,5755,2.722,5756,3.074]],["title/dependencies.html",[332,3.845,5757,3.748]],["body/dependencies.html",[40,0.008,54,0.462,163,1.417,191,1.222,222,0.007,223,0.007,255,2.5,277,2.563,291,5.995,292,5.637,332,4.738,389,3.816,390,5.919,396,5.919,402,4.086,405,5.415,424,6.229,425,5.039,430,6.443,431,3.633,433,4.273,434,5.415,436,5.415,443,3.633,450,6.443,499,2.44,537,1.711,1215,3.186,1424,3.393,2178,4.488,2295,4.273,2296,4.488,2441,4.488,2449,5.919,3105,5.039,3967,4.738,4000,4.086,5758,6.685,5759,8.212,5760,6.685,5761,7.953,5762,6.685,5763,6.685,5764,6.685,5765,6.685,5766,6.685,5767,6.685,5768,6.685,5769,7.953,5770,6.685,5771,6.685,5772,6.685,5773,6.685,5774,6.685,5775,6.685,5776,6.685,5777,6.685,5778,6.685,5779,6.685,5780,6.685,5781,6.685,5782,6.685,5783,6.685,5784,6.685,5785,6.685,5786,6.685,5787,6.685,5788,6.685,5789,6.685,5790,6.685,5791,6.685]],["title/miscellaneous/enumerations.html",[5792,2.516,5793,4.804]],["body/miscellaneous/enumerations.html",[0,0.171,2,0.888,25,0.125,40,0.008,51,1.391,104,0.788,118,1.065,121,0.136,123,0.85,141,0.817,168,0.956,182,1.041,206,0.93,222,0.007,223,0.007,231,2.571,234,0.93,235,2.606,281,2.015,371,1.786,447,3.738,459,2.819,512,3.067,515,2.06,549,2.106,557,2.897,762,3.557,827,4.699,835,4.017,836,2.847,841,2.744,864,4.699,866,2.744,1009,4.699,1044,2.154,1093,2.479,1095,5.06,1197,2.819,1206,2.979,1207,4.771,1230,4.052,1231,4.052,1232,4.052,1233,3.259,1246,3.603,1298,4.838,1299,4.64,1300,4.052,1301,3.738,1302,4.052,1303,3.479,1367,3.067,1424,3.365,1474,2.606,1585,4.238,1807,3.365,2019,3.479,2136,4.052,2138,3.365,2289,3.365,2638,4.238,2847,4.451,2848,4.451,3828,4.238,3832,5.966,3833,4.997,3834,4.997,3865,4.997,3866,4.997,3867,4.997,3868,4.997,3869,4.699,4127,4.699,4128,5.966,5041,4.699,5042,4.699,5049,5.966,5050,4.997,5792,4.451,5793,5.87,5794,6.411,5795,6.411,5796,5.87,5797,6.629]],["title/index.html",[25,0.071,2730,3.319,5798,3.748]],["body/index.html",[2,0.822,4,0.114,18,1.198,19,1.221,20,1.029,37,0.529,40,0.007,42,0.127,61,0.016,66,3.113,76,5.432,103,1.074,104,1.06,115,0.729,118,0.985,128,1.195,141,0.592,160,1.146,183,1.195,189,0.576,222,0.007,223,0.007,229,6.686,231,2.848,234,1.06,253,2.474,289,4.969,315,0.963,329,4.118,338,4.118,339,4.118,343,4.969,371,1.384,402,3.749,443,3.334,479,6.686,503,4.348,517,5.352,553,3.299,556,3.219,566,5.069,573,4.104,578,4.624,594,4.796,604,4.969,623,4.827,626,3.113,641,2.824,720,2.756,725,2.824,820,2.923,840,3.596,870,6.626,877,3.21,902,4.348,1031,4.118,1068,2.923,1111,3.459,1235,3.596,1253,3.299,1301,4.257,1310,4.446,1313,7.243,1317,4.118,1424,4.589,1425,3.921,1493,4.427,1666,5.432,1810,4.624,1905,5.884,2006,3.921,2019,4.293,2077,6.166,2103,4.969,2138,3.113,2295,4.827,2441,4.118,2503,5.432,2511,5.432,2575,6.626,2576,5.603,2577,6.166,2824,4.118,2851,5.229,2893,5.432,3064,4.969,3954,5.432,4504,5.432,4841,4.118,4869,5.691,4926,4.624,5076,6.434,5126,5.432,5132,5.432,5455,5.432,5486,4.348,5759,5.432,5799,6.134,5800,6.134,5801,6.134,5802,6.134,5803,8.18,5804,6.134,5805,7.55,5806,6.134,5807,9.041,5808,6.134,5809,6.134,5810,6.134,5811,6.134,5812,6.134,5813,6.134,5814,6.134,5815,6.134,5816,6.134,5817,6.134,5818,6.134,5819,6.134,5820,6.134,5821,6.134,5822,6.134,5823,6.134,5824,6.134,5825,6.134,5826,6.134,5827,6.134,5828,6.134,5829,6.134,5830,6.134,5831,6.134,5832,6.134,5833,6.134,5834,6.134,5835,6.134,5836,7.55,5837,6.134,5838,6.134,5839,6.134,5840,6.134,5841,6.134,5842,6.134,5843,6.134]],["title/modules.html",[331,3.774]],["body/modules.html",[40,0.007,141,0.812,222,0.007,223,0.007,292,5.962,323,6.815,330,5.547,331,4.498,337,5.216,338,4.941,339,4.941,574,4.009,5844,8.412,5845,9.06]],["title/overview.html",[4841,4.146]],["body/overview.html",[1,1.501,2,0.662,40,0.008,56,1.501,102,1.469,106,1.748,108,1.501,111,1.501,113,1.409,114,1.439,116,1.469,120,1.439,122,1.469,124,1.501,125,1.748,128,1.439,130,1.748,132,1.501,134,1.469,136,1.469,138,1.207,140,1.712,143,1.748,145,1.748,147,1.748,149,1.748,151,1.748,153,1.785,155,1.439,157,1.501,160,1.379,162,1.501,165,1.501,167,1.439,170,1.469,171,1.501,173,1.748,175,1.469,176,1.469,177,1.439,179,1.469,181,1.607,183,1.439,185,1.439,187,1.469,188,1.748,190,1.409,192,1.501,195,1.501,198,1.501,200,1.409,202,1.501,205,1.748,208,0.942,209,1.712,211,1.676,213,1.676,215,1.409,217,1.409,219,1.409,222,0.006,223,0.006,318,2.428,330,7.303,331,3.019,332,4.658,333,4.373,334,4.373,335,4.373,336,4.373,337,5.235,338,4.958,339,6.496,340,4.953,341,3.5,487,3.316,497,3.723,529,1.347,612,3.723,646,2.044,720,1.803,816,1.501,1185,3.723,2519,4.373,2520,4.373,2521,4.373,3354,4.001,4341,3.316,4841,3.316,5692,4.373,5846,4.938,5847,4.938]],["title/routes.html",[497,4.655]],["body/routes.html",[40,0.007,222,0.007,223,0.007,497,5.651]],["title/miscellaneous/typealiases.html",[5792,2.516,5848,5.425]],["body/miscellaneous/typealiases.html",[13,3.042,25,0.116,40,0.008,42,0.189,49,0.539,115,1.014,117,1.702,191,1.159,196,1.409,206,0.859,207,1.027,222,0.007,223,0.007,371,1.382,383,3.59,447,3.453,463,4.616,574,2.919,595,2.326,806,3.595,807,4.961,808,3.453,839,6.679,993,3.743,1032,3.122,1096,5.346,1210,2.919,1211,2.919,1213,2.919,1214,2.235,1306,4.822,1310,3.328,1367,3.946,1387,4.111,1419,3.59,1470,2.407,1474,2.407,1551,5.524,1584,6.11,1679,4.111,1746,4.099,1750,5.346,1774,2.183,1800,3.915,1807,2.603,1809,3.01,1859,3.328,1871,4.616,2002,4.616,2003,4.616,2004,3.915,2005,4.616,2006,3.915,2007,4.34,2008,5.346,2088,4.422,2145,4.34,2146,3.743,2147,5.346,2149,5.487,2157,3.453,2161,4.34,2168,5.685,2178,5.064,2195,4.34,2196,4.111,2198,4.961,2199,5.685,2202,7.238,2274,3.59,2275,5.778,2282,5.064,2297,5.487,2299,5.064,2300,5.064,2360,5.064,2361,3.743,2385,5.064,2543,4.61,2692,4.616,2713,4.111,2899,4.253,3559,3.743,3678,4.961,3828,3.915,3925,5.685,3937,3.59,3956,4.822,4059,5.727,4127,4.34,4128,5.685,5386,4.961,5387,6.11,5397,6.679,5674,4.961,5675,6.11,5676,6.11,5680,5.422,5729,7.238,5792,4.111,5794,6.11,5795,6.11,5796,5.422,5849,6.123,5850,7.542,5851,7.542,5852,8.92,5853,5.422,5854,7.542,5855,6.123,5856,6.123,5857,7.542,5858,7.757,5859,7.542,5860,7.542,5861,7.542,5862,6.123]],["title/interfaces/userMock.html",[121,0.068,4955,3.395]],["body/interfaces/userMock.html",[0,0.141,3,0.086,4,0.077,9,0.077,14,1.009,15,1.824,17,0.728,18,0.712,20,0.851,21,0.745,23,0.745,25,0.096,26,0.559,27,1.228,29,2.859,36,2.922,40,0.008,41,0.431,42,0.165,43,0.732,46,0.745,49,0.658,53,0.224,54,0.35,55,1.541,59,2.279,60,0.139,61,0.013,63,0.982,64,1.383,68,4.489,72,2.045,80,3.594,88,2.346,99,1.097,102,1.009,104,1.088,105,1.616,121,0.101,177,0.988,186,0.967,187,1.009,206,1.233,222,0.006,223,0.006,225,3.594,228,2.756,231,1.647,234,1.192,248,0.889,249,2.843,255,1.896,260,0.945,265,4.107,293,0.967,301,2.492,371,1.954,417,2.973,438,3.594,439,4.107,487,3.404,499,1.851,506,3.594,517,5.861,529,1.383,537,1.297,538,1.944,541,1.443,542,3.771,544,2.279,547,2.223,548,1.407,572,2.156,594,3.921,599,2.756,611,2.045,622,2.605,641,1.896,677,4.486,744,4.107,762,2.279,816,1.541,817,2.156,826,3.005,829,2.216,866,2.099,868,2.431,888,2.417,900,3.241,907,1.009,999,3.404,1010,3.241,1111,2.859,1629,3.822,1644,3.822,1656,5.04,1672,5.04,1717,4.275,2006,3.241,2143,3.404,2264,3.404,2313,3.241,2481,3.241,2526,3.822,2529,5.417,2530,3.822,2537,3.822,2576,3.241,2676,3.771,2715,3.927,2849,6.491,2851,5.286,3056,3.404,3318,2.973,3376,5.04,3377,5.64,3381,4.107,3385,4.107,3388,4.107,3394,4.107,3433,6.061,3436,5.417,3437,4.107,3441,5.417,3442,4.107,3445,5.417,3474,5.417,3477,4.107,3478,4.107,3479,4.107,3480,4.107,3483,4.107,3484,4.107,3485,4.107,3727,3.404,4341,3.404,4378,3.822,4477,4.107,4788,3.241,4800,5.04,4818,3.822,4865,4.107,4866,3.594,4867,4.49,4868,5.417,4869,3.822,4870,5.921,4871,5.921,4872,4.49,4873,4.49,4874,4.49,4875,4.49,4876,4.49,4879,4.49,4881,6.625,4882,4.49,4887,4.49,4888,5.921,4890,4.49,4891,7.454,4892,4.49,4893,4.49,4894,4.49,4895,4.107,4896,4.49,4897,4.49,4901,4.49,4902,4.49,4903,4.49,4904,4.49,4905,4.49,4906,4.49,4907,4.49,4908,4.49,4909,4.49,4910,4.49,4911,4.49,4912,4.49,4915,4.49,4917,5.417,4923,4.49,4924,4.49,4925,4.49,4926,3.822,4927,4.49,4928,4.49,4929,5.921,4930,5.921,4931,5.921,4932,4.49,4933,4.49,4934,4.49,4935,4.49,4936,4.49,4937,4.49,4938,4.49,4939,4.49,4940,4.49,4941,4.49,4942,4.49,4943,4.49,4944,5.921,4945,4.49,4946,4.49,4947,4.49,4948,4.49,4949,4.49,4950,4.49,4951,4.49,4952,4.49,4953,4.107,4954,4.49,4955,5.04]],["title/miscellaneous/variables.html",[3092,3.642,5792,2.516]],["body/miscellaneous/variables.html",[0,0.064,25,0.065,27,0.561,29,4.029,40,0.008,41,0.431,42,0.195,45,0.377,49,0.591,50,1.67,51,1.372,104,0.406,109,0.681,118,1.364,123,0.65,136,1.203,141,0.49,159,1.331,168,0.919,182,1.318,189,0.321,203,0.639,206,0.712,222,0.004,223,0.004,231,1.111,234,0.48,246,1.309,248,0.795,260,0.795,281,1.039,284,2.27,301,2.494,307,3.824,310,2.347,311,1.859,312,1.681,315,1.122,317,1.444,331,2.091,342,2.771,371,2.034,397,3.029,401,4.492,443,4.068,444,2.187,476,4.11,477,3.029,478,3.029,484,4.11,485,3.243,486,3.029,487,2.296,488,3.029,493,2.425,515,2.407,522,2.425,538,1.311,548,1.35,549,1.087,552,1.795,574,1.63,608,0.476,637,1.476,641,1.279,677,3.41,689,4.491,761,1.795,762,1.537,776,2.425,778,2.057,780,2.347,806,1.63,811,2.889,817,1.454,885,4.665,887,3.029,907,1.009,948,1.929,965,4.277,992,1.929,1044,1.111,1050,2.425,1051,3.596,1065,1.904,1066,1.416,1070,1.454,1093,1.279,1098,2.861,1100,2.006,1104,3.596,1105,2.578,1123,2.187,1194,1.416,1206,1.537,1207,2.861,1229,1.582,1236,1.454,1237,2.757,1240,1.163,1249,1.345,1259,2.861,1262,3.188,1303,1.795,1367,2.798,1409,2.425,1424,1.736,1470,2.63,1474,2.377,1475,3.211,1490,3.824,1511,3.824,1523,3.596,1549,1.311,1551,2.091,1581,3.287,1590,1.736,1631,1.929,1632,2.757,1679,2.296,1681,3.406,1706,6.363,1711,3.824,1716,2.861,1743,2.578,1745,2.006,1748,3.101,1750,2.425,1751,3.596,1752,3.596,1753,6.703,1754,3.101,1755,3.824,1756,2.757,1757,2.578,1758,2.425,1759,4.558,1760,3.596,1762,2.578,1763,3.596,1764,2.187,1765,2.578,1766,2.578,1767,2.578,1768,2.578,1769,3.596,1770,3.596,1774,2.547,1778,2.425,1807,1.454,1809,1.681,1899,2.975,1927,2.187,1934,2.578,1935,2.578,1957,6.703,1963,3.596,2019,1.795,2068,2.771,2127,2.771,2252,3.824,2301,2.187,2337,2.187,2357,1.929,2358,1.929,2359,2.006,2386,2.187,2437,2.771,2441,2.296,2454,4.899,2456,2.771,2457,3.029,2458,3.029,2459,3.029,2460,3.029,2461,4.11,2462,2.771,2463,2.296,2464,3.029,2465,2.771,2466,3.029,2467,3.029,2468,3.029,2469,3.029,2470,4.11,2471,4.11,2472,2.771,2473,2.771,2474,2.771,2475,2.771,2476,4.11,2477,3.029,2478,3.029,2479,3.029,2480,3.029,2481,2.187,2516,4.492,2531,2.425,2637,3.406,2638,2.187,2643,2.425,2768,4.899,2774,4.899,2794,3.029,2825,4.06,2826,3.029,2827,5.419,2828,5.998,2829,5.355,2830,3.243,2831,2.187,2832,3.029,2833,3.029,2834,2.771,2835,4.11,2836,2.771,2837,3.029,2838,5.924,2839,3.029,2840,6.327,2841,4.568,2842,4.568,2843,3.029,2844,4.568,2845,6.327,2846,3.029,2847,2.296,2848,3.406,2849,2.425,2850,4.492,2851,2.187,2852,2.296,2853,4.492,3092,2.296,3306,4.089,3453,3.029,3460,4.11,3825,3.029,3828,2.187,3862,4.558,3863,2.578,3864,3.824,4186,3.029,5136,4.492,5601,7.43,5674,2.771,5675,4.899,5676,4.899,5746,3.029,5747,4.492,5752,3.029,5753,3.029,5754,3.029,5755,4.492,5792,3.406,5794,4.899,5795,4.11,5853,5.355,5858,5.924,5863,6.047,5864,6.047,5865,3.421,5866,5.073,5867,5.073,5868,5.073,5869,3.421,5870,3.421,5871,3.421,5872,5.073,5873,5.073,5874,5.073,5875,5.073,5876,5.073,5877,5.073,5878,5.073,5879,5.073,5880,3.421,5881,3.421,5882,3.421,5883,3.421,5884,3.421,5885,3.421,5886,3.421,5887,7.484,5888,6.047,5889,6.047,5890,6.047,5891,3.421,5892,5.073,5893,3.421,5894,3.421,5895,3.421,5896,3.421,5897,3.421,5898,3.421,5899,5.073,5900,5.073,5901,5.073,5902,3.421,5903,3.421,5904,8.27,5905,5.073,5906,5.073,5907,5.073,5908,3.421,5909,3.421,5910,3.421,5911,3.421,5912,3.421,5913,3.421,5914,3.421,5915,3.421,5916,3.421,5917,3.421,5918,3.421,5919,6.047,5920,6.047,5921,6.047,5922,3.421,5923,3.421,5924,3.421,5925,3.421,5926,3.421,5927,3.421,5928,3.421,5929,3.421,5930,3.421,5931,3.421,5932,3.421,5933,3.421,5934,3.421,5935,3.421,5936,3.421,5937,3.421,5938,3.421,5939,3.421,5940,3.421,5941,3.421,5942,3.421,5943,3.421,5944,3.421,5945,3.421,5946,3.421,5947,7.145,5948,3.421,5949,3.421,5950,3.421,5951,3.421,5952,3.421,5953,3.421,5954,3.421,5955,3.421,5956,3.421,5957,3.421,5958,6.689,5959,3.421,5960,3.421,5961,3.421,5962,3.421,5963,3.421,5964,3.421,5965,3.421,5966,3.421,5967,3.421,5968,3.421,5969,3.421,5970,3.421,5971,3.421,5972,3.421]]],"invertedIndex":[["",{"_index":40,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":907,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/QueryComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"classes/Vector.html":{},"coverage.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["0.0.12",{"_index":5785,"title":{},"body":{"dependencies.html":{}}}],["0.0.5",{"_index":5772,"title":{},"body":{"dependencies.html":{}}}],["0.06",{"_index":2616,"title":{},"body":{"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{}}}],["0.08",{"_index":5325,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["0.1",{"_index":2669,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueLocationComponent.html":{},"components/QueryComponent.html":{}}}],["0.10.2",{"_index":5791,"title":{},"body":{"dependencies.html":{}}}],["0.114",{"_index":3364,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["0.12",{"_index":2667,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/TimelineItemComponent.html":{}}}],["0.15",{"_index":2745,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["0.175",{"_index":5519,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["0.2",{"_index":3326,"title":{},"body":{"components/IssueItemComponent.html":{},"components/SetEditorDialogComponent.html":{}}}],["0.27",{"_index":5323,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["0.27.0",{"_index":5779,"title":{},"body":{"dependencies.html":{}}}],["0.299",{"_index":3362,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["0.3",{"_index":3374,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["0.3em",{"_index":3822,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["0.5",{"_index":2671,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueLocationComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{}}}],["0.54",{"_index":1675,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"components/SideNavComponent.html":{}}}],["0.587",{"_index":3363,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["0.5em",{"_index":2753,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/TopToolbarComponent.html":{}}}],["0.6",{"_index":5321,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["0.6.0",{"_index":5776,"title":{},"body":{"dependencies.html":{}}}],["0.7",{"_index":2764,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/UserItemComponent.html":{}}}],["0.8em",{"_index":3324,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["0.9",{"_index":4704,"title":{},"body":{"interfaces/Positions.html":{}}}],["0/1",{"_index":5653,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":5705,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":5701,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":5670,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":5700,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":5661,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":5652,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":5682,"title":{},"body":{"coverage.html":{}}}],["0/43",{"_index":5681,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":5743,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":5679,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":5708,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":5691,"title":{},"body":{"coverage.html":{}}}],["00",{"_index":1534,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["000000",{"_index":1471,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["005eff",{"_index":3099,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["00ba39",{"_index":2765,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/TimelineItemComponent.html":{}}}],["01",{"_index":5439,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["01t19:44:04.813z",{"_index":5436,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["02t12:27:58.192z",{"_index":5448,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["0x",{"_index":3351,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["0xff).tostring(16)).slice",{"_index":1536,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["1",{"_index":816,"title":{"interfaces/DialogData-1.html":{}},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"injectables/LabelStoreService.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"classes/TimeFormatter.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"overview.html":{},"interfaces/userMock.html":{}}}],["1)[0",{"_index":2868,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["1.14.1",{"_index":5788,"title":{},"body":{"dependencies.html":{}}}],["1.1em",{"_index":5208,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["1.2em",{"_index":3325,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["1.3.3",{"_index":5789,"title":{},"body":{"dependencies.html":{}}}],["1.4em",{"_index":3323,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["1.5",{"_index":5290,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["1/1",{"_index":5667,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":5699,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":5742,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":5704,"title":{},"body":{"coverage.html":{}}}],["1/14",{"_index":5702,"title":{},"body":{"coverage.html":{}}}],["1/16",{"_index":5697,"title":{},"body":{"coverage.html":{}}}],["1/18",{"_index":5668,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":5732,"title":{},"body":{"coverage.html":{}}}],["1/39",{"_index":5730,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":5662,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":5720,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":5690,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":5689,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":5706,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":5688,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1664,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/TimeFormatter.html":{},"coverage.html":{}}}],["10.1.0",{"_index":5781,"title":{},"body":{"dependencies.html":{}}}],["10/11",{"_index":5687,"title":{},"body":{"coverage.html":{}}}],["10/12",{"_index":5703,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":93,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/LoginComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"coverage.html":{}}}],["1000",{"_index":5466,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["10000",{"_index":5574,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["100px",{"_index":2757,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/QueryComponent.html":{}}}],["109",{"_index":3548,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["10px",{"_index":3096,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/IssueLocationComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/QueryComponent.html":{},"components/TextDisplayComponent.html":{}}}],["11",{"_index":5447,"title":{},"body":{"classes/TimeFormatter.html":{},"coverage.html":{}}}],["11pt",{"_index":3551,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["11px",{"_index":1181,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["12",{"_index":1192,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"classes/TimeFormatter.html":{},"coverage.html":{}}}],["12px",{"_index":1677,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["13.1.0",{"_index":5784,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":1188,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["14/15",{"_index":5711,"title":{},"body":{"coverage.html":{}}}],["14/16",{"_index":5713,"title":{},"body":{"coverage.html":{}}}],["14px",{"_index":5523,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["15.2.0",{"_index":5774,"title":{},"body":{"dependencies.html":{}}}],["15.3.0",{"_index":5778,"title":{},"body":{"dependencies.html":{}}}],["15/16",{"_index":5672,"title":{},"body":{"coverage.html":{}}}],["15/17",{"_index":5734,"title":{},"body":{"coverage.html":{}}}],["15/18",{"_index":5669,"title":{},"body":{"coverage.html":{}}}],["150px",{"_index":91,"title":{},"body":{"components/AccessTokenDialogComponent.html":{}}}],["15px",{"_index":1182,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/TimelineItemComponent.html":{}}}],["16",{"_index":3354,"title":{},"body":{"components/IssueLabelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["16/17",{"_index":5684,"title":{},"body":{"coverage.html":{}}}],["16px",{"_index":1542,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/LoginComponent.html":{},"components/ProjectListComponent.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["17",{"_index":5727,"title":{},"body":{"coverage.html":{}}}],["17.2",{"_index":4715,"title":{},"body":{"interfaces/Positions.html":{}}}],["17/17",{"_index":5733,"title":{},"body":{"coverage.html":{}}}],["17px",{"_index":3523,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["18px",{"_index":4854,"title":{},"body":{"components/ProjectListComponent.html":{},"components/QueryComponent.html":{}}}],["195",{"_index":3525,"title":{},"body":{"components/IssueListComponent.html":{}}}],["1]?.id",{"_index":5944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1fr",{"_index":2270,"title":{},"body":{"components/FrameComponent.html":{}}}],["1px",{"_index":2665,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["2",{"_index":611,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"components/IssueDetailComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["2.0.0",{"_index":5766,"title":{},"body":{"dependencies.html":{}}}],["2.0.4",{"_index":5777,"title":{},"body":{"dependencies.html":{}}}],["2.5em",{"_index":5513,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["2/2",{"_index":5719,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":5655,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":5698,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":5741,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":5693,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":5709,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1185,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"classes/LayoutNode.html":{},"coverage.html":{},"overview.html":{}}}],["200",{"_index":1123,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["200px",{"_index":2265,"title":{},"body":{"components/FrameComponent.html":{}}}],["201",{"_index":3526,"title":{},"body":{"components/IssueListComponent.html":{}}}],["2021",{"_index":5435,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["20px",{"_index":1196,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/SideNavComponent.html":{},"components/TimelineItemComponent.html":{}}}],["21",{"_index":5847,"title":{},"body":{"overview.html":{}}}],["217",{"_index":3549,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["21:44:04",{"_index":5440,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["23",{"_index":5717,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":5470,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["24px",{"_index":1175,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/LoginComponent.html":{}}}],["25",{"_index":1665,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"coverage.html":{}}}],["255",{"_index":2763,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueLabelComponent.html":{}}}],["26px",{"_index":5520,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["27",{"_index":5739,"title":{},"body":{"coverage.html":{}}}],["27px",{"_index":5522,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["28",{"_index":5692,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["29",{"_index":5737,"title":{},"body":{"coverage.html":{}}}],["2d",{"_index":3739,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["2px",{"_index":2666,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/ProjectListComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["3",{"_index":2264,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["3.1.1",{"_index":5771,"title":{},"body":{"dependencies.html":{}}}],["3.2.5",{"_index":5765,"title":{},"body":{"dependencies.html":{}}}],["3/10",{"_index":5723,"title":{},"body":{"coverage.html":{}}}],["3/17",{"_index":5728,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":5660,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":5750,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":5707,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":5696,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":5659,"title":{},"body":{"coverage.html":{}}}],["3/9",{"_index":5657,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":82,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["300",{"_index":5378,"title":{},"body":{"components/SideNavComponent.html":{}}}],["300px",{"_index":2746,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/LoginComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["31",{"_index":5473,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["33",{"_index":5656,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":3258,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["35px",{"_index":5510,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["36px",{"_index":2662,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/ProjectListComponent.html":{},"components/SetEditorComponent.html":{},"components/TimelineItemComponent.html":{}}}],["37/59",{"_index":5722,"title":{},"body":{"coverage.html":{}}}],["38px",{"_index":1186,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["3f3f3f",{"_index":4795,"title":{},"body":{"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["3px",{"_index":1187,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["4",{"_index":487,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"overview.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["4.0.4",{"_index":5769,"title":{},"body":{"dependencies.html":{}}}],["4/17",{"_index":5718,"title":{},"body":{"coverage.html":{}}}],["4/27",{"_index":5678,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":5664,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":4728,"title":{},"body":{"interfaces/Positions.html":{},"coverage.html":{}}}],["400",{"_index":1121,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["4000",{"_index":5576,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["400px",{"_index":269,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{}}}],["401",{"_index":2496,"title":{},"body":{"modules/GraphQLModule.html":{},"components/LoginComponent.html":{}}}],["42",{"_index":5658,"title":{},"body":{"coverage.html":{}}}],["43px",{"_index":3522,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["44px",{"_index":3094,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["45",{"_index":3257,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["46px",{"_index":1190,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["48px",{"_index":2896,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["4px",{"_index":1178,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TopToolbarComponent.html":{}}}],["5",{"_index":3727,"title":{},"body":{"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"classes/Vector.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["5/5",{"_index":5673,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":5666,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":3546,"title":{},"body":{"components/IssueLocationComponent.html":{},"classes/LayoutNode.html":{},"components/ProjectListComponent.html":{},"components/TimelineItemComponent.html":{},"coverage.html":{}}}],["500",{"_index":1764,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueDetailComponent.html":{},"classes/NodeCache.html":{},"components/QueryComponent.html":{},"components/UserItemComponent.html":{},"miscellaneous/variables.html":{}}}],["5000",{"_index":1770,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphQLModule.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["500px",{"_index":87,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/IssueFilterComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["50px",{"_index":1199,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/NodeDetailsComponent.html":{},"components/TimelineItemComponent.html":{}}}],["51",{"_index":5846,"title":{},"body":{"overview.html":{}}}],["56px",{"_index":3824,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["57.75",{"_index":4711,"title":{},"body":{"interfaces/Positions.html":{}}}],["58",{"_index":1545,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"coverage.html":{}}}],["5em",{"_index":5423,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["5px",{"_index":1546,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueLocationComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/TimelineItemComponent.html":{}}}],["6",{"_index":4341,"title":{},"body":{"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"components/TextDisplayComponent.html":{},"coverage.html":{},"overview.html":{},"interfaces/userMock.html":{}}}],["6.5.4",{"_index":5786,"title":{},"body":{"dependencies.html":{}}}],["6/12",{"_index":5749,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":5663,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":5715,"title":{},"body":{"coverage.html":{}}}],["6/9",{"_index":5731,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":83,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/TimeFormatter.html":{},"coverage.html":{}}}],["600",{"_index":1638,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"components/IssueDetailComponent.html":{}}}],["60000",{"_index":963,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["600px",{"_index":270,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["60px",{"_index":5426,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["62",{"_index":5721,"title":{},"body":{"coverage.html":{}}}],["63",{"_index":5744,"title":{},"body":{"coverage.html":{}}}],["64px",{"_index":1678,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"components/ProjectHeaderComponent.html":{}}}],["66",{"_index":5654,"title":{},"body":{"coverage.html":{}}}],["6px",{"_index":1543,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ProjectListComponent.html":{},"components/TimelineItemComponent.html":{}}}],["7",{"_index":80,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["7/11",{"_index":5745,"title":{},"body":{"coverage.html":{}}}],["7/12",{"_index":5751,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":5716,"title":{},"body":{"coverage.html":{}}}],["700",{"_index":1132,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["75",{"_index":5714,"title":{},"body":{"coverage.html":{}}}],["7px",{"_index":1183,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/LabelSearchComponent.html":{}}}],["8",{"_index":2481,"title":{},"body":{"modules/GraphQLModule.html":{},"components/IssueLabelComponent.html":{},"components/ProjectMembersComponent.html":{},"classes/TimeFormatter.html":{},"coverage.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["8.2.2",{"_index":5782,"title":{},"body":{"dependencies.html":{}}}],["8/27",{"_index":5738,"title":{},"body":{"coverage.html":{}}}],["8/29",{"_index":5740,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":5726,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":3719,"title":{},"body":{"classes/LayoutNode.html":{}}}],["81",{"_index":5685,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":5665,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":4506,"title":{},"body":{"interfaces/Positions.html":{},"coverage.html":{}}}],["85px",{"_index":4803,"title":{},"body":{"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["87",{"_index":5712,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":5725,"title":{},"body":{"coverage.html":{}}}],["8em",{"_index":5422,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["8px",{"_index":1191,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{}}}],["9",{"_index":4895,"title":{},"body":{"components/ProjectMembersComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["9.0.0",{"_index":5783,"title":{},"body":{"dependencies.html":{}}}],["9.1.12",{"_index":5759,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["9.2.4",{"_index":5761,"title":{},"body":{"dependencies.html":{}}}],["9.3.0",{"_index":5780,"title":{},"body":{"dependencies.html":{}}}],["9/10",{"_index":5724,"title":{},"body":{"coverage.html":{}}}],["9/11",{"_index":5686,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":84,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{},"coverage.html":{}}}],["93",{"_index":5671,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":5683,"title":{},"body":{"coverage.html":{}}}],["99999",{"_index":892,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["999999",{"_index":5515,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["9px",{"_index":1189,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["_",{"_index":3193,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["__typename",{"_index":3833,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["ababab",{"_index":5119,"title":{},"body":{"components/QueryComponent.html":{}}}],["aborting",{"_index":1619,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["above",{"_index":2158,"title":{},"body":{"interfaces/FilterSelection.html":{},"injectables/IssueGraphStateService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{}}}],["absolute",{"_index":2664,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/TimelineItemComponent.html":{}}}],["absoluterotation",{"_index":4396,"title":{},"body":{"interfaces/Positions.html":{}}}],["abstract",{"_index":1813,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{}}}],["accept",{"_index":2479,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["accepts",{"_index":5591,"title":{},"body":{"injectables/UsersService.html":{}}}],["access",{"_index":19,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"index.html":{}}}],["accessed",{"_index":1780,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["accessible",{"_index":1810,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"index.html":{}}}],["accessors",{"_index":659,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/TextDisplayComponent.html":{}}}],["accesstokendialogcomponent",{"_index":1,"title":{"components/AccessTokenDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["according",{"_index":619,"title":{},"body":{"guards/AuthGuard.html":{}}}],["accordion",{"_index":3799,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["account",{"_index":5132,"title":{},"body":{"components/RegisterComponent.html":{},"index.html":{}}}],["account_circle",{"_index":5341,"title":{},"body":{"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["account_tree",{"_index":4849,"title":{},"body":{"components/ProjectListComponent.html":{},"components/SideNavComponent.html":{}}}],["acting",{"_index":3757,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["action",{"_index":1036,"title":{},"body":{"components/CommentComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["actions",{"_index":271,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/Positions.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["activated",{"_index":2318,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueListComponent.html":{}}}],["activatedroute",{"_index":2676,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["activatedroutesnapshot",{"_index":629,"title":{},"body":{"guards/AuthGuard.html":{}}}],["active",{"_index":2818,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/NodeDetailsComponent.html":{},"components/SideNavComponent.html":{}}}],["activecategories",{"_index":2317,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{}}}],["activecategories.includes(category",{"_index":2324,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["activecategories.push(key",{"_index":2953,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["activecategories}).pipe",{"_index":2957,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["activeitemcontent",{"_index":5493,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["activepredicates",{"_index":2772,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["actual",{"_index":3002,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["actual_component",{"_index":221,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["actually",{"_index":992,"title":{},"body":{"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/variables.html":{}}}],["add",{"_index":103,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"index.html":{}}}],["add(other",{"_index":5614,"title":{},"body":{"classes/Vector.html":{}}}],["addablemembers",{"_index":4934,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addableuser.id",{"_index":4939,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addableusers",{"_index":4875,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addcoalesceitems(coalescelist",{"_index":936,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["addconsumedinterface",{"_index":2904,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{}}}],["addconsumedinterface(component",{"_index":2918,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["addconsumedinterface(componentid",{"_index":3170,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["addconsumedinterfacegql",{"_index":2911,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["addconsumedinterfacemutation",{"_index":2910,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["added",{"_index":817,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/InterfaceNode.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"interfaces/RelationEdge.html":{},"components/SetEditorComponent.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["addedtocomponentevent",{"_index":850,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["addedtolocationevent",{"_index":853,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["addeduser1",{"_index":4890,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addeduser1.de",{"_index":4892,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addeduser2",{"_index":4893,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addeduser2.de",{"_index":4894,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addeduser3",{"_index":4896,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addeduser3.de",{"_index":4897,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["adding",{"_index":1784,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["addinterfacetocomponent(offeredbyid",{"_index":4420,"title":{},"body":{"interfaces/Positions.html":{}}}],["addissuecommentinput",{"_index":3613,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["addissuefoldernodes(node",{"_index":4653,"title":{},"body":{"interfaces/Positions.html":{}}}],["addissuefolders(node",{"_index":4628,"title":{},"body":{"interfaces/Positions.html":{}}}],["addissuegroupcontainer(node",{"_index":4637,"title":{},"body":{"interfaces/Positions.html":{}}}],["addissuetolocationgql",{"_index":3592,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["addissuetolocationinput",{"_index":3602,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["addissuetolocationmutation",{"_index":3591,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["additional",{"_index":2834,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/SetEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["additionally",{"_index":3001,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["additionalsearchstring",{"_index":3501,"title":{},"body":{"components/IssueListComponent.html":{}}}],["additions",{"_index":1512,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["addlocationinput",{"_index":3604,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["addmemberdialogref",{"_index":4932,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addmemberdialogref.afterclosed().subscribe(data",{"_index":4936,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addpredicateafter",{"_index":2777,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["addpredicateafter(index",{"_index":2792,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["addprojectmemberdialogcomponent",{"_index":102,"title":{"components/AddProjectMemberDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{},"interfaces/userMock.html":{}}}],["adds",{"_index":900,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addself",{"_index":5604,"title":{},"body":{"classes/Vector.html":{}}}],["addself(other",{"_index":5617,"title":{},"body":{"classes/Vector.html":{}}}],["addsinglecoalesceitem",{"_index":947,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["addsubscriber(subscriber",{"_index":1877,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["addtolocation",{"_index":3563,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["addtolocation(addlocationinput",{"_index":3601,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["adjusted",{"_index":3369,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["administrator",{"_index":266,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["affect",{"_index":4209,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["affected",{"_index":2074,"title":{},"body":{"injectables/DataService.html":{},"components/NodeDetailsComponent.html":{}}}],["affected.push",{"_index":4213,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["affected.push('deleting",{"_index":4216,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["affected.push(affectedinterface",{"_index":4211,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["affectedinterface",{"_index":4206,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["affecting",{"_index":5149,"title":{},"body":{"components/RegisterComponent.html":{}}}],["afteralertclose",{"_index":1564,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["afterclosed().subscribe((close",{"_index":1601,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["afternodejoinedgroup",{"_index":3210,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["afternodejoinedgroup(group",{"_index":3216,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["afternodeleftgroup",{"_index":3211,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["afternodeleftgroup(group",{"_index":3221,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["afterviewinit",{"_index":828,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["afterwards",{"_index":3996,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["again",{"_index":4492,"title":{},"body":{"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["against",{"_index":3367,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["ago",{"_index":5449,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["aka",{"_index":876,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/Positions.html":{}}}],["alert('todo",{"_index":4784,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["aliases",{"_index":5849,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1193,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["allcomponentslist",{"_index":1451,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["allicons",{"_index":397,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["alllabelslist",{"_index":2784,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{}}}],["allnodes",{"_index":3734,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["allow",{"_index":2315,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{}}}],["allowed",{"_index":747,"title":{},"body":{"classes/CCIMSValidators.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["allowedanchors",{"_index":3275,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["allowedanchors.add('bottom",{"_index":3281,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["allowedanchors.add('left",{"_index":3280,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["allowedanchors.add('right",{"_index":3277,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["allowedanchors.add('top",{"_index":3278,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["allowedanchors.add(groupnode.position",{"_index":3276,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["allows",{"_index":576,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{}}}],["alo",{"_index":2339,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["already",{"_index":777,"title":{},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"classes/Vector.html":{}}}],["always",{"_index":2010,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["amend",{"_index":1939,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["amount",{"_index":1964,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["amounts",{"_index":2037,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["anchors",{"_index":3146,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["angular",{"_index":402,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/GraphQLModule.html":{},"components/IssueFilterComponent.html":{},"directives/ItemDirective.html":{},"components/RegisterComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":5758,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":5760,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":355,"title":{},"body":{"modules/AppModule.html":{},"components/FrameComponent.html":{},"interfaces/Positions.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["angular/cdk/overlay",{"_index":1089,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["angular/cdk/portal",{"_index":441,"title":{},"body":{"modules/AppModule.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["angular/cdk/table",{"_index":2533,"title":{},"body":{"modules/GraphsModule.html":{}}}],["angular/cdk/tree",{"_index":2535,"title":{},"body":{"modules/GraphsModule.html":{}}}],["angular/common",{"_index":405,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":382,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"modules/GraphQLModule.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["angular/common/locales/en",{"_index":407,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compiler",{"_index":5762,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":54,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"interfaces/userMock.html":{}}}],["angular/forms",{"_index":255,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"modules/AppModule.html":{},"classes/CCIMSValidators.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"modules/GraphsModule.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"dependencies.html":{},"interfaces/userMock.html":{}}}],["angular/http",{"_index":2447,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["angular/icons",{"_index":400,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material",{"_index":5763,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["angular/material/checkbox",{"_index":2548,"title":{},"body":{"modules/GraphsModule.html":{}}}],["angular/material/dialog",{"_index":55,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"modules/GraphsModule.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/userMock.html":{}}}],["angular/material/expansion",{"_index":421,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/form",{"_index":416,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/icon",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/input",{"_index":414,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/list",{"_index":364,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/menu",{"_index":2555,"title":{},"body":{"modules/GraphsModule.html":{}}}],["angular/material/paginator",{"_index":2530,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["angular/material/progress",{"_index":2565,"title":{},"body":{"modules/GraphsModule.html":{}}}],["angular/material/select",{"_index":419,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/sidenav",{"_index":361,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/slide",{"_index":366,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/sort",{"_index":2537,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["angular/material/table",{"_index":2526,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["angular/material/tabs",{"_index":370,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/theming",{"_index":3091,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/ProjectListComponent.html":{},"components/SideNavComponent.html":{}}}],["angular/material/toolbar",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/tooltip",{"_index":2562,"title":{},"body":{"modules/GraphsModule.html":{}}}],["angular/platform",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/GraphsModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":499,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/FrameComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RegisterComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"interfaces/User.html":{},"dependencies.html":{},"interfaces/userMock.html":{}}}],["animation",{"_index":3825,"title":{},"body":{"components/LinkedIssueItemComponent.html":{},"miscellaneous/variables.html":{}}}],["animations",{"_index":2253,"title":{},"body":{"components/FrameComponent.html":{}}}],["animations.ts",{"_index":5747,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["another",{"_index":3007,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["ant",{"_index":398,"title":{},"body":{"modules/AppModule.html":{}}}],["antd",{"_index":396,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["antd/i18n",{"_index":394,"title":{},"body":{"modules/AppModule.html":{}}}],["antd/icon",{"_index":391,"title":{},"body":{"modules/AppModule.html":{}}}],["antdesignicons",{"_index":476,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["antdesignicons[key",{"_index":478,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["any).__typename",{"_index":912,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueLocationComponent.html":{}}}],["anything",{"_index":2125,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["anyway",{"_index":2894,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["anywhere",{"_index":4462,"title":{},"body":{"interfaces/Positions.html":{}}}],["apart",{"_index":3855,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["api",{"_index":762,"title":{},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/QueryListParams.html":{},"miscellaneous/enumerations.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["api.service",{"_index":3186,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["api.service.ts",{"_index":2901,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"coverage.html":{}}}],["api.service.ts:24",{"_index":2916,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["api.service.ts:42",{"_index":2922,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["api.service.ts:68",{"_index":2936,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["api.service.ts:80",{"_index":2919,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["api.service.ts:89",{"_index":2934,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["apiservice",{"_index":3169,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["apiurl",{"_index":5873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apollo",{"_index":2441,"title":{},"body":{"modules/GraphQLModule.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["apollo/client",{"_index":5764,"title":{},"body":{"dependencies.html":{}}}],["apollo/client/core",{"_index":2445,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apollo/client/core/apolloclient",{"_index":2455,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apollo/client/link/error",{"_index":2451,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apollo/link",{"_index":2449,"title":{},"body":{"modules/GraphQLModule.html":{},"dependencies.html":{}}}],["apollo_named_options",{"_index":2438,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apollo_options",{"_index":2439,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apolloclientoptions",{"_index":2442,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apolloclients",{"_index":2459,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["apollolink",{"_index":2443,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apollolink.from([basic",{"_index":2508,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["app",{"_index":18,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"index.html":{},"interfaces/userMock.html":{}}}],["app.component",{"_index":351,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":283,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":282,"title":{},"body":{"components/AppComponent.html":{}}}],["app/auth/authentication.service",{"_index":1552,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"injectables/ProjectStoreService.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["app/components/cache",{"_index":2556,"title":{},"body":{"modules/GraphsModule.html":{}}}],["app/components/cursor",{"_index":2540,"title":{},"body":{"modules/GraphsModule.html":{}}}],["app/components/issue",{"_index":2544,"title":{},"body":{"modules/GraphsModule.html":{}}}],["app/components/item.directive",{"_index":789,"title":{},"body":{"components/CacheNodeComponent.html":{},"modules/GraphsModule.html":{},"components/SetEditorComponent.html":{}}}],["app/components/set",{"_index":2542,"title":{},"body":{"modules/GraphsModule.html":{}}}],["app/components/user",{"_index":2550,"title":{},"body":{"modules/GraphsModule.html":{}}}],["app/data",{"_index":790,"title":{},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"injectables/ComponentsService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectsService.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/UsersService.html":{}}}],["app/data/component/component",{"_index":1404,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{}}}],["app/data/interface/interface",{"_index":1554,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{}}}],["app/data/issue",{"_index":1212,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["app/data/project/project",{"_index":1644,"title":{},"body":{"components/CreateProjectDialogComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["app/dialogs/add",{"_index":4923,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["app/dialogs/create",{"_index":437,"title":{},"body":{"modules/AppModule.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{}}}],["app/dialogs/remove",{"_index":1010,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["app/dialogs/settings",{"_index":470,"title":{},"body":{"modules/AppModule.html":{},"components/TopToolbarComponent.html":{}}}],["app/graphs/automatic",{"_index":4279,"title":{},"body":{"interfaces/Positions.html":{}}}],["app/graphs/component",{"_index":442,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Positions.html":{}}}],["app/graphs/issue",{"_index":1092,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["app/graphs/shared",{"_index":2949,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{}}}],["app/issue",{"_index":466,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"modules/GraphsModule.html":{},"components/IssueDetailComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["app/node",{"_index":446,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{}}}],["app/project",{"_index":2538,"title":{},"body":{"modules/GraphsModule.html":{}}}],["app/state.service",{"_index":2251,"title":{},"body":{"components/FrameComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/Positions.html":{},"components/SideNavComponent.html":{}}}],["app/text",{"_index":462,"title":{},"body":{"modules/AppModule.html":{}}}],["app/user",{"_index":1011,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{}}}],["app/utils/query",{"_index":837,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"modules/GraphsModule.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["app/utils/validators",{"_index":1405,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/NodeDetailsComponent.html":{}}}],["appcoalescedtimelineitems",{"_index":5482,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["appcoalescedtimelineitems]'},{'name",{"_index":216,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["appcomponent",{"_index":106,"title":{"components/AppComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearance",{"_index":2570,"title":{},"body":{"modules/GraphsModule.html":{}}}],["appears",{"_index":5231,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["appitem",{"_index":3665,"title":{},"body":{"directives/ItemDirective.html":{}}}],["appitem]'},{'name",{"_index":210,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["applicable",{"_index":5057,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["application",{"_index":2207,"title":{},"body":{"components/FrameComponent.html":{}}}],["applied",{"_index":2982,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"components/IssueListComponent.html":{}}}],["applies",{"_index":2989,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{}}}],["apply",{"_index":1541,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["applychangeset",{"_index":4062,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["applycomponentchangeset",{"_index":1510,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["applyfilter",{"_index":3389,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["applyfilter(filter",{"_index":3400,"title":{},"body":{"components/IssueListComponent.html":{}}}],["applyfilter(filtervalue",{"_index":4879,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["applyidchangeset",{"_index":2778,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["applyidchangeset(id",{"_index":2795,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["applying",{"_index":5226,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["appmodule",{"_index":330,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appquerybody",{"_index":5044,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["appquerybody]'},{'name",{"_index":212,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["appquerybutton",{"_index":5052,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["appquerybutton]'},{'name",{"_index":214,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["appropriate",{"_index":736,"title":{},"body":{"classes/CCIMSValidators.html":{},"components/IssueIconComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["approutingmodule",{"_index":337,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appsingletimelineitem",{"_index":220,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["appstate",{"_index":528,"title":{"interfaces/AppState.html":{}},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{},"coverage.html":{}}}],["appstate.project",{"_index":5367,"title":{},"body":{"components/SideNavComponent.html":{}}}],["appstate.project.node",{"_index":5368,"title":{},"body":{"components/SideNavComponent.html":{}}}],["appstate.project.node.id",{"_index":5372,"title":{},"body":{"components/SideNavComponent.html":{}}}],["appstate.project.node.name",{"_index":5370,"title":{},"body":{"components/SideNavComponent.html":{}}}],["appstate.project?.node.id",{"_index":3194,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["apptimelineitemdeleted",{"_index":5485,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["apptimelineitemdeleted]'},{'name",{"_index":218,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["arbitrary",{"_index":3785,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["area",{"_index":5841,"title":{},"body":{"index.html":{}}}],["args",{"_index":1737,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["arguments",{"_index":2355,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["arial",{"_index":3553,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["around",{"_index":2890,"title":{},"body":{"components/IssueFilterComponent.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["arranged",{"_index":4272,"title":{},"body":{"interfaces/Positions.html":{}}}],["array",{"_index":826,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"classes/LayoutNode.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{}}}],["array(nodes.length",{"_index":3784,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["array.from(node.issuegroupcontainer.issuegroupnodeids).map",{"_index":4670,"title":{},"body":{"interfaces/Positions.html":{}}}],["array.from(nodes.values",{"_index":4755,"title":{},"body":{"interfaces/Positions.html":{}}}],["array.from(this.graphdata.components.values()).map(component",{"_index":4568,"title":{},"body":{"interfaces/Positions.html":{}}}],["array.from(this.graphdata.interfaces.values()).map",{"_index":4572,"title":{},"body":{"interfaces/Positions.html":{}}}],["array.includes(item",{"_index":2870,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["array.isarray(spec.sourcenodes",{"_index":4008,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["array.isarray(this.componentlist",{"_index":1514,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["array.isarray(this.data.listset",{"_index":4072,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["array.isarray(this.listset",{"_index":5253,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["array.push(item",{"_index":2871,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["array.splice(array.indexof(item",{"_index":2872,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["arrives",{"_index":3009,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/Positions.html":{}}}],["arrow",{"_index":1287,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"components/IssueDetailComponent.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["arrow_back_ios",{"_index":73,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["arrows",{"_index":1654,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["artifact",{"_index":3834,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["artifacts",{"_index":3868,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["asc",{"_index":3478,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["ask",{"_index":2316,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["aspect",{"_index":4504,"title":{},"body":{"interfaces/Positions.html":{},"index.html":{}}}],["assets/icons/issues",{"_index":321,"title":{},"body":{"components/AppComponent.html":{}}}],["assets/icons/svg",{"_index":304,"title":{},"body":{"components/AppComponent.html":{}}}],["asseturl",{"_index":320,"title":{},"body":{"components/AppComponent.html":{}}}],["assign",{"_index":1538,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["assigned",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/IssueDetailComponent.html":{}}}],["assignedevent",{"_index":966,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["assignedevent.createdby.id",{"_index":968,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["assignedevent.removedassignee?.id",{"_index":969,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["assignee",{"_index":3504,"title":{},"body":{"components/IssueListComponent.html":{}}}],["assignee.displayname",{"_index":3506,"title":{},"body":{"components/IssueListComponent.html":{}}}],["assignees",{"_index":1585,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["associated",{"_index":2015,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["assume",{"_index":4595,"title":{},"body":{"interfaces/Positions.html":{}}}],["async",{"_index":1511,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["attached",{"_index":2403,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{}}}],["attempt",{"_index":1463,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["attr('r",{"_index":3122,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["attr('x",{"_index":3120,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["attr('y",{"_index":3121,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["attribute",{"_index":4762,"title":{},"body":{"interfaces/Positions.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["auth",{"_index":2503,"title":{},"body":{"modules/GraphQLModule.html":{},"index.html":{}}}],["auth/auth.guard",{"_index":504,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/authentication.service",{"_index":2452,"title":{},"body":{"modules/GraphQLModule.html":{},"components/LoginComponent.html":{}}}],["authenticated",{"_index":633,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authentication",{"_index":2505,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["authentication.service",{"_index":638,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authenticationservice",{"_index":626,"title":{"injectables/AuthenticationService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"modules/GraphQLModule.html":{},"components/LoginComponent.html":{},"injectables/ProjectStoreService.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"index.html":{}}}],["authenticationsservice",{"_index":620,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authguard",{"_index":503,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{},"index.html":{}}}],["author",{"_index":3421,"title":{},"body":{"components/IssueListComponent.html":{}}}],["authorization",{"_index":2506,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["authservice",{"_index":1556,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"modules/GraphQLModule.html":{},"components/LoginComponent.html":{},"injectables/ProjectStoreService.html":{},"components/TopToolbarComponent.html":{}}}],["authservice.logout",{"_index":2497,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["auto",{"_index":1201,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/FrameComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/LoginComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["autodismiss",{"_index":488,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["automatic",{"_index":2068,"title":{},"body":{"injectables/DataService.html":{},"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["automatically",{"_index":623,"title":{},"body":{"guards/AuthGuard.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/IssueIconComponent.html":{},"classes/NodeCache.html":{},"index.html":{}}}],["automaticly",{"_index":3561,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["available",{"_index":574,"title":{},"body":{"interfaces/AppState.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["avoid",{"_index":1993,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["avoiding",{"_index":4598,"title":{},"body":{"interfaces/Positions.html":{}}}],["await",{"_index":1523,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"miscellaneous/variables.html":{}}}],["away",{"_index":3746,"title":{},"body":{"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["b",{"_index":954,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/IssueLabelComponent.html":{},"components/ProjectListComponent.html":{}}}],["b.blur",{"_index":4837,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["back",{"_index":68,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"interfaces/userMock.html":{}}}],["backend",{"_index":231,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"interfaces/AppState.html":{},"injectables/ComponentStoreService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/FilterSelection.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["background",{"_index":276,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/ProjectListComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["backtologin",{"_index":5138,"title":{},"body":{"components/RegisterComponent.html":{}}}],["backtologin(e",{"_index":5147,"title":{},"body":{"components/RegisterComponent.html":{}}}],["backwards",{"_index":3870,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["badge",{"_index":5512,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["badge.closed",{"_index":5528,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["badge.reopened",{"_index":5529,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["badge.warning",{"_index":5526,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["badly",{"_index":3827,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["bar",{"_index":2157,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/TextFragment.html":{},"components/TopToolbarComponent.html":{},"miscellaneous/typealiases.html":{}}}],["based",{"_index":1245,"title":{},"body":{"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"components/FrameComponent.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{}}}],["basic",{"_index":2476,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bearer",{"_index":2507,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["before",{"_index":1907,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"components/IssueContentsComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"interfaces/QueryListParams.html":{},"components/RemoveDialogComponent.html":{},"components/TimelineItemComponent.html":{}}}],["beforenodemove",{"_index":3286,"title":{},"body":{"classes/IssueGroupContainerParentBehaviour.html":{}}}],["beforenodemove(group",{"_index":3236,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["beginediting",{"_index":2682,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/SetEditorComponent.html":{}}}],["beginning",{"_index":2128,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["begins",{"_index":2688,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["behavior",{"_index":1796,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["behaviorsubject",{"_index":684,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{},"interfaces/User.html":{}}}],["behaviorsubject(false",{"_index":2246,"title":{},"body":{"components/FrameComponent.html":{}}}],["behaviorsubject(null",{"_index":4315,"title":{},"body":{"interfaces/Positions.html":{}}}],["behaviorsubject(this.fetchuserfromstorage",{"_index":694,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["behaviorsubject({labels",{"_index":2164,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["behaviour",{"_index":4340,"title":{},"body":{"interfaces/Positions.html":{}}}],["behaviours",{"_index":4276,"title":{},"body":{"interfaces/Positions.html":{}}}],["behaviours.ts",{"_index":3205,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"coverage.html":{}}}],["behaviours.ts:164",{"_index":3220,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["behaviours.ts:169",{"_index":3222,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["behaviours.ts:18",{"_index":3289,"title":{},"body":{"classes/IssueGroupContainerParentBehaviour.html":{}}}],["behaviours.ts:19",{"_index":3288,"title":{},"body":{"classes/IssueGroupContainerParentBehaviour.html":{}}}],["behaviours.ts:24",{"_index":3290,"title":{},"body":{"classes/IssueGroupContainerParentBehaviour.html":{}}}],["behaviours.ts:92",{"_index":3213,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["behaviours.ts:93",{"_index":3215,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["behaviours.ts:94",{"_index":3214,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["behaviours.ts:96",{"_index":3224,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["being",{"_index":1004,"title":{},"body":{"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"classes/NodeCache.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{}}}],["belongs",{"_index":997,"title":{},"body":{"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["below",{"_index":2749,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["beneath",{"_index":5345,"title":{},"body":{"components/SideNavComponent.html":{}}}],["bespoke",{"_index":3481,"title":{},"body":{"components/IssueListComponent.html":{}}}],["best",{"_index":3242,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["bestdistance",{"_index":3245,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["beta.3",{"_index":5767,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":705,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"classes/Vector.html":{}}}],["beyond",{"_index":1765,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["bit",{"_index":1712,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["black",{"_index":3337,"title":{},"body":{"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/ProjectListComponent.html":{}}}],["blank",{"_index":4596,"title":{},"body":{"interfaces/Positions.html":{}}}],["block",{"_index":2751,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["blue",{"_index":3342,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["body",{"_index":995,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/NodeDetailsComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/TimelineItemComponent.html":{}}}],["body.mat",{"_index":4252,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["bold",{"_index":2897,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SideNavComponent.html":{}}}],["bool",{"_index":2838,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":602,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{}}}],["booleans",{"_index":3023,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["bootstrap",{"_index":345,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":1176,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["both",{"_index":742,"title":{},"body":{"classes/CCIMSValidators.html":{},"classes/LayoutNode.html":{},"classes/MultiSourceList.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/Vector.html":{}}}],["bottom",{"_index":1274,"title":{},"body":{"interfaces/ComponentNode.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"interfaces/IssueNode.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"interfaces/Position.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TimelineItemComponent.html":{}}}],["bound",{"_index":3053,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["bounding",{"_index":4320,"title":{},"body":{"interfaces/Positions.html":{}}}],["boundingbox",{"_index":4560,"title":{},"body":{"interfaces/Positions.html":{}}}],["boundingbox.height",{"_index":4613,"title":{},"body":{"interfaces/Positions.html":{}}}],["boundingbox.width",{"_index":4610,"title":{},"body":{"interfaces/Positions.html":{}}}],["boundingbox.x",{"_index":4609,"title":{},"body":{"interfaces/Positions.html":{}}}],["boundingbox.y",{"_index":4612,"title":{},"body":{"interfaces/Positions.html":{}}}],["bounds",{"_index":5265,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["box",{"_index":1179,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/DialogData-1.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["break",{"_index":4040,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/TextDisplayComponent.html":{}}}],["breakpointobserver",{"_index":2232,"title":{},"body":{"components/FrameComponent.html":{},"interfaces/Positions.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["breakpoints",{"_index":2250,"title":{},"body":{"components/FrameComponent.html":{},"interfaces/Positions.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["bridges",{"_index":2210,"title":{},"body":{"components/FrameComponent.html":{}}}],["brightness",{"_index":3358,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["browse",{"_index":5845,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":292,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/GraphsModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":353,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["browseranimationsmodule",{"_index":352,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["browsermodule",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["bug",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"miscellaneous/variables.html":{}}}],["bug_report",{"_index":3087,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/SideNavComponent.html":{}}}],["bugcount",{"_index":2350,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["bugs",{"_index":2351,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["buildfilter",{"_index":2779,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["builds",{"_index":2799,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["button",{"_index":259,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData-1.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/LoginComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TopToolbarComponent.html":{}}}],["buttoncreateproject",{"_index":4864,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["buttondeleteproject",{"_index":4863,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["buttonmode",{"_index":5080,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["buttons",{"_index":2672,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/LinkedIssueItemComponent.html":{}}}],["c",{"_index":1963,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["c.name",{"_index":4219,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["c1",{"_index":3418,"title":{},"body":{"components/IssueListComponent.html":{}}}],["cache",{"_index":109,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"miscellaneous/variables.html":{}}}],["cache_fast_debounce_time_ms",{"_index":1760,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cache_interactive_debounce_time_ms",{"_index":1763,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cache_stale_time_ms",{"_index":1769,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cacheable",{"_index":1680,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["cached",{"_index":776,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["cachenodecomponent",{"_index":108,"title":{"components/CacheNodeComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["caching",{"_index":2069,"title":{},"body":{"injectables/DataService.html":{}}}],["calc(100",{"_index":1198,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["calc(36px",{"_index":5514,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["calculaiton",{"_index":3151,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["calculate",{"_index":3238,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["calculateboundingbox",{"_index":4724,"title":{},"body":{"interfaces/Positions.html":{}}}],["calculated",{"_index":4722,"title":{},"body":{"interfaces/Positions.html":{}}}],["calculatemovement",{"_index":3708,"title":{},"body":{"classes/LayoutNode.html":{}}}],["calculatemovement(allnodes",{"_index":3731,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["calculates",{"_index":3137,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["calculatesourcehandles",{"_index":3131,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["calculatesourcehandles(source",{"_index":3134,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["calculatetargethandles",{"_index":3132,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["calculatetargethandles(target",{"_index":3138,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["calculation",{"_index":3143,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{}}}],["calculations",{"_index":4697,"title":{},"body":{"interfaces/Positions.html":{}}}],["call",{"_index":1862,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["callback",{"_index":1419,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{},"miscellaneous/typealiases.html":{}}}],["called",{"_index":1859,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/IssueGraphClassSettersService.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/TextDisplayComponent.html":{},"miscellaneous/typealiases.html":{}}}],["caller",{"_index":3181,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["calling",{"_index":1775,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["calls",{"_index":1254,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["canactivate",{"_index":509,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":628,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cancel",{"_index":85,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/CommentComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{}}}],["cancelled",{"_index":5412,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["cancels",{"_index":1467,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/Positions.html":{}}}],["cancreatenewissue",{"_index":3380,"title":{},"body":{"components/IssueListComponent.html":{}}}],["capturechildmovement",{"_index":3207,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["card",{"_index":3800,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["care",{"_index":4556,"title":{},"body":{"interfaces/Positions.html":{}}}],["carries",{"_index":5155,"title":{},"body":{"components/RegisterComponent.html":{}}}],["carry",{"_index":2928,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["case",{"_index":903,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{}}}],["catch((error",{"_index":1529,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["catch(err",{"_index":1628,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["catch(error",{"_index":1501,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["catcherror",{"_index":2151,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["categiry",{"_index":3407,"title":{},"body":{"components/IssueListComponent.html":{}}}],["categories",{"_index":2312,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["categories[key",{"_index":2952,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["category",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueCategoryComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"miscellaneous/variables.html":{}}}],["category'},{'name",{"_index":131,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["category.component",{"_index":2569,"title":{},"body":{"modules/GraphsModule.html":{}}}],["category.component.html",{"_index":2611,"title":{},"body":{"components/IssueCategoryComponent.html":{}}}],["category.component.scss",{"_index":2610,"title":{},"body":{"components/IssueCategoryComponent.html":{}}}],["category.component.ts",{"_index":2609,"title":{},"body":{"components/IssueCategoryComponent.html":{},"coverage.html":{}}}],["category.component.ts:10",{"_index":2612,"title":{},"body":{"components/IssueCategoryComponent.html":{}}}],["category/issue",{"_index":2568,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"coverage.html":{}}}],["cause",{"_index":1620,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"classes/NodeCache.html":{}}}],["caused",{"_index":3308,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["causes",{"_index":2102,"title":{},"body":{"injectables/DataService.html":{}}}],["caution",{"_index":593,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["ccc",{"_index":5521,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["ccims",{"_index":723,"title":{},"body":{"classes/CCIMSValidators.html":{},"interfaces/Positions.html":{}}}],["ccimsicons",{"_index":294,"title":{},"body":{"components/AppComponent.html":{}}}],["ccimsvalidators",{"_index":719,"title":{"classes/CCIMSValidators.html":{}},"body":{"classes/CCIMSValidators.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/NodeDetailsComponent.html":{},"coverage.html":{}}}],["ccimsvalidators.contentvalidator",{"_index":1418,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["ccimsvalidators.nameformatvalidator",{"_index":1412,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["ccimsvalidators.namevalidator",{"_index":739,"title":{},"body":{"classes/CCIMSValidators.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["ccimsvalidators.urlvalidator",{"_index":1414,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["cdktablemodule",{"_index":2532,"title":{},"body":{"modules/GraphsModule.html":{}}}],["cdktreemodule",{"_index":2534,"title":{},"body":{"modules/GraphsModule.html":{}}}],["center",{"_index":1194,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"modules/GraphQLModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["center_focus_strong",{"_index":3089,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["centered",{"_index":4857,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["certain",{"_index":4667,"title":{},"body":{"interfaces/Positions.html":{}}}],["change",{"_index":594,"title":{},"body":{"interfaces/AppState.html":{},"components/IssueFilterComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/StateService.html":{},"classes/TimeFormatter.html":{},"index.html":{},"interfaces/userMock.html":{}}}],["changecolour",{"_index":4812,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["changed",{"_index":2689,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["changedetector",{"_index":1060,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["changedetectorref",{"_index":1061,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["changeissuecategory",{"_index":3564,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["changeissuecategory(changeissuecategoryinput",{"_index":3605,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["changeissuecategorygql",{"_index":3590,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["changeissuecategoryinput",{"_index":3606,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["changeissuecategorymutation",{"_index":3589,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["changepassword",{"_index":4776,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["changes",{"_index":553,"title":{},"body":{"interfaces/AppState.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"components/IssueDetailComponent.html":{},"classes/LayoutNode.html":{},"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"classes/Vector.html":{},"index.html":{}}}],["changes.listset",{"_index":5261,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["changes.listset.currentvalue",{"_index":5263,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["changeset",{"_index":2797,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/SetEditorComponent.html":{}}}],["changing",{"_index":1821,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["charset=utf",{"_index":2480,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["check",{"_index":1789,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueLabelComponent.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"classes/Vector.html":{}}}],["checkbox",{"_index":5315,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["checked",{"_index":1635,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"components/IssueDetailComponent.html":{}}}],["checkimstype",{"_index":1432,"title":{},"body":{"components/CreateComponentDialogComponent.html":{}}}],["checkimstype(returnfromselect",{"_index":1429,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["checking",{"_index":5088,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{}}}],["checks",{"_index":964,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/FrameComponent.html":{},"components/RegisterComponent.html":{}}}],["checkusernamegql",{"_index":5145,"title":{},"body":{"components/RegisterComponent.html":{}}}],["chevron_left",{"_index":1668,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["chevron_right",{"_index":1669,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"components/LinkedIssueItemComponent.html":{}}}],["child",{"_index":2663,"title":{},"body":{"components/IssueContentsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/NodeDetailsComponent.html":{},"components/SetEditorDialogComponent.html":{}}}],["child(2",{"_index":5320,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["child(3",{"_index":5322,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["child(4",{"_index":5324,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["child.x",{"_index":3273,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["child.y",{"_index":3274,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["child::after",{"_index":3823,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["childgroup",{"_index":3217,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["childnode",{"_index":3219,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["childnode.allowedanchors",{"_index":3282,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["childnodepositions",{"_index":3208,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["children",{"_index":510,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["children.has(childid",{"_index":3264,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["circumstance",{"_index":3717,"title":{},"body":{"classes/LayoutNode.html":{}}}],["class",{"_index":61,"title":{"classes/CCIMSValidators.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"classes/LayoutNode.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"classes/TimeFormatter.html":{},"classes/Vector.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"coverage.html":{},"index.html":{},"interfaces/userMock.html":{}}}],["class=\"timeline",{"_index":2657,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["classes",{"_index":720,"title":{},"body":{"classes/CCIMSValidators.html":{},"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"classes/TimeFormatter.html":{},"classes/Vector.html":{},"index.html":{},"overview.html":{}}}],["classname",{"_index":2987,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["clean",{"_index":4563,"title":{},"body":{"interfaces/Positions.html":{}}}],["clear",{"_index":2656,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["cleartimeout(this.loadtimeout",{"_index":1855,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["cli",{"_index":5801,"title":{},"body":{"index.html":{}}}],["click",{"_index":2122,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Positions.html":{},"components/RemoveDialogComponent.html":{}}}],["clicked",{"_index":1645,"title":{},"body":{"components/CreateProjectDialogComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/TextDisplayComponent.html":{}}}],["clickedonrow",{"_index":3390,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["clickedonrow(row",{"_index":3402,"title":{},"body":{"components/IssueListComponent.html":{}}}],["clickedonrow(rowdata",{"_index":4882,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["clicking",{"_index":4461,"title":{},"body":{"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{}}}],["clicks",{"_index":2211,"title":{},"body":{"components/FrameComponent.html":{}}}],["client",{"_index":2511,"title":{},"body":{"modules/GraphQLModule.html":{},"index.html":{}}}],["clientmutationid",{"_index":1605,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["clockwise",{"_index":5639,"title":{},"body":{"classes/Vector.html":{}}}],["close",{"_index":814,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"injectables/IssueStoreService.html":{},"interfaces/Positions.html":{}}}],["close(closeinput",{"_index":3608,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["closebutton",{"_index":2473,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["closecomponentactions(reload",{"_index":4544,"title":{},"body":{"interfaces/Positions.html":{}}}],["closed",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{}}}],["closeinput",{"_index":3611,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["closeissue",{"_index":2624,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["closeissuegql",{"_index":3584,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["closeissueinput",{"_index":3609,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["closeissuemutation",{"_index":3583,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["closes",{"_index":2631,"title":{},"body":{"components/IssueContentsComponent.html":{},"interfaces/Positions.html":{}}}],["closing",{"_index":4311,"title":{},"body":{"interfaces/Positions.html":{},"components/SetEditorComponent.html":{}}}],["clr/ui",{"_index":5768,"title":{},"body":{"dependencies.html":{}}}],["cluster_appmodule",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":335,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":336,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_graphsmodule",{"_index":2519,"title":{},"body":{"modules/GraphsModule.html":{},"overview.html":{}}}],["cluster_graphsmodule_declarations",{"_index":2520,"title":{},"body":{"modules/GraphsModule.html":{},"overview.html":{}}}],["cluster_graphsmodule_exports",{"_index":2521,"title":{},"body":{"modules/GraphsModule.html":{},"overview.html":{}}}],["coalescable_events",{"_index":845,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalesce",{"_index":901,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalesced",{"_index":812,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["coalesced.push",{"_index":943,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalescedtimelineitem",{"_index":805,"title":{"interfaces/CoalescedTimelineItem.html":{}},"body":{"interfaces/CoalescedTimelineItem.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"coverage.html":{}}}],["coalescelist",{"_index":899,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalescelist.length",{"_index":906,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalescelist.push(timelineitem",{"_index":922,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalescelist[0",{"_index":938,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalescelist[0].createdat",{"_index":944,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalescing",{"_index":917,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalescingtype",{"_index":898,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["code",{"_index":2576,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"injectables/IssueStoreService.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/ProjectMembersComponent.html":{},"index.html":{},"interfaces/userMock.html":{}}}],["codechange",{"_index":3932,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["codedidchange",{"_index":3931,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["codegen",{"_index":5827,"title":{},"body":{"index.html":{}}}],["codegeneration",{"_index":5815,"title":{},"body":{"index.html":{}}}],["codegenerator",{"_index":1313,"title":{},"body":{"injectables/ComponentStoreService.html":{},"index.html":{}}}],["collect",{"_index":4203,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["collection",{"_index":2017,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["collections",{"_index":2296,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"dependencies.html":{}}}],["collects",{"_index":3004,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["color",{"_index":277,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"modules/AppModule.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CursorPaginatorComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/LabelStoreService.html":{},"components/MarkdownEditorComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"dependencies.html":{}}}],["color($accent",{"_index":5377,"title":{},"body":{"components/SideNavComponent.html":{}}}],["color.length",{"_index":3353,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["color.match(/^rgb",{"_index":3344,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["color.match(/^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d",{"_index":3346,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["color.slice(1).replace",{"_index":3352,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["color[1",{"_index":3347,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["color[2",{"_index":3348,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["color[3",{"_index":3349,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["colorpickermodule",{"_index":435,"title":{},"body":{"modules/AppModule.html":{}}}],["column",{"_index":2262,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["columns",{"_index":2269,"title":{},"body":{"components/FrameComponent.html":{}}}],["columnstodisplay",{"_index":3381,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["combination",{"_index":5054,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["combined",{"_index":3055,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["combinelatest",{"_index":3049,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{}}}],["combinelatest([this.selectedcategories",{"_index":3067,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["combinelatest([this.ss.state",{"_index":3189,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["combines",{"_index":3005,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["comes",{"_index":4332,"title":{},"body":{"interfaces/Positions.html":{}}}],["coming",{"_index":3689,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["comment",{"_index":976,"title":{},"body":{"components/CommentComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{}}}],["comment'},{'name",{"_index":112,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["comment.component.html",{"_index":980,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment.component.scss",{"_index":979,"title":{},"body":{"components/CommentComponent.html":{}}}],["commentcomponent",{"_index":111,"title":{"components/CommentComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["commentcontainer",{"_index":5524,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["commented",{"_index":1046,"title":{},"body":{"components/CommentComponent.html":{}}}],["commenteditor",{"_index":2622,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["commentid",{"_index":985,"title":{},"body":{"components/CommentComponent.html":{}}}],["commentissue",{"_index":2625,"title":{},"body":{"components/IssueContentsComponent.html":{},"injectables/IssueStoreService.html":{}}}],["commentissue(commentissueinput",{"_index":3612,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["commentissuegql",{"_index":3578,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["commentissueinput",{"_index":3614,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["commentissuemutation",{"_index":3577,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["commentsub",{"_index":1016,"title":{},"body":{"components/CommentComponent.html":{}}}],["commonly",{"_index":722,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["commonmodule",{"_index":403,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["communicate",{"_index":5817,"title":{},"body":{"index.html":{}}}],["communicated",{"_index":2214,"title":{},"body":{"components/FrameComponent.html":{}}}],["communicating",{"_index":3936,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["communication",{"_index":2460,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["compare",{"_index":3366,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["compared",{"_index":3854,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["compatibility",{"_index":2029,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"injectables/UsersService.html":{}}}],["complete",{"_index":4550,"title":{},"body":{"interfaces/Positions.html":{}}}],["completely",{"_index":4548,"title":{},"body":{"interfaces/Positions.html":{}}}],["complex",{"_index":4599,"title":{},"body":{"interfaces/Positions.html":{}}}],["compodoc",{"_index":3954,"title":{},"body":{"components/MarkdownPreviewComponent.html":{},"index.html":{}}}],["compodocfor",{"_index":5811,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["component'},{'name",{"_index":119,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["component(s",{"_index":4210,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["component.component",{"_index":439,"title":{},"body":{"modules/AppModule.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["component.component.html",{"_index":5213,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{}}}],["component.component.scss",{"_index":5212,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{}}}],["component.component.ts",{"_index":5211,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{},"coverage.html":{}}}],["component.component.ts:10",{"_index":5214,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{}}}],["component.component.ts:13",{"_index":5217,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{}}}],["component.component.ts:16",{"_index":5218,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{}}}],["component.component.ts:21",{"_index":5216,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{}}}],["component.component.ts:25",{"_index":5215,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{}}}],["component.graphql",{"_index":1316,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["component.id",{"_index":1260,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["component.name",{"_index":1261,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueItemComponent.html":{},"interfaces/IssueNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["component.node",{"_index":4190,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["component/:componentid",{"_index":518,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component/:componentid/issue/:issueid",{"_index":520,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component/project",{"_index":372,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ProjectListComponent.html":{},"coverage.html":{}}}],["component/query.component",{"_index":838,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"modules/GraphsModule.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["component/query.component.ts",{"_index":5042,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["component/query.component.ts:134",{"_index":5110,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:135",{"_index":5115,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:136",{"_index":5116,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:141",{"_index":5117,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:142",{"_index":5118,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:144",{"_index":5109,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:163",{"_index":5112,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:173",{"_index":5111,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:206",{"_index":5113,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:212",{"_index":5114,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:34",{"_index":5046,"title":{},"body":{"directives/QueryBodyDirective.html":{}}}],["component/query.component.ts:35",{"_index":5047,"title":{},"body":{"directives/QueryBodyDirective.html":{}}}],["component/query.component.ts:46",{"_index":5105,"title":{},"body":{"directives/QueryButtonDirective.html":{}}}],["component/query.component.ts:47",{"_index":5106,"title":{},"body":{"directives/QueryButtonDirective.html":{}}}],["component/remove",{"_index":438,"title":{},"body":{"modules/AppModule.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["component_context_menu_data",{"_index":1104,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["component_template",{"_index":100,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["componentcontextmenu",{"_index":4300,"title":{},"body":{"interfaces/Positions.html":{}}}],["componentcontextmenucomponent",{"_index":113,"title":{"components/ComponentContextMenuComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["componentcontextmenucomponent.componentcontextmenucomponent",{"_index":4301,"title":{},"body":{"interfaces/Positions.html":{}}}],["componentcontextmenucomponent.componentcontextmenuservice",{"_index":4293,"title":{},"body":{"interfaces/Positions.html":{}}}],["componentcontextmenucomponent.last_height",{"_index":1077,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["componentcontextmenucomponent.last_width",{"_index":1080,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["componentcontextmenucomponent.min_height",{"_index":1137,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["componentcontextmenucomponent.min_width",{"_index":1135,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["componentcontextmenudata",{"_index":1059,"title":{"interfaces/ComponentContextMenuData.html":{}},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"coverage.html":{}}}],["componentcontextmenunodeid",{"_index":4302,"title":{},"body":{"interfaces/Positions.html":{}}}],["componentcontextmenuservice",{"_index":1099,"title":{"injectables/ComponentContextMenuService.html":{}},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["componentdetails",{"_index":5972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["componentfilter",{"_index":1391,"title":{},"body":{"injectables/ComponentsService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["componentid",{"_index":1292,"title":{},"body":{"interfaces/ComponentNode.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["componentinterface",{"_index":2289,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["componentinterfacefilter",{"_index":1392,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["componentinterfaceprovider",{"_index":3382,"title":{},"body":{"components/IssueListComponent.html":{}}}],["componentinterfaces",{"_index":3865,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["componentinterfacesub",{"_index":3383,"title":{},"body":{"components/IssueListComponent.html":{}}}],["componentlist",{"_index":1452,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["componentnode",{"_index":1205,"title":{"interfaces/ComponentNode.html":{}},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["componentnodes",{"_index":4567,"title":{},"body":{"interfaces/Positions.html":{}}}],["componentportal",{"_index":1090,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["componentportal(componentcontextmenucomponent",{"_index":1129,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentStoreService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/QueriesService.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"overview.html":{}}}],["components.node.component.name",{"_index":4217,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["components.node.consumedby.nodes",{"_index":4218,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["components.service",{"_index":5039,"title":{},"body":{"injectables/QueriesService.html":{}}}],["componentsize",{"_index":4725,"title":{},"body":{"interfaces/Positions.html":{}}}],["componentsservice",{"_index":1366,"title":{"injectables/ComponentsService.html":{}},"body":{"injectables/ComponentsService.html":{},"injectables/QueriesService.html":{},"coverage.html":{}}}],["componentstore",{"_index":1408,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["componentstoreservice",{"_index":1304,"title":{"injectables/ComponentStoreService.html":{}},"body":{"injectables/ComponentStoreService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["componentsub",{"_index":3384,"title":{},"body":{"components/IssueListComponent.html":{}}}],["composed",{"_index":3840,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["compute",{"_index":2342,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["computed",{"_index":3975,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["computerelatedfolders",{"_index":5694,"title":{},"body":{"coverage.html":{}}}],["computerelatedfolders(linkissues",{"_index":2334,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["computes",{"_index":2401,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["concat",{"_index":2150,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["condition",{"_index":5830,"title":{},"body":{"index.html":{}}}],["configuration",{"_index":479,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["configurations",{"_index":2458,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["configured",{"_index":482,"title":{},"body":{"modules/AppModule.html":{}}}],["confirm",{"_index":1600,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["confirmation",{"_index":2124,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["confirmbuttontext",{"_index":1599,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["confirmdeletedialogref",{"_index":1029,"title":{},"body":{"components/CommentComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["confirmdeletedialogref.afterclosed().subscribe(del",{"_index":1038,"title":{},"body":{"components/CommentComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["confirmdeletedialogref.afterclosed().subscribe(deletedata",{"_index":4222,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["confirmed",{"_index":1040,"title":{},"body":{"components/CommentComponent.html":{}}}],["confirms",{"_index":1462,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["confirmvalidator",{"_index":5135,"title":{},"body":{"components/RegisterComponent.html":{}}}],["congiuration",{"_index":2468,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["conjunction",{"_index":5481,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["connect",{"_index":1231,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{}}}],["connectconsumingcomponents(interfacenode",{"_index":4620,"title":{},"body":{"interfaces/Positions.html":{}}}],["connected",{"_index":3714,"title":{},"body":{"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["connectedposition",{"_index":1086,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["connectedto",{"_index":3700,"title":{},"body":{"classes/LayoutNode.html":{}}}],["connecting",{"_index":4583,"title":{},"body":{"interfaces/Positions.html":{}}}],["connection",{"_index":872,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/LayoutNode.html":{},"components/ProjectIssueListComponent.html":{},"classes/Vector.html":{}}}],["connections",{"_index":4557,"title":{},"body":{"interfaces/Positions.html":{}}}],["connector",{"_index":1294,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["connectto",{"_index":3709,"title":{},"body":{"classes/LayoutNode.html":{}}}],["connectto(other",{"_index":3737,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["connecttoofferingcomponent(node",{"_index":4614,"title":{},"body":{"interfaces/Positions.html":{}}}],["considered",{"_index":1766,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["consists",{"_index":4287,"title":{},"body":{"interfaces/Positions.html":{}}}],["console",{"_index":5570,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["console.error('oh",{"_index":1722,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["console.log('dark",{"_index":5340,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["console.log('deleted",{"_index":2131,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["console.log('error",{"_index":5068,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"injectables/UserNotifyService.html":{}}}],["console.log('node",{"_index":1721,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["console.log('not",{"_index":2132,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["console.log('register",{"_index":303,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('result",{"_index":5067,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["console.log('setting",{"_index":4361,"title":{},"body":{"interfaces/Positions.html":{}}}],["console.log(`[graphql",{"_index":2491,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["console.log(`[network",{"_index":2493,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["const",{"_index":260,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"interfaces/User.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":1794,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueFilterComponent.html":{},"classes/NodeCache.html":{}}}],["constructed",{"_index":2464,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["constructing",{"_index":2002,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/typealiases.html":{}}}],["construction",{"_index":2927,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["constructor",{"_index":33,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{}}}],["constructor(@inject(component_context_menu_data",{"_index":1146,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["constructor(activatedroute",{"_index":3396,"title":{},"body":{"components/IssueListComponent.html":{}}}],["constructor(apiservice",{"_index":3167,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["constructor(authservice",{"_index":4984,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["constructor(breakpointobserver",{"_index":2231,"title":{},"body":{"components/FrameComponent.html":{},"components/TopToolbarComponent.html":{}}}],["constructor(changedetector",{"_index":5501,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["constructor(components",{"_index":5029,"title":{},"body":{"injectables/QueriesService.html":{}}}],["constructor(createinterfacemutation",{"_index":2581,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["constructor(createissue",{"_index":3571,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["constructor(data",{"_index":1058,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["constructor(dataservice",{"_index":768,"title":{},"body":{"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{}}}],["constructor(dialog",{"_index":1458,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["constructor(dialogref",{"_index":34,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["constructor(element",{"_index":5104,"title":{},"body":{"directives/QueryButtonDirective.html":{}}}],["constructor(fb",{"_index":5141,"title":{},"body":{"components/RegisterComponent.html":{}}}],["constructor(getfullissuegraphdataquery",{"_index":2908,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["constructor(getlabelsgql",{"_index":3681,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["constructor(http",{"_index":661,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["constructor(id",{"_index":1837,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"classes/Vector.html":{}}}],["constructor(initialposition",{"_index":3287,"title":{},"body":{"classes/IssueGroupContainerParentBehaviour.html":{}}}],["constructor(labelstore",{"_index":3667,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["constructor(maticonregistry",{"_index":285,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(notify",{"_index":5108,"title":{},"body":{"components/QueryComponent.html":{}}}],["constructor(overlay",{"_index":1202,"title":{},"body":{"injectables/ComponentContextMenuService.html":{}}}],["constructor(private",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"interfaces/userMock.html":{}}}],["constructor(projectstore",{"_index":4816,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["constructor(public",{"_index":62,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/IssueGraphControlsComponent.html":{},"classes/MultiSourceList.html":{},"components/ProfileSettingsDialogComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["constructor(qlistprojectcomponents",{"_index":1373,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["constructor(qlistprojects",{"_index":5016,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["constructor(qsearchusers",{"_index":5582,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(queries",{"_index":1896,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/NodeCache.html":{}}}],["constructor(route",{"_index":3889,"title":{},"body":{"components/LoginComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProjectIssueListComponent.html":{}}}],["constructor(router",{"_index":625,"title":{},"body":{"guards/AuthGuard.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"components/NodeDetailsComponent.html":{},"injectables/StateService.html":{}}}],["constructor(spec",{"_index":3970,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["constructor(ss",{"_index":5355,"title":{},"body":{"components/SideNavComponent.html":{}}}],["constructor(template",{"_index":5045,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["constructor(toastr",{"_index":5564,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["constructor(updatecomponentmutation",{"_index":1325,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["constructor(x",{"_index":3742,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["constructors",{"_index":1239,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["consumed",{"_index":2920,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{}}}],["consumedby",{"_index":2363,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["consumer",{"_index":4379,"title":{},"body":{"interfaces/Positions.html":{}}}],["consumerid",{"_index":4621,"title":{},"body":{"interfaces/Positions.html":{}}}],["consuming",{"_index":4584,"title":{},"body":{"interfaces/Positions.html":{}}}],["contain",{"_index":808,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/FilterSelection.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"miscellaneous/typealiases.html":{}}}],["contained",{"_index":1255,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/RelationEdge.html":{}}}],["container",{"_index":1197,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentNode.html":{},"components/FrameComponent.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"interfaces/Position.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"interfaces/RelationEdge.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{},"miscellaneous/enumerations.html":{}}}],["containers",{"_index":4730,"title":{},"body":{"interfaces/Positions.html":{}}}],["containing",{"_index":902,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/FrameComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/TopToolbarComponent.html":{},"index.html":{}}}],["contains",{"_index":1977,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"injectables/LabelStoreService.html":{},"components/MarkdownEditorComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["content",{"_index":267,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"classes/CCIMSValidators.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{}}}],["content.nativeelement.addeventlistener('mousedown",{"_index":1142,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["contentchild",{"_index":788,"title":{},"body":{"components/CacheNodeComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["contentchild(itemdirective",{"_index":781,"title":{},"body":{"components/CacheNodeComponent.html":{},"components/SetEditorComponent.html":{}}}],["contentchild(querybodydirective",{"_index":5077,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["contentchild(querybuttondirective",{"_index":5078,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["contentchild(timelinecoalesceditemsdirective",{"_index":5489,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["contentchild(timelineitemdeleteddirective",{"_index":5491,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["contentchild(timelinesingleitemdirective",{"_index":5487,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["contents",{"_index":2619,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["contents'},{'name",{"_index":133,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["contents.component",{"_index":467,"title":{},"body":{"modules/AppModule.html":{},"components/CommentComponent.html":{}}}],["contents.component.html",{"_index":2621,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.scss",{"_index":2620,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts",{"_index":2617,"title":{},"body":{"components/IssueContentsComponent.html":{},"coverage.html":{}}}],["contents.component.ts:19",{"_index":2628,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts:21",{"_index":2629,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts:33",{"_index":2636,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts:35",{"_index":2627,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts:56",{"_index":2630,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts:61",{"_index":2633,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts:66",{"_index":2632,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contentvalidator",{"_index":729,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["context",{"_index":443,"title":{},"body":{"modules/AppModule.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"modules/GraphQLModule.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"interfaces/Positions.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["contextmenutype",{"_index":4483,"title":{},"body":{"interfaces/Positions.html":{}}}],["contextmenutypefornodetype(node",{"_index":4487,"title":{},"body":{"interfaces/Positions.html":{}}}],["continue",{"_index":924,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/Vector.html":{}}}],["contrast",{"_index":809,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"modules/GraphQLModule.html":{}}}],["control",{"_index":1676,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"interfaces/DialogData-1.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["control.value",{"_index":2134,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["control.value}).subscribe(({data",{"_index":5180,"title":{},"body":{"components/RegisterComponent.html":{}}}],["controlled",{"_index":1661,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["controls",{"_index":1103,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"components/IssueGraphControlsComponent.html":{},"components/RegisterComponent.html":{}}}],["controls'},{'name",{"_index":142,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["controls.component",{"_index":502,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GraphsModule.html":{}}}],["controls.component.html",{"_index":3012,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.scss",{"_index":3011,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts",{"_index":3000,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"coverage.html":{}}}],["controls.component.ts:108",{"_index":3029,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:26",{"_index":3041,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:27",{"_index":3043,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:29",{"_index":3044,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:32",{"_index":3038,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:33",{"_index":3036,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:34",{"_index":3048,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:36",{"_index":3047,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:38",{"_index":3039,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:39",{"_index":3020,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:41",{"_index":3037,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:50",{"_index":3046,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:57",{"_index":3033,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:66",{"_index":3021,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:74",{"_index":3028,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls/issue",{"_index":501,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GraphsModule.html":{},"components/IssueGraphControlsComponent.html":{},"coverage.html":{}}}],["conversion",{"_index":2903,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["convert",{"_index":2284,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueLabelComponent.html":{}}}],["converts",{"_index":2325,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"classes/TimeFormatter.html":{}}}],["convertvalueforfilter",{"_index":5735,"title":{},"body":{"coverage.html":{}}}],["convertvalueforfilter(predicates[id].type",{"_index":2879,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["convertvalueforfilter(type",{"_index":2857,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["coordinate",{"_index":3157,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["coordinates",{"_index":4489,"title":{},"body":{"interfaces/Positions.html":{}}}],["coressponding",{"_index":3026,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["corner",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["corner.svg",{"_index":300,"title":{},"body":{"components/AppComponent.html":{}}}],["correct",{"_index":751,"title":{},"body":{"classes/CCIMSValidators.html":{},"interfaces/CoalescedTimelineItem.html":{},"interfaces/Positions.html":{},"classes/TimeFormatter.html":{}}}],["correctly",{"_index":1936,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["correspond",{"_index":2179,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"components/SetEditorComponent.html":{},"interfaces/TextFragment.html":{}}}],["corresponding",{"_index":865,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{}}}],["corresponds",{"_index":3841,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{}}}],["count",{"_index":890,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["count(c",{"_index":1965,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["count.tostring",{"_index":4661,"title":{},"body":{"interfaces/Positions.html":{}}}],["counter",{"_index":5642,"title":{},"body":{"classes/Vector.html":{}}}],["counts",{"_index":2311,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{}}}],["cover",{"_index":4088,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["coverage",{"_index":5650,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":115,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["create(issueinput",{"_index":3615,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["create(name",{"_index":2592,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"injectables/ProjectStoreService.html":{}}}],["create/edit",{"_index":1484,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["createcomponent",{"_index":1319,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["createcomponent(input",{"_index":1340,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["createcomponentdata",{"_index":1399,"title":{"interfaces/CreateComponentData.html":{}},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"coverage.html":{}}}],["createcomponentdialogcomponent",{"_index":114,"title":{"components/CreateComponentDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createcomponentdialogref",{"_index":4770,"title":{},"body":{"interfaces/Positions.html":{}}}],["createcomponentdialogref.afterclosed().subscribe(componentinformation",{"_index":4772,"title":{},"body":{"interfaces/Positions.html":{}}}],["createcomponentgql",{"_index":1332,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["createcomponentinput",{"_index":1341,"title":{},"body":{"injectables/ComponentStoreService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["createcomponentinterfacegql",{"_index":2582,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["createcomponentinterfaceinput",{"_index":2600,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["createcomponentmutation",{"_index":1331,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["createcomponentnode",{"_index":1221,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["createcomponentnode(component",{"_index":1258,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["createconsumptionedge",{"_index":1226,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["createconsumptionedge(componentid",{"_index":1290,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["created",{"_index":925,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"injectables/ComponentStoreService.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{}}}],["createdby",{"_index":940,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["createeditlabeldialogcomponent",{"_index":116,"title":{"components/CreateEditLabelDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createeditlabeldialogdata",{"_index":1450,"title":{"interfaces/CreateEditLabelDialogData.html":{}},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"coverage.html":{}}}],["createerrorlink",{"_index":5710,"title":{},"body":{"coverage.html":{}}}],["createerrorlink(authservice",{"_index":2482,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["createinterfacedata",{"_index":1550,"title":{"interfaces/CreateInterfaceData.html":{}},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["createinterfacedialogcomponent",{"_index":120,"title":{"components/CreateInterfaceDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createinterfacedialogref",{"_index":4422,"title":{},"body":{"interfaces/Positions.html":{}}}],["createinterfacedialogref.afterclosed().subscribe((interfaceid",{"_index":4424,"title":{},"body":{"interfaces/Positions.html":{}}}],["createinterfacemutation",{"_index":2591,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["createinterfacenode",{"_index":1222,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["createinterfacenode(intrface",{"_index":1264,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["createinterfaceprovisionedge",{"_index":1227,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["createinterfaceprovisionedge(componentid",{"_index":1295,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["createissue",{"_index":3600,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["createissuedialogcomponent",{"_index":122,"title":{"components/CreateIssueDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createissuefoldernode",{"_index":1224,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["createissuefoldernode(node",{"_index":1277,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["createissuegql",{"_index":3572,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["createissuegroupcontainernode",{"_index":1223,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["createissuegroupcontainernode(node",{"_index":1270,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["createissueinput",{"_index":1587,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"injectables/IssueStoreService.html":{}}}],["createitem",{"_index":4065,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["createnode",{"_index":4121,"title":{},"body":{"classes/NodeCache.html":{}}}],["createnode(id",{"_index":2020,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["createproject",{"_index":4990,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["createprojectdialogcomponent",{"_index":124,"title":{"components/CreateProjectDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createprojectdialogref",{"_index":4829,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["createprojectdialogref.afterclosed().subscribe(result",{"_index":4831,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["createprojectgql",{"_index":4991,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["createprojectinput",{"_index":5002,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["createrelationedge",{"_index":1225,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["createrelationedge(sourceid",{"_index":1280,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["creates",{"_index":1449,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphQLModule.html":{},"injectables/IssueGraphApiService.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["creating",{"_index":1486,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["creation",{"_index":1236,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"modules/GraphQLModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/variables.html":{}}}],["creator",{"_index":929,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["creator's",{"_index":932,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["credentials",{"_index":2500,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["crud",{"_index":3558,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["css",{"_index":4338,"title":{},"body":{"interfaces/Positions.html":{}}}],["current",{"_index":549,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["current_user_node",{"_index":2637,"title":{},"body":{"components/IssueContentsComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["current_user_node.id",{"_index":5951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentcolor",{"_index":5318,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["currentdata",{"_index":1816,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["currenthasnode(key",{"_index":1978,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["currentissueid",{"_index":4532,"title":{},"body":{"interfaces/Positions.html":{}}}],["currentitems",{"_index":1902,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["currently",{"_index":617,"title":{},"body":{"guards/AuthGuard.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"components/LabelSearchComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{}}}],["currentqueryparams",{"_index":1820,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["currentuser",{"_index":639,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/IssueContentsComponent.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{}}}],["currentusergql",{"_index":5585,"title":{},"body":{"injectables/UsersService.html":{}}}],["currentusersub",{"_index":2640,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["currentusersubject",{"_index":653,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["currentuservalue",{"_index":660,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["currentviewwindow",{"_index":4683,"title":{},"body":{"interfaces/Positions.html":{}}}],["currentvisiblearea",{"_index":4299,"title":{},"body":{"interfaces/Positions.html":{}}}],["cursor",{"_index":126,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["cursor(c",{"_index":1962,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["cursor[objkey",{"_index":4039,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["cursorpaginatorcomponent",{"_index":125,"title":{"components/CursorPaginatorComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cursory",{"_index":3805,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["custom_elements_schema",{"_index":347,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["customevent",{"_index":4406,"title":{},"body":{"interfaces/Positions.html":{}}}],["d4d4d4",{"_index":5518,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["dark",{"_index":3341,"title":{},"body":{"components/IssueLabelComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["dark_mode",{"_index":5332,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["dashboard",{"_index":3090,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["dashed",{"_index":4558,"title":{},"body":{"interfaces/Positions.html":{}}}],["data",{"_index":234,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/UserItemComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["data.checkusername",{"_index":5181,"title":{},"body":{"components/RegisterComponent.html":{}}}],["data.color",{"_index":1499,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["data.component.id",{"_index":3466,"title":{},"body":{"components/IssueListComponent.html":{}}}],["data.createproject.project.id",{"_index":1649,"title":{},"body":{"components/CreateProjectDialogComponent.html":{}}}],["data.currentuser",{"_index":5953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.emptyresultslabel",{"_index":5312,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["data.emptysuggestionslabel",{"_index":5313,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["data.length",{"_index":5939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node",{"_index":5947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.assignees.pageinfo",{"_index":5927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.assignees.totalcount",{"_index":5926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.components.pageinfo",{"_index":5889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.components.totalcount",{"_index":5888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.interfaces.pageinfo",{"_index":5896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.interfaces.totalcount",{"_index":5895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.issues.pageinfo",{"_index":5900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.issues.totalcount",{"_index":5899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.issuesonlocation.pageinfo",{"_index":5906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.issuesonlocation.totalcount",{"_index":5905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.labels.nodes",{"_index":3696,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["data.node.labels.pageinfo",{"_index":5920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.labels.totalcount",{"_index":5919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.linkedbyissues.pageinfo",{"_index":5936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.linkedbyissues.totalcount",{"_index":5935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.linkingissues.nodes.map(gqlissue",{"_index":2332,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["data.node.linkstoissues.pageinfo",{"_index":5931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.linkstoissues.totalcount",{"_index":5930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.locations.pageinfo",{"_index":5916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.locations.totalcount",{"_index":5915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.timeline.pageinfo",{"_index":5911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.timeline.totalcount",{"_index":5910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.projects.edges.map(edge",{"_index":5010,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["data.projects.pageinfo",{"_index":5884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.projects.totalcount",{"_index":5883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.searchuser",{"_index":5602,"title":{},"body":{"injectables/UsersService.html":{}}}],["data.title",{"_index":5201,"title":{},"body":{"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{}}}],["data.ts",{"_index":2275,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["data.ts:100",{"_index":2423,"title":{},"body":{"classes/GraphInterface.html":{}}}],["data.ts:101",{"_index":2425,"title":{},"body":{"classes/GraphInterface.html":{}}}],["data.ts:102",{"_index":2426,"title":{},"body":{"classes/GraphInterface.html":{}}}],["data.ts:103",{"_index":2422,"title":{},"body":{"classes/GraphInterface.html":{}}}],["data.ts:104",{"_index":2424,"title":{},"body":{"classes/GraphInterface.html":{}}}],["data.ts:106",{"_index":2427,"title":{},"body":{"classes/GraphInterface.html":{}}}],["data.ts:119",{"_index":2428,"title":{},"body":{"classes/GraphInterface.html":{}}}],["data.ts:133",{"_index":2280,"title":{},"body":{"classes/GraphComponent.html":{}}}],["data.ts:134",{"_index":2278,"title":{},"body":{"classes/GraphComponent.html":{}}}],["data.ts:135",{"_index":2279,"title":{},"body":{"classes/GraphComponent.html":{}}}],["data.ts:141",{"_index":2283,"title":{},"body":{"classes/GraphComponent.html":{}}}],["data.ts:152",{"_index":2287,"title":{},"body":{"classes/GraphComponent.html":{}}}],["data.ts:169",{"_index":2432,"title":{},"body":{"classes/GraphIssue.html":{}}}],["data.ts:170",{"_index":2431,"title":{},"body":{"classes/GraphIssue.html":{}}}],["data.ts:171",{"_index":2434,"title":{},"body":{"classes/GraphIssue.html":{}}}],["data.ts:172",{"_index":2433,"title":{},"body":{"classes/GraphIssue.html":{}}}],["data.ts:178",{"_index":2436,"title":{},"body":{"classes/GraphIssue.html":{}}}],["data.ts:190",{"_index":2435,"title":{},"body":{"classes/GraphIssue.html":{}}}],["data.ts:37",{"_index":2421,"title":{},"body":{"classes/GraphDataFactory.html":{}}}],["data.ts:48",{"_index":2420,"title":{},"body":{"classes/GraphDataFactory.html":{}}}],["data.userstoadd",{"_index":4937,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["data.userstodelete",{"_index":4946,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["data.values",{"_index":3476,"title":{},"body":{"components/IssueListComponent.html":{}}}],["data.verificationname",{"_index":5210,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["data/issue",{"_index":3051,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["data/label/label",{"_index":2156,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["data/project/project",{"_index":543,"title":{},"body":{"interfaces/AppState.html":{},"components/ProjectListComponent.html":{},"injectables/StateService.html":{}}}],["data[0]?.id",{"_index":5941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data[data.length",{"_index":5943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dataaspromise",{"_index":1701,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["database",{"_index":232,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectStoreService.html":{}}}],["datalist",{"_index":834,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/IssueContentsComponent.html":{},"components/IssueListComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["datalist(this.queries",{"_index":2110,"title":{},"body":{"injectables/DataService.html":{}}}],["datanode",{"_index":785,"title":{"classes/DataNode.html":{}},"body":{"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/NodeCache.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"coverage.html":{}}}],["datanode#subscribelazy",{"_index":1014,"title":{},"body":{"components/CommentComponent.html":{}}}],["datanode(this.queries",{"_index":2023,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["datanode.hasdata",{"_index":2035,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["datanode.insertresult(node",{"_index":2046,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["datanodes",{"_index":2013,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["dataquery",{"_index":1681,"title":{"classes/DataQuery.html":{}},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dataquery#interactive",{"_index":1761,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["dataquery:106",{"_index":1709,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:140",{"_index":1715,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:183",{"_index":1728,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:192",{"_index":1724,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:211",{"_index":1730,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:222",{"_index":1727,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:250",{"_index":1735,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:334",{"_index":1714,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:55",{"_index":1708,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:56",{"_index":1713,"title":{},"body":{"classes/DataNode.html":{}}}],["dataservice",{"_index":769,"title":{"injectables/DataService.html":{}},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["dataservice.getlist(spec.sourcenodes",{"_index":4012,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["dataservice.getnode(somenodeid",{"_index":1720,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["datasource",{"_index":3385,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["datatype",{"_index":2840,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":5444,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["date(datestring",{"_index":5458,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["date(time).tostring",{"_index":5456,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["date.now",{"_index":1858,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["date.parse(firstitem.createdat",{"_index":962,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["datestring",{"_index":5450,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["day",{"_index":5476,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["days",{"_index":81,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"classes/TimeFormatter.html":{}}}],["db",{"_index":1558,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{}}}],["deal",{"_index":1798,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["debounce",{"_index":1711,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["debounced",{"_index":1909,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["debouncetime",{"_index":4275,"title":{},"body":{"interfaces/Positions.html":{}}}],["debouncetime(300",{"_index":4360,"title":{},"body":{"interfaces/Positions.html":{}}}],["debugnologin",{"_index":5824,"title":{},"body":{"index.html":{}}}],["decide",{"_index":889,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["decides",{"_index":915,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["declarations",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"index.html":{}}}],["declare",{"_index":1777,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{}}}],["declared",{"_index":2523,"title":{},"body":{"modules/GraphsModule.html":{}}}],["decode",{"_index":3845,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["decodelistid",{"_index":2087,"title":{},"body":{"injectables/DataService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"interfaces/NodeId.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["decodelistid(id",{"_index":3871,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["decodelistid(id).type",{"_index":2108,"title":{},"body":{"injectables/DataService.html":{}}}],["decodenodeid",{"_index":1744,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["decodenodeid(firstkey",{"_index":1970,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["decodenodeid(id",{"_index":3843,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"interfaces/NodeId.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["decodenodeid(keys[keys.length",{"_index":1976,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["decodenodeid(parts[0",{"_index":3872,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["decorators",{"_index":243,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CacheNodeComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TimelineItemComponent.html":{}}}],["deep",{"_index":1634,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/LabelSearchComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/TimelineItemComponent.html":{}}}],["default",{"_index":50,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["defaultdictionary",{"_index":2294,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["defaultmenutitle",{"_index":5349,"title":{},"body":{"components/SideNavComponent.html":{}}}],["defaultoptions",{"_index":2454,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":4951,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["define",{"_index":1409,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"modules/GraphQLModule.html":{},"directives/ItemDirective.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":37,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"index.html":{}}}],["defines",{"_index":1629,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["definition",{"_index":5825,"title":{},"body":{"index.html":{}}}],["definitions",{"_index":1235,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"index.html":{}}}],["degrees",{"_index":3747,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["del",{"_index":1039,"title":{},"body":{"components/CommentComponent.html":{},"classes/MultiSourceList.html":{},"components/ProjectOverviewComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["delay",{"_index":1732,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["delete",{"_index":1032,"title":{},"body":{"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/typealiases.html":{}}}],["delete(id",{"_index":2595,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"injectables/ProjectStoreService.html":{}}}],["deletecomment",{"_index":983,"title":{},"body":{"components/CommentComponent.html":{},"injectables/IssueStoreService.html":{}}}],["deletecomment(deleteissuecommentinput",{"_index":3618,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["deletecomponent",{"_index":1320,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["deletecomponent(id",{"_index":1343,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["deletecomponentgql",{"_index":1328,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["deletecomponentinput",{"_index":1356,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["deletecomponentinterfacegql",{"_index":2586,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["deletecomponentinterfaceinput",{"_index":2601,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["deletecomponentmutation",{"_index":1327,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["deleted",{"_index":926,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"interfaces/DialogData-1.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["deletedata",{"_index":4223,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["deleteinterfacemutation",{"_index":2585,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["deleteissuecommentgql",{"_index":3580,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["deleteissuecommentinput",{"_index":3619,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["deleteissuecommentmutation",{"_index":3579,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["deleteitem",{"_index":4067,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["deletememberdialogref",{"_index":4941,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["deletememberdialogref.afterclosed().subscribe(data",{"_index":4945,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["deleteproject",{"_index":4963,"title":{},"body":{"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{}}}],["deleteprojectgql",{"_index":4992,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["deleteprojectinput",{"_index":5003,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["deletequery",{"_index":4178,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["deletes",{"_index":999,"title":{},"body":{"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["deleting",{"_index":1308,"title":{},"body":{"injectables/ComponentStoreService.html":{},"interfaces/DialogData-1.html":{},"components/NodeDetailsComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["deletion",{"_index":1041,"title":{},"body":{"components/CommentComponent.html":{},"injectables/InterfaceStoreService.html":{},"interfaces/Positions.html":{}}}],["deletions",{"_index":1513,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["delivers",{"_index":2326,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["demo",{"_index":4847,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["denoting",{"_index":2939,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["dependencies",{"_index":332,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":1301,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["dependent",{"_index":4503,"title":{},"body":{"interfaces/Positions.html":{}}}],["depending",{"_index":2836,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"miscellaneous/variables.html":{}}}],["depends",{"_index":1300,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{}}}],["depicted",{"_index":4652,"title":{},"body":{"interfaces/Positions.html":{}}}],["deps",{"_index":2518,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["derived",{"_index":4764,"title":{},"body":{"interfaces/Positions.html":{}}}],["describes",{"_index":2301,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"miscellaneous/variables.html":{}}}],["describing",{"_index":3177,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["description",{"_index":226,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphIssue.html":{},"modules/GraphsModule.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"classes/Vector.html":{}}}],["description).subscribe(({data",{"_index":1561,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["descriptionvalidator",{"_index":1643,"title":{},"body":{"components/CreateProjectDialogComponent.html":{}}}],["deselect",{"_index":5238,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["design/icons",{"_index":399,"title":{},"body":{"modules/AppModule.html":{}}}],["desired",{"_index":2041,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"classes/NodeCache.html":{},"components/TextDisplayComponent.html":{},"classes/Vector.html":{}}}],["destroy",{"_index":3013,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/Positions.html":{}}}],["destroyed",{"_index":1801,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["destruction",{"_index":4331,"title":{},"body":{"interfaces/Positions.html":{}}}],["detail",{"_index":158,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["detail'},{'name",{"_index":135,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["detail.component",{"_index":384,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["detail.component.html",{"_index":2675,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.scss",{"_index":2674,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts",{"_index":2673,"title":{},"body":{"components/IssueDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:115",{"_index":2695,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:23",{"_index":2704,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:26",{"_index":2702,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:29",{"_index":2701,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:33",{"_index":2705,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:36",{"_index":2706,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:39",{"_index":2707,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:41",{"_index":2700,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:42",{"_index":2703,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:45",{"_index":2699,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:48",{"_index":2686,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:50",{"_index":2697,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:65",{"_index":2694,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:76",{"_index":2687,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:94",{"_index":2691,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail/comment/comment.component",{"_index":458,"title":{},"body":{"modules/AppModule.html":{}}}],["detail/comment/comment.component.ts",{"_index":974,"title":{},"body":{"components/CommentComponent.html":{},"coverage.html":{}}}],["detail/comment/comment.component.ts:23",{"_index":991,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:25",{"_index":990,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:27",{"_index":996,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:30",{"_index":1008,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:32",{"_index":1003,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:34",{"_index":1006,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:39",{"_index":989,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:59",{"_index":1001,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:76",{"_index":998,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/issue",{"_index":383,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"modules/GraphsModule.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["detail/linked",{"_index":468,"title":{},"body":{"modules/AppModule.html":{},"components/LinkedIssueItemComponent.html":{},"coverage.html":{}}}],["detail/time",{"_index":831,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/IssueDetailComponent.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"coverage.html":{}}}],["detail/timeline/coalesced/timeline",{"_index":474,"title":{},"body":{"modules/AppModule.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"coverage.html":{}}}],["detail/timeline/timeline.component",{"_index":457,"title":{},"body":{"modules/AppModule.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["detail/timeline/timeline.component.ts",{"_index":807,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["detailed",{"_index":2708,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["details",{"_index":459,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueDetailComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["details'},{'name",{"_index":169,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["details.component",{"_index":448,"title":{},"body":{"modules/AppModule.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{}}}],["details.component.html",{"_index":4130,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.scss",{"_index":4129,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts",{"_index":4128,"title":{},"body":{"components/NodeDetailsComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["details.component.ts:130",{"_index":4150,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:145",{"_index":4152,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:152",{"_index":4154,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:160",{"_index":4155,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:165",{"_index":4157,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:169",{"_index":4156,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:201",{"_index":4161,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:249",{"_index":4158,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:263",{"_index":4159,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:277",{"_index":4162,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:292",{"_index":4163,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:43",{"_index":4149,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:47",{"_index":4147,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:51",{"_index":4148,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:55",{"_index":4145,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:66",{"_index":4167,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:67",{"_index":4164,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:68",{"_index":4166,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:69",{"_index":4165,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:70",{"_index":4169,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:71",{"_index":4168,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:74",{"_index":4172,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:75",{"_index":4171,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:76",{"_index":4174,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:77",{"_index":4170,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:78",{"_index":4173,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:79",{"_index":4144,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details/node",{"_index":447,"title":{},"body":{"modules/AppModule.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["detailscallback",{"_index":1154,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["determine",{"_index":3365,"title":{},"body":{"components/IssueLabelComponent.html":{},"components/TopToolbarComponent.html":{},"classes/Vector.html":{}}}],["determines",{"_index":550,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"injectables/StateService.html":{}}}],["dev",{"_index":5804,"title":{},"body":{"index.html":{}}}],["development",{"_index":5800,"title":{},"body":{"index.html":{}}}],["dgql",{"_index":791,"title":{},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"injectables/ComponentsService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectsService.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/UserItemComponent.html":{},"injectables/UsersService.html":{}}}],["dgql/id",{"_index":792,"title":{},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["dgql/id.ts",{"_index":3828,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dgql/index.ts",{"_index":2067,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{}}}],["dgql/index.ts:24",{"_index":2079,"title":{},"body":{"injectables/DataService.html":{}}}],["dgql/index.ts:34",{"_index":2082,"title":{},"body":{"injectables/DataService.html":{}}}],["dgql/index.ts:39",{"_index":2084,"title":{},"body":{"injectables/DataService.html":{}}}],["dgql/index.ts:67",{"_index":2081,"title":{},"body":{"injectables/DataService.html":{}}}],["dgql/load.ts",{"_index":5674,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dgql/mutate",{"_index":2089,"title":{},"body":{"injectables/DataService.html":{}}}],["dgql/mutate.ts",{"_index":5677,"title":{},"body":{"coverage.html":{}}}],["dgql/queries/components.service.ts",{"_index":1368,"title":{},"body":{"injectables/ComponentsService.html":{},"coverage.html":{}}}],["dgql/queries/components.service.ts:12",{"_index":1380,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["dgql/queries/components.service.ts:20",{"_index":1388,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["dgql/queries/components.service.ts:24",{"_index":1390,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["dgql/queries/components.service.ts:28",{"_index":1383,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["dgql/queries/components.service.ts:32",{"_index":1385,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["dgql/queries/issues.service.ts",{"_index":5680,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["dgql/queries/projects.service.ts",{"_index":5013,"title":{},"body":{"injectables/ProjectsService.html":{},"coverage.html":{}}}],["dgql/queries/projects.service.ts:12",{"_index":5020,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["dgql/queries/projects.service.ts:18",{"_index":5025,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["dgql/queries/projects.service.ts:22",{"_index":5023,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["dgql/queries/queries.service.ts",{"_index":5028,"title":{},"body":{"injectables/QueriesService.html":{},"coverage.html":{}}}],["dgql/queries/queries.service.ts:10",{"_index":5032,"title":{},"body":{"injectables/QueriesService.html":{}}}],["dgql/queries/queries.service.ts:12",{"_index":5033,"title":{},"body":{"injectables/QueriesService.html":{}}}],["dgql/queries/queries.service.ts:13",{"_index":5034,"title":{},"body":{"injectables/QueriesService.html":{}}}],["dgql/queries/queries.service.ts:14",{"_index":5035,"title":{},"body":{"injectables/QueriesService.html":{}}}],["dgql/queries/queries.service.ts:15",{"_index":5036,"title":{},"body":{"injectables/QueriesService.html":{}}}],["dgql/queries/users.service.ts",{"_index":5581,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["dgql/queries/users.service.ts:11",{"_index":5586,"title":{},"body":{"injectables/UsersService.html":{}}}],["dgql/queries/users.service.ts:17",{"_index":5590,"title":{},"body":{"injectables/UsersService.html":{}}}],["dgql/queries/users.service.ts:35",{"_index":5588,"title":{},"body":{"injectables/UsersService.html":{}}}],["dgql/queries/util",{"_index":1394,"title":{},"body":{"injectables/ComponentsService.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{}}}],["dgql/queries/util.ts",{"_index":5121,"title":{},"body":{"interfaces/QueryListParams.html":{},"coverage.html":{}}}],["dgql/query",{"_index":793,"title":{},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["dgql/query.ts",{"_index":1679,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dgql/query.ts:106",{"_index":2049,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:140",{"_index":2051,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:183",{"_index":2054,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:192",{"_index":2052,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:201",{"_index":2056,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:211",{"_index":2055,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:222",{"_index":2053,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:250",{"_index":2057,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:276",{"_index":2066,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:330",{"_index":1741,"title":{},"body":{"classes/DataNode.html":{}}}],["dgql/query.ts:55",{"_index":2048,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:56",{"_index":2050,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:588",{"_index":4123,"title":{},"body":{"classes/NodeCache.html":{}}}],["dgql/query.ts:593",{"_index":4124,"title":{},"body":{"classes/NodeCache.html":{}}}],["dgql/query.ts:599",{"_index":4125,"title":{},"body":{"classes/NodeCache.html":{}}}],["dgql/query.ts:613",{"_index":4126,"title":{},"body":{"classes/NodeCache.html":{}}}],["dgql/query.ts:65",{"_index":2059,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:70",{"_index":2061,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:80",{"_index":2063,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:83",{"_index":2064,"title":{},"body":{"classes/DataQuery.html":{}}}],["dialog",{"_index":20,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"index.html":{},"interfaces/userMock.html":{}}}],["dialog'},{'name",{"_index":101,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["dialog.component",{"_index":59,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"modules/GraphsModule.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SetEditorComponent.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/userMock.html":{}}}],["dialog.component.html",{"_index":24,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/MultiSourceList.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.scss",{"_index":22,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/MultiSourceList.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts",{"_index":13,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/MultiSourceList.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["dialog.component.ts:108",{"_index":3993,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:11",{"_index":38,"title":{},"body":{"components/AccessTokenDialogComponent.html":{}}}],["dialog.component.ts:116",{"_index":3989,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:118",{"_index":1466,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["dialog.component.ts:12",{"_index":4782,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["dialog.component.ts:123",{"_index":1461,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["dialog.component.ts:13",{"_index":48,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["dialog.component.ts:135",{"_index":3998,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:14",{"_index":247,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["dialog.component.ts:15",{"_index":241,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{}}}],["dialog.component.ts:159",{"_index":3985,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:16",{"_index":245,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["dialog.component.ts:163",{"_index":1468,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["dialog.component.ts:17",{"_index":251,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{}}}],["dialog.component.ts:173",{"_index":3994,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:18",{"_index":252,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{}}}],["dialog.component.ts:19",{"_index":47,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":1437,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["dialog.component.ts:204",{"_index":5306,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:205",{"_index":5310,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:206",{"_index":5308,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:207",{"_index":5307,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:208",{"_index":5309,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:209",{"_index":5303,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":1568,"title":{},"body":{"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts:210",{"_index":5305,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:211",{"_index":5295,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:217",{"_index":5304,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":1565,"title":{},"body":{"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts:239",{"_index":5301,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:24",{"_index":44,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts:246",{"_index":5299,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:25",{"_index":1567,"title":{},"body":{"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{}}}],["dialog.component.ts:251",{"_index":5298,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:255",{"_index":5300,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:269",{"_index":5302,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:27",{"_index":1439,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{}}}],["dialog.component.ts:28",{"_index":1441,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["dialog.component.ts:280",{"_index":5296,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:29",{"_index":242,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateComponentDialogComponent.html":{}}}],["dialog.component.ts:293",{"_index":5297,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:30",{"_index":1440,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts:31",{"_index":1438,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["dialog.component.ts:32",{"_index":1482,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["dialog.component.ts:33",{"_index":4779,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["dialog.component.ts:34",{"_index":1435,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["dialog.component.ts:36",{"_index":1472,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts:37",{"_index":1583,"title":{},"body":{"components/CreateIssueDialogComponent.html":{}}}],["dialog.component.ts:38",{"_index":1478,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["dialog.component.ts:39",{"_index":1436,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{}}}],["dialog.component.ts:40",{"_index":3978,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:41",{"_index":1473,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["dialog.component.ts:42",{"_index":4781,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts:43",{"_index":1459,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["dialog.component.ts:44",{"_index":3982,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:46",{"_index":3980,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:47",{"_index":1477,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["dialog.component.ts:49",{"_index":5200,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["dialog.component.ts:50",{"_index":3972,"title":{},"body":{"classes/MultiSourceList.html":{},"components/RemoveDialogComponent.html":{}}}],["dialog.component.ts:52",{"_index":1433,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"classes/MultiSourceList.html":{}}}],["dialog.component.ts:54",{"_index":1566,"title":{},"body":{"components/CreateInterfaceDialogComponent.html":{},"classes/MultiSourceList.html":{}}}],["dialog.component.ts:57",{"_index":5199,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["dialog.component.ts:59",{"_index":3971,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:60",{"_index":1578,"title":{},"body":{"components/CreateIssueDialogComponent.html":{}}}],["dialog.component.ts:61",{"_index":3977,"title":{},"body":{"classes/MultiSourceList.html":{},"components/RemoveDialogComponent.html":{}}}],["dialog.component.ts:72",{"_index":3984,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:75",{"_index":1576,"title":{},"body":{"components/CreateIssueDialogComponent.html":{}}}],["dialog.component.ts:77",{"_index":3997,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:94",{"_index":1573,"title":{},"body":{"components/CreateIssueDialogComponent.html":{}}}],["dialog.component.ts:98",{"_index":1574,"title":{},"body":{"components/CreateIssueDialogComponent.html":{}}}],["dialog/access",{"_index":12,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"modules/AppModule.html":{},"components/SettingsDialogComponent.html":{},"coverage.html":{}}}],["dialog/add",{"_index":225,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"modules/GraphsModule.html":{},"components/ProjectMembersComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["dialog/create",{"_index":412,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"coverage.html":{}}}],["dialog/profile",{"_index":472,"title":{},"body":{"modules/AppModule.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"coverage.html":{}}}],["dialog/remove",{"_index":427,"title":{},"body":{"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{},"coverage.html":{}}}],["dialog/settings",{"_index":58,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"modules/AppModule.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["dialogdata",{"_index":1572,"title":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{}},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{},"coverage.html":{}}}],["dialogref",{"_index":28,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/MultiSourceList.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{}}}],["dialogref.afterclosed().subscribe(confirm",{"_index":2130,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["dialogs/access",{"_index":473,"title":{},"body":{"modules/AppModule.html":{}}}],["dialogs/add",{"_index":2539,"title":{},"body":{"modules/GraphsModule.html":{}}}],["dialogs/create",{"_index":428,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Positions.html":{}}}],["dialogs/profile",{"_index":471,"title":{},"body":{"modules/AppModule.html":{}}}],["dialogs/remove",{"_index":426,"title":{},"body":{"modules/AppModule.html":{}}}],["dialogservice",{"_index":5223,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["didopen",{"_index":3803,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["difference",{"_index":4706,"title":{},"body":{"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["different",{"_index":2036,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["differs",{"_index":953,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["dimensions",{"_index":3239,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["direction",{"_index":1937,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueGraphControlsComponent.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"classes/Vector.html":{}}}],["directions",{"_index":3783,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["directive",{"_index":98,"title":{"directives/ItemDirective.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{}}}],["directives",{"_index":208,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"overview.html":{}}}],["directly",{"_index":1098,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"miscellaneous/variables.html":{}}}],["directory",{"_index":2579,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["disabled",{"_index":5069,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["disables",{"_index":5058,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["disappear",{"_index":4763,"title":{},"body":{"interfaces/Positions.html":{}}}],["discard",{"_index":1598,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/NodeDetailsComponent.html":{}}}],["display",{"_index":1102,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/UserItemComponent.html":{}}}],["display'},{'name",{"_index":197,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["display.component",{"_index":464,"title":{},"body":{"modules/AppModule.html":{}}}],["display.component.html",{"_index":5390,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.scss",{"_index":5389,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts",{"_index":5387,"title":{},"body":{"components/TextDisplayComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["display.component.ts:21",{"_index":5398,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:23",{"_index":5396,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:25",{"_index":5401,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:30",{"_index":5410,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:35",{"_index":5400,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:37",{"_index":5399,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:39",{"_index":5408,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:40",{"_index":5405,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:41",{"_index":5406,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:42",{"_index":5407,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:44",{"_index":5403,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:55",{"_index":5404,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display/text",{"_index":463,"title":{},"body":{"modules/AppModule.html":{},"components/TextDisplayComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["displayed",{"_index":3318,"title":{},"body":{"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/SideNavComponent.html":{},"interfaces/userMock.html":{}}}],["displayedcode",{"_index":3952,"title":{},"body":{"components/MarkdownPreviewComponent.html":{}}}],["displaying",{"_index":4631,"title":{},"body":{"interfaces/Positions.html":{}}}],["displayname",{"_index":2849,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["displays",{"_index":975,"title":{},"body":{"components/CommentComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueDetailComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/SetEditorComponent.html":{},"components/SideNavComponent.html":{},"components/UserItemComponent.html":{}}}],["distance",{"_index":3774,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{},"coverage.html":{}}}],["distance(newposition.x",{"_index":3246,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["distance(x",{"_index":3227,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["distancetoline",{"_index":5605,"title":{},"body":{"classes/Vector.html":{}}}],["distancetoline(sourcepoint",{"_index":5619,"title":{},"body":{"classes/Vector.html":{}}}],["distinctuntilchanged",{"_index":2152,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["distinguish",{"_index":2043,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["document",{"_index":4439,"title":{},"body":{"interfaces/Positions.html":{}}}],["document.queryselector('#buttoncreateproject",{"_index":4835,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["documentation",{"_index":1905,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/MarkdownPreviewComponent.html":{},"classes/NodeCache.html":{},"coverage.html":{},"index.html":{}}}],["doesn't",{"_index":2040,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/LinkedIssueItemComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["dographlayout",{"_index":4278,"title":{},"body":{"interfaces/Positions.html":{},"coverage.html":{}}}],["dographlayout(nodelist",{"_index":4756,"title":{},"body":{"interfaces/Positions.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["domsanitizer",{"_index":287,"title":{},"body":{"components/AppComponent.html":{}}}],["don't",{"_index":1797,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/RemoveDialogComponent.html":{}}}],["don\\'t",{"_index":2137,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["done",{"_index":1799,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["dont",{"_index":4310,"title":{},"body":{"interfaces/Positions.html":{}}}],["dot",{"_index":3545,"title":{},"body":{"components/IssueLocationComponent.html":{},"components/SetEditorDialogComponent.html":{},"classes/Vector.html":{}}}],["dot(other",{"_index":5627,"title":{},"body":{"classes/Vector.html":{}}}],["dot(target",{"_index":3748,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["dot(this",{"_index":5630,"title":{},"body":{"classes/Vector.html":{}}}],["dots",{"_index":5317,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["down",{"_index":2220,"title":{},"body":{"components/FrameComponent.html":{}}}],["drag",{"_index":4339,"title":{},"body":{"interfaces/Positions.html":{}}}],["dragged",{"_index":4368,"title":{},"body":{"interfaces/Positions.html":{}}}],["draggededge",{"_index":3144,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{}}}],["draghandles",{"_index":1289,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["draw",{"_index":2302,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{}}}],["drawer",{"_index":2216,"title":{},"body":{"components/FrameComponent.html":{}}}],["drawfolderrelations(node",{"_index":4668,"title":{},"body":{"interfaces/Positions.html":{}}}],["drawgraph",{"_index":1257,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["drawing",{"_index":2402,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{}}}],["draws",{"_index":4665,"title":{},"body":{"interfaces/Positions.html":{}}}],["dropped",{"_index":4375,"title":{},"body":{"interfaces/Positions.html":{}}}],["dropping",{"_index":4382,"title":{},"body":{"interfaces/Positions.html":{}}}],["due",{"_index":3851,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["duplicate",{"_index":1303,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"components/TimelineItemComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["duplicated",{"_index":5183,"title":{},"body":{"components/RegisterComponent.html":{}}}],["duplicates",{"_index":1302,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{}}}],["during",{"_index":5123,"title":{},"body":{"interfaces/QueryListParams.html":{}}}],["dynamic",{"_index":3105,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"interfaces/Positions.html":{},"coverage.html":{},"dependencies.html":{}}}],["dynamictemplate",{"_index":1273,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["dynamictemplate.dynamicnodetemplate",{"_index":3126,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["dynamictemplate.dynamictemplatecontext",{"_index":3118,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["e",{"_index":4436,"title":{},"body":{"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"components/RegisterComponent.html":{}}}],["e.g",{"_index":725,"title":{},"body":{"classes/CCIMSValidators.html":{},"interfaces/ComponentNode.html":{},"components/CursorPaginatorComponent.html":{},"injectables/DataService.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueItemComponent.html":{},"interfaces/IssueNode.html":{},"classes/MultiSourceList.html":{},"interfaces/Position.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/RelationEdge.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"classes/TimeFormatter.html":{},"index.html":{}}}],["e.preventdefault",{"_index":4845,"title":{},"body":{"components/ProjectListComponent.html":{},"components/RegisterComponent.html":{}}}],["e.stoppropagation",{"_index":4846,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["e6e6e6",{"_index":3945,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["each",{"_index":1249,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/variables.html":{}}}],["early",{"_index":3793,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["east",{"_index":4269,"title":{},"body":{"interfaces/Positions.html":{}}}],["easy",{"_index":5486,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"index.html":{}}}],["edge",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{}}}],["edge.createdfrom",{"_index":4383,"title":{},"body":{"interfaces/Positions.html":{}}}],["edge.draghandles",{"_index":4392,"title":{},"body":{"interfaces/Positions.html":{}}}],["edge.markerend",{"_index":4395,"title":{},"body":{"interfaces/Positions.html":{}}}],["edge.node",{"_index":5011,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["edge.svg",{"_index":297,"title":{},"body":{"components/AppComponent.html":{}}}],["edge.type",{"_index":2996,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"interfaces/Positions.html":{}}}],["edge.validtargets.add(node.id.tostring",{"_index":4398,"title":{},"body":{"interfaces/Positions.html":{}}}],["edge.validtargets.add(original.target.tostring",{"_index":4387,"title":{},"body":{"interfaces/Positions.html":{}}}],["edge.validtargets.clear",{"_index":4386,"title":{},"body":{"interfaces/Positions.html":{}}}],["edge.validtargets.delete(existingedge.target.tostring",{"_index":4400,"title":{},"body":{"interfaces/Positions.html":{}}}],["edgeclasssetter",{"_index":2993,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["edges",{"_index":1241,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{}}}],["edgetype",{"_index":316,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueIconComponent.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["edgetype].filter(part",{"_index":3305,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["edgex",{"_index":4507,"title":{},"body":{"interfaces/Positions.html":{}}}],["edgey",{"_index":4509,"title":{},"body":{"interfaces/Positions.html":{}}}],["edit",{"_index":117,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["editable",{"_index":2710,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/SetEditorComponent.html":{}}}],["editbody",{"_index":981,"title":{},"body":{"components/CommentComponent.html":{}}}],["editcomment",{"_index":984,"title":{},"body":{"components/CommentComponent.html":{}}}],["editcomment(body",{"_index":1000,"title":{},"body":{"components/CommentComponent.html":{}}}],["edited",{"_index":1005,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/IssueContentsComponent.html":{}}}],["editexisting",{"_index":1487,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["editing",{"_index":993,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{},"miscellaneous/typealiases.html":{}}}],["edititem",{"_index":4066,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["editmode",{"_index":4131,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/TextDisplayComponent.html":{}}}],["editor",{"_index":191,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentNode.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["editor'},{'name",{"_index":164,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["editor.component",{"_index":453,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["editor.component.html",{"_index":3929,"title":{},"body":{"components/MarkdownEditorComponent.html":{},"components/SetEditorComponent.html":{}}}],["editor.component.scss",{"_index":3928,"title":{},"body":{"components/MarkdownEditorComponent.html":{},"components/SetEditorComponent.html":{}}}],["editor.component.ts",{"_index":3925,"title":{},"body":{"components/MarkdownEditorComponent.html":{},"components/SetEditorComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["editor.component.ts:147",{"_index":5248,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:16",{"_index":3941,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["editor.component.ts:20",{"_index":3933,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["editor.component.ts:24",{"_index":3935,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["editor.component.ts:29",{"_index":3938,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["editor.component.ts:38",{"_index":5239,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:40",{"_index":5236,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:42",{"_index":5225,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:44",{"_index":5242,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:46",{"_index":5244,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:48",{"_index":5228,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:50",{"_index":5233,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:52",{"_index":5229,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:54",{"_index":5234,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:56",{"_index":5235,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:59",{"_index":5227,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:61",{"_index":5247,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:63",{"_index":5246,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:79",{"_index":5224,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor/markdown",{"_index":452,"title":{},"body":{"modules/AppModule.html":{},"components/MarkdownEditorComponent.html":{},"coverage.html":{}}}],["editor/set",{"_index":2543,"title":{},"body":{"modules/GraphsModule.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["editorcontainer",{"_index":3944,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["editoroptions",{"_index":3930,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["edits",{"_index":1002,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/IssueFilterComponent.html":{},"components/SetEditorComponent.html":{}}}],["edittext",{"_index":5391,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["effect",{"_index":1863,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["effects",{"_index":4319,"title":{},"body":{"interfaces/Positions.html":{}}}],["elegant",{"_index":5594,"title":{},"body":{"injectables/UsersService.html":{}}}],["element",{"_index":97,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["element.assigneesstring",{"_index":3518,"title":{},"body":{"components/IssueListComponent.html":{}}}],["element.createdby.displayname",{"_index":3517,"title":{},"body":{"components/IssueListComponent.html":{}}}],["element.displayname",{"_index":4956,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["element.email",{"_index":4957,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["element.title",{"_index":3516,"title":{},"body":{"components/IssueListComponent.html":{}}}],["elementref",{"_index":1082,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/IssueDetailComponent.html":{},"components/SetEditorComponent.html":{}}}],["elements",{"_index":2178,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["ellipsis",{"_index":3821,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["elsewhere",{"_index":1725,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["email",{"_index":4891,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"interfaces/userMock.html":{}}}],["embedded",{"_index":4284,"title":{},"body":{"interfaces/Positions.html":{}}}],["emission",{"_index":3066,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{}}}],["emit",{"_index":1880,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/FilterSelection.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/LabelSearchComponent.html":{},"classes/NodeCache.html":{},"interfaces/TextFragment.html":{}}}],["emiterrortoallsubscribers(error",{"_index":1888,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["emits",{"_index":2816,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/RegisterComponent.html":{}}}],["emitselectedlabels",{"_index":2175,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["emitted",{"_index":2791,"title":{},"body":{"components/IssueFilterComponent.html":{},"interfaces/QueryListParams.html":{}}}],["emitting",{"_index":3083,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"injectables/LabelStoreService.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{}}}],["emitupdatetoallsubscribers",{"_index":1885,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["emoji_objects",{"_index":3086,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["empty",{"_index":904,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/FilterSelection.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"components/LabelSearchComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{}}}],["emptying",{"_index":2104,"title":{},"body":{"injectables/DataService.html":{}}}],["emptyresultslabel",{"_index":4064,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["emptysuggestionslabel",{"_index":4063,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["en",{"_index":406,"title":{},"body":{"modules/AppModule.html":{}}}],["en_us",{"_index":392,"title":{},"body":{"modules/AppModule.html":{}}}],["enable",{"_index":4843,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["enabled",{"_index":5059,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{}}}],["enablehtml",{"_index":2475,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["enables",{"_index":4594,"title":{},"body":{"interfaces/Positions.html":{}}}],["encoded",{"_index":3842,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["encodedid",{"_index":2021,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/NodeCache.html":{}}}],["encodelistid",{"_index":2086,"title":{},"body":{"injectables/DataService.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["encodelistid(id",{"_index":2109,"title":{},"body":{"injectables/DataService.html":{}}}],["encodelistid(ld",{"_index":3875,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["encodelistid(selector",{"_index":2097,"title":{},"body":{"injectables/DataService.html":{}}}],["encodenodeid",{"_index":1483,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["encodenodeid(id",{"_index":1517,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["encodenodeid(ld.node",{"_index":3876,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["encodenodeid(nd",{"_index":3859,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["encodenodeid(this.getnodeid(item",{"_index":4098,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["encodes",{"_index":3850,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["encoding",{"_index":3856,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["end",{"_index":1672,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["endcursor",{"_index":5942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["endpoint",{"_index":1778,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphQLModule.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["ensure",{"_index":5164,"title":{},"body":{"components/RegisterComponent.html":{}}}],["ensures",{"_index":735,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["enter",{"_index":1444,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RegisterComponent.html":{}}}],["entered",{"_index":2932,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"components/RegisterComponent.html":{}}}],["entities",{"_index":5455,"title":{},"body":{"classes/TimeFormatter.html":{},"index.html":{}}}],["entry",{"_index":2127,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["entry[1",{"_index":2884,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["enum",{"_index":1229,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/variables.html":{}}}],["enumdictionary",{"_index":2202,"title":{},"body":{"interfaces/FilterState.html":{},"miscellaneous/typealiases.html":{}}}],["enumerations",{"_index":5793,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":689,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/GraphQLModule.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":2510,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["environment.publicclientname",{"_index":5162,"title":{},"body":{"components/RegisterComponent.html":{}}}],["environment.signupurl",{"_index":2515,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["environments/environment",{"_index":690,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/GraphQLModule.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["equals",{"_index":919,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["equation",{"_index":3359,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["equivalent",{"_index":1996,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["err",{"_index":1618,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["err.message).join",{"_index":2490,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["error",{"_index":1044,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/FilterSelection.html":{},"modules/GraphQLModule.html":{},"components/LabelSearchComponent.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error('bad",{"_index":5268,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["error('could",{"_index":3844,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["error('not",{"_index":5955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error('parameters",{"_index":1900,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["error(`${nodetype[node.type",{"_index":5961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error(`${nodetype[type",{"_index":5965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error(`unknown",{"_index":2856,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["error(err",{"_index":5097,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["error.status",{"_index":3915,"title":{},"body":{"components/LoginComponent.html":{}}}],["errorconfig",{"_index":5573,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["errorlink",{"_index":2483,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["errormessage",{"_index":5075,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["errorpolicy",{"_index":2467,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":676,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/GraphQLModule.html":{},"components/IssueFilterComponent.html":{},"interfaces/User.html":{}}}],["essentially",{"_index":3740,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["etc",{"_index":5166,"title":{},"body":{"components/RegisterComponent.html":{}}}],["event",{"_index":583,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/IssueFilterComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"injectables/StateService.html":{}}}],["event.detail.currentviewwindow",{"_index":4466,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.detail.dropposition",{"_index":4417,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.detail.edge",{"_index":4407,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.detail.eventsource",{"_index":4408,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.detail.node",{"_index":4442,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.detail.node.type",{"_index":4453,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.detail.rendered",{"_index":4549,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.detail.sourceevent.shiftkey",{"_index":4478,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.detail.sourceevent.stopimmediatepropagation",{"_index":4493,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.movementx",{"_index":1168,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["event.movementy",{"_index":1170,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["event.preventdefault",{"_index":4409,"title":{},"body":{"interfaces/Positions.html":{}}}],["eventemitter",{"_index":2789,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/SetEditorComponent.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["eventlisteneroreventlistenerobject",{"_index":4547,"title":{},"body":{"interfaces/Positions.html":{}}}],["events",{"_index":579,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"interfaces/CoalescedTimelineItem.html":{},"injectables/StateService.html":{}}}],["everywhere",{"_index":5127,"title":{},"body":{"interfaces/QueryListParams.html":{}}}],["ex",{"_index":3415,"title":{},"body":{"components/IssueListComponent.html":{},"interfaces/Positions.html":{}}}],["example",{"_index":88,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"injectables/IssueGraphApiService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/ProjectMembersComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"interfaces/userMock.html":{}}}],["examplecomponent",{"_index":1688,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["examples",{"_index":3831,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["exclusive",{"_index":565,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["execute",{"_index":5829,"title":{},"body":{"index.html":{}}}],["executed",{"_index":3187,"title":{},"body":{"injectables/IssueGraphStateService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["execution",{"_index":4702,"title":{},"body":{"interfaces/Positions.html":{}}}],["exist",{"_index":2011,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/LabelStoreService.html":{},"classes/NodeCache.html":{},"components/SideNavComponent.html":{}}}],["existing",{"_index":1476,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"interfaces/TextFragment.html":{}}}],["exists",{"_index":928,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"modules/GraphQLModule.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["exit",{"_index":1026,"title":{},"body":{"components/CommentComponent.html":{}}}],["expands",{"_index":3798,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["expects",{"_index":5055,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["expitarion",{"_index":79,"title":{},"body":{"components/AccessTokenDialogComponent.html":{}}}],["explanation",{"_index":5832,"title":{},"body":{"index.html":{}}}],["export",{"_index":60,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"interfaces/userMock.html":{}}}],["exports",{"_index":527,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{}}}],["expose",{"_index":673,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["exposes",{"_index":546,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["exposing",{"_index":651,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["expression",{"_index":2938,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["extended",{"_index":3313,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["extending",{"_index":1250,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["extends",{"_index":1208,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["extra",{"_index":2888,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["extract",{"_index":4440,"title":{},"body":{"interfaces/Positions.html":{}}}],["extractissueid(issuelist",{"_index":4539,"title":{},"body":{"interfaces/Positions.html":{}}}],["extracts",{"_index":4537,"title":{},"body":{"interfaces/Positions.html":{}}}],["f",{"_index":1908,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/QueryListParams.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["f.subscribe",{"_index":5130,"title":{},"body":{"interfaces/QueryListParams.html":{}}}],["f0ad4e",{"_index":5527,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["factor",{"_index":5645,"title":{},"body":{"classes/Vector.html":{}}}],["fade",{"_index":1673,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["fafafa",{"_index":5424,"title":{},"body":{"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["failed",{"_index":5074,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["fails",{"_index":674,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["false",{"_index":246,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/FilterSelection.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":3552,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["fb",{"_index":1406,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["feature",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"components/CreateIssueDialogComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueCategoryComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"miscellaneous/variables.html":{}}}],["feature_request",{"_index":4520,"title":{},"body":{"interfaces/Positions.html":{}}}],["featurerequestcount",{"_index":2352,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["featurerequests",{"_index":2362,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueGraphControlsComponent.html":{}}}],["feed",{"_index":3010,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["feeds",{"_index":3003,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["fetch",{"_index":775,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["fetched",{"_index":4151,"title":{},"body":{"components/NodeDetailsComponent.html":{},"injectables/ProjectStoreService.html":{}}}],["fetches",{"_index":4978,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["fetchpolicy",{"_index":2466,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["fetchuserfromstorage",{"_index":656,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["ff0036",{"_index":2766,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/TimelineItemComponent.html":{}}}],["fff",{"_index":279,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/TimelineItemComponent.html":{}}}],["field",{"_index":417,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/userMock.html":{}}}],["fields",{"_index":727,"title":{},"body":{"classes/CCIMSValidators.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueFilterComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["file.run",{"_index":5828,"title":{},"body":{"index.html":{}}}],["files",{"_index":5807,"title":{},"body":{"index.html":{}}}],["files.:warning",{"_index":5822,"title":{},"body":{"index.html":{}}}],["fill",{"_index":2571,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueDetailComponent.html":{}}}],["filter",{"_index":538,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectStoreService.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"injectables/UsersService.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["filter'},{'name",{"_index":137,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["filter(([appstate",{"_index":3192,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["filter(childid",{"_index":3263,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["filter(event",{"_index":582,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["filter(f",{"_index":1959,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["filter(part",{"_index":324,"title":{},"body":{"components/AppComponent.html":{}}}],["filter(timelineitem",{"_index":921,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["filter.component",{"_index":2560,"title":{},"body":{"modules/GraphsModule.html":{}}}],["filter.component.html",{"_index":2771,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.scss",{"_index":2770,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts",{"_index":2768,"title":{},"body":{"components/IssueFilterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filter.component.ts:116",{"_index":2788,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:118",{"_index":2787,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:120",{"_index":2790,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:123",{"_index":2821,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:124",{"_index":2820,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:127",{"_index":2817,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:129",{"_index":2822,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:131",{"_index":2823,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:137",{"_index":2802,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:147",{"_index":2813,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:157",{"_index":2805,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:167",{"_index":2793,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:180",{"_index":2808,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:195",{"_index":2796,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:210",{"_index":2798,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:222",{"_index":2815,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.fullsearch",{"_index":2876,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.username",{"_index":5596,"title":{},"body":{"injectables/UsersService.html":{}}}],["filter[id",{"_index":2878,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter_list",{"_index":2882,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filterby",{"_index":5122,"title":{},"body":{"interfaces/QueryListParams.html":{}}}],["filterchange",{"_index":2786,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filtered",{"_index":2313,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["filterelement",{"_index":2168,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"miscellaneous/typealiases.html":{}}}],["filtering",{"_index":2159,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["filterlabel",{"_index":2149,"title":{},"body":{"interfaces/FilterSelection.html":{},"injectables/IssueGraphApiService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/TextFragment.html":{},"miscellaneous/typealiases.html":{}}}],["filters",{"_index":2800,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["filterselection",{"_index":2144,"title":{"interfaces/FilterSelection.html":{}},"body":{"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/IssueGraphControlsComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"coverage.html":{}}}],["filterstate",{"_index":2197,"title":{"interfaces/FilterState.html":{}},"body":{"interfaces/FilterState.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"coverage.html":{}}}],["filterstate.selectedcategories",{"_index":3197,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["filterstate.selectedfilter.labels",{"_index":3198,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["filterstate.selectedfilter.texts",{"_index":3199,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["filtertext",{"_index":4997,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["filtervalue",{"_index":4881,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["filtervalue.tolowercase",{"_index":4950,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["filtervalue.trim",{"_index":4949,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["finally",{"_index":1028,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{}}}],["find",{"_index":2177,"title":{},"body":{"interfaces/FilterSelection.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/LabelSearchComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/TextFragment.html":{}}}],["findidealcomponentposition(id",{"_index":4606,"title":{},"body":{"interfaces/Positions.html":{}}}],["finds",{"_index":4605,"title":{},"body":{"interfaces/Positions.html":{}}}],["finishcoalescing",{"_index":905,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["finished",{"_index":2737,"title":{},"body":{"components/IssueDetailComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["finishediting",{"_index":2683,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/TextDisplayComponent.html":{}}}],["finishediting(save",{"_index":2690,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["finishediting(saved",{"_index":5402,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["finishes",{"_index":2692,"title":{},"body":{"components/IssueDetailComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/TextDisplayComponent.html":{},"miscellaneous/typealiases.html":{}}}],["fired",{"_index":1646,"title":{},"body":{"components/CreateProjectDialogComponent.html":{}}}],["fires",{"_index":4839,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["first",{"_index":956,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"components/LoginComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"interfaces/QueryListParams.html":{},"components/SetEditorDialogComponent.html":{}}}],["first_page",{"_index":1667,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["firstcomponent",{"_index":4690,"title":{},"body":{"interfaces/Positions.html":{}}}],["firstitem",{"_index":937,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["firstitem.__typename",{"_index":939,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["firstitem.createdby.id",{"_index":959,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["firstkey",{"_index":1968,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["firstnode",{"_index":3789,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["firstnode.fixed",{"_index":3791,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["firstpage",{"_index":1982,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["firstpageitemid",{"_index":1967,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["fit",{"_index":4490,"title":{},"body":{"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/QueryComponent.html":{},"components/TextDisplayComponent.html":{}}}],["fitgraphinview",{"_index":4721,"title":{},"body":{"interfaces/Positions.html":{}}}],["fits",{"_index":4720,"title":{},"body":{"interfaces/Positions.html":{}}}],["fix",{"_index":3468,"title":{},"body":{"components/IssueListComponent.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["fixed",{"_index":3701,"title":{},"body":{"classes/LayoutNode.html":{}}}],["fixme",{"_index":888,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"interfaces/QueryListParams.html":{},"components/TextDisplayComponent.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{}}}],["flag",{"_index":1762,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["flex",{"_index":1670,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["float",{"_index":1548,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/LoginComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["float:right",{"_index":272,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["floating",{"_index":4860,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["flow",{"_index":2268,"title":{},"body":{"components/FrameComponent.html":{}}}],["flying",{"_index":3788,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["focus",{"_index":4834,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["folder",{"_index":1317,"title":{},"body":{"injectables/ComponentStoreService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"injectables/IssueStoreService.html":{},"interfaces/Positions.html":{},"index.html":{}}}],["folderedgetypes",{"_index":1298,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{}}}],["folderedgetypes.relatedto",{"_index":1282,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["foldernode",{"_index":4672,"title":{},"body":{"interfaces/Positions.html":{}}}],["foldernode.type",{"_index":4674,"title":{},"body":{"interfaces/Positions.html":{}}}],["foldernodes",{"_index":4669,"title":{},"body":{"interfaces/Positions.html":{}}}],["folders",{"_index":2400,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{}}}],["following",{"_index":1904,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{}}}],["font",{"_index":1636,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"components/LoginComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["force",{"_index":3756,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["forces",{"_index":2121,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["forgot",{"_index":3922,"title":{},"body":{"components/LoginComponent.html":{}}}],["form",{"_index":89,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"interfaces/AppState.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"modules/GraphsModule.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/StateService.html":{},"classes/TimeFormatter.html":{}}}],["format",{"_index":752,"title":{},"body":{"classes/CCIMSValidators.html":{},"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueLabelComponent.html":{},"classes/NodeCache.html":{}}}],["formatcategorydescription",{"_index":3391,"title":{},"body":{"components/IssueListComponent.html":{}}}],["formatcategorydescription(category",{"_index":3405,"title":{},"body":{"components/IssueListComponent.html":{}}}],["formatcategoryicon",{"_index":3392,"title":{},"body":{"components/IssueListComponent.html":{}}}],["formatcategoryicon(issue",{"_index":3408,"title":{},"body":{"components/IssueListComponent.html":{}}}],["formatissueopentime",{"_index":2684,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["formatted",{"_index":4153,"title":{},"body":{"components/NodeDetailsComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["formatter",{"_index":832,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/IssueDetailComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["formatter.ts",{"_index":5429,"title":{},"body":{"classes/TimeFormatter.html":{},"coverage.html":{}}}],["formatter.ts:11",{"_index":5434,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["formatter.ts:19",{"_index":5446,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["formatter.ts:48",{"_index":5453,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["formattime",{"_index":5430,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["formattime(time",{"_index":5433,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["formattimedifference",{"_index":5431,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["formattimedifference(datestring",{"_index":5445,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["formatting",{"_index":862,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueDetailComponent.html":{},"classes/TimeFormatter.html":{}}}],["formbuilder",{"_index":1400,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formcontrol",{"_index":249,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"interfaces/userMock.html":{}}}],["formgroup",{"_index":3903,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formsmodule",{"_index":386,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["forward",{"_index":1906,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphQLModule.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{}}}],["forward(f",{"_index":1966,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["found",{"_index":3836,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["fragment",{"_index":2180,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["fragments",{"_index":2161,"title":{},"body":{"interfaces/FilterSelection.html":{},"injectables/IssueGraphApiService.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"miscellaneous/typealiases.html":{}}}],["frame",{"_index":1139,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/FrameComponent.html":{}}}],["frame'},{'name",{"_index":129,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["frame.component.html",{"_index":2225,"title":{},"body":{"components/FrameComponent.html":{}}}],["frame.component.scss",{"_index":2224,"title":{},"body":{"components/FrameComponent.html":{}}}],["frame/frame.component",{"_index":409,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["framecomponent",{"_index":128,"title":{"components/FrameComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["fri",{"_index":5437,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["fromat",{"_index":2384,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["fromgql",{"_index":2276,"title":{},"body":{"classes/GraphComponent.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["fromgql(gqlgraphcomponent",{"_index":2281,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["fromgql(gqlinterface",{"_index":2365,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["fromgql(gqlissue",{"_index":2395,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["fromgqlnolinks",{"_index":2430,"title":{},"body":{"classes/GraphIssue.html":{}}}],["fromgqlnolinks(gqlpartialissue",{"_index":2390,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["fromsinglelist",{"_index":3966,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["fromsinglelist(list",{"_index":3983,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["frontend",{"_index":2285,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{}}}],["full",{"_index":94,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/LinkedIssueItemComponent.html":{}}}],["fullissue",{"_index":3811,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["fullissuelink",{"_index":3802,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["fullissuesub",{"_index":3812,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["funcion",{"_index":3422,"title":{},"body":{"components/IssueListComponent.html":{}}}],["function",{"_index":595,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"interfaces/InterfaceNode.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"injectables/LabelStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"interfaces/RelationEdge.html":{},"components/SetEditorComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"classes/Vector.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functional",{"_index":5537,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["functionality",{"_index":861,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"classes/TimeFormatter.html":{}}}],["functions",{"_index":1237,"title":{},"body":{"interfaces/ComponentNode.html":{},"modules/GraphQLModule.html":{},"interfaces/InterfaceNode.html":{},"components/IssueDetailComponent.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["further",{"_index":596,"title":{},"body":{"interfaces/AppState.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/StateService.html":{}}}],["fut.then(data",{"_index":1865,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["g",{"_index":1537,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"components/IssueLabelComponent.html":{}}}],["g.append('circle",{"_index":3119,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["gamma",{"_index":3368,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["garbage",{"_index":2016,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["gather",{"_index":3880,"title":{},"body":{"components/LoginComponent.html":{}}}],["gathers",{"_index":3022,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["generate",{"_index":76,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"index.html":{}}}],["generated",{"_index":2575,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"injectables/IssueStoreService.html":{},"index.html":{}}}],["generated/graphql",{"_index":833,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/LabelStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["generatetoken",{"_index":31,"title":{},"body":{"components/AccessTokenDialogComponent.html":{}}}],["generation",{"_index":5810,"title":{},"body":{"index.html":{}}}],["generator",{"_index":2577,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"injectables/IssueStoreService.html":{},"components/MarkdownPreviewComponent.html":{},"index.html":{}}}],["generator.com",{"_index":5834,"title":{},"body":{"index.html":{}}}],["getall",{"_index":4979,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getall(filtertext",{"_index":4995,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getallfilter",{"_index":3679,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["getallfilter(projectid",{"_index":3684,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["getallprojectsgql",{"_index":4986,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getallquery",{"_index":4985,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getalltimelineitems",{"_index":3565,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getalltimelineitems(id",{"_index":3621,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getalltimelineitemsgql",{"_index":3598,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getalltimelineitemsquery",{"_index":3597,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getbasiccomponent",{"_index":1321,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getbasiccomponent(id",{"_index":1345,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getbasiccomponentgql",{"_index":1336,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getbasiccomponentquery",{"_index":1335,"title":{},"body":{"injectables/ComponentStoreService.html":{},"components/NodeDetailsComponent.html":{}}}],["getbasicproject",{"_index":4982,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getbasicproject(id",{"_index":4998,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getbasicprojectgql",{"_index":4987,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getbasicprojectquery",{"_index":531,"title":{},"body":{"interfaces/AppState.html":{},"injectables/ProjectStoreService.html":{},"injectables/StateService.html":{}}}],["getcomponent",{"_index":1369,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["getcomponent(id",{"_index":1382,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["getcomponentgql",{"_index":1330,"title":{},"body":{"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{}}}],["getcomponentinterfaces",{"_index":1322,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getcomponentinterfaces(id",{"_index":1347,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getcomponentinterfacesgql",{"_index":1338,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getcomponentinterfacesquery",{"_index":1337,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getcomponentlabels",{"_index":1323,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getcomponentlabels(id",{"_index":1349,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getcomponentlabelsgql",{"_index":1334,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getcomponentlabelsquery",{"_index":1357,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getcomponentquery",{"_index":1358,"title":{},"body":{"injectables/ComponentStoreService.html":{},"components/NodeDetailsComponent.html":{}}}],["getconsumingcomponents",{"_index":2580,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["getconsumingcomponents(id",{"_index":2596,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["getconsumingcomponentsgql",{"_index":2589,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["getconsumingcomponentsquery",{"_index":2588,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["getcurrent",{"_index":2060,"title":{},"body":{"classes/DataQuery.html":{}}}],["getcurrentuservalue",{"_index":687,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getdefaultfortype",{"_index":5736,"title":{},"body":{"coverage.html":{}}}],["getdefaultfortype(predicates[type].type",{"_index":2865,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["getdefaultfortype(type",{"_index":2854,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["getencodedid",{"_index":5291,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["getencodedid(item",{"_index":4097,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["getfullcomponent",{"_index":1324,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getfullcomponent(id",{"_index":1351,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getfullcomponentquery",{"_index":1329,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getfullissue",{"_index":3566,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getfullissue(id",{"_index":3623,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getfullissuegraphdataquery",{"_index":2917,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["getfullissuequery",{"_index":3575,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getfullproject",{"_index":4983,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getfullproject(id",{"_index":5000,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getfullprojectgql",{"_index":4989,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getfullprojectquery",{"_index":4917,"title":{},"body":{"components/ProjectMembersComponent.html":{},"injectables/ProjectStoreService.html":{},"interfaces/userMock.html":{}}}],["getfullquery",{"_index":4988,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getfulproject",{"_index":4977,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["gethasdata",{"_index":2058,"title":{},"body":{"classes/DataQuery.html":{}}}],["geticonlabel",{"_index":3294,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["geticonname",{"_index":3295,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["getinterface",{"_index":1370,"title":{},"body":{"injectables/ComponentsService.html":{},"injectables/InterfaceStoreService.html":{}}}],["getinterface(id",{"_index":1384,"title":{},"body":{"injectables/ComponentsService.html":{},"injectables/InterfaceStoreService.html":{}}}],["getinterfacegql",{"_index":1379,"title":{},"body":{"injectables/ComponentsService.html":{},"injectables/InterfaceStoreService.html":{}}}],["getinterfacequery",{"_index":2587,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"components/NodeDetailsComponent.html":{}}}],["getissuefolderid",{"_index":1228,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["getissuefolderid(id",{"_index":1296,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["getissuefolderid(node.id",{"_index":1278,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["getissuegql",{"_index":3576,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getissuegraphdatadocument",{"_index":2290,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["getissuegraphdataforsearchgql",{"_index":2915,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["getissuegraphdatagql",{"_index":2909,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["getissuegraphdataquery",{"_index":2291,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["getissuelink",{"_index":3312,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["getissuequery",{"_index":3645,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getlabelsgql",{"_index":3682,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["getlabelsquery",{"_index":1333,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getlinkhandles(g",{"_index":3125,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["getlist",{"_index":2076,"title":{},"body":{"injectables/DataService.html":{}}}],["getlist(id",{"_index":2080,"title":{},"body":{"injectables/DataService.html":{}}}],["getlistsetlength",{"_index":5266,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["getmatchinglabels",{"_index":3680,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["getmatchinglabels(projectid",{"_index":3686,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["getnode",{"_index":2075,"title":{},"body":{"injectables/DataService.html":{},"classes/NodeCache.html":{}}}],["getnode(id",{"_index":2024,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/NodeCache.html":{}}}],["getnodeid",{"_index":5292,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["getnodeid(item",{"_index":4095,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["getnodename",{"_index":4136,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["getnodetypestring",{"_index":4137,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["getnodetypestring().tolowercase",{"_index":4250,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["getparams",{"_index":2062,"title":{},"body":{"classes/DataQuery.html":{}}}],["getproject",{"_index":5014,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["getproject(id",{"_index":5022,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["getprojectgql",{"_index":5019,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["getqueryparamfilter",{"_index":3393,"title":{},"body":{"components/IssueListComponent.html":{}}}],["getremainingtypes",{"_index":2780,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["getremainingtypes(index",{"_index":2801,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["gets",{"_index":881,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/TopToolbarComponent.html":{}}}],["getsearchissuegraphdataquery",{"_index":2914,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["getselectedcategories",{"_index":3016,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["getsubscribercount",{"_index":2065,"title":{},"body":{"classes/DataQuery.html":{}}}],["gettext",{"_index":5409,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["getting",{"_index":5798,"title":{"index.html":{}},"body":{}}],["github",{"_index":1446,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["github/time",{"_index":5770,"title":{},"body":{"dependencies.html":{}}}],["give",{"_index":1248,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["given",{"_index":841,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"components/IssueIconComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gives",{"_index":4562,"title":{},"body":{"interfaces/Positions.html":{}}}],["glitch",{"_index":3826,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["globalconfig",{"_index":422,"title":{},"body":{"modules/AppModule.html":{}}}],["gm",{"_index":4638,"title":{},"body":{"interfaces/Positions.html":{}}}],["gm.addnodetogroup(node.id",{"_index":4648,"title":{},"body":{"interfaces/Positions.html":{}}}],["gm.markastreeroot(node.id",{"_index":4640,"title":{},"body":{"interfaces/Positions.html":{}}}],["gm.setgroupbehaviourof",{"_index":4643,"title":{},"body":{"interfaces/Positions.html":{}}}],["gmt+0200",{"_index":5441,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["go",{"_index":65,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["gobacktosettings",{"_index":32,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["gotolocationdetails",{"_index":3531,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["gql",{"_index":2007,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/InterfaceStoreService.html":{},"classes/NodeCache.html":{},"miscellaneous/typealiases.html":{}}}],["gqlcomponent.id",{"_index":2382,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlgraphcomponent",{"_index":2282,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"miscellaneous/typealiases.html":{}}}],["gqlgraphcomponent.featurerequests.totalcount",{"_index":2377,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlgraphcomponent.id",{"_index":2379,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlgraphcomponent.name",{"_index":2380,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlgraphcomponent.unclassified.totalcount",{"_index":2378,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlgraphcomponents",{"_index":2288,"title":{},"body":{"classes/GraphComponent.html":{}}}],["gqlinterface",{"_index":2360,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"miscellaneous/typealiases.html":{}}}],["gqlinterface.component.id",{"_index":2371,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlinterface.consumedby.nodes.map(component",{"_index":2372,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlinterface.featurerequests.totalcount",{"_index":2367,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlinterface.id",{"_index":2369,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlinterface.name",{"_index":2370,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlinterface.unclassified.totalcount",{"_index":2368,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlinterfaces",{"_index":2429,"title":{},"body":{"classes/GraphInterface.html":{}}}],["gqlissue",{"_index":2385,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"miscellaneous/typealiases.html":{}}}],["gqlissue.linkstoissues.nodes.map(gqlpartialissue",{"_index":2398,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlpartialissue",{"_index":2389,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlpartialissue.category",{"_index":2392,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlpartialissue.id",{"_index":2391,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlpartialissue.locations.nodes.map(location",{"_index":2393,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graph",{"_index":141,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["graph'},{'name",{"_index":139,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["graph.addeventlistener('click",{"_index":4463,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('edgeadd",{"_index":4371,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('edgedrop",{"_index":4376,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('edgeremove",{"_index":4373,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('nodeadd",{"_index":4452,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('nodeclick",{"_index":4433,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('nodedragend",{"_index":4441,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('nodepositionchange",{"_index":4435,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('noderemove",{"_index":4455,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('render",{"_index":4459,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('zoomchange",{"_index":4464,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.calculatelinkhandlesforedge",{"_index":3152,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["graph.component",{"_index":1094,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"modules/GraphsModule.html":{},"components/IssueGraphControlsComponent.html":{}}}],["graph.component.css",{"_index":4292,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.component.html",{"_index":4291,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.component.ts",{"_index":4265,"title":{},"body":{"interfaces/Positions.html":{},"coverage.html":{}}}],["graph.dynamictemplateregistry.adddynamictemplate('issue",{"_index":3116,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["graph.getedge(edge.createdfrom",{"_index":4385,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.getedgesbysource(sourcenode.id).foreach((existingedge",{"_index":4399,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.getnode(edge.source",{"_index":4381,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.getnode(edge.target",{"_index":4430,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.getnode(rootid",{"_index":4524,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.groupingmanager.gettreerootof(node.id",{"_index":4522,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.nodelist.foreach((node",{"_index":4397,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.oncreatedraggededge",{"_index":4366,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.ondraggededgetargetchange",{"_index":4369,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.setedgeclass",{"_index":2998,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["graph.setnodeclass",{"_index":2991,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["graph/class",{"_index":2970,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"coverage.html":{}}}],["graph/dynamic",{"_index":3103,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"coverage.html":{}}}],["graph/graph",{"_index":1213,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["graph/group",{"_index":3204,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"coverage.html":{}}}],["graph/issue",{"_index":1093,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["graph/link",{"_index":3128,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{},"coverage.html":{}}}],["graph_structure_documentation.png",{"_index":3230,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/Positions.html":{}}}],["graphcomponent",{"_index":1210,"title":{"classes/GraphComponent.html":{}},"body":{"interfaces/ComponentNode.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["graphcomponent.fromgql(gqlcomponent",{"_index":2383,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graphcomponent.mapfromgql(data.node.components.nodes",{"_index":2329,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graphdata",{"_index":2303,"title":{"interfaces/GraphData.html":{}},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["graphdata.graphlocations.values",{"_index":2321,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graphdatafactory",{"_index":2309,"title":{"classes/GraphDataFactory.html":{}},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"coverage.html":{}}}],["graphdatafactory.graphdatafromgql",{"_index":2930,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["graphdatafactory.removefiltereddata(graphdatafactory.graphdatafromgql(result.data",{"_index":2958,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["graphdataforfilter",{"_index":3065,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{}}}],["graphdataforfilter(filter",{"_index":3172,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["graphdatafromgql",{"_index":2418,"title":{},"body":{"classes/GraphDataFactory.html":{}}}],["graphdatafromgql(data",{"_index":2328,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graphedit.zoomtobox(box",{"_index":4708,"title":{},"body":{"interfaces/Positions.html":{}}}],["grapheditor",{"_index":1251,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["grapheditor.getnode(childid",{"_index":3272,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["grapheditor.zoomtobox",{"_index":4699,"title":{},"body":{"interfaces/Positions.html":{}}}],["grapheditor.zoomtobox(box",{"_index":4698,"title":{},"body":{"interfaces/Positions.html":{}}}],["graphfirstrender",{"_index":4303,"title":{},"body":{"interfaces/Positions.html":{}}}],["graphfolder",{"_index":2299,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"miscellaneous/typealiases.html":{}}}],["graphinitialized",{"_index":4305,"title":{},"body":{"interfaces/Positions.html":{}}}],["graphinterface",{"_index":1211,"title":{"classes/GraphInterface.html":{}},"body":{"interfaces/ComponentNode.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["graphinterface.fromgql(gqlinterface",{"_index":2375,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graphinterface.mapfromgql(data.node.interfaces.nodes",{"_index":2330,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graphissue",{"_index":2308,"title":{"classes/GraphIssue.html":{}},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"coverage.html":{}}}],["graphissue.fromgql(gqlissue",{"_index":2333,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graphlink",{"_index":5350,"title":{},"body":{"components/SideNavComponent.html":{}}}],["graphlocation",{"_index":2300,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"miscellaneous/typealiases.html":{}}}],["graphlocations",{"_index":2304,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graphql",{"_index":1424,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"modules/GraphQLModule.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"components/RegisterComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["graphql.module",{"_index":380,"title":{},"body":{"modules/AppModule.html":{}}}],["graphql.module.ts",{"_index":483,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlerrors",{"_index":2487,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["graphqlerrors.map(err",{"_index":2489,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["graphqlmodule",{"_index":338,"title":{"modules/GraphQLModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["graphs/graphs.module",{"_index":385,"title":{},"body":{"modules/AppModule.html":{}}}],["graphs/issue",{"_index":500,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["graphsmodule",{"_index":339,"title":{"modules/GraphsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["graphstateservice",{"_index":3074,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["graphwrapper",{"_index":4296,"title":{},"body":{"interfaces/Positions.html":{}}}],["gray",{"_index":4862,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TextDisplayComponent.html":{}}}],["green",{"_index":278,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/IssueLabelComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["grid",{"_index":2261,"title":{},"body":{"components/FrameComponent.html":{}}}],["gropius",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["group",{"_index":1233,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"interfaces/RelationEdge.html":{},"components/SideNavComponent.html":{},"miscellaneous/enumerations.html":{}}}],["groupbehaviour",{"_index":3206,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["grouping",{"_index":4633,"title":{},"body":{"interfaces/Positions.html":{}}}],["groupnode",{"_index":3218,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["groupnode.issuegroupnodeids.add(childgroup",{"_index":3284,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["groupnode.issuegroupnodeids.delete(childgroup",{"_index":3285,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["groupnode.position",{"_index":3255,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["groupnode.type",{"_index":3240,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["groupnode.x",{"_index":3247,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["groupnode.y",{"_index":3248,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["groups",{"_index":4271,"title":{},"body":{"interfaces/Positions.html":{}}}],["grow",{"_index":3093,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["gs",{"_index":1407,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["guard",{"_index":612,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":613,"title":{},"body":{"guards/AuthGuard.html":{}}}],["gui",{"_index":3898,"title":{},"body":{"components/LoginComponent.html":{}}}],["h2",{"_index":4861,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["hack",{"_index":3467,"title":{},"body":{"components/IssueListComponent.html":{}}}],["hand",{"_index":5536,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["handels",{"_index":2926,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["handle",{"_index":3115,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{}}}],["handleclick",{"_index":5540,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["handled",{"_index":957,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{}}}],["handler",{"_index":3808,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["handles",{"_index":970,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{}}}],["handles.service",{"_index":4281,"title":{},"body":{"interfaces/Positions.html":{}}}],["handles.service.ts",{"_index":3130,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{},"coverage.html":{}}}],["handles.service.ts:101",{"_index":3140,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["handles.service.ts:22",{"_index":3142,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["handles.service.ts:65",{"_index":3136,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["handles.sourcehandles",{"_index":3155,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["handles/issue",{"_index":3129,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["handling",{"_index":869,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["handset",{"_index":2223,"title":{},"body":{"components/FrameComponent.html":{}}}],["happen",{"_index":3795,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["happens",{"_index":1792,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["hardcoded",{"_index":4868,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/userMock.html":{}}}],["hasdata",{"_index":1790,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["hasin",{"_index":3301,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["hasmore",{"_index":3961,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["hasn't",{"_index":3809,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["hasnextpage",{"_index":1935,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["hasout",{"_index":3303,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["haspreviouspage",{"_index":1934,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["hasprevpage",{"_index":1980,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["having",{"_index":1718,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["header",{"_index":2273,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectListComponent.html":{}}}],["header'},{'name",{"_index":174,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["header.component",{"_index":2559,"title":{},"body":{"modules/GraphsModule.html":{}}}],["header.component.html",{"_index":4791,"title":{},"body":{"components/ProjectHeaderComponent.html":{}}}],["header.component.scss",{"_index":4790,"title":{},"body":{"components/ProjectHeaderComponent.html":{}}}],["header.component.ts",{"_index":4789,"title":{},"body":{"components/ProjectHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:12",{"_index":4794,"title":{},"body":{"components/ProjectHeaderComponent.html":{}}}],["header.component.ts:13",{"_index":4793,"title":{},"body":{"components/ProjectHeaderComponent.html":{}}}],["header/project",{"_index":2558,"title":{},"body":{"modules/GraphsModule.html":{},"components/ProjectHeaderComponent.html":{},"coverage.html":{}}}],["headers",{"_index":2478,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["headline",{"_index":4858,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["height",{"_index":268,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/FrameComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/QueryComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["help",{"_index":3088,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["helper",{"_index":2893,"title":{},"body":{"components/IssueFilterComponent.html":{},"index.html":{}}}],["hence",{"_index":1938,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["here",{"_index":1913,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphsModule.html":{},"classes/NodeCache.html":{}}}],["heuristic",{"_index":4087,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["hex",{"_index":3335,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["hidden",{"_index":2272,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/LinkedIssueItemComponent.html":{}}}],["hide",{"_index":4774,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{},"components/TimelineItemComponent.html":{}}}],["hides",{"_index":5556,"title":{},"body":{"components/UserItemComponent.html":{}}}],["highlight",{"_index":434,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"dependencies.html":{}}}],["highlighting",{"_index":3927,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["hold",{"_index":1318,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["holding",{"_index":681,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["holds",{"_index":2206,"title":{},"body":{"components/FrameComponent.html":{}}}],["home",{"_index":525,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TopToolbarComponent.html":{}}}],["hook",{"_index":879,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["horizontal",{"_index":4802,"title":{},"body":{"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["host",{"_index":3306,"title":{},"body":{"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/SetEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hostlistener",{"_index":1083,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["hostlistener('window:mousemove",{"_index":1164,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["hostlistener('window:mouseup",{"_index":1162,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["host}/api",{"_index":5874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host}/api/public",{"_index":5876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host}/login",{"_index":5878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hour",{"_index":5478,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["hours",{"_index":5467,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["hsp",{"_index":3343,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["html",{"_index":96,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["htmlelement",{"_index":4836,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["http",{"_index":664,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["http://alienryderflex.com/hsp.html",{"_index":3360,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["http://gist.github.com/983661",{"_index":3350,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["http://localhost:4200",{"_index":5806,"title":{},"body":{"index.html":{}}}],["http://localhost:6060",{"_index":5812,"title":{},"body":{"index.html":{}}}],["http://localhost:8080",{"_index":5879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":662,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["httpclientmodule",{"_index":381,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{}}}],["httperrorresponse",{"_index":3905,"title":{},"body":{"components/LoginComponent.html":{}}}],["httplink",{"_index":2446,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["httplink.create({uri",{"_index":2509,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["https://graphql",{"_index":5833,"title":{},"body":{"index.html":{}}}],["hue",{"_index":3355,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["hydrate",{"_index":5222,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["hydrated",{"_index":1831,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["hydrateinitial(data",{"_index":1997,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["hydratelist",{"_index":2008,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/SetEditorComponent.html":{},"miscellaneous/typealiases.html":{}}}],["hydrateraw",{"_index":1702,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{}}}],["hydrateraw(prepareddata",{"_index":1723,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["hydrates",{"_index":1990,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["hydration",{"_index":1871,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/typealiases.html":{}}}],["hyperlink",{"_index":3316,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["i.c.insertnodes(data",{"_index":5945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.assignees.nodes",{"_index":5928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.components.nodes",{"_index":5890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.interfaces.nodes",{"_index":5897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.issues.nodes",{"_index":5901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.issuesonlocation.nodes",{"_index":5907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.labels.nodes",{"_index":5921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.linkedbyissues.nodes",{"_index":5937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.linkstoissues.nodes",{"_index":5932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.locations.nodes",{"_index":5917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.timeline.nodes",{"_index":5912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.projects.nodes",{"_index":5885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.consumedby.nodes",{"_index":4212,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["i.consumedby.nodes.length",{"_index":4208,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["i.e",{"_index":774,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["i.name",{"_index":4207,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["i.q.components.getcomponent(id).then(data",{"_index":5948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.components.getinterface(id).then(data",{"_index":5949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.components.listprojectcomponents(list.node.id",{"_index":5886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.components.listprojectinterfaces(list.node.id",{"_index":5894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.getissueheader(id).then(data",{"_index":5950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.getlabel(id).then(data",{"_index":5957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listcomponentinterfaceissuesonlocation(list.node.id",{"_index":5908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listcomponentissues(list.node.id",{"_index":5902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listcomponentissuesonlocation(list.node.id",{"_index":5903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listcomponentlabels(list.node.id",{"_index":5922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listissueassignees(list.node.id",{"_index":5925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listissuecomponents(list.node.id",{"_index":5891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listissuelabels(list.node.id",{"_index":5923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listissuelinkedbyissues(list.node.id",{"_index":5934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listissuelinkstoissues(list.node.id",{"_index":5929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listissuelocations(list.node.id",{"_index":5914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listissuetimelineitems(list.node.id",{"_index":5909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listlabelcomponents(list.node.id",{"_index":5893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listprojectissues(list.node.id",{"_index":5898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listprojectlabels(list.node.id",{"_index":5918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.projects.getproject(id).then(data",{"_index":5946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.projects.listprojects(listparams(params)).then(data",{"_index":5882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.users.currentuser().then(data",{"_index":5952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.users.searchusers(params.filter",{"_index":5938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i1",{"_index":3416,"title":{},"body":{"components/IssueListComponent.html":{}}}],["icomponent",{"_index":3446,"title":{},"body":{"components/IssueListComponent.html":{}}}],["icon",{"_index":2212,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectListComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TopToolbarComponent.html":{}}}],["icon'},{'name",{"_index":144,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["icon.component",{"_index":2553,"title":{},"body":{"modules/GraphsModule.html":{}}}],["icon.component.html",{"_index":3293,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["icon.component.scss",{"_index":3292,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["icon.component.ts",{"_index":3291,"title":{},"body":{"components/IssueIconComponent.html":{},"coverage.html":{}}}],["icon.component.ts:13",{"_index":3296,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["icon.component.ts:15",{"_index":3298,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["icon.component.ts:30",{"_index":3297,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["icon/issue",{"_index":2552,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueIconComponent.html":{},"coverage.html":{}}}],["icondefinition",{"_index":401,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["iconname",{"_index":326,"title":{},"body":{"components/AppComponent.html":{}}}],["icons",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":548,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"interfaces/RelationEdge.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"interfaces/User.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["id.split",{"_index":3847,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["ideal",{"_index":4501,"title":{},"body":{"interfaces/Positions.html":{}}}],["identical",{"_index":3764,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["identified",{"_index":1683,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["identifier",{"_index":1834,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{}}}],["identifies",{"_index":3830,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["identity",{"_index":1895,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{}}}],["ids",{"_index":1475,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["idt",{"_index":1995,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["id}).pipe",{"_index":3660,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["id}__${issuecategory",{"_index":1297,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["if(this.mode",{"_index":5335,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["if(this.modeicon",{"_index":5337,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["ifempty",{"_index":2845,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["iff",{"_index":598,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/StateService.html":{}}}],["ignore",{"_index":1015,"title":{},"body":{"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"components/IssueContentsComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/UserNotifyService.html":{}}}],["ignored",{"_index":2030,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["ignoring",{"_index":2387,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["img",{"_index":4804,"title":{},"body":{"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["immediately",{"_index":1719,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["immutable",{"_index":3741,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["implementations",{"_index":3232,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["implemented",{"_index":5956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implements",{"_index":14,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"guards/AuthGuard.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"interfaces/userMock.html":{}}}],["import",{"_index":53,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{}}}],["important",{"_index":5379,"title":{},"body":{"components/SideNavComponent.html":{},"components/TimelineItemComponent.html":{}}}],["imported",{"_index":2524,"title":{},"body":{"modules/GraphsModule.html":{}}}],["imports",{"_index":344,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{}}}],["ims",{"_index":1421,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["imstype",{"_index":1401,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["imstype.github",{"_index":1431,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["in(black",{"_index":1674,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["inarray",{"_index":2807,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["include",{"_index":3735,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["included",{"_index":3981,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["includes",{"_index":1234,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["including",{"_index":1580,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["indented",{"_index":2120,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["index",{"_index":25,"title":{"index.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":1693,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["indicates",{"_index":2693,"title":{},"body":{"components/IssueDetailComponent.html":{},"interfaces/Positions.html":{}}}],["indicating",{"_index":3024,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/RegisterComponent.html":{}}}],["indication",{"_index":5056,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["indicator",{"_index":5063,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["indirection",{"_index":3959,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["individual",{"_index":822,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/FrameComponent.html":{}}}],["individualconfig",{"_index":2453,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/UserNotifyService.html":{}}}],["infinite",{"_index":5622,"title":{},"body":{"classes/Vector.html":{}}}],["infinitely",{"_index":5623,"title":{},"body":{"classes/Vector.html":{}}}],["infix",{"_index":2752,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{}}}],["infoconfig",{"_index":5575,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["information",{"_index":572,"title":{},"body":{"interfaces/AppState.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/LinkedIssueItemComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/StateService.html":{},"components/TopToolbarComponent.html":{},"interfaces/userMock.html":{}}}],["inherit",{"_index":2267,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/TimelineItemComponent.html":{}}}],["inherited",{"_index":1707,"title":{},"body":{"classes/DataNode.html":{}}}],["inidcate",{"_index":5051,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["initgraph",{"_index":2976,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{}}}],["initial",{"_index":1630,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["initialized",{"_index":4304,"title":{},"body":{"interfaces/Positions.html":{}}}],["initializes",{"_index":4322,"title":{},"body":{"interfaces/Positions.html":{}}}],["initially",{"_index":3934,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["initialposition",{"_index":3235,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/Positions.html":{}}}],["initiated",{"_index":3414,"title":{},"body":{"components/IssueListComponent.html":{}}}],["inject",{"_index":253,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/MultiSourceList.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"index.html":{}}}],["inject(component_context_menu_data",{"_index":1075,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["inject(mat_dialog_data",{"_index":244,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/MultiSourceList.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["injectable",{"_index":532,"title":{"injectables/AuthenticationService.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"injectables/DataService.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"injectables/StateService.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{}},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"injectables/DataService.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"injectables/StateService.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectable({providedin",{"_index":692,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{}}}],["injectables",{"_index":646,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"injectables/DataService.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"injectables/StateService.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injected",{"_index":1312,"title":{},"body":{"injectables/ComponentStoreService.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["injection",{"_index":5836,"title":{},"body":{"index.html":{}}}],["injectiontoken",{"_index":1084,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["injectiontoken('component_context_menu_data",{"_index":1105,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":1085,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["injector)).instance",{"_index":1130,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["inline",{"_index":2756,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["inmemorycache",{"_index":2444,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["inner",{"_index":1835,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{}}}],["innermapfn",{"_index":1828,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["innerqueryfn",{"_index":1811,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["inout",{"_index":319,"title":{},"body":{"components/AppComponent.html":{}}}],["input",{"_index":726,"title":{},"body":{"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"injectables/ComponentStoreService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectStoreService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"components/SettingsDialogComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["inputs",{"_index":766,"title":{},"body":{"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["inputtitle",{"_index":2677,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["insert",{"_index":1992,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["insertnodes",{"_index":4122,"title":{},"body":{"classes/NodeCache.html":{}}}],["insertnodes(nodes",{"_index":2031,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["insertresult(result",{"_index":1891,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["inserts",{"_index":2028,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["inset",{"_index":3521,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["inside",{"_index":3423,"title":{},"body":{"components/IssueListComponent.html":{},"interfaces/Positions.html":{}}}],["instance",{"_index":2463,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{},"miscellaneous/variables.html":{}}}],["instanceof",{"_index":584,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["instances",{"_index":2981,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphLinkHandlesService.html":{}}}],["instantiated",{"_index":1252,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["instead",{"_index":820,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueListComponent.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"index.html":{}}}],["int",{"_index":4196,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["int.node",{"_index":4197,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["intended",{"_index":5053,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["interacting",{"_index":1773,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["interaction",{"_index":230,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{}}}],["interactive",{"_index":1699,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueItemComponent.html":{},"classes/NodeCache.html":{}}}],["interest",{"_index":2931,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["interested",{"_index":3182,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["interface",{"_index":121,"title":{"interfaces/AppState.html":{},"interfaces/CoalescedTimelineItem.html":{},"interfaces/ComponentContextMenuData.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"interfaces/GraphData.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/QueryListParams.html":{},"interfaces/RelationEdge.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{},"interfaces/User.html":{},"interfaces/userMock.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"interfaces/userMock.html":{}}}],["interface.graphql",{"_index":2578,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["interface/:interfaceid",{"_index":519,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["interfaceconsumer",{"_index":1230,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{}}}],["interfaceid",{"_index":1291,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["interfacenode",{"_index":1218,"title":{"interfaces/InterfaceNode.html":{}},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["interfacenode.dataaspromise().then(data",{"_index":3469,"title":{},"body":{"components/IssueListComponent.html":{}}}],["interfacenode.id",{"_index":4624,"title":{},"body":{"interfaces/Positions.html":{}}}],["interfacenodes",{"_index":4571,"title":{},"body":{"interfaces/Positions.html":{}}}],["interfacenodes.foreach(interfacenode",{"_index":4585,"title":{},"body":{"interfaces/Positions.html":{}}}],["interfaceofferingcomponents",{"_index":2344,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["interfaceofferingcomponents.has(id",{"_index":2349,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["interfaces",{"_index":529,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CoalescedTimelineItem.html":{},"interfaces/ComponentContextMenuData.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/QueryListParams.html":{},"interfaces/RelationEdge.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{},"interfaces/User.html":{},"overview.html":{},"interfaces/userMock.html":{}}}],["interfaces.get(interfaceid).offeredby",{"_index":2347,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["interfaces.has(locationid)).map(interfaceid",{"_index":2346,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["interfaces.node.interfaces.nodes",{"_index":4205,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["interfacesize",{"_index":4726,"title":{},"body":{"interfaces/Positions.html":{}}}],["interfacestore",{"_index":1557,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{}}}],["interfacestoreservice",{"_index":1553,"title":{"injectables/InterfaceStoreService.html":{}},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"injectables/InterfaceStoreService.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["internal",{"_index":1870,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["interplay",{"_index":3233,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["intrface",{"_index":4573,"title":{},"body":{"interfaces/Positions.html":{}}}],["intrface.id",{"_index":1265,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["intrface.name",{"_index":1266,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["intrface.offeredby",{"_index":1268,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["invalid",{"_index":1442,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/NodeDetailsComponent.html":{},"components/RegisterComponent.html":{}}}],["invalidate",{"_index":1703,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["invalidatelists",{"_index":2078,"title":{},"body":{"injectables/DataService.html":{}}}],["invalidatelists(selector",{"_index":2083,"title":{},"body":{"injectables/DataService.html":{}}}],["invalidates",{"_index":2085,"title":{},"body":{"injectables/DataService.html":{}}}],["invalidating",{"_index":2101,"title":{},"body":{"injectables/DataService.html":{}}}],["invalidcredentials",{"_index":3884,"title":{},"body":{"components/LoginComponent.html":{}}}],["investigate",{"_index":5128,"title":{},"body":{"interfaces/QueryListParams.html":{}}}],["invisible",{"_index":4625,"title":{},"body":{"interfaces/Positions.html":{}}}],["invoke",{"_index":5840,"title":{},"body":{"index.html":{}}}],["invoked",{"_index":624,"title":{},"body":{"guards/AuthGuard.html":{}}}],["invokes",{"_index":2929,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["involves",{"_index":2126,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["irrelevant",{"_index":3178,"title":{},"body":{"injectables/IssueGraphStateService.html":{},"interfaces/Positions.html":{}}}],["isbehind",{"_index":5606,"title":{},"body":{"classes/Vector.html":{}}}],["isbehind(source",{"_index":5631,"title":{},"body":{"classes/Vector.html":{}}}],["isclosed",{"_index":314,"title":{},"body":{"components/AppComponent.html":{}}}],["iscoalesced",{"_index":825,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["iscomponent",{"_index":3532,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["isduplicate",{"_index":2839,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["isfilterlabel",{"_index":2154,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"coverage.html":{}}}],["isfilterlabel(item)).map(item",{"_index":2183,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["isfilterlabel(label",{"_index":2186,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/TextFragment.html":{}}}],["ishandset",{"_index":2226,"title":{},"body":{"components/FrameComponent.html":{},"interfaces/Positions.html":{},"components/TopToolbarComponent.html":{}}}],["isinset",{"_index":5293,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["isinset(item",{"_index":4099,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["isissuebody",{"_index":986,"title":{},"body":{"components/CommentComponent.html":{}}}],["islinkedbyissues",{"_index":2846,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["isloading",{"_index":3885,"title":{},"body":{"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["islocalset",{"_index":4068,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["isn't",{"_index":4500,"title":{},"body":{"interfaces/Positions.html":{}}}],["isnextsublazy",{"_index":1832,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["isopen",{"_index":2837,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["isprojectset",{"_index":2227,"title":{},"body":{"components/FrameComponent.html":{}}}],["isprojecturl",{"_index":5380,"title":{},"body":{"injectables/StateService.html":{}}}],["isprojecturl(url",{"_index":601,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["isright",{"_index":5969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["issue",{"_index":123,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["issue$.current?.usercaneditissue",{"_index":2712,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["issue's",{"_index":994,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueItemComponent.html":{},"components/LinkedIssueItemComponent.html":{}}}],["issue.assignees.nodes",{"_index":3505,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issue.assigneesstring",{"_index":3502,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issue.category",{"_index":2409,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{}}}],["issue.createdby.displayname",{"_index":3509,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issue.graphql",{"_index":3562,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["issue.id",{"_index":4540,"title":{},"body":{"interfaces/Positions.html":{}}}],["issue.isopen",{"_index":3450,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issue.labels.nodes",{"_index":3507,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issue.labelsstring",{"_index":3503,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issue.linksissues",{"_index":2397,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["issue.search",{"_index":3510,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issue.title",{"_index":2738,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueItemComponent.html":{}}}],["issuecategory",{"_index":1214,"title":{},"body":{"interfaces/ComponentNode.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/FilterState.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/typealiases.html":{}}}],["issuecategory.bug",{"_index":2357,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"miscellaneous/variables.html":{}}}],["issuecategory.featurerequest",{"_index":2358,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"miscellaneous/variables.html":{}}}],["issuecategory.unclassified",{"_index":2359,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"miscellaneous/variables.html":{}}}],["issuecategory[key",{"_index":4657,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuecategorycomponent",{"_index":130,"title":{"components/IssueCategoryComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuecomment",{"_index":1009,"title":{},"body":{"components/CommentComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["issuecontainersize",{"_index":4727,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuecontentscomponent",{"_index":132,"title":{"components/IssueContentsComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuecount",{"_index":1276,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["issuecounts",{"_index":4654,"title":{},"body":{"interfaces/Positions.html":{},"coverage.html":{}}}],["issuecounts(bugcount",{"_index":2356,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["issuecounts(gqlgraphcomponent.bugs.totalcount",{"_index":2376,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["issuecounts(gqlinterface.bugs.totalcount",{"_index":2366,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["issuecounts.get(issuecategory",{"_index":4659,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuecounts.has(issuecategory",{"_index":4658,"title":{},"body":{"interfaces/Positions.html":{}}}],["issued",{"_index":4313,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuedata",{"_index":1569,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["issuedetailcomponent",{"_index":134,"title":{"components/IssueDetailComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issueeditable",{"_index":2678,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["issuefilter",{"_index":2769,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{}}}],["issuefiltercomponent",{"_index":136,"title":{"components/IssueFilterComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["issuefoldernode",{"_index":1275,"title":{"interfaces/IssueFolderNode.html":{}},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["issuefoldernode.id",{"_index":4664,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraph",{"_index":1106,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/IssueGraphControlsComponent.html":{}}}],["issuegraphapiservice",{"_index":2900,"title":{"injectables/IssueGraphApiService.html":{}},"body":{"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"coverage.html":{}}}],["issuegraphclasssettersservice",{"_index":2969,"title":{"injectables/IssueGraphClassSettersService.html":{}},"body":{"injectables/IssueGraphClassSettersService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["issuegraphcomponent",{"_index":138,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuegraphcontrolscomponent",{"_index":140,"title":{"components/IssueGraphControlsComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuegraphcontrolscomponents",{"_index":4314,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphdynamictemplateregistryservice",{"_index":3102,"title":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["issuegraphlinkhandlesservice",{"_index":3127,"title":{"injectables/IssueGraphLinkHandlesService.html":{}},"body":{"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["issuegraphnodes",{"_index":4277,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.createcomponentnode(component",{"_index":4569,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.createinterfacenode(intrface",{"_index":4574,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.createissuefoldernode(node",{"_index":4660,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.createissuegroupcontainernode(node",{"_index":4641,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.createrelationedge(foldernode.id",{"_index":4676,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.getissuefolderid(issuenodeid",{"_index":4677,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.interfacenode",{"_index":4615,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.issuenode",{"_index":4578,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.issuenode[]).concat(interfacenodes",{"_index":4577,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.nodetype.component",{"_index":4390,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.nodetype.interface",{"_index":4391,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.nodetype.interfaceconsumer",{"_index":4404,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.nodetype.issuegroupcontainer",{"_index":4443,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.position",{"_index":4421,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphstateservice",{"_index":1402,"title":{"injectables/IssueGraphStateService.html":{}},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["issuegroupcontainer",{"_index":1232,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{}}}],["issuegroupcontainerbehaviour",{"_index":3203,"title":{"classes/IssueGroupContainerBehaviour.html":{}},"body":{"classes/IssueGroupContainerBehaviour.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["issuegroupcontainernode",{"_index":1219,"title":{"interfaces/IssueGroupContainerNode.html":{}},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["issuegroupcontainernode.id",{"_index":4649,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegroupcontainerparentbehaviour",{"_index":3234,"title":{"classes/IssueGroupContainerParentBehaviour.html":{}},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["issuegroupcontainerparentbehaviour(initialposition",{"_index":4644,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegroupnodeids",{"_index":1269,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["issuegroupparents",{"_index":4307,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegroups",{"_index":4266,"title":{},"body":{"interfaces/Positions.html":{}}}],["issueheadercomponent",{"_index":4796,"title":{},"body":{"components/ProjectIssueListComponent.html":{}}}],["issueiconcomponent",{"_index":143,"title":{"components/IssueIconComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issueid",{"_index":516,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueDetailComponent.html":{}}}],["issueinput",{"_index":3617,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["issueitemcomponent",{"_index":145,"title":{"components/IssueItemComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuelabelcomponent",{"_index":147,"title":{"components/IssueLabelComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuelabelcomponent.labelcolorforbackground(color",{"_index":3372,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["issuelist",{"_index":4538,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuelistcomponent",{"_index":149,"title":{"components/IssueListComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuelistid",{"_index":4132,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/ProjectIssueListComponent.html":{}}}],["issuelistparams",{"_index":5854,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["issuelocation",{"_index":3534,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["issuelocationcomponent",{"_index":151,"title":{"components/IssueLocationComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuelocations",{"_index":3867,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["issuenode",{"_index":1209,"title":{"interfaces/IssueNode.html":{}},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["issuenodeid",{"_index":2718,"title":{},"body":{"components/IssueDetailComponent.html":{},"interfaces/Positions.html":{}}}],["issuenodes",{"_index":4576,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuenodes.foreach(node",{"_index":4579,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuenodes.length",{"_index":4590,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuepage",{"_index":2292,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["issueregex",{"_index":2961,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["issueregex}).pipe",{"_index":2964,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["issues",{"_index":515,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/ComponentNode.html":{},"interfaces/FilterSelection.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"injectables/QueriesService.html":{},"interfaces/RelationEdge.html":{},"components/SideNavComponent.html":{},"interfaces/TextFragment.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["issues&quot",{"_index":2945,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["issues.service",{"_index":5037,"title":{},"body":{"injectables/QueriesService.html":{}}}],["issuesidebarcomponent",{"_index":153,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issueslink",{"_index":5351,"title":{},"body":{"components/SideNavComponent.html":{}}}],["issuesonlocation",{"_index":3866,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["issuesservice",{"_index":5030,"title":{},"body":{"injectables/QueriesService.html":{},"coverage.html":{}}}],["issuestoreservice",{"_index":3556,"title":{"injectables/IssueStoreService.html":{}},"body":{"injectables/IssueStoreService.html":{},"coverage.html":{}}}],["issuestub",{"_index":3797,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["issuestub.title",{"_index":3820,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["issuesub",{"_index":2679,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["issuetimelineitem",{"_index":827,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["issuing",{"_index":5156,"title":{},"body":{"components/RegisterComponent.html":{}}}],["iszero",{"_index":5607,"title":{},"body":{"classes/Vector.html":{}}}],["it's",{"_index":621,"title":{},"body":{"guards/AuthGuard.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["italic",{"_index":5427,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["item",{"_index":207,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"miscellaneous/typealiases.html":{}}}],["item's",{"_index":931,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item'},{'name",{"_index":146,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["item.component",{"_index":469,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CoalescedTimelineItem.html":{},"modules/GraphsModule.html":{}}}],["item.component.html",{"_index":3311,"title":{},"body":{"components/IssueItemComponent.html":{},"components/LinkedIssueItemComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/UserItemComponent.html":{}}}],["item.component.name",{"_index":2887,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["item.component.scss",{"_index":3310,"title":{},"body":{"components/IssueItemComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/UserItemComponent.html":{}}}],["item.component.ts",{"_index":3309,"title":{},"body":{"components/IssueItemComponent.html":{},"components/LinkedIssueItemComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/UserItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:12",{"_index":5533,"title":{},"body":{"directives/TimelineSingleItemDirective.html":{},"components/UserItemComponent.html":{}}}],["item.component.ts:13",{"_index":3319,"title":{},"body":{"components/IssueItemComponent.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["item.component.ts:14",{"_index":5557,"title":{},"body":{"components/UserItemComponent.html":{}}}],["item.component.ts:15",{"_index":3317,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["item.component.ts:16",{"_index":5555,"title":{},"body":{"components/UserItemComponent.html":{}}}],["item.component.ts:17",{"_index":3315,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["item.component.ts:19",{"_index":3314,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["item.component.ts:22",{"_index":3806,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["item.component.ts:24",{"_index":3320,"title":{},"body":{"components/IssueItemComponent.html":{},"components/LinkedIssueItemComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{}}}],["item.component.ts:25",{"_index":5483,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{}}}],["item.component.ts:27",{"_index":3810,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["item.component.ts:31",{"_index":3804,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["item.component.ts:37",{"_index":5531,"title":{},"body":{"directives/TimelineItemDeletedDirective.html":{}}}],["item.component.ts:38",{"_index":5532,"title":{},"body":{"directives/TimelineItemDeletedDirective.html":{}}}],["item.component.ts:42",{"_index":3807,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["item.component.ts:54",{"_index":5504,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["item.component.ts:56",{"_index":5503,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["item.component.ts:59",{"_index":5506,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["item.component.ts:61",{"_index":5508,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["item.component.ts:63",{"_index":5507,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["item.component.ts:65",{"_index":5505,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["item.component.ts:66",{"_index":5502,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["item.createdby",{"_index":934,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item.createdby.displayname",{"_index":935,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item.id",{"_index":2173,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/IssueFilterComponent.html":{},"components/LabelSearchComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{}}}],["item.label",{"_index":847,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item.linkedissue",{"_index":858,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item.location",{"_index":854,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item.name",{"_index":1539,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/FilterSelection.html":{},"components/IssueFilterComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["item.removedcomponent",{"_index":852,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item.removedlabel",{"_index":849,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item.removedlinkedissue",{"_index":860,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item.removedlocation",{"_index":856,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item/issue",{"_index":2549,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueItemComponent.html":{},"coverage.html":{}}}],["item/user",{"_index":2551,"title":{},"body":{"modules/GraphsModule.html":{},"components/UserItemComponent.html":{},"coverage.html":{}}}],["item::before",{"_index":5525,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["itemdirective",{"_index":209,"title":{"directives/ItemDirective.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["itemfilterfunction",{"_index":839,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"miscellaneous/typealiases.html":{}}}],["itemfilterfunction|undefined",{"_index":946,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["itemops",{"_index":4059,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/typealiases.html":{}}}],["items",{"_index":811,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/FilterSelection.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"miscellaneous/variables.html":{}}}],["items.filter(x",{"_index":3693,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["items.push(item",{"_index":4049,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["items.splice(this.limit",{"_index":4053,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["items.values",{"_index":910,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["items/events",{"_index":823,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["itemtemplate",{"_index":764,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["itemtype",{"_index":911,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["iterate",{"_index":3761,"title":{},"body":{"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["itself",{"_index":2218,"title":{},"body":{"components/FrameComponent.html":{},"interfaces/Positions.html":{},"components/TopToolbarComponent.html":{}}}],["javascript",{"_index":3853,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["join",{"_index":2966,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["json",{"_index":4684,"title":{},"body":{"interfaces/Positions.html":{}}}],["json.parse(atob(response.token.split('.')[1",{"_index":710,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["json.parse(data",{"_index":4356,"title":{},"body":{"interfaces/Positions.html":{}}}],["json.parse(localstorage.getitem(this.userstoragekey",{"_index":698,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["json.parse(previousboundingboxasstring",{"_index":4693,"title":{},"body":{"interfaces/Positions.html":{}}}],["json.parse(zoomtransformasstring",{"_index":4694,"title":{},"body":{"interfaces/Positions.html":{}}}],["json.parse(zoomtransformasstring).k",{"_index":4712,"title":{},"body":{"interfaces/Positions.html":{}}}],["json.stringify(this.graph.currentviewwindow",{"_index":4336,"title":{},"body":{"interfaces/Positions.html":{}}}],["json.stringify(this.graph.currentzoomtransform",{"_index":4334,"title":{},"body":{"interfaces/Positions.html":{}}}],["json.stringify(this.savedpositions",{"_index":4363,"title":{},"body":{"interfaces/Positions.html":{}}}],["json.stringify(user",{"_index":700,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["jump",{"_index":4954,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["jumps",{"_index":4840,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["justify",{"_index":1671,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/TopToolbarComponent.html":{}}}],["jwt",{"_index":649,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["k",{"_index":2203,"title":{},"body":{"interfaces/FilterState.html":{}}}],["keep",{"_index":704,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["keeps",{"_index":2012,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"classes/Vector.html":{}}}],["key",{"_index":301,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"classes/MultiSourceList.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["key.split",{"_index":4038,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["keyed",{"_index":2832,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["keyframes",{"_index":1639,"title":{},"body":{"components/CreateIssueDialogComponent.html":{}}}],["keys",{"_index":1973,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/SetEditorComponent.html":{}}}],["keys[keys.length",{"_index":1975,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["keyset",{"_index":1515,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["keyset.add(encodenodeid(item",{"_index":1520,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["keyset.delete(encodenodeid(item",{"_index":1522,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["keyset.has(encodenodeid(item",{"_index":1518,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["keyword",{"_index":3411,"title":{},"body":{"components/IssueListComponent.html":{},"components/MarkdownPreviewComponent.html":{}}}],["keywords",{"_index":3424,"title":{},"body":{"components/IssueListComponent.html":{}}}],["knowledge",{"_index":1941,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["label",{"_index":118,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["label'},{'name",{"_index":148,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["label.component",{"_index":2546,"title":{},"body":{"modules/GraphsModule.html":{}}}],["label.component.html",{"_index":3329,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["label.component.scss",{"_index":3328,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["label.component.ts",{"_index":3327,"title":{},"body":{"components/IssueLabelComponent.html":{},"coverage.html":{}}}],["label.component.ts:14",{"_index":3332,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["label.component.ts:20",{"_index":3334,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["label.component.ts:65",{"_index":3339,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["label.id",{"_index":2960,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["label.name",{"_index":3508,"title":{},"body":{"components/IssueListComponent.html":{}}}],["label/issue",{"_index":2545,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueLabelComponent.html":{},"coverage.html":{}}}],["label/label",{"_index":2950,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["label?.name",{"_index":3373,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["labelcolorforbackground",{"_index":3330,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["labelcolorforbackground(color",{"_index":3333,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["labeled",{"_index":5388,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["labelisdark",{"_index":3331,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["labelisdark(color",{"_index":3338,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["labelledevent",{"_index":846,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["labels",{"_index":1474,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/FilterSelection.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"interfaces/NodeId.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["labels.length",{"_index":2954,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["labels.map(label",{"_index":2959,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["labelsearch",{"_index":3014,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["labelsearchcomponent",{"_index":155,"title":{"components/LabelSearchComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["labelsinput",{"_index":2166,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["labelsloading",{"_index":2165,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["labelstore",{"_index":2169,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["labelstoreservice",{"_index":2155,"title":{"injectables/LabelStoreService.html":{}},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/TextFragment.html":{},"coverage.html":{}}}],["labeltext",{"_index":5394,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["landing",{"_index":4807,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["language",{"_index":2940,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"components/MarkdownEditorComponent.html":{}}}],["larger",{"_index":3923,"title":{},"body":{"components/LoginComponent.html":{}}}],["last",{"_index":1971,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/LinkedIssueItemComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"interfaces/QueryListParams.html":{}}}],["last_height",{"_index":1136,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["last_width",{"_index":1134,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["lastloadtime",{"_index":1817,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["lastpageitemid",{"_index":1972,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["lastqueriedprojectname",{"_index":4810,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["layer",{"_index":3958,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["layour",{"_index":4747,"title":{},"body":{"interfaces/Positions.html":{}}}],["layout",{"_index":2103,"title":{},"body":{"injectables/DataService.html":{},"interfaces/Positions.html":{},"index.html":{}}}],["layout.ts",{"_index":3699,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{},"coverage.html":{}}}],["layout.ts:100",{"_index":5641,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:109",{"_index":5628,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:123",{"_index":5621,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:133",{"_index":5633,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:143",{"_index":3725,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:146",{"_index":3720,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:149",{"_index":3722,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:152",{"_index":3724,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:155",{"_index":3726,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:158",{"_index":3728,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:161",{"_index":3718,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:164",{"_index":3730,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:167",{"_index":3715,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:170",{"_index":3713,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:173",{"_index":3712,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:186",{"_index":3738,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:195",{"_index":3732,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:29",{"_index":5632,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:40",{"_index":5644,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:47",{"_index":5634,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:55",{"_index":5635,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:64",{"_index":5615,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:73",{"_index":5618,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:8",{"_index":5613,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:84",{"_index":5649,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:9",{"_index":5612,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:92",{"_index":5637,"title":{},"body":{"classes/Vector.html":{}}}],["layoutgraph",{"_index":3017,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["layoutmodule",{"_index":354,"title":{},"body":{"modules/AppModule.html":{}}}],["layoutnode",{"_index":3697,"title":{"classes/LayoutNode.html":{}},"body":{"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{},"coverage.html":{}}}],["layoutnode(node.id",{"_index":4749,"title":{},"body":{"interfaces/Positions.html":{}}}],["layoutnode.padding_component",{"_index":3750,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["layoutnode.padding_interface",{"_index":3751,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["layoutnode.position.x",{"_index":4759,"title":{},"body":{"interfaces/Positions.html":{}}}],["layoutnode.position.y",{"_index":4760,"title":{},"body":{"interfaces/Positions.html":{}}}],["lazily",{"_index":773,"title":{},"body":{"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{}}}],["lazy",{"_index":767,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["ld",{"_index":3874,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["lead",{"_index":3419,"title":{},"body":{"components/IssueListComponent.html":{}}}],["leak",{"_index":1804,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["leaving",{"_index":756,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["left",{"_index":1072,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["leftdistance",{"_index":3250,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["legend",{"_index":95,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["length",{"_index":737,"title":{},"body":{"classes/CCIMSValidators.html":{},"classes/Vector.html":{}}}],["lets",{"_index":1776,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"classes/NodeCache.html":{}}}],["levels",{"_index":4636,"title":{},"body":{"interfaces/Positions.html":{}}}],["li",{"_index":5511,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["lifecycle",{"_index":878,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["light",{"_index":3340,"title":{},"body":{"components/IssueLabelComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["light_mode",{"_index":5338,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["lightgray",{"_index":5207,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["limit",{"_index":3962,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["limitation",{"_index":3852,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["line",{"_index":2117,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"classes/Vector.html":{}}}],["line.replace('\\n",{"_index":5421,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["line.replace(\\'\\n",{"_index":5428,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["line:component",{"_index":796,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["lines",{"_index":2116,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["link",{"_index":753,"title":{},"body":{"classes/CCIMSValidators.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"components/IssueContentsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"injectables/IssueStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"coverage.html":{}}}],["link(linkissueinput",{"_index":3625,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["linked",{"_index":159,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"miscellaneous/variables.html":{}}}],["linked).catch(err",{"_index":1617,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["linkedbyissues",{"_index":2847,"title":{},"body":{"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["linkedissue",{"_index":2410,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["linkedissue.category",{"_index":2414,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["linkedissueitemcomponent",{"_index":157,"title":{"components/LinkedIssueItemComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["linkedissues",{"_index":2638,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["linkedissuesub",{"_index":2639,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["linkevent",{"_index":857,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["linkhandle",{"_index":3113,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{}}}],["linkhandle.x",{"_index":3160,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["linkhandle.y",{"_index":3163,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["linkhandlecalculation",{"_index":3145,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["linking",{"_index":3560,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["linkissue",{"_index":3573,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["linkissuegql",{"_index":3574,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["linkissueinput",{"_index":3626,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["linkissues",{"_index":2307,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["links",{"_index":2388,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["linksissues",{"_index":2386,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["linkstoissues",{"_index":1586,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["list",{"_index":371,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/CoalescedTimelineItem.html":{},"injectables/ComponentsService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["list'},{'name",{"_index":150,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["list.component",{"_index":373,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphsModule.html":{}}}],["list.component.html",{"_index":3379,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{}}}],["list.component.scss",{"_index":3378,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{}}}],["list.component.ts",{"_index":3375,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"coverage.html":{}}}],["list.component.ts:163",{"_index":3410,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:18",{"_index":4822,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.component.ts:188",{"_index":3401,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:19",{"_index":4799,"title":{},"body":{"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{}}}],["list.component.ts:197",{"_index":3403,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:20",{"_index":4798,"title":{},"body":{"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{}}}],["list.component.ts:207",{"_index":3420,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:21",{"_index":4823,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.component.ts:22",{"_index":4817,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.component.ts:24",{"_index":4797,"title":{},"body":{"components/ProjectIssueListComponent.html":{}}}],["list.component.ts:245",{"_index":3412,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:33",{"_index":3398,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:34",{"_index":3399,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectListComponent.html":{}}}],["list.component.ts:35",{"_index":3439,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:36",{"_index":3435,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:39",{"_index":3428,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:40",{"_index":3432,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:43",{"_index":3429,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:44",{"_index":3431,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:47",{"_index":3430,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:50",{"_index":4821,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.component.ts:51",{"_index":3426,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:53",{"_index":3425,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:55",{"_index":3434,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:56",{"_index":3427,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:57",{"_index":3440,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:58",{"_index":3444,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:60",{"_index":3438,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:61",{"_index":3443,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:62",{"_index":3397,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectListComponent.html":{}}}],["list.component.ts:70",{"_index":4820,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.component.ts:77",{"_index":3409,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:93",{"_index":3406,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.interactive",{"_index":4022,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["list.invalidate",{"_index":2105,"title":{},"body":{"injectables/DataService.html":{}}}],["list.loaddebounced",{"_index":2106,"title":{},"body":{"injectables/DataService.html":{}}}],["list.subscribe",{"_index":4025,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["list.subscribercount",{"_index":2100,"title":{},"body":{"injectables/DataService.html":{}}}],["list/issue",{"_index":2531,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["list/project",{"_index":505,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GraphsModule.html":{},"components/ProjectIssueListComponent.html":{},"coverage.html":{}}}],["list]=\"linkedissues",{"_index":2658,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["listall",{"_index":2842,"title":{},"body":{"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/variables.html":{}}}],["listallissues",{"_index":2827,"title":{},"body":{"components/IssueFilterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["listed",{"_index":867,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["listen",{"_index":577,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["listeners",{"_index":4290,"title":{},"body":{"interfaces/Positions.html":{}}}],["listening",{"_index":551,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["listento",{"_index":5107,"title":{},"body":{"components/QueryComponent.html":{}}}],["listento(query",{"_index":5090,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["listfromnode",{"_index":4003,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["listid",{"_index":1470,"title":{"interfaces/ListId.html":{}},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"components/ProjectIssueListComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["listidenc",{"_index":2088,"title":{},"body":{"injectables/DataService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"interfaces/NodeId.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/typealiases.html":{}}}],["listing",{"_index":2826,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["listparams",{"_index":1745,"title":{"interfaces/ListParams.html":{}},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["listparams(params",{"_index":5904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listparams(params)).then(data",{"_index":5887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listprojectcomponents",{"_index":1371,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["listprojectcomponents(project",{"_index":1386,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["listprojectcomponentsgql",{"_index":1374,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["listprojectinterfaces",{"_index":1372,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["listprojectinterfaces(project",{"_index":1389,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["listprojectinterfacesgql",{"_index":1376,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["listprojects",{"_index":5015,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["listprojects(list",{"_index":5024,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["listprojectsgql",{"_index":5017,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["listqueries",{"_index":5675,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["listqueries[type",{"_index":5959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listqueries[type][node.type",{"_index":5960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listqueries[type][node.type](i",{"_index":5963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listqueryinput",{"_index":5859,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["listresult",{"_index":1750,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lists",{"_index":1901,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["listset",{"_index":4061,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["listsetsub",{"_index":4070,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["listtype",{"_index":835,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"injectables/DataService.html":{},"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"components/ProjectIssueListComponent.html":{},"miscellaneous/enumerations.html":{}}}],["listtype.assignees",{"_index":5924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listtype.componentinterfaces",{"_index":2853,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["listtype.components",{"_index":1490,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["listtype.issuelocations",{"_index":5913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listtype.issues",{"_index":2830,"title":{},"body":{"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"components/ProjectIssueListComponent.html":{},"miscellaneous/variables.html":{}}}],["listtype.issuesonlocation",{"_index":4186,"title":{},"body":{"components/NodeDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["listtype.labels",{"_index":3453,"title":{},"body":{"components/IssueListComponent.html":{},"miscellaneous/variables.html":{}}}],["listtype.linkedbyissues",{"_index":5933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listtype.linkedissues",{"_index":2643,"title":{},"body":{"components/IssueContentsComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/variables.html":{}}}],["listtype.projects",{"_index":5881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listtype.searchusers",{"_index":2850,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["listtype.timelineitems",{"_index":887,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"miscellaneous/variables.html":{}}}],["listtype[ld.type",{"_index":3877,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["listtype[parts[1",{"_index":3873,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["listtype[type",{"_index":5962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listwrapper",{"_index":4852,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["literal",{"_index":1551,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":1503,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/ProjectListComponent.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{}}}],["loaddebounced",{"_index":1704,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{}}}],["loaddebounced(interactive",{"_index":1729,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["loaded",{"_index":780,"title":{},"body":{"components/CacheNodeComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/variables.html":{}}}],["loadifneeded",{"_index":1700,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["loadimpl(fut",{"_index":1854,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["loading",{"_index":235,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"components/IssueDetailComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/ProjectListComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/enumerations.html":{}}}],["loadissuegraphdata",{"_index":2905,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{}}}],["loadissuegraphdata(projectid",{"_index":2921,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["loadlabels",{"_index":2188,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["loads",{"_index":761,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/variables.html":{}}}],["loadsavedpositions",{"_index":4354,"title":{},"body":{"interfaces/Positions.html":{}}}],["loadtimeout",{"_index":1830,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["local",{"_index":671,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"modules/GraphQLModule.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"interfaces/User.html":{}}}],["localissuedata",{"_index":1584,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"miscellaneous/typealiases.html":{}}}],["localset",{"_index":4069,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["localstorage",{"_index":650,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Positions.html":{},"interfaces/User.html":{}}}],["localstorage.getitem('token",{"_index":2502,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["localstorage.getitem(`zoomboundingbox_${this.projectstoragekey",{"_index":4686,"title":{},"body":{"interfaces/Positions.html":{}}}],["localstorage.getitem(`zoomtransform_${this.projectstoragekey",{"_index":4689,"title":{},"body":{"interfaces/Positions.html":{}}}],["localstorage.getitem(this.projectstoragekey",{"_index":4355,"title":{},"body":{"interfaces/Positions.html":{}}}],["localstorage.removeitem('currentuser",{"_index":715,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["localstorage.removeitem('token",{"_index":716,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["localstorage.setitem('token",{"_index":707,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["localstorage.setitem(`zoomboundingbox_${this.projectstoragekey",{"_index":4335,"title":{},"body":{"interfaces/Positions.html":{}}}],["localstorage.setitem(`zoomtransform_${this.projectstoragekey",{"_index":4333,"title":{},"body":{"interfaces/Positions.html":{}}}],["localstorage.setitem(this.projectstoragekey",{"_index":4364,"title":{},"body":{"interfaces/Positions.html":{}}}],["localstorage.setitem(this.userstoragekey",{"_index":699,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["location",{"_index":1631,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"components/IssueLocationComponent.html":{},"miscellaneous/variables.html":{}}}],["location's",{"_index":3537,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["location'},{'name",{"_index":152,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["location.component",{"_index":2567,"title":{},"body":{"modules/GraphsModule.html":{}}}],["location.component.html",{"_index":3530,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["location.component.scss",{"_index":3529,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["location.component.ts",{"_index":3528,"title":{},"body":{"components/IssueLocationComponent.html":{},"coverage.html":{}}}],["location.component.ts:15",{"_index":3535,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["location.component.ts:17",{"_index":3533,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["location.component.ts:23",{"_index":3538,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["location.component.ts:28",{"_index":3536,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["location.id",{"_index":2394,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["location.issues",{"_index":2322,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["location.name",{"_index":3544,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["location/issue",{"_index":2566,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueLocationComponent.html":{},"coverage.html":{}}}],["locationid",{"_index":2297,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"miscellaneous/typealiases.html":{}}}],["locationids",{"_index":2335,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["locationids.filter(id",{"_index":2348,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["locations",{"_index":1581,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"miscellaneous/variables.html":{}}}],["log",{"_index":3921,"title":{},"body":{"components/LoginComponent.html":{},"components/TopToolbarComponent.html":{}}}],["logged",{"_index":618,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{}}}],["loggin",{"_index":4808,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["logic",{"_index":3449,"title":{},"body":{"components/IssueListComponent.html":{},"interfaces/Positions.html":{}}}],["login",{"_index":521,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["login'},{'name",{"_index":161,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["login(username",{"_index":666,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["login.component.html",{"_index":3883,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":3882,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":408,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["logincomponent",{"_index":160,"title":{"components/LoginComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["loginurl",{"_index":5877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logout",{"_index":657,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{}}}],["lollipop",{"_index":4618,"title":{},"body":{"interfaces/Positions.html":{}}}],["long",{"_index":1754,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["longer",{"_index":927,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"injectables/IssueGraphStateService.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["look",{"_index":566,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"injectables/StateService.html":{},"index.html":{}}}],["loop",{"_index":3792,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["lowercase",{"_index":4952,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["made",{"_index":3937,"title":{},"body":{"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/typealiases.html":{}}}],["main",{"_index":1806,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"classes/NodeCache.html":{}}}],["make",{"_index":573,"title":{},"body":{"interfaces/AppState.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"injectables/StateService.html":{},"classes/Vector.html":{},"index.html":{}}}],["makecommentid(node",{"_index":971,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["makecomponentfilter(search",{"_index":1508,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["makefilter",{"_index":2844,"title":{},"body":{"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/variables.html":{}}}],["makes",{"_index":2222,"title":{},"body":{"components/FrameComponent.html":{},"injectables/IssueGraphApiService.html":{}}}],["making",{"_index":5243,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["manage",{"_index":4866,"title":{},"body":{"components/ProjectMembersComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/userMock.html":{}}}],["manageclasssetters",{"_index":2977,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["manageclasssetters(graph",{"_index":2978,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["managed",{"_index":5813,"title":{},"body":{"index.html":{}}}],["managedragbehaviour(graph",{"_index":4365,"title":{},"body":{"interfaces/Positions.html":{}}}],["managedynamictemplateregistry",{"_index":3108,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["managedynamictemplateregistry(graph",{"_index":3109,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["manageeventlisteners(graph",{"_index":4432,"title":{},"body":{"interfaces/Positions.html":{}}}],["managelinkhandles",{"_index":3133,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["managelinkhandles(graph",{"_index":3141,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["management",{"_index":5809,"title":{},"body":{"index.html":{}}}],["manager",{"_index":4634,"title":{},"body":{"interfaces/Positions.html":{}}}],["manages",{"_index":1052,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{},"components/SideNavComponent.html":{}}}],["managing",{"_index":2974,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{}}}],["manipulation",{"_index":3180,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["manually",{"_index":1800,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"miscellaneous/typealiases.html":{}}}],["many",{"_index":4527,"title":{},"body":{"interfaces/Positions.html":{}}}],["map",{"_index":691,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"injectables/ProjectStoreService.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{}}}],["map(([selectedcategories",{"_index":3070,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["map(({data",{"_index":2604,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"injectables/ProjectStoreService.html":{}}}],["map([...components",{"_index":2331,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["map([...location.issues].filter(([category",{"_index":2323,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["map(gqlgraphcomponents.map(gqlcomponent",{"_index":2381,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["map(gqlinterfaces.map(gqlinterface",{"_index":2374,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["map(items",{"_index":3692,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["map(key",{"_index":3261,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["map(result",{"_index":2242,"title":{},"body":{"components/FrameComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/TopToolbarComponent.html":{}}}],["map(state",{"_index":2255,"title":{},"body":{"components/FrameComponent.html":{}}}],["map.set(component_context_menu_data",{"_index":1126,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["map.set(encodenodeid(id",{"_index":2047,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["mapfromgql",{"_index":2277,"title":{},"body":{"classes/GraphComponent.html":{},"classes/GraphInterface.html":{}}}],["mapfromgql(gqlgraphcomponents",{"_index":2286,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["mapfromgql(gqlinterfaces",{"_index":2373,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["mapping",{"_index":2336,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{}}}],["maps",{"_index":1836,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["margin",{"_index":1195,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["mark",{"_index":2709,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/RegisterComponent.html":{}}}],["markdown",{"_index":163,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"dependencies.html":{}}}],["markdown/markdown",{"_index":451,"title":{},"body":{"modules/AppModule.html":{}}}],["markdowneditorcomponent",{"_index":162,"title":{"components/MarkdownEditorComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["markdownmodule",{"_index":454,"title":{},"body":{"modules/AppModule.html":{}}}],["markdownmodule.forroot",{"_index":491,"title":{},"body":{"modules/AppModule.html":{}}}],["markdownpreviewcomponent",{"_index":165,"title":{"components/MarkdownPreviewComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["marker",{"_index":4394,"title":{},"body":{"interfaces/Positions.html":{}}}],["markerend",{"_index":1286,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["marks",{"_index":2726,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/RegisterComponent.html":{}}}],["mat",{"_index":274,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SideNavComponent.html":{},"components/TopToolbarComponent.html":{}}}],["mat_dialog_data",{"_index":256,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/MultiSourceList.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{}}}],["mat_form_field_default_options",{"_index":2528,"title":{},"body":{"modules/GraphsModule.html":{}}}],["matbutton",{"_index":5048,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["matbuttonmodule",{"_index":358,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["matbuttontogglemodule",{"_index":465,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["match",{"_index":2138,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"interfaces/TextFragment.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["matcheckboxmodule",{"_index":2547,"title":{},"body":{"modules/GraphsModule.html":{}}}],["matches",{"_index":4953,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"interfaces/userMock.html":{}}}],["matching",{"_index":223,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["matchstrings",{"_index":4035,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["matchstrings.push(cursor",{"_index":4041,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["matchvalidator",{"_index":2133,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["matdialog",{"_index":36,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/userMock.html":{}}}],["matdialogmodule",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["matdialogref",{"_index":35,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/MultiSourceList.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{}}}],["matdialogref,@inject(mat_dialog_data",{"_index":257,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{}}}],["matexpansionmodule",{"_index":420,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodule",{"_index":415,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["math.abs(date.parse(timelineitem.createdat",{"_index":961,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["math.abs(linkhandle.x",{"_index":3158,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["math.abs(linkhandle.y",{"_index":3159,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["math.max(0",{"_index":4512,"title":{},"body":{"interfaces/Positions.html":{}}}],["math.max(1",{"_index":3775,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["math.max(nodex",{"_index":4744,"title":{},"body":{"interfaces/Positions.html":{}}}],["math.max(nodey",{"_index":4746,"title":{},"body":{"interfaces/Positions.html":{}}}],["math.max(this.height",{"_index":1169,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["math.max(this.width",{"_index":1167,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["math.max(y",{"_index":4471,"title":{},"body":{"interfaces/Positions.html":{}}}],["math.min(nodex",{"_index":4740,"title":{},"body":{"interfaces/Positions.html":{}}}],["math.min(nodey",{"_index":4742,"title":{},"body":{"interfaces/Positions.html":{}}}],["math.random",{"_index":1535,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["math.random().tostring",{"_index":1024,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{}}}],["math.random().tostring(36",{"_index":1606,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["math.round((+now",{"_index":5465,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["math.round(hours",{"_index":5469,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["math.round(minutes",{"_index":5468,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["math.sqrt",{"_index":3361,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["math.sqrt(0.5",{"_index":3371,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["maticonmodule",{"_index":362,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["maticonregistry",{"_index":286,"title":{},"body":{"components/AppComponent.html":{}}}],["matinputmodule",{"_index":413,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["matlistmodule",{"_index":363,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["matmenumodule",{"_index":2554,"title":{},"body":{"modules/GraphsModule.html":{}}}],["matpaginator",{"_index":3436,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["matpaginatormodule",{"_index":2529,"title":{},"body":{"modules/GraphsModule.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["matprogressspinnermodule",{"_index":2563,"title":{},"body":{"modules/GraphsModule.html":{}}}],["matselectmodule",{"_index":418,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["matsidenavmodule",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["matslidetogglemodule",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["matsort",{"_index":3441,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["matsortable",{"_index":3445,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["matsortmodule",{"_index":2536,"title":{},"body":{"modules/GraphsModule.html":{}}}],["matspinner",{"_index":2564,"title":{},"body":{"modules/GraphsModule.html":{}}}],["mattabledatasource",{"_index":3433,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["mattabledatasource(data",{"_index":3475,"title":{},"body":{"components/IssueListComponent.html":{}}}],["mattabledatasource(this.mockusers",{"_index":4929,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["mattablemodule",{"_index":2525,"title":{},"body":{"modules/GraphsModule.html":{}}}],["mattabsmodule",{"_index":369,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["mattoolbarmodule",{"_index":356,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["mattooltipmodule",{"_index":2561,"title":{},"body":{"modules/GraphsModule.html":{}}}],["max",{"_index":92,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["max_distance_connected",{"_index":3702,"title":{},"body":{"classes/LayoutNode.html":{}}}],["maximum",{"_index":3721,"title":{},"body":{"classes/LayoutNode.html":{}}}],["maxopened",{"_index":486,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["maybe",{"_index":1814,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"classes/NodeCache.html":{}}}],["maybelocallist",{"_index":5860,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["media",{"_index":2747,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{}}}],["member",{"_index":105,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["members",{"_index":517,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ProjectMembersComponent.html":{},"components/SideNavComponent.html":{},"index.html":{},"interfaces/userMock.html":{}}}],["members'},{'name",{"_index":178,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["members.component",{"_index":507,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GraphsModule.html":{}}}],["members.component.html",{"_index":4874,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["members.component.scss",{"_index":4873,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["members.component.ts",{"_index":4865,"title":{},"body":{"components/ProjectMembersComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["members.component.ts:115",{"_index":4889,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:119",{"_index":4880,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:125",{"_index":4883,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:26",{"_index":4914,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:27",{"_index":4916,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:28",{"_index":4921,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:29",{"_index":4920,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:30",{"_index":4919,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:31",{"_index":4918,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:32",{"_index":4922,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:34",{"_index":4899,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:35",{"_index":4900,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:38",{"_index":4913,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:47",{"_index":4898,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:51",{"_index":4878,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:77",{"_index":4885,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:97",{"_index":4886,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members/project",{"_index":506,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GraphsModule.html":{},"components/ProjectMembersComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["memberslink",{"_index":5352,"title":{},"body":{"components/SideNavComponent.html":{}}}],["memory",{"_index":1805,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["menu",{"_index":69,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/FrameComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TopToolbarComponent.html":{}}}],["menu.component",{"_index":445,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Positions.html":{}}}],["menu.component.html",{"_index":1055,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["menu.component.scss",{"_index":1054,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["menu.component.ts",{"_index":1051,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["menu.component.ts:117",{"_index":1081,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["menu.component.ts:119",{"_index":1078,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["menu.component.ts:121",{"_index":1079,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["menu.component.ts:134",{"_index":1062,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["menu.component.ts:136",{"_index":1076,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["menu.component.ts:166",{"_index":1067,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["menu.component.ts:175",{"_index":1063,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["menu.component.ts:45",{"_index":1203,"title":{},"body":{"injectables/ComponentContextMenuService.html":{}}}],["menu.component.ts:60",{"_index":1204,"title":{},"body":{"injectables/ComponentContextMenuService.html":{}}}],["menu/component",{"_index":444,"title":{},"body":{"modules/AppModule.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/Positions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["menuclick",{"_index":5543,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["menutitle",{"_index":5353,"title":{},"body":{"components/SideNavComponent.html":{}}}],["merge",{"_index":2045,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["message",{"_index":2488,"title":{},"body":{"modules/GraphQLModule.html":{},"components/LoginComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"injectables/UserNotifyService.html":{}}}],["message.startswith",{"_index":5203,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["message.substring(1",{"_index":5204,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["messages",{"_index":1033,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["met",{"_index":5831,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":16,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["method",{"_index":622,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectStoreService.html":{},"interfaces/RelationEdge.html":{},"components/SetEditorComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"interfaces/userMock.html":{}}}],["methods",{"_index":30,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"classes/TimeFormatter.html":{},"components/TopToolbarComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{}}}],["mgmt",{"_index":2898,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["mico",{"_index":4285,"title":{},"body":{"interfaces/Positions.html":{}}}],["middle",{"_index":2614,"title":{},"body":{"components/IssueCategoryComponent.html":{},"components/IssueItemComponent.html":{},"components/RemoveDialogComponent.html":{},"components/TextDisplayComponent.html":{}}}],["milliseconds",{"_index":1759,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["min",{"_index":90,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/IssueFilterComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/NodeDetailsComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{}}}],["min_distance_connected",{"_index":3703,"title":{},"body":{"classes/LayoutNode.html":{}}}],["min_distance_edge",{"_index":3704,"title":{},"body":{"classes/LayoutNode.html":{}}}],["min_distance_not_connected",{"_index":3705,"title":{},"body":{"classes/LayoutNode.html":{}}}],["min_height",{"_index":1133,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["min_width",{"_index":1131,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["minheight",{"_index":1122,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["minimap",{"_index":2979,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{}}}],["minimap.addedge(event.detail.edge",{"_index":4457,"title":{},"body":{"interfaces/Positions.html":{}}}],["minimap.addnode(node",{"_index":4454,"title":{},"body":{"interfaces/Positions.html":{}}}],["minimap.calculatelinkhandlesforedge",{"_index":3153,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["minimap.completerender",{"_index":4551,"title":{},"body":{"interfaces/Positions.html":{}}}],["minimap.removeedge(event.detail.edge",{"_index":4458,"title":{},"body":{"interfaces/Positions.html":{}}}],["minimap.removenode(node",{"_index":4456,"title":{},"body":{"interfaces/Positions.html":{}}}],["minimap.setedgeclass",{"_index":2999,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["minimap.setnodeclass",{"_index":2992,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["minimap.updategraphpositions",{"_index":4554,"title":{},"body":{"interfaces/Positions.html":{}}}],["minimap.updatenodeclasses",{"_index":4553,"title":{},"body":{"interfaces/Positions.html":{}}}],["minimap.zoomtoboundingbox",{"_index":4552,"title":{},"body":{"interfaces/Positions.html":{}}}],["minimum",{"_index":3723,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["minute",{"_index":5480,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["minutes",{"_index":5464,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["minwidth",{"_index":1120,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["mirrors",{"_index":2005,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/typealiases.html":{}}}],["miscellaneous",{"_index":5792,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mitteleuropäische",{"_index":5442,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["mock",{"_index":4926,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/TopToolbarComponent.html":{},"index.html":{},"interfaces/userMock.html":{}}}],["mocked",{"_index":229,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"index.html":{}}}],["mockmembers",{"_index":4943,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["mockusers",{"_index":4870,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["mode",{"_index":5327,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["modeicon",{"_index":5328,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["module",{"_index":329,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{}},"body":{"modules/GraphsModule.html":{},"index.html":{}}}],["modules",{"_index":331,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["monaco",{"_index":450,"title":{},"body":{"modules/AppModule.html":{},"components/MarkdownEditorComponent.html":{},"dependencies.html":{}}}],["monacoeditormodule",{"_index":449,"title":{},"body":{"modules/AppModule.html":{}}}],["monacoeditormodule.forroot",{"_index":490,"title":{},"body":{"modules/AppModule.html":{}}}],["month",{"_index":5474,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["months",{"_index":5459,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["more",{"_index":942,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/Vector.html":{}}}],["more_vert",{"_index":5311,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["mouseevent",{"_index":1166,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/RegisterComponent.html":{}}}],["move",{"_index":3511,"title":{},"body":{"components/IssueListComponent.html":{},"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["movechildrenalonggoup",{"_index":3209,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["moved",{"_index":4401,"title":{},"body":{"interfaces/Positions.html":{}}}],["movement",{"_index":3733,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["moves",{"_index":1981,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["movex",{"_index":4511,"title":{},"body":{"interfaces/Positions.html":{}}}],["movey",{"_index":4514,"title":{},"body":{"interfaces/Positions.html":{}}}],["moz",{"_index":4856,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["multiple",{"_index":2160,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{}}}],["multisourcelist",{"_index":3955,"title":{"classes/MultiSourceList.html":{}},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["multisourcelist(this.data.listall",{"_index":4080,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["multisourcelist.fromsinglelist(this.data.listall",{"_index":4083,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["mutate",{"_index":1464,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"injectables/DataService.html":{},"components/IssueFilterComponent.html":{}}}],["mutation",{"_index":1314,"title":{},"body":{"injectables/ComponentStoreService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"injectables/DataService.html":{},"components/RegisterComponent.html":{}}}],["mutationinputdata",{"_index":4247,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["mutations",{"_index":2077,"title":{},"body":{"injectables/DataService.html":{},"injectables/IssueStoreService.html":{},"coverage.html":{},"index.html":{}}}],["mutations(queries",{"_index":2093,"title":{},"body":{"injectables/DataService.html":{}}}],["mutually",{"_index":564,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["n",{"_index":4005,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/TimeFormatter.html":{}}}],["name",{"_index":41,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["namedoptions",{"_index":2440,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["nameformatvalidator",{"_index":730,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["names",{"_index":2136,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphClassSettersService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"components/RemoveDialogComponent.html":{},"miscellaneous/enumerations.html":{}}}],["namevalidator",{"_index":731,"title":{},"body":{"classes/CCIMSValidators.html":{},"components/CreateProjectDialogComponent.html":{}}}],["narrow",{"_index":2750,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueLocationComponent.html":{}}}],["nativeelement",{"_index":4297,"title":{},"body":{"interfaces/Positions.html":{}}}],["nav",{"_index":4859,"title":{},"body":{"components/ProjectListComponent.html":{},"components/SideNavComponent.html":{}}}],["nav'},{'name",{"_index":194,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["nav.component",{"_index":379,"title":{},"body":{"modules/AppModule.html":{}}}],["nav.component.html",{"_index":5348,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.scss",{"_index":5347,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts",{"_index":5343,"title":{},"body":{"components/SideNavComponent.html":{},"coverage.html":{}}}],["nav.component.ts:17",{"_index":5357,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:18",{"_index":5361,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:19",{"_index":5363,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:20",{"_index":5358,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:21",{"_index":5359,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:22",{"_index":5356,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:24",{"_index":5365,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:25",{"_index":5364,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:26",{"_index":5362,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav/side",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"components/SideNavComponent.html":{},"coverage.html":{}}}],["navigate",{"_index":5805,"title":{},"body":{"index.html":{}}}],["navigates",{"_index":3404,"title":{},"body":{"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{}}}],["navigating",{"_index":616,"title":{},"body":{"guards/AuthGuard.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["navigation",{"_index":2215,"title":{},"body":{"components/FrameComponent.html":{},"components/SideNavComponent.html":{}}}],["navigationend",{"_index":533,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["nbsp",{"_index":2739,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["nbsp;&nbsp;&nbsp;&nbsp",{"_index":5202,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["nbsp;&sdot",{"_index":2742,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["nd",{"_index":3858,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["nd.id",{"_index":3861,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["nearest",{"_index":3241,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["necessary",{"_index":2004,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/MarkdownEditorComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"classes/TimeFormatter.html":{},"miscellaneous/typealiases.html":{}}}],["need",{"_index":844,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueGraphControlsComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["needed",{"_index":1779,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"classes/TimeFormatter.html":{}}}],["network",{"_index":2469,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["networkerror",{"_index":2485,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["networkerror.name}\\n${networkerror.message}\\n${networkerror.stack",{"_index":2494,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["networkerror.status",{"_index":2495,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["networkerrortoast",{"_index":2471,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["never",{"_index":1833,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["new",{"_index":248,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"interfaces/InterfaceNode.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"classes/Vector.html":{},"coverage.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["newdata",{"_index":4362,"title":{},"body":{"interfaces/Positions.html":{}}}],["newest",{"_index":1861,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/IssueGraphApiService.html":{},"classes/NodeCache.html":{}}}],["newly",{"_index":3034,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["newposition",{"_index":3237,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["newposition.x",{"_index":3243,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["newposition.y",{"_index":3244,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["newsourceset",{"_index":4015,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["newsourceset.add(encodelistid(source",{"_index":4019,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["newsourceset.add(encodelistid(this.spec.listfromnode(nodeid",{"_index":4017,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["newsourceset.has(source",{"_index":4028,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["newvalue",{"_index":5262,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["next",{"_index":795,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"classes/NodeCache.html":{},"components/RemoveDialogComponent.html":{}}}],["nextpage",{"_index":1988,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["ng",{"_index":389,"title":{},"body":{"modules/AppModule.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/FilterSelection.html":{},"modules/GraphsModule.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/LabelSearchComponent.html":{},"components/NodeDetailsComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":873,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["ngmodel",{"_index":3054,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["ngmodule",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{}}}],["ngonchanges(changes",{"_index":5260,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["ngondestroy",{"_index":803,"title":{},"body":{"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["ngoninit",{"_index":64,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"interfaces/TextFragment.html":{},"interfaces/userMock.html":{}}}],["ngoptionhighlightmodule",{"_index":432,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["ngselectmodule",{"_index":429,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["ngx",{"_index":424,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"components/MarkdownEditorComponent.html":{},"injectables/UserNotifyService.html":{},"dependencies.html":{}}}],["ngzorroantdmodule",{"_index":395,"title":{},"body":{"modules/AppModule.html":{}}}],["nice",{"_index":5808,"title":{},"body":{"index.html":{}}}],["noce",{"_index":2990,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["node",{"_index":168,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["node.component",{"_index":2557,"title":{},"body":{"modules/GraphsModule.html":{}}}],["node.component.ts",{"_index":760,"title":{},"body":{"components/CacheNodeComponent.html":{},"coverage.html":{}}}],["node.component.ts:18",{"_index":779,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["node.component.ts:20",{"_index":771,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["node.component.ts:21",{"_index":784,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["node.component.ts:23",{"_index":786,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["node.component.ts:24",{"_index":770,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["node.dataaspromise().then(data",{"_index":1496,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["node.id",{"_index":973,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["node.id.tostring",{"_index":4495,"title":{},"body":{"interfaces/Positions.html":{}}}],["node.id}__issue",{"_index":1271,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["node.invalidate",{"_index":1494,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["node.issuecount",{"_index":4525,"title":{},"body":{"interfaces/Positions.html":{}}}],["node.issuegroupcontainer",{"_index":4646,"title":{},"body":{"interfaces/Positions.html":{}}}],["node.issuegroupnodeids.size",{"_index":4729,"title":{},"body":{"interfaces/Positions.html":{}}}],["node.load",{"_index":1495,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["node.position",{"_index":4445,"title":{},"body":{"interfaces/Positions.html":{}}}],["node.type",{"_index":2988,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"interfaces/Positions.html":{}}}],["node.x",{"_index":4448,"title":{},"body":{"interfaces/Positions.html":{}}}],["node.y",{"_index":4449,"title":{},"body":{"interfaces/Positions.html":{}}}],["node?.id",{"_index":2032,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["node]'},{'name",{"_index":110,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["nodecache",{"_index":1927,"title":{"classes/NodeCache.html":{}},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/NodeCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nodecache(queries",{"_index":2091,"title":{},"body":{"injectables/DataService.html":{}}}],["nodeclasssetter",{"_index":2986,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["nodeclickcontextmenuhastype(node",{"_index":4488,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodeclickissuefolder(node",{"_index":4519,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodeclickmanyissues(rootnode",{"_index":4541,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodeclickoneissue(rootid",{"_index":4529,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodedeleted",{"_index":1155,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsComponent.html":{}}}],["nodedetails",{"_index":1145,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["nodedetailscomponent",{"_index":167,"title":{"components/NodeDetailsComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nodedetailspagecomponent",{"_index":170,"title":{"components/NodeDetailsPageComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nodedetailsready",{"_index":1056,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["nodedetailstype",{"_index":1095,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"miscellaneous/enumerations.html":{}}}],["nodedetailstype.component",{"_index":4183,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{}}}],["nodedetailstype.interface",{"_index":4194,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{}}}],["nodeid",{"_index":778,"title":{"interfaces/NodeId.html":{}},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nodeid[]).length",{"_index":5267,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["nodeid`s",{"_index":3857,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["nodeidenc",{"_index":1746,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/typealiases.html":{}}}],["nodelist",{"_index":4754,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodequeries",{"_index":5676,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["nodequeries[type",{"_index":5964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nodequeries[type](i",{"_index":5966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nodequery",{"_index":4176,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["nodequeryinput",{"_index":5861,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["nodes",{"_index":1240,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["nodes.get(edge.source).connectto(nodes.get(edge.target",{"_index":4752,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodes.get(edge.target).connectto(nodes.get(edge.source",{"_index":4753,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodes.get(node.id",{"_index":4757,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodes.has(edge.source",{"_index":4750,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodes.has(edge.target",{"_index":4751,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodes.length",{"_index":3782,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["nodes.set(node.id",{"_index":4748,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodes.ts",{"_index":1207,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["nodes[0",{"_index":3790,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["nodesub",{"_index":765,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["nodetype",{"_index":836,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/InterfaceNode.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{},"miscellaneous/enumerations.html":{}}}],["nodetype.component",{"_index":1262,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["nodetype.componentinterface",{"_index":3460,"title":{},"body":{"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["nodetype.interface",{"_index":1267,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["nodetype.interfaceconsumer",{"_index":1293,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["nodetype.issue",{"_index":885,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueDetailComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/variables.html":{}}}],["nodetype.issuecomment",{"_index":972,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["nodetype.issuegroupcontainer",{"_index":1272,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["nodetype.label",{"_index":5892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nodetype.project",{"_index":2828,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"miscellaneous/variables.html":{}}}],["nodetype.root",{"_index":3862,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/variables.html":{}}}],["nodetype.user",{"_index":3864,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/variables.html":{}}}],["nodetype[nd.type",{"_index":3860,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["nodetype[parts[0",{"_index":3848,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["nodetype[typename",{"_index":3839,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["nodetypefromtypename",{"_index":1747,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["nodetypefromtypename(item.__typename",{"_index":4096,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["nodetypefromtypename(node.__typename",{"_index":2033,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["nodetypefromtypename(typename",{"_index":3838,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["nodeupdatedcallbackfn",{"_index":1096,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsComponent.html":{},"miscellaneous/typealiases.html":{}}}],["nodex",{"_index":4731,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodey",{"_index":4733,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodisplay",{"_index":5554,"title":{},"body":{"components/UserItemComponent.html":{}}}],["non",{"_index":1622,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["none",{"_index":2899,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/TimelineItemComponent.html":{},"miscellaneous/typealiases.html":{}}}],["normal",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/IssueItemComponent.html":{}}}],["normalize",{"_index":5608,"title":{},"body":{"classes/Vector.html":{}}}],["normalized",{"_index":5636,"title":{},"body":{"classes/Vector.html":{}}}],["north",{"_index":4267,"title":{},"body":{"interfaces/Positions.html":{}}}],["not(.has",{"_index":5559,"title":{},"body":{"components/UserItemComponent.html":{}}}],["notation",{"_index":4619,"title":{},"body":{"interfaces/Positions.html":{}}}],["note",{"_index":78,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"classes/Vector.html":{}}}],["nothing",{"_index":4813,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["nothing(e",{"_index":4819,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["notification",{"_index":3100,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/UserNotifyService.html":{}}}],["notify",{"_index":987,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/SideNavComponent.html":{},"injectables/UserNotifyService.html":{}}}],["notify.notifyerror('the",{"_index":5376,"title":{},"body":{"components/SideNavComponent.html":{}}}],["notify.service",{"_index":1013,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{}}}],["notify.service.ts",{"_index":5561,"title":{},"body":{"injectables/UserNotifyService.html":{},"coverage.html":{}}}],["notify.service.ts:23",{"_index":5565,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["notify.service.ts:33",{"_index":5567,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["notify.service.ts:45",{"_index":5572,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["notify/user",{"_index":1012,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"injectables/UserNotifyService.html":{},"coverage.html":{}}}],["notifyerror",{"_index":5562,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["notifyerror(message",{"_index":5566,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["notifyinfo",{"_index":5563,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["notifyinfo(message",{"_index":5571,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["notifyservice",{"_index":4071,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["now",{"_index":757,"title":{},"body":{"classes/CCIMSValidators.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"classes/TimeFormatter.html":{}}}],["now.getfullyear",{"_index":5462,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["now.getmonth",{"_index":5460,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["nowrap",{"_index":5209,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["npm",{"_index":5803,"title":{},"body":{"index.html":{}}}],["nth",{"_index":5319,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["null",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"components/FrameComponent.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"injectables/StateService.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["nullable",{"_index":1961,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueLabelComponent.html":{},"classes/NodeCache.html":{}}}],["number",{"_index":1065,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/QueryListParams.html":{},"interfaces/RelationEdge.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/TimeFormatter.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["nz",{"_index":4851,"title":{},"body":{"components/ProjectListComponent.html":{},"components/RegisterComponent.html":{}}}],["nz_i18n",{"_index":393,"title":{},"body":{"modules/AppModule.html":{}}}],["nz_icons",{"_index":388,"title":{},"body":{"modules/AppModule.html":{}}}],["obervable",{"_index":3073,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["object",{"_index":1774,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["object.entries(ccimsicons",{"_index":302,"title":{},"body":{"components/AppComponent.html":{}}}],["object.keys(antdesignicons).map(key",{"_index":477,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["object.keys(issuecategory",{"_index":3260,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["object.keys(issuecategory).foreach(key",{"_index":4656,"title":{},"body":{"interfaces/Positions.html":{}}}],["object.keys(predicates).filter(id",{"_index":2861,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["object.keys(predicates).length",{"_index":2819,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["object.keys(this.savedpositions.nodes).length",{"_index":4566,"title":{},"body":{"interfaces/Positions.html":{}}}],["object.keys(this.validateform.controls",{"_index":5188,"title":{},"body":{"components/RegisterComponent.html":{}}}],["object.keys(this.validateform.controls).foreach(controlkey",{"_index":3906,"title":{},"body":{"components/LoginComponent.html":{}}}],["object.values(issuecategory",{"_index":2951,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["objects",{"_index":1310,"title":{},"body":{"injectables/ComponentStoreService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/LabelStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["objkey",{"_index":4037,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["observable",{"_index":547,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"injectables/ComponentStoreService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/NodeCache.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectStoreService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"components/SettingsDialogComponent.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"interfaces/userMock.html":{}}}],["observable#subscribe",{"_index":1786,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["observable((observer",{"_index":5178,"title":{},"body":{"components/RegisterComponent.html":{}}}],["observables",{"_index":3175,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["observe",{"_index":5125,"title":{},"body":{"interfaces/QueryListParams.html":{}}}],["observed",{"_index":3447,"title":{},"body":{"components/IssueListComponent.html":{}}}],["observer",{"_index":5169,"title":{},"body":{"components/RegisterComponent.html":{}}}],["observer.complete",{"_index":5185,"title":{},"body":{"components/RegisterComponent.html":{}}}],["observer.next(null",{"_index":5184,"title":{},"body":{"components/RegisterComponent.html":{}}}],["observer.next({error",{"_index":5182,"title":{},"body":{"components/RegisterComponent.html":{}}}],["observers",{"_index":2073,"title":{},"body":{"injectables/DataService.html":{}}}],["obtain",{"_index":1682,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["occurred",{"_index":5568,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["oct",{"_index":5438,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["offer",{"_index":2343,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["offered",{"_index":2574,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["offeredby",{"_index":2364,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["offeredbyid",{"_index":1263,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["offering",{"_index":2337,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{},"miscellaneous/variables.html":{}}}],["offeringcomponentid",{"_index":2593,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["offers",{"_index":4869,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"index.html":{},"interfaces/userMock.html":{}}}],["offset",{"_index":1071,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["offsetx",{"_index":1115,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["offsety",{"_index":1116,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["old",{"_index":4785,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["onaddclick",{"_index":3394,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["oncancelclick",{"_index":4138,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["once",{"_index":2713,"title":{},"body":{"components/IssueDetailComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/TextDisplayComponent.html":{},"miscellaneous/typealiases.html":{}}}],["onchanges",{"_index":5221,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["onclick",{"_index":5070,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["onconfirmclick",{"_index":1455,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["onconfirmclick(name",{"_index":1460,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["oncreate",{"_index":1570,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["oncreateedge",{"_index":4380,"title":{},"body":{"interfaces/Positions.html":{}}}],["ondeleteclick",{"_index":2143,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"interfaces/userMock.html":{}}}],["ondestroy",{"_index":763,"title":{},"body":{"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["ondialogapplychangeset",{"_index":5269,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["ondialogcreateitem",{"_index":5271,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["ondialogdeleteitem",{"_index":5275,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["ondialogedititem",{"_index":5273,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["ondraggededgetargetchanged",{"_index":4402,"title":{},"body":{"interfaces/Positions.html":{}}}],["one",{"_index":66,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueListComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"injectables/ProjectStoreService.html":{},"interfaces/QueryListParams.html":{},"index.html":{}}}],["onedgeadd",{"_index":4405,"title":{},"body":{"interfaces/Positions.html":{}}}],["onedgedrop",{"_index":4415,"title":{},"body":{"interfaces/Positions.html":{}}}],["onedgeremove",{"_index":4429,"title":{},"body":{"interfaces/Positions.html":{}}}],["oneditclick",{"_index":4139,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["oneditfinished",{"_index":5395,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["onerror",{"_index":2450,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["onerror(({graphqlerrors",{"_index":2484,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["oninit",{"_index":15,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"interfaces/TextFragment.html":{},"interfaces/userMock.html":{}}}],["onlabelcancelclick",{"_index":1456,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["onminimaprender(minimap",{"_index":4546,"title":{},"body":{"interfaces/Positions.html":{}}}],["onmousemove(event",{"_index":1165,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["onmouseup",{"_index":1163,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["onnoclick",{"_index":239,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["onnoclick(showconfirmdialog",{"_index":1575,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["onnodeclick",{"_index":4472,"title":{},"body":{"interfaces/Positions.html":{}}}],["onnodeupdate",{"_index":4256,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["onnodeupdate(deleted",{"_index":4258,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["onokclick",{"_index":240,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["onokclick(name",{"_index":1420,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["onpagechange",{"_index":4877,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["onpagechange(event",{"_index":4887,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["onsaveclick",{"_index":4140,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["onto",{"_index":3174,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["opacity",{"_index":2670,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/UserItemComponent.html":{}}}],["open",{"_index":1100,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueIconComponent.html":{},"interfaces/Positions.html":{},"components/SettingsDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["open(parent",{"_index":1107,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["openaccesstokensettings",{"_index":5329,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["opencreatecomponentdialog",{"_index":4769,"title":{},"body":{"interfaces/Positions.html":{}}}],["opencreateprojectdialog",{"_index":4814,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["opened",{"_index":2740,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/LinkedIssueItemComponent.html":{}}}],["opening",{"_index":4419,"title":{},"body":{"interfaces/Positions.html":{}}}],["openprofilesettings",{"_index":5330,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["opens",{"_index":1589,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{}}}],["opensettingsdialog",{"_index":5541,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["operation",{"_index":2486,"title":{},"body":{"modules/GraphQLModule.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["operations",{"_index":3559,"title":{},"body":{"injectables/IssueStoreService.html":{},"classes/MultiSourceList.html":{},"injectables/ProjectStoreService.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/typealiases.html":{}}}],["optimized",{"_index":4681,"title":{},"body":{"interfaces/Positions.html":{}}}],["option",{"_index":433,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"dependencies.html":{}}}],["option2",{"_index":52,"title":{},"body":{"components/AccessTokenDialogComponent.html":{}}}],["optional",{"_index":43,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData-1.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{}}}],["optionally",{"_index":5569,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["options",{"_index":2835,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/MarkdownEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["order",{"_index":1242,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{}}}],["ordered",{"_index":1903,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["original",{"_index":4384,"title":{},"body":{"interfaces/Positions.html":{}}}],["originally",{"_index":3895,"title":{},"body":{"components/LoginComponent.html":{}}}],["originates",{"_index":4388,"title":{},"body":{"interfaces/Positions.html":{}}}],["originating",{"_index":4666,"title":{},"body":{"interfaces/Positions.html":{}}}],["originx",{"_index":1110,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["originy",{"_index":1112,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["othernode",{"_index":3760,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["othernode.id",{"_index":3763,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["othernode.padding",{"_index":3773,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["othernode.position.subtract(this.position",{"_index":3768,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["othernodesvisited",{"_index":3759,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["otherwise",{"_index":523,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueListComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{}}}],["out",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CCIMSValidators.html":{},"interfaces/FilterSelection.html":{},"modules/GraphsModule.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueIconComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TextFragment.html":{},"components/TopToolbarComponent.html":{},"overview.html":{}}}],["outlet",{"_index":2237,"title":{},"body":{"components/FrameComponent.html":{}}}],["outlet.activatedroutedata",{"_index":2258,"title":{},"body":{"components/FrameComponent.html":{}}}],["outlet.activatedroutedata.animation",{"_index":2259,"title":{},"body":{"components/FrameComponent.html":{}}}],["output",{"_index":2824,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/SetEditorComponent.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{},"index.html":{}}}],["outputs",{"_index":2785,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/SetEditorComponent.html":{},"components/TopToolbarComponent.html":{}}}],["outside",{"_index":5624,"title":{},"body":{"classes/Vector.html":{}}}],["over",{"_index":3762,"title":{},"body":{"classes/LayoutNode.html":{},"components/MarkdownEditorComponent.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["overflow",{"_index":1200,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["overlay",{"_index":1087,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/FrameComponent.html":{},"interfaces/Positions.html":{}}}],["overlayref",{"_index":1088,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["overlayx",{"_index":1113,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["overlayy",{"_index":1114,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["override",{"_index":5230,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["overview",{"_index":4841,"title":{"overview.html":{}},"body":{"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SideNavComponent.html":{},"index.html":{},"overview.html":{}}}],["overview'},{'name",{"_index":180,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["overview.component",{"_index":375,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["overview.component.html",{"_index":4962,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.scss",{"_index":4961,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.ts",{"_index":4959,"title":{},"body":{"components/ProjectOverviewComponent.html":{},"coverage.html":{}}}],["overview.component.ts:23",{"_index":4969,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.ts:25",{"_index":4968,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.ts:26",{"_index":4967,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.ts:27",{"_index":4964,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.ts:47",{"_index":4966,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.ts:55",{"_index":4965,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview/project",{"_index":374,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ProjectOverviewComponent.html":{},"coverage.html":{}}}],["overviewlink",{"_index":5354,"title":{},"body":{"components/SideNavComponent.html":{}}}],["overwriting",{"_index":2039,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["owner",{"_index":4960,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["p",{"_index":1742,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/TimelineItemComponent.html":{}}}],["package",{"_index":5757,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":3772,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["padding",{"_index":1174,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"classes/Vector.html":{}}}],["padding.these",{"_index":4701,"title":{},"body":{"interfaces/Positions.html":{}}}],["padding_component",{"_index":3706,"title":{},"body":{"classes/LayoutNode.html":{}}}],["padding_interface",{"_index":3707,"title":{},"body":{"classes/LayoutNode.html":{}}}],["paddingx",{"_index":4710,"title":{},"body":{"interfaces/Positions.html":{}}}],["paddingy",{"_index":4714,"title":{},"body":{"interfaces/Positions.html":{}}}],["page",{"_index":641,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"modules/GraphQLModule.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"index.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["page.component",{"_index":461,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.html",{"_index":4255,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["page.component.scss",{"_index":4254,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["page.component.ts",{"_index":4253,"title":{},"body":{"components/NodeDetailsPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:10",{"_index":4261,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["page.component.ts:11",{"_index":4260,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["page.component.ts:12",{"_index":4257,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["page.component.ts:34",{"_index":4259,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["page/node",{"_index":460,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/NodeDetailsPageComponent.html":{},"coverage.html":{}}}],["pageevent",{"_index":4888,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["pagefill",{"_index":4806,"title":{},"body":{"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["pageinfo",{"_index":1753,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["pages",{"_index":4947,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["pagesizes",{"_index":1659,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["pagesizes]=\"[10",{"_index":2659,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["paginated",{"_index":4867,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["pagination",{"_index":1960,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["pagination/sorting/filtering",{"_index":3482,"title":{},"body":{"components/IssueListComponent.html":{}}}],["paginator",{"_index":1656,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["paginator'},{'name",{"_index":127,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["paginator.component",{"_index":2541,"title":{},"body":{"modules/GraphsModule.html":{}}}],["paginator.component.html",{"_index":1658,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["paginator.component.scss",{"_index":1657,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["paginator.component.ts",{"_index":1652,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"coverage.html":{}}}],["paginator.component.ts:14",{"_index":1660,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["paginator.component.ts:16",{"_index":1662,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["paginator/cursor",{"_index":1651,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"modules/GraphsModule.html":{},"coverage.html":{}}}],["paginatormodule",{"_index":4876,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["pairs",{"_index":2983,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["panel",{"_index":5517,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["param",{"_index":575,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"classes/TimeFormatter.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"classes/Vector.html":{}}}],["parameter",{"_index":1812,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["parameterize",{"_index":5839,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":39,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{}}}],["params",{"_index":1706,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueListComponent.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["params(p",{"_index":1824,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["params.filter",{"_index":3493,"title":{},"body":{"components/IssueListComponent.html":{}}}],["parent",{"_index":1074,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/MarkdownEditorComponent.html":{},"interfaces/NodeId.html":{}}}],["parent}__${issuecategory[key",{"_index":3262,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["parent}__bug",{"_index":3268,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["parent}__feature",{"_index":3269,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["parent}__undecided",{"_index":3267,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["parsed",{"_index":4353,"title":{},"body":{"interfaces/Positions.html":{},"classes/TimeFormatter.html":{}}}],["parsing",{"_index":554,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["part",{"_index":5240,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["part).join",{"_index":325,"title":{},"body":{"components/AppComponent.html":{},"components/IssueIconComponent.html":{}}}],["partial",{"_index":485,"title":{},"body":{"modules/AppModule.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphQLModule.html":{},"classes/NodeCache.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["participants",{"_index":2848,"title":{},"body":{"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["parts",{"_index":3846,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["parts[1",{"_index":3849,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["pass",{"_index":3077,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/SetEditorComponent.html":{}}}],["passed",{"_index":1738,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/TopToolbarComponent.html":{}}}],["passes",{"_index":2219,"title":{},"body":{"components/FrameComponent.html":{}}}],["password",{"_index":667,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["passwords",{"_index":5198,"title":{},"body":{"components/RegisterComponent.html":{}}}],["pasttime",{"_index":5457,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["pasttime.getfullyear",{"_index":5463,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["pasttime.getmonth",{"_index":5461,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["path",{"_index":508,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":513,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pattern",{"_index":755,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["pcount",{"_index":1921,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["pcursor",{"_index":1920,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["pendingcreate",{"_index":4811,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["per",{"_index":1666,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"index.html":{}}}],["perceived",{"_index":3357,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["perform",{"_index":4844,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["performed",{"_index":813,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["perpendicularclockwise",{"_index":5609,"title":{},"body":{"classes/Vector.html":{}}}],["perpendicularcounterclockwise",{"_index":5610,"title":{},"body":{"classes/Vector.html":{}}}],["persisted",{"_index":5843,"title":{},"body":{"index.html":{}}}],["personal",{"_index":74,"title":{},"body":{"components/AccessTokenDialogComponent.html":{}}}],["pertain",{"_index":5819,"title":{},"body":{"index.html":{}}}],["pertaining",{"_index":600,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["pfilter",{"_index":1922,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["pforward",{"_index":1923,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["phone",{"_index":4475,"title":{},"body":{"interfaces/Positions.html":{}}}],["pick",{"_index":2361,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/LabelStoreService.html":{},"components/ProjectListComponent.html":{},"miscellaneous/typealiases.html":{}}}],["picker",{"_index":436,"title":{},"body":{"modules/AppModule.html":{},"components/IssueFilterComponent.html":{},"dependencies.html":{}}}],["piece",{"_index":1771,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["pipe",{"_index":2241,"title":{},"body":{"components/FrameComponent.html":{},"components/TopToolbarComponent.html":{}}}],["pipe(first",{"_index":3912,"title":{},"body":{"components/LoginComponent.html":{}}}],["pipe(map(response",{"_index":702,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["pipe(takeuntil(this.destroy",{"_index":4359,"title":{},"body":{"interfaces/Positions.html":{}}}],["place",{"_index":3786,"title":{},"body":{"classes/LayoutNode.html":{},"components/RemoveDialogComponent.html":{},"classes/Vector.html":{}}}],["placeholder",{"_index":4133,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/TextDisplayComponent.html":{}}}],["places",{"_index":3252,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["please",{"_index":5197,"title":{},"body":{"components/RegisterComponent.html":{}}}],["pluralize",{"_index":5432,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["pluralize(n",{"_index":5451,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["pluralized",{"_index":5454,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["pnodes",{"_index":1926,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["point",{"_index":3226,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueLabelComponent.html":{},"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["point.x",{"_index":4608,"title":{},"body":{"interfaces/Positions.html":{}}}],["point.y",{"_index":4611,"title":{},"body":{"interfaces/Positions.html":{}}}],["pointer",{"_index":3527,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["pointing",{"_index":3745,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["points",{"_index":5346,"title":{},"body":{"components/SideNavComponent.html":{},"classes/Vector.html":{}}}],["portalinjector",{"_index":1091,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["portalinjector(this.injector",{"_index":1127,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["portalmodule",{"_index":440,"title":{},"body":{"modules/AppModule.html":{}}}],["pos",{"_index":1109,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["position",{"_index":1069,"title":{"interfaces/Position.html":{}},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"interfaces/InterfaceNode.html":{},"components/IssueContentsComponent.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"classes/Vector.html":{},"coverage.html":{}}}],["position.withpositions([pos",{"_index":1117,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["position.x",{"_index":4426,"title":{},"body":{"interfaces/Positions.html":{}}}],["position.y",{"_index":4427,"title":{},"body":{"interfaces/Positions.html":{}}}],["positionclass",{"_index":2474,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["positioning",{"_index":4446,"title":{},"body":{"interfaces/Positions.html":{}}}],["positions",{"_index":4264,"title":{"interfaces/Positions.html":{}},"body":{"interfaces/Positions.html":{},"coverage.html":{}}}],["positionstrategy",{"_index":1124,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["positionx",{"_index":3710,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["positiony",{"_index":3711,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["possible",{"_index":2831,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/SetEditorComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"miscellaneous/variables.html":{}}}],["possibly",{"_index":2833,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["practice",{"_index":2009,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["pre",{"_index":3265,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/MarkdownEditorComponent.html":{}}}],["pred",{"_index":2895,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["predicate",{"_index":2794,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["predicatecount",{"_index":2773,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["predicates",{"_index":2774,"title":{},"body":{"components/IssueFilterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["predicates[id].ifempty",{"_index":2886,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["predicates[id].label",{"_index":2885,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["predicates[type].label",{"_index":2883,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["predicatevalues",{"_index":2775,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["prepare",{"_index":896,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["prepareddata",{"_index":1726,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{}}}],["prepareissuearray",{"_index":3395,"title":{},"body":{"components/IssueListComponent.html":{}}}],["prepareroute",{"_index":2229,"title":{},"body":{"components/FrameComponent.html":{}}}],["prepareroute(outlet",{"_index":2234,"title":{},"body":{"components/FrameComponent.html":{}}}],["prepares",{"_index":895,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueListComponent.html":{}}}],["preparetimelineitems(items",{"_index":897,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["presence",{"_index":2809,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["present",{"_index":1873,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["preservewhitespaces",{"_index":3949,"title":{},"body":{"components/MarkdownPreviewComponent.html":{}}}],["pressed",{"_index":4477,"title":{},"body":{"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["presumes",{"_index":4651,"title":{},"body":{"interfaces/Positions.html":{}}}],["prevent",{"_index":3787,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["prevents",{"_index":4842,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["preview",{"_index":3946,"title":{},"body":{"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["preview'},{'name",{"_index":166,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["preview.component",{"_index":456,"title":{},"body":{"modules/AppModule.html":{}}}],["preview.component.html",{"_index":3951,"title":{},"body":{"components/MarkdownPreviewComponent.html":{}}}],["preview.component.scss",{"_index":3950,"title":{},"body":{"components/MarkdownPreviewComponent.html":{}}}],["preview.component.ts",{"_index":3948,"title":{},"body":{"components/MarkdownPreviewComponent.html":{},"coverage.html":{}}}],["preview.component.ts:17",{"_index":3953,"title":{},"body":{"components/MarkdownPreviewComponent.html":{}}}],["preview/markdown",{"_index":455,"title":{},"body":{"modules/AppModule.html":{},"components/MarkdownPreviewComponent.html":{},"coverage.html":{}}}],["previous",{"_index":1985,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueFilterComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["previousboundingbox",{"_index":4696,"title":{},"body":{"interfaces/Positions.html":{}}}],["previousboundingbox.height",{"_index":4705,"title":{},"body":{"interfaces/Positions.html":{}}}],["previousboundingbox.width",{"_index":4703,"title":{},"body":{"interfaces/Positions.html":{}}}],["previousboundingbox.x",{"_index":4716,"title":{},"body":{"interfaces/Positions.html":{}}}],["previousboundingbox.y",{"_index":4717,"title":{},"body":{"interfaces/Positions.html":{}}}],["previousboundingboxasstring",{"_index":4685,"title":{},"body":{"interfaces/Positions.html":{}}}],["previousitems",{"_index":2859,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["previousitems.includes(id",{"_index":2862,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["previouslyhadpagecontents",{"_index":1925,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["prevpage",{"_index":1986,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["primary",{"_index":604,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{},"index.html":{}}}],["primary.segments",{"_index":607,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["primary.segments.length",{"_index":610,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["primary_outlet",{"_index":534,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["primarysegments",{"_index":606,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["primarysegments[0].path",{"_index":609,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["primer/css",{"_index":5773,"title":{},"body":{"dependencies.html":{}}}],["prior",{"_index":1940,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["pristine",{"_index":5152,"title":{},"body":{"components/RegisterComponent.html":{}}}],["private",{"_index":63,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/FilterSelection.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueListComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"interfaces/userMock.html":{}}}],["process",{"_index":952,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueDetailComponent.html":{}}}],["processing",{"_index":4930,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["product",{"_index":5629,"title":{},"body":{"classes/Vector.html":{}}}],["production",{"_index":5872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":172,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["profilesettingsdialogcomponent",{"_index":171,"title":{"components/ProfileSettingsDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["project",{"_index":104,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentsService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["project's",{"_index":4288,"title":{},"body":{"interfaces/Positions.html":{}}}],["project.description",{"_index":4973,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["project.name",{"_index":4848,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["project.node.users.nodes.foreach(u",{"_index":4927,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["project_${this.projectid",{"_index":4327,"title":{},"body":{"interfaces/Positions.html":{}}}],["projectfilter",{"_index":5004,"title":{},"body":{"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{}}}],["projectheadercomponent",{"_index":173,"title":{"components/ProjectHeaderComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projectid",{"_index":868,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/LabelStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["projectissuelistcomponent",{"_index":175,"title":{"components/ProjectIssueListComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projectlistcomponent",{"_index":176,"title":{"components/ProjectListComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projectmemberscomponent",{"_index":177,"title":{"components/ProjectMembersComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{},"interfaces/userMock.html":{}}}],["projectname",{"_index":4792,"title":{},"body":{"components/ProjectHeaderComponent.html":{},"components/ProjectListComponent.html":{}}}],["projectnameedited",{"_index":4777,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["projectnameedited(saved",{"_index":4780,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["projectoverviewcomponent",{"_index":179,"title":{"components/ProjectOverviewComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projects",{"_index":512,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/IssueItemComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/QueriesService.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"miscellaneous/enumerations.html":{}}}],["projects.service",{"_index":5038,"title":{},"body":{"injectables/QueriesService.html":{}}}],["projects/:id",{"_index":514,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["projectsservice",{"_index":5012,"title":{"injectables/ProjectsService.html":{}},"body":{"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"coverage.html":{}}}],["projectstoragekey",{"_index":4308,"title":{},"body":{"interfaces/Positions.html":{}}}],["projectstore",{"_index":4818,"title":{},"body":{"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["projectstoreservice",{"_index":542,"title":{"injectables/ProjectStoreService.html":{}},"body":{"interfaces/AppState.html":{},"components/CreateProjectDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/StateService.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["prolong",{"_index":1710,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["promise",{"_index":1716,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/QueryListParams.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/variables.html":{}}}],["promise((resolve",{"_index":1847,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/QueryListParams.html":{}}}],["promise.all(promises",{"_index":1626,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["promise.reject(new",{"_index":5954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise.resolve",{"_index":5599,"title":{},"body":{"injectables/UsersService.html":{}}}],["promise.resolve(this.current",{"_index":1846,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["promises",{"_index":1614,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["promises.push(this.dataservice.mutations.linkissue(math.random().tostring",{"_index":1616,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["promisifyapollofetch",{"_index":1393,"title":{},"body":{"injectables/ComponentsService.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["promisifyapollofetch(f",{"_index":5129,"title":{},"body":{"interfaces/QueryListParams.html":{}}}],["promisifyapollofetch(this.qcurrentuser.fetch",{"_index":5603,"title":{},"body":{"injectables/UsersService.html":{}}}],["promisifyapollofetch(this.qgetcomponent.fetch",{"_index":1397,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["promisifyapollofetch(this.qgetinterface.fetch",{"_index":1398,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["promisifyapollofetch(this.qgetproject.fetch",{"_index":5027,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["promisifyapollofetch(this.qlistprojectcomponents.fetch",{"_index":1395,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["promisifyapollofetch(this.qlistprojectinterfaces.fetch",{"_index":1396,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["promisifyapollofetch(this.qlistprojects.fetch",{"_index":5026,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["promisifyapollofetch(this.qsearchusers.fetch",{"_index":5600,"title":{},"body":{"injectables/UsersService.html":{}}}],["prop",{"_index":4283,"title":{},"body":{"interfaces/Positions.html":{}}}],["propagates",{"_index":2072,"title":{},"body":{"injectables/DataService.html":{}}}],["proper",{"_index":3448,"title":{},"body":{"components/IssueListComponent.html":{}}}],["properly",{"_index":4626,"title":{},"body":{"interfaces/Positions.html":{}}}],["properties",{"_index":26,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{}}}],["property",{"_index":1782,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["protected",{"_index":1815,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["provide",{"_index":493,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/Positions.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":233,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/IssueContentsComponent.html":{},"interfaces/User.html":{}}}],["providedefaultapollo",{"_index":2462,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["providedefaultapollo(httplink",{"_index":2501,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["providedin",{"_index":555,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"injectables/DataService.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"injectables/StateService.html":{},"injectables/UsersService.html":{}}}],["providepublicapollo",{"_index":2461,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["providepublicapollo(httplink",{"_index":2514,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["provider",{"_index":1422,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{}}}],["providers",{"_index":492,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{}}}],["provides",{"_index":227,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"classes/CCIMSValidators.html":{},"interfaces/CoalescedTimelineItem.html":{},"injectables/ComponentStoreService.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueStoreService.html":{},"classes/NodeCache.html":{},"injectables/ProjectStoreService.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"injectables/UserNotifyService.html":{}}}],["providing",{"_index":4418,"title":{},"body":{"interfaces/Positions.html":{}}}],["prvider",{"_index":3417,"title":{},"body":{"components/IssueListComponent.html":{}}}],["ps",{"_index":559,"title":{},"body":{"interfaces/AppState.html":{},"components/CreateProjectDialogComponent.html":{},"injectables/StateService.html":{}}}],["ps.getbasicproject(this.router.parseurl(event.url).root?.children[primary_outlet].segments[1].path",{"_index":587,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["psetparamsnoupdate",{"_index":1818,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["ptotalcount",{"_index":1924,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["public",{"_index":27,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["publicclient",{"_index":2516,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["publicclientname",{"_index":5136,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["purely",{"_index":5842,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":2456,"title":{},"body":{"modules/GraphQLModule.html":{},"interfaces/Positions.html":{},"miscellaneous/variables.html":{}}}],["put",{"_index":2748,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["px",{"_index":1148,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["q",{"_index":5958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["qcurrentuser",{"_index":5584,"title":{},"body":{"injectables/UsersService.html":{}}}],["qgetcomponent",{"_index":1377,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["qgetinterface",{"_index":1378,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["qgetproject",{"_index":5018,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["qlistprojectcomponents",{"_index":1381,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["qlistprojectinterfaces",{"_index":1375,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["qlistprojects",{"_index":5021,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["qsearchusers",{"_index":5587,"title":{},"body":{"injectables/UsersService.html":{}}}],["queries",{"_index":2019,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["queries/queries.service",{"_index":1749,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/NodeCache.html":{}}}],["queriesservice",{"_index":1748,"title":{"injectables/QueriesService.html":{}},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/NodeCache.html":{},"injectables/QueriesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["query",{"_index":182,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentStoreService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["query.component.html",{"_index":5072,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["query.component.scss",{"_index":5073,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["query.subscribe((value",{"_index":5093,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["query/mutation",{"_index":5835,"title":{},"body":{"index.html":{}}}],["querybodydirective",{"_index":211,"title":{"directives/QueryBodyDirective.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["querybuttondirective",{"_index":213,"title":{"directives/QueryButtonDirective.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["querycomponent",{"_index":181,"title":{"components/QueryComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["querycomponentstate",{"_index":5049,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"miscellaneous/enumerations.html":{}}}],["querycomponentstate.error",{"_index":5096,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["querycomponentstate.loading",{"_index":5079,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["querycomponentstate.ready",{"_index":5085,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["querylist",{"_index":1751,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["querylist(queries",{"_index":1928,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["querylistparams",{"_index":1387,"title":{"interfaces/QueryListParams.html":{}},"body":{"injectables/ComponentsService.html":{},"injectables/ProjectsService.html":{},"interfaces/QueryListParams.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["querynode",{"_index":1752,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["querynode(queries",{"_index":1898,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["queryparamfilter",{"_index":3386,"title":{},"body":{"components/IssueListComponent.html":{}}}],["queryparams",{"_index":643,"title":{},"body":{"guards/AuthGuard.html":{}}}],["querystate",{"_index":5062,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["quick",{"_index":4000,"title":{},"body":{"classes/MultiSourceList.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"dependencies.html":{}}}],["quicker",{"_index":77,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"classes/CCIMSValidators.html":{}}}],["quickscore",{"_index":3999,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["quickscore(matchstrings.join",{"_index":4042,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["quot;(newest",{"_index":2947,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["quot;test&quot",{"_index":2946,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["quot;{{data.verificationname}}&quot",{"_index":5205,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["r",{"_index":1533,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueLabelComponent.html":{},"classes/NodeCache.html":{}}}],["r.matches",{"_index":4330,"title":{},"body":{"interfaces/Positions.html":{}}}],["radius",{"_index":1177,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["ran",{"_index":5101,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["randomize",{"_index":1547,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["randomizecolor",{"_index":1457,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["randomized",{"_index":3766,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["randomizes",{"_index":1469,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["rank",{"_index":3973,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["ranking",{"_index":3991,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["ratio",{"_index":4505,"title":{},"body":{"interfaces/Positions.html":{}}}],["raw",{"_index":1485,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{}}}],["re",{"_index":1791,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["reactiveformsmodule",{"_index":387,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["read",{"_index":782,"title":{},"body":{"components/CacheNodeComponent.html":{},"modules/GraphQLModule.html":{},"components/SetEditorComponent.html":{}}}],["readonly",{"_index":654,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"interfaces/CoalescedTimelineItem.html":{},"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/User.html":{},"classes/Vector.html":{}}}],["ready",{"_index":5050,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"miscellaneous/enumerations.html":{}}}],["really",{"_index":1031,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{},"index.html":{}}}],["reasonable",{"_index":4086,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["recalculates",{"_index":5159,"title":{},"body":{"components/RegisterComponent.html":{}}}],["recoverable",{"_index":1623,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["rect",{"_index":4273,"title":{},"body":{"interfaces/Positions.html":{}}}],["rect.x",{"_index":4707,"title":{},"body":{"interfaces/Positions.html":{}}}],["rect.xmax",{"_index":4743,"title":{},"body":{"interfaces/Positions.html":{}}}],["rect.xmin",{"_index":4739,"title":{},"body":{"interfaces/Positions.html":{}}}],["rect.y",{"_index":4713,"title":{},"body":{"interfaces/Positions.html":{}}}],["rect.ymax",{"_index":4745,"title":{},"body":{"interfaces/Positions.html":{}}}],["rect.ymin",{"_index":4741,"title":{},"body":{"interfaces/Positions.html":{}}}],["red",{"_index":3098,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/IssueLabelComponent.html":{},"components/QueryComponent.html":{}}}],["redirect",{"_index":524,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["redirected",{"_index":5157,"title":{},"body":{"components/RegisterComponent.html":{}}}],["redirects",{"_index":632,"title":{},"body":{"guards/AuthGuard.html":{}}}],["redirectto",{"_index":511,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirecturl",{"_index":3894,"title":{},"body":{"components/LoginComponent.html":{}}}],["redraw",{"_index":3078,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["redrawbycloseofcomponentdetails",{"_index":4312,"title":{},"body":{"interfaces/Positions.html":{}}}],["reduce",{"_index":4980,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["reduces",{"_index":4948,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["reducing",{"_index":2070,"title":{},"body":{"injectables/DataService.html":{}}}],["redundant",{"_index":1994,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["ref",{"_index":1118,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["ref.attach(new",{"_index":1128,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["reference",{"_index":1101,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{}}}],["references",{"_index":4294,"title":{},"body":{"interfaces/Positions.html":{}}}],["referring",{"_index":570,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["refers",{"_index":3539,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["reflect",{"_index":4286,"title":{},"body":{"interfaces/Positions.html":{}}}],["refresh",{"_index":1540,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["refreshes",{"_index":706,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["regardless",{"_index":3779,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["register",{"_index":522,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["register'},{'name",{"_index":184,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["register.component.css",{"_index":5133,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":5134,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register/register.component",{"_index":410,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registercomponent",{"_index":183,"title":{"components/RegisterComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["registering",{"_index":2465,"title":{},"body":{"modules/GraphQLModule.html":{},"interfaces/Positions.html":{},"miscellaneous/variables.html":{}}}],["registerlocaledata",{"_index":404,"title":{},"body":{"modules/AppModule.html":{}}}],["registerlocaledata(en",{"_index":475,"title":{},"body":{"modules/AppModule.html":{}}}],["registerusergql",{"_index":5143,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registeruserinput",{"_index":5170,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerusermutation",{"_index":5142,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registration",{"_index":2512,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["registry",{"_index":3107,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"interfaces/Positions.html":{}}}],["registry.service",{"_index":4282,"title":{},"body":{"interfaces/Positions.html":{}}}],["registry.service.ts",{"_index":3106,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"coverage.html":{}}}],["registry.service.ts:21",{"_index":3110,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["registry/issue",{"_index":3104,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["regular",{"_index":2937,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["reject",{"_index":1848,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/QueryListParams.html":{}}}],["reject(error",{"_index":1853,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/QueryListParams.html":{}}}],["related",{"_index":2997,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["relatedfolder",{"_index":4675,"title":{},"body":{"interfaces/Positions.html":{}}}],["relatedfolders",{"_index":2306,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{}}}],["relatedfolders.getvalue(folder).concat(targetfolders",{"_index":2417,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["relatedfolders.setvalue(folder",{"_index":2416,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["relatedto",{"_index":1299,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{}}}],["relation",{"_index":295,"title":{},"body":{"components/AppComponent.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["relationedge",{"_index":1220,"title":{"interfaces/RelationEdge.html":{}},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["relations",{"_index":3032,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["relative",{"_index":1073,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"classes/NodeCache.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["relativepositionchanged",{"_index":3212,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["relativepositionchanged(group",{"_index":3223,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["relativerotation",{"_index":1288,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["relativeto",{"_index":4480,"title":{},"body":{"interfaces/Positions.html":{}}}],["relevance",{"_index":3974,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["reload",{"_index":1493,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"index.html":{}}}],["reload$]).pipe",{"_index":3190,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["reloaded",{"_index":1768,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["reloadlistset",{"_index":5252,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["reloadonmouseup",{"_index":4316,"title":{},"body":{"interfaces/Positions.html":{}}}],["reloadprojects",{"_index":4815,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["reloads",{"_index":4543,"title":{},"body":{"interfaces/Positions.html":{}}}],["remaining",{"_index":920,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["remember",{"_index":1696,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["remove",{"_index":186,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData-1.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"interfaces/userMock.html":{}}}],["removeconsumedinterface",{"_index":2906,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{}}}],["removeconsumedinterface(component",{"_index":2933,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["removeconsumedinterface(componentid",{"_index":3184,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["removeconsumedinterfacegql",{"_index":2913,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["removeconsumedinterfacemutation",{"_index":2912,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["removed",{"_index":2340,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{}}}],["removedfromcomponentevent",{"_index":851,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["removedfromlocationevent",{"_index":855,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["removedialogcomponent",{"_index":185,"title":{"components/RemoveDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["removefiltereddata",{"_index":2419,"title":{},"body":{"classes/GraphDataFactory.html":{}}}],["removefiltereddata(graphdata",{"_index":2320,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["removefromlocation",{"_index":3567,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["removefromlocation(removelocationinput",{"_index":3628,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["removeissuefromlocationgql",{"_index":3594,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["removeissuefromlocationinput",{"_index":3629,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["removeissuefromlocationmutation",{"_index":3593,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["removelocationinput",{"_index":3631,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["removeofferingcomponents",{"_index":5695,"title":{},"body":{"coverage.html":{}}}],["removeofferingcomponents(issue.locations",{"_index":2406,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["removeofferingcomponents(linkedissue.locations",{"_index":2412,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["removeofferingcomponents(locationids",{"_index":2341,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["removepredicateat",{"_index":2781,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["removepredicateat(index",{"_index":2804,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["removeprojectmembercomponentcomponent",{"_index":187,"title":{"components/RemoveProjectMemberComponentComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{},"interfaces/userMock.html":{}}}],["removes",{"_index":2310,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"interfaces/Positions.html":{}}}],["rename",{"_index":3568,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["rename(renameinput",{"_index":3632,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["renameinput",{"_index":3635,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["renameissuemutation",{"_index":3587,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["renameissuetitlegql",{"_index":3588,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["renameissuetitleinput",{"_index":3633,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["render",{"_index":2923,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"interfaces/Positions.html":{}}}],["rendered",{"_index":2209,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/MarkdownPreviewComponent.html":{},"interfaces/Positions.html":{}}}],["rendering",{"_index":2327,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["renderinitialtemplate",{"_index":3117,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["renders",{"_index":2618,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueLabelComponent.html":{},"components/MarkdownPreviewComponent.html":{},"interfaces/Positions.html":{}}}],["reopen",{"_index":2660,"title":{},"body":{"components/IssueContentsComponent.html":{},"injectables/IssueStoreService.html":{}}}],["reopen(reopeninput",{"_index":3636,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["reopeninput",{"_index":3639,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["reopenissue",{"_index":2626,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["reopenissuegql",{"_index":3586,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["reopenissueinput",{"_index":3637,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["reopenissuemutation",{"_index":3585,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["reopens",{"_index":2634,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["replace",{"_index":2711,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["replaced",{"_index":4872,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["replaysubject",{"_index":536,"title":{},"body":{"interfaces/AppState.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/Positions.html":{},"injectables/StateService.html":{}}}],["replaysubject(1",{"_index":558,"title":{},"body":{"interfaces/AppState.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{},"injectables/StateService.html":{}}}],["report",{"_index":3097,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["reports",{"_index":1933,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["repository",{"_index":1443,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["repositoryurl",{"_index":1427,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["represent",{"_index":1246,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{}}}],["representation",{"_index":863,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/TimeFormatter.html":{}}}],["represented",{"_index":824,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["representing",{"_index":821,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/FilterSelection.html":{},"components/IssueGraphControlsComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{}}}],["represents",{"_index":4632,"title":{},"body":{"interfaces/Positions.html":{}}}],["reqeusts",{"_index":2513,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["request",{"_index":1632,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueCategoryComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"classes/NodeCache.html":{},"components/SetEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["requested",{"_index":2925,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["requests",{"_index":1756,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["requesttimelineitems",{"_index":880,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["require",{"_index":5755,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":5870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":635,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphStateService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{}}}],["rerun",{"_index":5820,"title":{},"body":{"index.html":{}}}],["reset",{"_index":341,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"overview.html":{}}}],["resetform",{"_index":5139,"title":{},"body":{"components/RegisterComponent.html":{}}}],["resetform(e",{"_index":5150,"title":{},"body":{"components/RegisterComponent.html":{}}}],["resetgraph",{"_index":4600,"title":{},"body":{"interfaces/Positions.html":{}}}],["resets",{"_index":4593,"title":{},"body":{"interfaces/Positions.html":{},"components/RegisterComponent.html":{}}}],["resetvalues",{"_index":4141,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["resize",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["resizecorner(content",{"_index":1141,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["resolve(data",{"_index":1851,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/QueryListParams.html":{}}}],["respective",{"_index":3832,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["response.token",{"_index":708,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["responsible",{"_index":615,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/FilterSelection.html":{},"injectables/IssueGraphApiService.html":{},"components/LabelSearchComponent.html":{},"components/LoginComponent.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{}}}],["respoonsible",{"_index":2973,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{}}}],["rest",{"_index":5816,"title":{},"body":{"index.html":{}}}],["restricting",{"_index":2924,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["result",{"_index":1612,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"classes/Vector.html":{}}}],["result.id",{"_index":1613,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["result.items",{"_index":1947,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["result.items.size",{"_index":1946,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["result.matches",{"_index":2243,"title":{},"body":{"components/FrameComponent.html":{},"components/TopToolbarComponent.html":{}}}],["result.pageinfo",{"_index":1930,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["result.totalcount",{"_index":1932,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["result?.createdprojectid",{"_index":4833,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["resulting",{"_index":4709,"title":{},"body":{"interfaces/Positions.html":{}}}],["results",{"_index":222,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["rethrow",{"_index":1625,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["retrieval",{"_index":2902,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["retrieve",{"_index":571,"title":{},"body":{"interfaces/AppState.html":{},"injectables/LabelStoreService.html":{},"injectables/StateService.html":{}}}],["retrieved",{"_index":933,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{}}}],["retrievel",{"_index":2573,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["retrieves",{"_index":875,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["retrieving",{"_index":1309,"title":{},"body":{"injectables/ComponentStoreService.html":{},"components/ProjectIssueListComponent.html":{}}}],["return",{"_index":608,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":675,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/User.html":{}}}],["returnedfilter",{"_index":3491,"title":{},"body":{"components/IssueListComponent.html":{}}}],["returnfromselect",{"_index":1434,"title":{},"body":{"components/CreateComponentDialogComponent.html":{}}}],["returnfromselect.localecompare(imstype.github",{"_index":1430,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["returning",{"_index":2457,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":45,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"classes/TimeFormatter.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["returnurl",{"_index":644,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["reusable",{"_index":3512,"title":{},"body":{"components/IssueListComponent.html":{}}}],["rgb",{"_index":3336,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["rgb(0",{"_index":1184,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/IssueLocationComponent.html":{}}}],["rgb(204",{"_index":1544,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["rgb(9",{"_index":3547,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["rgba(0",{"_index":2615,"title":{},"body":{"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["rgba(0,0,0,0.75",{"_index":4855,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["rgba(201",{"_index":3524,"title":{},"body":{"components/IssueListComponent.html":{}}}],["rgba(201,195,201,1",{"_index":4958,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["rgba(255",{"_index":2762,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueLabelComponent.html":{},"components/QueryComponent.html":{}}}],["rid",{"_index":3307,"title":{},"body":{"components/IssueIconComponent.html":{},"interfaces/Positions.html":{}}}],["right",{"_index":1549,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/SideNavComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["right/bottom",{"_index":4497,"title":{},"body":{"interfaces/Positions.html":{}}}],["rightdistance",{"_index":3249,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["role",{"_index":265,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["root",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"injectables/StateService.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["root'},{'name",{"_index":107,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["root_node",{"_index":2825,"title":{},"body":{"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rootid",{"_index":4521,"title":{},"body":{"interfaces/Positions.html":{}}}],["rootnode",{"_index":4523,"title":{},"body":{"interfaces/Positions.html":{}}}],["rootnode.id",{"_index":4542,"title":{},"body":{"interfaces/Positions.html":{}}}],["rootnode.type",{"_index":4530,"title":{},"body":{"interfaces/Positions.html":{}}}],["rotate",{"_index":5638,"title":{},"body":{"classes/Vector.html":{}}}],["rotate(360deg",{"_index":1642,"title":{},"body":{"components/CreateIssueDialogComponent.html":{}}}],["rotated",{"_index":5640,"title":{},"body":{"classes/Vector.html":{}}}],["route",{"_index":599,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/FrameComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/StateService.html":{},"interfaces/userMock.html":{}}}],["router",{"_index":535,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProjectOverviewComponent.html":{},"components/RegisterComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"interfaces/User.html":{}}}],["router.events.pipe",{"_index":581,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["routermodule",{"_index":498,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":526,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routeroutlet",{"_index":2235,"title":{},"body":{"components/FrameComponent.html":{}}}],["routerstatesnapshot",{"_index":630,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":497,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":578,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/StateService.html":{},"index.html":{}}}],["routing.module",{"_index":350,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":496,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":2263,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["row.id",{"_index":3497,"title":{},"body":{"components/IssueListComponent.html":{}}}],["row:hover",{"_index":3520,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["rowdata",{"_index":4884,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["rows",{"_index":2271,"title":{},"body":{"components/FrameComponent.html":{}}}],["run",{"_index":5076,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"index.html":{}}}],["running",{"_index":5823,"title":{},"body":{"index.html":{}}}],["runtime",{"_index":5124,"title":{},"body":{"interfaces/QueryListParams.html":{}}}],["rxjs",{"_index":537,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"injectables/ComponentStoreService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueListComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectStoreService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"dependencies.html":{},"interfaces/userMock.html":{}}}],["rxjs/operators",{"_index":540,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"injectables/ComponentStoreService.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"components/LoginComponent.html":{},"interfaces/Positions.html":{},"injectables/ProjectStoreService.html":{},"components/SettingsDialogComponent.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{}}}],["s",{"_index":5186,"title":{},"body":{"components/RegisterComponent.html":{},"classes/TimeFormatter.html":{}}}],["s${sourceid}t${targetid}r${edgetype",{"_index":1283,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["s1",{"_index":2042,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["s2",{"_index":2044,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["same",{"_index":818,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"injectables/ComponentStoreService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{}}}],["sandwich",{"_index":2239,"title":{},"body":{"components/FrameComponent.html":{},"components/TopToolbarComponent.html":{}}}],["sans",{"_index":3554,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["sat",{"_index":3356,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["satisfy",{"_index":5264,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["save",{"_index":670,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/IssueDetailComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/User.html":{}}}],["savechanges",{"_index":2685,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["saved",{"_index":1007,"title":{},"body":{"components/CommentComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/TextDisplayComponent.html":{}}}],["savedpositions",{"_index":4317,"title":{},"body":{"interfaces/Positions.html":{}}}],["savefailed",{"_index":1555,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["savepositionssubject",{"_index":4318,"title":{},"body":{"interfaces/Positions.html":{}}}],["saves",{"_index":2696,"title":{},"body":{"components/IssueDetailComponent.html":{},"interfaces/Positions.html":{}}}],["saveusertostorage",{"_index":658,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["saveusertostorage(user",{"_index":682,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["saving",{"_index":648,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/IssueDetailComponent.html":{},"interfaces/Positions.html":{},"interfaces/User.html":{}}}],["savingbody",{"_index":982,"title":{},"body":{"components/CommentComponent.html":{}}}],["savingchanges",{"_index":2680,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["savingcomment",{"_index":2623,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["scalar",{"_index":5646,"title":{},"body":{"classes/Vector.html":{}}}],["scalars",{"_index":2293,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["scalars['id",{"_index":2298,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["scale",{"_index":3780,"title":{},"body":{"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["scale(factor",{"_index":5643,"title":{},"body":{"classes/Vector.html":{}}}],["scaled",{"_index":5647,"title":{},"body":{"classes/Vector.html":{}}}],["schema",{"_index":1425,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/IssueStoreService.html":{},"classes/NodeCache.html":{},"index.html":{}}}],["schemas",{"_index":346,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["schould",{"_index":4871,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["score",{"_index":3967,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"dependencies.html":{}}}],["score(item",{"_index":3988,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["scorekeys",{"_index":2841,"title":{},"body":{"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/variables.html":{}}}],["scores",{"_index":3990,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["scoring",{"_index":5245,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["screen",{"_index":3879,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Positions.html":{}}}],["sdot",{"_index":1048,"title":{},"body":{"components/CommentComponent.html":{}}}],["search",{"_index":1509,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/FilterSelection.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{},"injectables/UsersService.html":{}}}],["search'},{'name",{"_index":156,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["search.component",{"_index":2201,"title":{},"body":{"interfaces/FilterState.html":{},"modules/GraphsModule.html":{},"components/IssueGraphControlsComponent.html":{}}}],["search.component.html",{"_index":2162,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["search.component.scss",{"_index":2163,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["search.component.ts",{"_index":2147,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["search.component.ts:17",{"_index":3672,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["search.component.ts:19",{"_index":3673,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["search.component.ts:20",{"_index":3675,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["search.component.ts:21",{"_index":3674,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["search.component.ts:22",{"_index":3668,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["search.component.ts:31",{"_index":3671,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["search.component.ts:38",{"_index":3669,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["search.component.ts:49",{"_index":3670,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["search/label",{"_index":2146,"title":{},"body":{"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"modules/GraphsModule.html":{},"components/IssueGraphControlsComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["searched",{"_index":5220,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["searchissuesdataarray",{"_index":3387,"title":{},"body":{"components/IssueListComponent.html":{}}}],["searchquery",{"_index":2776,"title":{},"body":{"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["searchquerydidchange",{"_index":4091,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["searchuser",{"_index":5597,"title":{},"body":{"injectables/UsersService.html":{}}}],["searchusers",{"_index":3869,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["searchusers(filter",{"_index":5589,"title":{},"body":{"injectables/UsersService.html":{}}}],["searchusersgql",{"_index":5583,"title":{},"body":{"injectables/UsersService.html":{}}}],["second",{"_index":4627,"title":{},"body":{"interfaces/Positions.html":{}}}],["seconds",{"_index":955,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["see",{"_index":978,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["seenitems",{"_index":4043,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["seenitems.add(id",{"_index":4048,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["seenitems.has(id",{"_index":4047,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["segment",{"_index":5625,"title":{},"body":{"classes/Vector.html":{}}}],["select",{"_index":431,"title":{},"body":{"modules/AppModule.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/FilterSelection.html":{},"modules/GraphsModule.html":{},"components/LabelSearchComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/TextFragment.html":{},"dependencies.html":{}}}],["select.label",{"_index":3676,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["select/ng",{"_index":430,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"dependencies.html":{}}}],["selectable",{"_index":5314,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["selected",{"_index":29,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["selectedcategories",{"_index":2199,"title":{},"body":{"interfaces/FilterState.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"miscellaneous/typealiases.html":{}}}],["selectedfilter",{"_index":2200,"title":{},"body":{"interfaces/FilterState.html":{},"components/IssueGraphControlsComponent.html":{}}}],["selectedlabels",{"_index":2167,"title":{},"body":{"interfaces/FilterSelection.html":{},"injectables/IssueGraphApiService.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["selectedusers",{"_index":236,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["selection",{"_index":2176,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{}}}],["selection.labels",{"_index":2184,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["selection.texts",{"_index":2181,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"interfaces/userMock.html":{}}}],["selects",{"_index":3413,"title":{},"body":{"components/IssueListComponent.html":{}}}],["self",{"_index":965,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"components/RemoveDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["self.alllabelslist",{"_index":2843,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["self.projectid",{"_index":2829,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["selfassigned(assignedevent",{"_index":967,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["send",{"_index":3939,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["sending",{"_index":1758,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/SetEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["separate",{"_index":3345,"title":{},"body":{"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{}}}],["separately",{"_index":3801,"title":{},"body":{"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sequence",{"_index":3176,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["serif",{"_index":3555,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["server",{"_index":870,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/SetEditorComponent.html":{},"index.html":{}}}],["server/connection",{"_index":2499,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["service",{"_index":545,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueStoreService.html":{},"classes/NodeCache.html":{},"injectables/ProjectStoreService.html":{},"injectables/StateService.html":{},"injectables/UserNotifyService.html":{}}}],["services",{"_index":5838,"title":{},"body":{"index.html":{}}}],["session",{"_index":4680,"title":{},"body":{"interfaces/Positions.html":{}}}],["set",{"_index":189,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData-1.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["set(locationids.filter(locationid",{"_index":2345,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["set(this.componentlist.map(id",{"_index":1516,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["setcontext",{"_index":2448,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["setcontext((_",{"_index":2504,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["setcontext((operation",{"_index":2477,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["seteditorcomponent",{"_index":188,"title":{"components/SetEditorComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["seteditordialogcomponent",{"_index":190,"title":{"components/SetEditorDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["seteditordialogdata",{"_index":4060,"title":{"interfaces/SetEditorDialogData.html":{}},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["seterror",{"_index":5095,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["setfilter",{"_index":3968,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["setfilter(query",{"_index":3992,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["setgraphtolastview",{"_index":4682,"title":{},"body":{"interfaces/Positions.html":{}}}],["setinenumarray",{"_index":2782,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["setinenumarray(array",{"_index":2806,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["setmultisource",{"_index":3960,"title":{"interfaces/SetMultiSource.html":{}},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["setparams",{"_index":1950,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["setparams(p",{"_index":1740,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{}}}],["setpredicatetype",{"_index":2783,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["setpredicatetype(index",{"_index":2812,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["setrelationvisibility",{"_index":3018,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["setrelationvisibility(showrelations",{"_index":4766,"title":{},"body":{"interfaces/Positions.html":{}}}],["sets",{"_index":561,"title":{},"body":{"interfaces/AppState.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/MultiSourceList.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{}}}],["setter",{"_index":2985,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["setters",{"_index":2975,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"interfaces/Positions.html":{}}}],["setters.service",{"_index":4280,"title":{},"body":{"interfaces/Positions.html":{}}}],["setters.service.ts",{"_index":2972,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"coverage.html":{}}}],["setters.service.ts:24",{"_index":2980,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["setters/issue",{"_index":2971,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["settext(value",{"_index":5411,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["settimeout",{"_index":1875,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/RegisterComponent.html":{}}}],["setting",{"_index":4765,"title":{},"body":{"interfaces/Positions.html":{}}}],["settings",{"_index":57,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{}}}],["settingsdialogcomponent",{"_index":56,"title":{"components/SettingsDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["setup",{"_index":3064,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{},"index.html":{}}}],["several",{"_index":810,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["shadow",{"_index":1180,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/IssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/TimelineItemComponent.html":{}}}],["shared",{"_index":3050,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["sharereplay",{"_index":2244,"title":{},"body":{"components/FrameComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["sharereplay(1",{"_index":3200,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["sheet",{"_index":4597,"title":{},"body":{"interfaces/Positions.html":{}}}],["shift",{"_index":4476,"title":{},"body":{"interfaces/Positions.html":{}}}],["short",{"_index":1731,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/UserItemComponent.html":{}}}],["shortcut",{"_index":4838,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["shouldn't",{"_index":2003,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/typealiases.html":{}}}],["show",{"_index":3031,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["showconfirmdialog",{"_index":1577,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["showdeleted",{"_index":5484,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["showdeletedialog",{"_index":4142,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["showdeletedialog(affected",{"_index":4160,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["showdrawer",{"_index":2228,"title":{},"body":{"components/FrameComponent.html":{}}}],["showing",{"_index":2892,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SideNavComponent.html":{},"components/TopToolbarComponent.html":{}}}],["showmenubutton",{"_index":5542,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["shown",{"_index":866,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/DialogData-1.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/enumerations.html":{},"interfaces/userMock.html":{}}}],["showname",{"_index":4134,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["showplaceholder",{"_index":5392,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["showrelations",{"_index":3015,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["shows",{"_index":840,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/DialogData-1.html":{},"components/IssueListComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectListComponent.html":{},"components/RemoveDialogComponent.html":{},"components/TextDisplayComponent.html":{},"index.html":{}}}],["side",{"_index":193,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["sidebar",{"_index":2221,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueDetailComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/SetEditorComponent.html":{}}}],["sidebar'},{'name",{"_index":154,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["sidebar.component",{"_index":1588,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"modules/GraphsModule.html":{}}}],["sidebar.component.ts",{"_index":5729,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["sidemenu",{"_index":5344,"title":{},"body":{"components/SideNavComponent.html":{}}}],["sidenav",{"_index":2260,"title":{},"body":{"components/FrameComponent.html":{}}}],["sidenavcomponent",{"_index":192,"title":{"components/SideNavComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signal",{"_index":3179,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["signals",{"_index":3075,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["signature",{"_index":636,"title":{},"body":{"guards/AuthGuard.html":{}}}],["significant",{"_index":3794,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["signup",{"_index":5880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signupurl",{"_index":5875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["simple",{"_index":2038,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"classes/Vector.html":{}}}],["simplechanges",{"_index":5249,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["simultaneously",{"_index":3976,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["single",{"_index":945,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/MultiSourceList.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["singular",{"_index":5452,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["size",{"_index":1655,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"components/LoginComponent.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["size.height",{"_index":4734,"title":{},"body":{"interfaces/Positions.html":{}}}],["size.width",{"_index":4732,"title":{},"body":{"interfaces/Positions.html":{}}}],["sizes",{"_index":1663,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["slate",{"_index":4564,"title":{},"body":{"interfaces/Positions.html":{}}}],["slide",{"_index":3095,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["slider",{"_index":2252,"title":{},"body":{"components/FrameComponent.html":{},"interfaces/Positions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["slideto",{"_index":5748,"title":{},"body":{"coverage.html":{}}}],["slideto('right",{"_index":5970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sliding",{"_index":5971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["small",{"_index":3765,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["smaller",{"_index":5316,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["solid",{"_index":2668,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["solution",{"_index":5595,"title":{},"body":{"injectables/UsersService.html":{}}}],["something",{"_index":3986,"title":{},"body":{"classes/MultiSourceList.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sometimes",{"_index":4309,"title":{},"body":{"interfaces/Positions.html":{}}}],["somewhat",{"_index":4502,"title":{},"body":{"interfaces/Positions.html":{}}}],["somewhere",{"_index":3987,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sommerzeit",{"_index":5443,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["soon",{"_index":5064,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["sort",{"_index":3376,"title":{},"body":{"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["sorted",{"_index":3266,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["sortedchildids",{"_index":3259,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["sortedchildids.foreach((childid",{"_index":3270,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["sortedchildids.length",{"_index":3279,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"index.html":{},"interfaces/userMock.html":{}}}],["source.allowedanchors.has('bottom",{"_index":3162,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["source.allowedanchors.has('right",{"_index":3161,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["source.current.entries",{"_index":4046,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["source.current.size",{"_index":4050,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["source.filter",{"_index":4034,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["source.hasdata",{"_index":4045,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["source.loading",{"_index":4056,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["source?.allowedanchors",{"_index":3147,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["sourced",{"_index":4004,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sourcefolders",{"_index":2407,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["sourcefolders.foreach(folder",{"_index":2415,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["sourcehandles",{"_index":3135,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["sourcehandles.filter((linkhandle",{"_index":3156,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["sourcehandles:linkhandle[];targethandles:linkhandle",{"_index":3154,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["sourceid",{"_index":1284,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["sourceissues",{"_index":1279,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["sourcelocationids",{"_index":2405,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["sourcelocationids.map(locationid",{"_index":2408,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["sourcenode",{"_index":2994,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"interfaces/Positions.html":{}}}],["sourcenode.type",{"_index":4389,"title":{},"body":{"interfaces/Positions.html":{}}}],["sourcenodelist",{"_index":3963,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sourcenodelistsub",{"_index":4006,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sourcenodes",{"_index":3979,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sourcepoint",{"_index":5626,"title":{},"body":{"classes/Vector.html":{}}}],["sources",{"_index":3957,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sourcesubs",{"_index":4007,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["south",{"_index":4268,"title":{},"body":{"interfaces/Positions.html":{}}}],["space",{"_index":2119,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/IssueIconComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/TopToolbarComponent.html":{}}}],["spacer",{"_index":3101,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/TopToolbarComponent.html":{}}}],["spaces",{"_index":746,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["spacing",{"_index":2889,"title":{},"body":{"components/IssueFilterComponent.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["span[matline",{"_index":4850,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["spec",{"_index":3964,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["spec.sourcenodes",{"_index":4010,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["spec\\.ts",{"_index":5871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":3863,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/variables.html":{}}}],["specific",{"_index":591,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"injectables/StateService.html":{}}}],["specified",{"_index":1423,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/DialogData-1.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"classes/MultiSourceList.html":{},"injectables/ProjectStoreService.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{}}}],["specifies",{"_index":4001,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["specifying",{"_index":1097,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/Positions.html":{}}}],["spinner",{"_index":1640,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"modules/GraphsModule.html":{},"components/IssueDetailComponent.html":{}}}],["src/.../app.module.ts",{"_index":5863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../component",{"_index":5865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":5867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":5868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../graph",{"_index":5852,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../graphql.module.ts",{"_index":5864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../id.ts",{"_index":5795,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../issue",{"_index":5794,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../issues.service.ts",{"_index":5855,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../label",{"_index":5851,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../load.ts",{"_index":5858,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../node",{"_index":5796,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../query.component.ts",{"_index":5797,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../query.ts",{"_index":5853,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../route",{"_index":5869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../set",{"_index":5857,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../shared.ts",{"_index":5850,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../test.ts",{"_index":5866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../text",{"_index":5862,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../timeline.component.ts",{"_index":5856,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/app",{"_index":495,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":288,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/auth.guard.ts",{"_index":614,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth/auth.guard.ts:10",{"_index":627,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.guard.ts:22",{"_index":631,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/authentication.service.ts",{"_index":647,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["src/app/auth/authentication.service.ts:15",{"_index":686,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/auth/authentication.service.ts:16",{"_index":685,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/auth/authentication.service.ts:17",{"_index":663,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/auth/authentication.service.ts:24",{"_index":688,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/auth/authentication.service.ts:28",{"_index":665,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/auth/authentication.service.ts:32",{"_index":683,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/auth/authentication.service.ts:43",{"_index":668,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/auth/authentication.service.ts:59",{"_index":679,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/components/cache",{"_index":759,"title":{},"body":{"components/CacheNodeComponent.html":{},"coverage.html":{}}}],["src/app/components/cursor",{"_index":1650,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"coverage.html":{}}}],["src/app/components/issue",{"_index":2608,"title":{},"body":{"components/IssueCategoryComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"coverage.html":{}}}],["src/app/components/item.directive.ts",{"_index":3661,"title":{},"body":{"directives/ItemDirective.html":{},"coverage.html":{}}}],["src/app/components/set",{"_index":3956,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/components/user",{"_index":5553,"title":{},"body":{"components/UserItemComponent.html":{},"coverage.html":{}}}],["src/app/data",{"_index":1367,"title":{},"body":{"injectables/ComponentsService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"interfaces/QueryListParams.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/data/component/component",{"_index":1305,"title":{},"body":{"injectables/ComponentStoreService.html":{},"coverage.html":{}}}],["src/app/data/interface/interface",{"_index":2572,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"coverage.html":{}}}],["src/app/data/issue",{"_index":2274,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/data/issue/issue",{"_index":3557,"title":{},"body":{"injectables/IssueStoreService.html":{},"coverage.html":{}}}],["src/app/data/label/label",{"_index":3678,"title":{},"body":{"injectables/LabelStoreService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/data/project/project",{"_index":4976,"title":{},"body":{"injectables/ProjectStoreService.html":{},"coverage.html":{}}}],["src/app/dialogs/access",{"_index":10,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"coverage.html":{}}}],["src/app/dialogs/add",{"_index":224,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"coverage.html":{}}}],["src/app/dialogs/create",{"_index":411,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/ProjectListComponent.html":{},"coverage.html":{}}}],["src/app/dialogs/profile",{"_index":4773,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{},"coverage.html":{}}}],["src/app/dialogs/remove",{"_index":2114,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"coverage.html":{}}}],["src/app/dialogs/settings",{"_index":5326,"title":{},"body":{"components/SettingsDialogComponent.html":{},"coverage.html":{}}}],["src/app/frame/frame.component.ts",{"_index":2205,"title":{},"body":{"components/FrameComponent.html":{},"coverage.html":{}}}],["src/app/frame/frame.component.ts:27",{"_index":2247,"title":{},"body":{"components/FrameComponent.html":{}}}],["src/app/frame/frame.component.ts:28",{"_index":2248,"title":{},"body":{"components/FrameComponent.html":{}}}],["src/app/frame/frame.component.ts:30",{"_index":2245,"title":{},"body":{"components/FrameComponent.html":{}}}],["src/app/frame/frame.component.ts:34",{"_index":2233,"title":{},"body":{"components/FrameComponent.html":{}}}],["src/app/frame/frame.component.ts:36",{"_index":2249,"title":{},"body":{"components/FrameComponent.html":{}}}],["src/app/frame/frame.component.ts:45",{"_index":2238,"title":{},"body":{"components/FrameComponent.html":{}}}],["src/app/frame/frame.component.ts:49",{"_index":2236,"title":{},"body":{"components/FrameComponent.html":{}}}],["src/app/graphql.module.ts",{"_index":2437,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/graphs",{"_index":3231,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["src/app/graphs/automatic",{"_index":3698,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{},"coverage.html":{}}}],["src/app/graphs/component",{"_index":1050,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/graphs/graphs.module.ts",{"_index":2522,"title":{},"body":{"modules/GraphsModule.html":{}}}],["src/app/graphs/issue",{"_index":1206,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/graphs/label",{"_index":2145,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/graphs/shared.ts",{"_index":2198,"title":{},"body":{"interfaces/FilterState.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/issue",{"_index":806,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/login/login.component.ts",{"_index":3878,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:18",{"_index":3904,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:19",{"_index":3901,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:20",{"_index":3900,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:21",{"_index":3899,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:22",{"_index":3902,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:29",{"_index":3891,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:49",{"_index":3890,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/markdown/markdown",{"_index":3924,"title":{},"body":{"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"coverage.html":{}}}],["src/app/node",{"_index":4127,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/project",{"_index":4788,"title":{},"body":{"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["src/app/register/register.component.ts",{"_index":5131,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/register/register.component.ts:118",{"_index":5151,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:131",{"_index":5148,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:20",{"_index":5167,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:21",{"_index":5161,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:22",{"_index":5146,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:44",{"_index":5163,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:67",{"_index":5160,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:85",{"_index":5158,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:95",{"_index":5154,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/route",{"_index":5746,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/side",{"_index":5342,"title":{},"body":{"components/SideNavComponent.html":{},"coverage.html":{}}}],["src/app/state.service.ts",{"_index":530,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{},"coverage.html":{}}}],["src/app/state.service.ts:16",{"_index":5385,"title":{},"body":{"injectables/StateService.html":{}}}],["src/app/state.service.ts:17",{"_index":5382,"title":{},"body":{"injectables/StateService.html":{}}}],["src/app/state.service.ts:31",{"_index":5384,"title":{},"body":{"injectables/StateService.html":{}}}],["src/app/state.service.ts:57",{"_index":5383,"title":{},"body":{"injectables/StateService.html":{}}}],["src/app/text",{"_index":5386,"title":{},"body":{"components/TextDisplayComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/top",{"_index":5534,"title":{},"body":{"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["src/app/user",{"_index":5560,"title":{},"body":{"injectables/UserNotifyService.html":{},"coverage.html":{}}}],["src/app/utils/query",{"_index":5041,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/utils/validators.ts",{"_index":721,"title":{},"body":{"classes/CCIMSValidators.html":{},"coverage.html":{}}}],["src/app/utils/validators.ts:10",{"_index":749,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["src/app/utils/validators.ts:16",{"_index":741,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["src/app/utils/validators.ts:25",{"_index":750,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["src/app/utils/validators.ts:30",{"_index":734,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["src/environments/environment.prod.ts",{"_index":5752,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":5753,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/generated",{"_index":5821,"title":{},"body":{"index.html":{}}}],["src/generated/graphql",{"_index":541,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/FilterState.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"components/IssueDetailComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"interfaces/RelationEdge.html":{},"injectables/StateService.html":{},"components/UserItemComponent.html":{},"injectables/UsersService.html":{},"interfaces/userMock.html":{}}}],["src/generated/public",{"_index":5171,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/styles/dialog",{"_index":1447,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["src/styles/spinner",{"_index":2661,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/ProjectListComponent.html":{}}}],["src/styles/variables",{"_index":1173,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/TextDisplayComponent.html":{}}}],["src/styles/variables.scss",{"_index":2744,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["src/test.ts",{"_index":5754,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ss",{"_index":2170,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"components/SideNavComponent.html":{},"interfaces/TextFragment.html":{}}}],["ss.state$.pipe",{"_index":2254,"title":{},"body":{"components/FrameComponent.html":{}}}],["ss.state$.subscribe(appstate",{"_index":5366,"title":{},"body":{"components/SideNavComponent.html":{}}}],["stale",{"_index":1767,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["standing",{"_index":2195,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/TextFragment.html":{},"miscellaneous/typealiases.html":{}}}],["star",{"_index":2761,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["start",{"_index":1111,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"components/TimelineItemComponent.html":{},"index.html":{},"interfaces/userMock.html":{}}}],["start/end",{"_index":743,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["startcursor",{"_index":5940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["started",{"_index":2730,"title":{"index.html":{}},"body":{"components/IssueDetailComponent.html":{}}}],["startediting",{"_index":5393,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["startoffset",{"_index":3256,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["starts",{"_index":2118,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["state",{"_index":557,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"injectables/StateService.html":{},"miscellaneous/enumerations.html":{}}}],["state.project",{"_index":2256,"title":{},"body":{"components/FrameComponent.html":{}}}],["state.service",{"_index":1403,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"interfaces/FilterSelection.html":{},"components/IssueGraphControlsComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{}}}],["state.service.ts",{"_index":3166,"title":{},"body":{"injectables/IssueGraphStateService.html":{},"coverage.html":{}}}],["state.service.ts:14",{"_index":3168,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["state.service.ts:28",{"_index":3173,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["state.service.ts:44",{"_index":3171,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["state.service.ts:51",{"_index":3185,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["state.url",{"_index":645,"title":{},"body":{"guards/AuthGuard.html":{}}}],["state[fill",{"_index":2758,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["state[stroke",{"_index":2759,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["stateful",{"_index":1772,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["statelock",{"_index":1829,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["statements",{"_index":5651,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":3183,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["stateservice",{"_index":556,"title":{"injectables/StateService.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"coverage.html":{},"index.html":{}}}],["static",{"_index":728,"title":{},"body":{"classes/CCIMSValidators.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueLabelComponent.html":{},"classes/LayoutNode.html":{},"classes/MultiSourceList.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/Vector.html":{}}}],["staticsourcenodelist",{"_index":3965,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["staticsources",{"_index":2852,"title":{},"body":{"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/variables.html":{}}}],["stats",{"_index":2767,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["status",{"_index":2755,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/RegisterComponent.html":{}}}],["step",{"_index":67,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["sticky",{"_index":5552,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["still",{"_index":1479,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["stop",{"_index":916,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["stopcoalescing",{"_index":914,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["stopcoalescing(coalescingtype",{"_index":958,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["stops",{"_index":951,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["storage",{"_index":672,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphQLModule.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"interfaces/User.html":{}}}],["store",{"_index":703,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/IssueLabelComponent.html":{},"interfaces/Positions.html":{},"interfaces/User.html":{}}}],["store.service",{"_index":544,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/FilterSelection.html":{},"injectables/IssueGraphApiService.html":{},"components/LabelSearchComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"interfaces/userMock.html":{}}}],["store.service.ts",{"_index":1306,"title":{},"body":{"injectables/ComponentStoreService.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"injectables/ProjectStoreService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["store.service.ts:100",{"_index":3644,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:104",{"_index":3624,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:110",{"_index":3622,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:12",{"_index":3683,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["store.service.ts:23",{"_index":3688,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["store.service.ts:25",{"_index":2590,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["store.service.ts:29",{"_index":4993,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["store.service.ts:30",{"_index":1339,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["store.service.ts:34",{"_index":2594,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["store.service.ts:36",{"_index":3685,"title":{},"body":{"injectables/LabelStoreService.html":{},"injectables/ProjectStoreService.html":{}}}],["store.service.ts:41",{"_index":1350,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["store.service.ts:42",{"_index":3599,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:43",{"_index":2597,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["store.service.ts:44",{"_index":4994,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["store.service.ts:45",{"_index":1346,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["store.service.ts:49",{"_index":1352,"title":{},"body":{"injectables/ComponentStoreService.html":{},"injectables/InterfaceStoreService.html":{}}}],["store.service.ts:51",{"_index":4999,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["store.service.ts:53",{"_index":1348,"title":{},"body":{"injectables/ComponentStoreService.html":{},"injectables/InterfaceStoreService.html":{}}}],["store.service.ts:55",{"_index":5001,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["store.service.ts:56",{"_index":3616,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:57",{"_index":1344,"title":{},"body":{"injectables/ComponentStoreService.html":{},"injectables/InterfaceStoreService.html":{}}}],["store.service.ts:59",{"_index":4996,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["store.service.ts:60",{"_index":3627,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:64",{"_index":1342,"title":{},"body":{"injectables/ComponentStoreService.html":{},"injectables/IssueStoreService.html":{}}}],["store.service.ts:68",{"_index":1355,"title":{},"body":{"injectables/ComponentStoreService.html":{},"injectables/IssueStoreService.html":{}}}],["store.service.ts:72",{"_index":3620,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:76",{"_index":3610,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:80",{"_index":3638,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:84",{"_index":3634,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:88",{"_index":3607,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:92",{"_index":3603,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:96",{"_index":3630,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["stored",{"_index":1244,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["stretch",{"_index":273,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["string",{"_index":49,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":2941,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["stroke",{"_index":2760,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["structural",{"_index":3663,"title":{},"body":{"directives/ItemDirective.html":{}}}],["structure",{"_index":2006,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/ProjectMembersComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{}}}],["stuff",{"_index":597,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["style",{"_index":3550,"title":{},"body":{"components/IssueLocationComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/RemoveDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["style('opacity",{"_index":3123,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["styleurls",{"_index":21,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"interfaces/userMock.html":{}}}],["sub",{"_index":1849,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sub.error(error",{"_index":1890,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["sub.next(this.current",{"_index":1887,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["sub.unsubscribe",{"_index":1852,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sub.unsubscribe()`]{@link",{"_index":1802,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subdivided",{"_index":5818,"title":{},"body":{"index.html":{}}}],["subheading",{"_index":2754,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["subject",{"_index":680,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{},"interfaces/User.html":{}}}],["submitform",{"_index":3888,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["submitform(value",{"_index":5153,"title":{},"body":{"components/RegisterComponent.html":{}}}],["subscribe",{"_index":772,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueGraphControlsComponent.html":{},"components/LoginComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["subscribe(_",{"_index":592,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["subscribe(filterstate",{"_index":3071,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["subscribe(project",{"_index":588,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["subscribe(r",{"_index":4328,"title":{},"body":{"interfaces/Positions.html":{}}}],["subscribe(this.isprojectset",{"_index":2257,"title":{},"body":{"components/FrameComponent.html":{}}}],["subscribe]{@link",{"_index":1785,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subscribed",{"_index":977,"title":{},"body":{"components/CommentComponent.html":{}}}],["subscribelazy",{"_index":1705,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subscribelazy(...args",{"_index":1734,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subscriber",{"_index":1743,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["subscriber.next(this.current",{"_index":1881,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subscribercount",{"_index":1893,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subscribers",{"_index":1827,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subscribes",{"_index":4345,"title":{},"body":{"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["subscribetosubject",{"_index":4357,"title":{},"body":{"interfaces/Positions.html":{}}}],["subscription",{"_index":787,"title":{},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["subscription#unsubscribe",{"_index":1803,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subscriptions",{"_index":567,"title":{},"body":{"interfaces/AppState.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueGraphControlsComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{}}}],["subsequent",{"_index":1787,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subtract",{"_index":5611,"title":{},"body":{"classes/Vector.html":{}}}],["subtract(other",{"_index":5648,"title":{},"body":{"classes/Vector.html":{}}}],["success",{"_index":275,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["success(value",{"_index":5094,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["successful",{"_index":678,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CommentComponent.html":{},"components/IssueContentsComponent.html":{},"components/NodeDetailsComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/User.html":{}}}],["successfull",{"_index":3893,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["successfully",{"_index":5043,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["succession",{"_index":815,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["sucessfull",{"_index":669,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["such",{"_index":2014,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueItemComponent.html":{},"classes/NodeCache.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["sufficient",{"_index":1793,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["suggestions",{"_index":5232,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["sum",{"_index":5616,"title":{},"body":{"classes/Vector.html":{}}}],["super(id",{"_index":1897,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["super(subscriber",{"_index":1838,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["superset",{"_index":5237,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["support",{"_index":5844,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":1034,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/LayoutNode.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectOverviewComponent.html":{},"classes/Vector.html":{}}}],["svg",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"components/IssueDetailComponent.html":{},"modules.html":{}}}],["switch",{"_index":2855,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/SettingsDialogComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["switches",{"_index":3025,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["switchmap",{"_index":539,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/FilterSelection.html":{},"injectables/IssueGraphStateService.html":{},"components/LabelSearchComponent.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{}}}],["switchmap(([appstate",{"_index":3195,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["switchmap((event",{"_index":586,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["switchmap(term",{"_index":2192,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["switchtheme",{"_index":5331,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["symbols",{"_index":5165,"title":{},"body":{"components/RegisterComponent.html":{}}}],["synchronously",{"_index":1781,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["syncstatewithurl",{"_index":5381,"title":{},"body":{"injectables/StateService.html":{}}}],["syncstatewithurl(router",{"_index":580,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["syntax",{"_index":3926,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["system",{"_index":4809,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["t",{"_index":1809,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/FilterState.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tab",{"_index":4251,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["table",{"_index":3377,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":5756,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":3835,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{}}}],["taken",{"_index":2803,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/RegisterComponent.html":{}}}],["takes",{"_index":4555,"title":{},"body":{"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["takeuntil",{"_index":3052,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/Positions.html":{}}}],["takeuntil(destroy",{"_index":3191,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["takeuntil(this.destroy",{"_index":3069,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["tap",{"_index":2153,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["target",{"_index":1285,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{}}}],["target.allowedanchors.has('bottom",{"_index":3165,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["target.allowedanchors.has('right",{"_index":3164,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["target?.allowedanchors",{"_index":3149,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["targetfolders",{"_index":2404,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["targetfolders.concat(targetlocationids.map(locationid",{"_index":2413,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["targethandles",{"_index":3139,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["targetid",{"_index":1281,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["targetlocationids",{"_index":2411,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["targetnode",{"_index":2995,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"interfaces/Positions.html":{}}}],["targetnode.id.tostring()).subscribe",{"_index":4413,"title":{},"body":{"interfaces/Positions.html":{}}}],["targetnode?.type",{"_index":4403,"title":{},"body":{"interfaces/Positions.html":{}}}],["targetpoint",{"_index":5620,"title":{},"body":{"classes/Vector.html":{}}}],["targets",{"_index":4393,"title":{},"body":{"interfaces/Positions.html":{}}}],["task",{"_index":4931,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["tell",{"_index":3030,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentNode.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{}}}],["templateref",{"_index":783,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/MultiSourceList.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["templates",{"_index":3664,"title":{},"body":{"directives/ItemDirective.html":{}}}],["templates/dynamic",{"_index":3112,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["templateurl",{"_index":23,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"interfaces/userMock.html":{}}}],["term",{"_index":3687,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["term).pipe",{"_index":2194,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["test",{"_index":2943,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["test)&quot;&quot",{"_index":2948,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["testing",{"_index":758,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["text",{"_index":196,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"miscellaneous/typealiases.html":{}}}],["text(value",{"_index":5413,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["textdisplaycomponent",{"_index":195,"title":{"components/TextDisplayComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["textdisplayeditcallbackfn",{"_index":5397,"title":{},"body":{"components/TextDisplayComponent.html":{},"miscellaneous/typealiases.html":{}}}],["textfragment",{"_index":2196,"title":{"interfaces/TextFragment.html":{}},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["texts",{"_index":2148,"title":{},"body":{"interfaces/FilterSelection.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{}}}],["texts.length",{"_index":2955,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["texts.map(text",{"_index":2965,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["textstoregex",{"_index":2907,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["textstoregex([\"newest",{"_index":2942,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["textstoregex([&quot;newest",{"_index":2944,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["textstoregex(texts",{"_index":2935,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["thecurrent",{"_index":882,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["theme",{"_index":3940,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["then(created",{"_index":1531,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["then(data",{"_index":5601,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["theres",{"_index":4679,"title":{},"body":{"interfaces/Positions.html":{}}}],["theses",{"_index":5837,"title":{},"body":{"index.html":{}}}],["thing",{"_index":1685,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["thing$.hasdata",{"_index":1686,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["thing$.loading",{"_index":1684,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["thing.something",{"_index":1687,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["thingid",{"_index":1689,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["things",{"_index":1911,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["thingslistid",{"_index":1910,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["thingssub",{"_index":1914,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["thingsub",{"_index":1690,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["think",{"_index":1238,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["this.activatedroute.parent",{"_index":4481,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.activatedroute.queryparams.subscribe",{"_index":3492,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.activatedroute.snapshot.parammap.get('id",{"_index":2716,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.activatedroute.snapshot.parammap.get('issueid",{"_index":2717,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.activeitemcontent",{"_index":5495,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["this.activepredicates",{"_index":2877,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.activepredicates.slice(0",{"_index":2860,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.activepredicates.splice(index",{"_index":2867,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.activepredicates[index",{"_index":2863,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.addableusers",{"_index":4935,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.addableusers.foreach(addableuser",{"_index":4938,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.addcoalesceitems(coalescelist",{"_index":908,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.addconsumedinterfacemutation.mutate({input",{"_index":2967,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["this.addinterfacetocomponent(event.detail.sourcenode.id",{"_index":4416,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.addissuefoldernodes(node",{"_index":4630,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.addissuefolders(node",{"_index":4581,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.addissuegroupcontainer(node",{"_index":4629,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.addissuetolocationmutation.mutate({input",{"_index":3655,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.additions.add(encodenodeid(node",{"_index":4118,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.additions.add(id",{"_index":4110,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.additions.delete(id",{"_index":4107,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.additions.has(id",{"_index":4101,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.additions.size",{"_index":4111,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.addsinglecoalesceitem(timelineitem",{"_index":923,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.addsubscriber(subscriber",{"_index":1839,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.allcomponentslist",{"_index":1507,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.alllabelslist",{"_index":3451,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.apiservice.addconsumedinterface(componentid",{"_index":3201,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["this.apiservice.loadissuegraphdata(appstate.project.node.id",{"_index":3196,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["this.apiservice.removeconsumedinterface(componentid",{"_index":3202,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["this.applychangeset(additions",{"_index":5270,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.authenticationservice.currentuservalue",{"_index":640,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.login(this.validateform.controls.username.value",{"_index":3910,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.body",{"_index":5082,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.body.code",{"_index":1603,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.breakpointobserver.observe(breakpoints.handset",{"_index":2240,"title":{},"body":{"components/FrameComponent.html":{},"interfaces/Positions.html":{},"components/TopToolbarComponent.html":{}}}],["this.bug",{"_index":3058,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.button",{"_index":5083,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.button.element.disabled",{"_index":5103,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.buttonmode",{"_index":5081,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.calculateboundingbox",{"_index":4561,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.calculatesourcehandles(source",{"_index":3148,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["this.calculatetargethandles(target",{"_index":3150,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["this.callback",{"_index":4225,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.callback(false",{"_index":4246,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.callback(true",{"_index":4226,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.cancreatenewissue",{"_index":3455,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.category.setvalue(data.category",{"_index":2729,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.category.setvalue(issuecategory.unclassified",{"_index":1591,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.category.value",{"_index":1604,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueDetailComponent.html":{}}}],["this.changecolour",{"_index":4832,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.changedetector.detectchanges",{"_index":1151,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsPageComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["this.changeissuecategorymutation.mutate({input",{"_index":3654,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.childnodepositions.set(childid",{"_index":3271,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["this.close",{"_index":1157,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.closecomponentactions",{"_index":4337,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.closecomponentactions(false",{"_index":4437,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.closeissuemutation.mutate({input",{"_index":3651,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.codechange.emit(this.code",{"_index":3943,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["this.color",{"_index":1498,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.comment",{"_index":1017,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comment$.subscribelazy",{"_index":1020,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commenteditor.code",{"_index":2655,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.commentid",{"_index":1025,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commentissuemutation.mutate({input",{"_index":3649,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.commentsub",{"_index":1019,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commentsub?.unsubscribe",{"_index":1021,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.component",{"_index":3456,"title":{},"body":{"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["this.component$.id",{"_index":3514,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.component$.subscribe",{"_index":3459,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.component.node.description",{"_index":4232,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.component.node.id",{"_index":4244,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.component.node.ims.imstype",{"_index":4230,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.component.node.name",{"_index":4220,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.componentcontextmenu",{"_index":4467,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentcontextmenu.close",{"_index":4545,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentcontextmenu.data.nodeid",{"_index":4473,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentcontextmenu.height",{"_index":4515,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentcontextmenu.updateposition(math.max(x",{"_index":4470,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentcontextmenu.width",{"_index":4513,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentcontextmenunodeid",{"_index":4491,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentcontextmenuservice.open",{"_index":4494,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentinterface",{"_index":3461,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.componentinterface$.dataaspromise().then(data",{"_index":3464,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.componentinterface$.id",{"_index":3515,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.componentinterface$.subscribe",{"_index":3463,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.componentinterfaceprovider",{"_index":3465,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.componentinterfacesub",{"_index":3462,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.componentinterfacesub?.unsubscribe",{"_index":3490,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.componentlist",{"_index":1489,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.componentlist.push(item",{"_index":1519,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.componentlist.splice(this.componentlist.indexof(item",{"_index":1521,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.componentstoreservice.getfullcomponent(rootid).subscribe(component",{"_index":4531,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentsub",{"_index":3458,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.componentsub?.unsubscribe",{"_index":3489,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.confirmvalidator",{"_index":5177,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.connectconsumingcomponents(interfacenode",{"_index":4587,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.connectedto.add(other",{"_index":3754,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.connectedto.has(othernode",{"_index":3781,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.connecttoofferingcomponent(interfacenode",{"_index":4586,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.contextmenutypefornodetype(node",{"_index":4484,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.createcomponentmutation.mutate({input",{"_index":1364,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["this.createinterfacemutation.mutate({input",{"_index":2602,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["this.createissue.mutate({input",{"_index":3646,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.createitem",{"_index":5272,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.createnode(id",{"_index":2026,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.createproject.mutate({input",{"_index":5005,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["this.current",{"_index":1879,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.current.keys",{"_index":1974,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.current.keys().next()?.value",{"_index":1969,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.current.values",{"_index":1958,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.current?.has(encodenodeid(key",{"_index":1979,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.currentdata",{"_index":1819,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.currentqueryparams",{"_index":1823,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.currentuser",{"_index":695,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/IssueContentsComponent.html":{},"interfaces/User.html":{}}}],["this.currentuser$.subscribe",{"_index":2648,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.currentusersub",{"_index":2647,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.currentusersub.unsubscribe",{"_index":2650,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.currentusersubject",{"_index":693,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["this.currentusersubject.asobservable",{"_index":696,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["this.currentusersubject.next(null",{"_index":718,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["this.currentusersubject.next(user",{"_index":714,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["this.currentusersubject.value",{"_index":697,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["this.currentvisiblearea",{"_index":4465,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.cursor",{"_index":1983,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.data",{"_index":5065,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.data.applychangeset([...this.additions].map(decodenodeid",{"_index":4114,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.data.components",{"_index":1594,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.data.confirmbuttontext",{"_index":5206,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["this.data.createitem().then(node",{"_index":4117,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.data.editexisting",{"_index":1488,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.data.editexisting.id",{"_index":1528,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.data.graph.reload",{"_index":1156,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.data.issueid",{"_index":1506,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.data.listall",{"_index":4079,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.data.listset].map(id",{"_index":4075,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.data.locations",{"_index":1597,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.data.makefilter(this.searchquery",{"_index":4093,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.data.nodeid",{"_index":1172,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["this.data.offeredbyid",{"_index":1560,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{}}}],["this.data.overlayref.dispose",{"_index":1161,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.data.overlayref.getconfig().positionstrategy.apply",{"_index":1160,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.data.position.offsetx",{"_index":1158,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.data.position.offsety",{"_index":1159,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.data.projectid",{"_index":1426,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.data.scorekeys",{"_index":4081,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.data.verificationname",{"_index":2135,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["this.dataservice",{"_index":4082,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.dataservice.getlist",{"_index":884,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueContentsComponent.html":{}}}],["this.dataservice.getlist(decodelistid(source",{"_index":4021,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.dataservice.getlist(this.data.listset",{"_index":4077,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.dataservice.getlist(this.listid",{"_index":3471,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.dataservice.getlist(this.listset",{"_index":5255,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.dataservice.getlist(this.thingslistid",{"_index":1916,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.dataservice.getnode",{"_index":3816,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["this.dataservice.getnode(current_user_node",{"_index":2646,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.dataservice.getnode(issuenodeid",{"_index":2720,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.dataservice.getnode(node",{"_index":4801,"title":{},"body":{"components/ProjectIssueListComponent.html":{}}}],["this.dataservice.getnode(this.commentid",{"_index":1018,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.dataservice.getnode(this.data.editexisting",{"_index":1492,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.dataservice.getnode(this.listid.node",{"_index":3457,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.dataservice.getnode(this.node",{"_index":798,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["this.dataservice.getnode(this.thingid",{"_index":1692,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.dataservice.getnode({type",{"_index":4970,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["this.dataservice.mutations.addissuecomment",{"_index":2654,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.dataservice.mutations.addlabeltocomponent(math.random().tostring",{"_index":1524,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.dataservice.mutations.changeissuecategory",{"_index":2735,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.dataservice.mutations.closeissue(math.random().tostring",{"_index":2651,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.dataservice.mutations.createissue(issuedata).then(async",{"_index":1611,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.dataservice.mutations.createlabel",{"_index":1530,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.dataservice.mutations.deleteissuecomment",{"_index":1042,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.dataservice.mutations.removelabelfromcomponent(math.random().tostring",{"_index":1525,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.dataservice.mutations.renameissuetitle",{"_index":2733,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.dataservice.mutations.reopenissue(math.random().tostring",{"_index":2652,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.dataservice.mutations.updateissuecomment",{"_index":1023,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.dataservice.mutations.updatelabel",{"_index":1526,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.datasource",{"_index":3474,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.datasource.filter",{"_index":3485,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.datasource.paginator",{"_index":3483,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.datasource.sort",{"_index":3479,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.defaultmenutitle",{"_index":5360,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.deletecomponentmutation.mutate({input",{"_index":1363,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["this.deleteinterfacemutation.mutate({input",{"_index":2607,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["this.deleteissuecommentmutation.mutate({input",{"_index":3650,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.deleteitem.emit(item",{"_index":5276,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.deleteproject.mutate({input",{"_index":5006,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["this.deletequery.listento(this.componentstoreservice.deletecomponent(this.nodeid",{"_index":4224,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.deletequery.listento(this.componentstoreservice.getcomponentinterfaces(this.nodeid",{"_index":4204,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.deletequery.listento(this.interfacestoreservice.delete(this.nodeid",{"_index":4228,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.deletequery.listento(this.interfacestoreservice.getconsumingcomponents(this.nodeid",{"_index":4215,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.deletions.add(id",{"_index":4108,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.deletions.delete(id",{"_index":4109,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.deletions.has(id",{"_index":4102,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.deletions.size",{"_index":4112,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.deletions].map(decodenodeid)).then",{"_index":4115,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.description",{"_index":4972,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["this.destroy",{"_index":3084,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.destroy$).pipe",{"_index":3080,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.destroy$.next",{"_index":3085,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["this.dialog.close",{"_index":1527,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.dialog.close(created",{"_index":1532,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.dialog.close(null",{"_index":1504,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.dialog.open(accesstokendialogcomponent",{"_index":5334,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["this.dialog.open(addprojectmemberdialogcomponent",{"_index":4933,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.dialog.open(createcomponentdialogcomponent",{"_index":4771,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.dialog.open(createinterfacedialogcomponent",{"_index":4423,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.dialog.open(createissuedialogcomponent",{"_index":3513,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.dialog.open(createprojectdialogcomponent",{"_index":4830,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.dialog.open(profilesettingsdialogcomponent",{"_index":5333,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["this.dialog.open(removedialogcomponent",{"_index":1030,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["this.dialog.open(removeprojectmembercomponentcomponent",{"_index":4942,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.dialog.open(settingsdialogcomponent",{"_index":71,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["this.dialogref.close",{"_index":70,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["this.dialogref.close(data",{"_index":263,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["this.dialogref.close(data.createcomponentinterface.componentinterface.id",{"_index":1562,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{}}}],["this.dialogref.close(false",{"_index":2142,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["this.dialogref.close(null",{"_index":4113,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.dialogref.close(true",{"_index":1627,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["this.dialogref.close({createdprojectid",{"_index":1648,"title":{},"body":{"components/CreateProjectDialogComponent.html":{}}}],["this.dialogref.disableclose",{"_index":1592,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.dialogservice.open>(seteditordialogcomponent",{"_index":5277,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl('../assets/icons/svg",{"_index":306,"title":{},"body":{"components/AppComponent.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl(asseturl",{"_index":328,"title":{},"body":{"components/AppComponent.html":{}}}],["this.drawfolderrelations(node",{"_index":4582,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.drawgraph",{"_index":4592,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.editbody",{"_index":1027,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.edititem.emit(item",{"_index":5274,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.editmode",{"_index":4181,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/TextDisplayComponent.html":{}}}],["this.edittext",{"_index":5418,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["this.emiterrortoallsubscribers(error",{"_index":1868,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.emitupdatetoallsubscribers",{"_index":1876,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.emptyresultslabel",{"_index":5283,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.emptysuggestionslabel",{"_index":5282,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.errorconfig",{"_index":5578,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["this.extractissueid(component.node.issues.nodes",{"_index":4533,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.extractissueid(interfacecomponent.node.issuesonlocation.nodes",{"_index":4536,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.fb.group",{"_index":3918,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.featurerequests",{"_index":3059,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.filter",{"_index":3006,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.filter$.next(filterstate",{"_index":3072,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.filterchange.emit(this.buildfilter",{"_index":2881,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.filterselection",{"_index":2174,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.filterselection$.next(selection",{"_index":2187,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.findidealcomponentposition(component.id",{"_index":4570,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.firstpageitemid",{"_index":1987,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.fitgraphinview",{"_index":4719,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.fixed",{"_index":3755,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.formatcategorydescription(element.category",{"_index":3519,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.formatissueopentime",{"_index":2741,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.forward",{"_index":1942,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.frame.nativeelement.style.minheight",{"_index":1149,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.frame.nativeelement.style.minwidth",{"_index":1147,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.fromgqlnolinks(gqlissue",{"_index":2396,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["this.fromgqlnolinks(gqlpartialissue",{"_index":2399,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["this.fullissue",{"_index":3815,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["this.fullissue.subscribe",{"_index":3818,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["this.fullissuelink",{"_index":3813,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["this.fullissuesub",{"_index":3817,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["this.fullissuesub?.unsubscribe",{"_index":3819,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["this.getallfilter(projectid",{"_index":3690,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["this.getallfilter(projectid).pipe",{"_index":3691,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["this.getallquery.fetch({filter}).pipe",{"_index":5009,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["this.getalltimelineitemsquery.fetch({input",{"_index":3659,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.getbasiccomponentquery.fetch({id}).pipe(map(({data",{"_index":1360,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["this.getbasicprojectquery.fetch({id}).pipe(map(({data",{"_index":5007,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["this.getcomponentinterfacesquery.fetch({id}).pipe(map(({data",{"_index":1362,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["this.getconsumingcomponentsquery.fetch({id}).pipe(map(({data",{"_index":2605,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["this.getencodedid(item",{"_index":4100,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.getfullcomponentquery.fetch({id}).pipe(map(({data",{"_index":1361,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["this.getfullissuegraphdataquery.fetch({projectid",{"_index":2956,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["this.getfullissuequery.fetch({id}).pipe",{"_index":3658,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.getfullquery.fetch({id}).pipe(map(({data",{"_index":5008,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["this.getinterfacequery.fetch({id}).pipe",{"_index":2603,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["this.getlabelsgql.fetch({projectid}).pipe",{"_index":3695,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["this.getlabelsquery.fetch({id}).pipe(map(({data",{"_index":1359,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["this.getnode(id",{"_index":2034,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.getqueryparamfilter",{"_index":3486,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.getremainingtypes(index",{"_index":2869,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.getsearchissuegraphdataquery.fetch({projectid",{"_index":2963,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["this.getselectedcategories",{"_index":3045,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.graph",{"_index":4323,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.addedge(edge",{"_index":4678,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.addedge(issuegraphnodes.createconsumptionedge(consumerid",{"_index":4623,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.addedge(issuegraphnodes.createinterfaceprovisionedge(node.offeredbyid",{"_index":4616,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.addnode(issuefoldernode",{"_index":4662,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.addnode(issuegroupcontainernode",{"_index":4647,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.addnode(node",{"_index":4580,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.completerender",{"_index":4588,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.currentviewwindow",{"_index":4498,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.currentzoomtransform.apply([node.x",{"_index":4469,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.currentzoomtransform.k",{"_index":4499,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.edgelist",{"_index":4601,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.getnode(edge.source",{"_index":4410,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.getnode(edge.target",{"_index":4411,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.getnode(id",{"_index":4671,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.getnode(this.componentcontextmenunodeid",{"_index":4468,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.getsvg().style",{"_index":4767,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.groupingmanager",{"_index":4639,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.groupingmanager.addnodetogroup(node.issuegroupcontainer.id",{"_index":4663,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.groupingmanager.clearallgroups",{"_index":4604,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.nodelist",{"_index":4602,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.zoomtobox",{"_index":4516,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.zoomtobox(previousboundingbox",{"_index":4718,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.zoomtobox(rect",{"_index":4723,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphdata",{"_index":4289,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphdata.components.size",{"_index":4691,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphdata.graphlocations.get(node.id).issues",{"_index":4655,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphdata.interfaces.get(interfacenode.id).consumedby",{"_index":4622,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphdata.relatedfolders",{"_index":4559,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphdata.relatedfolders.getvalue([node.id.tostring",{"_index":4673,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphfirstrender",{"_index":4695,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphinitialized",{"_index":4342,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphlink",{"_index":5373,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.graphwrapper.nativeelement",{"_index":4324,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.gs.addconsumedinterface(sourcenode.id.tostring",{"_index":4412,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.gs.graphdataforfilter(this.filter",{"_index":3079,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.gs.removeconsumedinterface(sourcenode.id.tostring",{"_index":4431,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.hasdata",{"_index":1845,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.hasmore",{"_index":4044,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.height",{"_index":1153,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.http.post(environment.loginurl",{"_index":701,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["this.hydrate",{"_index":5258,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.hydrated",{"_index":1867,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.hydrateraw(data.then(value",{"_index":1998,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.id",{"_index":1841,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"classes/Vector.html":{}}}],["this.infoconfig",{"_index":5580,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["this.initgraph",{"_index":4325,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.innermapfn",{"_index":1843,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.innermapfn(result",{"_index":1892,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.innerqueryfn",{"_index":1842,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.inputtitle.nativeelement.value",{"_index":2734,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.insertresult(data",{"_index":1866,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.interactive",{"_index":1733,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.interface",{"_index":4198,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.interface.node.description",{"_index":4235,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.interface.node.id",{"_index":4248,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.interface.node.name",{"_index":4227,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.interfacestore.create(name",{"_index":1559,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{}}}],["this.interfacestoreservice.getinterface(rootid).subscribe(interfacecomponent",{"_index":4535,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.invalidate",{"_index":1984,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.invalidatelists.bind(this",{"_index":2094,"title":{},"body":{"injectables/DataService.html":{}}}],["this.invalidcredentials",{"_index":3897,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.iscomponent",{"_index":3541,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["this.ishandset",{"_index":4329,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.isinset(item",{"_index":4106,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.isloading",{"_index":3909,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.islocalset",{"_index":4073,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.isnextsublazy",{"_index":1840,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.isprojecturl(event.url",{"_index":585,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["this.issue",{"_index":2719,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.issue$.dataaspromise().then(data",{"_index":2728,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.issue$.hasdata",{"_index":2724,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.issue$.id",{"_index":2642,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{}}}],["this.issue$.subscribe",{"_index":2722,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.issue.category",{"_index":3299,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["this.issue.id",{"_index":3322,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["this.issue.isopen",{"_index":3300,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["this.issue.linkedbyissues?.totalcount",{"_index":3302,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["this.issue.linkstoissues?.totalcount",{"_index":3304,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["this.issuedata.assignees.map(node",{"_index":1610,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.issuedata.components.map(node",{"_index":1607,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.issuedata.components.push(componentid",{"_index":1595,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.issuedata.labels.map(node",{"_index":1609,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.issuedata.linkstoissues",{"_index":1615,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.issuedata.locations.map(node",{"_index":1608,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.issuedata.locations.push(componentid",{"_index":1596,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.issueeditable",{"_index":2727,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.issuegraph.drawgraph",{"_index":3062,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.issuegraph.fitgraphinview",{"_index":3063,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.issuegraph.graphdata",{"_index":3081,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.issuegraph.layoutgraph",{"_index":3061,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.issuegraph.reload",{"_index":3076,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.issuegraph.setrelationvisibility(this.showrelations",{"_index":3082,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.issuegraphclasssettersservice.manageclasssetters(graph",{"_index":4348,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.issuegraphdynamictemplateregistryservice.managedynamictemplateregistry(graph",{"_index":4351,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.issuegraphlinkhandlesservice.managelinkhandles(graph",{"_index":4349,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.issuegroupparents",{"_index":4603,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.issuegroupparents.push(node",{"_index":4650,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.issueid",{"_index":886,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/IssueDetailComponent.html":{}}}],["this.issuelistid",{"_index":4184,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/ProjectIssueListComponent.html":{}}}],["this.issueslink",{"_index":5374,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.issuestub.id",{"_index":3814,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["this.issuesub",{"_index":2721,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.issuesub.unsubscribe",{"_index":2723,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.itemops.includes('create",{"_index":5284,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.itemops.includes('delete",{"_index":5288,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.itemops.includes('edit",{"_index":5286,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.itemtemplate",{"_index":5279,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.labels",{"_index":2189,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.labelsearch.filterselection$]).pipe",{"_index":3068,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.labelsinput$.pipe",{"_index":2190,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.labelsloading",{"_index":2191,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.labelstore.getmatchinglabels(this.ss.state.project.node.id",{"_index":2193,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.lastloadtime",{"_index":1857,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.lastpageitemid",{"_index":1989,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.lastqueriedprojectname",{"_index":4825,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.layoutgraph",{"_index":4591,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.lazy",{"_index":800,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["this.linkedissues",{"_index":2641,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.linkedissues$.subscribe",{"_index":2645,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.linkedissuesub",{"_index":2644,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.linkedissuesub.unsubscribe",{"_index":2649,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.linkissue.mutate({input",{"_index":3647,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.list",{"_index":3470,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.list$.count",{"_index":3472,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.list$.current.values",{"_index":3500,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.list$.filter",{"_index":3495,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.list$.hasdata",{"_index":3498,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.listall",{"_index":4078,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listall.setfilter(this.searchquery",{"_index":4094,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listall.unsubscribe",{"_index":4120,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listid.node",{"_index":3452,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.listid.node.type",{"_index":3454,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.lists",{"_index":2107,"title":{},"body":{"injectables/DataService.html":{}}}],["this.lists.get(encodedid).add(list",{"_index":2113,"title":{},"body":{"injectables/DataService.html":{}}}],["this.lists.get(id",{"_index":2099,"title":{},"body":{"injectables/DataService.html":{}}}],["this.lists.has(encodedid",{"_index":2111,"title":{},"body":{"injectables/DataService.html":{}}}],["this.lists.has(id",{"_index":2098,"title":{},"body":{"injectables/DataService.html":{}}}],["this.lists.set(encodedid",{"_index":2112,"title":{},"body":{"injectables/DataService.html":{}}}],["this.listset",{"_index":4076,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listset$.count",{"_index":4089,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listset$.current?.has(id",{"_index":4104,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listset$.filter",{"_index":4092,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listset$.hydrateinitial(this.hydrate",{"_index":5259,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.listset$.interactive",{"_index":4090,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listset$.subscribe",{"_index":5256,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.listset$?.subscribe",{"_index":4085,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listsetsub",{"_index":4084,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listsetsub.unsubscribe",{"_index":5254,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.listsetsub?.unsubscribe",{"_index":4119,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.load",{"_index":1874,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.loaddebounced",{"_index":1826,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.loadifneeded",{"_index":1882,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.loadimpl(prepareddata",{"_index":1872,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.loadimpl(this.innerqueryfn(this.id",{"_index":1869,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.loading",{"_index":1491,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"classes/NodeCache.html":{},"components/ProjectListComponent.html":{}}}],["this.loadlabels",{"_index":2171,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.loadsavedpositions",{"_index":4344,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.loadtimeout",{"_index":1856,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.localset",{"_index":4074,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.localset.includes(id",{"_index":4103,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.location",{"_index":3540,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["this.location.id",{"_index":3543,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["this.makefilter",{"_index":5281,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.managedragbehaviour(graph",{"_index":4350,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.manageeventlisteners(graph",{"_index":4352,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.matchvalidator",{"_index":2140,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["this.maticonregistry.addsvgicon(iconname",{"_index":327,"title":{},"body":{"components/AppComponent.html":{}}}],["this.maticonregistry.addsvgicon(key",{"_index":305,"title":{},"body":{"components/AppComponent.html":{}}}],["this.memberslink",{"_index":5375,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.menuclick.emit",{"_index":5551,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["this.menutitle",{"_index":5369,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.minimap.nativeelement",{"_index":4347,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.mockusers",{"_index":4944,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.mockusers.push(addableuser",{"_index":4940,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.mockusers.push(u",{"_index":4928,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.mode",{"_index":5336,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["this.modeicon",{"_index":5339,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["this.mutations",{"_index":2092,"title":{},"body":{"injectables/DataService.html":{}}}],["this.node",{"_index":797,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["this.node$.subscribe",{"_index":802,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["this.node$.subscribelazy",{"_index":801,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["this.node().node.name",{"_index":4201,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.nodeclickcontextmenuhastype(node",{"_index":4485,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.nodeclickissuefolder(node",{"_index":4486,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.nodeclickmanyissues(rootnode",{"_index":4528,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.nodeclickoneissue(rootid",{"_index":4526,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.nodedetails.getnodename",{"_index":1171,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["this.nodedetailsready",{"_index":1150,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.nodeid",{"_index":4185,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{}}}],["this.nodequery",{"_index":4199,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.nodequery.listento(this.componentstoreservice.getbasiccomponent(this.nodeid",{"_index":4189,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.nodequery.listento(this.interfacestoreservice.getinterface(this.nodeid",{"_index":4195,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.nodequery.ready",{"_index":4200,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.nodequery.seterror",{"_index":4193,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.nodes",{"_index":2090,"title":{},"body":{"injectables/DataService.html":{}}}],["this.nodes.get(encodedid",{"_index":2027,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.nodes.getnode(id",{"_index":2095,"title":{},"body":{"injectables/DataService.html":{}}}],["this.nodes.has(encodedid",{"_index":2025,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.nodes.set(encodedid",{"_index":2022,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.nodesub",{"_index":799,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["this.nodesub.unsubscribe",{"_index":804,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["this.nodetype",{"_index":4182,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{}}}],["this.notify.notifyerror('could",{"_index":1502,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.notify.notifyerror('failed",{"_index":1045,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RegisterComponent.html":{}}}],["this.notify.notifyerror(this.errormessage",{"_index":5099,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.notify.notifyinfo('successfully",{"_index":1043,"title":{},"body":{"components/CommentComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["this.notifyservice.notifyerror('failed",{"_index":4116,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.oncreateedge",{"_index":4367,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.ondialogapplychangeset",{"_index":5280,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.ondialogcreateitem",{"_index":5285,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.ondialogdeleteitem",{"_index":5289,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.ondialogedititem",{"_index":5287,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.ondraggededgetargetchanged",{"_index":4370,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.onedgeadd",{"_index":4372,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.onedgedrop",{"_index":4377,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.onedgeremove",{"_index":4374,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.oneditfinished",{"_index":5419,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["this.oneditfinished(saved",{"_index":5420,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["this.onminimaprender(minimap",{"_index":4460,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.onnodeclick",{"_index":4434,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.overlay.create",{"_index":1119,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.overlay.position().flexibleconnectedto(parent",{"_index":1108,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.overviewlink",{"_index":5371,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.padding",{"_index":3749,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.pageinfo",{"_index":1929,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.pageinfo.hasnextpage",{"_index":1945,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.pageinfo.haspreviouspage",{"_index":1943,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.paginator",{"_index":3484,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.params",{"_index":1951,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.pcount",{"_index":1953,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.pcursor",{"_index":1952,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.pfilter",{"_index":1955,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.pforward",{"_index":1954,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.pluralize(days",{"_index":5475,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["this.pluralize(hours",{"_index":5477,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["this.pluralize(minutes",{"_index":5479,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["this.pluralize(months",{"_index":5471,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["this.pnodes",{"_index":1948,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.pnodes.insertnodes(value.nodes",{"_index":2001,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.position",{"_index":3752,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.position.x",{"_index":3770,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.position.y",{"_index":3771,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.predicatevalues[id",{"_index":2880,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.predicatevalues[id].push(item",{"_index":2873,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.predicatevalues[id].splice(this.predicatevalues[id].indexof(item",{"_index":2874,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.predicatevalues[type",{"_index":2864,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.prepareissuearray",{"_index":3488,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.preparetimelineitems(value",{"_index":894,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.previouslyhadpagecontents",{"_index":1944,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.project",{"_index":4800,"title":{},"body":{"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["this.project$.subscribe(project",{"_index":4925,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.project.current.name",{"_index":4974,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["this.projectid",{"_index":2715,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["this.projectname",{"_index":4826,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.projects",{"_index":4828,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.projectstoragekey",{"_index":4326,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.projectstore.delete(this.projectid).subscribe",{"_index":4975,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["this.projectstore.getall(this.projectname).subscribe(projects",{"_index":4827,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.projectstore.getfullproject(this.projectid",{"_index":4924,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.ps.create(name",{"_index":1647,"title":{},"body":{"components/CreateProjectDialogComponent.html":{}}}],["this.psetparamsnoupdate",{"_index":1825,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.ptotalcount",{"_index":1931,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.publicclientname",{"_index":5173,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.query",{"_index":4032,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.query.listento(this.list",{"_index":3473,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.query.listento(this.someobservable",{"_index":5066,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.query.listento(this.somethingthattakesawhile",{"_index":5071,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.query.listento(this.timelineitems",{"_index":893,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.query.querystate",{"_index":5089,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.querycomponent.listento(this.componentstore.createcomponent(input",{"_index":1428,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["this.querycomponent.listento(this.project",{"_index":4971,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["this.queryparamfilter",{"_index":3494,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.querystate",{"_index":5084,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.randomizecolor",{"_index":1505,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.redrawbycloseofcomponentdetails",{"_index":4474,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.registerusermutation.client",{"_index":5172,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerusermutation.mutate({input}).subscribe(({data",{"_index":5194,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.relativepositionchanged(group",{"_index":3283,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["this.reload",{"_index":4451,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.reload$.next(null",{"_index":4414,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.reloadlistset",{"_index":5257,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.reloadonmouseup",{"_index":4438,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.reloadprojects",{"_index":4824,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.removeconsumedinterfacemutation.mutate({input",{"_index":2968,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["this.removeissuefromlocationmutation.mutate({input",{"_index":3656,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.renameissuemutation.mutate({input",{"_index":3653,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.reopenissuemutation.mutate({input",{"_index":3652,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.requesttimelineitems",{"_index":874,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.resetgraph",{"_index":4565,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.resetvalues",{"_index":4202,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.resize",{"_index":1143,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.results",{"_index":4054,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.returnurl",{"_index":3919,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.route.snapshot.parammap.get('componentid",{"_index":4262,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["this.route.snapshot.parammap.get('id",{"_index":3056,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["this.route.snapshot.parammap.get('interfaceid",{"_index":4263,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["this.route.snapshot.queryparams.returnurl",{"_index":3920,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate",{"_index":4534,"title":{},"body":{"interfaces/Positions.html":{},"components/ProjectOverviewComponent.html":{},"components/SideNavComponent.html":{}}}],["this.router.navigate(['./component",{"_index":4479,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.router.navigate(['./interface",{"_index":4482,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.router.navigate(['/login",{"_index":642,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigate(['/projects",{"_index":3496,"title":{},"body":{"components/IssueListComponent.html":{},"components/NodeDetailsPageComponent.html":{}}}],["this.router.navigate(['login",{"_index":717,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["this.router.navigate(['projects",{"_index":3542,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["this.router.navigate([this.returnurl",{"_index":3914,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.parseurl(url",{"_index":603,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["this.router.serializeurl(this.router.createurltree",{"_index":3321,"title":{},"body":{"components/IssueItemComponent.html":{},"components/LinkedIssueItemComponent.html":{}}}],["this.savechanges",{"_index":2732,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.savedpositions",{"_index":4343,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savedpositions.issuegroups[issuegroupcontainernode.id",{"_index":4642,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savedpositions.issuegroups[node.id",{"_index":4444,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savedpositions.nodes[id",{"_index":4607,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savedpositions.nodes[interfaceid",{"_index":4425,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savedpositions.nodes[intrface.id",{"_index":4575,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savedpositions.nodes[layoutnode.id",{"_index":4758,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savedpositions.nodes[node.id",{"_index":4447,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savefailed",{"_index":1563,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.savepositionssubject",{"_index":4358,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savepositionssubject.next",{"_index":4428,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.saveusertostorage(user",{"_index":713,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["this.savingbody",{"_index":1022,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.savingchanges",{"_index":2731,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.savingcomment",{"_index":2653,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.score(a",{"_index":4051,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.score(b",{"_index":4052,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.scorekeys",{"_index":4036,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.searchissuesdataarray",{"_index":3499,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.searchquery.trim",{"_index":2875,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.selectedcategories",{"_index":3035,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.selectedcategories$.next",{"_index":3057,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.selectedlabels.filter(item",{"_index":2182,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.selectedlabels.filter(label",{"_index":2185,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.selectedusers",{"_index":262,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["this.seterror",{"_index":5098,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.setgraphtolastview",{"_index":4589,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.setparams",{"_index":1949,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.showdeleted",{"_index":5494,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["this.showdeletedialog(affected",{"_index":4214,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.showdrawer",{"_index":2217,"title":{},"body":{"components/FrameComponent.html":{}}}],["this.showplaceholder",{"_index":5415,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["this.sort",{"_index":3480,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.sort.sort(({id",{"_index":3477,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.sourcenodelist",{"_index":4011,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcenodelist.subscribe",{"_index":4014,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcenodelist?.current?.keys",{"_index":4016,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcenodelist?.loading",{"_index":4055,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcenodelistsub",{"_index":4013,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcenodelistsub?.unsubscribe",{"_index":4057,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sources.delete(source",{"_index":4031,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sources.has(source",{"_index":4020,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sources.keys",{"_index":4027,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sources.set(source",{"_index":4023,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sources.values",{"_index":4033,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcesubs.delete(source",{"_index":4030,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcesubs.foreach(sub",{"_index":4058,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcesubs.get(source).unsubscribe",{"_index":4029,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcesubs.set(source",{"_index":4024,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.spec.staticsources",{"_index":4018,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.state",{"_index":3188,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["this.state$.next(this.state",{"_index":590,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["this.state.project",{"_index":589,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["this.statelock",{"_index":1864,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.staticsourcenodelist",{"_index":4009,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.stopcoalescing(coalescingtype",{"_index":918,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.subscribe(...args",{"_index":1884,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.subscribe(data",{"_index":1850,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.subscribers",{"_index":1886,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.subscribers.add(subscriber",{"_index":1878,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.subscribers.delete(subscriber",{"_index":1883,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.subscribers.size",{"_index":1894,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.subscribetosubject",{"_index":4346,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.subscription",{"_index":5092,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.subscription?.unsubscribe",{"_index":5086,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.syncstatewithurl(router",{"_index":560,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["this.text",{"_index":5417,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["this.textstoregex(texts",{"_index":2962,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["this.thing",{"_index":1691,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.thing$.subscribe",{"_index":1695,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.things",{"_index":1915,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.things$.subscribe",{"_index":1918,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.thingssub",{"_index":1917,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.thingssub.unsubscribe",{"_index":1919,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.thingsub",{"_index":1694,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.thingsub.unsubscribe",{"_index":1698,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.timeformatter.formattimedifference(comment.createdat",{"_index":1047,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.timeformatter.formattimedifference(comment.lasteditedat",{"_index":1049,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.timeformatter.formattimedifference(this.issue$.current.createdat",{"_index":2725,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.timeformatter.formattimedifference(timelineitem.time",{"_index":5509,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["this.timeformatter.pluralize(issue.issuecomments?.totalcount",{"_index":2743,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.timelineitem.iscoalesced",{"_index":5497,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["this.timelineitemcontent.template",{"_index":5500,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["this.timelineitemdeletedcontent.template",{"_index":5496,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["this.timelineitems",{"_index":883,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.timelineitems$.count",{"_index":891,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.timelineitemscontent",{"_index":5498,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["this.timelineitemscontent.template",{"_index":5499,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["this.title.value",{"_index":1602,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.titletext?.nativeelement.textcontent",{"_index":5278,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.toastr.error(message",{"_index":5577,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["this.toastr.info(message",{"_index":5579,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["this.unclassified",{"_index":3060,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.unknownerror",{"_index":3916,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.unlinkissuemutation.mutate({input",{"_index":3648,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.update",{"_index":2866,"title":{},"body":{"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.updatebutton",{"_index":5091,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.updatecommentmutation.mutate({input",{"_index":3657,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.updatecomponent",{"_index":4234,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.updatecomponentmutation.mutate({input",{"_index":1365,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["this.updateinterface",{"_index":4236,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.updateinterfacemutation.mutate({input",{"_index":2606,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["this.updatepasswordfieldsshown",{"_index":4783,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["this.updatequery.listento(this.componentstoreservice.updatecomponent(input",{"_index":4245,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.updatequery.listento(this.interfacestoreservice.update(mutationinputdata",{"_index":4249,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.updateresults",{"_index":4026,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.updateselecteditems",{"_index":1593,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.useravailablyquery.client",{"_index":5174,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.useravailablyquery.fetch({username",{"_index":5179,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.username(firstitem",{"_index":941,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.username(timelineitem",{"_index":949,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.usernameasyncvalidator",{"_index":5175,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.validateform",{"_index":3917,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.validateform.controls.confirm.updatevalueandvalidity",{"_index":5187,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.validateform.controls.password.reset",{"_index":3913,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.validateform.controls.password.value",{"_index":3911,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.validateform.controls[controlkey].markasdirty",{"_index":3907,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.validateform.controls[controlkey].updatevalueandvalidity",{"_index":3908,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.validateform.controls[key].markasdirty",{"_index":5189,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.validateform.controls[key].markaspristine",{"_index":5196,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.validateform.controls[key].updatevalueandvalidity",{"_index":5190,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.validateform.reset",{"_index":5195,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.validationdescription.setvalue(this.component.node.description",{"_index":4241,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationdescription.setvalue(this.interface.node.description",{"_index":4243,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationdescription.value",{"_index":4233,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationfilter.setvalue(this.getqueryparamfilter",{"_index":3487,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.validationims.setvalue",{"_index":4187,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationims.setvalue('http://example.ims.com",{"_index":4238,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationims.setvalue('this",{"_index":4191,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationlabeldescription.setvalue(data.description",{"_index":1500,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.validationlabelname.setvalue(data.name",{"_index":1497,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.validationname.setvalue(this.component.node.name",{"_index":4237,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationname.setvalue(this.interface.node.name",{"_index":4242,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationname.value",{"_index":4229,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationprovider.setvalue(this.component.node.ims.imstype",{"_index":4239,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationprovider.value",{"_index":4231,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationrole.setvalue('administrator",{"_index":258,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{}}}],["this.validationurl.setvalue",{"_index":4188,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationurl.setvalue('http://example.repo.com",{"_index":4240,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationurl.setvalue(component.node.repositoryurl",{"_index":4192,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.value",{"_index":5414,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["this.verificationnameinput.markastouched",{"_index":2141,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["this.width",{"_index":1152,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.x",{"_index":3743,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.y",{"_index":3744,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.zoomonredraw",{"_index":4450,"title":{},"body":{"interfaces/Positions.html":{}}}],["through",{"_index":652,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/IssueListComponent.html":{},"classes/MultiSourceList.html":{},"components/ProjectIssueListComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/User.html":{}}}],["throw",{"_index":1899,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/SetEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":819,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"classes/NodeCache.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["timeformatter",{"_index":830,"title":{"classes/TimeFormatter.html":{}},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/IssueDetailComponent.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"coverage.html":{}}}],["timeline",{"_index":201,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["timeline'},{'name",{"_index":199,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["timeline.component.html",{"_index":842,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["timeline.component.scss",{"_index":843,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["timelinecoalesceditemsdirective",{"_index":215,"title":{"directives/TimelineCoalescedItemsDirective.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timelinecomponent",{"_index":198,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timelinecomponent.coalescable_events.get(itemtype",{"_index":913,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["timelineitem",{"_index":909,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["timelineitem.createdat",{"_index":950,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["timelineitem.createdby.id",{"_index":960,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["timelineitemcomponent",{"_index":200,"title":{"components/TimelineItemComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timelineitemcontent",{"_index":5488,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["timelineitemdeletedcontent",{"_index":5492,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["timelineitemdeleteddirective",{"_index":217,"title":{"directives/TimelineItemDeletedDirective.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timelineitems",{"_index":864,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["timelineitemscontent",{"_index":5490,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["timelinesingleitemdirective",{"_index":219,"title":{"directives/TimelineSingleItemDirective.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timeout",{"_index":2472,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["tipping",{"_index":3370,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["title",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentNode.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/InterfaceNode.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Position.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"miscellaneous/variables.html":{}}}],["title.value.length",{"_index":1633,"title":{},"body":{"components/CreateIssueDialogComponent.html":{}}}],["titletext",{"_index":5251,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["toast",{"_index":2470,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["toasterconfig",{"_index":484,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["toastr",{"_index":425,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"injectables/UserNotifyService.html":{},"dependencies.html":{}}}],["toastr.error(message",{"_index":2492,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["toastr.error(networkerror.message",{"_index":2498,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["toastrmodule",{"_index":423,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{}}}],["toastrmodule.forroot(toasterconfig",{"_index":489,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrservice",{"_index":481,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"injectables/UserNotifyService.html":{}}}],["toasts",{"_index":480,"title":{},"body":{"modules/AppModule.html":{}}}],["todo",{"_index":72,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"classes/CCIMSValidators.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/QueryListParams.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"interfaces/userMock.html":{}}}],["toggle",{"_index":367,"title":{},"body":{"modules/AppModule.html":{},"components/CreateIssueDialogComponent.html":{},"modules/GraphsModule.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{}}}],["toggleinset",{"_index":5294,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["toggleinset(item",{"_index":4105,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["togglemenu",{"_index":2230,"title":{},"body":{"components/FrameComponent.html":{}}}],["toggles",{"_index":2319,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{}}}],["token",{"_index":11,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"coverage.html":{}}}],["tokenpayload",{"_index":709,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["tokenpayload.name",{"_index":711,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["tokenpayload.sub",{"_index":712,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["tokens",{"_index":75,"title":{},"body":{"components/AccessTokenDialogComponent.html":{}}}],["toolbar",{"_index":2266,"title":{},"body":{"components/FrameComponent.html":{},"components/TopToolbarComponent.html":{}}}],["toolbar'},{'name",{"_index":204,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["toolbar.component",{"_index":377,"title":{},"body":{"modules/AppModule.html":{}}}],["toolbar.component.html",{"_index":5539,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.scss",{"_index":5538,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts",{"_index":5535,"title":{},"body":{"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["toolbar.component.ts:22",{"_index":5545,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts:25",{"_index":5546,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts:27",{"_index":5550,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts:31",{"_index":5544,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts:33",{"_index":5549,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts:35",{"_index":5547,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts:39",{"_index":5548,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar/top",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["top",{"_index":203,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["topbar",{"_index":2213,"title":{},"body":{"components/FrameComponent.html":{}}}],["topdistance",{"_index":3251,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["toptoolbarcomponent",{"_index":202,"title":{"components/TopToolbarComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["total",{"_index":1956,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"classes/Vector.html":{}}}],["totalcount",{"_index":1957,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["towards",{"_index":3778,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["towardsother",{"_index":3767,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["towardsother.iszero",{"_index":3769,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["towardsother.length",{"_index":3776,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["towardsother.scale(1",{"_index":3777,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["track",{"_index":568,"title":{},"body":{"interfaces/AppState.html":{},"classes/LayoutNode.html":{},"injectables/StateService.html":{},"classes/Vector.html":{}}}],["trackbyfn",{"_index":3666,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["trackbyfn(item",{"_index":2172,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["transfered",{"_index":4981,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["transform",{"_index":1641,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/Positions.html":{}}}],["transition",{"_index":5968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transparent",{"_index":3677,"title":{},"body":{"components/LabelSearchComponent.html":{},"components/TimelineItemComponent.html":{}}}],["travel",{"_index":3736,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["treated",{"_index":5241,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["tree.root.children[primary_outlet",{"_index":605,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["tries",{"_index":3881,"title":{},"body":{"components/LoginComponent.html":{}}}],["trigger",{"_index":1822,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["trigger('routeanimations",{"_index":5967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["triggered",{"_index":4378,"title":{},"body":{"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"interfaces/userMock.html":{}}}],["triggering",{"_index":1795,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["triggers",{"_index":4768,"title":{},"body":{"interfaces/Positions.html":{}}}],["true",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LoginComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"injectables/UserNotifyService.html":{},"classes/Vector.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":3892,"title":{},"body":{"components/LoginComponent.html":{}}}],["ts",{"_index":1844,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["tsconfig.doc.json",{"_index":5814,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":5787,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":794,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["turned",{"_index":3027,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["twice",{"_index":1860,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["two",{"_index":563,"title":{},"body":{"interfaces/AppState.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"injectables/StateService.html":{},"classes/Vector.html":{}}}],["type",{"_index":42,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":5848,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":2129,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"components/RemoveDialogComponent.html":{},"interfaces/TextFragment.html":{}}}],["typename",{"_index":3837,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["typeof",{"_index":2096,"title":{},"body":{"injectables/DataService.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/UsersService.html":{}}}],["typeparam",{"_index":1808,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["types",{"_index":1807,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":2295,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"dependencies.html":{},"index.html":{}}}],["u",{"_index":2204,"title":{},"body":{"interfaces/FilterState.html":{}}}],["ul",{"_index":5530,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["uncategorized",{"_index":313,"title":{},"body":{"components/AppComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{}}}],["unclassified",{"_index":1590,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"miscellaneous/variables.html":{}}}],["unclassifiedcount",{"_index":2353,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["undefined",{"_index":948,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/IssueGraphApiService.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":3716,"title":{},"body":{"classes/LayoutNode.html":{}}}],["undone",{"_index":1037,"title":{},"body":{"components/CommentComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["undone!'].concat(affected",{"_index":4221,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["uneditable",{"_index":2736,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["union",{"_index":2305,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{}}}],["unique",{"_index":2814,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["uniquely",{"_index":3829,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["unknown",{"_index":1889,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["unknownerror",{"_index":3886,"title":{},"body":{"components/LoginComponent.html":{}}}],["unlabelledevent",{"_index":848,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["unless",{"_index":1736,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["unlink",{"_index":3569,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["unlink(unlinkissueinput",{"_index":3640,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["unlinkevent",{"_index":859,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["unlinkissuegql",{"_index":3582,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["unlinkissueinput",{"_index":3641,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["unlinkissuemutation",{"_index":3581,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["unnecessary",{"_index":2071,"title":{},"body":{"injectables/DataService.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["unsubscribe",{"_index":1697,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["unsubscribes",{"_index":3995,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["until",{"_index":1757,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["unused",{"_index":634,"title":{},"body":{"guards/AuthGuard.html":{}}}],["up",{"_index":562,"title":{},"body":{"interfaces/AppState.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{},"injectables/StateService.html":{}}}],["update",{"_index":1068,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"interfaces/QueryListParams.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"index.html":{}}}],["update(input",{"_index":2598,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["updatebutton",{"_index":5102,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["updatecomment",{"_index":3570,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["updatecomment(updatecommentinput",{"_index":3642,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["updatecommentgql",{"_index":3596,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["updatecommentinput",{"_index":3643,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["updatecommentmutation",{"_index":3595,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["updatecomponent",{"_index":1315,"title":{},"body":{"injectables/ComponentStoreService.html":{},"components/NodeDetailsComponent.html":{}}}],["updatecomponent(input",{"_index":1353,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["updatecomponentgql",{"_index":1326,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["updatecomponentinput",{"_index":1354,"title":{},"body":{"injectables/ComponentStoreService.html":{},"components/NodeDetailsComponent.html":{}}}],["updatecomponentinterfacegql",{"_index":2584,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["updatecomponentinterfaceinput",{"_index":2599,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"components/NodeDetailsComponent.html":{}}}],["updatecomponentmutation",{"_index":1311,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["updated",{"_index":4146,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["updateinterface",{"_index":4143,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["updateinterfacemutation",{"_index":2583,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["updatepassword",{"_index":4778,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["updatepasswordfieldsshown",{"_index":4775,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["updateposition",{"_index":1057,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["updateposition(x",{"_index":1064,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["updatequery",{"_index":4180,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["updateresults",{"_index":3969,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["updates",{"_index":1579,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["updateselectedcategories",{"_index":3019,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["updateselecteditems",{"_index":1571,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["updatetemplate",{"_index":3124,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["updating",{"_index":1307,"title":{},"body":{"injectables/ComponentStoreService.html":{},"interfaces/Positions.html":{}}}],["upon",{"_index":1783,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/SetEditorComponent.html":{}}}],["upper",{"_index":4635,"title":{},"body":{"interfaces/Positions.html":{}}}],["url",{"_index":552,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"classes/CCIMSValidators.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/FrameComponent.html":{},"components/IssueItemComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectIssueListComponent.html":{},"injectables/StateService.html":{},"miscellaneous/variables.html":{}}}],["urls",{"_index":5826,"title":{},"body":{"index.html":{}}}],["urlvalidator",{"_index":732,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["usable",{"_index":724,"title":{},"body":{"classes/CCIMSValidators.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["usage",{"_index":3942,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["use",{"_index":877,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"index.html":{}}}],["used",{"_index":637,"title":{},"body":{"guards/AuthGuard.html":{},"classes/CCIMSValidators.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"modules/GraphQLModule.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"directives/ItemDirective.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"injectables/ProjectStoreService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":2517,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["useful",{"_index":5100,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["user",{"_index":206,"title":{"interfaces/User.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData-1.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["user.displayname",{"_index":264,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/UserItemComponent.html":{}}}],["user.username",{"_index":5558,"title":{},"body":{"components/UserItemComponent.html":{}}}],["user1",{"_index":4901,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user1.de",{"_index":4902,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user2",{"_index":4903,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user2.de",{"_index":4904,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user3",{"_index":4905,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user3.de",{"_index":4906,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user4",{"_index":4907,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user4.de",{"_index":4908,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user5",{"_index":4909,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user5.de",{"_index":4910,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user6",{"_index":4911,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user6.de",{"_index":4912,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["useravailablyquery",{"_index":5144,"title":{},"body":{"components/RegisterComponent.html":{}}}],["usercaneditissue",{"_index":2681,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["userfilter",{"_index":5592,"title":{},"body":{"injectables/UsersService.html":{}}}],["useritemcomponent",{"_index":205,"title":{"components/UserItemComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["usermock",{"_index":4955,"title":{"interfaces/userMock.html":{}},"body":{"components/ProjectMembersComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["username",{"_index":677,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/IssueFilterComponent.html":{},"components/LoginComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UsersService.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["username(item",{"_index":930,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["usernameasyncvalidator",{"_index":5137,"title":{},"body":{"components/RegisterComponent.html":{}}}],["usernotifyservice",{"_index":988,"title":{"injectables/UserNotifyService.html":{}},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"injectables/UserNotifyService.html":{},"coverage.html":{}}}],["users",{"_index":2851,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/QueriesService.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"index.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["users.service",{"_index":5040,"title":{},"body":{"injectables/QueriesService.html":{}}}],["usersservice",{"_index":5031,"title":{"injectables/UsersService.html":{}},"body":{"injectables/QueriesService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["userstoadd",{"_index":261,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{}}}],["userstodelete",{"_index":5219,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{}}}],["userstoragekey",{"_index":655,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["uses",{"_index":5126,"title":{},"body":{"interfaces/QueryListParams.html":{},"index.html":{}}}],["usevalue",{"_index":494,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["using",{"_index":1653,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueLabelComponent.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{}}}],["ustutt/grapheditor",{"_index":1215,"title":{},"body":{"interfaces/ComponentNode.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"dependencies.html":{}}}],["utilize",{"_index":4306,"title":{},"body":{"interfaces/Positions.html":{}}}],["v",{"_index":3796,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["valid",{"_index":1445,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{}}}],["validateconfirmpassword",{"_index":5140,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validateform",{"_index":3887,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validation",{"_index":237,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/RegisterComponent.html":{}}}],["validationdescription",{"_index":1417,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["validationerrors",{"_index":5168,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validationfilter",{"_index":3388,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["validationims",{"_index":1415,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["validationlabeldescription",{"_index":1453,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["validationlabelname",{"_index":1454,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["validationname",{"_index":1411,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["validationprovider",{"_index":1416,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["validationrole",{"_index":238,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{}}}],["validations",{"_index":1410,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["validationtype",{"_index":4135,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["validationurl",{"_index":1413,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["validator",{"_index":1480,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["validatorfn",{"_index":2123,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["validators",{"_index":254,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"classes/CCIMSValidators.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueDetailComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["validators.compose",{"_index":738,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["validators.email",{"_index":5176,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.maxlength(256",{"_index":748,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["validators.maxlength(30",{"_index":1481,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["validators.maxlength(655536",{"_index":733,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["validators.pattern",{"_index":740,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["validators.required",{"_index":250,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueDetailComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsComponent.html":{},"components/RegisterComponent.html":{}}}],["value",{"_index":51,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.email",{"_index":5193,"title":{},"body":{"components/RegisterComponent.html":{}}}],["value.length",{"_index":5416,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["value.map(item",{"_index":2858,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["value.pageinfo",{"_index":2000,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["value.password",{"_index":5192,"title":{},"body":{"components/RegisterComponent.html":{}}}],["value.totalcount",{"_index":1999,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["value.username",{"_index":5191,"title":{},"body":{"components/RegisterComponent.html":{}}}],["values",{"_index":2354,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueLabelComponent.html":{},"components/RegisterComponent.html":{}}}],["var",{"_index":99,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"interfaces/userMock.html":{}}}],["variable",{"_index":4761,"title":{},"body":{"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"coverage.html":{}}}],["variables",{"_index":3092,"title":{"miscellaneous/variables.html":{}},"body":{"components/IssueGraphControlsComponent.html":{},"components/IssueLabelComponent.html":{},"components/ProjectListComponent.html":{},"components/SideNavComponent.html":{},"miscellaneous/variables.html":{}}}],["variant",{"_index":2811,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["variants",{"_index":2810,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["various",{"_index":3662,"title":{},"body":{"directives/ItemDirective.html":{},"interfaces/Positions.html":{}}}],["vector",{"_index":3729,"title":{"classes/Vector.html":{}},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{},"coverage.html":{}}}],["vector(positionx",{"_index":3753,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["verbatim",{"_index":1739,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["verification",{"_index":5061,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["verificationname",{"_index":2115,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["verificationnameinput",{"_index":2139,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["verify",{"_index":754,"title":{},"body":{"classes/CCIMSValidators.html":{},"components/RegisterComponent.html":{}}}],["version",{"_index":5802,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":2613,"title":{},"body":{"components/IssueCategoryComponent.html":{},"components/IssueItemComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/TextDisplayComponent.html":{}}}],["very",{"_index":5593,"title":{},"body":{"injectables/UsersService.html":{}}}],["via",{"_index":1253,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"components/LoginComponent.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"interfaces/TextFragment.html":{},"index.html":{}}}],["view",{"_index":228,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["viewchild",{"_index":829,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SetEditorComponent.html":{},"interfaces/userMock.html":{}}}],["viewchild('body",{"_index":1582,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["viewchild('comment",{"_index":2635,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["viewchild('deletequery",{"_index":4177,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["viewchild('frame",{"_index":1138,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["viewchild('graph",{"_index":4295,"title":{},"body":{"interfaces/Positions.html":{}}}],["viewchild('minimap",{"_index":4298,"title":{},"body":{"interfaces/Positions.html":{}}}],["viewchild('nodequery",{"_index":4175,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["viewchild('resizecorner",{"_index":1140,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["viewchild('titleinput",{"_index":2698,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["viewchild('titletext",{"_index":5250,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["viewchild('updatequery",{"_index":4179,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["viewchild(issuegraphcomponent",{"_index":3040,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["viewchild(labelsearchcomponent",{"_index":3042,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["viewchild(matpaginator",{"_index":3437,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["viewchild(matpaginatormodule",{"_index":4915,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["viewchild(matsort",{"_index":3442,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["viewchild(nodedetailscomponent",{"_index":1144,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["viewchild(querycomponent",{"_index":871,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/IssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["viewers",{"_index":1788,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["views",{"_index":2208,"title":{},"body":{"components/FrameComponent.html":{}}}],["visibility",{"_index":4787,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["visibility_off",{"_index":4786,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["visible",{"_index":4496,"title":{},"body":{"interfaces/Positions.html":{}}}],["visible.height",{"_index":4510,"title":{},"body":{"interfaces/Positions.html":{}}}],["visible.width",{"_index":4508,"title":{},"body":{"interfaces/Positions.html":{}}}],["visible.x",{"_index":4517,"title":{},"body":{"interfaces/Positions.html":{}}}],["visible.y",{"_index":4518,"title":{},"body":{"interfaces/Positions.html":{}}}],["visited",{"_index":3758,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["visual",{"_index":4645,"title":{},"body":{"interfaces/Positions.html":{}}}],["visualize",{"_index":1243,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["visualized",{"_index":4617,"title":{},"body":{"interfaces/Positions.html":{}}}],["void",{"_index":46,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{}}}],["vs",{"_index":1247,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"components/MarkdownEditorComponent.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["wait",{"_index":1755,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["want",{"_index":1035,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"components/IssueFilterComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["wanted",{"_index":3896,"title":{},"body":{"components/LoginComponent.html":{}}}],["wasnt",{"_index":4692,"title":{},"body":{"interfaces/Positions.html":{}}}],["way",{"_index":5087,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["we're",{"_index":1912,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["weakmap",{"_index":1125,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["webcomponent",{"_index":5775,"title":{},"body":{"dependencies.html":{}}}],["webcomponent/lib/dynamic",{"_index":3111,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["webcomponent/lib/edge",{"_index":1217,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["webcomponent/lib/grapheditor",{"_index":2984,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/Positions.html":{}}}],["webcomponent/lib/grouping",{"_index":3225,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["webcomponent/lib/index",{"_index":2527,"title":{},"body":{"modules/GraphsModule.html":{}}}],["webcomponent/lib/link",{"_index":3114,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{}}}],["webcomponent/lib/node",{"_index":1216,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["webcomponent/lib/util",{"_index":4274,"title":{},"body":{"interfaces/Positions.html":{}}}],["webfrontend",{"_index":5799,"title":{},"body":{"index.html":{}}}],["webkit",{"_index":4853,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TimelineItemComponent.html":{}}}],["weight",{"_index":1637,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SideNavComponent.html":{},"components/UserItemComponent.html":{}}}],["weird",{"_index":1621,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["well",{"_index":1053,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"components/TopToolbarComponent.html":{},"classes/Vector.html":{}}}],["west",{"_index":4270,"title":{},"body":{"interfaces/Positions.html":{}}}],["whenever",{"_index":3008,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/RegisterComponent.html":{}}}],["whether",{"_index":569,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"injectables/StateService.html":{},"components/TopToolbarComponent.html":{}}}],["white",{"_index":745,"title":{},"body":{"classes/CCIMSValidators.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueLabelComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/RemoveDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["whitesmoke",{"_index":5120,"title":{},"body":{"components/QueryComponent.html":{}}}],["whitespace",{"_index":744,"title":{},"body":{"classes/CCIMSValidators.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["whoose",{"_index":2338,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/LabelStoreService.html":{}}}],["whose",{"_index":4002,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["width",{"_index":86,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["width:100",{"_index":4805,"title":{},"body":{"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["within",{"_index":1256,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["without",{"_index":1717,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/ProjectMembersComponent.html":{},"components/SetEditorComponent.html":{},"injectables/UsersService.html":{},"interfaces/userMock.html":{}}}],["won't",{"_index":1624,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["wont",{"_index":2891,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["word",{"_index":5425,"title":{},"body":{"components/TextDisplayComponent.html":{},"classes/TimeFormatter.html":{}}}],["work",{"_index":5598,"title":{},"body":{"injectables/UsersService.html":{}}}],["workaround",{"_index":2314,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["works",{"_index":2714,"title":{},"body":{"components/IssueDetailComponent.html":{},"interfaces/Positions.html":{}}}],["wrap",{"_index":3947,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["wrapper",{"_index":1448,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["x",{"_index":1070,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["x.name.tolocalelowercase().indexof(term.tolocalelowercase",{"_index":3694,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["x2",{"_index":3228,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["xmax",{"_index":4737,"title":{},"body":{"interfaces/Positions.html":{}}}],["xmin",{"_index":4735,"title":{},"body":{"interfaces/Positions.html":{}}}],["xoffset",{"_index":3253,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["y",{"_index":1066,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/FrameComponent.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["y2",{"_index":3229,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["year",{"_index":5472,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["yes",{"_index":1465,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"classes/NodeCache.html":{},"components/QueryComponent.html":{},"injectables/UserNotifyService.html":{}}}],["yielded",{"_index":5060,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["ymax",{"_index":4738,"title":{},"body":{"interfaces/Positions.html":{}}}],["ymin",{"_index":4736,"title":{},"body":{"interfaces/Positions.html":{}}}],["yoffset",{"_index":3254,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["you've",{"_index":1991,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["z",{"_index":5516,"title":{},"body":{"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["zero",{"_index":2018,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"classes/Vector.html":{}}}],["zeroposition",{"_index":1259,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["zone.js",{"_index":5790,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":340,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"interfaces/Positions.html":{},"overview.html":{}}}],["zoomonredraw",{"_index":4321,"title":{},"body":{"interfaces/Positions.html":{}}}],["zooms",{"_index":4700,"title":{},"body":{"interfaces/Positions.html":{}}}],["zoomtransform",{"_index":4687,"title":{},"body":{"interfaces/Positions.html":{}}}],["zoomtransformasstring",{"_index":4688,"title":{},"body":{"interfaces/Positions.html":{}}}],["zorro",{"_index":390,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AccessTokenDialogComponent.html":{"url":"components/AccessTokenDialogComponent.html","title":"component - AccessTokenDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AccessTokenDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/access-token-dialog/access-token-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-access-token-dialog\n            \n\n            \n                styleUrls\n                ./access-token-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./access-token-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                generateToken\n                            \n                            \n                                    Public\n                                goBackToSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/access-token-dialog/access-token-dialog.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        generateToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/access-token-dialog/access-token-dialog.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        goBackToSettings\n                        \n                    \n                \n            \n            \n                \n                    \n                    goBackToSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/access-token-dialog/access-token-dialog.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/access-token-dialog/access-token-dialog.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'option2'\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/access-token-dialog/access-token-dialog.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { SettingsDialogComponent } from '../settings-dialog/settings-dialog.component';\n\n@Component({\n  selector: 'app-access-token-dialog',\n  templateUrl: './access-token-dialog.component.html',\n  styleUrls: ['./access-token-dialog.component.scss']\n})\nexport class AccessTokenDialogComponent implements OnInit {\n  selected = 'option2';\n\n  constructor(public dialogRef: MatDialogRef, private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n\n  //go one step back (to the settings menu)\n  public goBackToSettings() {\n    this.dialogRef.close();\n    this.dialog.open(SettingsDialogComponent);\n  }\n\n  public generateToken() {\n    //TODO\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        arrow_back_ios\n        Back\n    \n\n    Personal access tokens\n    Generate a personal access token for quicker access ...\n\n    \n        \n          Note\n          \n        \n      \n\n      \n        Expitarion\n        \n          7 days\n          30 days\n          60 days\n          90 days\n        \n      \n\n      \n\n      \n    \n        Generate Token\n    \n\n      \n        Cancel\n    \n\n\n    \n\n    \n                \n                    ./access-token-dialog.component.scss\n                \n                .dialog{\n    width: 500px;\n}\n\n.example-form {\n    min-width: 150px;\n    max-width: 500px;\n    width: 100%;\n  }\n  \n.example-full-width {\n    width: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            arrow_back_ios        Back        Personal access tokens    Generate a personal access token for quicker access ...                      Note                                      Expitarion                  7 days          30 days          60 days          90 days                                      Generate Token                  Cancel    '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccessTokenDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddProjectMemberDialogComponent.html":{"url":"components/AddProjectMemberDialogComponent.html","title":"component - AddProjectMemberDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddProjectMemberDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component provides a view to add a member to a project\nThe view is just mocked, so no interaction with the backend or database is provided yet\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-project-member-dialog\n            \n\n            \n                styleUrls\n                ./add-project-member-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-project-member-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                loading\n                            \n                            \n                                selectedUsers\n                            \n                            \n                                validation\n                            \n                            \n                                validationRole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNoClick\n                            \n                            \n                                onOkClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onOkClick\n                        \n                    \n                \n            \n            \n                \nonOkClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationRole\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n/**\n * This component provides a view to add a member to a project\n * The view is just mocked, so no interaction with the backend or database is provided yet\n */\n@Component({\n  selector: 'app-add-project-member-dialog',\n  templateUrl: './add-project-member-dialog.component.html',\n  styleUrls: ['./add-project-member-dialog.component.scss']\n})\nexport class AddProjectMemberDialogComponent implements OnInit {\n  loading = false;\n  selectedUsers = [];\n  constructor(public dialogRef: MatDialogRef,@Inject(MAT_DIALOG_DATA) public data) { }\n  validation = new FormControl('', [Validators.required]);\n  validationRole = new FormControl('', [Validators.required]);\n  ngOnInit(): void {\n    this.validationRole.setValue('administrator')\n  }\n\n  //cancel button\n  onNoClick(){\n    this.dialogRef.close();\n  }\n\n  //add member button\n  onOkClick(){\n    const data = {usersToAdd: this.selectedUsers};\n    this.dialogRef.close(data);\n  }\n}\n\n    \n\n    \n        Add Project Member\n\n\n  \n  \n\n    \n\n      {{user.displayName}}\n    \n  \n\n  \n  \n    Role\n    \n      Administrator\n    \n  \n\n\n\n\n  Cancel\n  Add\n\n\n    \n\n    \n                \n                    ./add-project-member-dialog.component.scss\n                \n                .dialog-content {\n  min-height: 400px;\n  min-width: 400px;\n  max-width: 600px;\n}\n.actions {\n  float:right\n}\n.stretch {\n  width: 100%;\n}\n\n.mat-success {\n  background-color: green;\n  color: #fff;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Add Project Member              {{user.displayName}}              Role          Administrator        Cancel  Add'\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'AddProjectMemberDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matIconRegistry\n                                                  \n                                                        \n                                                                    MatIconRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        domSanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Gropius'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {MatIconRegistry} from '@angular/material/icon';\nimport {DomSanitizer} from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Gropius';\n\n  constructor(private matIconRegistry: MatIconRegistry,\n              private domSanitizer: DomSanitizer) {\n    const ccimsIcons = {\n      'relation-edge': 'relation-edge.svg',\n      'resize-corner': 'resize-corner.svg'\n    };\n\n    for (const [key, value] of Object.entries(ccimsIcons)) {\n      console.log('register', key, 'as', '../assets/icons/svg/' + value );\n      this.matIconRegistry.addSvgIcon(key, this.domSanitizer.bypassSecurityTrustResourceUrl('../assets/icons/svg/' + value));\n    }\n\n    // add all issue icons\n    for (const type of ['normal', 'assigned']) {\n      for (const category of ['bug', 'feature', 'uncategorized']) {\n        for (const isClosed of [false, true]) {\n          for (const edgeType of [null, 'in', 'out', 'inout']) {\n            const assetUrl = [\n              '../assets/icons/issues/', type, '/', category, isClosed ? '-closed' : null, edgeType && '-', edgeType, '.svg'\n            ].filter(part => !!part).join('');\n            const iconName = [\n              'issue', type === 'assigned' ? 'assigned' : null, category, isClosed ? 'closed' : null, edgeType\n            ].filter(part => !!part).join('-');\n            this.matIconRegistry.addSvgIcon(iconName, this.domSanitizer.bypassSecurityTrustResourceUrl(assetUrl));\n          }\n        }\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAccessTokenDialogComponent\n\nAccessTokenDialogComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccessTokenDialogComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommentComponent\n\nCommentComponent\n\nAppModule -->\n\nCommentComponent->AppModule\n\n\n\n\n\nComponentContextMenuComponent\n\nComponentContextMenuComponent\n\nAppModule -->\n\nComponentContextMenuComponent->AppModule\n\n\n\n\n\nCreateComponentDialogComponent\n\nCreateComponentDialogComponent\n\nAppModule -->\n\nCreateComponentDialogComponent->AppModule\n\n\n\n\n\nCreateEditLabelDialogComponent\n\nCreateEditLabelDialogComponent\n\nAppModule -->\n\nCreateEditLabelDialogComponent->AppModule\n\n\n\n\n\nCreateInterfaceDialogComponent\n\nCreateInterfaceDialogComponent\n\nAppModule -->\n\nCreateInterfaceDialogComponent->AppModule\n\n\n\n\n\nCreateIssueDialogComponent\n\nCreateIssueDialogComponent\n\nAppModule -->\n\nCreateIssueDialogComponent->AppModule\n\n\n\n\n\nCreateProjectDialogComponent\n\nCreateProjectDialogComponent\n\nAppModule -->\n\nCreateProjectDialogComponent->AppModule\n\n\n\n\n\nFrameComponent\n\nFrameComponent\n\nAppModule -->\n\nFrameComponent->AppModule\n\n\n\n\n\nIssueContentsComponent\n\nIssueContentsComponent\n\nAppModule -->\n\nIssueContentsComponent->AppModule\n\n\n\n\n\nIssueDetailComponent\n\nIssueDetailComponent\n\nAppModule -->\n\nIssueDetailComponent->AppModule\n\n\n\n\n\nLinkedIssueItemComponent\n\nLinkedIssueItemComponent\n\nAppModule -->\n\nLinkedIssueItemComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMarkdownEditorComponent\n\nMarkdownEditorComponent\n\nAppModule -->\n\nMarkdownEditorComponent->AppModule\n\n\n\n\n\nMarkdownPreviewComponent\n\nMarkdownPreviewComponent\n\nAppModule -->\n\nMarkdownPreviewComponent->AppModule\n\n\n\n\n\nNodeDetailsComponent\n\nNodeDetailsComponent\n\nAppModule -->\n\nNodeDetailsComponent->AppModule\n\n\n\n\n\nNodeDetailsPageComponent\n\nNodeDetailsPageComponent\n\nAppModule -->\n\nNodeDetailsPageComponent->AppModule\n\n\n\n\n\nProfileSettingsDialogComponent\n\nProfileSettingsDialogComponent\n\nAppModule -->\n\nProfileSettingsDialogComponent->AppModule\n\n\n\n\n\nProjectListComponent\n\nProjectListComponent\n\nAppModule -->\n\nProjectListComponent->AppModule\n\n\n\n\n\nProjectOverviewComponent\n\nProjectOverviewComponent\n\nAppModule -->\n\nProjectOverviewComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nRemoveDialogComponent\n\nRemoveDialogComponent\n\nAppModule -->\n\nRemoveDialogComponent->AppModule\n\n\n\n\n\nRemoveProjectMemberComponentComponent\n\nRemoveProjectMemberComponentComponent\n\nAppModule -->\n\nRemoveProjectMemberComponentComponent->AppModule\n\n\n\n\n\nSettingsDialogComponent\n\nSettingsDialogComponent\n\nAppModule -->\n\nSettingsDialogComponent->AppModule\n\n\n\n\n\nSideNavComponent\n\nSideNavComponent\n\nAppModule -->\n\nSideNavComponent->AppModule\n\n\n\n\n\nTextDisplayComponent\n\nTextDisplayComponent\n\nAppModule -->\n\nTextDisplayComponent->AppModule\n\n\n\n\n\nTimelineCoalescedItemsDirective\n\nTimelineCoalescedItemsDirective\n\nAppModule -->\n\nTimelineCoalescedItemsDirective->AppModule\n\n\n\n\n\nTimelineComponent\n\nTimelineComponent\n\nAppModule -->\n\nTimelineComponent->AppModule\n\n\n\n\n\nTimelineItemComponent\n\nTimelineItemComponent\n\nAppModule -->\n\nTimelineItemComponent->AppModule\n\n\n\n\n\nTimelineItemDeletedDirective\n\nTimelineItemDeletedDirective\n\nAppModule -->\n\nTimelineItemDeletedDirective->AppModule\n\n\n\n\n\nTimelineSingleItemDirective\n\nTimelineSingleItemDirective\n\nAppModule -->\n\nTimelineSingleItemDirective->AppModule\n\n\n\n\n\nTopToolbarComponent\n\nTopToolbarComponent\n\nAppModule -->\n\nTopToolbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGraphQLModule\n\nGraphQLModule\n\nAppModule -->\n\nGraphQLModule->AppModule\n\n\n\n\n\nGraphsModule\n\nGraphsModule\n\nAppModule -->\n\nGraphsModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccessTokenDialogComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            CommentComponent\n                        \n                        \n                            ComponentContextMenuComponent\n                        \n                        \n                            CreateComponentDialogComponent\n                        \n                        \n                            CreateEditLabelDialogComponent\n                        \n                        \n                            CreateInterfaceDialogComponent\n                        \n                        \n                            CreateIssueDialogComponent\n                        \n                        \n                            CreateProjectDialogComponent\n                        \n                        \n                            FrameComponent\n                        \n                        \n                            IssueContentsComponent\n                        \n                        \n                            IssueDetailComponent\n                        \n                        \n                            LinkedIssueItemComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            MarkdownEditorComponent\n                        \n                        \n                            MarkdownPreviewComponent\n                        \n                        \n                            NodeDetailsComponent\n                        \n                        \n                            NodeDetailsPageComponent\n                        \n                        \n                            ProfileSettingsDialogComponent\n                        \n                        \n                            ProjectListComponent\n                        \n                        \n                            ProjectOverviewComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            RemoveDialogComponent\n                        \n                        \n                            RemoveProjectMemberComponentComponent\n                        \n                        \n                            SettingsDialogComponent\n                        \n                        \n                            SideNavComponent\n                        \n                        \n                            TextDisplayComponent\n                        \n                        \n                            TimelineCoalescedItemsDirective\n                        \n                        \n                            TimelineComponent\n                        \n                        \n                            TimelineItemComponent\n                        \n                        \n                            TimelineItemDeletedDirective\n                        \n                        \n                            TimelineSingleItemDirective\n                        \n                        \n                            TopToolbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            GraphQLModule\n                        \n                        \n                            GraphsModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {BrowserModule} from '@angular/platform-browser';\nimport {CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {LayoutModule} from '@angular/cdk/layout';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatListModule} from '@angular/material/list';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {ProjectListComponent} from './project-list-component/project-list.component';\nimport {ProjectOverviewComponent} from './project-overview/project-overview.component';\nimport {TopToolbarComponent} from './top-toolbar/top-toolbar.component';\nimport {SideNavComponent} from './side-nav/side-nav.component';\nimport {GraphQLModule} from './graphql.module';\nimport {HttpClientModule} from '@angular/common/http';\nimport {IssueDetailComponent} from './issue-detail/issue-detail.component';\nimport {GraphsModule} from './graphs/graphs.module';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NZ_ICONS} from 'ng-zorro-antd/icon';\nimport {en_US, NZ_I18N} from 'ng-zorro-antd/i18n';\nimport {NgZorroAntdModule} from 'ng-zorro-antd';\nimport * as AllIcons from '@ant-design/icons-angular/icons';\nimport {IconDefinition} from '@ant-design/icons-angular';\nimport {CommonModule, registerLocaleData} from '@angular/common';\nimport en from '@angular/common/locales/en';\nimport {LoginComponent} from './login/login.component';\nimport {FrameComponent} from './frame/frame.component';\nimport {RegisterComponent} from './register/register.component';\nimport {CreateProjectDialogComponent} from 'src/app/dialogs/create-project-dialog/create-project-dialog.component';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {GlobalConfig, ToastrModule} from 'ngx-toastr';\nimport {RemoveDialogComponent} from './dialogs/remove-dialog/remove-dialog.component';\nimport {CreateComponentDialogComponent} from './dialogs/create-component-dialog/create-component-dialog.component';\nimport {CreateInterfaceDialogComponent} from './dialogs/create-interface-dialog/create-interface-dialog.component';\nimport {CreateIssueDialogComponent} from './dialogs/create-issue-dialog/create-issue-dialog.component';\nimport {NgSelectModule} from '@ng-select/ng-select';\nimport {NgOptionHighlightModule} from '@ng-select/ng-option-highlight';\nimport {ColorPickerModule} from 'ngx-color-picker';\nimport {CreateEditLabelDialogComponent} from '@app/dialogs/create-label-dialog/create-edit-label-dialog.component';\nimport {RemoveProjectMemberComponentComponent} from './dialogs/remove-project-member-component/remove-project-member-component.component';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ComponentContextMenuComponent} from '@app/graphs/component-context-menu/component-context-menu.component';\nimport {NodeDetailsComponent} from '@app/node-details/node-details.component';\nimport {MonacoEditorModule} from 'ngx-monaco-editor';\nimport {MarkdownEditorComponent} from './markdown/markdown-editor/markdown-editor.component';\nimport {MarkdownModule} from 'ngx-markdown';\nimport {MarkdownPreviewComponent} from './markdown/markdown-preview/markdown-preview.component';\nimport {TimelineComponent} from './issue-detail/timeline/timeline.component';\nimport {CommentComponent} from './issue-detail/comment/comment.component';\nimport {NodeDetailsPageComponent} from '@app/node-details-page/node-details-page.component';\nimport {TextDisplayComponent} from '@app/text-display/text-display.component';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {IssueContentsComponent} from '@app/issue-detail/issue-contents.component';\nimport {LinkedIssueItemComponent} from '@app/issue-detail/linked-issue-item.component';\nimport {SettingsDialogComponent} from '@app/dialogs/settings-dialog/settings-dialog.component';\nimport {ProfileSettingsDialogComponent} from './dialogs/profile-settings-dialog/profile-settings-dialog.component';\nimport {AccessTokenDialogComponent} from './dialogs/access-token-dialog/access-token-dialog.component';\nimport {\n  TimelineCoalescedItemsDirective,\n  TimelineItemComponent,\n  TimelineItemDeletedDirective,\n  TimelineSingleItemDirective\n} from '@app/issue-detail/timeline/coalesced/timeline-item.component';\n\nregisterLocaleData(en);\nconst antDesignIcons = AllIcons as {\n  [key: string]: IconDefinition;\n};\nconst icons: IconDefinition[] = Object.keys(antDesignIcons).map(key => antDesignIcons[key]);\n\n// configuration for toasts, the toastrservice is configured in graphql.module.ts\nconst toasterConfig: Partial = {\n  maxOpened: 4,\n  autoDismiss: true\n};\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProjectListComponent,\n    ProjectOverviewComponent,\n    TopToolbarComponent,\n    SideNavComponent,\n    IssueDetailComponent,\n    LoginComponent,\n    FrameComponent,\n    RegisterComponent,\n    CreateProjectDialogComponent,\n    RemoveDialogComponent,\n    CreateComponentDialogComponent,\n    CreateInterfaceDialogComponent,\n    CreateIssueDialogComponent,\n    CreateEditLabelDialogComponent,\n    RemoveProjectMemberComponentComponent,\n    ComponentContextMenuComponent,\n    NodeDetailsComponent,\n    NodeDetailsPageComponent,\n    MarkdownEditorComponent,\n    MarkdownPreviewComponent,\n    TimelineComponent,\n    CommentComponent,\n    TextDisplayComponent,\n    IssueContentsComponent,\n    LinkedIssueItemComponent,\n    SettingsDialogComponent,\n    ProfileSettingsDialogComponent,\n    AccessTokenDialogComponent,\n    TimelineItemComponent,\n    TimelineSingleItemDirective,\n    TimelineCoalescedItemsDirective,\n    TimelineItemDeletedDirective\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(toasterConfig),\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatInputModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    MatTabsModule,\n    MatSlideToggleModule,\n    GraphQLModule,\n    HttpClientModule,\n    GraphsModule,\n    MatDialogModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgZorroAntdModule,\n    NgSelectModule,\n    CommonModule,\n    NgOptionHighlightModule,\n    ColorPickerModule,\n    MatExpansionModule,\n    PortalModule,\n    MonacoEditorModule.forRoot(),\n    MarkdownModule.forRoot(),\n    MatButtonToggleModule\n  ],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n  ],\n  providers: [{provide: NZ_I18N, useValue: en_US}, {provide: NZ_ICONS, useValue: icons}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProjectListComponent } from './project-list-component/project-list.component';\nimport { ProjectOverviewComponent } from './project-overview/project-overview.component';\nimport { IssueDetailComponent } from './issue-detail/issue-detail.component';\nimport { IssueGraphControlsComponent } from './graphs/issue-graph-controls/issue-graph-controls.component';\nimport { LoginComponent } from './login/login.component';\nimport { FrameComponent } from './frame/frame.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { RegisterComponent } from './register/register.component';\nimport { ProjectIssueListComponent } from './project-issue-list/project-issue-list.component';\nimport { ProjectMembersComponent } from './project-members/project-members.component';\nimport {NodeDetailsPageComponent} from '@app/node-details-page/node-details-page.component';\n\n\nconst routes: Routes = [\n  {\n    path: '', component: FrameComponent, canActivate: [AuthGuard],\n    children: [\n      { path: '', redirectTo: 'projects', pathMatch: 'full' },\n      { path: 'projects', component: ProjectListComponent },\n      {\n        path: 'projects/:id',\n        children: [\n          { path: '', pathMatch: 'full', component: ProjectOverviewComponent },\n          { path: 'graph', component: IssueGraphControlsComponent },\n          {\n            path: 'issues',\n            children: [\n              { path: '', pathMatch: 'full', component: ProjectIssueListComponent },\n              { path: ':issueId', pathMatch: 'full', component: IssueDetailComponent },\n            ]\n          },\n          { path: 'members', component: ProjectMembersComponent },\n          {\n            path: 'component/:componentId',\n            children: [\n              { path: '', pathMatch: 'full', component: NodeDetailsPageComponent},\n              {\n                path: 'interface/:interfaceId',\n                children: [\n                  { path: '', pathMatch: 'full', component: NodeDetailsPageComponent},\n                  { path: 'component/:componentId/issue/:issueId', pathMatch: 'full', component: IssueDetailComponent }\n                ]\n              },\n            ]\n          },\n          {\n            path: 'interface/:interfaceId',\n            children: [\n              { path: '', pathMatch: 'full', component: NodeDetailsPageComponent},\n            ]\n          }\n        ]\n      },\n      { path: 'issue', component: IssueDetailComponent },\n    ],\n  },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  // otherwise redirect to home\n  { path: '**', redirectTo: '' }\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            project\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        project\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        project:     GetBasicProjectQuery\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     GetBasicProjectQuery\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {NavigationEnd, PRIMARY_OUTLET, Router} from '@angular/router';\nimport {ReplaySubject} from 'rxjs';\nimport {filter, switchMap} from 'rxjs/operators';\nimport {GetBasicProjectQuery} from 'src/generated/graphql';\nimport {ProjectStoreService} from './data/project/project-store.service';\n\n/**\n * This service exposes an observable of the name and id of the current project.\n * It determines the current project by listening for url changes and parsing the url.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateService {\n  state: AppState = {};\n  state$ = new ReplaySubject(1);\n\n  constructor(private router: Router, private ps: ProjectStoreService) {\n    this.syncStateWithUrl(router, ps);\n  }\n\n  /**\n   * Sets up two mutually exclusive (look at filter) subscriptions to track whether we are at a\n   * url referring to a project or not. If we are at a project we retrieve information about it\n   * from the backend and make it available in the state observable\n   *\n   * @param router allows to listen for routing events\n   * @param ps\n   */\n  syncStateWithUrl(router: Router, ps: ProjectStoreService) {\n    router.events.pipe(\n      filter(event => (event instanceof NavigationEnd && this.isProjectURL(event.url))),\n      switchMap((event: NavigationEnd) =>\n        ps.getBasicProject(this.router.parseUrl(event.url).root?.children[PRIMARY_OUTLET].segments[1].path)\n      )\n    ).subscribe(project => {\n      this.state.project = project;\n      this.state$.next(this.state);\n    });\n    // set project to null if new url is not specific to a project\n    router.events.pipe(\n      filter(event => (event instanceof NavigationEnd && !this.isProjectURL(event.url))),\n    ).subscribe(_ => {\n      this.state.project = null;\n      this.state$.next(this.state);\n    });\n  }\n\n  /**\n   * Caution:\n   * If you change the routing you might have to change this function too.\n   * That is if it has the form 'projects/:id' + further stuff.\n   * @param url\n   * @returns true iff url is a route pertaining to a project\n   */\n  private isProjectURL(url: string): boolean {\n    const tree = this.router.parseUrl(url);\n    const primary = tree.root.children[PRIMARY_OUTLET];\n    if (primary) {\n      const primarySegments = primary.segments;\n      return (primarySegments[0].path === 'projects' && primary.segments.length >= 2);\n    }\n    return false;\n  }\n}\n\nexport interface AppState {\n  project?: GetBasicProjectQuery;\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/auth.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    AuthGuard is responsible for navigating the user to /login when he is not\ncurrently logged in according to the AuthenticationsService. It's canActivate\nmethod is automatically invoked by angular on routing events.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.guard.ts:22\n                \n            \n\n\n            \n                \n                    Redirects user to login if he is not authenticated.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        unused but required for CanActivate signature\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        router state when guard was invoked, used to redirect the user after login\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true iff the user is logged in according to the AuthenticationService\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\n\n/** AuthGuard is responsible for navigating the user to /login when he is not\n * currently logged in according to the AuthenticationsService. It's canActivate\n * method is automatically invoked by angular on routing events.\n */\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) { }\n\n    /**\n     * Redirects user to login if he is not authenticated.\n     * @param route unused but required for CanActivate signature\n     * @param state router state when guard was invoked, used to redirect the user after login\n     * @returns true iff the user is logged in according to the AuthenticationService\n     */\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const currentUser = this.authenticationService.currentUserValue;\n        if (currentUser) {\n            // logged in so return true\n            return true;\n        }\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n        return false;\n    }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/authentication.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Responsible for saving user name, id and jwt token in localstorage\nand exposing the name and id through currentUserSubject\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentUser\n                            \n                            \n                                    Private\n                                currentUserSubject\n                            \n                            \n                                    Readonly\n                                userStorageKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchUserFromStorage\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                saveUserToStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    currentUserValue\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/authentication.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchUserFromStorage\n                        \n                    \n                \n            \n            \n                \nfetchUserFromStorage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/authentication.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         User\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/authentication.service.ts:43\n                \n            \n\n\n            \n                \n                    If login is sucessfull save the user name, id and jwt token to local storage and expose the name and id\nthrough currentUserSubject. If the login fails the returned observable errors.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        provided by user to LoginComponent\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        provided by user to LoginComponent\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        the logged in user, errors if login is not successful\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/authentication.service.ts:59\n                \n            \n\n\n            \n                \n                    remove user from local storage and set subject holding the current user to null\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveUserToStorage\n                        \n                    \n                \n            \n            \n                \nsaveUserToStorage(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/authentication.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/authentication.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentUserSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/authentication.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        userStorageKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'currentUser'\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/authentication.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentUserValue\n                    \n                \n\n                \n                    \n                        getcurrentUserValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/authentication.service.ts:24\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {environment} from '@environments/environment';\nimport {Router} from '@angular/router';\nimport {map} from 'rxjs/operators';\n\n/**\n * Responsible for saving user name, id and jwt token in localstorage\n * and exposing the name and id through currentUserSubject\n */\n@Injectable({providedIn: 'root'})\nexport class AuthenticationService {\n\n  readonly userStorageKey = 'currentUser';\n  private currentUserSubject: BehaviorSubject;\n  public currentUser: Observable;\n\n  constructor(private http: HttpClient, private router: Router) {\n    this.currentUserSubject = new BehaviorSubject(this.fetchUserFromStorage());\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): User {\n    return this.currentUserSubject.value;\n  }\n\n  fetchUserFromStorage(): User {\n    return JSON.parse(localStorage.getItem(this.userStorageKey));\n  }\n\n  saveUserToStorage(user: User): void {\n    localStorage.setItem(this.userStorageKey, JSON.stringify(user));\n  }\n\n  /**\n   * If login is sucessfull save the user name, id and jwt token to local storage and expose the name and id\n   * through currentUserSubject. If the login fails the returned observable errors.\n   * @param username provided by user to LoginComponent\n   * @param password provided by user to LoginComponent\n   * @returns the logged in user, errors if login is not successful\n   */\n  login(username: string, password: string): Observable {\n    return this.http.post(environment.loginUrl, {username, password})\n      .pipe(map(response => {\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        localStorage.setItem('token', response.token);\n        const tokenPayload = JSON.parse(atob(response.token.split('.')[1]));\n        const user = {name: tokenPayload.name, id: tokenPayload.sub};\n        this.saveUserToStorage(user);\n        this.currentUserSubject.next(user);\n        return user;\n      }));\n  }\n\n  /**\n   * remove user from local storage and set subject holding the current user to null\n   */\n  logout() {\n    localStorage.removeItem('currentUser');\n    localStorage.removeItem('token');\n    this.router.navigate(['login']);\n    this.currentUserSubject.next(null);\n  }\n}\n\ninterface User {\n  name: string;\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CCIMSValidators.html":{"url":"classes/CCIMSValidators.html","title":"class - CCIMSValidators","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CCIMSValidators\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/validators.ts\n        \n\n\n            \n                Description\n            \n            \n                This class provides commonly used validators in CCIMS usable for e.g. input fields\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                contentValidator\n                            \n                            \n                                    Static\n                                    Readonly\n                                nameFormatValidator\n                            \n                            \n                                    Static\n                                    Readonly\n                                nameValidator\n                            \n                            \n                                    Static\n                                    Readonly\n                                urlValidator\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        contentValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Validators.maxLength(655536)\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/validators.ts:30\n                        \n                    \n\n            \n                \n                    Ensures that the text has the appropriate length for content\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        nameFormatValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Validators.compose([\n    CCIMSValidators.nameValidator,\n    Validators.pattern('([^ ]+ )*([^ ]+)+')\n  ])\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/validators.ts:16\n                        \n                    \n\n            \n                \n                    Ensures that the text is both usable as a name (#nameValidator) and that the text does not start/end with\na whitespace (white-spaces in the name are allowed)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        nameValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Validators.maxLength(256)\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/validators.ts:10\n                        \n                    \n\n            \n                \n                    Ensures that text has the appropriate length to be used as a name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        urlValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Validators.maxLength(655536)\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/validators.ts:25\n                        \n                    \n\n            \n                \n                    Ensures that the provided text has the correct length and the correct format for an URL\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Validators} from '@angular/forms';\n\n/**\n * This class provides commonly used validators in CCIMS usable for e.g. input fields\n */\nexport class CCIMSValidators {\n  /**\n   * Ensures that text has the appropriate length to be used as a name\n   */\n  static readonly nameValidator = Validators.maxLength(256);\n\n  /**\n   * Ensures that the text is both usable as a name ({@link #nameValidator}) and that the text does not start/end with\n   * a whitespace (white-spaces in the name are allowed)\n   */\n  static readonly nameFormatValidator = Validators.compose([\n    CCIMSValidators.nameValidator,\n    Validators.pattern('([^ ]+ )*([^ ]+)+')\n  ]);\n\n  /**\n   * Ensures that the provided text has the correct length and the correct format for an URL\n   */\n  // TODO: Verify URL pattern, leaving this out for now for quicker testing\n  static readonly urlValidator = Validators.maxLength(655536);\n\n  /**\n   * Ensures that the text has the appropriate length for content\n   */\n  static readonly contentValidator = Validators.maxLength(655536);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CacheNodeComponent.html":{"url":"components/CacheNodeComponent.html","title":"component - CacheNodeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CacheNodeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/cache-node.component.ts\n\n\n\n    \n        Description\n    \n    \n        Loads data for a node from the cache or from the API.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                [cache-node]\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                itemTemplate\n                            \n                            \n                                node$\n                            \n                            \n                                nodeSub\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lazy\n                            \n                            \n                                node\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/cache-node.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        lazy\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/cache-node.component.ts:20\n                            \n                        \n                \n                    \n                        If true, this component will subscribe to the node lazily (i.e. it will not fetch new data if data is cached already)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        node\n                    \n                \n                \n                    \n                        Type :         NodeId\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/cache-node.component.ts:18\n                            \n                        \n                \n                    \n                        The node that will be loaded.\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        itemTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(ItemDirective, {read: TemplateRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/cache-node.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        node$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataNode<>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/cache-node.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nodeSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/cache-node.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ContentChild, Input, OnDestroy, OnInit, TemplateRef } from '@angular/core';\nimport { ItemDirective } from '@app/components/item.directive';\nimport DataService from '@app/data-dgql';\nimport { NodeId } from '@app/data-dgql/id';\nimport { DataNode } from '@app/data-dgql/query';\nimport { Subscription } from 'rxjs';\n\n/**\n * Loads data for a node from the cache or from the API.\n */\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: '[cache-node]',\n  template: ''\n})\nexport class CacheNodeComponent implements OnInit, OnDestroy {\n  /** The node that will be loaded. */\n  @Input() node: NodeId;\n  /** If true, this component will subscribe to the node lazily (i.e. it will not fetch new data if data is cached already) */\n  @Input() lazy = true;\n  @ContentChild(ItemDirective, { read: TemplateRef }) itemTemplate;\n\n  node$: DataNode;\n  nodeSub: Subscription;\n\n  constructor(private dataService: DataService) {}\n\n  ngOnInit() {\n    this.node$ = this.dataService.getNode(this.node);\n    this.nodeSub = this.lazy ? this.node$.subscribeLazy() : this.node$.subscribe();\n  }\n  ngOnDestroy() {\n    this.nodeSub.unsubscribe();\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'CacheNodeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoalescedTimelineItem.html":{"url":"interfaces/CoalescedTimelineItem.html","title":"interface - CoalescedTimelineItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoalescedTimelineItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/issue-detail/timeline/timeline.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This interface may contain in contrast to a normal timeline item several events in one item.\nTimeline items are coalesced because they are performed in close succession.\nlabel 1 and label 2 are added to an issue at the same time.\nInstead of representing them as to individual items/events, they will be represented as one item in the timeline.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isCoalesced\n                                        \n                                \n                                \n                                        \n                                            item\n                                        \n                                \n                                \n                                        \n                                            time\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isCoalesced\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isCoalesced:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        item:     Array | IssueTimelineItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array | IssueTimelineItem\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {AfterViewInit, Component, Input, ViewChild} from '@angular/core';\nimport {TimeFormatter} from '@app/issue-detail/time-formatter';\nimport {Router} from '@angular/router';\nimport {IssueTimelineItem} from '../../../generated/graphql-dgql';\nimport {DataList} from '@app/data-dgql/query';\nimport DataService from '@app/data-dgql';\nimport {ListType, NodeId, NodeType} from '@app/data-dgql/id';\nimport {QueryComponent} from '@app/utils/query-component/query.component';\n\n/**\n * This interface may contain in contrast to a normal timeline item several events in one item.\n * Timeline items are coalesced because they are performed in close succession.\n * @example\n * label 1 and label 2 are added to an issue at the same time.\n * Instead of representing them as to individual items/events, they will be represented as one item in the timeline.\n */\nexport interface CoalescedTimelineItem {\n  user: string;\n  type: string;\n  isCoalesced: boolean;\n  item: Array | IssueTimelineItem;\n  time: string;\n}\n\n\ntype ItemFilterFunction = (IssueTimelineItem) => boolean;\n\n/**\n * This component shows the full timeline\n * with all its timeline events for a given issue.\n */\n@Component({\n  selector: 'app-timeline',\n  templateUrl: './timeline.component.html',\n  styleUrls: ['./timeline.component.scss']\n})\nexport class TimelineComponent implements AfterViewInit {\n  /**\n   * Events which need to be coalesced\n   */\n  static readonly COALESCABLE_EVENTS: Map = new Map([\n      ['LabelledEvent', (item) => {\n        return !!item.label;\n      }],\n      ['UnlabelledEvent', (item) => {\n        return !!item.removedLabel;\n      }],\n      ['AddedToComponentEvent', (item) => {\n        return !!item.component;\n      }],\n      ['RemovedFromComponentEvent', (item) => {\n        return !!item.removedComponent;\n      }],\n      ['AddedToLocationEvent', (item) => {\n        return !!item.location;\n      }],\n      ['RemovedFromLocationEvent', (item) => {\n        return !!item.removedLocation;\n      }],\n      ['LinkEvent', (item) => {\n        return !!item.linkedIssue;\n      }],\n      ['UnlinkEvent', (item) => {\n        return !!item.removedLinkedIssue;\n      }]\n    ]\n  );\n\n  /**\n   * provides functionality for time formatting for correct representation\n   */\n  public timeFormatter = new TimeFormatter();\n  /**\n   * Already coalesced items for timeline representation\n   */\n  timelineItems: Array = [];\n  /**\n   * Subscription for timelineitems\n   */\n  public timelineItems$: DataList;\n  /**\n   * The id of the corresponding issue for which the timeline is shown\n   */\n  @Input() issueId: string;\n  /**\n   * The id of the project in which the issue is listed\n   */\n  @Input() projectID: string;\n  /**\n   * Component which is handling the query to the server\n   */\n  @ViewChild(QueryComponent) query: QueryComponent;\n\n  /**\n   * Service for handling API connection is required\n   * @param {DataService} dataService handling api connection\n   */\n  constructor(private dataService: DataService) {\n  }\n\n  ngAfterViewInit(): void {\n    this.requestTimelineItems();\n  }\n\n  /**\n   * Retrieves all timeline items (aka. timeline events) for the current issue.\n   * Use in ngAfterViewInit() lifecycle hook\n   */\n  requestTimelineItems(): void {\n\n    // gets an observable with all timeline items for thecurrent issue\n    this.timelineItems$ = this.dataService.getList({\n      node: {type: NodeType.Issue, id: this.issueId},\n      type: ListType.TimelineItems\n    });\n\n    //FIXME: decide on the count\n    this.timelineItems$.count = 99999;\n\n    this.query.listenTo(this.timelineItems$, value => {\n      this.prepareTimelineItems(value);\n    });\n  }\n\n  /**\n   * Prepares the timeline items (aka. the timeline events).\n   * @param  {Map} items - Timeline items to prepare.\n   */\n  prepareTimelineItems(items: Map): void {\n\n    let coalescingType = null;\n    let coalesceList = new Array();\n    let coalesced: Array = [];\n\n    /**\n     * Adds items from the coalesce list {@link coalesceList}\n     * to a list containing all coalesced timeline items {@link coalesced}\n     * in case the coalesce list is not empty.\n     */\n    const finishCoalescing = () => {\n\n      // case: the coalesce list is empty\n      if (coalesceList.length === 0) {\n        return;\n      }\n\n      // case: the coalesce list is not empty\n      else {\n        coalesced = this.addCoalesceItems(coalesceList, coalesced);\n        coalesceList = [];\n      }\n    };\n\n    for (const timelineItem of items.values()) {\n      const itemType = (timelineItem as any).__typename;\n      const filter = TimelineComponent.COALESCABLE_EVENTS.get(itemType);\n      let stopCoalescing = false;\n\n      // decides whether to stop coalescing\n      stopCoalescing = this.stopCoalescing(coalescingType, coalesceList, stopCoalescing, timelineItem);\n\n      // case: the coalescing type equals the current item type\n      // or coalescing should stop\n      if (coalescingType !== itemType || stopCoalescing) {\n\n        // adds remaining items\n        finishCoalescing();\n\n        if (filter && filter(timelineItem)) {\n          coalescingType = itemType;\n          coalesceList.push(timelineItem);\n        } else {\n          coalescingType = null;\n          coalesced = this.addSingleCoalesceItem(timelineItem, filter, coalesced);\n        }\n\n        continue;\n      }\n\n      // case: the coalescing type is null\n      else if (coalescingType == null) {\n        coalesced = this.addSingleCoalesceItem(timelineItem, filter, coalesced);\n        continue;\n      }\n\n      if (filter(timelineItem)) {\n        coalesceList.push(timelineItem);\n      }\n    }\n\n    // adds remaining items\n    finishCoalescing();\n    this.timelineItems = coalesced;\n  }\n\n  /**\n   * Returns the name of the user\n   * that created a given timeline item (aka. timeline event)\n   * or just \"Deleted User\" in case the user no longer exists.\n   * @param  {IssueTimelineItem} item - The given timeline item.\n   * @returns - Name of the timeline item creator.\n   */\n  private userName(item: IssueTimelineItem) {\n\n    // case: the timeline item's creator's name can be retrieved\n    if (item.createdBy) {\n      return item.createdBy.displayName;\n    }\n\n    return 'Deleted User';\n  }\n\n  /**\n   * Adds items from a given coalesce list\n   * to a given list containing all coalesced timeline items.\n   * @param  {IssueTimelineItem[]} coalesceList  The given coalesce list.\n   * @param  {CoalescedTimelineItem[]} coalesced  The given list containing all coalesced timeline items.\n   * @returns The given list containing all coalesced timeline items.\n   */\n   private addCoalesceItems(coalesceList: IssueTimelineItem[], coalesced: CoalescedTimelineItem[]): CoalescedTimelineItem[] {\n\n    const firstItem: any = coalesceList[0];\n    const itemType = firstItem.__typename;\n    const createdBy = this.userName(firstItem);\n\n    // case: the coalesce list has more than one item\n    if (coalesceList.length > 1) {\n      coalesced.push({\n        type: itemType,\n        isCoalesced: true,\n        item: coalesceList,\n        user: createdBy,\n        time: coalesceList[0].createdAt\n      });\n    }\n\n    // case: the coalesce list has only one item\n    else if (coalesceList.length === 1) {\n      coalesced.push({\n        type: itemType,\n        isCoalesced: false,\n        item: coalesceList[0],\n        user: createdBy,\n        time: coalesceList[0].createdAt\n      });\n    }\n\n    // returns the list containing all coalesced timeline items\n    return coalesced;\n  }\n\n  /**\n   * Adds a single item to a list containing all coalesced timeline items.\n   * @param  {IssueTimelineItem} timelineItem - The given item.\n   * @param  {ItemFilterFunction|undefined} filter - Filter used on the given item.\n   * @returns The given list containing all coalesced timeline items.\n   */\n   private addSingleCoalesceItem(\n    timelineItem: IssueTimelineItem,\n    filter: ItemFilterFunction | undefined,\n    coalesced: CoalescedTimelineItem[]): CoalescedTimelineItem[] {\n\n      if (!filter || filter(timelineItem)) {\n        coalesced.push({\n          type: (timelineItem as any).__typename,\n          isCoalesced: false,\n          item: timelineItem,\n          user: this.userName(timelineItem),\n          time: timelineItem.createdAt\n        });\n      }\n\n      // returns the list containing all coalesced timeline items\n      return coalesced;\n  }\n\n  /**\n   * Stops the coalescing process in case\n   * a) the user differs or\n   * b) the current item was already added\n   * 60 seconds after the first one added.\n   * @param  {any} coalescingType - Coalescing type handled.\n   * @param  {IssueTimelineItem[]} coalesceList - Coalesce list handled.\n   * @param  {boolean} stopCoalescing - Value that determines whether the coalescing should stop.\n   * @param  {IssueTimelineItem} timelineItem - Timeline item handled.\n   * @returns The value that determines whether the coalescing should stop.\n   */\n   private stopCoalescing(coalescingType: any, coalesceList: IssueTimelineItem[], stopCoalescing: boolean, timelineItem: IssueTimelineItem) {\n\n    if (coalescingType) {\n      const firstItem = coalesceList[0];\n      stopCoalescing = firstItem.createdBy.id !== timelineItem.createdBy.id ||\n        Math.abs(Date.parse(timelineItem.createdAt) - Date.parse(firstItem.createdAt)) > 60000;\n    }\n\n    return stopCoalescing;\n  }\n\n  /**\n   * Checks if the user self-assigned this issue for text representation.\n   * @param assignedEvent - Assigned event handled.\n   */\n  selfAssigned(assignedEvent): boolean {\n\n    if (assignedEvent.createdBy.id === assignedEvent.removedAssignee?.id) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Handles the id for a given node...\n   */\n  makeCommentId(node): NodeId {\n    return {type: NodeType.IssueComment, id: node.id};\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CommentComponent.html":{"url":"components/CommentComponent.html","title":"component - CommentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CommentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-detail/comment/comment.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays an issue comment.\nThe comment will be subscribed to lazily (see DataNode).\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comment\n            \n\n            \n                styleUrls\n                ./comment.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./comment.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editBody\n                            \n                            \n                                    Public\n                                savingBody\n                            \n                            \n                                    Public\n                                timeFormatter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deleteComment\n                            \n                            \n                                    Public\n                                editComment\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                commentId\n                            \n                            \n                                isIssueBody\n                            \n                            \n                                issueId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, dialog: MatDialog, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-detail/comment/comment.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        commentId\n                    \n                \n                \n                    \n                        Type :         NodeId\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/comment/comment.component.ts:25\n                            \n                        \n                \n                    \n                        The comment or issue ID. If this is an issue ID, set  to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isIssueBody\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/comment/comment.component.ts:23\n                            \n                        \n                \n                    \n                        If true, this comment component is actually editing an issue's body.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        issueId\n                    \n                \n                \n                    \n                        Type :         NodeId\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/comment/comment.component.ts:27\n                            \n                        \n                \n                    \n                        The issue this comment belongs to.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteComment\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteComment()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/comment/comment.component.ts:76\n                \n            \n\n\n            \n                \n                    Deletes the current comment.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        editComment\n                        \n                    \n                \n            \n            \n                \n                    \n                    editComment(body: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/comment/comment.component.ts:59\n                \n            \n\n\n            \n                \n                    Edits the description of the current comment.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe new description of the current issue or comment.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        editBody\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/comment/comment.component.ts:32\n                        \n                    \n\n            \n                \n                    True if the comment body is being edited.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        savingBody\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/comment/comment.component.ts:34\n                        \n                    \n\n            \n                \n                    True if the comment body is being saved.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        timeFormatter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new TimeFormatter()\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/comment/comment.component.ts:30\n                        \n                    \n\n            \n                \n                    Used to format time.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { IssueComment } from '../../../generated/graphql-dgql';\nimport { TimeFormatter } from '@app/issue-detail/time-formatter';\nimport DataService from '@app/data-dgql';\nimport { NodeId } from '@app/data-dgql/id';\nimport { DataNode } from '@app/data-dgql/query';\nimport { Subscription } from 'rxjs';\nimport {RemoveDialogComponent} from '@app/dialogs/remove-dialog/remove-dialog.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\n\n/**\n * This component displays an issue comment.\n * The comment will be subscribed to lazily (see {@link DataNode#subscribeLazy}).\n */\n@Component({\n  selector: 'app-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.scss']\n})\nexport class CommentComponent implements OnInit, OnDestroy {\n  /** If true, this comment component is actually editing an issue's body. */\n  @Input() isIssueBody: boolean;\n  /** The comment or issue ID. If this is an issue ID, set {@link #isIssueBody} to true. */\n  @Input() commentId: NodeId;\n  /** The issue this comment belongs to. */\n  @Input() issueId: NodeId;\n\n  /** Used to format time. */\n  public timeFormatter = new TimeFormatter();\n  /** True if the comment body is being edited. */\n  public editBody = false;\n  /** True if the comment body is being saved. */\n  public savingBody = false;\n\n  /** @ignore */\n  comment$: DataNode;\n  /** @ignore */\n  commentSub: Subscription;\n\n  constructor(private dataService: DataService,\n              private dialog: MatDialog,\n              private notify: UserNotifyService) {}\n\n  ngOnInit() {\n    this.comment$ = this.dataService.getNode(this.commentId);\n    this.commentSub = this.comment$.subscribeLazy();\n  }\n\n  ngOnDestroy() {\n    this.commentSub?.unsubscribe();\n  }\n\n  /**\n   * Edits the description of the current comment.\n   *\n   * @param body - The new description of the current issue or comment.\n   */\n  public editComment(body: string): void {\n    this.savingBody = true;\n    this.dataService.mutations.updateIssueComment(\n      Math.random().toString(),\n      this.commentId,\n      body\n    ).then(() => {\n      // only exit if successful\n      this.editBody = false;\n    }).finally(() => {\n      this.savingBody = false;\n    });\n  }\n\n  /**\n   * Deletes the current comment.\n   */\n  public deleteComment(): void {\n\n    const confirmDeleteDialogRef = this.dialog.open(RemoveDialogComponent,\n      {\n        data: {\n          title: 'Really delete comment ?',\n          messages: ['Are you sure you want to delete this comment ?',\n            'This action cannot be undone!']\n        }\n      });\n\n    confirmDeleteDialogRef.afterClosed().subscribe(del => {\n      if (del) {\n        // User confirmed deletion\n        this.dataService.mutations.deleteIssueComment(\n          Math.random().toString(),\n          this.issueId,\n          this.commentId\n        ).then(() => {\n          this.notify.notifyInfo('Successfully deleted comment');\n        });\n      }\n    },\n      error => this.notify.notifyError('Failed to delete project!', error));\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n      \n         commented\n        \n          {{this.timeFormatter.formatTimeDifference(comment.createdAt)}}\n        \n        \n          &sdot; edited\n          \n            {{this.timeFormatter.formatTimeDifference(comment.lastEditedAt)}}\n          \n        \n      \n\n      \n      \n      \n        Delete\n      \n      \n        Edit\n      \n    \n\n    \n    \n      \n    \n\n    \n    \n      \n      \n\n      \n        \n        Cancel\n        \n        \n          Save\n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./comment.component.scss\n                \n                @import '../issue-contents.component';\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                               commented                  {{this.timeFormatter.formatTimeDifference(comment.createdAt)}}                          ⋅ edited                      {{this.timeFormatter.formatTimeDifference(comment.lastEditedAt)}}                                                  Delete                    Edit                                                                      Cancel                          Save                    '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'CommentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ComponentContextMenuComponent.html":{"url":"components/ComponentContextMenuComponent.html","title":"component - ComponentContextMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ComponentContextMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/graphs/component-context-menu/component-context-menu.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component manages the component context menu as well as its content\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                component-context-menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./component-context-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                height\n                            \n                            \n                                nodeDetailsReady\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                updatePosition\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: ComponentContextMenuData, changeDetector: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:134\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ComponentContextMenuData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:175\n                \n            \n\n\n            \n                \n                    Close the context menu\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePosition\n                        \n                    \n                \n            \n            \n                \nupdatePosition(x: number, y: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:166\n                \n            \n\n\n            \n                \n                    Update the position of the context menu\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The X offset of the top left menu corner relative to the top left corner of the parent\n\n                                    \n                                \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Y offset of the top left menu corner relative to the top left corner of the parent\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ComponentContextMenuData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(COMPONENT_CONTEXT_MENU_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:136\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ComponentContextMenuComponent.LAST_HEIGHT\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:119\n                        \n                    \n\n            \n                \n                    Current height of the dialog\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nodeDetailsReady\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:121\n                        \n                    \n\n            \n                \n                    True if the node details component is loaded\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ComponentContextMenuComponent.LAST_WIDTH\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:117\n                        \n                    \n\n            \n                \n                    Current width of the dialog\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Inject,\n  Injectable,\n  InjectionToken,\n  Injector,\n  OnDestroy,\n  ViewChild\n} from '@angular/core';\nimport {ConnectedPosition, Overlay, OverlayRef} from '@angular/cdk/overlay';\nimport {ComponentPortal, PortalInjector} from '@angular/cdk/portal';\nimport {IssueGraphComponent} from '@app/graphs/issue-graph/issue-graph.component';\nimport {NodeDetailsComponent, NodeDetailsType, NodeUpdatedCallbackFn} from '@app/node-details/node-details.component';\n\n/**\n * Interface specifying the data required for the component context menu.\n * Note that this should not be used directly, instead the ComponentContextMenuService should be used to open a context\n * menu.\n */\ninterface ComponentContextMenuData {\n  /** Reference to the overlay used to display the context menu */\n  overlayRef: OverlayRef;\n  /** The position of the overlay */\n  position: ConnectedPosition;\n  /** The project id string */\n  projectId: string;\n  /** The node id string */\n  nodeId: string;\n  /** The type of node, either interface or component. Controls the content shown in the context menu */\n  type: NodeDetailsType;\n  /** A reference to the issue graph */\n  graph: IssueGraphComponent;\n}\n\nconst COMPONENT_CONTEXT_MENU_DATA = new InjectionToken('COMPONENT_CONTEXT_MENU_DATA');\n\n/**\n * Use this service to create a {@link ComponentContextMenuComponent}.\n */\n@Injectable({providedIn: 'root'})\nexport class ComponentContextMenuService {\n  constructor(private overlay: Overlay, private injector: Injector) {\n  }\n\n  /**\n   * Open a new component context menu\n   * @param parent The parent of the context menu\n   * @param x The X position relative to the top left corner of the parent\n   * @param y The Y position relative to the top left corner of the parent\n   * @param projectID The id of the project the node belongs to\n   * @param nodeID The id of the node\n   * @param nodeType The type of the node\n   * @param issueGraph A reference to the issue graph\n   * @return A reference to the context menu\n   */\n  open(parent: Element,\n       x: number, y: number,\n       projectID: string,\n       nodeID: string,\n       nodeType: NodeDetailsType,\n       issueGraph: IssueGraphComponent): ComponentContextMenuComponent {\n    const position = this.overlay.position().flexibleConnectedTo(parent);\n    const pos: ConnectedPosition = {\n      originX: 'start',\n      originY: 'top',\n      overlayX: 'start',\n      overlayY: 'top',\n      offsetX: x,\n      offsetY: y\n    };\n    position.withPositions([pos]);\n\n    const ref = this.overlay.create({\n      minWidth: 400,\n      minHeight: 200,\n      positionStrategy: position\n    });\n\n    const map = new WeakMap();\n    map.set(COMPONENT_CONTEXT_MENU_DATA, {\n      overlayRef: ref,\n      position: pos,\n      projectId: projectID,\n      nodeId: nodeID,\n      type: nodeType,\n      graph: issueGraph\n    });\n    const injector = new PortalInjector(this.injector, map);\n    return ref.attach(new ComponentPortal(ComponentContextMenuComponent, null, injector)).instance;\n  }\n}\n\n/**\n * This component manages the component context menu as well as its content\n */\n@Component({\n  styleUrls: ['component-context-menu.component.scss'],\n  templateUrl: './component-context-menu.component.html'\n})\nexport class ComponentContextMenuComponent implements AfterViewInit, OnDestroy {\n  /** @ignore */\n  private static MIN_WIDTH = 700;\n  /** @ignore */\n  private static MIN_HEIGHT = 400;\n  /** @ignore */\n  private static LAST_WIDTH = ComponentContextMenuComponent.MIN_WIDTH;\n  /** @ignore */\n  private static LAST_HEIGHT = ComponentContextMenuComponent.MIN_HEIGHT;\n  /** @ignore */\n  private resize = false;\n\n  /** Current width of the dialog */\n  width = ComponentContextMenuComponent.LAST_WIDTH;\n  /** Current height of the dialog */\n  height = ComponentContextMenuComponent.LAST_HEIGHT;\n  /** True if the node details component is loaded */\n  nodeDetailsReady: boolean;\n\n  /** @ignore */\n  @ViewChild('frame') frame: ElementRef;\n\n  /** @ignore */\n  @ViewChild('resizeCorner') set resizeCorner(content: ElementRef) {\n    if (content) {\n      content.nativeElement.addEventListener('mousedown', () => this.resize = true);\n    }\n  }\n\n  /** @ignore */\n  @ViewChild(NodeDetailsComponent) nodeDetails: NodeDetailsComponent;\n\n  constructor(@Inject(COMPONENT_CONTEXT_MENU_DATA) public data: ComponentContextMenuData,\n              private changeDetector: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit() {\n    this.frame.nativeElement.style.minWidth = ComponentContextMenuComponent.MIN_WIDTH + 'px';\n    this.frame.nativeElement.style.minHeight = ComponentContextMenuComponent.MIN_HEIGHT + 'px';\n    this.nodeDetailsReady = true;\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy(): void {\n    // TODO: Save in local storage?\n    ComponentContextMenuComponent.LAST_WIDTH = this.width;\n    ComponentContextMenuComponent.LAST_HEIGHT = this.height;\n  }\n\n  /** @ignore */\n  detailsCallback: NodeUpdatedCallbackFn = (nodeDeleted: boolean): void => {\n    this.data.graph.reload();\n    if (nodeDeleted) {\n      this.close();\n    }\n  }\n\n  /**\n   * Update the position of the context menu\n   * @param x The X offset of the top left menu corner relative to the top left corner of the parent\n   * @param y The Y offset of the top left menu corner relative to the top left corner of the parent\n   */\n  updatePosition(x: number, y: number): void {\n    this.data.position.offsetX = x;\n    this.data.position.offsetY = y;\n    this.data.overlayRef.getConfig().positionStrategy.apply();\n  }\n\n  /**\n   * Close the context menu\n   */\n  close(): void {\n    this.data.overlayRef.dispose();\n  }\n\n  /** @ignore */\n  @HostListener('window:mouseup')\n  private onMouseUp() {\n    this.resize = false;\n  }\n  \n  /** @ignore */\n  @HostListener('window:mousemove', ['$event'])\n  private onMouseMove(event: MouseEvent) {\n    if (!this.resize) {\n      return;\n    }\n\n    this.width = Math.max(this.width + event.movementX, ComponentContextMenuComponent.MIN_WIDTH);\n    this.height = Math.max(this.height + event.movementY, ComponentContextMenuComponent.MIN_HEIGHT);\n  }\n}\n\n    \n\n    \n        \n    \n        \n            {{this.nodeDetails.getNodeName()}}\n        \n        \n            \n        \n    \n\n    \n        {{this.data.nodeId}}\n        \n            \n        \n    \n\n\n\n\n    \n\n    \n                \n                    component-context-menu.component.scss\n                \n                @import \"src/styles/variables\";\n\n.frame {\n  padding: 24px;\n  background-color: $background-controls;\n  border-radius: 4px;\n  box-shadow: 0 11px 15px -7px rgb(0 0 0 / 20%), 0 24px 38px 3px rgb(0 0 0 / 14%), 0 9px 46px 8px rgb(0 0 0 / 12%);\n}\n\n.node-title {\n  width: 100%;\n  text-align: center;\n  margin: 0 0 20px;\n}\n\n.container{\n  height: calc(100% - 50px);\n  overflow: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{this.nodeDetails.getNodeName()}}                                                    {{this.data.nodeId}}                                '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'ComponentContextMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentContextMenuData.html":{"url":"interfaces/ComponentContextMenuData.html","title":"interface - ComponentContextMenuData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ComponentContextMenuData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/component-context-menu/component-context-menu.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface specifying the data required for the component context menu.\nNote that this should not be used directly, instead the ComponentContextMenuService should be used to open a context\nmenu.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            graph\n                                        \n                                \n                                \n                                        \n                                            nodeId\n                                        \n                                \n                                \n                                        \n                                            overlayRef\n                                        \n                                \n                                \n                                        \n                                            position\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        graph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        graph:         IssueGraphComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IssueGraphComponent\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A reference to the issue graph\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodeId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nodeId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The node id string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overlayRef\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overlayRef:     OverlayRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OverlayRef\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Reference to the overlay used to display the context menu\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:         ConnectedPosition\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ConnectedPosition\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The position of the overlay\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The project id string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         NodeDetailsType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeDetailsType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of node, either interface or component. Controls the content shown in the context menu\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Inject,\n  Injectable,\n  InjectionToken,\n  Injector,\n  OnDestroy,\n  ViewChild\n} from '@angular/core';\nimport {ConnectedPosition, Overlay, OverlayRef} from '@angular/cdk/overlay';\nimport {ComponentPortal, PortalInjector} from '@angular/cdk/portal';\nimport {IssueGraphComponent} from '@app/graphs/issue-graph/issue-graph.component';\nimport {NodeDetailsComponent, NodeDetailsType, NodeUpdatedCallbackFn} from '@app/node-details/node-details.component';\n\n/**\n * Interface specifying the data required for the component context menu.\n * Note that this should not be used directly, instead the ComponentContextMenuService should be used to open a context\n * menu.\n */\ninterface ComponentContextMenuData {\n  /** Reference to the overlay used to display the context menu */\n  overlayRef: OverlayRef;\n  /** The position of the overlay */\n  position: ConnectedPosition;\n  /** The project id string */\n  projectId: string;\n  /** The node id string */\n  nodeId: string;\n  /** The type of node, either interface or component. Controls the content shown in the context menu */\n  type: NodeDetailsType;\n  /** A reference to the issue graph */\n  graph: IssueGraphComponent;\n}\n\nconst COMPONENT_CONTEXT_MENU_DATA = new InjectionToken('COMPONENT_CONTEXT_MENU_DATA');\n\n/**\n * Use this service to create a {@link ComponentContextMenuComponent}.\n */\n@Injectable({providedIn: 'root'})\nexport class ComponentContextMenuService {\n  constructor(private overlay: Overlay, private injector: Injector) {\n  }\n\n  /**\n   * Open a new component context menu\n   * @param parent The parent of the context menu\n   * @param x The X position relative to the top left corner of the parent\n   * @param y The Y position relative to the top left corner of the parent\n   * @param projectID The id of the project the node belongs to\n   * @param nodeID The id of the node\n   * @param nodeType The type of the node\n   * @param issueGraph A reference to the issue graph\n   * @return A reference to the context menu\n   */\n  open(parent: Element,\n       x: number, y: number,\n       projectID: string,\n       nodeID: string,\n       nodeType: NodeDetailsType,\n       issueGraph: IssueGraphComponent): ComponentContextMenuComponent {\n    const position = this.overlay.position().flexibleConnectedTo(parent);\n    const pos: ConnectedPosition = {\n      originX: 'start',\n      originY: 'top',\n      overlayX: 'start',\n      overlayY: 'top',\n      offsetX: x,\n      offsetY: y\n    };\n    position.withPositions([pos]);\n\n    const ref = this.overlay.create({\n      minWidth: 400,\n      minHeight: 200,\n      positionStrategy: position\n    });\n\n    const map = new WeakMap();\n    map.set(COMPONENT_CONTEXT_MENU_DATA, {\n      overlayRef: ref,\n      position: pos,\n      projectId: projectID,\n      nodeId: nodeID,\n      type: nodeType,\n      graph: issueGraph\n    });\n    const injector = new PortalInjector(this.injector, map);\n    return ref.attach(new ComponentPortal(ComponentContextMenuComponent, null, injector)).instance;\n  }\n}\n\n/**\n * This component manages the component context menu as well as its content\n */\n@Component({\n  styleUrls: ['component-context-menu.component.scss'],\n  templateUrl: './component-context-menu.component.html'\n})\nexport class ComponentContextMenuComponent implements AfterViewInit, OnDestroy {\n  /** @ignore */\n  private static MIN_WIDTH = 700;\n  /** @ignore */\n  private static MIN_HEIGHT = 400;\n  /** @ignore */\n  private static LAST_WIDTH = ComponentContextMenuComponent.MIN_WIDTH;\n  /** @ignore */\n  private static LAST_HEIGHT = ComponentContextMenuComponent.MIN_HEIGHT;\n  /** @ignore */\n  private resize = false;\n\n  /** Current width of the dialog */\n  width = ComponentContextMenuComponent.LAST_WIDTH;\n  /** Current height of the dialog */\n  height = ComponentContextMenuComponent.LAST_HEIGHT;\n  /** True if the node details component is loaded */\n  nodeDetailsReady: boolean;\n\n  /** @ignore */\n  @ViewChild('frame') frame: ElementRef;\n\n  /** @ignore */\n  @ViewChild('resizeCorner') set resizeCorner(content: ElementRef) {\n    if (content) {\n      content.nativeElement.addEventListener('mousedown', () => this.resize = true);\n    }\n  }\n\n  /** @ignore */\n  @ViewChild(NodeDetailsComponent) nodeDetails: NodeDetailsComponent;\n\n  constructor(@Inject(COMPONENT_CONTEXT_MENU_DATA) public data: ComponentContextMenuData,\n              private changeDetector: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit() {\n    this.frame.nativeElement.style.minWidth = ComponentContextMenuComponent.MIN_WIDTH + 'px';\n    this.frame.nativeElement.style.minHeight = ComponentContextMenuComponent.MIN_HEIGHT + 'px';\n    this.nodeDetailsReady = true;\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy(): void {\n    // TODO: Save in local storage?\n    ComponentContextMenuComponent.LAST_WIDTH = this.width;\n    ComponentContextMenuComponent.LAST_HEIGHT = this.height;\n  }\n\n  /** @ignore */\n  detailsCallback: NodeUpdatedCallbackFn = (nodeDeleted: boolean): void => {\n    this.data.graph.reload();\n    if (nodeDeleted) {\n      this.close();\n    }\n  }\n\n  /**\n   * Update the position of the context menu\n   * @param x The X offset of the top left menu corner relative to the top left corner of the parent\n   * @param y The Y offset of the top left menu corner relative to the top left corner of the parent\n   */\n  updatePosition(x: number, y: number): void {\n    this.data.position.offsetX = x;\n    this.data.position.offsetY = y;\n    this.data.overlayRef.getConfig().positionStrategy.apply();\n  }\n\n  /**\n   * Close the context menu\n   */\n  close(): void {\n    this.data.overlayRef.dispose();\n  }\n\n  /** @ignore */\n  @HostListener('window:mouseup')\n  private onMouseUp() {\n    this.resize = false;\n  }\n  \n  /** @ignore */\n  @HostListener('window:mousemove', ['$event'])\n  private onMouseMove(event: MouseEvent) {\n    if (!this.resize) {\n      return;\n    }\n\n    this.width = Math.max(this.width + event.movementX, ComponentContextMenuComponent.MIN_WIDTH);\n    this.height = Math.max(this.height + event.movementY, ComponentContextMenuComponent.MIN_HEIGHT);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ComponentContextMenuService.html":{"url":"injectables/ComponentContextMenuService.html","title":"injectable - ComponentContextMenuService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ComponentContextMenuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/component-context-menu/component-context-menu.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Use this service to create a ComponentContextMenuComponent.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(overlay: Overlay, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        overlay\n                                                  \n                                                        \n                                                                    Overlay\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        open\n                        \n                    \n                \n            \n            \n                \nopen(parent: Element, x: number, y: number, projectID: string, nodeID: string, nodeType: NodeDetailsType, issueGraph: IssueGraphComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:60\n                \n            \n\n\n            \n                \n                    Open a new component context menu\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    parent\n                                    \n                                            Element\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The parent of the context menu\n\n                                    \n                                \n                                \n                                    x\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The X position relative to the top left corner of the parent\n\n                                    \n                                \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Y position relative to the top left corner of the parent\n\n                                    \n                                \n                                \n                                    projectID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id of the project the node belongs to\n\n                                    \n                                \n                                \n                                    nodeID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id of the node\n\n                                    \n                                \n                                \n                                    nodeType\n                                    \n                                                NodeDetailsType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The type of the node\n\n                                    \n                                \n                                \n                                    issueGraph\n                                    \n                                                IssueGraphComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A reference to the issue graph\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ComponentContextMenuComponent\n\n                    \n                    \n                        A reference to the context menu\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Inject,\n  Injectable,\n  InjectionToken,\n  Injector,\n  OnDestroy,\n  ViewChild\n} from '@angular/core';\nimport {ConnectedPosition, Overlay, OverlayRef} from '@angular/cdk/overlay';\nimport {ComponentPortal, PortalInjector} from '@angular/cdk/portal';\nimport {IssueGraphComponent} from '@app/graphs/issue-graph/issue-graph.component';\nimport {NodeDetailsComponent, NodeDetailsType, NodeUpdatedCallbackFn} from '@app/node-details/node-details.component';\n\n/**\n * Interface specifying the data required for the component context menu.\n * Note that this should not be used directly, instead the ComponentContextMenuService should be used to open a context\n * menu.\n */\ninterface ComponentContextMenuData {\n  /** Reference to the overlay used to display the context menu */\n  overlayRef: OverlayRef;\n  /** The position of the overlay */\n  position: ConnectedPosition;\n  /** The project id string */\n  projectId: string;\n  /** The node id string */\n  nodeId: string;\n  /** The type of node, either interface or component. Controls the content shown in the context menu */\n  type: NodeDetailsType;\n  /** A reference to the issue graph */\n  graph: IssueGraphComponent;\n}\n\nconst COMPONENT_CONTEXT_MENU_DATA = new InjectionToken('COMPONENT_CONTEXT_MENU_DATA');\n\n/**\n * Use this service to create a {@link ComponentContextMenuComponent}.\n */\n@Injectable({providedIn: 'root'})\nexport class ComponentContextMenuService {\n  constructor(private overlay: Overlay, private injector: Injector) {\n  }\n\n  /**\n   * Open a new component context menu\n   * @param parent The parent of the context menu\n   * @param x The X position relative to the top left corner of the parent\n   * @param y The Y position relative to the top left corner of the parent\n   * @param projectID The id of the project the node belongs to\n   * @param nodeID The id of the node\n   * @param nodeType The type of the node\n   * @param issueGraph A reference to the issue graph\n   * @return A reference to the context menu\n   */\n  open(parent: Element,\n       x: number, y: number,\n       projectID: string,\n       nodeID: string,\n       nodeType: NodeDetailsType,\n       issueGraph: IssueGraphComponent): ComponentContextMenuComponent {\n    const position = this.overlay.position().flexibleConnectedTo(parent);\n    const pos: ConnectedPosition = {\n      originX: 'start',\n      originY: 'top',\n      overlayX: 'start',\n      overlayY: 'top',\n      offsetX: x,\n      offsetY: y\n    };\n    position.withPositions([pos]);\n\n    const ref = this.overlay.create({\n      minWidth: 400,\n      minHeight: 200,\n      positionStrategy: position\n    });\n\n    const map = new WeakMap();\n    map.set(COMPONENT_CONTEXT_MENU_DATA, {\n      overlayRef: ref,\n      position: pos,\n      projectId: projectID,\n      nodeId: nodeID,\n      type: nodeType,\n      graph: issueGraph\n    });\n    const injector = new PortalInjector(this.injector, map);\n    return ref.attach(new ComponentPortal(ComponentContextMenuComponent, null, injector)).instance;\n  }\n}\n\n/**\n * This component manages the component context menu as well as its content\n */\n@Component({\n  styleUrls: ['component-context-menu.component.scss'],\n  templateUrl: './component-context-menu.component.html'\n})\nexport class ComponentContextMenuComponent implements AfterViewInit, OnDestroy {\n  /** @ignore */\n  private static MIN_WIDTH = 700;\n  /** @ignore */\n  private static MIN_HEIGHT = 400;\n  /** @ignore */\n  private static LAST_WIDTH = ComponentContextMenuComponent.MIN_WIDTH;\n  /** @ignore */\n  private static LAST_HEIGHT = ComponentContextMenuComponent.MIN_HEIGHT;\n  /** @ignore */\n  private resize = false;\n\n  /** Current width of the dialog */\n  width = ComponentContextMenuComponent.LAST_WIDTH;\n  /** Current height of the dialog */\n  height = ComponentContextMenuComponent.LAST_HEIGHT;\n  /** True if the node details component is loaded */\n  nodeDetailsReady: boolean;\n\n  /** @ignore */\n  @ViewChild('frame') frame: ElementRef;\n\n  /** @ignore */\n  @ViewChild('resizeCorner') set resizeCorner(content: ElementRef) {\n    if (content) {\n      content.nativeElement.addEventListener('mousedown', () => this.resize = true);\n    }\n  }\n\n  /** @ignore */\n  @ViewChild(NodeDetailsComponent) nodeDetails: NodeDetailsComponent;\n\n  constructor(@Inject(COMPONENT_CONTEXT_MENU_DATA) public data: ComponentContextMenuData,\n              private changeDetector: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit() {\n    this.frame.nativeElement.style.minWidth = ComponentContextMenuComponent.MIN_WIDTH + 'px';\n    this.frame.nativeElement.style.minHeight = ComponentContextMenuComponent.MIN_HEIGHT + 'px';\n    this.nodeDetailsReady = true;\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy(): void {\n    // TODO: Save in local storage?\n    ComponentContextMenuComponent.LAST_WIDTH = this.width;\n    ComponentContextMenuComponent.LAST_HEIGHT = this.height;\n  }\n\n  /** @ignore */\n  detailsCallback: NodeUpdatedCallbackFn = (nodeDeleted: boolean): void => {\n    this.data.graph.reload();\n    if (nodeDeleted) {\n      this.close();\n    }\n  }\n\n  /**\n   * Update the position of the context menu\n   * @param x The X offset of the top left menu corner relative to the top left corner of the parent\n   * @param y The Y offset of the top left menu corner relative to the top left corner of the parent\n   */\n  updatePosition(x: number, y: number): void {\n    this.data.position.offsetX = x;\n    this.data.position.offsetY = y;\n    this.data.overlayRef.getConfig().positionStrategy.apply();\n  }\n\n  /**\n   * Close the context menu\n   */\n  close(): void {\n    this.data.overlayRef.dispose();\n  }\n\n  /** @ignore */\n  @HostListener('window:mouseup')\n  private onMouseUp() {\n    this.resize = false;\n  }\n  \n  /** @ignore */\n  @HostListener('window:mousemove', ['$event'])\n  private onMouseMove(event: MouseEvent) {\n    if (!this.resize) {\n      return;\n    }\n\n    this.width = Math.max(this.width + event.movementX, ComponentContextMenuComponent.MIN_WIDTH);\n    this.height = Math.max(this.height + event.movementY, ComponentContextMenuComponent.MIN_HEIGHT);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentNode.html":{"url":"interfaces/ComponentNode.html","title":"interface - ComponentNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ComponentNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/issue-graph-nodes.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IssueNode\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         GraphComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GraphComponent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {GraphComponent, GraphInterface} from '@app/data/issue-graph/graph-data';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\n\nexport {\n  IssueNode, ComponentNode, InterfaceNode, IssueGroupContainerNode, RelationEdge,\n  createComponentNode, createInterfaceNode, createIssueGroupContainerNode, createIssueFolderNode,\n  createRelationEdge, createConsumptionEdge, createInterfaceProvisionEdge,\n  Position,\n  getIssueFolderId\n};\n\nexport enum NodeType {\n  Component = 'component',\n  Interface = 'interface',\n  InterfaceConsumer = 'interface-connect',\n  IssueGroupContainer = 'issue-group-container'\n}\n\n/**\n * This file includes type definitions and creation functions (think constructors)\n * for nodes and edges that are added to the graph editor in order to visualize the project.\n * Since the data that is stored with these differs based on what they represent (e.g.\n * interface vs component node) we give each their own type. We do this by extending\n * the Node class or the Edge class of the grapheditor. These classes are instantiated\n * via calls to the contained create* functions within the drawGraph method of the IssueGraphComponent.\n */\n\ninterface IssueNode extends Node {\n  id: string;\n  title: string;\n  issueGroupContainer?: IssueGroupContainerNode;\n}\n\ninterface ComponentNode extends IssueNode {\n  data: GraphComponent;\n}\n\nfunction createComponentNode(component: GraphComponent, position: Position): ComponentNode {\n  return {\n    ...(position || zeroPosition),\n    id: component.id,\n    title: component.name,\n    type: NodeType.Component,\n    data: component\n  };\n}\n\ninterface InterfaceNode extends IssueNode {\n  offeredById: string;\n}\n\nfunction createInterfaceNode(intrface: GraphInterface, position: Position): InterfaceNode {\n  return {\n    ...(position || zeroPosition),\n    id: intrface.id,\n    title: intrface.name,\n    type: NodeType.Interface,\n    offeredById: intrface.offeredBy,\n  };\n}\n\ninterface IssueGroupContainerNode extends Node {\n  position: string;\n  issueGroupNodeIds: Set;\n}\n\nfunction createIssueGroupContainerNode(node: IssueNode): IssueGroupContainerNode {\n  return {\n    id: `${node.id}__issue-group-container`,\n    type: NodeType.IssueGroupContainer,\n    dynamicTemplate: 'issue-group-container',\n    x: 0,\n    y: 0,\n    position: 'bottom',\n    issueGroupNodeIds: new Set(),\n  };\n}\n\ninterface IssueFolderNode extends Node {\n  type: IssueCategory;\n  issueCount: string;\n}\n\nfunction createIssueFolderNode(node: IssueNode, issueCategory: IssueCategory, issueCount: string): IssueFolderNode {\n  return {\n    id: getIssueFolderId(node.id, issueCategory),\n    type: issueCategory,\n    x: 0,\n    y: 0,\n    issues: new Set(),\n    issueCount\n  };\n}\n\ninterface RelationEdge extends Edge {\n  sourceIssues: Set;\n}\n\nfunction createRelationEdge(sourceId: string, targetId: string, edgeType = folderEdgeTypes.RelatedTo): RelationEdge {\n  return {\n    id: `s${sourceId}t${targetId}r${edgeType}`,\n    source: sourceId,\n    target: targetId,\n    type: folderEdgeTypes.RelatedTo,\n    markerEnd: {\n      template: 'arrow',\n      relativeRotation: 0,\n    },\n    dragHandles: [],\n    sourceIssues: new Set()\n  };\n}\n\nfunction createConsumptionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.InterfaceConsumer,\n    markerEnd: {\n      template: 'interface-connector',\n      relativeRotation: 0,\n    },\n  };\n}\n\nfunction createInterfaceProvisionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.Interface,\n    dragHandles: [],\n  };\n}\n\nfunction getIssueFolderId(id: string, issueCategory: IssueCategory): string {\n  return `${id}__${issueCategory}`;\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst zeroPosition = {x: 0, y: 0};\n\nenum folderEdgeTypes {\n  RelatedTo = 'relatedTo',\n  Depends = 'dependency',\n  Duplicates = 'duplicate'\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ComponentStoreService.html":{"url":"injectables/ComponentStoreService.html","title":"injectable - ComponentStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ComponentStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/component/component-store.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Provides updating, deleting and retrieving components from the backend.\nObjects like updateComponentMutation are injected and were created by a codegenerator based on\nthe mutation UpdateComponent in the component.graphql file in this folder. The same hold for the\nother mutation and query objects.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createComponent\n                            \n                            \n                                deleteComponent\n                            \n                            \n                                getBasicComponent\n                            \n                            \n                                getComponentInterfaces\n                            \n                            \n                                getComponentLabels\n                            \n                            \n                                getFullComponent\n                            \n                            \n                                updateComponent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(updateComponentMutation: UpdateComponentGQL, deleteComponentMutation: DeleteComponentGQL, getFullComponentQuery: GetComponentGQL, createComponentMutation: CreateComponentGQL, getLabelsQuery: GetComponentLabelsGQL, getBasicComponentQuery: GetBasicComponentGQL, getComponentInterfacesQuery: GetComponentInterfacesGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/component/component-store.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        updateComponentMutation\n                                                  \n                                                        \n                                                                    UpdateComponentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deleteComponentMutation\n                                                  \n                                                        \n                                                                    DeleteComponentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getFullComponentQuery\n                                                  \n                                                        \n                                                                    GetComponentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createComponentMutation\n                                                  \n                                                        \n                                                                    CreateComponentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getLabelsQuery\n                                                  \n                                                        \n                                                                    GetComponentLabelsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getBasicComponentQuery\n                                                  \n                                                        \n                                                                    GetBasicComponentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getComponentInterfacesQuery\n                                                  \n                                                        \n                                                                    GetComponentInterfacesGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createComponent\n                        \n                    \n                \n            \n            \n                \ncreateComponent(input: CreateComponentInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/component/component-store.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            CreateComponentInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteComponent\n                        \n                    \n                \n            \n            \n                \ndeleteComponent(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/component/component-store.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBasicComponent\n                        \n                    \n                \n            \n            \n                \ngetBasicComponent(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/component/component-store.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getComponentInterfaces\n                        \n                    \n                \n            \n            \n                \ngetComponentInterfaces(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/component/component-store.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getComponentLabels\n                        \n                    \n                \n            \n            \n                \ngetComponentLabels(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/component/component-store.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFullComponent\n                        \n                    \n                \n            \n            \n                \ngetFullComponent(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/component/component-store.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateComponent\n                        \n                    \n                \n            \n            \n                \nupdateComponent(input: UpdateComponentInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/component/component-store.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            UpdateComponentInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {\n  CreateComponentGQL,\n  CreateComponentInput,\n  DeleteComponentGQL,\n  DeleteComponentInput,\n  GetBasicComponentGQL,\n  GetBasicComponentQuery,\n  GetComponentGQL,\n  GetComponentInterfacesGQL,\n  GetComponentInterfacesQuery,\n  GetComponentLabelsGQL,\n  GetComponentLabelsQuery,\n  GetComponentQuery,\n  UpdateComponentGQL,\n  UpdateComponentInput\n} from 'src/generated/graphql';\nimport {map} from 'rxjs/operators';\n\n/**\n * Provides updating, deleting and retrieving components from the backend.\n * Objects like updateComponentMutation are injected and were created by a codegenerator based on\n * the mutation UpdateComponent in the component.graphql file in this folder. The same hold for the\n * other mutation and query objects.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComponentStoreService {\n\n  constructor(private updateComponentMutation: UpdateComponentGQL,\n              private deleteComponentMutation: DeleteComponentGQL,\n              private getFullComponentQuery: GetComponentGQL,\n              private createComponentMutation: CreateComponentGQL,\n              private getLabelsQuery: GetComponentLabelsGQL,\n              private getBasicComponentQuery: GetBasicComponentGQL,\n              private getComponentInterfacesQuery: GetComponentInterfacesGQL) {\n  }\n\n  getComponentLabels(id: string): Observable {\n    return this.getLabelsQuery.fetch({id}).pipe(map(({data}) => data));\n  }\n\n  getBasicComponent(id: string): Observable {\n    return this.getBasicComponentQuery.fetch({id}).pipe(map(({data}) => data));\n  }\n\n  getFullComponent(id: string): Observable {\n    return this.getFullComponentQuery.fetch({id}).pipe(map(({data}) => data));\n  }\n\n  getComponentInterfaces(id: string): Observable {\n    return this.getComponentInterfacesQuery.fetch({id}).pipe(map(({data}) => data));\n  }\n\n  deleteComponent(id: string) {\n    const input: DeleteComponentInput = {\n      component: id\n    };\n    return this.deleteComponentMutation.mutate({input});\n  }\n\n  createComponent(input: CreateComponentInput) {\n    return this.createComponentMutation.mutate({input});\n  }\n\n  updateComponent(input: UpdateComponentInput) {\n    return this.updateComponentMutation.mutate({input});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ComponentsService.html":{"url":"injectables/ComponentsService.html","title":"injectable - ComponentsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ComponentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/queries/components.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getComponent\n                            \n                            \n                                getInterface\n                            \n                            \n                                listProjectComponents\n                            \n                            \n                                listProjectInterfaces\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(qListProjectComponents: ListProjectComponentsGQL, qListProjectInterfaces: ListProjectInterfacesGQL, qGetComponent: GetComponentGQL, qGetInterface: GetInterfaceGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data-dgql/queries/components.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        qListProjectComponents\n                                                  \n                                                        \n                                                                    ListProjectComponentsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qListProjectInterfaces\n                                                  \n                                                        \n                                                                    ListProjectInterfacesGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qGetComponent\n                                                  \n                                                        \n                                                                    GetComponentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qGetInterface\n                                                  \n                                                        \n                                                                    GetInterfaceGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getComponent\n                        \n                    \n                \n            \n            \n                \ngetComponent(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/queries/components.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInterface\n                        \n                    \n                \n            \n            \n                \ngetInterface(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/queries/components.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listProjectComponents\n                        \n                    \n                \n            \n            \n                \nlistProjectComponents(project: string, list: QueryListParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/queries/components.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    list\n                                    \n                                            QueryListParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listProjectInterfaces\n                        \n                    \n                \n            \n            \n                \nlistProjectInterfaces(project: string, list: QueryListParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/queries/components.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    list\n                                    \n                                            QueryListParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  ComponentFilter, ComponentInterfaceFilter,\n  GetComponentGQL, GetInterfaceGQL,\n  ListProjectComponentsGQL, ListProjectInterfacesGQL,\n} from 'src/generated/graphql-dgql';\nimport { promisifyApolloFetch, QueryListParams } from '@app/data-dgql/queries/util';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComponentsService {\n  constructor(\n    private qListProjectComponents: ListProjectComponentsGQL,\n    private qListProjectInterfaces: ListProjectInterfacesGQL,\n    private qGetComponent: GetComponentGQL,\n    private qGetInterface: GetInterfaceGQL,\n  ) {}\n\n  listProjectComponents(project: string, list: QueryListParams) {\n    return promisifyApolloFetch(this.qListProjectComponents.fetch({ project, ...list }));\n  }\n\n  listProjectInterfaces(project: string, list: QueryListParams) {\n    return promisifyApolloFetch(this.qListProjectInterfaces.fetch({ project, ...list }));\n  }\n\n  getComponent(id: string) {\n    return promisifyApolloFetch(this.qGetComponent.fetch({ id }));\n  }\n\n  getInterface(id: string) {\n    return promisifyApolloFetch(this.qGetInterface.fetch({ id }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateComponentData.html":{"url":"interfaces/CreateComponentData.html","title":"interface - CreateComponentData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateComponentData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dialogs/create-component-dialog/create-component-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            projectId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, Inject, Input, ViewChild} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {CreateComponentInput, ImsType} from 'src/generated/graphql';\nimport {IssueGraphStateService} from '@app/data/issue-graph/issue-graph-state.service';\nimport {ComponentStoreService} from '@app/data/component/component-store.service';\nimport {CCIMSValidators} from '@app/utils/validators';\nimport {QueryComponent} from '@app/utils/query-component/query.component';\n\n@Component({\n  selector: 'app-create-component-dialog',\n  templateUrl: './create-component-dialog.component.html',\n  styleUrls: ['./create-component-dialog.component.scss']\n})\nexport class CreateComponentDialogComponent {\n  @Input() projectId: string;\n  @ViewChild(QueryComponent) queryComponent: QueryComponent;\n\n  constructor(public dialogRef: MatDialogRef,\n              @Inject(MAT_DIALOG_DATA) public data: CreateComponentData,\n              private fb: FormBuilder,\n              private gs: IssueGraphStateService,\n              private componentStore: ComponentStoreService) {\n  }\n\n  // define validations\n  validationName = new FormControl('', [CCIMSValidators.nameFormatValidator, Validators.required]);\n  validationUrl = new FormControl('', [CCIMSValidators.urlValidator, Validators.required]);\n  validationIMS = new FormControl('', [CCIMSValidators.urlValidator, Validators.required]);\n  validationProvider = new FormControl('', Validators.required);\n  validationDescription = new FormControl('', CCIMSValidators.contentValidator);\n\n  // close dialog on cancel\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  // callback method for component creation\n  onOkClick(name: string, url: string, description: string, ims: string, provider: string): void {\n    // define the input for the database mutation - required fields are specified by the graphQL schema\n    // TODO: Add component to IMS?\n    const input: CreateComponentInput = {\n      name,\n      projects: [this.data.projectId],\n      description,\n      repositoryURL: url\n    };\n\n    this.queryComponent.listenTo(this.componentStore.createComponent(input), () => this.dialogRef.close());\n  }\n\n  checkImsType(returnFromSelect: string): ImsType {\n    if (returnFromSelect.localeCompare(ImsType.Github) === 0) {\n      return ImsType.Github;\n    }\n  }\n}\n\ninterface CreateComponentData {\n  projectId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateComponentDialogComponent.html":{"url":"components/CreateComponentDialogComponent.html","title":"component - CreateComponentDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateComponentDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/create-component-dialog/create-component-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-component-dialog\n            \n\n            \n                styleUrls\n                ./create-component-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-component-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                queryComponent\n                            \n                            \n                                validationDescription\n                            \n                            \n                                validationIMS\n                            \n                            \n                                validationName\n                            \n                            \n                                validationProvider\n                            \n                            \n                                validationUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkImsType\n                            \n                            \n                                onNoClick\n                            \n                            \n                                onOkClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: CreateComponentData, fb: FormBuilder, gs: IssueGraphStateService, componentStore: ComponentStoreService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        CreateComponentData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gs\n                                                  \n                                                        \n                                                                        IssueGraphStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        componentStore\n                                                  \n                                                        \n                                                                        ComponentStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkImsType\n                        \n                    \n                \n            \n            \n                \ncheckImsType(returnFromSelect: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    returnFromSelect\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ImsType\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onOkClick\n                        \n                    \n                \n            \n            \n                \nonOkClick(name: string, url: string, description: string, ims: string, provider: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ims\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    provider\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateComponentData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(QueryComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', CCIMSValidators.contentValidator)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationIMS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [CCIMSValidators.urlValidator, Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [CCIMSValidators.nameFormatValidator, Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationProvider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', Validators.required)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [CCIMSValidators.urlValidator, Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Inject, Input, ViewChild} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {CreateComponentInput, ImsType} from 'src/generated/graphql';\nimport {IssueGraphStateService} from '@app/data/issue-graph/issue-graph-state.service';\nimport {ComponentStoreService} from '@app/data/component/component-store.service';\nimport {CCIMSValidators} from '@app/utils/validators';\nimport {QueryComponent} from '@app/utils/query-component/query.component';\n\n@Component({\n  selector: 'app-create-component-dialog',\n  templateUrl: './create-component-dialog.component.html',\n  styleUrls: ['./create-component-dialog.component.scss']\n})\nexport class CreateComponentDialogComponent {\n  @Input() projectId: string;\n  @ViewChild(QueryComponent) queryComponent: QueryComponent;\n\n  constructor(public dialogRef: MatDialogRef,\n              @Inject(MAT_DIALOG_DATA) public data: CreateComponentData,\n              private fb: FormBuilder,\n              private gs: IssueGraphStateService,\n              private componentStore: ComponentStoreService) {\n  }\n\n  // define validations\n  validationName = new FormControl('', [CCIMSValidators.nameFormatValidator, Validators.required]);\n  validationUrl = new FormControl('', [CCIMSValidators.urlValidator, Validators.required]);\n  validationIMS = new FormControl('', [CCIMSValidators.urlValidator, Validators.required]);\n  validationProvider = new FormControl('', Validators.required);\n  validationDescription = new FormControl('', CCIMSValidators.contentValidator);\n\n  // close dialog on cancel\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  // callback method for component creation\n  onOkClick(name: string, url: string, description: string, ims: string, provider: string): void {\n    // define the input for the database mutation - required fields are specified by the graphQL schema\n    // TODO: Add component to IMS?\n    const input: CreateComponentInput = {\n      name,\n      projects: [this.data.projectId],\n      description,\n      repositoryURL: url\n    };\n\n    this.queryComponent.listenTo(this.componentStore.createComponent(input), () => this.dialogRef.close());\n  }\n\n  checkImsType(returnFromSelect: string): ImsType {\n    if (returnFromSelect.localeCompare(ImsType.Github) === 0) {\n      return ImsType.Github;\n    }\n  }\n}\n\ninterface CreateComponentData {\n  projectId: string;\n}\n\n    \n\n    \n        \n    Create Component\n    \n        \n            \n                Name\n                \n                Invalid component name\n            \n\n            \n                Repository-URL\n                \n                Enter a valid URL\n            \n\n            \n                Provider Type (IMS)\n                \n                    GitHub\n                \n                Select the Provider\n            \n\n            \n                IMS-URL\n                \n                Enter a valid URL\n            \n\n            \n                Description\n                \n            \n        \n    \n    \n        Cancel\n        \n            \n                Create\n            \n        \n    \n\n\n    \n\n    \n                \n                    ./create-component-dialog.component.scss\n                \n                @import 'src/styles/dialog';\n\n.dialog-wrapper {\n  max-width: 600px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Create Component                                        Name                                Invalid component name                                        Repository-URL                                Enter a valid URL                                        Provider Type (IMS)                                    GitHub                                Select the Provider                                        IMS-URL                                Enter a valid URL                                        Description                                                    Cancel                                    Create                        '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateComponentDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateEditLabelDialogComponent.html":{"url":"components/CreateEditLabelDialogComponent.html","title":"component - CreateEditLabelDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateEditLabelDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        This dialog creates or edits a label.\nSee CreateEditLabelDialogData for parameters.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-edit-label-dialog-component\n            \n\n            \n                styleUrls\n                ./create-edit-label-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-edit-label-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allComponentsList\n                            \n                            \n                                color\n                            \n                            \n                                componentList\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                loading\n                            \n                            \n                                validationLabelDescription\n                            \n                            \n                                validationLabelName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onConfirmClick\n                            \n                            \n                                onLabelCancelClick\n                            \n                            \n                                randomizeColor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialogRef, dataService: DataService, data: CreateEditLabelDialogData, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        CreateEditLabelDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onConfirmClick\n                        \n                    \n                \n            \n            \n                \nonConfirmClick(name: string, description?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:123\n                \n            \n\n\n            \n                \n                    When the user confirms their changes, attempt to mutate and return with the label data.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLabelCancelClick\n                        \n                    \n                \n            \n            \n                \nonLabelCancelClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:118\n                \n            \n\n\n            \n                \n                    When the user cancels label creation or editing, close and return with null.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        randomizeColor\n                        \n                    \n                \n            \n            \n                \nrandomizeColor()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:163\n                \n            \n\n\n            \n                \n                    Randomizes the label color.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allComponentsList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ListId\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:43\n                        \n                    \n\n            \n                \n                    Source list of all components.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#000000'\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:36\n                        \n                    \n\n            \n                \n                    Color state.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        componentList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NodeId[] | ListId\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:41\n                        \n                    \n\n            \n                \n                    Component list to be edited. For new labels, this is a list of node IDs. For existing labels, this is a ListId.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateEditLabelDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:38\n                        \n                    \n\n            \n                \n                    If true, the label that is to be edited is still loading.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationLabelDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', CCIMSValidators.contentValidator)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:34\n                        \n                    \n\n            \n                \n                    Validator for the label description.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationLabelName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required, Validators.maxLength(30)])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:32\n                        \n                    \n\n            \n                \n                    Validator for the label name.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {CCIMSValidators} from '@app/utils/validators';\nimport {encodeNodeId, ListId, ListType, NodeId} from '@app/data-dgql/id';\nimport DataService from '@app/data-dgql';\nimport { ComponentFilter, Label } from '../../../generated/graphql-dgql';\n\n/** Parameters for the create/edit label dialog component. */\nexport interface CreateEditLabelDialogData {\n  /** The raw project id. */\n  projectId: NodeId;\n  /** If set, will edit an existing label instead of creating a new one. */\n  editExisting?: NodeId;\n  /** If set, will select all components of this issue */\n  issueId?: NodeId[];\n}\n\n/**\n * This dialog creates or edits a label.\n *\n * See {@link CreateEditLabelDialogData} for parameters.\n */\n@Component({\n  selector: 'app-create-edit-label-dialog-component',\n  templateUrl: './create-edit-label-dialog.component.html',\n  styleUrls: ['./create-edit-label-dialog.component.scss']\n})\nexport class CreateEditLabelDialogComponent implements OnInit {\n  /** Validator for the label name. */\n  validationLabelName = new FormControl('', [Validators.required, Validators.maxLength(30)]);\n  /** Validator for the label description. */\n  validationLabelDescription = new FormControl('', CCIMSValidators.contentValidator);\n  /** Color state. */\n  color = '#000000';\n  /** If true, the label that is to be edited is still loading. */\n  loading = false;\n\n  /** Component list to be edited. For new labels, this is a list of node IDs. For existing labels, this is a ListId. */\n  componentList: NodeId[] | ListId = [];\n  /** Source list of all components. */\n  allComponentsList: ListId;\n\n  constructor(private dialog: MatDialogRef,\n              private dataService: DataService,\n              @Inject(MAT_DIALOG_DATA) public data: CreateEditLabelDialogData,\n              private notify: UserNotifyService) {\n  }\n\n  ngOnInit() {\n    if (this.data.editExisting) {\n      this.componentList = {\n        node: this.data.editExisting,\n        type: ListType.Components\n      };\n\n      this.loading = true;\n      const node = this.dataService.getNode(this.data.editExisting);\n      // reload data from source\n      node.invalidate();\n      node.load();\n      node.dataAsPromise().then(data => {\n        this.validationLabelName.setValue(data.name);\n        this.color = data.color;\n        this.validationLabelDescription.setValue(data.description);\n      }).catch(error => {\n        this.notify.notifyError('Could not load label data for editing');\n        this.dialog.close(null);\n      }).finally(() => {\n        this.loading = false;\n      });\n    } else {\n      this.randomizeColor();\n\n      if (this.data.issueId) {\n        this.componentList = this.data.issueId;\n      }\n    }\n\n    this.allComponentsList = {\n      node: this.data.projectId,\n      type: ListType.Components\n    };\n  }\n\n  /** @ignore used for set editor */\n  makeComponentFilter(search): ComponentFilter {\n    return { name: search };\n  }\n  /** @ignore used for set editor */\n  applyComponentChangeset = async (additions: NodeId[], deletions: NodeId[]) => {\n    if (Array.isArray(this.componentList)) {\n      const keySet = new Set(this.componentList.map(id => encodeNodeId(id)));\n      for (const item of additions) {\n        if (!keySet.has(encodeNodeId(item))) {\n          this.componentList.push(item);\n          keySet.add(encodeNodeId(item));\n        }\n      }\n      for (const item of deletions) {\n        if (keySet.has(encodeNodeId(item))) {\n          this.componentList.splice(this.componentList.indexOf(item), 1);\n          keySet.delete(encodeNodeId(item));\n        }\n      }\n    } else {\n      for (const item of additions) {\n        await this.dataService.mutations.addLabelToComponent(Math.random().toString(), this.data.editExisting, item);\n      }\n      for (const item of deletions) {\n        await this.dataService.mutations.removeLabelFromComponent(Math.random().toString(), this.data.editExisting, item);\n      }\n    }\n  }\n\n  /** When the user cancels label creation or editing, close and return with null. */\n  onLabelCancelClick(): void {\n    this.dialog.close(null);\n  }\n\n  /** When the user confirms their changes, attempt to mutate and return with the label data. */\n  onConfirmClick(name: string, description?: string) {\n    this.loading = true;\n\n    if (this.data.editExisting) {\n      this.dataService.mutations.updateLabel(\n        Math.random().toString(),\n        this.data.editExisting,\n        name,\n        this.color,\n        description\n      ).then(() => {\n        this.dialog.close({\n          id: this.data.editExisting.id,\n          name,\n          color: this.color,\n          description\n        } as Label);\n      }).catch((error) => {\n        this.notify.notifyError('Failed to update label!', error);\n      }).finally(() => {\n        this.loading = false;\n      });\n    } else {\n      this.dataService.mutations.createLabel(\n        Math.random().toString(),\n        this.componentList as NodeId[],\n        name,\n        this.color,\n        description\n      ).then(created => {\n        this.dialog.close(created as Label);\n      }).catch((error) => {\n        this.notify.notifyError('Failed to create label!', error);\n      }).finally(() => {\n        this.loading = false;\n      });\n    }\n  }\n\n  /** Randomizes the label color. */\n  randomizeColor(): void {\n    const r = ('00' + (Math.random() * 0xFF).toString(16)).slice(-2);\n    const g = ('00' + (Math.random() * 0xFF).toString(16)).slice(-2);\n    const b = ('00' + (Math.random() * 0xFF).toString(16)).slice(-2);\n\n    this.color = '#' + r + g + b;\n  }\n}\n\n    \n\n    \n        \n  \n    Update label\n  \n  \n    Create a new label\n  \n\n\n  \n    Components\n    Assign the label to a component\n    \n      {{item.name}}\n    \n  \n\n  \n    Label Name\n    \n    Invalid name\n  \n\n  \n    Description\n    \n  \n\n  \n    Color\n    \n    \n      refresh\n    \n  \n\n\n\n  Cancel\n  \n    \n      Apply\n    \n    \n      Create\n    \n  \n\n\n    \n\n    \n                \n                    ./create-edit-label-dialog.component.scss\n                \n                .component-selector {\n  margin-bottom: 16px;\n}\n\n.new-label-input {\n  padding: 6px;\n  width: 100%;\n}\n\n.error-label-create {\n  background-color: rgb(204, 58, 58);\n  color: white;\n  margin-top: 5px;\n}\n\n.color-randomize-button {\n  margin-left: 4px;\n}\n\n.mat-success {\n  background-color: green;\n  color: #fff;\n}\n\n.actions {\n  float: right;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Update label        Create a new label        Components    Assign the label to a component          {{item.name}}            Label Name        Invalid name        Description            Color              refresh        Cancel            Apply              Create      '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateEditLabelDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateEditLabelDialogData.html":{"url":"interfaces/CreateEditLabelDialogData.html","title":"interface - CreateEditLabelDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateEditLabelDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Parameters for the create/edit label dialog component.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            editExisting\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            issueId\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        editExisting\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        editExisting:         NodeId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeId\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If set, will edit an existing label instead of creating a new one.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issueId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issueId:         NodeId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeId[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If set, will select all components of this issue\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         NodeId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeId\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The raw project id.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {CCIMSValidators} from '@app/utils/validators';\nimport {encodeNodeId, ListId, ListType, NodeId} from '@app/data-dgql/id';\nimport DataService from '@app/data-dgql';\nimport { ComponentFilter, Label } from '../../../generated/graphql-dgql';\n\n/** Parameters for the create/edit label dialog component. */\nexport interface CreateEditLabelDialogData {\n  /** The raw project id. */\n  projectId: NodeId;\n  /** If set, will edit an existing label instead of creating a new one. */\n  editExisting?: NodeId;\n  /** If set, will select all components of this issue */\n  issueId?: NodeId[];\n}\n\n/**\n * This dialog creates or edits a label.\n *\n * See {@link CreateEditLabelDialogData} for parameters.\n */\n@Component({\n  selector: 'app-create-edit-label-dialog-component',\n  templateUrl: './create-edit-label-dialog.component.html',\n  styleUrls: ['./create-edit-label-dialog.component.scss']\n})\nexport class CreateEditLabelDialogComponent implements OnInit {\n  /** Validator for the label name. */\n  validationLabelName = new FormControl('', [Validators.required, Validators.maxLength(30)]);\n  /** Validator for the label description. */\n  validationLabelDescription = new FormControl('', CCIMSValidators.contentValidator);\n  /** Color state. */\n  color = '#000000';\n  /** If true, the label that is to be edited is still loading. */\n  loading = false;\n\n  /** Component list to be edited. For new labels, this is a list of node IDs. For existing labels, this is a ListId. */\n  componentList: NodeId[] | ListId = [];\n  /** Source list of all components. */\n  allComponentsList: ListId;\n\n  constructor(private dialog: MatDialogRef,\n              private dataService: DataService,\n              @Inject(MAT_DIALOG_DATA) public data: CreateEditLabelDialogData,\n              private notify: UserNotifyService) {\n  }\n\n  ngOnInit() {\n    if (this.data.editExisting) {\n      this.componentList = {\n        node: this.data.editExisting,\n        type: ListType.Components\n      };\n\n      this.loading = true;\n      const node = this.dataService.getNode(this.data.editExisting);\n      // reload data from source\n      node.invalidate();\n      node.load();\n      node.dataAsPromise().then(data => {\n        this.validationLabelName.setValue(data.name);\n        this.color = data.color;\n        this.validationLabelDescription.setValue(data.description);\n      }).catch(error => {\n        this.notify.notifyError('Could not load label data for editing');\n        this.dialog.close(null);\n      }).finally(() => {\n        this.loading = false;\n      });\n    } else {\n      this.randomizeColor();\n\n      if (this.data.issueId) {\n        this.componentList = this.data.issueId;\n      }\n    }\n\n    this.allComponentsList = {\n      node: this.data.projectId,\n      type: ListType.Components\n    };\n  }\n\n  /** @ignore used for set editor */\n  makeComponentFilter(search): ComponentFilter {\n    return { name: search };\n  }\n  /** @ignore used for set editor */\n  applyComponentChangeset = async (additions: NodeId[], deletions: NodeId[]) => {\n    if (Array.isArray(this.componentList)) {\n      const keySet = new Set(this.componentList.map(id => encodeNodeId(id)));\n      for (const item of additions) {\n        if (!keySet.has(encodeNodeId(item))) {\n          this.componentList.push(item);\n          keySet.add(encodeNodeId(item));\n        }\n      }\n      for (const item of deletions) {\n        if (keySet.has(encodeNodeId(item))) {\n          this.componentList.splice(this.componentList.indexOf(item), 1);\n          keySet.delete(encodeNodeId(item));\n        }\n      }\n    } else {\n      for (const item of additions) {\n        await this.dataService.mutations.addLabelToComponent(Math.random().toString(), this.data.editExisting, item);\n      }\n      for (const item of deletions) {\n        await this.dataService.mutations.removeLabelFromComponent(Math.random().toString(), this.data.editExisting, item);\n      }\n    }\n  }\n\n  /** When the user cancels label creation or editing, close and return with null. */\n  onLabelCancelClick(): void {\n    this.dialog.close(null);\n  }\n\n  /** When the user confirms their changes, attempt to mutate and return with the label data. */\n  onConfirmClick(name: string, description?: string) {\n    this.loading = true;\n\n    if (this.data.editExisting) {\n      this.dataService.mutations.updateLabel(\n        Math.random().toString(),\n        this.data.editExisting,\n        name,\n        this.color,\n        description\n      ).then(() => {\n        this.dialog.close({\n          id: this.data.editExisting.id,\n          name,\n          color: this.color,\n          description\n        } as Label);\n      }).catch((error) => {\n        this.notify.notifyError('Failed to update label!', error);\n      }).finally(() => {\n        this.loading = false;\n      });\n    } else {\n      this.dataService.mutations.createLabel(\n        Math.random().toString(),\n        this.componentList as NodeId[],\n        name,\n        this.color,\n        description\n      ).then(created => {\n        this.dialog.close(created as Label);\n      }).catch((error) => {\n        this.notify.notifyError('Failed to create label!', error);\n      }).finally(() => {\n        this.loading = false;\n      });\n    }\n  }\n\n  /** Randomizes the label color. */\n  randomizeColor(): void {\n    const r = ('00' + (Math.random() * 0xFF).toString(16)).slice(-2);\n    const g = ('00' + (Math.random() * 0xFF).toString(16)).slice(-2);\n    const b = ('00' + (Math.random() * 0xFF).toString(16)).slice(-2);\n\n    this.color = '#' + r + g + b;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateInterfaceData.html":{"url":"interfaces/CreateInterfaceData.html","title":"interface - CreateInterfaceData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateInterfaceData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            offeredById\n                                        \n                                \n                                \n                                        \n                                            position\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        offeredById\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        offeredById:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, Inject, Input} from '@angular/core';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {AuthenticationService} from '@app/auth/authentication.service';\nimport {IssueGraphStateService} from '@app/data/issue-graph/issue-graph-state.service';\nimport {InterfaceStoreService} from '@app/data/interface/interface-store.service';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {CCIMSValidators} from '@app/utils/validators';\n\n@Component({\n  selector: 'app-create-interface-dialog',\n  templateUrl: './create-interface-dialog.component.html',\n  styleUrls: ['./create-interface-dialog.component.scss']\n})\nexport class CreateInterfaceDialogComponent {\n  @Input()\n  projectId: string;\n\n  public loading: boolean;\n  public saveFailed: boolean;\n  validationName = new FormControl('', [CCIMSValidators.nameFormatValidator, Validators.required]);\n  validationDescription = new FormControl('', CCIMSValidators.contentValidator);\n\n  constructor(public dialogRef: MatDialogRef,\n              @Inject(MAT_DIALOG_DATA) public data: CreateInterfaceData,\n              private fb: FormBuilder,\n              private gs: IssueGraphStateService,\n              private authService: AuthenticationService,\n              private interfaceStore: InterfaceStoreService,\n              private notify: UserNotifyService) {\n    this.loading = false;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onOkClick(name: string, description: string, type: string): void {\n    this.loading = true;\n\n    // db mutation to create an interface\n    this.interfaceStore.create(name, this.data.offeredById, description).subscribe(({data}) => {\n      this.loading = false;\n\n      // close dialog and return the interface id of the created dialog\n      this.dialogRef.close(data.createComponentInterface.componentInterface.id);\n    }, (error) => {\n      this.notify.notifyError('Failed to create interface!', error);\n      this.loading = false;\n      this.saveFailed = true;\n    });\n  }\n\n  afterAlertClose(): void {\n    this.saveFailed = false;\n  }\n}\n\nexport interface CreateInterfaceData {\n  position: { x: number, y: number };\n  offeredById: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateInterfaceDialogComponent.html":{"url":"components/CreateInterfaceDialogComponent.html","title":"component - CreateInterfaceDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateInterfaceDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-interface-dialog\n            \n\n            \n                styleUrls\n                ./create-interface-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-interface-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Public\n                                saveFailed\n                            \n                            \n                                validationDescription\n                            \n                            \n                                validationName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterAlertClose\n                            \n                            \n                                onNoClick\n                            \n                            \n                                onOkClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: CreateInterfaceData, fb: FormBuilder, gs: IssueGraphStateService, authService: AuthenticationService, interfaceStore: InterfaceStoreService, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        CreateInterfaceData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gs\n                                                  \n                                                        \n                                                                        IssueGraphStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        interfaceStore\n                                                  \n                                                        \n                                                                        InterfaceStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterAlertClose\n                        \n                    \n                \n            \n            \n                \nafterAlertClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onOkClick\n                        \n                    \n                \n            \n            \n                \nonOkClick(name: string, description: string, type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateInterfaceData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveFailed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', CCIMSValidators.contentValidator)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [CCIMSValidators.nameFormatValidator, Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Inject, Input} from '@angular/core';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {AuthenticationService} from '@app/auth/authentication.service';\nimport {IssueGraphStateService} from '@app/data/issue-graph/issue-graph-state.service';\nimport {InterfaceStoreService} from '@app/data/interface/interface-store.service';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {CCIMSValidators} from '@app/utils/validators';\n\n@Component({\n  selector: 'app-create-interface-dialog',\n  templateUrl: './create-interface-dialog.component.html',\n  styleUrls: ['./create-interface-dialog.component.scss']\n})\nexport class CreateInterfaceDialogComponent {\n  @Input()\n  projectId: string;\n\n  public loading: boolean;\n  public saveFailed: boolean;\n  validationName = new FormControl('', [CCIMSValidators.nameFormatValidator, Validators.required]);\n  validationDescription = new FormControl('', CCIMSValidators.contentValidator);\n\n  constructor(public dialogRef: MatDialogRef,\n              @Inject(MAT_DIALOG_DATA) public data: CreateInterfaceData,\n              private fb: FormBuilder,\n              private gs: IssueGraphStateService,\n              private authService: AuthenticationService,\n              private interfaceStore: InterfaceStoreService,\n              private notify: UserNotifyService) {\n    this.loading = false;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onOkClick(name: string, description: string, type: string): void {\n    this.loading = true;\n\n    // db mutation to create an interface\n    this.interfaceStore.create(name, this.data.offeredById, description).subscribe(({data}) => {\n      this.loading = false;\n\n      // close dialog and return the interface id of the created dialog\n      this.dialogRef.close(data.createComponentInterface.componentInterface.id);\n    }, (error) => {\n      this.notify.notifyError('Failed to create interface!', error);\n      this.loading = false;\n      this.saveFailed = true;\n    });\n  }\n\n  afterAlertClose(): void {\n    this.saveFailed = false;\n  }\n}\n\nexport interface CreateInterfaceData {\n  position: { x: number, y: number };\n  offeredById: string;\n}\n\n    \n\n    \n        \n  Create Interface\n  \n    \n      \n        Name\n        \n        Invalid interface name\n      \n\n      \n        Interface-Type\n        \n      \n\n      \n        Description\n        \n      \n\n      \n    \n  \n  \n    Cancel\n    Create\n    \n  \n\n\n    \n\n    \n                \n                    ./create-interface-dialog.component.scss\n                \n                @import 'src/styles/dialog';\n\n.dialog-wrapper {\n  max-width: 600px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Create Interface                    Name                Invalid interface name                    Interface-Type                            Description                                Cancel    Create      '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateInterfaceDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateIssueDialogComponent.html":{"url":"components/CreateIssueDialogComponent.html","title":"component - CreateIssueDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateIssueDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-issue-dialog\n            \n\n            \n                styleUrls\n                ./create-issue-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-issue-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                category\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                issueData\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Public\n                                saveFailed\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterAlertClose\n                            \n                            \n                                onCreate\n                            \n                            \n                                onNoClick\n                            \n                            \n                                    Private\n                                updateSelectedItems\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, dialog: MatDialog, dataService: DataService, data: DialogData, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterAlertClose\n                        \n                    \n                \n            \n            \n                \nafterAlertClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCreate\n                        \n                    \n                \n            \n            \n                \nonCreate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick(showConfirmDialog: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    showConfirmDialog\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateSelectedItems\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSelectedItems()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:60\n                \n            \n\n\n            \n                \n                    Updates items to be selected in the Create Issue page,\nincluding 1) components and 2) locations.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('body')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issueData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalIssueData\n\n                    \n                \n                \n                    \n                        Default value : {\n    components: [],\n    locations: [],\n    labels: [],\n    assignees: [],\n    linksToIssues: [],\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveFailed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [CCIMSValidators.nameValidator, Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport { FormControl, Validators } from '@angular/forms';\nimport { IssueCategory } from '../../../generated/graphql';\nimport { UserNotifyService } from '@app/user-notify/user-notify.service';\nimport { CCIMSValidators } from '@app/utils/validators';\nimport { CreateIssueInput } from '../../../generated/graphql-dgql';\nimport { NodeId, NodeType } from '@app/data-dgql/id';\nimport DataService from '@app/data-dgql';\nimport {LocalIssueData} from '@app/issue-detail/issue-sidebar.component';\nimport {RemoveDialogComponent} from '@app/dialogs/remove-dialog/remove-dialog.component';\n\n@Component({\n  selector: 'app-create-issue-dialog',\n  templateUrl: './create-issue-dialog.component.html',\n  styleUrls: ['./create-issue-dialog.component.scss']\n})\n/**\n * This component opens a dialog for the issue creation.\n */\nexport class CreateIssueDialogComponent implements OnInit {\n  @ViewChild('body') body;\n\n  public loading = false;\n  public saveFailed = false;\n\n  constructor(public dialogRef: MatDialogRef,\n              private dialog: MatDialog,\n              private dataService: DataService,\n              @Inject(MAT_DIALOG_DATA) public data: DialogData,\n              private notify: UserNotifyService\n  ) {\n  }\n\n  // form controls for the form fields\n  title = new FormControl('', [CCIMSValidators.nameValidator, Validators.required]);\n  category = new FormControl('', [Validators.required]);\n\n  public issueData: LocalIssueData = {\n    components: [],\n    locations: [],\n    labels: [],\n    assignees: [],\n    linksToIssues: [],\n  };\n\n  ngOnInit(): void {\n    // sets up the issue category as Unclassified\n    this.category.setValue(IssueCategory.Unclassified);\n    this.dialogRef.disableClose = true;\n\n    // updates items to be selected\n    this.updateSelectedItems();\n  }\n\n  /**\n   * Updates items to be selected in the Create Issue page,\n   * including 1) components and 2) locations.\n   */\n  private updateSelectedItems() {\n    // updates components\n    for (const componentId of this.data.components) {\n      this.issueData.components.push(componentId);\n      this.issueData.locations.push(componentId);\n    }\n\n    if (this.data.locations) {\n      // updates locations\n      for (const componentId of this.data.locations) {\n        this.issueData.locations.push(componentId);\n      }\n    }\n  }\n\n  onNoClick(showConfirmDialog: boolean): void {\n    if (showConfirmDialog) {\n      this.dialog.open(RemoveDialogComponent,\n        {\n          data: {\n            title: 'Really discard issue?',\n            messages: ['Are you sure you want to discard this issue?'],\n            confirmButtonText: 'Confirm'\n          }\n        }).afterClosed().subscribe((close) => {\n        if (close) {\n          this.dialogRef.close();\n        }\n      });\n    } else {\n      this.dialogRef.close();\n    }\n  }\n\n  afterAlertClose(): void {\n    this.saveFailed = false;\n  }\n\n  onCreate() {\n    const issueData: CreateIssueInput = {\n      title: this.title.value,\n      body: this.body.code,\n      category: this.category.value,\n      clientMutationID: Math.random().toString(36),\n      components: this.issueData.components.map(node => node.id),\n      locations: this.issueData.locations.map(node => node.id),\n      labels: this.issueData.labels.map(node => node.id),\n      assignees: this.issueData.assignees.map(node => node.id),\n    };\n    this.loading = true;\n    this.saveFailed = false;\n    this.dataService.mutations.createIssue(issueData).then(async result => {\n      const issueId = { type: NodeType.Issue, id: result.id };\n      const promises = [];\n      for (const linked of this.issueData.linksToIssues) {\n        promises.push(this.dataService.mutations.linkIssue(Math.random().toString(), issueId, linked).catch(err => {\n          this.notify.notifyError('Failed to link issue!', err);\n          // aborting on this error would cause weird non-recoverable state so we won't rethrow it\n        }));\n      }\n      await Promise.all(promises);\n\n      this.dialogRef.close(true);\n    }).catch(err => {\n      this.notify.notifyError('Failed to create issue!', err);\n      this.saveFailed = true;\n    }).finally(() => {\n      this.loading = false;\n    });\n  }\n}\n\n/**\n * Interface that defines what data is injected to the dialog.\n */\nexport interface DialogData {\n  projectId: string;\n  // initial state of the issue's component list\n  components: NodeId[];\n  // initial state of the issue's location list\n  locations: NodeId[];\n}\n\n    \n\n    \n        \nCreate Issue\n\n\n\n  \n\n    \n    \n      Title\n      \n      Invalid issue title\n    \n\n    \n    \n\n    \n    \n      \n        \n        Unclassified\n      \n      \n        \n        Bug\n      \n      \n        \n        Feature Request\n      \n    \n\n    \n    \n\n    \n    \n  \n\n\n\n\n\n\n  \n   0 || title.value.length > 0)\">\n    Cancel\n  \n\n  \n  Create\n  \n\n\n    \n\n    \n                \n                    ./create-issue-dialog.component.scss\n                \n                @import 'src/styles/dialog';\n\n.category-selector {\n  width: 100%;\n  margin-bottom: 8px;\n\n  mat-button-toggle {\n    width: 100%;\n\n    ::ng-deep &.mat-button-toggle-checked {\n      font-weight: 600;\n    }\n  }\n}\n\n@keyframes spinner {\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Create Issue                Title            Invalid issue title                                          Unclassified                            Bug                            Feature Request                                 0 || title.value.length > 0)\">    Cancel      Create  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateIssueDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateProjectDialogComponent.html":{"url":"components/CreateProjectDialogComponent.html","title":"component - CreateProjectDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateProjectDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/create-project-dialog/create-project-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component provides a dialog for the project creation\nThe user can set a name and description\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-project-dialog\n            \n\n            \n                styleUrls\n                ./create-project-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-project-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                descriptionValidator\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                nameValidator\n                            \n                            \n                                    Public\n                                saveFailed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterAlertClose\n                            \n                            \n                                onNoClick\n                            \n                            \n                                onOkClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, ps: ProjectStoreService, fb: FormBuilder, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ps\n                                                  \n                                                        \n                                                                        ProjectStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterAlertClose\n                        \n                    \n                \n            \n            \n                \nafterAlertClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onOkClick\n                        \n                    \n                \n            \n            \n                \nonOkClick(name: string, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        descriptionValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', CCIMSValidators.contentValidator)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nameValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [CCIMSValidators.nameFormatValidator, Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveFailed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {ProjectStoreService} from '@app/data/project/project-store.service';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {CCIMSValidators} from \"@app/utils/validators\";\n\n/**\n * This component provides a dialog for the project creation\n * The user can set a name and description\n *\n */\n@Component({\n  selector: 'app-create-project-dialog',\n  templateUrl: './create-project-dialog.component.html',\n  styleUrls: ['./create-project-dialog.component.scss']\n})\nexport class CreateProjectDialogComponent {\n  @Input() name: string;\n  @Input() description: string;\n  public loading: boolean;\n  public saveFailed: boolean;\n\n  constructor(public dialogRef: MatDialogRef,\n              private ps: ProjectStoreService,\n              private fb: FormBuilder,\n              private notify: UserNotifyService) {\n    this.loading = false;\n  }\n\n  nameValidator = new FormControl('', [CCIMSValidators.nameFormatValidator, Validators.required]);\n  descriptionValidator = new FormControl('', CCIMSValidators.contentValidator);\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  afterAlertClose(): void {\n    this.saveFailed = false;\n  }\n\n  // after the user clicked on the create button the project creation mutation is fired\n  onOkClick(name: string, description: string): void {\n    this.loading = true;\n    this.ps.create(name, description).subscribe(({data}) => {\n      this.loading = false;\n      this.dialogRef.close({createdProjectId: data.createProject.project.id});\n    }, (error) => {\n      this.notify.notifyError('Failed to create project!', error);\n      this.loading = false;\n      this.saveFailed = true;\n    });\n  }\n}\n\n    \n\n    \n        \nCreate Project\n\n\n\n\n  \n\n    \n    \n      Name\n      \n      \n        Invalid project name\n      \n    \n\n    \n    \n      Description\n      \n      Invalid project description\n    \n\n    \n    \n  \n\n\n\n\n\n  \n  \n    Cancel\n  \n  \n  \n  \n    Create\n  \n\n\n\n    \n\n    \n                \n                    ./create-project-dialog.component.scss\n                \n                @import 'src/styles/dialog';\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Create Project                Name                    Invalid project name                        Description            Invalid project description                      Cancel            Create  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateProjectDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CursorPaginatorComponent.html":{"url":"components/CursorPaginatorComponent.html","title":"component - CursorPaginatorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CursorPaginatorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/cursor-paginator/cursor-paginator.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component controls the cursor in a DataList using arrows and a page size selector.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cursor-paginator\n            \n\n            \n                styleUrls\n                ./cursor-paginator.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./cursor-paginator.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                list\n                            \n                            \n                                pageSizes\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        list\n                    \n                \n                \n                    \n                        Type :         DataList\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/cursor-paginator/cursor-paginator.component.ts:14\n                            \n                        \n                \n                    \n                        The DataList that will be controlled.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        pageSizes\n                    \n                \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/cursor-paginator/cursor-paginator.component.ts:16\n                            \n                        \n                \n                    \n                        Available page sizes; e.g. [10, 25, 100]\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { DataList } from '@app/data-dgql/query';\n\n/**\n * This component controls the cursor in a {@link DataList} using arrows and a page size selector.\n */\n@Component({\n  selector: 'app-cursor-paginator',\n  templateUrl: './cursor-paginator.component.html',\n  styleUrls: ['./cursor-paginator.component.scss']\n})\nexport class CursorPaginatorComponent {\n  /** The DataList that will be controlled. */\n  @Input() list: DataList;\n  /** Available page sizes; e.g. [10, 25, 100] */\n  @Input() pageSizes: number[];\n}\n\n    \n\n    \n        \n     1\">\n        Items per page:\n        \n            \n                \n                    {{size}}\n                \n            \n        \n    \n    \n        \n            first_page\n        \n        \n            chevron_left\n        \n        \n            chevron_right\n        \n    \n\n\n    \n\n    \n                \n                    ./cursor-paginator.component.scss\n                \n                .cursor-paginator {\n  display: flex;\n  justify-content: flex-end;\n  color: fade-in(black, 0.54);\n  padding: 8px 16px;\n\n  .page-size-control {\n    margin-right: 16px;\n\n    .page-size-label {\n      margin-right: 8px;\n      font-size: 12px;\n    }\n\n    .page-size-select {\n      width: 64px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     1\">        Items per page:                                                        {{size}}                                                                first_page                            chevron_left                            chevron_right            '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'CursorPaginatorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataNode.html":{"url":"classes/DataNode.html","title":"class - DataNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/query.ts\n        \n\n\n            \n                Description\n            \n            \n                A cacheable node with no parameters.\nSee DataQuery for more information, and DataService to obtain a DataNode.\nNodes are identified by a NodeId.\nExample\n\n  Is it loading? {{thing$.loading ? 'yes' : 'no'}}\n  Is the thing loaded? {{thing$.hasData ? 'yes' : 'no'}}\n  \n    Thing data: {{thing.something}}\n  \nclass ExampleComponent implements OnInit, OnDestroy {\n  @Input() thingId: NodeId;\n\n  public thing$: DataNode;\n  public thingSub: Subscription; // subscription to thing$\n\n  constructor(private dataService: DataService) {}}\n\n  ngOnInit() {\n    // obtain the DataNode from the data service\n    this.thing$ = this.dataService.getNode(this.thingId);\n\n    // subscribe to indicate that we want some data\n    this.thingSub = this.thing$.subscribe();\n  }\n\n  ngOnDestroy() {\n    // remember to unsubscribe!!\n    this.thingSub.unsubscribe();\n  }\n}\n            \n\n            \n                Extends\n            \n            \n                        DataQuery\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                interactive\n                            \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadIfNeeded\n                            \n                            \n                                dataAsPromise\n                            \n                            \n                                hydrateRaw\n                            \n                            \n                                invalidate\n                            \n                            \n                                load\n                            \n                            \n                                loadDebounced\n                            \n                            \n                                subscribeLazy\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    params\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     I\n\n                    \n                \n                        \n                            \n                                Inherited from         DataQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         DataQuery:55\n\n                        \n                    \n\n            \n                \n                    The ID of this data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interactive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         DataQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         DataQuery:106\n\n                        \n                    \n\n            \n                \n                    If true, will prolong debounce time a bit.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         DataQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         DataQuery:56\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadIfNeeded\n                        \n                    \n                \n            \n            \n                \nloadIfNeeded()\n                \n            \n\n\n            \n                \n                    Inherited from         DataQuery\n\n                \n            \n            \n                \n                        Defined in         DataQuery:334\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataAsPromise\n                        \n                    \n                \n            \n            \n                \ndataAsPromise()\n                \n            \n\n\n            \n                \n                    Inherited from         DataQuery\n\n                \n            \n            \n                \n                        Defined in         DataQuery:140\n\n                \n            \n\n\n            \n                \n                    Returns the data as a promise, without having to create a subscription.\nIf cached data is available, this will return the data immediately; otherwise, this will\nload the data with an API request.\nExample\nconst node = dataService.getNode(someNodeId);\nnode.dataAsPromise().then(data => {\n  console.log('node data:', data);\n}).catch(error => console.error('oh no'));\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hydrateRaw\n                        \n                    \n                \n            \n            \n                \nhydrateRaw(preparedData: Promise)\n                \n            \n\n\n            \n                \n                    Inherited from         DataQuery\n\n                \n            \n            \n                \n                        Defined in         DataQuery:192\n\n                \n            \n\n\n            \n                \n                    Use when data has not yet been loaded but is available from elsewhere.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    preparedData\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invalidate\n                        \n                    \n                \n            \n            \n                \ninvalidate()\n                \n            \n\n\n            \n                \n                    Inherited from         DataQuery\n\n                \n            \n            \n                \n                        Defined in         DataQuery:222\n\n                \n            \n\n\n            \n                \n                    Deletes current data.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload()\n                \n            \n\n\n            \n                \n                    Inherited from         DataQuery\n\n                \n            \n            \n                \n                        Defined in         DataQuery:183\n\n                \n            \n\n\n            \n                \n                    Loads data.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadDebounced\n                        \n                    \n                \n            \n            \n                \nloadDebounced(interactive)\n                \n            \n\n\n            \n                \n                    Inherited from         DataQuery\n\n                \n            \n            \n                \n                        Defined in         DataQuery:211\n\n                \n            \n\n\n            \n                \n                    Loads data after a short delay. Will debounce.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    interactive\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.interactive\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribeLazy\n                        \n                    \n                \n            \n            \n                \nsubscribeLazy(...args: any[])\n                \n            \n\n\n            \n                \n                    Inherited from         DataQuery\n\n                \n            \n            \n                \n                        Defined in         DataQuery:250\n\n                \n            \n\n\n            \n                \n                    Will subscribe to the data, but not cause a reload unless there is no data.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        passed verbatim to #subscribe\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        params\n                    \n                \n\n\n                \n                    \n                        setparams(p)\n                    \n                \n                            \n                                \n                                    Defined in src/app/data-dgql/query.ts:330\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            p\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Observable, Subscriber } from 'rxjs';\nimport {\n  decodeNodeId,\n  encodeNodeId,\n  ListId,\n  ListParams,\n  NodeId,\n  NodeIdEnc,\n  nodeTypeFromTypename,\n} from './id';\nimport { QueriesService } from './queries/queries.service';\nimport { ListResult, queryList, queryNode } from './load';\nimport { PageInfo } from '../../generated/graphql-dgql';\n\n/** How long {@link DataQuery} will wait to debounce requests until actually sending a request, in milliseconds. */\nconst CACHE_FAST_DEBOUNCE_TIME_MS = 200;\n/** How long {@link DataQuery} will wait to debounce requests, if the {@link DataQuery#interactive} flag is set, in milliseconds. */\nconst CACHE_INTERACTIVE_DEBOUNCE_TIME_MS = 500;\n/** Number of milliseconds beyond which cached data will be considered stale, and will be reloaded if a new subscriber is added. */\nconst CACHE_STALE_TIME_MS = 5000;\n\n/**\n * A piece of observable data.\n *\n * DataQuery is a stateful interface for interacting with an API object.\n * Instead of calling a function to make an API request, DataQuery lets you declare the ID (like an endpoint) and\n * request parameters (in {@link #params}) of the data you want, and will automatically load the data when needed.\n * Data can then be accessed synchronously with the {@link #current} property.\n *\n * Upon adding a subscriber with [#subscribe]{@link Observable#subscribe}, data will loaded from the API and stored in the\n * cache. Subsequent viewers can then immediately access the cached data.\n *\n * - To check if data is loaded, use {@link #hasData},\n *   and to check if data is still loading, use {@link #loading}.\n * - To (re-)load the data from the API, use {@link #load}.\n *   This happens automatically upon subscription after a sufficient delay (see debounce time constants).\n * - To add a subscriber without triggering this behavior, use {@link #subscribeLazy}, which will\n *   only make an API request if the data is not cached.\n * - To invalidate (i.e. delete) the cached data, use {@link #invalidate}.\n * - If you only need the data right now and don't want to deal with subscriptions, use {@link #dataAsPromise}\n *   to access it as a promise that will either return cached data or load new data.\n *\n * When done using a DataQuery subscription, it *must* be manually destroyed by calling\n * [`sub.unsubscribe()`]{@link Subscription#unsubscribe} on the Subscription object returned by\n * [subscribe]{@link Observable#subscribe}, as it may leak memory otherwise.\n *\n * See {@link DataNode} and {@link DataList} for the two main types of data that use DataQuery.\n *\n * @typeParam T - type of data accessible via .current\n * @typeParam R - type returned by innerQueryFn\n * @typeParam P - parameter type for innerQueryFn\n */\nexport abstract class DataQuery extends Observable {\n  /** The ID of this data. */\n  id: I;\n  loading = false; // TODO: maybe make this value observable too?\n  /** @ignore */\n  protected currentData?: T;\n  /** @ignore */\n  protected lastLoadTime = 0;\n  /** @ignore */\n  protected pSetParamsNoUpdate = false;\n\n  /** Returns true if data is currently available. */\n  get hasData(): boolean {\n    return this.currentData !== undefined;\n  }\n\n  /** The currently loaded data. */\n  get current(): T {\n    return this.currentData;\n  }\n\n  /** @ignore */\n  protected currentQueryParams?: P;\n  /**\n   * Parameters that will be passed to the request.\n   * Changing this property will automatically trigger a load.\n   */\n  get params(): P | undefined {\n    return this.currentQueryParams;\n  }\n  set params(p: P) {\n    this.currentQueryParams = p;\n    if (!this.pSetParamsNoUpdate) {\n      this.loadDebounced();\n    }\n  }\n\n  /** @ignore */\n  protected subscribers: Set> = new Set();\n  /** @ignore */\n  protected innerQueryFn: (id: I, p: P) => Promise;\n  /** @ignore */\n  protected innerMapFn: (r: R) => T;\n  /** @ignore */\n  protected stateLock = 0;\n  /** @ignore */\n  protected loadTimeout = null;\n  /** @ignore */\n  protected hydrated = false;\n  /** @ignore */\n  protected isNextSubLazy = false;\n\n  /** If true, will prolong debounce time a bit. */\n  interactive = false;\n\n  /**\n   * @ignore\n   * Creates a new DataQuery (you should never need to use this directly)\n   *\n   * @param id an identifier for the data being loaded\n   * @param query the inner query function\n   * @param map maps returned data from the query R to usable data T\n   */\n  constructor(id: I, query: (id: I, p: P) => Promise, map: (r: R) => T) {\n    super(subscriber => {\n      this.addSubscriber(subscriber, this.isNextSubLazy);\n      this.isNextSubLazy = false;\n    });\n    this.id = id;\n    this.innerQueryFn = query;\n    this.innerMapFn = map;\n  }\n\n  /**\n   * Returns the data as a promise, without having to create a subscription.\n   *\n   * If cached data is available, this will return the data immediately; otherwise, this will\n   * load the data with an API request.\n   *\n   * #### Example\n   * ```ts\n   * const node = dataService.getNode(someNodeId);\n   * node.dataAsPromise().then(data => {\n   *   console.log('node data:', data);\n   * }).catch(error => console.error('oh no'));\n   * ```\n   */\n  dataAsPromise(): Promise {\n    if (this.hasData) {\n      return Promise.resolve(this.current);\n    }\n    return new Promise((resolve, reject) => {\n      const sub = this.subscribe(data => {\n        resolve(data);\n        sub.unsubscribe();\n      }, error => {\n        reject(error);\n        sub.unsubscribe();\n      });\n    });\n  }\n\n  /** @ignore */\n  private loadImpl(fut: Promise) {\n    clearTimeout(this.loadTimeout);\n    this.loadTimeout = null;\n    this.lastLoadTime = Date.now();\n    this.loading = true;\n\n    // if load is called twice; only the newest load call will have an effect\n    const stateLock = ++this.stateLock;\n\n    fut.then(data => {\n      if (stateLock !== this.stateLock) {\n        return;\n      }\n      this.insertResult(data);\n      this.loading = false;\n      this.hydrated = false;\n    }).catch(error => {\n      if (stateLock !== this.stateLock) {\n        return;\n      }\n      this.emitErrorToAllSubscribers(error);\n      this.loading = false;\n      this.hydrated = false;\n    });\n  }\n\n  /** Loads data. */\n  load() {\n    this.hydrated = false;\n    this.loadImpl(this.innerQueryFn(this.id, this.currentQueryParams));\n  }\n\n  /**\n   * @internal\n   * Use when data has not yet been loaded but is available from elsewhere.\n   */\n  hydrateRaw(preparedData: Promise) {\n    if (this.hasData) {\n      return; // don't need hydration\n    }\n    this.hydrated = true;\n    this.loadImpl(preparedData);\n  }\n\n  /** Will load data if it's stale or not present. */\n  loadIfNeeded() {\n    if (this.loading) {\n      return;\n    }\n    if (!this.hasData || Date.now() - this.lastLoadTime > CACHE_STALE_TIME_MS) {\n      this.load();\n    }\n  }\n\n  /** Loads data after a short delay. Will debounce. */\n  loadDebounced(interactive = this.interactive) {\n    if (this.loadTimeout) {\n      return;\n    }\n    this.loadTimeout = setTimeout(() => {\n      this.loadTimeout = null;\n      this.load();\n    }, interactive ? CACHE_INTERACTIVE_DEBOUNCE_TIME_MS : CACHE_FAST_DEBOUNCE_TIME_MS);\n  }\n\n  /** Deletes current data. */\n  invalidate() {\n    this.currentData = undefined;\n    this.emitUpdateToAllSubscribers();\n  }\n\n  /** @ignore */\n  protected addSubscriber(subscriber: Subscriber, lazy: boolean) {\n    this.subscribers.add(subscriber);\n    if (this.current !== undefined) {\n      // data is available right now! emit current state\n      subscriber.next(this.current);\n    }\n\n    if (!this.hydrated && (!lazy || !this.hasData)) {\n      this.loadIfNeeded();\n    }\n\n    return {\n      unsubscribe: () => {\n        this.subscribers.delete(subscriber);\n      },\n    };\n  }\n\n  /**\n   * Will subscribe to the data, but not cause a reload unless there is no data.\n   * @param args passed verbatim to [#subscribe]{@link Observable#subscribe}\n   */\n  subscribeLazy(...args) {\n    this.isNextSubLazy = true;\n    return this.subscribe(...args);\n  }\n\n  /** @ignore */\n  emitUpdateToAllSubscribers() {\n    for (const sub of this.subscribers) {\n      sub.next(this.current);\n    }\n  }\n\n  /** @ignore */\n  emitErrorToAllSubscribers(error: unknown) {\n    for (const sub of this.subscribers) {\n      sub.error(error);\n    }\n  }\n\n  /** @ignore */\n  insertResult(result: R) {\n    this.currentData = this.innerMapFn(result);\n    this.emitUpdateToAllSubscribers();\n  }\n\n  /** Returns the number of subscribers for this data. */\n  get subscriberCount(): number {\n    return this.subscribers.size;\n  }\n}\n\n/** @ignore */\nconst identity = id => id;\n\n/**\n * A cacheable node with no parameters.\n *\n * See {@link DataQuery} for more information, and {@link DataService} to obtain a DataNode.\n * Nodes are identified by a {@link NodeId}.\n *\n * #### Example\n * ```html\n * \n *   Is it loading? {{thing$.loading ? 'yes' : 'no'}}\n *   Is the thing loaded? {{thing$.hasData ? 'yes' : 'no'}}\n *   \n *     Thing data: {{thing.something}}\n *   \n * \n * ```\n * ```ts\n * class ExampleComponent implements OnInit, OnDestroy {\n *   @Input() thingId: NodeId;\n *\n *   public thing$: DataNode;\n *   public thingSub: Subscription; // subscription to thing$\n *\n *   constructor(private dataService: DataService) {}}\n *\n *   ngOnInit() {\n *     // obtain the DataNode from the data service\n *     this.thing$ = this.dataService.getNode(this.thingId);\n *\n *     // subscribe to indicate that we want some data\n *     this.thingSub = this.thing$.subscribe();\n *   }\n *\n *   ngOnDestroy() {\n *     // remember to unsubscribe!!\n *     this.thingSub.unsubscribe();\n *   }\n * }\n * ```\n */\nexport class DataNode extends DataQuery {\n  /** @ignore */\n  constructor(queries: QueriesService, id: NodeId) {\n    super(id, queryNode(queries), identity);\n  }\n\n  set params(p) {\n    throw new Error('parameters not available on nodes');\n  }\n\n  loadIfNeeded() {\n    if (!this.loading && Date.now() - this.lastLoadTime > CACHE_STALE_TIME_MS) {\n      this.load();\n    }\n  }\n}\n\n/**\n * Provides a view into a list of items.\n *\n * See {@link DataQuery} for more information, and {@link DataService} to obtain a DataList.\n * Lists are identified by a {@link ListId}.\n *\n * - To access list items, use {@link #currentItems}.\n * - If you need the IDs as well, use {@link #current} (note that the Map is ordered).\n *\n * The current view is defined by following properties:\n *\n * - {@link #cursor}: the current NodeId cursor (see backend API documentation for details)\n * - {@link #count}: number of items to load\n * - {@link #forward}: if true, will load items after the cursor. If false, will load items before.\n * - {@link #filter}: filter object (type parameter F)\n *\n * Changing any of these properties will reload the list (debounced).\n *\n * @typeParam T - list item type\n * @typeParam F - list filter type\n *\n * #### Example\n * ```html\n * \n *   \n *     a thing! {{thing.something}}\n *   \n * \n * ```\n * ```ts\n * class ExampleComponent implements OnInit, OnDestroy {\n *   @Input() thingsListId: ListId;\n *\n *   things$: DataList; // filter type unknown because we're not using here\n *   thingsSub: Subscription;\n *\n *   constructor(private dataService: DataService) {}}\n *\n *   ngOnInit() {\n *     // obtain a list view from the data service\n *     this.things$ = this.dataService.getList(this.thingsListId);\n *\n *     // subscribe to the list to indicate that we want some data\n *     this.thingsSub = this.things$.subscribe();\n *   }\n *\n *   ngOnDestroy() {\n *     // remember to unsubscribe!!\n *     this.thingsSub.unsubscribe();\n *   }\n * }\n * ```\n */\nexport class DataList extends DataQuery, ListResult, ListParams> {\n  /** @ignore */\n  private pCursor?: NodeId;\n  /** @ignore */\n  private pCount = 10;\n  /** @ignore */\n  private pFilter?: F;\n  /** @ignore */\n  private pForward = true;\n  /** @ignore */\n  private pageInfo?: PageInfo;\n  /** @ignore */\n  private pTotalCount?: number;\n  /** @ignore */\n  private previouslyHadPageContents = false;\n  /** @ignore */\n  private pNodes: NodeCache;\n\n  /** @ignore */\n  constructor(queries: QueriesService, nodes: NodeCache, id: ListId) {\n    super(id, queryList(queries, nodes), result => {\n      this.pageInfo = result.pageInfo;\n      this.pTotalCount = result.totalCount;\n\n      // API *only* reports hasPreviousPage or hasNextPage correctly if we are navigating in that\n      // same direction. Hence, we need to amend pageInfo with prior knowledge.\n      if (this.forward) {\n        this.pageInfo.hasPreviousPage = this.previouslyHadPageContents;\n      } else {\n        this.pageInfo.hasNextPage = this.previouslyHadPageContents;\n      }\n      this.previouslyHadPageContents = !!result.items.size;\n\n      return result.items;\n    });\n    this.pNodes = nodes;\n    this.pSetParamsNoUpdate = true;\n    this.setParams();\n    this.pSetParamsNoUpdate = false;\n  }\n\n  /**\n   * @internal\n   * Updates the `params` value from list parameters\n   */\n  setParams() {\n    this.params = {\n      cursor: this.pCursor,\n      count: this.pCount,\n      forward: this.pForward,\n      filter: this.pFilter,\n    };\n  }\n\n  /** Returns the total number of items. Null if not loaded. */\n  get totalCount() {\n    return this.pTotalCount;\n  }\n\n  /** Returns the currently loaded items in an array. */\n  get currentItems(): T[] {\n    if (!this.hasData) {\n      return [];\n    }\n    return [...this.current.values()];\n  }\n\n  /** Current list filter object. */\n  get filter(): F | undefined {\n    return this.pFilter;\n  }\n  set filter(f: F) {\n    this.pFilter = f;\n    this.setParams();\n  }\n\n  /** The current pagination cursor (a node relative to which items will be loaded). Nullable. */\n  get cursor(): NodeId {\n    return this.pCursor;\n  }\n  set cursor(c: NodeId) {\n    this.pCursor = c;\n    this.setParams();\n  }\n\n  /** The max amount of items to be loaded. */\n  get count(): number {\n    return this.pCount;\n  }\n  set count(c: number) {\n    this.pCount = c;\n    this.setParams();\n  }\n\n  /** Whether to load items after the cursor (true), or items before the cursor (false). */\n  get forward(): boolean {\n    return this.pForward;\n  }\n  set forward(f: boolean) {\n    this.pForward = f;\n    this.setParams();\n  }\n\n  /** Returns the node ID of the first item on the current page. */\n  get firstPageItemId(): NodeId | null {\n    const firstKey = this.current ? this.current.keys().next()?.value || null : null;\n    return firstKey ? decodeNodeId(firstKey) : null;\n  }\n\n  /** Returns the node ID of the last item on the current page. */\n  get lastPageItemId(): NodeId | null {\n    if (!this.current) {\n      return;\n    }\n    const keys = [...this.current.keys()];\n    return keys[keys.length - 1] ? decodeNodeId(keys[keys.length - 1]) : null;\n  }\n\n  /** Returns true if the current result contains the given node. */\n  currentHasNode(key: NodeId): boolean {\n    return this.current?.has(encodeNodeId(key));\n  }\n\n  get hasPrevPage() {\n    return !this.pageInfo || this.pageInfo.hasPreviousPage;\n  }\n  get hasNextPage() {\n    return !this.pageInfo || this.pageInfo.hasNextPage;\n  }\n\n  /** Moves the view to the first page. */\n  firstPage() {\n    this.cursor = null;\n    this.forward = true;\n    this.previouslyHadPageContents = false;\n    this.invalidate();\n    return true;\n  }\n\n  /** Moves the view to the previous page. */\n  prevPage() {\n    if (this.pageInfo && !this.pageInfo.hasPreviousPage) {\n      return false;\n    }\n    this.cursor = this.firstPageItemId;\n    this.forward = false;\n    this.invalidate();\n    return true;\n  }\n\n  /** Moves the view to the next page. */\n  nextPage() {\n    if (this.pageInfo && !this.pageInfo.hasNextPage) {\n      return false;\n    }\n    this.cursor = this.lastPageItemId;\n    this.forward = true;\n    this.invalidate();\n    return true;\n  }\n\n  /**\n   * Hydrates this list with initial data in the API format\n   *\n   * If you've already got data from the API that contains the first page of this list, you can use\n   * this method to insert that data directly and avoid triggering a redundant API request.\n   *\n   * @param data a promise that returns the API data\n   * @typeParam IdT - equivalent to T\n   */\n  hydrateInitial(data: Promise>) {\n    this.hydrateRaw(data.then(value => ({\n      totalCount: value.totalCount,\n      pageInfo: value.pageInfo,\n      items: this.pNodes.insertNodes(value.nodes || [])\n    })));\n  }\n}\n\n/** List hydration object (constructing this manually shouldn't be necessary as it mirrors the structure of GQL objects) */\nexport type HydrateList = {\n  totalCount: number,\n  pageInfo: PageInfo,\n  /** This is nullable because it's nullable in the GQL schema. In practice it should always exist */\n  nodes?: (T | null)[]\n};\n\n/** Keeps a cache of DataNodes such that each NodeId has at most one associated DataNode. */\nexport class NodeCache {\n  // TODO: garbage collection? (nodes with zero subscribers)\n  /**\n   * @internal\n   * Internal node storage. Do not use directly.\n   */\n  nodes: Map> = new Map();\n\n  constructor(private queries: QueriesService) {}\n\n  /** Creates a new node. */\n  private createNode(id: NodeId) {\n    const encodedId = encodeNodeId(id);\n    this.nodes.set(encodedId, new DataNode(this.queries, id));\n  }\n\n  /** Returns the DataNode for the given NodeId. */\n  getNode(id: NodeId): DataNode {\n    const encodedId = encodeNodeId(id);\n    if (!this.nodes.has(encodedId)) {\n      this.createNode(id);\n    }\n    return this.nodes.get(encodedId) as DataNode;\n  }\n\n  /**\n   * Inserts nodes into the cache and returns them as a map (in the same order).\n   *\n   * Note: the ID parameter of the node is only optional for type compatibility with the GQL schema.\n   * Nodes without an ID will be ignored.\n   */\n  insertNodes(nodes: T[]): Map {\n    const map = new Map();\n\n    for (const node of nodes) {\n      if (!node?.id) {\n        continue;\n      }\n      const type = nodeTypeFromTypename(node.__typename);\n      const id = { type, id: node.id };\n      const dataNode: DataNode = this.getNode(id);\n      if (!dataNode.hasData) {\n        // FIXME: different queries load different amounts of data, simple overwriting doesn't always have the desired effect\n        //  S1: distinguish between nodes and \"partial nodes\"?\n        //  S2: deep merge data?\n        dataNode.insertResult(node);\n      }\n      map.set(encodeNodeId(id), node);\n    }\n\n    return map;\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataQuery.html":{"url":"classes/DataQuery.html","title":"class - DataQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/query.ts\n        \n\n\n            \n                Description\n            \n            \n                A piece of observable data.\nDataQuery is a stateful interface for interacting with an API object.\nInstead of calling a function to make an API request, DataQuery lets you declare the ID (like an endpoint) and\nrequest parameters (in #params) of the data you want, and will automatically load the data when needed.\nData can then be accessed synchronously with the #current property.\nUpon adding a subscriber with #subscribe, data will loaded from the API and stored in the\ncache. Subsequent viewers can then immediately access the cached data.\n\nTo check if data is loaded, use #hasData,\nand to check if data is still loading, use #loading.\nTo (re-)load the data from the API, use #load.\nThis happens automatically upon subscription after a sufficient delay (see debounce time constants).\nTo add a subscriber without triggering this behavior, use #subscribeLazy, which will\nonly make an API request if the data is not cached.\nTo invalidate (i.e. delete) the cached data, use #invalidate.\nIf you only need the data right now and don't want to deal with subscriptions, use #dataAsPromise\nto access it as a promise that will either return cached data or load new data.\n\nWhen done using a DataQuery subscription, it must be manually destroyed by calling\nsub.unsubscribe() on the Subscription object returned by\nsubscribe, as it may leak memory otherwise.\nSee DataNode and DataList for the two main types of data that use DataQuery.\n\n            \n\n            \n                Extends\n            \n            \n                    Observable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                interactive\n                            \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dataAsPromise\n                            \n                            \n                                hydrateRaw\n                            \n                            \n                                invalidate\n                            \n                            \n                                load\n                            \n                            \n                                loadDebounced\n                            \n                            \n                                loadIfNeeded\n                            \n                            \n                                subscribeLazy\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasData\n                                \n                                \n                                    current\n                                \n                                \n                                    params\n                                \n                                \n                                    subscriberCount\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     I\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/query.ts:55\n                        \n                    \n\n            \n                \n                    The ID of this data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interactive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/query.ts:106\n                        \n                    \n\n            \n                \n                    If true, will prolong debounce time a bit.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/query.ts:56\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dataAsPromise\n                        \n                    \n                \n            \n            \n                \ndataAsPromise()\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:140\n                \n            \n\n\n            \n                \n                    Returns the data as a promise, without having to create a subscription.\nIf cached data is available, this will return the data immediately; otherwise, this will\nload the data with an API request.\nExample\nconst node = dataService.getNode(someNodeId);\nnode.dataAsPromise().then(data => {\n  console.log('node data:', data);\n}).catch(error => console.error('oh no'));\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hydrateRaw\n                        \n                    \n                \n            \n            \n                \nhydrateRaw(preparedData: Promise)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:192\n                \n            \n\n\n            \n                \n                    Use when data has not yet been loaded but is available from elsewhere.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    preparedData\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invalidate\n                        \n                    \n                \n            \n            \n                \ninvalidate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:222\n                \n            \n\n\n            \n                \n                    Deletes current data.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload()\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:183\n                \n            \n\n\n            \n                \n                    Loads data.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadDebounced\n                        \n                    \n                \n            \n            \n                \nloadDebounced(interactive)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:211\n                \n            \n\n\n            \n                \n                    Loads data after a short delay. Will debounce.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    interactive\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.interactive\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadIfNeeded\n                        \n                    \n                \n            \n            \n                \nloadIfNeeded()\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:201\n                \n            \n\n\n            \n                \n                    Will load data if it's stale or not present.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribeLazy\n                        \n                    \n                \n            \n            \n                \nsubscribeLazy(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:250\n                \n            \n\n\n            \n                \n                    Will subscribe to the data, but not cause a reload unless there is no data.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        passed verbatim to #subscribe\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasData\n                    \n                \n\n                \n                    \n                        gethasData()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data-dgql/query.ts:65\n                                \n                            \n                    \n                        \n                                Returns true if data is currently available.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        current\n                    \n                \n\n                \n                    \n                        getcurrent()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data-dgql/query.ts:70\n                                \n                            \n                    \n                        \n                                The currently loaded data.\n\n\n                                \n                                    Returns :     T\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        params\n                    \n                \n\n                \n                    \n                        getparams()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data-dgql/query.ts:80\n                                \n                            \n                    \n                        \n                                Parameters that will be passed to the request.\nChanging this property will automatically trigger a load.\n\n\n                                \n                                    Returns :     P | undefined\n\n                                \n                        \n                    \n\n                \n                    \n                        setparams(p: P)\n                    \n                \n                            \n                                \n                                    Defined in src/app/data-dgql/query.ts:83\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            p\n                                                    \n                                                            \n                                                                        P\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        subscriberCount\n                    \n                \n\n                \n                    \n                        getsubscriberCount()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data-dgql/query.ts:276\n                                \n                            \n                    \n                        \n                                Returns the number of subscribers for this data.\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Observable, Subscriber } from 'rxjs';\nimport {\n  decodeNodeId,\n  encodeNodeId,\n  ListId,\n  ListParams,\n  NodeId,\n  NodeIdEnc,\n  nodeTypeFromTypename,\n} from './id';\nimport { QueriesService } from './queries/queries.service';\nimport { ListResult, queryList, queryNode } from './load';\nimport { PageInfo } from '../../generated/graphql-dgql';\n\n/** How long {@link DataQuery} will wait to debounce requests until actually sending a request, in milliseconds. */\nconst CACHE_FAST_DEBOUNCE_TIME_MS = 200;\n/** How long {@link DataQuery} will wait to debounce requests, if the {@link DataQuery#interactive} flag is set, in milliseconds. */\nconst CACHE_INTERACTIVE_DEBOUNCE_TIME_MS = 500;\n/** Number of milliseconds beyond which cached data will be considered stale, and will be reloaded if a new subscriber is added. */\nconst CACHE_STALE_TIME_MS = 5000;\n\n/**\n * A piece of observable data.\n *\n * DataQuery is a stateful interface for interacting with an API object.\n * Instead of calling a function to make an API request, DataQuery lets you declare the ID (like an endpoint) and\n * request parameters (in {@link #params}) of the data you want, and will automatically load the data when needed.\n * Data can then be accessed synchronously with the {@link #current} property.\n *\n * Upon adding a subscriber with [#subscribe]{@link Observable#subscribe}, data will loaded from the API and stored in the\n * cache. Subsequent viewers can then immediately access the cached data.\n *\n * - To check if data is loaded, use {@link #hasData},\n *   and to check if data is still loading, use {@link #loading}.\n * - To (re-)load the data from the API, use {@link #load}.\n *   This happens automatically upon subscription after a sufficient delay (see debounce time constants).\n * - To add a subscriber without triggering this behavior, use {@link #subscribeLazy}, which will\n *   only make an API request if the data is not cached.\n * - To invalidate (i.e. delete) the cached data, use {@link #invalidate}.\n * - If you only need the data right now and don't want to deal with subscriptions, use {@link #dataAsPromise}\n *   to access it as a promise that will either return cached data or load new data.\n *\n * When done using a DataQuery subscription, it *must* be manually destroyed by calling\n * [`sub.unsubscribe()`]{@link Subscription#unsubscribe} on the Subscription object returned by\n * [subscribe]{@link Observable#subscribe}, as it may leak memory otherwise.\n *\n * See {@link DataNode} and {@link DataList} for the two main types of data that use DataQuery.\n *\n * @typeParam T - type of data accessible via .current\n * @typeParam R - type returned by innerQueryFn\n * @typeParam P - parameter type for innerQueryFn\n */\nexport abstract class DataQuery extends Observable {\n  /** The ID of this data. */\n  id: I;\n  loading = false; // TODO: maybe make this value observable too?\n  /** @ignore */\n  protected currentData?: T;\n  /** @ignore */\n  protected lastLoadTime = 0;\n  /** @ignore */\n  protected pSetParamsNoUpdate = false;\n\n  /** Returns true if data is currently available. */\n  get hasData(): boolean {\n    return this.currentData !== undefined;\n  }\n\n  /** The currently loaded data. */\n  get current(): T {\n    return this.currentData;\n  }\n\n  /** @ignore */\n  protected currentQueryParams?: P;\n  /**\n   * Parameters that will be passed to the request.\n   * Changing this property will automatically trigger a load.\n   */\n  get params(): P | undefined {\n    return this.currentQueryParams;\n  }\n  set params(p: P) {\n    this.currentQueryParams = p;\n    if (!this.pSetParamsNoUpdate) {\n      this.loadDebounced();\n    }\n  }\n\n  /** @ignore */\n  protected subscribers: Set> = new Set();\n  /** @ignore */\n  protected innerQueryFn: (id: I, p: P) => Promise;\n  /** @ignore */\n  protected innerMapFn: (r: R) => T;\n  /** @ignore */\n  protected stateLock = 0;\n  /** @ignore */\n  protected loadTimeout = null;\n  /** @ignore */\n  protected hydrated = false;\n  /** @ignore */\n  protected isNextSubLazy = false;\n\n  /** If true, will prolong debounce time a bit. */\n  interactive = false;\n\n  /**\n   * @ignore\n   * Creates a new DataQuery (you should never need to use this directly)\n   *\n   * @param id an identifier for the data being loaded\n   * @param query the inner query function\n   * @param map maps returned data from the query R to usable data T\n   */\n  constructor(id: I, query: (id: I, p: P) => Promise, map: (r: R) => T) {\n    super(subscriber => {\n      this.addSubscriber(subscriber, this.isNextSubLazy);\n      this.isNextSubLazy = false;\n    });\n    this.id = id;\n    this.innerQueryFn = query;\n    this.innerMapFn = map;\n  }\n\n  /**\n   * Returns the data as a promise, without having to create a subscription.\n   *\n   * If cached data is available, this will return the data immediately; otherwise, this will\n   * load the data with an API request.\n   *\n   * #### Example\n   * ```ts\n   * const node = dataService.getNode(someNodeId);\n   * node.dataAsPromise().then(data => {\n   *   console.log('node data:', data);\n   * }).catch(error => console.error('oh no'));\n   * ```\n   */\n  dataAsPromise(): Promise {\n    if (this.hasData) {\n      return Promise.resolve(this.current);\n    }\n    return new Promise((resolve, reject) => {\n      const sub = this.subscribe(data => {\n        resolve(data);\n        sub.unsubscribe();\n      }, error => {\n        reject(error);\n        sub.unsubscribe();\n      });\n    });\n  }\n\n  /** @ignore */\n  private loadImpl(fut: Promise) {\n    clearTimeout(this.loadTimeout);\n    this.loadTimeout = null;\n    this.lastLoadTime = Date.now();\n    this.loading = true;\n\n    // if load is called twice; only the newest load call will have an effect\n    const stateLock = ++this.stateLock;\n\n    fut.then(data => {\n      if (stateLock !== this.stateLock) {\n        return;\n      }\n      this.insertResult(data);\n      this.loading = false;\n      this.hydrated = false;\n    }).catch(error => {\n      if (stateLock !== this.stateLock) {\n        return;\n      }\n      this.emitErrorToAllSubscribers(error);\n      this.loading = false;\n      this.hydrated = false;\n    });\n  }\n\n  /** Loads data. */\n  load() {\n    this.hydrated = false;\n    this.loadImpl(this.innerQueryFn(this.id, this.currentQueryParams));\n  }\n\n  /**\n   * @internal\n   * Use when data has not yet been loaded but is available from elsewhere.\n   */\n  hydrateRaw(preparedData: Promise) {\n    if (this.hasData) {\n      return; // don't need hydration\n    }\n    this.hydrated = true;\n    this.loadImpl(preparedData);\n  }\n\n  /** Will load data if it's stale or not present. */\n  loadIfNeeded() {\n    if (this.loading) {\n      return;\n    }\n    if (!this.hasData || Date.now() - this.lastLoadTime > CACHE_STALE_TIME_MS) {\n      this.load();\n    }\n  }\n\n  /** Loads data after a short delay. Will debounce. */\n  loadDebounced(interactive = this.interactive) {\n    if (this.loadTimeout) {\n      return;\n    }\n    this.loadTimeout = setTimeout(() => {\n      this.loadTimeout = null;\n      this.load();\n    }, interactive ? CACHE_INTERACTIVE_DEBOUNCE_TIME_MS : CACHE_FAST_DEBOUNCE_TIME_MS);\n  }\n\n  /** Deletes current data. */\n  invalidate() {\n    this.currentData = undefined;\n    this.emitUpdateToAllSubscribers();\n  }\n\n  /** @ignore */\n  protected addSubscriber(subscriber: Subscriber, lazy: boolean) {\n    this.subscribers.add(subscriber);\n    if (this.current !== undefined) {\n      // data is available right now! emit current state\n      subscriber.next(this.current);\n    }\n\n    if (!this.hydrated && (!lazy || !this.hasData)) {\n      this.loadIfNeeded();\n    }\n\n    return {\n      unsubscribe: () => {\n        this.subscribers.delete(subscriber);\n      },\n    };\n  }\n\n  /**\n   * Will subscribe to the data, but not cause a reload unless there is no data.\n   * @param args passed verbatim to [#subscribe]{@link Observable#subscribe}\n   */\n  subscribeLazy(...args) {\n    this.isNextSubLazy = true;\n    return this.subscribe(...args);\n  }\n\n  /** @ignore */\n  emitUpdateToAllSubscribers() {\n    for (const sub of this.subscribers) {\n      sub.next(this.current);\n    }\n  }\n\n  /** @ignore */\n  emitErrorToAllSubscribers(error: unknown) {\n    for (const sub of this.subscribers) {\n      sub.error(error);\n    }\n  }\n\n  /** @ignore */\n  insertResult(result: R) {\n    this.currentData = this.innerMapFn(result);\n    this.emitUpdateToAllSubscribers();\n  }\n\n  /** Returns the number of subscribers for this data. */\n  get subscriberCount(): number {\n    return this.subscribers.size;\n  }\n}\n\n/** @ignore */\nconst identity = id => id;\n\n/**\n * A cacheable node with no parameters.\n *\n * See {@link DataQuery} for more information, and {@link DataService} to obtain a DataNode.\n * Nodes are identified by a {@link NodeId}.\n *\n * #### Example\n * ```html\n * \n *   Is it loading? {{thing$.loading ? 'yes' : 'no'}}\n *   Is the thing loaded? {{thing$.hasData ? 'yes' : 'no'}}\n *   \n *     Thing data: {{thing.something}}\n *   \n * \n * ```\n * ```ts\n * class ExampleComponent implements OnInit, OnDestroy {\n *   @Input() thingId: NodeId;\n *\n *   public thing$: DataNode;\n *   public thingSub: Subscription; // subscription to thing$\n *\n *   constructor(private dataService: DataService) {}}\n *\n *   ngOnInit() {\n *     // obtain the DataNode from the data service\n *     this.thing$ = this.dataService.getNode(this.thingId);\n *\n *     // subscribe to indicate that we want some data\n *     this.thingSub = this.thing$.subscribe();\n *   }\n *\n *   ngOnDestroy() {\n *     // remember to unsubscribe!!\n *     this.thingSub.unsubscribe();\n *   }\n * }\n * ```\n */\nexport class DataNode extends DataQuery {\n  /** @ignore */\n  constructor(queries: QueriesService, id: NodeId) {\n    super(id, queryNode(queries), identity);\n  }\n\n  set params(p) {\n    throw new Error('parameters not available on nodes');\n  }\n\n  loadIfNeeded() {\n    if (!this.loading && Date.now() - this.lastLoadTime > CACHE_STALE_TIME_MS) {\n      this.load();\n    }\n  }\n}\n\n/**\n * Provides a view into a list of items.\n *\n * See {@link DataQuery} for more information, and {@link DataService} to obtain a DataList.\n * Lists are identified by a {@link ListId}.\n *\n * - To access list items, use {@link #currentItems}.\n * - If you need the IDs as well, use {@link #current} (note that the Map is ordered).\n *\n * The current view is defined by following properties:\n *\n * - {@link #cursor}: the current NodeId cursor (see backend API documentation for details)\n * - {@link #count}: number of items to load\n * - {@link #forward}: if true, will load items after the cursor. If false, will load items before.\n * - {@link #filter}: filter object (type parameter F)\n *\n * Changing any of these properties will reload the list (debounced).\n *\n * @typeParam T - list item type\n * @typeParam F - list filter type\n *\n * #### Example\n * ```html\n * \n *   \n *     a thing! {{thing.something}}\n *   \n * \n * ```\n * ```ts\n * class ExampleComponent implements OnInit, OnDestroy {\n *   @Input() thingsListId: ListId;\n *\n *   things$: DataList; // filter type unknown because we're not using here\n *   thingsSub: Subscription;\n *\n *   constructor(private dataService: DataService) {}}\n *\n *   ngOnInit() {\n *     // obtain a list view from the data service\n *     this.things$ = this.dataService.getList(this.thingsListId);\n *\n *     // subscribe to the list to indicate that we want some data\n *     this.thingsSub = this.things$.subscribe();\n *   }\n *\n *   ngOnDestroy() {\n *     // remember to unsubscribe!!\n *     this.thingsSub.unsubscribe();\n *   }\n * }\n * ```\n */\nexport class DataList extends DataQuery, ListResult, ListParams> {\n  /** @ignore */\n  private pCursor?: NodeId;\n  /** @ignore */\n  private pCount = 10;\n  /** @ignore */\n  private pFilter?: F;\n  /** @ignore */\n  private pForward = true;\n  /** @ignore */\n  private pageInfo?: PageInfo;\n  /** @ignore */\n  private pTotalCount?: number;\n  /** @ignore */\n  private previouslyHadPageContents = false;\n  /** @ignore */\n  private pNodes: NodeCache;\n\n  /** @ignore */\n  constructor(queries: QueriesService, nodes: NodeCache, id: ListId) {\n    super(id, queryList(queries, nodes), result => {\n      this.pageInfo = result.pageInfo;\n      this.pTotalCount = result.totalCount;\n\n      // API *only* reports hasPreviousPage or hasNextPage correctly if we are navigating in that\n      // same direction. Hence, we need to amend pageInfo with prior knowledge.\n      if (this.forward) {\n        this.pageInfo.hasPreviousPage = this.previouslyHadPageContents;\n      } else {\n        this.pageInfo.hasNextPage = this.previouslyHadPageContents;\n      }\n      this.previouslyHadPageContents = !!result.items.size;\n\n      return result.items;\n    });\n    this.pNodes = nodes;\n    this.pSetParamsNoUpdate = true;\n    this.setParams();\n    this.pSetParamsNoUpdate = false;\n  }\n\n  /**\n   * @internal\n   * Updates the `params` value from list parameters\n   */\n  setParams() {\n    this.params = {\n      cursor: this.pCursor,\n      count: this.pCount,\n      forward: this.pForward,\n      filter: this.pFilter,\n    };\n  }\n\n  /** Returns the total number of items. Null if not loaded. */\n  get totalCount() {\n    return this.pTotalCount;\n  }\n\n  /** Returns the currently loaded items in an array. */\n  get currentItems(): T[] {\n    if (!this.hasData) {\n      return [];\n    }\n    return [...this.current.values()];\n  }\n\n  /** Current list filter object. */\n  get filter(): F | undefined {\n    return this.pFilter;\n  }\n  set filter(f: F) {\n    this.pFilter = f;\n    this.setParams();\n  }\n\n  /** The current pagination cursor (a node relative to which items will be loaded). Nullable. */\n  get cursor(): NodeId {\n    return this.pCursor;\n  }\n  set cursor(c: NodeId) {\n    this.pCursor = c;\n    this.setParams();\n  }\n\n  /** The max amount of items to be loaded. */\n  get count(): number {\n    return this.pCount;\n  }\n  set count(c: number) {\n    this.pCount = c;\n    this.setParams();\n  }\n\n  /** Whether to load items after the cursor (true), or items before the cursor (false). */\n  get forward(): boolean {\n    return this.pForward;\n  }\n  set forward(f: boolean) {\n    this.pForward = f;\n    this.setParams();\n  }\n\n  /** Returns the node ID of the first item on the current page. */\n  get firstPageItemId(): NodeId | null {\n    const firstKey = this.current ? this.current.keys().next()?.value || null : null;\n    return firstKey ? decodeNodeId(firstKey) : null;\n  }\n\n  /** Returns the node ID of the last item on the current page. */\n  get lastPageItemId(): NodeId | null {\n    if (!this.current) {\n      return;\n    }\n    const keys = [...this.current.keys()];\n    return keys[keys.length - 1] ? decodeNodeId(keys[keys.length - 1]) : null;\n  }\n\n  /** Returns true if the current result contains the given node. */\n  currentHasNode(key: NodeId): boolean {\n    return this.current?.has(encodeNodeId(key));\n  }\n\n  get hasPrevPage() {\n    return !this.pageInfo || this.pageInfo.hasPreviousPage;\n  }\n  get hasNextPage() {\n    return !this.pageInfo || this.pageInfo.hasNextPage;\n  }\n\n  /** Moves the view to the first page. */\n  firstPage() {\n    this.cursor = null;\n    this.forward = true;\n    this.previouslyHadPageContents = false;\n    this.invalidate();\n    return true;\n  }\n\n  /** Moves the view to the previous page. */\n  prevPage() {\n    if (this.pageInfo && !this.pageInfo.hasPreviousPage) {\n      return false;\n    }\n    this.cursor = this.firstPageItemId;\n    this.forward = false;\n    this.invalidate();\n    return true;\n  }\n\n  /** Moves the view to the next page. */\n  nextPage() {\n    if (this.pageInfo && !this.pageInfo.hasNextPage) {\n      return false;\n    }\n    this.cursor = this.lastPageItemId;\n    this.forward = true;\n    this.invalidate();\n    return true;\n  }\n\n  /**\n   * Hydrates this list with initial data in the API format\n   *\n   * If you've already got data from the API that contains the first page of this list, you can use\n   * this method to insert that data directly and avoid triggering a redundant API request.\n   *\n   * @param data a promise that returns the API data\n   * @typeParam IdT - equivalent to T\n   */\n  hydrateInitial(data: Promise>) {\n    this.hydrateRaw(data.then(value => ({\n      totalCount: value.totalCount,\n      pageInfo: value.pageInfo,\n      items: this.pNodes.insertNodes(value.nodes || [])\n    })));\n  }\n}\n\n/** List hydration object (constructing this manually shouldn't be necessary as it mirrors the structure of GQL objects) */\nexport type HydrateList = {\n  totalCount: number,\n  pageInfo: PageInfo,\n  /** This is nullable because it's nullable in the GQL schema. In practice it should always exist */\n  nodes?: (T | null)[]\n};\n\n/** Keeps a cache of DataNodes such that each NodeId has at most one associated DataNode. */\nexport class NodeCache {\n  // TODO: garbage collection? (nodes with zero subscribers)\n  /**\n   * @internal\n   * Internal node storage. Do not use directly.\n   */\n  nodes: Map> = new Map();\n\n  constructor(private queries: QueriesService) {}\n\n  /** Creates a new node. */\n  private createNode(id: NodeId) {\n    const encodedId = encodeNodeId(id);\n    this.nodes.set(encodedId, new DataNode(this.queries, id));\n  }\n\n  /** Returns the DataNode for the given NodeId. */\n  getNode(id: NodeId): DataNode {\n    const encodedId = encodeNodeId(id);\n    if (!this.nodes.has(encodedId)) {\n      this.createNode(id);\n    }\n    return this.nodes.get(encodedId) as DataNode;\n  }\n\n  /**\n   * Inserts nodes into the cache and returns them as a map (in the same order).\n   *\n   * Note: the ID parameter of the node is only optional for type compatibility with the GQL schema.\n   * Nodes without an ID will be ignored.\n   */\n  insertNodes(nodes: T[]): Map {\n    const map = new Map();\n\n    for (const node of nodes) {\n      if (!node?.id) {\n        continue;\n      }\n      const type = nodeTypeFromTypename(node.__typename);\n      const id = { type, id: node.id };\n      const dataNode: DataNode = this.getNode(id);\n      if (!dataNode.hasData) {\n        // FIXME: different queries load different amounts of data, simple overwriting doesn't always have the desired effect\n        //  S1: distinguish between nodes and \"partial nodes\"?\n        //  S2: deep merge data?\n        dataNode.insertResult(node);\n      }\n      map.set(encodeNodeId(id), node);\n    }\n\n    return map;\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/index.ts\n        \n\n\n            \n                Description\n            \n            \n                The data service provides access to the backend API.\nIt provides automatic caching of data to reducing unnecessary requests, and a mutation API that\nautomatically propagates updates to all observers of affected data.\nTo get data, use #getNode and #getList. To mutate data, use #mutations.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mutations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getList\n                            \n                            \n                                getNode\n                            \n                            \n                                invalidateLists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(queries: QueriesService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data-dgql/index.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queries\n                                                  \n                                                        \n                                                                        QueriesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getList\n                        \n                    \n                \n            \n            \n                \ngetList(id: ListId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/index.ts:67\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        F\n                    \n                \n            \n\n            \n                \n                    Returns a new DataList for the given ListId.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                ListId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DataList\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNode\n                        \n                    \n                \n            \n            \n                \ngetNode(id: NodeId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/index.ts:34\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Returns the DataNode for the given NodeId.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                NodeId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DataNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invalidateLists\n                        \n                    \n                \n            \n            \n                \ninvalidateLists(selector: ListId | ListType)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/index.ts:39\n                \n            \n\n\n            \n                \n                    Invalidates all lists with the given id or type.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                                ListId | ListType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        mutations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Mutations\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/index.ts:24\n                        \n                    \n\n            \n                \n                    Data mutations.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { NodeId, ListId, ListType, encodeListId, decodeListId, ListIdEnc } from './id';\nimport { Injectable } from '@angular/core';\nimport { QueriesService } from './queries/queries.service';\nimport { DataNode, DataList, NodeCache } from './query';\nimport { Mutations } from '@app/data-dgql/mutate';\n\n/**\n * The data service provides access to the backend API.\n * It provides automatic caching of data to reducing unnecessary requests, and a mutation API that\n * automatically propagates updates to all observers of affected data.\n *\n * To get data, use {@link #getNode} and {@link #getList}. To mutate data, use {@link #mutations}.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport default class DataService {\n  /** @ignore */\n  nodes: NodeCache;\n  /** @ignore */\n  lists: Map>> = new Map();\n\n  /** Data mutations. */\n  mutations: Mutations;\n\n  constructor(\n    private queries: QueriesService\n  ) {\n    this.nodes = new NodeCache(queries);\n    this.mutations = new Mutations(queries, this.nodes, this.invalidateLists.bind(this));\n  }\n\n  /** Returns the {@link DataNode} for the given {@link NodeId}. */\n  getNode(id: NodeId): DataNode {\n    return this.nodes.getNode(id);\n  }\n\n  /** Invalidates all lists with the given id or type. */\n  invalidateLists(selector: ListId | ListType) {\n    if (typeof selector === 'object') {\n      const id = encodeListId(selector);\n      if (!this.lists.has(id)) {\n        return;\n      }\n      const lists = this.lists.get(id);\n      for (const list of lists) {\n        if (list.subscriberCount) {\n          // invalidating the list causes layout changes we might not want (e.g. emptying a list)\n          // list.invalidate();\n          list.loadDebounced();\n        }\n      }\n    } else {\n      for (const [id, lists] of this.lists) {\n        if (decodeListId(id).type === selector) {\n          for (const list of lists) {\n            if (list.subscriberCount) {\n              list.loadDebounced();\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /** Returns a new {@link DataList} for the given {@link ListId}. */\n  getList(id: ListId): DataList {\n    const encodedId = encodeListId(id);\n    const list = new DataList(this.queries, this.nodes, id);\n    if (!this.lists.has(encodedId)) {\n      this.lists.set(encodedId, new Set());\n    }\n    this.lists.get(encodedId).add(list);\n    return list;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData.html":{"url":"interfaces/DialogData.html","title":"interface - DialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface that defines what data is injected to the dialog.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            components\n                                        \n                                \n                                \n                                        \n                                            locations\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        components\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        components:         NodeId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        locations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        locations:         NodeId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport { FormControl, Validators } from '@angular/forms';\nimport { IssueCategory } from '../../../generated/graphql';\nimport { UserNotifyService } from '@app/user-notify/user-notify.service';\nimport { CCIMSValidators } from '@app/utils/validators';\nimport { CreateIssueInput } from '../../../generated/graphql-dgql';\nimport { NodeId, NodeType } from '@app/data-dgql/id';\nimport DataService from '@app/data-dgql';\nimport {LocalIssueData} from '@app/issue-detail/issue-sidebar.component';\nimport {RemoveDialogComponent} from '@app/dialogs/remove-dialog/remove-dialog.component';\n\n@Component({\n  selector: 'app-create-issue-dialog',\n  templateUrl: './create-issue-dialog.component.html',\n  styleUrls: ['./create-issue-dialog.component.scss']\n})\n/**\n * This component opens a dialog for the issue creation.\n */\nexport class CreateIssueDialogComponent implements OnInit {\n  @ViewChild('body') body;\n\n  public loading = false;\n  public saveFailed = false;\n\n  constructor(public dialogRef: MatDialogRef,\n              private dialog: MatDialog,\n              private dataService: DataService,\n              @Inject(MAT_DIALOG_DATA) public data: DialogData,\n              private notify: UserNotifyService\n  ) {\n  }\n\n  // form controls for the form fields\n  title = new FormControl('', [CCIMSValidators.nameValidator, Validators.required]);\n  category = new FormControl('', [Validators.required]);\n\n  public issueData: LocalIssueData = {\n    components: [],\n    locations: [],\n    labels: [],\n    assignees: [],\n    linksToIssues: [],\n  };\n\n  ngOnInit(): void {\n    // sets up the issue category as Unclassified\n    this.category.setValue(IssueCategory.Unclassified);\n    this.dialogRef.disableClose = true;\n\n    // updates items to be selected\n    this.updateSelectedItems();\n  }\n\n  /**\n   * Updates items to be selected in the Create Issue page,\n   * including 1) components and 2) locations.\n   */\n  private updateSelectedItems() {\n    // updates components\n    for (const componentId of this.data.components) {\n      this.issueData.components.push(componentId);\n      this.issueData.locations.push(componentId);\n    }\n\n    if (this.data.locations) {\n      // updates locations\n      for (const componentId of this.data.locations) {\n        this.issueData.locations.push(componentId);\n      }\n    }\n  }\n\n  onNoClick(showConfirmDialog: boolean): void {\n    if (showConfirmDialog) {\n      this.dialog.open(RemoveDialogComponent,\n        {\n          data: {\n            title: 'Really discard issue?',\n            messages: ['Are you sure you want to discard this issue?'],\n            confirmButtonText: 'Confirm'\n          }\n        }).afterClosed().subscribe((close) => {\n        if (close) {\n          this.dialogRef.close();\n        }\n      });\n    } else {\n      this.dialogRef.close();\n    }\n  }\n\n  afterAlertClose(): void {\n    this.saveFailed = false;\n  }\n\n  onCreate() {\n    const issueData: CreateIssueInput = {\n      title: this.title.value,\n      body: this.body.code,\n      category: this.category.value,\n      clientMutationID: Math.random().toString(36),\n      components: this.issueData.components.map(node => node.id),\n      locations: this.issueData.locations.map(node => node.id),\n      labels: this.issueData.labels.map(node => node.id),\n      assignees: this.issueData.assignees.map(node => node.id),\n    };\n    this.loading = true;\n    this.saveFailed = false;\n    this.dataService.mutations.createIssue(issueData).then(async result => {\n      const issueId = { type: NodeType.Issue, id: result.id };\n      const promises = [];\n      for (const linked of this.issueData.linksToIssues) {\n        promises.push(this.dataService.mutations.linkIssue(Math.random().toString(), issueId, linked).catch(err => {\n          this.notify.notifyError('Failed to link issue!', err);\n          // aborting on this error would cause weird non-recoverable state so we won't rethrow it\n        }));\n      }\n      await Promise.all(promises);\n\n      this.dialogRef.close(true);\n    }).catch(err => {\n      this.notify.notifyError('Failed to create issue!', err);\n      this.saveFailed = true;\n    }).finally(() => {\n      this.loading = false;\n    });\n  }\n}\n\n/**\n * Interface that defines what data is injected to the dialog.\n */\nexport interface DialogData {\n  projectId: string;\n  // initial state of the issue's component list\n  components: NodeId[];\n  // initial state of the issue's location list\n  locations: NodeId[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData-1.html":{"url":"interfaces/DialogData-1.html","title":"interface - DialogData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dialogs/remove-dialog/remove-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            confirmButtonText\n                                        \n                                \n                                \n                                        \n                                            messages\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            verificationName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        confirmButtonText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmButtonText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If set, shows this text as the text in the confirm button. If not set, button shows 'Delete'\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        messages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        messages:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The list of lines shown in the dialog. If a line starts with a space, the line will be indented\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        verificationName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        verificationName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If set, shows a text box that forces the user to type the specified text before being able to click the confirm button\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormControl, ValidatorFn} from '@angular/forms';\n\n/**\n * This component is a confirmation dialog for anything that involves deleting\n *\n * #### Example\n * ```ts\n * // ...\n *\n * constructor(private dialog: MatDialog, ...)\n *\n * // ...\n *\n * const dialogRef = this.dialog.open(RemoveDialogComponent,\n * {\n *   data: {\n *     title: 'This is the title of the dialog',\n *     messages: ['Every entry is a new line',\n *                'This is the next line',\n *                ' Lines beginning with a space will be indented'],\n *     verificationName: 'In order for the user to be able to click the confirm button, this text has to be typed',\n *     confirmButtonText: 'This is the text of the confirm button'\n *   }\n * });\n *\n * dialogRef.afterClosed().subscribe(confirm => {\n *   if (confirm) {\n *     console.log('Deleted!');\n *   } else {\n *     console.log('Not deleted!');\n *   }\n * });\n * ```\n */\n@Component({\n  selector: 'app-remove-dialog',\n  templateUrl: './remove-dialog.component.html',\n  styleUrls: ['./remove-dialog.component.scss']\n})\nexport class RemoveDialogComponent implements OnInit {\n  matchValidator: ValidatorFn = control => {\n    return control.value === this.data.verificationName ? null : {'Names don\\'t match': true};\n  }\n\n  verificationNameInput = new FormControl('', this.matchValidator);\n\n  constructor(public dialogRef: MatDialogRef,\n              @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n  }\n\n  ngOnInit(): void {\n    this.verificationNameInput.markAsTouched();\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close(false);\n  }\n\n  onDeleteClick(): void {\n    this.dialogRef.close(true);\n  }\n}\n\nexport interface DialogData {\n  title: string;\n  /** The list of lines shown in the dialog. If a line starts with a space, the line will be indented */\n  messages: Array;\n  /** If set, shows a text box that forces the user to type the specified text before being able to click the confirm button */\n  verificationName?: string;\n  /** If set, shows this text as the text in the confirm button. If not set, button shows 'Delete' */\n  confirmButtonText?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterSelection.html":{"url":"interfaces/FilterSelection.html","title":"interface - FilterSelection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FilterSelection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/label-search/label-search.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            labels\n                                        \n                                \n                                \n                                        \n                                            texts\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        labels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        labels:         FilterLabel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FilterLabel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        texts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        texts:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { concat, of, Subject, Observable, BehaviorSubject } from 'rxjs';\nimport { catchError, distinctUntilChanged, switchMap, tap } from 'rxjs/operators';\nimport { FilterLabel, isFilterLabel, LabelStoreService } from '../../data/label/label-store.service';\nimport { StateService } from '../../state.service';\n\n/**\n * This component is responsible for the display of the search bar above the graph.\n * It allows for filtering issues by multiple labels and text fragments.\n */\n@Component({\n  selector: 'app-label-search',\n  templateUrl: './label-search.component.html',\n  styleUrls: ['./label-search.component.scss']\n})\nexport class LabelSearchComponent implements OnInit {\n  public filterSelection$ = new BehaviorSubject({labels: [], texts: []});\n\n  labels$: Observable;\n  labelsLoading = false;\n  labelsInput$ = new Subject();\n  selectedLabels: FilterElement[] = [];\n\n  constructor(private labelStore: LabelStoreService, private ss: StateService) {\n  }\n\n  ngOnInit() {\n      this.loadLabels();\n  }\n\n  trackByFn(item: FilterLabel) {\n      return item.id;\n  }\n\n  /**\n   * Emit value representing label and text fragments in the search bar via this.filterSelection$\n   */\n  emitSelectedLabels() {\n    const selection: FilterSelection = {texts: [], labels: []};\n    // find out which elements in search bar correspond to an existing label on the backend and which to a text fragment\n    selection.texts = this.selectedLabels.filter(item => !isFilterLabel(item)).map(item => item.name);\n    selection.labels = this.selectedLabels.filter(label => isFilterLabel(label)) as FilterLabel[];\n    this.filterSelection$.next(selection);\n  }\n\n  /**\n   * Load all labels from backend that match the currently typed in ng-select element\n   */\n  private loadLabels() {\n      this.labels$ = concat(\n          of([]), // default items\n          this.labelsInput$.pipe(\n              distinctUntilChanged(),\n              tap(() => this.labelsLoading = true),\n              switchMap(term => this.labelStore.getMatchingLabels(this.ss.state.project.node.id, term).pipe(\n                  catchError(() => of([])), // empty list on error\n                  tap(() => this.labelsLoading = false)\n              ))\n          )\n      );\n  }\n\n}\n\n\n/**\n * The bar can contain elements standing for labels and elements for text fragments.\n */\ntype FilterElement = TextFragment | FilterLabel;\n\ninterface TextFragment {\n  name: string;\n}\n\nexport interface FilterSelection {\n  texts: string[];\n  labels: FilterLabel[];\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterState.html":{"url":"interfaces/FilterState.html","title":"interface - FilterState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FilterState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/shared.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            selectedCategories\n                                        \n                                \n                                \n                                        \n                                            selectedFilter\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        selectedCategories\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedCategories:         SelectedCategories\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SelectedCategories\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedFilter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedFilter:         FilterSelection\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FilterSelection\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IssueCategory } from 'src/generated/graphql';\nimport { FilterSelection } from './label-search/label-search.component';\n\ntype EnumDictionary = {\n  [K in T]: U;\n};\n\nexport type SelectedCategories = EnumDictionary;\n\nexport interface FilterState {\n  selectedCategories: SelectedCategories;\n  selectedFilter: FilterSelection;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FrameComponent.html":{"url":"components/FrameComponent.html","title":"component - FrameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FrameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/frame/frame.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component holds the 'frame' of the application\ncontaining the top bar, the side bar and the main container\ninto which individual views are rendered based on the url.\nIt also bridges between top bar and side menu:\n When the user clicks the menu icon in the topbar, this is communicated to\nthe navigation drawer via this.showDrawer\nThe component itself checks whether the user is currently in a project\nand passes this information down to the sidebar and topbar. It also checks the\ndisplay size and makes the side menu an overlay when on handset size.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-frame\n            \n\n            \n                styleUrls\n                ./frame.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./frame.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isHandset$\n                            \n                            \n                                    Public\n                                isProjectSet$\n                            \n                            \n                                    Public\n                                showDrawer\n                            \n                            \n                                    Public\n                                ss\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                prepareRoute\n                            \n                            \n                                toggleMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver, ss: StateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/frame/frame.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ss\n                                                  \n                                                        \n                                                                        StateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        prepareRoute\n                        \n                    \n                \n            \n            \n                \nprepareRoute(outlet: RouterOutlet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/frame/frame.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    outlet\n                                    \n                                                RouterOutlet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenu\n                        \n                    \n                \n            \n            \n                \ntoggleMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/frame/frame.component.ts:45\n                \n            \n\n\n            \n                \n                    When user clicks sandwich this.showDrawer boolean changes value.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isHandset$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.breakpointObserver.observe(Breakpoints.Handset)\n  .pipe(\n    map(result => result.matches),\n    shareReplay()\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/frame/frame.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isProjectSet$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/frame/frame.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        showDrawer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/frame/frame.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ss\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StateService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/frame/frame.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { StateService } from '@app/state.service';\nimport { RouterOutlet } from '@angular/router';\nimport { slider } from '../route-animations';\n\n/**\n * This component holds the 'frame' of the application\n * containing the top bar, the side bar and the main container\n * into which individual views are rendered based on the url.\n * It also bridges between top bar and side menu:\n *  When the user clicks the menu icon in the topbar, this is communicated to\n * the navigation drawer via this.showDrawer\n * The component itself checks whether the user is currently in a project\n * and passes this information down to the sidebar and topbar. It also checks the\n * display size and makes the side menu an overlay when on handset size.\n */\n@Component({\n  selector: 'app-frame',\n  templateUrl: './frame.component.html',\n  styleUrls: ['./frame.component.scss'],\n  animations: [slider]\n})\nexport class FrameComponent {\n  public isProjectSet$ = new BehaviorSubject(false);\n  public showDrawer = true;\n\n  isHandset$: Observable = this.breakpointObserver.observe(Breakpoints.Handset)\n  .pipe(\n    map(result => result.matches),\n    shareReplay()\n  );\n\n  constructor(private breakpointObserver: BreakpointObserver, public ss: StateService) {\n    ss.state$.pipe(\n      map(state => (state.project != null))\n    ).subscribe(this.isProjectSet$);\n  }\n\n  /**\n   * When user clicks sandwich this.showDrawer boolean changes value.\n   */\n  toggleMenu(): void {\n    this.showDrawer = !this.showDrawer;\n  }\n\n  prepareRoute(outlet: RouterOutlet) {\n    return outlet && outlet.activatedRouteData && outlet.activatedRouteData.animation;\n  }\n}\n\n    \n\n    \n        \n\n\n  \n  \n    \n  \n  \n    \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./frame.component.scss\n                \n                .sidenav-container {\n  height: 100%;\n  grid-column: 1 / 2;\n  grid-row: 2 / 3;\n}\n\n.sidenav {\n  width: 200px;\n}\n\n.sidenav .mat-toolbar {\n  background: inherit;\n}\n\n.sidenav-content {\n  display: flex;\n  flex-flow: column;\n  height: 100%;\n}\n\n.container {\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  flex: 1 1 auto;\n  overflow-y: auto;\n}\n\n.root {\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: auto 1fr;\n  height: 100%;\n  overflow-y: hidden;\n}\n\n.header {\n  grid-column: 1 / 2;\n  grid-row: 1 / 2;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'FrameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GraphComponent.html":{"url":"classes/GraphComponent.html","title":"class - GraphComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GraphComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/issue-graph/graph-data.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                issues\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromGQL\n                            \n                            \n                                    Static\n                                mapFromGQL\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:134\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:135\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:133\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        fromGQL\n                        \n                    \n                \n            \n            \n                \n                    \n                    fromGQL(gqlGraphComponent: GQLGraphComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/graph-data.ts:141\n                \n            \n\n\n            \n                \n                    Convert backend representation of graph component to frontend representation.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    gqlGraphComponent\n                                    \n                                                GQLGraphComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        backend representation of component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GraphComponent\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapFromGQL\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapFromGQL(gqlGraphComponents: GQLGraphComponent[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/graph-data.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gqlGraphComponents\n                                    \n                                                GQLGraphComponent[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Map\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Component,\n  ComponentInterface, GetIssueGraphDataDocument,\n  GetIssueGraphDataQuery,\n  Issue,\n  IssueCategory,\n  IssuePage,\n  Maybe,\n  Scalars\n} from 'src/generated/graphql';\nimport {DefaultDictionary} from 'typescript-collections';\n\n\ntype LocationId = Scalars['ID'];\ntype GraphFolder = [LocationId, IssueCategory];\ntype GraphLocation = GraphInterface | GraphComponent;\n\n/**\n * Describes data needed by IssueGraphComponent to draw the graph.\n */\nexport interface GraphData {\n  components: Map;\n  interfaces: Map;\n  // graphLocations is the union of all components and interfaces\n  graphLocations: Map;\n  relatedFolders: DefaultDictionary;\n  linkIssues: GraphIssue[];\n}\n\nexport class GraphDataFactory {\n  /**\n   * Removes the counts for issue categories which are filtered. This is a workaround\n   * needed because the backend doesn't allow us to only ask for the counts of non-filtered categories.\n   * @param graphData the data with the unnecessary counts\n   * @param activeCategories the categories corresponding to the activated toggles of the graph component\n   */\n  static removeFilteredData(graphData: GraphData, activeCategories: IssueCategory[]) {\n    for (const location of graphData.graphLocations.values()) {\n      location.issues = new Map([...location.issues].filter(([category, count]) => activeCategories.includes(category)));\n    }\n    return graphData;\n  }\n\n  /**\n   * Converts the data required for the graph from the format the backend delivers into a\n   * GraphData object as needed by the IssueGraphComponent for rendering.\n   */\n  static graphDataFromGQL(data: GetIssueGraphDataQuery): GraphData {\n    const components = GraphComponent.mapFromGQL(data.node.components.nodes);\n    const interfaces = GraphInterface.mapFromGQL(data.node.interfaces.nodes);\n    const graphLocations: Map = new Map([...components, ...interfaces]);\n    const linkIssues = data.node.linkingIssues.nodes.map(gqlIssue => GraphIssue.fromGQL(gqlIssue));\n    const relatedFolders = computeRelatedFolders(linkIssues, interfaces);\n    return {\n      components, interfaces, graphLocations, relatedFolders, linkIssues\n    };\n  }\n}\n\n/**\n * @param locationIds ids of components and interfaces\n * @param interfaces mapping from\n * @returns locationIds with ids of components offering interfaces whoose id is alo in locationIds removed\n */\nfunction removeOfferingComponents(locationIds: string[], interfaces: Map) {\n  // compute components that offer an interface whoose id is in locationIds\n  const interfaceOfferingComponents: Set = new Set(locationIds.filter(locationId => interfaces.has(locationId)).map(interfaceId =>\n    interfaces.get(interfaceId).offeredBy\n  ));\n  // return location ids with the components offering an interface with id in locationIds removed\n  return locationIds.filter(id => !interfaceOfferingComponents.has(id));\n}\n\n/**\n * Issues counts\n * @param bugCount number of bugs\n * @param featureRequestCount number of feature requests\n * @param unclassifiedCount number of unclassified issues\n * @returns counts mapping IssueCategory values to the count specified by arguments\n */\nfunction issueCounts(bugCount: number, featureRequestCount: number, unclassifiedCount: number): Map {\n  return new Map([\n    [IssueCategory.Bug, bugCount],\n    [IssueCategory.FeatureRequest, featureRequestCount],\n    [IssueCategory.Unclassified, unclassifiedCount]\n  ]);\n}\n\n// backend data format for interface\ntype GQLInterface = Pick & {\n  component?: Maybe>;\n  bugs?: Maybe>;\n  featureRequests?: Maybe>;\n  unclassified?: Maybe>;\n  consumedBy?: Maybe>>> }>\n};\n\n// desired frontend data format for interface\nexport class GraphInterface {\n  id: Scalars['ID'];\n  name: string;\n  offeredBy: Scalars['ID'];\n  consumedBy: Scalars['ID'][];\n  issues: Map;\n\n  static fromGQL(gqlInterface: GQLInterface): GraphInterface {\n    const issues = issueCounts(gqlInterface.bugs.totalCount,\n      gqlInterface.featureRequests.totalCount,\n      gqlInterface.unclassified.totalCount);\n    return {\n      id: gqlInterface.id,\n      name: gqlInterface.name,\n      offeredBy: gqlInterface.component.id,\n      consumedBy: gqlInterface.consumedBy.nodes.map(component => component.id),\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlInterfaces: GQLInterface[]): Map {\n    return new Map(gqlInterfaces.map(gqlInterface => [gqlInterface.id, GraphInterface.fromGQL(gqlInterface)]));\n  }\n}\n\n// backend data format for component\ntype GQLGraphComponent = Pick & {\n  bugs?: Pick;\n  featureRequests?: Pick;\n  unclassified?: Pick;\n};\n\n// desired frontend data format for component\nexport class GraphComponent {\n  name: string;\n  id: Scalars['ID'];\n  issues: Map;\n\n  /**\n   * Convert backend representation of graph component to frontend representation.\n   * @param gqlGraphComponent backend representation of component\n   */\n  static fromGQL(gqlGraphComponent: GQLGraphComponent): GraphComponent {\n    const issues = issueCounts(gqlGraphComponent.bugs.totalCount,\n      gqlGraphComponent.featureRequests.totalCount,\n      gqlGraphComponent.unclassified.totalCount);\n    return {\n      id: gqlGraphComponent.id,\n      name: gqlGraphComponent.name,\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlGraphComponents: GQLGraphComponent[]): Map {\n    return new Map(gqlGraphComponents.map(gqlComponent => [gqlComponent.id, GraphComponent.fromGQL(gqlComponent)]));\n  }\n}\n\n// backend data fromat for issue\ntype GQLIssue = Pick & {\n  locations?: {\n    nodes?: (Pick | Pick)[];\n  };\n  linksToIssues?: {\n    nodes?: (Pick & { locations?: { nodes?: (Pick | Pick)[]; }; })[];\n  };\n};\n\n// desired frontend data format for issue\nclass GraphIssue {\n  id: Scalars['ID'];\n  category: IssueCategory;\n  locations: LocationId[];\n  linksIssues?: GraphIssue[];\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlPartialIssue backend representation of issue\n   */\n  static fromGQLNoLinks(gqlPartialIssue: Pick) {\n    return {\n      id: gqlPartialIssue.id,\n      category: gqlPartialIssue.category,\n      locations: gqlPartialIssue.locations.nodes.map(location => location.id)\n    };\n  }\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlIssue backend representation of Issues\n   */\n  static fromGQL(gqlIssue: GQLIssue): GraphIssue {\n    const issue: GraphIssue = this.fromGQLNoLinks(gqlIssue);\n    issue.linksIssues = gqlIssue.linksToIssues.nodes.map(gqlPartialIssue => this.fromGQLNoLinks(gqlPartialIssue));\n    return issue;\n  }\n}\n\n/**\n * The graph displays edges between issue folders that contain issues which link\n * to each other. This function computes this information. Drawing is handled in\n * IssueGraphComponent.\n * @param linkIssues contains only issues that link to other issues\n * @param interfaces mapping from ids of locations to interfaces attached to locations\n */\nfunction computeRelatedFolders(linkIssues: GraphIssue[], interfaces: Map):\n  DefaultDictionary {\n  let targetFolders: GraphFolder[];\n  const relatedFolders: DefaultDictionary = new DefaultDictionary(() => []);\n  for (const issue of linkIssues) {\n    const sourceLocationIds = removeOfferingComponents(issue.locations, interfaces);\n    const sourceFolders: GraphFolder[] = sourceLocationIds.map(locationId => [locationId, issue.category]);\n    targetFolders = [];\n    for (const linkedIssue of issue.linksIssues) {\n      const targetLocationIds = removeOfferingComponents(linkedIssue.locations, interfaces);\n      // @ts-ignore\n      targetFolders = targetFolders.concat(targetLocationIds.map(locationId => [locationId, linkedIssue.category]));\n    }\n    sourceFolders.forEach(folder =>\n      relatedFolders.setValue(folder,\n        (relatedFolders.getValue(folder).concat(targetFolders))));\n  }\n  return relatedFolders;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphData.html":{"url":"interfaces/GraphData.html","title":"interface - GraphData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GraphData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/issue-graph/graph-data.ts\n        \n\n\n            \n                Description\n            \n            \n                Describes data needed by IssueGraphComponent to draw the graph.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            components\n                                        \n                                \n                                \n                                        \n                                            graphLocations\n                                        \n                                \n                                \n                                        \n                                            interfaces\n                                        \n                                \n                                \n                                        \n                                            linkIssues\n                                        \n                                \n                                \n                                        \n                                            relatedFolders\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        components\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        components:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        graphLocations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        graphLocations:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interfaces\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interfaces:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        linkIssues\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        linkIssues:         GraphIssue[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GraphIssue[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        relatedFolders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        relatedFolders:         DefaultDictionary\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DefaultDictionary\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  ComponentInterface, GetIssueGraphDataDocument,\n  GetIssueGraphDataQuery,\n  Issue,\n  IssueCategory,\n  IssuePage,\n  Maybe,\n  Scalars\n} from 'src/generated/graphql';\nimport {DefaultDictionary} from 'typescript-collections';\n\n\ntype LocationId = Scalars['ID'];\ntype GraphFolder = [LocationId, IssueCategory];\ntype GraphLocation = GraphInterface | GraphComponent;\n\n/**\n * Describes data needed by IssueGraphComponent to draw the graph.\n */\nexport interface GraphData {\n  components: Map;\n  interfaces: Map;\n  // graphLocations is the union of all components and interfaces\n  graphLocations: Map;\n  relatedFolders: DefaultDictionary;\n  linkIssues: GraphIssue[];\n}\n\nexport class GraphDataFactory {\n  /**\n   * Removes the counts for issue categories which are filtered. This is a workaround\n   * needed because the backend doesn't allow us to only ask for the counts of non-filtered categories.\n   * @param graphData the data with the unnecessary counts\n   * @param activeCategories the categories corresponding to the activated toggles of the graph component\n   */\n  static removeFilteredData(graphData: GraphData, activeCategories: IssueCategory[]) {\n    for (const location of graphData.graphLocations.values()) {\n      location.issues = new Map([...location.issues].filter(([category, count]) => activeCategories.includes(category)));\n    }\n    return graphData;\n  }\n\n  /**\n   * Converts the data required for the graph from the format the backend delivers into a\n   * GraphData object as needed by the IssueGraphComponent for rendering.\n   */\n  static graphDataFromGQL(data: GetIssueGraphDataQuery): GraphData {\n    const components = GraphComponent.mapFromGQL(data.node.components.nodes);\n    const interfaces = GraphInterface.mapFromGQL(data.node.interfaces.nodes);\n    const graphLocations: Map = new Map([...components, ...interfaces]);\n    const linkIssues = data.node.linkingIssues.nodes.map(gqlIssue => GraphIssue.fromGQL(gqlIssue));\n    const relatedFolders = computeRelatedFolders(linkIssues, interfaces);\n    return {\n      components, interfaces, graphLocations, relatedFolders, linkIssues\n    };\n  }\n}\n\n/**\n * @param locationIds ids of components and interfaces\n * @param interfaces mapping from\n * @returns locationIds with ids of components offering interfaces whoose id is alo in locationIds removed\n */\nfunction removeOfferingComponents(locationIds: string[], interfaces: Map) {\n  // compute components that offer an interface whoose id is in locationIds\n  const interfaceOfferingComponents: Set = new Set(locationIds.filter(locationId => interfaces.has(locationId)).map(interfaceId =>\n    interfaces.get(interfaceId).offeredBy\n  ));\n  // return location ids with the components offering an interface with id in locationIds removed\n  return locationIds.filter(id => !interfaceOfferingComponents.has(id));\n}\n\n/**\n * Issues counts\n * @param bugCount number of bugs\n * @param featureRequestCount number of feature requests\n * @param unclassifiedCount number of unclassified issues\n * @returns counts mapping IssueCategory values to the count specified by arguments\n */\nfunction issueCounts(bugCount: number, featureRequestCount: number, unclassifiedCount: number): Map {\n  return new Map([\n    [IssueCategory.Bug, bugCount],\n    [IssueCategory.FeatureRequest, featureRequestCount],\n    [IssueCategory.Unclassified, unclassifiedCount]\n  ]);\n}\n\n// backend data format for interface\ntype GQLInterface = Pick & {\n  component?: Maybe>;\n  bugs?: Maybe>;\n  featureRequests?: Maybe>;\n  unclassified?: Maybe>;\n  consumedBy?: Maybe>>> }>\n};\n\n// desired frontend data format for interface\nexport class GraphInterface {\n  id: Scalars['ID'];\n  name: string;\n  offeredBy: Scalars['ID'];\n  consumedBy: Scalars['ID'][];\n  issues: Map;\n\n  static fromGQL(gqlInterface: GQLInterface): GraphInterface {\n    const issues = issueCounts(gqlInterface.bugs.totalCount,\n      gqlInterface.featureRequests.totalCount,\n      gqlInterface.unclassified.totalCount);\n    return {\n      id: gqlInterface.id,\n      name: gqlInterface.name,\n      offeredBy: gqlInterface.component.id,\n      consumedBy: gqlInterface.consumedBy.nodes.map(component => component.id),\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlInterfaces: GQLInterface[]): Map {\n    return new Map(gqlInterfaces.map(gqlInterface => [gqlInterface.id, GraphInterface.fromGQL(gqlInterface)]));\n  }\n}\n\n// backend data format for component\ntype GQLGraphComponent = Pick & {\n  bugs?: Pick;\n  featureRequests?: Pick;\n  unclassified?: Pick;\n};\n\n// desired frontend data format for component\nexport class GraphComponent {\n  name: string;\n  id: Scalars['ID'];\n  issues: Map;\n\n  /**\n   * Convert backend representation of graph component to frontend representation.\n   * @param gqlGraphComponent backend representation of component\n   */\n  static fromGQL(gqlGraphComponent: GQLGraphComponent): GraphComponent {\n    const issues = issueCounts(gqlGraphComponent.bugs.totalCount,\n      gqlGraphComponent.featureRequests.totalCount,\n      gqlGraphComponent.unclassified.totalCount);\n    return {\n      id: gqlGraphComponent.id,\n      name: gqlGraphComponent.name,\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlGraphComponents: GQLGraphComponent[]): Map {\n    return new Map(gqlGraphComponents.map(gqlComponent => [gqlComponent.id, GraphComponent.fromGQL(gqlComponent)]));\n  }\n}\n\n// backend data fromat for issue\ntype GQLIssue = Pick & {\n  locations?: {\n    nodes?: (Pick | Pick)[];\n  };\n  linksToIssues?: {\n    nodes?: (Pick & { locations?: { nodes?: (Pick | Pick)[]; }; })[];\n  };\n};\n\n// desired frontend data format for issue\nclass GraphIssue {\n  id: Scalars['ID'];\n  category: IssueCategory;\n  locations: LocationId[];\n  linksIssues?: GraphIssue[];\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlPartialIssue backend representation of issue\n   */\n  static fromGQLNoLinks(gqlPartialIssue: Pick) {\n    return {\n      id: gqlPartialIssue.id,\n      category: gqlPartialIssue.category,\n      locations: gqlPartialIssue.locations.nodes.map(location => location.id)\n    };\n  }\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlIssue backend representation of Issues\n   */\n  static fromGQL(gqlIssue: GQLIssue): GraphIssue {\n    const issue: GraphIssue = this.fromGQLNoLinks(gqlIssue);\n    issue.linksIssues = gqlIssue.linksToIssues.nodes.map(gqlPartialIssue => this.fromGQLNoLinks(gqlPartialIssue));\n    return issue;\n  }\n}\n\n/**\n * The graph displays edges between issue folders that contain issues which link\n * to each other. This function computes this information. Drawing is handled in\n * IssueGraphComponent.\n * @param linkIssues contains only issues that link to other issues\n * @param interfaces mapping from ids of locations to interfaces attached to locations\n */\nfunction computeRelatedFolders(linkIssues: GraphIssue[], interfaces: Map):\n  DefaultDictionary {\n  let targetFolders: GraphFolder[];\n  const relatedFolders: DefaultDictionary = new DefaultDictionary(() => []);\n  for (const issue of linkIssues) {\n    const sourceLocationIds = removeOfferingComponents(issue.locations, interfaces);\n    const sourceFolders: GraphFolder[] = sourceLocationIds.map(locationId => [locationId, issue.category]);\n    targetFolders = [];\n    for (const linkedIssue of issue.linksIssues) {\n      const targetLocationIds = removeOfferingComponents(linkedIssue.locations, interfaces);\n      // @ts-ignore\n      targetFolders = targetFolders.concat(targetLocationIds.map(locationId => [locationId, linkedIssue.category]));\n    }\n    sourceFolders.forEach(folder =>\n      relatedFolders.setValue(folder,\n        (relatedFolders.getValue(folder).concat(targetFolders))));\n  }\n  return relatedFolders;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GraphDataFactory.html":{"url":"classes/GraphDataFactory.html","title":"class - GraphDataFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GraphDataFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/issue-graph/graph-data.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                graphDataFromGQL\n                            \n                            \n                                    Static\n                                removeFilteredData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        graphDataFromGQL\n                        \n                    \n                \n            \n            \n                \n                    \n                    graphDataFromGQL(data: GetIssueGraphDataQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/graph-data.ts:48\n                \n            \n\n\n            \n                \n                    Converts the data required for the graph from the format the backend delivers into a\nGraphData object as needed by the IssueGraphComponent for rendering.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetIssueGraphDataQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GraphData\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        removeFilteredData\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeFilteredData(graphData: GraphData, activeCategories: IssueCategory[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/graph-data.ts:37\n                \n            \n\n\n            \n                \n                    Removes the counts for issue categories which are filtered. This is a workaround\nneeded because the backend doesn't allow us to only ask for the counts of non-filtered categories.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    graphData\n                                    \n                                                GraphData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the data with the unnecessary counts\n\n                                    \n                                \n                                \n                                    activeCategories\n                                    \n                                            IssueCategory[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the categories corresponding to the activated toggles of the graph component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GraphData\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Component,\n  ComponentInterface, GetIssueGraphDataDocument,\n  GetIssueGraphDataQuery,\n  Issue,\n  IssueCategory,\n  IssuePage,\n  Maybe,\n  Scalars\n} from 'src/generated/graphql';\nimport {DefaultDictionary} from 'typescript-collections';\n\n\ntype LocationId = Scalars['ID'];\ntype GraphFolder = [LocationId, IssueCategory];\ntype GraphLocation = GraphInterface | GraphComponent;\n\n/**\n * Describes data needed by IssueGraphComponent to draw the graph.\n */\nexport interface GraphData {\n  components: Map;\n  interfaces: Map;\n  // graphLocations is the union of all components and interfaces\n  graphLocations: Map;\n  relatedFolders: DefaultDictionary;\n  linkIssues: GraphIssue[];\n}\n\nexport class GraphDataFactory {\n  /**\n   * Removes the counts for issue categories which are filtered. This is a workaround\n   * needed because the backend doesn't allow us to only ask for the counts of non-filtered categories.\n   * @param graphData the data with the unnecessary counts\n   * @param activeCategories the categories corresponding to the activated toggles of the graph component\n   */\n  static removeFilteredData(graphData: GraphData, activeCategories: IssueCategory[]) {\n    for (const location of graphData.graphLocations.values()) {\n      location.issues = new Map([...location.issues].filter(([category, count]) => activeCategories.includes(category)));\n    }\n    return graphData;\n  }\n\n  /**\n   * Converts the data required for the graph from the format the backend delivers into a\n   * GraphData object as needed by the IssueGraphComponent for rendering.\n   */\n  static graphDataFromGQL(data: GetIssueGraphDataQuery): GraphData {\n    const components = GraphComponent.mapFromGQL(data.node.components.nodes);\n    const interfaces = GraphInterface.mapFromGQL(data.node.interfaces.nodes);\n    const graphLocations: Map = new Map([...components, ...interfaces]);\n    const linkIssues = data.node.linkingIssues.nodes.map(gqlIssue => GraphIssue.fromGQL(gqlIssue));\n    const relatedFolders = computeRelatedFolders(linkIssues, interfaces);\n    return {\n      components, interfaces, graphLocations, relatedFolders, linkIssues\n    };\n  }\n}\n\n/**\n * @param locationIds ids of components and interfaces\n * @param interfaces mapping from\n * @returns locationIds with ids of components offering interfaces whoose id is alo in locationIds removed\n */\nfunction removeOfferingComponents(locationIds: string[], interfaces: Map) {\n  // compute components that offer an interface whoose id is in locationIds\n  const interfaceOfferingComponents: Set = new Set(locationIds.filter(locationId => interfaces.has(locationId)).map(interfaceId =>\n    interfaces.get(interfaceId).offeredBy\n  ));\n  // return location ids with the components offering an interface with id in locationIds removed\n  return locationIds.filter(id => !interfaceOfferingComponents.has(id));\n}\n\n/**\n * Issues counts\n * @param bugCount number of bugs\n * @param featureRequestCount number of feature requests\n * @param unclassifiedCount number of unclassified issues\n * @returns counts mapping IssueCategory values to the count specified by arguments\n */\nfunction issueCounts(bugCount: number, featureRequestCount: number, unclassifiedCount: number): Map {\n  return new Map([\n    [IssueCategory.Bug, bugCount],\n    [IssueCategory.FeatureRequest, featureRequestCount],\n    [IssueCategory.Unclassified, unclassifiedCount]\n  ]);\n}\n\n// backend data format for interface\ntype GQLInterface = Pick & {\n  component?: Maybe>;\n  bugs?: Maybe>;\n  featureRequests?: Maybe>;\n  unclassified?: Maybe>;\n  consumedBy?: Maybe>>> }>\n};\n\n// desired frontend data format for interface\nexport class GraphInterface {\n  id: Scalars['ID'];\n  name: string;\n  offeredBy: Scalars['ID'];\n  consumedBy: Scalars['ID'][];\n  issues: Map;\n\n  static fromGQL(gqlInterface: GQLInterface): GraphInterface {\n    const issues = issueCounts(gqlInterface.bugs.totalCount,\n      gqlInterface.featureRequests.totalCount,\n      gqlInterface.unclassified.totalCount);\n    return {\n      id: gqlInterface.id,\n      name: gqlInterface.name,\n      offeredBy: gqlInterface.component.id,\n      consumedBy: gqlInterface.consumedBy.nodes.map(component => component.id),\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlInterfaces: GQLInterface[]): Map {\n    return new Map(gqlInterfaces.map(gqlInterface => [gqlInterface.id, GraphInterface.fromGQL(gqlInterface)]));\n  }\n}\n\n// backend data format for component\ntype GQLGraphComponent = Pick & {\n  bugs?: Pick;\n  featureRequests?: Pick;\n  unclassified?: Pick;\n};\n\n// desired frontend data format for component\nexport class GraphComponent {\n  name: string;\n  id: Scalars['ID'];\n  issues: Map;\n\n  /**\n   * Convert backend representation of graph component to frontend representation.\n   * @param gqlGraphComponent backend representation of component\n   */\n  static fromGQL(gqlGraphComponent: GQLGraphComponent): GraphComponent {\n    const issues = issueCounts(gqlGraphComponent.bugs.totalCount,\n      gqlGraphComponent.featureRequests.totalCount,\n      gqlGraphComponent.unclassified.totalCount);\n    return {\n      id: gqlGraphComponent.id,\n      name: gqlGraphComponent.name,\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlGraphComponents: GQLGraphComponent[]): Map {\n    return new Map(gqlGraphComponents.map(gqlComponent => [gqlComponent.id, GraphComponent.fromGQL(gqlComponent)]));\n  }\n}\n\n// backend data fromat for issue\ntype GQLIssue = Pick & {\n  locations?: {\n    nodes?: (Pick | Pick)[];\n  };\n  linksToIssues?: {\n    nodes?: (Pick & { locations?: { nodes?: (Pick | Pick)[]; }; })[];\n  };\n};\n\n// desired frontend data format for issue\nclass GraphIssue {\n  id: Scalars['ID'];\n  category: IssueCategory;\n  locations: LocationId[];\n  linksIssues?: GraphIssue[];\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlPartialIssue backend representation of issue\n   */\n  static fromGQLNoLinks(gqlPartialIssue: Pick) {\n    return {\n      id: gqlPartialIssue.id,\n      category: gqlPartialIssue.category,\n      locations: gqlPartialIssue.locations.nodes.map(location => location.id)\n    };\n  }\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlIssue backend representation of Issues\n   */\n  static fromGQL(gqlIssue: GQLIssue): GraphIssue {\n    const issue: GraphIssue = this.fromGQLNoLinks(gqlIssue);\n    issue.linksIssues = gqlIssue.linksToIssues.nodes.map(gqlPartialIssue => this.fromGQLNoLinks(gqlPartialIssue));\n    return issue;\n  }\n}\n\n/**\n * The graph displays edges between issue folders that contain issues which link\n * to each other. This function computes this information. Drawing is handled in\n * IssueGraphComponent.\n * @param linkIssues contains only issues that link to other issues\n * @param interfaces mapping from ids of locations to interfaces attached to locations\n */\nfunction computeRelatedFolders(linkIssues: GraphIssue[], interfaces: Map):\n  DefaultDictionary {\n  let targetFolders: GraphFolder[];\n  const relatedFolders: DefaultDictionary = new DefaultDictionary(() => []);\n  for (const issue of linkIssues) {\n    const sourceLocationIds = removeOfferingComponents(issue.locations, interfaces);\n    const sourceFolders: GraphFolder[] = sourceLocationIds.map(locationId => [locationId, issue.category]);\n    targetFolders = [];\n    for (const linkedIssue of issue.linksIssues) {\n      const targetLocationIds = removeOfferingComponents(linkedIssue.locations, interfaces);\n      // @ts-ignore\n      targetFolders = targetFolders.concat(targetLocationIds.map(locationId => [locationId, linkedIssue.category]));\n    }\n    sourceFolders.forEach(folder =>\n      relatedFolders.setValue(folder,\n        (relatedFolders.getValue(folder).concat(targetFolders))));\n  }\n  return relatedFolders;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GraphInterface.html":{"url":"classes/GraphInterface.html","title":"class - GraphInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GraphInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/issue-graph/graph-data.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                consumedBy\n                            \n                            \n                                id\n                            \n                            \n                                issues\n                            \n                            \n                                name\n                            \n                            \n                                offeredBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromGQL\n                            \n                            \n                                    Static\n                                mapFromGQL\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        consumedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        offeredBy\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:102\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        fromGQL\n                        \n                    \n                \n            \n            \n                \n                    \n                    fromGQL(gqlInterface: GQLInterface)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/graph-data.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gqlInterface\n                                    \n                                                GQLInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GraphInterface\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapFromGQL\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapFromGQL(gqlInterfaces: GQLInterface[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/graph-data.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gqlInterfaces\n                                    \n                                                GQLInterface[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Map\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Component,\n  ComponentInterface, GetIssueGraphDataDocument,\n  GetIssueGraphDataQuery,\n  Issue,\n  IssueCategory,\n  IssuePage,\n  Maybe,\n  Scalars\n} from 'src/generated/graphql';\nimport {DefaultDictionary} from 'typescript-collections';\n\n\ntype LocationId = Scalars['ID'];\ntype GraphFolder = [LocationId, IssueCategory];\ntype GraphLocation = GraphInterface | GraphComponent;\n\n/**\n * Describes data needed by IssueGraphComponent to draw the graph.\n */\nexport interface GraphData {\n  components: Map;\n  interfaces: Map;\n  // graphLocations is the union of all components and interfaces\n  graphLocations: Map;\n  relatedFolders: DefaultDictionary;\n  linkIssues: GraphIssue[];\n}\n\nexport class GraphDataFactory {\n  /**\n   * Removes the counts for issue categories which are filtered. This is a workaround\n   * needed because the backend doesn't allow us to only ask for the counts of non-filtered categories.\n   * @param graphData the data with the unnecessary counts\n   * @param activeCategories the categories corresponding to the activated toggles of the graph component\n   */\n  static removeFilteredData(graphData: GraphData, activeCategories: IssueCategory[]) {\n    for (const location of graphData.graphLocations.values()) {\n      location.issues = new Map([...location.issues].filter(([category, count]) => activeCategories.includes(category)));\n    }\n    return graphData;\n  }\n\n  /**\n   * Converts the data required for the graph from the format the backend delivers into a\n   * GraphData object as needed by the IssueGraphComponent for rendering.\n   */\n  static graphDataFromGQL(data: GetIssueGraphDataQuery): GraphData {\n    const components = GraphComponent.mapFromGQL(data.node.components.nodes);\n    const interfaces = GraphInterface.mapFromGQL(data.node.interfaces.nodes);\n    const graphLocations: Map = new Map([...components, ...interfaces]);\n    const linkIssues = data.node.linkingIssues.nodes.map(gqlIssue => GraphIssue.fromGQL(gqlIssue));\n    const relatedFolders = computeRelatedFolders(linkIssues, interfaces);\n    return {\n      components, interfaces, graphLocations, relatedFolders, linkIssues\n    };\n  }\n}\n\n/**\n * @param locationIds ids of components and interfaces\n * @param interfaces mapping from\n * @returns locationIds with ids of components offering interfaces whoose id is alo in locationIds removed\n */\nfunction removeOfferingComponents(locationIds: string[], interfaces: Map) {\n  // compute components that offer an interface whoose id is in locationIds\n  const interfaceOfferingComponents: Set = new Set(locationIds.filter(locationId => interfaces.has(locationId)).map(interfaceId =>\n    interfaces.get(interfaceId).offeredBy\n  ));\n  // return location ids with the components offering an interface with id in locationIds removed\n  return locationIds.filter(id => !interfaceOfferingComponents.has(id));\n}\n\n/**\n * Issues counts\n * @param bugCount number of bugs\n * @param featureRequestCount number of feature requests\n * @param unclassifiedCount number of unclassified issues\n * @returns counts mapping IssueCategory values to the count specified by arguments\n */\nfunction issueCounts(bugCount: number, featureRequestCount: number, unclassifiedCount: number): Map {\n  return new Map([\n    [IssueCategory.Bug, bugCount],\n    [IssueCategory.FeatureRequest, featureRequestCount],\n    [IssueCategory.Unclassified, unclassifiedCount]\n  ]);\n}\n\n// backend data format for interface\ntype GQLInterface = Pick & {\n  component?: Maybe>;\n  bugs?: Maybe>;\n  featureRequests?: Maybe>;\n  unclassified?: Maybe>;\n  consumedBy?: Maybe>>> }>\n};\n\n// desired frontend data format for interface\nexport class GraphInterface {\n  id: Scalars['ID'];\n  name: string;\n  offeredBy: Scalars['ID'];\n  consumedBy: Scalars['ID'][];\n  issues: Map;\n\n  static fromGQL(gqlInterface: GQLInterface): GraphInterface {\n    const issues = issueCounts(gqlInterface.bugs.totalCount,\n      gqlInterface.featureRequests.totalCount,\n      gqlInterface.unclassified.totalCount);\n    return {\n      id: gqlInterface.id,\n      name: gqlInterface.name,\n      offeredBy: gqlInterface.component.id,\n      consumedBy: gqlInterface.consumedBy.nodes.map(component => component.id),\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlInterfaces: GQLInterface[]): Map {\n    return new Map(gqlInterfaces.map(gqlInterface => [gqlInterface.id, GraphInterface.fromGQL(gqlInterface)]));\n  }\n}\n\n// backend data format for component\ntype GQLGraphComponent = Pick & {\n  bugs?: Pick;\n  featureRequests?: Pick;\n  unclassified?: Pick;\n};\n\n// desired frontend data format for component\nexport class GraphComponent {\n  name: string;\n  id: Scalars['ID'];\n  issues: Map;\n\n  /**\n   * Convert backend representation of graph component to frontend representation.\n   * @param gqlGraphComponent backend representation of component\n   */\n  static fromGQL(gqlGraphComponent: GQLGraphComponent): GraphComponent {\n    const issues = issueCounts(gqlGraphComponent.bugs.totalCount,\n      gqlGraphComponent.featureRequests.totalCount,\n      gqlGraphComponent.unclassified.totalCount);\n    return {\n      id: gqlGraphComponent.id,\n      name: gqlGraphComponent.name,\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlGraphComponents: GQLGraphComponent[]): Map {\n    return new Map(gqlGraphComponents.map(gqlComponent => [gqlComponent.id, GraphComponent.fromGQL(gqlComponent)]));\n  }\n}\n\n// backend data fromat for issue\ntype GQLIssue = Pick & {\n  locations?: {\n    nodes?: (Pick | Pick)[];\n  };\n  linksToIssues?: {\n    nodes?: (Pick & { locations?: { nodes?: (Pick | Pick)[]; }; })[];\n  };\n};\n\n// desired frontend data format for issue\nclass GraphIssue {\n  id: Scalars['ID'];\n  category: IssueCategory;\n  locations: LocationId[];\n  linksIssues?: GraphIssue[];\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlPartialIssue backend representation of issue\n   */\n  static fromGQLNoLinks(gqlPartialIssue: Pick) {\n    return {\n      id: gqlPartialIssue.id,\n      category: gqlPartialIssue.category,\n      locations: gqlPartialIssue.locations.nodes.map(location => location.id)\n    };\n  }\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlIssue backend representation of Issues\n   */\n  static fromGQL(gqlIssue: GQLIssue): GraphIssue {\n    const issue: GraphIssue = this.fromGQLNoLinks(gqlIssue);\n    issue.linksIssues = gqlIssue.linksToIssues.nodes.map(gqlPartialIssue => this.fromGQLNoLinks(gqlPartialIssue));\n    return issue;\n  }\n}\n\n/**\n * The graph displays edges between issue folders that contain issues which link\n * to each other. This function computes this information. Drawing is handled in\n * IssueGraphComponent.\n * @param linkIssues contains only issues that link to other issues\n * @param interfaces mapping from ids of locations to interfaces attached to locations\n */\nfunction computeRelatedFolders(linkIssues: GraphIssue[], interfaces: Map):\n  DefaultDictionary {\n  let targetFolders: GraphFolder[];\n  const relatedFolders: DefaultDictionary = new DefaultDictionary(() => []);\n  for (const issue of linkIssues) {\n    const sourceLocationIds = removeOfferingComponents(issue.locations, interfaces);\n    const sourceFolders: GraphFolder[] = sourceLocationIds.map(locationId => [locationId, issue.category]);\n    targetFolders = [];\n    for (const linkedIssue of issue.linksIssues) {\n      const targetLocationIds = removeOfferingComponents(linkedIssue.locations, interfaces);\n      // @ts-ignore\n      targetFolders = targetFolders.concat(targetLocationIds.map(locationId => [locationId, linkedIssue.category]));\n    }\n    sourceFolders.forEach(folder =>\n      relatedFolders.setValue(folder,\n        (relatedFolders.getValue(folder).concat(targetFolders))));\n  }\n  return relatedFolders;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GraphIssue.html":{"url":"classes/GraphIssue.html","title":"class - GraphIssue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GraphIssue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/issue-graph/graph-data.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                linksIssues\n                            \n                            \n                                locations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromGQL\n                            \n                            \n                                    Static\n                                fromGQLNoLinks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IssueCategory\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:170\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:169\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        linksIssues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GraphIssue[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:172\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        locations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocationId[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:171\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        fromGQL\n                        \n                    \n                \n            \n            \n                \n                    \n                    fromGQL(gqlIssue: GQLIssue)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/graph-data.ts:190\n                \n            \n\n\n            \n                \n                    Convert issue from backend to frontend format ignoring links between issues\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    gqlIssue\n                                    \n                                                GQLIssue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        backend representation of Issues\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GraphIssue\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        fromGQLNoLinks\n                        \n                    \n                \n            \n            \n                \n                    \n                    fromGQLNoLinks(gqlPartialIssue: Pick)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/graph-data.ts:178\n                \n            \n\n\n            \n                \n                    Convert issue from backend to frontend format ignoring links between issues\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    gqlPartialIssue\n                                    \n                                                Pick\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        backend representation of issue\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { id: any; category: any; locations: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Component,\n  ComponentInterface, GetIssueGraphDataDocument,\n  GetIssueGraphDataQuery,\n  Issue,\n  IssueCategory,\n  IssuePage,\n  Maybe,\n  Scalars\n} from 'src/generated/graphql';\nimport {DefaultDictionary} from 'typescript-collections';\n\n\ntype LocationId = Scalars['ID'];\ntype GraphFolder = [LocationId, IssueCategory];\ntype GraphLocation = GraphInterface | GraphComponent;\n\n/**\n * Describes data needed by IssueGraphComponent to draw the graph.\n */\nexport interface GraphData {\n  components: Map;\n  interfaces: Map;\n  // graphLocations is the union of all components and interfaces\n  graphLocations: Map;\n  relatedFolders: DefaultDictionary;\n  linkIssues: GraphIssue[];\n}\n\nexport class GraphDataFactory {\n  /**\n   * Removes the counts for issue categories which are filtered. This is a workaround\n   * needed because the backend doesn't allow us to only ask for the counts of non-filtered categories.\n   * @param graphData the data with the unnecessary counts\n   * @param activeCategories the categories corresponding to the activated toggles of the graph component\n   */\n  static removeFilteredData(graphData: GraphData, activeCategories: IssueCategory[]) {\n    for (const location of graphData.graphLocations.values()) {\n      location.issues = new Map([...location.issues].filter(([category, count]) => activeCategories.includes(category)));\n    }\n    return graphData;\n  }\n\n  /**\n   * Converts the data required for the graph from the format the backend delivers into a\n   * GraphData object as needed by the IssueGraphComponent for rendering.\n   */\n  static graphDataFromGQL(data: GetIssueGraphDataQuery): GraphData {\n    const components = GraphComponent.mapFromGQL(data.node.components.nodes);\n    const interfaces = GraphInterface.mapFromGQL(data.node.interfaces.nodes);\n    const graphLocations: Map = new Map([...components, ...interfaces]);\n    const linkIssues = data.node.linkingIssues.nodes.map(gqlIssue => GraphIssue.fromGQL(gqlIssue));\n    const relatedFolders = computeRelatedFolders(linkIssues, interfaces);\n    return {\n      components, interfaces, graphLocations, relatedFolders, linkIssues\n    };\n  }\n}\n\n/**\n * @param locationIds ids of components and interfaces\n * @param interfaces mapping from\n * @returns locationIds with ids of components offering interfaces whoose id is alo in locationIds removed\n */\nfunction removeOfferingComponents(locationIds: string[], interfaces: Map) {\n  // compute components that offer an interface whoose id is in locationIds\n  const interfaceOfferingComponents: Set = new Set(locationIds.filter(locationId => interfaces.has(locationId)).map(interfaceId =>\n    interfaces.get(interfaceId).offeredBy\n  ));\n  // return location ids with the components offering an interface with id in locationIds removed\n  return locationIds.filter(id => !interfaceOfferingComponents.has(id));\n}\n\n/**\n * Issues counts\n * @param bugCount number of bugs\n * @param featureRequestCount number of feature requests\n * @param unclassifiedCount number of unclassified issues\n * @returns counts mapping IssueCategory values to the count specified by arguments\n */\nfunction issueCounts(bugCount: number, featureRequestCount: number, unclassifiedCount: number): Map {\n  return new Map([\n    [IssueCategory.Bug, bugCount],\n    [IssueCategory.FeatureRequest, featureRequestCount],\n    [IssueCategory.Unclassified, unclassifiedCount]\n  ]);\n}\n\n// backend data format for interface\ntype GQLInterface = Pick & {\n  component?: Maybe>;\n  bugs?: Maybe>;\n  featureRequests?: Maybe>;\n  unclassified?: Maybe>;\n  consumedBy?: Maybe>>> }>\n};\n\n// desired frontend data format for interface\nexport class GraphInterface {\n  id: Scalars['ID'];\n  name: string;\n  offeredBy: Scalars['ID'];\n  consumedBy: Scalars['ID'][];\n  issues: Map;\n\n  static fromGQL(gqlInterface: GQLInterface): GraphInterface {\n    const issues = issueCounts(gqlInterface.bugs.totalCount,\n      gqlInterface.featureRequests.totalCount,\n      gqlInterface.unclassified.totalCount);\n    return {\n      id: gqlInterface.id,\n      name: gqlInterface.name,\n      offeredBy: gqlInterface.component.id,\n      consumedBy: gqlInterface.consumedBy.nodes.map(component => component.id),\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlInterfaces: GQLInterface[]): Map {\n    return new Map(gqlInterfaces.map(gqlInterface => [gqlInterface.id, GraphInterface.fromGQL(gqlInterface)]));\n  }\n}\n\n// backend data format for component\ntype GQLGraphComponent = Pick & {\n  bugs?: Pick;\n  featureRequests?: Pick;\n  unclassified?: Pick;\n};\n\n// desired frontend data format for component\nexport class GraphComponent {\n  name: string;\n  id: Scalars['ID'];\n  issues: Map;\n\n  /**\n   * Convert backend representation of graph component to frontend representation.\n   * @param gqlGraphComponent backend representation of component\n   */\n  static fromGQL(gqlGraphComponent: GQLGraphComponent): GraphComponent {\n    const issues = issueCounts(gqlGraphComponent.bugs.totalCount,\n      gqlGraphComponent.featureRequests.totalCount,\n      gqlGraphComponent.unclassified.totalCount);\n    return {\n      id: gqlGraphComponent.id,\n      name: gqlGraphComponent.name,\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlGraphComponents: GQLGraphComponent[]): Map {\n    return new Map(gqlGraphComponents.map(gqlComponent => [gqlComponent.id, GraphComponent.fromGQL(gqlComponent)]));\n  }\n}\n\n// backend data fromat for issue\ntype GQLIssue = Pick & {\n  locations?: {\n    nodes?: (Pick | Pick)[];\n  };\n  linksToIssues?: {\n    nodes?: (Pick & { locations?: { nodes?: (Pick | Pick)[]; }; })[];\n  };\n};\n\n// desired frontend data format for issue\nclass GraphIssue {\n  id: Scalars['ID'];\n  category: IssueCategory;\n  locations: LocationId[];\n  linksIssues?: GraphIssue[];\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlPartialIssue backend representation of issue\n   */\n  static fromGQLNoLinks(gqlPartialIssue: Pick) {\n    return {\n      id: gqlPartialIssue.id,\n      category: gqlPartialIssue.category,\n      locations: gqlPartialIssue.locations.nodes.map(location => location.id)\n    };\n  }\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlIssue backend representation of Issues\n   */\n  static fromGQL(gqlIssue: GQLIssue): GraphIssue {\n    const issue: GraphIssue = this.fromGQLNoLinks(gqlIssue);\n    issue.linksIssues = gqlIssue.linksToIssues.nodes.map(gqlPartialIssue => this.fromGQLNoLinks(gqlPartialIssue));\n    return issue;\n  }\n}\n\n/**\n * The graph displays edges between issue folders that contain issues which link\n * to each other. This function computes this information. Drawing is handled in\n * IssueGraphComponent.\n * @param linkIssues contains only issues that link to other issues\n * @param interfaces mapping from ids of locations to interfaces attached to locations\n */\nfunction computeRelatedFolders(linkIssues: GraphIssue[], interfaces: Map):\n  DefaultDictionary {\n  let targetFolders: GraphFolder[];\n  const relatedFolders: DefaultDictionary = new DefaultDictionary(() => []);\n  for (const issue of linkIssues) {\n    const sourceLocationIds = removeOfferingComponents(issue.locations, interfaces);\n    const sourceFolders: GraphFolder[] = sourceLocationIds.map(locationId => [locationId, issue.category]);\n    targetFolders = [];\n    for (const linkedIssue of issue.linksIssues) {\n      const targetLocationIds = removeOfferingComponents(linkedIssue.locations, interfaces);\n      // @ts-ignore\n      targetFolders = targetFolders.concat(targetLocationIds.map(locationId => [locationId, linkedIssue.category]));\n    }\n    sourceFolders.forEach(folder =>\n      relatedFolders.setValue(folder,\n        (relatedFolders.getValue(folder).concat(targetFolders))));\n  }\n  return relatedFolders;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphQLModule.html":{"url":"modules/GraphQLModule.html","title":"module - GraphQLModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphQLModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/graphql.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {APOLLO_NAMED_OPTIONS, APOLLO_OPTIONS, NamedOptions} from 'apollo-angular';\nimport {ApolloClientOptions, ApolloLink, InMemoryCache} from '@apollo/client/core';\nimport {HttpLink} from 'apollo-angular/http';\nimport {setContext} from '@apollo/link-context';\nimport {onError} from '@apollo/client/link/error';\nimport {HttpClientModule} from '@angular/common/http';\nimport {AuthenticationService} from './auth/authentication.service';\nimport {environment} from '@environments/environment';\nimport {IndividualConfig, ToastrModule, ToastrService} from 'ngx-toastr';\nimport {DefaultOptions} from '@apollo/client/core/ApolloClient';\n\n/**\n * This modules purpose is to provide define functions returning configurations\n * for the automatic creation of ApolloClients for graphql communication with the backend.\n * The key functions are providePublicApollo and provideDefaultApollo. The apollo instance\n * constructed from providePublicApollo is only used for registering.\n */\n\nconst defaultOptions: DefaultOptions = {\n  query: {\n    fetchPolicy: 'no-cache',\n    errorPolicy: 'all',\n  }\n};\n\n/**\n * Congiuration for network error toast on register page.\n */\nconst networkErrorToast: Partial = {\n  timeOut: 5000,\n  closeButton: true,\n  positionClass: 'toast-top-center',\n  enableHtml: true\n};\n\nconst basic = setContext((operation, context) => ({\n  headers: {\n    Accept: 'charset=utf-8'\n  }\n}));\n\nexport function createErrorLink(authService: AuthenticationService, toastr: ToastrService): ApolloLink {\n  const errorLink = onError(({graphQLErrors, networkError, operation, forward}) => {\n      if (graphQLErrors) {\n        const message = graphQLErrors.map(err => err.message).join('');\n        console.log(`[Graphql errors]: ${message}`);\n        toastr.error(message, 'GraphQL error', networkErrorToast);\n      }\n\n      if (networkError) {\n        console.log(`[Network error]: ${networkError.name}\\n${networkError.message}\\n${networkError.stack}`);\n        // @ts-ignore\n        if (networkError.status === 401) {\n          authService.logout();\n        } else {\n          toastr.error(networkError.message, 'Server/Connection error', networkErrorToast);\n        }\n      }\n    }\n  );\n  return errorLink;\n}\n\n/**\n * Create Apollo instance where credentials from local storage are attached to requests\n * @param httpLink\n * @param authService\n * @param toastr\n */\nexport function provideDefaultApollo(httpLink: HttpLink, authService: AuthenticationService,\n                                     toastr: ToastrService): ApolloClientOptions {\n  const token = localStorage.getItem('token');\n  const auth = setContext((_, {headers}) => {\n    // get the authentication token from local storage if it exists\n    // return the headers to the context so httpLink can read them\n    return {\n      headers: {\n        ...headers,\n        Authorization: localStorage.getItem('token') ? `Bearer ${localStorage.getItem('token')}` : ''\n      }\n    };\n  });\n  const errorLink = createErrorLink(authService, toastr);\n  const link = ApolloLink.from([basic, errorLink, auth, httpLink.create({uri: environment.apiUrl})]);\n  const cache = new InMemoryCache();\n  return {link, cache, defaultOptions};\n}\n\n/**\n * Creates Apollo Client used for user registration with public endpoint. In contrast to\n * provideDefaultApollo no token is attached to reqeusts.\n * @param httpLink\n * @param authService\n * @param toastr\n */\nexport function providePublicApollo(httpLink: HttpLink, authService: AuthenticationService, toastr: ToastrService): NamedOptions {\n  const errorLink = createErrorLink(authService, toastr);\n  const link = ApolloLink.from([basic, errorLink, httpLink.create({uri: environment.signUpUrl})]);\n  const cache = new InMemoryCache();\n  return {\n    publicClient: {\n      link,\n      cache,\n      defaultOptions\n    }\n  };\n}\n\n@NgModule({\n  imports: [\n    ToastrModule,\n  ],\n  exports: [\n    HttpClientModule\n  ],\n  providers: [\n    {\n      provide: APOLLO_OPTIONS,\n      useFactory: provideDefaultApollo,\n      deps: [HttpLink, AuthenticationService, ToastrService],\n    },\n    {\n      provide: APOLLO_NAMED_OPTIONS,\n      useFactory: providePublicApollo,\n      deps: [HttpLink, AuthenticationService, ToastrService],\n    }\n  ],\n})\nexport class GraphQLModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphsModule.html":{"url":"modules/GraphsModule.html","title":"module - GraphsModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GraphsModule\n\n\n\ncluster_GraphsModule_declarations\n\n\n\ncluster_GraphsModule_exports\n\n\n\n\nAddProjectMemberDialogComponent\n\nAddProjectMemberDialogComponent\n\n\n\nGraphsModule\n\nGraphsModule\n\nGraphsModule -->\n\nAddProjectMemberDialogComponent->GraphsModule\n\n\n\n\n\nCacheNodeComponent\n\nCacheNodeComponent\n\nGraphsModule -->\n\nCacheNodeComponent->GraphsModule\n\n\n\n\n\nCursorPaginatorComponent\n\nCursorPaginatorComponent\n\nGraphsModule -->\n\nCursorPaginatorComponent->GraphsModule\n\n\n\n\n\nIssueCategoryComponent\n\nIssueCategoryComponent\n\nGraphsModule -->\n\nIssueCategoryComponent->GraphsModule\n\n\n\n\n\nIssueFilterComponent\n\nIssueFilterComponent\n\nGraphsModule -->\n\nIssueFilterComponent->GraphsModule\n\n\n\n\n\nIssueGraphComponent\n\nIssueGraphComponent\n\nGraphsModule -->\n\nIssueGraphComponent->GraphsModule\n\n\n\n\n\nIssueGraphControlsComponent\n\nIssueGraphControlsComponent\n\nGraphsModule -->\n\nIssueGraphControlsComponent->GraphsModule\n\n\n\n\n\nIssueIconComponent\n\nIssueIconComponent\n\nGraphsModule -->\n\nIssueIconComponent->GraphsModule\n\n\n\n\n\nIssueItemComponent\n\nIssueItemComponent\n\nGraphsModule -->\n\nIssueItemComponent->GraphsModule\n\n\n\n\n\nIssueLabelComponent\n\nIssueLabelComponent\n\nGraphsModule -->\n\nIssueLabelComponent->GraphsModule\n\n\n\n\n\nIssueListComponent\n\nIssueListComponent\n\nGraphsModule -->\n\nIssueListComponent->GraphsModule\n\n\n\n\n\nIssueLocationComponent\n\nIssueLocationComponent\n\nGraphsModule -->\n\nIssueLocationComponent->GraphsModule\n\n\n\n\n\nIssueSidebarComponent\n\nIssueSidebarComponent\n\nGraphsModule -->\n\nIssueSidebarComponent->GraphsModule\n\n\n\n\n\nItemDirective\n\nItemDirective\n\nGraphsModule -->\n\nItemDirective->GraphsModule\n\n\n\n\n\nLabelSearchComponent\n\nLabelSearchComponent\n\nGraphsModule -->\n\nLabelSearchComponent->GraphsModule\n\n\n\n\n\nProjectHeaderComponent\n\nProjectHeaderComponent\n\nGraphsModule -->\n\nProjectHeaderComponent->GraphsModule\n\n\n\n\n\nProjectIssueListComponent\n\nProjectIssueListComponent\n\nGraphsModule -->\n\nProjectIssueListComponent->GraphsModule\n\n\n\n\n\nProjectMembersComponent\n\nProjectMembersComponent\n\nGraphsModule -->\n\nProjectMembersComponent->GraphsModule\n\n\n\n\n\nQueryBodyDirective\n\nQueryBodyDirective\n\nGraphsModule -->\n\nQueryBodyDirective->GraphsModule\n\n\n\n\n\nQueryButtonDirective\n\nQueryButtonDirective\n\nGraphsModule -->\n\nQueryButtonDirective->GraphsModule\n\n\n\n\n\nQueryComponent\n\nQueryComponent\n\nGraphsModule -->\n\nQueryComponent->GraphsModule\n\n\n\n\n\nSetEditorComponent\n\nSetEditorComponent\n\nGraphsModule -->\n\nSetEditorComponent->GraphsModule\n\n\n\n\n\nSetEditorDialogComponent\n\nSetEditorDialogComponent\n\nGraphsModule -->\n\nSetEditorDialogComponent->GraphsModule\n\n\n\n\n\nUserItemComponent\n\nUserItemComponent\n\nGraphsModule -->\n\nUserItemComponent->GraphsModule\n\n\n\n\n\nCursorPaginatorComponent \n\nCursorPaginatorComponent \n\nCursorPaginatorComponent  -->\n\nGraphsModule->CursorPaginatorComponent \n\n\n\n\n\nIssueCategoryComponent \n\nIssueCategoryComponent \n\nIssueCategoryComponent  -->\n\nGraphsModule->IssueCategoryComponent \n\n\n\n\n\nIssueGraphComponent \n\nIssueGraphComponent \n\nIssueGraphComponent  -->\n\nGraphsModule->IssueGraphComponent \n\n\n\n\n\nIssueGraphControlsComponent \n\nIssueGraphControlsComponent \n\nIssueGraphControlsComponent  -->\n\nGraphsModule->IssueGraphControlsComponent \n\n\n\n\n\nIssueIconComponent \n\nIssueIconComponent \n\nIssueIconComponent  -->\n\nGraphsModule->IssueIconComponent \n\n\n\n\n\nIssueItemComponent \n\nIssueItemComponent \n\nIssueItemComponent  -->\n\nGraphsModule->IssueItemComponent \n\n\n\n\n\nIssueLabelComponent \n\nIssueLabelComponent \n\nIssueLabelComponent  -->\n\nGraphsModule->IssueLabelComponent \n\n\n\n\n\nIssueListComponent \n\nIssueListComponent \n\nIssueListComponent  -->\n\nGraphsModule->IssueListComponent \n\n\n\n\n\nIssueLocationComponent \n\nIssueLocationComponent \n\nIssueLocationComponent  -->\n\nGraphsModule->IssueLocationComponent \n\n\n\n\n\nIssueSidebarComponent \n\nIssueSidebarComponent \n\nIssueSidebarComponent  -->\n\nGraphsModule->IssueSidebarComponent \n\n\n\n\n\nItemDirective \n\nItemDirective \n\nItemDirective  -->\n\nGraphsModule->ItemDirective \n\n\n\n\n\nProjectHeaderComponent \n\nProjectHeaderComponent \n\nProjectHeaderComponent  -->\n\nGraphsModule->ProjectHeaderComponent \n\n\n\n\n\nQueryBodyDirective \n\nQueryBodyDirective \n\nQueryBodyDirective  -->\n\nGraphsModule->QueryBodyDirective \n\n\n\n\n\nQueryButtonDirective \n\nQueryButtonDirective \n\nQueryButtonDirective  -->\n\nGraphsModule->QueryButtonDirective \n\n\n\n\n\nQueryComponent \n\nQueryComponent \n\nQueryComponent  -->\n\nGraphsModule->QueryComponent \n\n\n\n\n\nSetEditorComponent \n\nSetEditorComponent \n\nSetEditorComponent  -->\n\nGraphsModule->SetEditorComponent \n\n\n\n\n\nUserItemComponent \n\nUserItemComponent \n\nUserItemComponent  -->\n\nGraphsModule->UserItemComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/graphs/graphs.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            The IssueGraphComponent and IssueGraphControlsComponent form their own module declared here\nand imported into the main app.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddProjectMemberDialogComponent\n                        \n                        \n                            CacheNodeComponent\n                        \n                        \n                            CursorPaginatorComponent\n                        \n                        \n                            IssueCategoryComponent\n                        \n                        \n                            IssueFilterComponent\n                        \n                        \n                            IssueGraphComponent\n                        \n                        \n                            IssueGraphControlsComponent\n                        \n                        \n                            IssueIconComponent\n                        \n                        \n                            IssueItemComponent\n                        \n                        \n                            IssueLabelComponent\n                        \n                        \n                            IssueListComponent\n                        \n                        \n                            IssueLocationComponent\n                        \n                        \n                            IssueSidebarComponent\n                        \n                        \n                            ItemDirective\n                        \n                        \n                            LabelSearchComponent\n                        \n                        \n                            ProjectHeaderComponent\n                        \n                        \n                            ProjectIssueListComponent\n                        \n                        \n                            ProjectMembersComponent\n                        \n                        \n                            QueryBodyDirective\n                        \n                        \n                            QueryButtonDirective\n                        \n                        \n                            QueryComponent\n                        \n                        \n                            SetEditorComponent\n                        \n                        \n                            SetEditorDialogComponent\n                        \n                        \n                            UserItemComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CursorPaginatorComponent\n                        \n                        \n                            IssueCategoryComponent\n                        \n                        \n                            IssueGraphComponent\n                        \n                        \n                            IssueGraphControlsComponent\n                        \n                        \n                            IssueIconComponent\n                        \n                        \n                            IssueItemComponent\n                        \n                        \n                            IssueLabelComponent\n                        \n                        \n                            IssueListComponent\n                        \n                        \n                            IssueLocationComponent\n                        \n                        \n                            IssueSidebarComponent\n                        \n                        \n                            ItemDirective\n                        \n                        \n                            ProjectHeaderComponent\n                        \n                        \n                            QueryBodyDirective\n                        \n                        \n                            QueryButtonDirective\n                        \n                        \n                            QueryComponent\n                        \n                        \n                            SetEditorComponent\n                        \n                        \n                            UserItemComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IssueGraphComponent } from './issue-graph/issue-graph.component';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTableModule } from '@angular/material/table';\nimport '@ustutt/grapheditor-webcomponent/lib/index';\nimport { IssueGraphControlsComponent } from './issue-graph-controls/issue-graph-controls.component';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { IssueListComponent } from '@app/issue-list/issue-list.component';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { MatSortModule } from '@angular/material/sort';\nimport { LabelSearchComponent } from './label-search/label-search.component';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { NgOptionHighlightModule } from '@ng-select/ng-option-highlight';\nimport { ProjectIssueListComponent } from '@app/project-issue-list/project-issue-list.component';\nimport { ProjectMembersComponent } from '@app/project-members/project-members.component';\nimport { AddProjectMemberDialogComponent } from '../dialogs/add-project-member-dialog/add-project-member-dialog.component';\nimport { CursorPaginatorComponent } from '@app/components/cursor-paginator/cursor-paginator.component';\nimport { SetEditorComponent } from '@app/components/set-editor/set-editor.component';\nimport { ItemDirective } from '@app/components/item.directive';\nimport { IssueLabelComponent } from '@app/components/issue-label/issue-label.component';\nimport { SetEditorDialogComponent } from '@app/components/set-editor/set-editor-dialog.component';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { IssueItemComponent } from '@app/components/issue-item/issue-item.component';\nimport { UserItemComponent } from '@app/components/user-item/user-item.component';\nimport { IssueIconComponent } from '@app/components/issue-icon/issue-icon.component';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { IssueSidebarComponent } from '@app/issue-detail/issue-sidebar.component';\nimport { CacheNodeComponent } from '@app/components/cache-node.component';\nimport { ProjectHeaderComponent } from '@app/project-header/project-header.component';\nimport { IssueFilterComponent } from '@app/issue-list/issue-filter.component';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport {QueryBodyDirective, QueryButtonDirective, QueryComponent} from '@app/utils/query-component/query.component';\nimport {MatProgressSpinnerModule, MatSpinner} from '@angular/material/progress-spinner';\nimport {IssueLocationComponent} from '@app/components/issue-location/issue-location.component';\nimport {IssueCategoryComponent} from '@app/components/issue-category/issue-category.component';\n\n/**\n * The IssueGraphComponent and IssueGraphControlsComponent form their own module declared here\n * and imported into the main app.\n * @export\n * @class GraphsModule\n */\n@NgModule({\n  declarations: [\n    IssueGraphComponent,\n    IssueGraphControlsComponent,\n    IssueListComponent,\n    LabelSearchComponent,\n    ProjectIssueListComponent,\n    ProjectMembersComponent,\n    AddProjectMemberDialogComponent,\n    CursorPaginatorComponent,\n    SetEditorComponent,\n    ItemDirective,\n    IssueLabelComponent,\n    SetEditorDialogComponent,\n    IssueItemComponent,\n    UserItemComponent,\n    IssueIconComponent,\n    IssueSidebarComponent,\n    CacheNodeComponent,\n    ProjectHeaderComponent,\n    IssueFilterComponent,\n    QueryComponent,\n    QueryBodyDirective,\n    QueryButtonDirective,\n    IssueLocationComponent,\n    IssueCategoryComponent\n  ],\n  imports: [\n    CommonModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatSlideToggleModule,\n    MatDialogModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatInputModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    MatSlideToggleModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatTabsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    NgSelectModule,\n    NgOptionHighlightModule,\n    MatCheckboxModule,\n    MatMenuModule,\n    MatButtonToggleModule,\n    MatTooltipModule,\n    MatProgressSpinnerModule\n  ],\n  exports: [\n    CdkTableModule,\n    CdkTreeModule,\n    IssueGraphComponent,\n    IssueGraphControlsComponent,\n    IssueListComponent,\n    SetEditorComponent,\n    ItemDirective,\n    IssueLabelComponent,\n    IssueItemComponent,\n    UserItemComponent,\n    IssueIconComponent,\n    IssueSidebarComponent,\n    CursorPaginatorComponent,\n    ProjectHeaderComponent,\n    QueryComponent,\n    QueryBodyDirective,\n    QueryButtonDirective,\n    IssueLocationComponent,\n    IssueCategoryComponent\n  ],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n  ],\n  providers: [\n    {provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: {appearance: 'fill'}},\n  ]\n})\nexport class GraphsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InterfaceNode.html":{"url":"interfaces/InterfaceNode.html","title":"interface - InterfaceNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InterfaceNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/issue-graph-nodes.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IssueNode\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            offeredById\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        offeredById\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        offeredById:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {GraphComponent, GraphInterface} from '@app/data/issue-graph/graph-data';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\n\nexport {\n  IssueNode, ComponentNode, InterfaceNode, IssueGroupContainerNode, RelationEdge,\n  createComponentNode, createInterfaceNode, createIssueGroupContainerNode, createIssueFolderNode,\n  createRelationEdge, createConsumptionEdge, createInterfaceProvisionEdge,\n  Position,\n  getIssueFolderId\n};\n\nexport enum NodeType {\n  Component = 'component',\n  Interface = 'interface',\n  InterfaceConsumer = 'interface-connect',\n  IssueGroupContainer = 'issue-group-container'\n}\n\n/**\n * This file includes type definitions and creation functions (think constructors)\n * for nodes and edges that are added to the graph editor in order to visualize the project.\n * Since the data that is stored with these differs based on what they represent (e.g.\n * interface vs component node) we give each their own type. We do this by extending\n * the Node class or the Edge class of the grapheditor. These classes are instantiated\n * via calls to the contained create* functions within the drawGraph method of the IssueGraphComponent.\n */\n\ninterface IssueNode extends Node {\n  id: string;\n  title: string;\n  issueGroupContainer?: IssueGroupContainerNode;\n}\n\ninterface ComponentNode extends IssueNode {\n  data: GraphComponent;\n}\n\nfunction createComponentNode(component: GraphComponent, position: Position): ComponentNode {\n  return {\n    ...(position || zeroPosition),\n    id: component.id,\n    title: component.name,\n    type: NodeType.Component,\n    data: component\n  };\n}\n\ninterface InterfaceNode extends IssueNode {\n  offeredById: string;\n}\n\nfunction createInterfaceNode(intrface: GraphInterface, position: Position): InterfaceNode {\n  return {\n    ...(position || zeroPosition),\n    id: intrface.id,\n    title: intrface.name,\n    type: NodeType.Interface,\n    offeredById: intrface.offeredBy,\n  };\n}\n\ninterface IssueGroupContainerNode extends Node {\n  position: string;\n  issueGroupNodeIds: Set;\n}\n\nfunction createIssueGroupContainerNode(node: IssueNode): IssueGroupContainerNode {\n  return {\n    id: `${node.id}__issue-group-container`,\n    type: NodeType.IssueGroupContainer,\n    dynamicTemplate: 'issue-group-container',\n    x: 0,\n    y: 0,\n    position: 'bottom',\n    issueGroupNodeIds: new Set(),\n  };\n}\n\ninterface IssueFolderNode extends Node {\n  type: IssueCategory;\n  issueCount: string;\n}\n\nfunction createIssueFolderNode(node: IssueNode, issueCategory: IssueCategory, issueCount: string): IssueFolderNode {\n  return {\n    id: getIssueFolderId(node.id, issueCategory),\n    type: issueCategory,\n    x: 0,\n    y: 0,\n    issues: new Set(),\n    issueCount\n  };\n}\n\ninterface RelationEdge extends Edge {\n  sourceIssues: Set;\n}\n\nfunction createRelationEdge(sourceId: string, targetId: string, edgeType = folderEdgeTypes.RelatedTo): RelationEdge {\n  return {\n    id: `s${sourceId}t${targetId}r${edgeType}`,\n    source: sourceId,\n    target: targetId,\n    type: folderEdgeTypes.RelatedTo,\n    markerEnd: {\n      template: 'arrow',\n      relativeRotation: 0,\n    },\n    dragHandles: [],\n    sourceIssues: new Set()\n  };\n}\n\nfunction createConsumptionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.InterfaceConsumer,\n    markerEnd: {\n      template: 'interface-connector',\n      relativeRotation: 0,\n    },\n  };\n}\n\nfunction createInterfaceProvisionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.Interface,\n    dragHandles: [],\n  };\n}\n\nfunction getIssueFolderId(id: string, issueCategory: IssueCategory): string {\n  return `${id}__${issueCategory}`;\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst zeroPosition = {x: 0, y: 0};\n\nenum folderEdgeTypes {\n  RelatedTo = 'relatedTo',\n  Depends = 'dependency',\n  Duplicates = 'duplicate'\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InterfaceStoreService.html":{"url":"injectables/InterfaceStoreService.html","title":"injectable - InterfaceStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InterfaceStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/interface/interface-store.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service provides creation, retrievel, update and deletion of interfaces offered by components.\nThe GQL object are generated by the code generator based on interface.graphql in the same directory\nas this file.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                getConsumingComponents\n                            \n                            \n                                    Public\n                                getInterface\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createInterfaceMutation: CreateComponentInterfaceGQL, updateInterfaceMutation: UpdateComponentInterfaceGQL, deleteInterfaceMutation: DeleteComponentInterfaceGQL, getInterfaceQuery: GetInterfaceGQL, getConsumingComponentsQuery: GetConsumingComponentsGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/interface/interface-store.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createInterfaceMutation\n                                                  \n                                                        \n                                                                    CreateComponentInterfaceGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateInterfaceMutation\n                                                  \n                                                        \n                                                                    UpdateComponentInterfaceGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deleteInterfaceMutation\n                                                  \n                                                        \n                                                                    DeleteComponentInterfaceGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getInterfaceQuery\n                                                  \n                                                        \n                                                                    GetInterfaceGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getConsumingComponentsQuery\n                                                  \n                                                        \n                                                                    GetConsumingComponentsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(name: string, offeringComponentId: string, description?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/interface/interface-store.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    offeringComponentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/interface/interface-store.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getConsumingComponents\n                        \n                    \n                \n            \n            \n                \n                    \n                    getConsumingComponents(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/interface/interface-store.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getInterface\n                        \n                    \n                \n            \n            \n                \n                    \n                    getInterface(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/interface/interface-store.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(input: UpdateComponentInterfaceInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/interface/interface-store.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            UpdateComponentInterfaceInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {\n  CreateComponentInterfaceGQL,\n  CreateComponentInterfaceInput,\n  DeleteComponentInterfaceGQL,\n  DeleteComponentInterfaceInput,\n  GetConsumingComponentsGQL,\n  GetConsumingComponentsQuery,\n  GetInterfaceGQL,\n  GetInterfaceQuery,\n  UpdateComponentInterfaceGQL,\n  UpdateComponentInterfaceInput\n} from '../../../generated/graphql';\nimport {map} from 'rxjs/operators';\nimport {Observable} from 'rxjs';\n\n/**\n * This service provides creation, retrievel, update and deletion of interfaces offered by components.\n * The GQL object are generated by the code generator based on interface.graphql in the same directory\n * as this file.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class InterfaceStoreService {\n\n  constructor(private createInterfaceMutation: CreateComponentInterfaceGQL,\n              private updateInterfaceMutation: UpdateComponentInterfaceGQL,\n              private deleteInterfaceMutation: DeleteComponentInterfaceGQL,\n              private getInterfaceQuery: GetInterfaceGQL,\n              private getConsumingComponentsQuery: GetConsumingComponentsGQL) {\n  }\n\n  public create(name: string, offeringComponentId: string, description?: string) {\n    const input: CreateComponentInterfaceInput = {\n      name,\n      description,\n      component: offeringComponentId\n    };\n    return this.createInterfaceMutation.mutate({input});\n  }\n\n  public getInterface(id: string): Observable {\n    return this.getInterfaceQuery.fetch({id}).pipe(\n      map(({data}) => data)\n    );\n  }\n\n  public getConsumingComponents(id: string): Observable {\n    return this.getConsumingComponentsQuery.fetch({id}).pipe(map(({data}) => data));\n  }\n\n  public update(input: UpdateComponentInterfaceInput) {\n    return this.updateInterfaceMutation.mutate({input});\n  }\n\n  public delete(id: string) {\n    const input: DeleteComponentInterfaceInput = {\n      componentInterface: id\n    };\n    return this.deleteInterfaceMutation.mutate({input});\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueCategoryComponent.html":{"url":"components/IssueCategoryComponent.html","title":"component - IssueCategoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueCategoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/issue-category/issue-category.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-category\n            \n\n            \n                styleUrls\n                ./issue-category.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-category.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n                \n                    \n                        Type :     IssueCategory\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-category/issue-category.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {IssueCategory} from '../../../generated/graphql-dgql';\n\n@Component({\n  selector: 'app-issue-category',\n  templateUrl: './issue-category.component.html',\n  styleUrls: ['./issue-category.component.scss']\n})\nexport class IssueCategoryComponent {\n  @Input() category: IssueCategory;\n}\n\n    \n\n    \n        \n  \n    \n    Uncategorized\n  \n\n  \n    \n    Bug\n  \n\n  \n    \n    Feature Request\n  \n\n\n    \n\n    \n                \n                    ./issue-category.component.scss\n                \n                .category-icon {\n  vertical-align: middle;\n  margin-bottom: 3px;\n}\n\n.category-box {\n  background: rgba(0, 0, 0, 0.06);\n  border-radius: 8px;\n  align-items: center;\n  padding: 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Uncategorized            Bug            Feature Request  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueCategoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueContentsComponent.html":{"url":"components/IssueContentsComponent.html","title":"component - IssueContentsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueContentsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-detail/issue-contents.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component renders the contents of the issue: the issue body, timeline, and comment box.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-contents\n            \n\n            \n                styleUrls\n                issue-contents.component.scss\n            \n\n\n\n            \n                templateUrl\n                issue-contents.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                commentEditor\n                            \n                            \n                                    Public\n                                savingComment\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeIssue\n                            \n                            \n                                    Public\n                                commentIssue\n                            \n                            \n                                    Public\n                                reopenIssue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                issue$\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-detail/issue-contents.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        issue$\n                    \n                \n                \n                    \n                        Type :         DataNode\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/issue-contents.component.ts:19\n                            \n                        \n                \n                    \n                        The issue to be rendered.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/issue-contents.component.ts:21\n                            \n                        \n                \n                    \n                        The raw project ID.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        closeIssue\n                        \n                    \n                \n            \n            \n                \n                    \n                    closeIssue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/issue-contents.component.ts:56\n                \n            \n\n\n            \n                \n                    Closes the current issue.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        commentIssue\n                        \n                    \n                \n            \n            \n                \n                    \n                    commentIssue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/issue-contents.component.ts:66\n                \n            \n\n\n            \n                \n                    Adds a comment to the current issue with the data provided in the comment box.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        reopenIssue\n                        \n                    \n                \n            \n            \n                \n                    \n                    reopenIssue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/issue-contents.component.ts:61\n                \n            \n\n\n            \n                \n                    Reopens the currently closed issue.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        commentEditor\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('comment')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-contents.component.ts:35\n                        \n                    \n\n            \n                \n                    The comment editor (app-markdown-editor).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        savingComment\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-contents.component.ts:33\n                        \n                    \n\n            \n                \n                    True if the issue comment is currently being saved.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { DataList, DataNode } from '@app/data-dgql/query';\nimport { Issue } from '../../generated/graphql';\nimport { Subscription } from 'rxjs';\nimport DataService from '@app/data-dgql';\nimport { CURRENT_USER_NODE, ListType, NodeType } from '@app/data-dgql/id';\nimport { User } from '../../generated/graphql-dgql';\n\n/**\n * This component renders the contents of the issue: the issue body, timeline, and comment box.\n */\n@Component({\n  selector: 'app-issue-contents',\n  templateUrl: 'issue-contents.component.html',\n  styleUrls: ['issue-contents.component.scss']\n})\nexport class IssueContentsComponent implements OnInit, OnDestroy {\n  /** The issue to be rendered. */\n  @Input() issue$: DataNode;\n  /** The raw project ID. */\n  @Input() projectId: string;\n\n  /** @ignore */\n  public linkedIssues$: DataList;\n  /** @ignore */\n  public linkedIssueSub: Subscription;\n  /** @ignore */\n  public currentUser$: DataNode;\n  /** @ignore */\n  public currentUserSub: Subscription;\n\n  /** True if the issue comment is currently being saved. */\n  public savingComment = false;\n  /** The comment editor (app-markdown-editor). */\n  @ViewChild('comment') commentEditor;\n\n  constructor(private dataService: DataService) {}\n\n  ngOnInit() {\n    this.linkedIssues$ = this.dataService.getList({\n      node: this.issue$.id,\n      type: ListType.LinkedIssues\n    });\n    this.linkedIssueSub = this.linkedIssues$.subscribe();\n\n    this.currentUser$ = this.dataService.getNode(CURRENT_USER_NODE);\n    this.currentUserSub = this.currentUser$.subscribe();\n  }\n\n  ngOnDestroy() {\n    this.linkedIssueSub.unsubscribe();\n    this.currentUserSub.unsubscribe();\n  }\n\n  /** Closes the current issue. */\n  public closeIssue(): void {\n    this.dataService.mutations.closeIssue(Math.random().toString(), this.issue$.id);\n  }\n\n  /** Reopens the currently closed issue. */\n  public reopenIssue(): void {\n    this.dataService.mutations.reopenIssue(Math.random().toString(), this.issue$.id);\n  }\n\n  /** Adds a comment to the current issue with the data provided in the comment box. */\n  public commentIssue(): void {\n    this.savingComment = true;\n    this.dataService.mutations.addIssueComment(\n      Math.random().toString(),\n      this.issue$.id,\n      this.commentEditor.code\n    ).then(() => {\n      // only clear if successful\n      this.commentEditor.code = '';\n    }).finally(() => {\n      this.savingComment = false;\n    });\n  }\n}\n\n    \n\n    \n        \n    \n    \n\n    \n     0\" class=\"timeline-item\">\n        \n            \n                link\n                \n                    Linked Issues\n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                        \n                    \n                \n                 10\"\n                    [list]=\"linkedIssues$\"\n                    [pageSizes]=\"[10]\">\n            \n        \n    \n\n    \n\n    \n\n    \n    \n        \n            \n                \n                    Comment this issue as \n                \n            \n            \n                \n                \n                    Close Issue\n                    \n                    Reopen\n                        Issue\n                    \n                    Comment\n                    \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    issue-contents.component.scss\n                \n                @import 'src/styles/spinner';\n\n.timeline-item {\n  position: relative;\n  margin-left: 36px;\n  padding: 12px 0;\n\n  &:first-child {\n    padding-top: 0;\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -1px;\n    bottom: 0;\n    width: 2px;\n    background: rgba(0, 0, 0, 0.12);\n  }\n\n  .item-box {\n    position: relative;\n    background: white;\n    border-radius: 4px;\n    border: 1px solid rgba(0, 0, 0, 0.1);\n    margin-left: -36px;\n\n    .item-header {\n      background: rgba(0, 0, 0, 0.06);\n      border-bottom: rgba(0, 0, 0, 0.1);\n      border-radius: 4px 4px 0 0;\n      padding: 8px 16px;\n      display: flex;\n      align-items: center;\n\n      mat-icon {\n        margin-right: 8px;\n        margin-left: -8px;\n      }\n\n      .item-title {\n        flex: 1;\n        margin: 0 16px 0 0;\n        overflow: hidden;\n        font-size: inherit;\n        font-weight: inherit;\n\n        .item-edited {\n          opacity: 0.5;\n        }\n      }\n    }\n\n    .item-body {\n      padding: 16px;\n\n      &.is-editing {\n        padding: 8px;\n      }\n\n      .edit-body-buttons {\n        text-align: right;\n        margin-top: 5px;\n        margin-bottom: 3px;\n      }\n    }\n  }\n}\n\n.comment-form {\n  padding-bottom: 0;\n\n  .comment-buttons {\n    text-align: right;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                 0\" class=\"timeline-item\">                                    link                                    Linked Issues                                                                                                                                                                                                                                         10\"                    [list]=\"linkedIssues$\"                    [pageSizes]=\"[10]\">                                                                                                Comment this issue as                                                                                             Close Issue                                        Reopen                        Issue                                        Comment                                                            '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueContentsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueDetailComponent.html":{"url":"components/IssueDetailComponent.html","title":"component - IssueDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-detail/issue-detail.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-detail\n            \n\n            \n                styleUrls\n                ./issue-detail.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activatedRoute\n                            \n                            \n                                category\n                            \n                            \n                                inputTitle\n                            \n                            \n                                    Public\n                                issue$\n                            \n                            \n                                    Public\n                                issueEditable\n                            \n                            \n                                    Public\n                                issueId\n                            \n                            \n                                    Public\n                                issueSub\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                    Public\n                                savingChanges\n                            \n                            \n                                    Public\n                                timeFormatter\n                            \n                            \n                                    Public\n                                userCanEditIssue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                beginEditing\n                            \n                            \n                                    Public\n                                finishEditing\n                            \n                            \n                                formatIssueOpenTime\n                            \n                            \n                                    Private\n                                saveChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-detail/issue-detail.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        beginEditing\n                        \n                    \n                \n            \n            \n                \nbeginEditing()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/issue-detail.component.ts:76\n                \n            \n\n\n            \n                \n                    Begins the editing process in which:\n\nthe issue title and\nthe issue category can be changed.\n\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        finishEditing\n                        \n                    \n                \n            \n            \n                \n                    \n                    finishEditing(save?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/issue-detail.component.ts:94\n                \n            \n\n\n            \n                \n                    Finishes the editing process in which:\n\nthe issue title and\nthe issue category can be changed.\n\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    save\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nBoolean that indicates whether to save the new title.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatIssueOpenTime\n                        \n                    \n                \n            \n            \n                \nformatIssueOpenTime()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/issue-detail.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        saveChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/issue-detail.component.ts:115\n                \n            \n\n\n            \n                \n                    Saves all changes to the current issue.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activatedRoute\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActivatedRoute\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inputTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('titleInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issue$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataNode\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issueEditable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issueId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issueSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        savingChanges\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        timeFormatter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new TimeFormatter()\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userCanEditIssue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Issue } from 'src/generated/graphql-dgql';\nimport { Subscription } from 'rxjs';\nimport { NodeType } from '@app/data-dgql/id';\nimport { DataNode } from '@app/data-dgql/query';\nimport DataService from '@app/data-dgql';\nimport { TimeFormatter } from '@app/issue-detail/time-formatter';\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-issue-detail',\n  templateUrl: './issue-detail.component.html',\n  styleUrls: ['./issue-detail.component.scss']\n})\n/**\n * This component provides detailed information about an issue.\n * It also lets the user edit properties of an issue.\n */\nexport class IssueDetailComponent implements OnInit, OnDestroy {\n\n  // current project id\n  public projectId: string;\n\n  // current issue id\n  public issueId: string;\n\n  // mark whether the current issue is editable\n  public issueEditable = false;\n\n  // mark whether changes to the current issue are being saved,\n  // used for the loading spinner of the Save button\n  public savingChanges = false;\n\n  // provides functions for time formatting\n  public timeFormatter = new TimeFormatter();\n\n  // FIXME: replace with issue$.current?.userCanEditIssue in HTML once that works\n  public userCanEditIssue = true;\n\n  public issue$: DataNode;\n  public issueSub: Subscription;\n\n  // new title of the current issue\n  @ViewChild('titleInput') inputTitle: ElementRef;\n\n  // new category of the current issue\n  category = new FormControl('', [Validators.required]);\n\n  constructor(private dataService: DataService, public activatedRoute: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.projectId = this.activatedRoute.snapshot.paramMap.get('id');\n    this.issueId = this.activatedRoute.snapshot.paramMap.get('issueId');\n    const issueNodeId = { type: NodeType.Issue, id: this.issueId };\n\n    this.issue$ = this.dataService.getNode(issueNodeId);\n    this.issueSub = this.issue$.subscribe();\n  }\n\n  ngOnDestroy() {\n    this.issueSub.unsubscribe();\n  }\n\n  formatIssueOpenTime(): string {\n    if (this.issue$.hasData) {\n      return this.timeFormatter.formatTimeDifference(this.issue$.current.createdAt);\n    }\n  }\n\n  /**\n   * Begins the editing process in which:\n   * 1) the issue title and\n   * 2) the issue category can be changed.\n   */\n  beginEditing() {\n\n    // marks the issue as editable\n    this.issueEditable = true;\n\n    // sets up the issue category\n    this.issue$.dataAsPromise().then(data =>\n      {\n        this.category.setValue(data.category);\n      });\n  }\n\n  /**\n   * Finishes the editing process in which:\n   * 1) the issue title and\n   * 2) the issue category can be changed.\n   * @param save - Boolean that indicates whether to save the new title.\n   */\n  public finishEditing(save?: boolean): void {\n\n    // case: the new changes are to be saved\n    if (save) {\n\n      // marks the saving process as started\n      this.savingChanges = true;\n\n      // saves all changes\n      this.saveChanges();\n    }\n\n    // case: the new changes are not to be saved\n    else {\n      this.issueEditable = false;\n    }\n  }\n\n  /**\n   * Saves all changes to the current issue.\n   */\n  private saveChanges() {\n\n    // 1) saves the new title\n    this.dataService.mutations.renameIssueTitle(\n      Math.random().toString(),\n      this.issue$.id,\n      this.inputTitle.nativeElement.value\n    );\n\n    // 2) saves the new category\n    this.dataService.mutations.changeIssueCategory(\n      Math.random().toString(),\n      this.issue$.id,\n      this.category.value\n    ).then(() => {\n      // marks the issue as uneditable\n      this.issueEditable = false;\n    }).finally(() => {\n      // marks the saving process as finished\n      this.savingChanges = false;\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n  \n  \n\n    \n    \n\n      \n      \n        {{issue.title}}\n      \n\n      \n      \n        \n      \n\n      \n\n        \n        \n          Edit\n        \n\n        \n\n          \n          \n            Cancel\n          \n\n          &nbsp;\n\n          \n          \n            Save\n          \n        \n      \n    \n\n    \n    \n\n      \n      \n        \n          \n          Unclassified\n        \n        \n          \n          Bug\n        \n        \n          \n          Feature Request\n        \n      \n    \n\n    \n    \n\n      \n      \n        \n        \n          Open\n          Closed\n        \n      \n\n      \n      \n        \n        opened this issue\n        \n          {{this.formatIssueOpenTime()}}\n        \n      \n\n      \n      \n        &nbsp;&sdot; {{this.timeFormatter.pluralize(issue.issueComments?.totalCount + 1, 'comment')}}\n      \n    \n  \n\n  \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./issue-detail.component.scss\n                \n                @import 'src/styles/variables.scss';\n@import 'src/styles/spinner';\n\n.category-selector {\n  width: 100%;\n  margin-bottom: 8px;\n\n  mat-button-toggle {\n    width: 100%;\n\n    ::ng-deep &.mat-button-toggle-checked {\n      font-weight: 600;\n    }\n  }\n}\n\n.issue-details {\n  padding: 16px;\n\n  .issue-header {\n    padding-bottom: 16px;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.15);\n    margin-bottom: 16px;\n  }\n\n  .issue-page {\n    display: flex;\n\n    .issue-contents {\n      flex: 2;\n    }\n\n    .issue-sidebar {\n      flex: 1;\n      max-width: 300px;\n      margin-left: 16px;\n    }\n  }\n}\n\n@media (max-width: 600px) {\n  // put issue sidebar below on narrow displays\n  .issue-details .issue-page {\n    display: block;\n  }\n}\n\n.issue-header {\n  .issue-title {\n    display: flex;\n    align-items: center;\n    margin-bottom: 8px;\n\n    .title-text {\n      margin: 0;\n      margin-right: 16px;\n      flex: 1;\n    }\n\n    .title-input {\n      flex: 1;\n      margin-right: 16px;\n\n      ::ng-deep .mat-form-field-wrapper {\n        padding-bottom: 0;\n\n        .mat-form-field-infix {\n          border-top-width: 0.5em;\n        }\n      }\n    }\n  }\n\n  .issue-category {\n    display: flex;\n    align-items: center;\n    margin-bottom: 8px;\n  }\n\n  .issue-subheading {\n    display: flex;\n    align-items: center;\n\n    .issue-status {\n      display: inline-flex;\n      padding: 2px 8px 2px 4px;\n      border-radius: 100px;\n      border: 1px solid rgba(0, 0, 0, 0.1);\n      align-items: center;\n      font-weight: 500;\n      margin-right: 8px;\n\n      .status-icon {\n        margin-right: 2px;\n      }\n      .status-label {\n        display: block;\n      }\n\n      .status-icon ::ng-deep svg {\n        .state[fill] {\n          fill: white;\n        }\n        .state[stroke] {\n          stroke: white;\n        }\n        .arrow-in, .arrow-out, .assigned-star {\n          fill: rgba(255, 255, 255, 0.7);\n        }\n      }\n\n      &.is-open {\n        color: white;\n        background: #00ba39;\n      }\n      &.is-closed {\n        color: white;\n        background: #ff0036;\n      }\n    }\n\n    .issue-opened, .issue-stats {\n      display: inline-block;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{issue.title}}                                                                Edit                                                Cancel                                                     Save                                                                            Unclassified                                    Bug                                    Feature Request                                                                Open          Closed                                          opened this issue                  {{this.formatIssueOpenTime()}}                                   ⋅ {{this.timeFormatter.pluralize(issue.issueComments?.totalCount + 1, \\'comment\\')}}                          '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueFilterComponent.html":{"url":"components/IssueFilterComponent.html","title":"component - IssueFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-list/issue-filter.component.ts\n\n\n\n    \n        Description\n    \n    \n        Edits an IssueFilter object.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-filter\n            \n\n            \n                styleUrls\n                ./issue-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activePredicates\n                            \n                            \n                                predicateCount\n                            \n                            \n                                predicates\n                            \n                            \n                                predicateValues\n                            \n                            \n                                searchQuery\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPredicateAfter\n                            \n                            \n                                applyIdChangeset\n                            \n                            \n                                buildFilter\n                            \n                            \n                                getRemainingTypes\n                            \n                            \n                                removePredicateAt\n                            \n                            \n                                setInEnumArray\n                            \n                            \n                                setPredicateType\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                allLabelsList\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                filterChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        allLabelsList\n                    \n                \n                \n                    \n                        Type :         ListId\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-list/issue-filter.component.ts:118\n                            \n                        \n                \n                    \n                        The list from which to source labels in the label picker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-list/issue-filter.component.ts:116\n                            \n                        \n                \n                    \n                        Raw project ID.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        filterChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-list/issue-filter.component.ts:120\n                            \n                        \n                \n                    \n                        Emitted every time the filter is changed.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addPredicateAfter\n                        \n                    \n                \n            \n            \n                \naddPredicateAfter(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-filter.component.ts:167\n                \n            \n\n\n            \n                \n                    Adds a new predicate after the given index in activePredicates.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        index in activePredicates\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        applyIdChangeset\n                        \n                    \n                \n            \n            \n                \napplyIdChangeset(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-filter.component.ts:195\n                \n            \n\n\n            \n                \n                    Returns a function that can be passed to an app-set-editor to apply the changeset to the\nvalue of the id predicate.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        predicate name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     (added: any, removed: any) => any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildFilter\n                        \n                    \n                \n            \n            \n                \nbuildFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-filter.component.ts:210\n                \n            \n\n\n            \n                \n                    Builds an IssueFilter from the search query and selected filters.\n\n\n                    \n                        Returns :     IssueFilter\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRemainingTypes\n                        \n                    \n                \n            \n            \n                \ngetRemainingTypes(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-filter.component.ts:137\n                \n            \n\n\n            \n                \n                    Returns all types of predicates that were not taken in previous items.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        index in activePredicates\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removePredicateAt\n                        \n                    \n                \n            \n            \n                \nremovePredicateAt(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-filter.component.ts:157\n                \n            \n\n\n            \n                \n                    Removes the predicate at the given index in activePredicates.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        index in activePredicates\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setInEnumArray\n                        \n                    \n                \n            \n            \n                \nsetInEnumArray(array, item, inArray)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-filter.component.ts:180\n                \n            \n\n\n            \n                \n                    Sets the presence of a value in an array of enum variants.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    array\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the array to mutate\n\n                                    \n                                \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the enum variant\n\n                                    \n                                \n                                \n                                    inArray\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        whether or not it should be in the array\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPredicateType\n                        \n                    \n                \n            \n            \n                \nsetPredicateType(index: number, type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-filter.component.ts:147\n                \n            \n\n\n            \n                \n                    Sets the type of the predicate at index in activePredicates.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        index in activePredicates\n\n                                    \n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        new type (must be unique!)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-filter.component.ts:222\n                \n            \n\n\n            \n                \n                    Emits a change event.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activePredicates\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-filter.component.ts:127\n                        \n                    \n\n            \n                \n                    The names of currently active predicates.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        predicateCount\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.keys(PREDICATES).length\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-filter.component.ts:124\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        predicates\n                        \n                    \n                \n            \n                \n                    \n                        Default value : PREDICATES\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-filter.component.ts:123\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        predicateValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-filter.component.ts:129\n                        \n                    \n\n            \n                \n                    The values of currently active predicates.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-filter.component.ts:131\n                        \n                    \n\n            \n                \n                    Current search query.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { IssueCategory, IssueFilter } from '../../generated/graphql-dgql';\nimport { ListId, ListType, NodeType, ROOT_NODE } from '@app/data-dgql/id';\n\n/** Returns the ListId for listing all project issues. */\nconst listAllIssues = (self: IssueFilterComponent) => ({\n  node: { type: NodeType.Project, id: self.projectId },\n  type: ListType.Issues\n});\n\n/**\n * List of all possible issue filter predicates.\n *\n * Keyed by their name, each predicate has a type, label,\n * and possibly additional options depending on their type.\n */\nconst PREDICATES = {\n  isOpen: { type: 'bool', label: 'Is open' },\n  isDuplicate: { type: 'bool', label: 'Is duplicate' },\n  category: {\n    type: 'enum',\n    label: 'Category',\n    options: [\n      [IssueCategory.Unclassified, 'Unclassified'],\n      [IssueCategory.Bug, 'Bug'],\n      [IssueCategory.FeatureRequest, 'Feature Request']\n    ]\n  },\n  labels: {\n    type: 'ids',\n    label: 'Labels',\n    dataType: 'label',\n    scoreKeys: ['name'],\n    listAll: (self: IssueFilterComponent) => self.allLabelsList,\n    makeFilter: (query: string) => ({ name: query }),\n    ifEmpty: 'No labels selected',\n  },\n  linksIssues: { type: 'bool', label: 'Has linked issues' },\n  linkedIssues: {\n    type: 'ids',\n    label: 'Linked issues',\n    dataType: 'issue',\n    scoreKeys: ['title'],\n    listAll: listAllIssues,\n    makeFilter: (query: string) => ({ title: query }),\n    ifEmpty: 'No issues selected',\n  },\n  isLinkedByIssues: { type: 'bool', label: 'Is linked by issues' },\n  linkedByIssues: {\n    type: 'ids',\n    label: 'Linked by issues',\n    dataType: 'issue',\n    scoreKeys: ['title'],\n    listAll: listAllIssues,\n    makeFilter: (query: string) => ({ title: query }),\n    ifEmpty: 'No issues selected',\n  },\n  participants: {\n    type: 'ids',\n    label: 'Participants',\n    dataType: 'user',\n    scoreKeys: ['username', 'displayName'],\n    listAll: () => ({ node: ROOT_NODE, type: ListType.SearchUsers }),\n    makeFilter: (query: string) => ({ username: query }),\n    ifEmpty: 'No users selected',\n  },\n  locations: {\n    type: 'ids',\n    label: 'Locations',\n    dataType: 'location',\n    scoreKeys: ['name'],\n    listAll: (self: IssueFilterComponent) => ({\n      staticSources: [\n        { node: { type: NodeType.Project, id: self.projectId }, type: ListType.Components },\n        { node: { type: NodeType.Project, id: self.projectId }, type: ListType.ComponentInterfaces },\n      ]\n    }),\n    makeFilter: (query: string) => ({ title: query }),\n    ifEmpty: 'No locations selected',\n  },\n};\n\n/** Returns the default value for a predicate type. */\nfunction getDefaultForType(type: string) {\n  switch (type) {\n    case 'bool':\n      return true;\n    case 'enum':\n    case 'ids':\n      return [];\n    default:\n      throw new Error(`unknown type ${type}`);\n  }\n}\n\n/** Converts a predicate value into the backend representation for use in the filter. */\nfunction convertValueForFilter(type: string, value: any) {\n  switch (type) {\n    case 'ids':\n      return value.map(item => item.id);\n    default:\n      return value;\n  }\n}\n\n/**\n * Edits an IssueFilter object.\n */\n@Component({\n  selector: 'app-issue-filter',\n  templateUrl: './issue-filter.component.html',\n  styleUrls: ['./issue-filter.component.scss']\n})\nexport class IssueFilterComponent {\n  /** Raw project ID. */\n  @Input() projectId: string;\n  /** The list from which to source labels in the label picker. */\n  @Input() allLabelsList: ListId;\n  /** Emitted every time the filter is changed. */\n  @Output() filterChange = new EventEmitter();\n\n  // constants as class properties because angular\n  predicates = PREDICATES;\n  predicateCount = Object.keys(PREDICATES).length;\n\n  /** The names of currently active predicates. */\n  activePredicates: string[] = [];\n  /** The values of currently active predicates. */\n  predicateValues: { [key: string]: any } = {};\n  /** Current search query. */\n  searchQuery = '';\n\n  /**\n   * Returns all types of predicates that were not taken in previous items.\n   * @param index index in activePredicates\n   */\n  getRemainingTypes(index: number): string[] {\n    const previousItems = this.activePredicates.slice(0, index);\n    return Object.keys(PREDICATES).filter(id => !previousItems.includes(id));\n  }\n\n  /**\n   * Sets the type of the predicate at index in activePredicates.\n   * @param index index in activePredicates\n   * @param type new type (must be unique!)\n   */\n  setPredicateType(index: number, type: string) {\n    this.activePredicates[index] = type;\n    this.predicateValues[type] = getDefaultForType(PREDICATES[type].type);\n    this.update();\n  }\n\n  /**\n   * Removes the predicate at the given index in activePredicates.\n   * @param index index in activePredicates\n   */\n  removePredicateAt(index: number) {\n    const type = this.activePredicates.splice(index, 1)[0];\n    delete this.predicateValues[type];\n    this.update();\n  }\n\n  /**\n   * Adds a new predicate after the given index in activePredicates.\n   * @param index index in activePredicates\n   */\n  addPredicateAfter(index: number) {\n    const type = this.getRemainingTypes(index + 1)[0];\n    this.activePredicates.splice(index + 1, 0, type);\n    this.predicateValues[type] = getDefaultForType(PREDICATES[type].type);\n    this.update();\n  }\n\n  /**\n   * Sets the presence of a value in an array of enum variants.\n   * @param array the array to mutate\n   * @param item the enum variant\n   * @param inArray whether or not it should be in the array\n   */\n  setInEnumArray(array, item, inArray) {\n    if (inArray && !array.includes(item)) {\n      array.push(item);\n    }\n    if (!inArray && array.includes(item)) {\n      array.splice(array.indexOf(item), 1);\n    }\n    this.update();\n  }\n\n  /**\n   * Returns a function that can be passed to an app-set-editor to apply the changeset to the\n   * value of the id predicate.\n   * @param id predicate name\n   */\n  applyIdChangeset(id) {\n    return async (added, removed) => {\n      for (const item of added) {\n        this.predicateValues[id].push(item);\n      }\n      for (const item of removed) {\n        this.predicateValues[id].splice(this.predicateValues[id].indexOf(item), 1);\n      }\n      this.update();\n    };\n  }\n\n  /**\n   * Builds an IssueFilter from the search query and selected filters.\n   */\n  buildFilter(): IssueFilter {\n    const filter: IssueFilter = {};\n    if (this.searchQuery.trim()) {\n      filter.fullSearch = { text: this.searchQuery.trim() };\n    }\n    for (const id of this.activePredicates) {\n      filter[id] = convertValueForFilter(PREDICATES[id].type, this.predicateValues[id]);\n    }\n    return filter;\n  }\n\n  /** Emits a change event. */\n  update() {\n    this.filterChange.emit(this.buildFilter());\n  }\n}\n\n    \n\n    \n        \n    \n        \n            Search\n            \n        \n        \n            filter_list\n        \n    \n\n    \n        \n            Filter\n        \n        \n            \n                \n                    \n                        \n                            {{predicates[type].label}}\n                        \n                    \n                \n            \n            \n\n                \n\n                \n                    \n                        \n                            Yes\n                        \n                        \n                            No\n                        \n                    \n                \n                \n                    \n                        \n                            {{entry[1]}}\n                        \n                    \n                \n                \n                    \n                        {{predicates[id].label}}\n                        {{predicates[id].ifEmpty}}\n                        \n                            \n                            \n                            \n                            \n                                \n                                    {{item.name}}\n                                \n                                \n                                    \n                                        {{item.component.name}} ›\n                                    \n                                    {{item.name}}\n                                \n                            \n                        \n                    \n                \n\n                \n\n            \n            \n                \n                    remove\n                \n                \n                    add\n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./issue-filter.component.scss\n                \n                .filter-box {\n  padding: 8px;\n\n  // we do not want the extra spacing around form fields\n  // (we wont be showing any helper text or errors anyway)\n  ::ng-deep .mat-form-field-wrapper {\n    padding-bottom: 0;\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  .pred-add, .pred-remove {\n    min-width: 48px;\n    width: 48px;\n    padding: 0 8px;\n  }\n\n  .search-box {\n    display: flex;\n    align-items: center;\n\n    .search-field {\n      flex: 1;\n    }\n\n    .pred-add {\n      margin-left: 16px;\n    }\n  }\n\n  .filter-predicates {\n    margin-top: 8px;\n\n    .filter-title {\n      font-weight: bold;\n      padding-left: 8px;\n    }\n\n    .filter-predicate {\n      display: flex;\n      align-items: flex-start;\n\n      .predicate-type {\n        margin-right: 16px;\n      }\n      .predicate-value {\n        flex: 1;\n      }\n\n      .predicate-mgmt {\n        margin-left: 16px;\n        border: 1px solid rgba(0, 0, 0, 0.1);\n        border-radius: 4px;\n\n        .pred-add {\n          margin-left: 4px;\n        }\n      }\n\n      @media (max-width: 500px) {\n        display: block;\n        border-top: 1px solid rgba(0, 0, 0, 0.1);\n        padding: 8px 0;\n\n        .predicate-type {\n          margin-right: 0;\n          margin-bottom: 8px;\n\n          .predicate-type-selector {\n            width: 100%;\n          }\n        }\n        .predicate-value {\n          .bool-value {\n            width: 100%;\n            mat-button-toggle {\n              width: 100%;\n            }\n          }\n        }\n        .predicate-mgmt {\n          border: none;\n          margin-left: 0;\n          text-align: right;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Search                                        filter_list                                    Filter                                                                                                                    {{predicates[type].label}}                                                                                                                                                                                            Yes                                                                            No                                                                                                                                                    {{entry[1]}}                                                                                                                        {{predicates[id].label}}                        {{predicates[id].ifEmpty}}                                                                                                                                                                                                            {{item.name}}                                                                                                                                            {{item.component.name}} ›                                                                        {{item.name}}                                                                                                                                                                                                    remove                                                    add                                        '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IssueFolderNode.html":{"url":"interfaces/IssueFolderNode.html","title":"interface - IssueFolderNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IssueFolderNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/issue-graph-nodes.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Node\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            issueCount\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        issueCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issueCount:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     IssueCategory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IssueCategory\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {GraphComponent, GraphInterface} from '@app/data/issue-graph/graph-data';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\n\nexport {\n  IssueNode, ComponentNode, InterfaceNode, IssueGroupContainerNode, RelationEdge,\n  createComponentNode, createInterfaceNode, createIssueGroupContainerNode, createIssueFolderNode,\n  createRelationEdge, createConsumptionEdge, createInterfaceProvisionEdge,\n  Position,\n  getIssueFolderId\n};\n\nexport enum NodeType {\n  Component = 'component',\n  Interface = 'interface',\n  InterfaceConsumer = 'interface-connect',\n  IssueGroupContainer = 'issue-group-container'\n}\n\n/**\n * This file includes type definitions and creation functions (think constructors)\n * for nodes and edges that are added to the graph editor in order to visualize the project.\n * Since the data that is stored with these differs based on what they represent (e.g.\n * interface vs component node) we give each their own type. We do this by extending\n * the Node class or the Edge class of the grapheditor. These classes are instantiated\n * via calls to the contained create* functions within the drawGraph method of the IssueGraphComponent.\n */\n\ninterface IssueNode extends Node {\n  id: string;\n  title: string;\n  issueGroupContainer?: IssueGroupContainerNode;\n}\n\ninterface ComponentNode extends IssueNode {\n  data: GraphComponent;\n}\n\nfunction createComponentNode(component: GraphComponent, position: Position): ComponentNode {\n  return {\n    ...(position || zeroPosition),\n    id: component.id,\n    title: component.name,\n    type: NodeType.Component,\n    data: component\n  };\n}\n\ninterface InterfaceNode extends IssueNode {\n  offeredById: string;\n}\n\nfunction createInterfaceNode(intrface: GraphInterface, position: Position): InterfaceNode {\n  return {\n    ...(position || zeroPosition),\n    id: intrface.id,\n    title: intrface.name,\n    type: NodeType.Interface,\n    offeredById: intrface.offeredBy,\n  };\n}\n\ninterface IssueGroupContainerNode extends Node {\n  position: string;\n  issueGroupNodeIds: Set;\n}\n\nfunction createIssueGroupContainerNode(node: IssueNode): IssueGroupContainerNode {\n  return {\n    id: `${node.id}__issue-group-container`,\n    type: NodeType.IssueGroupContainer,\n    dynamicTemplate: 'issue-group-container',\n    x: 0,\n    y: 0,\n    position: 'bottom',\n    issueGroupNodeIds: new Set(),\n  };\n}\n\ninterface IssueFolderNode extends Node {\n  type: IssueCategory;\n  issueCount: string;\n}\n\nfunction createIssueFolderNode(node: IssueNode, issueCategory: IssueCategory, issueCount: string): IssueFolderNode {\n  return {\n    id: getIssueFolderId(node.id, issueCategory),\n    type: issueCategory,\n    x: 0,\n    y: 0,\n    issues: new Set(),\n    issueCount\n  };\n}\n\ninterface RelationEdge extends Edge {\n  sourceIssues: Set;\n}\n\nfunction createRelationEdge(sourceId: string, targetId: string, edgeType = folderEdgeTypes.RelatedTo): RelationEdge {\n  return {\n    id: `s${sourceId}t${targetId}r${edgeType}`,\n    source: sourceId,\n    target: targetId,\n    type: folderEdgeTypes.RelatedTo,\n    markerEnd: {\n      template: 'arrow',\n      relativeRotation: 0,\n    },\n    dragHandles: [],\n    sourceIssues: new Set()\n  };\n}\n\nfunction createConsumptionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.InterfaceConsumer,\n    markerEnd: {\n      template: 'interface-connector',\n      relativeRotation: 0,\n    },\n  };\n}\n\nfunction createInterfaceProvisionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.Interface,\n    dragHandles: [],\n  };\n}\n\nfunction getIssueFolderId(id: string, issueCategory: IssueCategory): string {\n  return `${id}__${issueCategory}`;\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst zeroPosition = {x: 0, y: 0};\n\nenum folderEdgeTypes {\n  RelatedTo = 'relatedTo',\n  Depends = 'dependency',\n  Duplicates = 'duplicate'\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IssueGraphApiService.html":{"url":"injectables/IssueGraphApiService.html","title":"injectable - IssueGraphApiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IssueGraphApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/issue-graph/issue-graph-api.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Responsible for retrieval and conversion of data needed for graph rendering from backend.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addConsumedInterface\n                            \n                            \n                                loadIssueGraphData\n                            \n                            \n                                removeConsumedInterface\n                            \n                            \n                                textsToRegex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(getFullIssueGraphDataQuery: GetIssueGraphDataGQL, addConsumedInterfaceMutation: AddConsumedInterfaceGQL, removeConsumedInterfaceMutation: RemoveConsumedInterfaceGQL, getSearchIssueGraphDataQuery: GetIssueGraphDataForSearchGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/issue-graph/issue-graph-api.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        getFullIssueGraphDataQuery\n                                                  \n                                                        \n                                                                        GetIssueGraphDataGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addConsumedInterfaceMutation\n                                                  \n                                                        \n                                                                    AddConsumedInterfaceGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        removeConsumedInterfaceMutation\n                                                  \n                                                        \n                                                                    RemoveConsumedInterfaceGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getSearchIssueGraphDataQuery\n                                                  \n                                                        \n                                                                        GetIssueGraphDataForSearchGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addConsumedInterface\n                        \n                    \n                \n            \n            \n                \naddConsumedInterface(component: string, componentInterface: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/issue-graph-api.service.ts:80\n                \n            \n\n\n            \n                \n                    Make the interface with interfaceId a consumed interface of the component with id componentId\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    componentInterface\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadIssueGraphData\n                        \n                    \n                \n            \n            \n                \nloadIssueGraphData(projectId: string, categories: SelectedCategories, labels: FilterLabel[], texts: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/issue-graph-api.service.ts:42\n                \n            \n\n\n            \n                \n                    Queries backend for data needed to render graph when given parameters restricting what information is requested.\nThis method handels the construction of the parameters to the graphql query,\nand makes the query. To carry out the conversion from backend to frontend format,\nit invokes GraphDataFactory.graphDataFromGQL\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    categories\n                                    \n                                                SelectedCategories\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        describes which issue categories (e.g. BUG) are of interest\n\n                                    \n                                \n                                \n                                    labels\n                                    \n                                                FilterLabel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a list of issue labels the user has entered into the query bar\n\n                                    \n                                \n                                \n                                    texts\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a list of text fragments the user has entered into the query bar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeConsumedInterface\n                        \n                    \n                \n            \n            \n                \nremoveConsumedInterface(component: string, componentInterface: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/issue-graph-api.service.ts:89\n                \n            \n\n\n            \n                \n                    Remove the interface with interfaceId from consumed interfaces of the component with id componentId\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    componentInterface\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        textsToRegex\n                        \n                    \n                \n            \n            \n                \ntextsToRegex(texts: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/issue-graph-api.service.ts:68\n                \n            \n\n\n            \n                \n                    Creates a regular expression denoting a language of the union of the strings in texts\ntextsToRegex([\"newest issues\", \"test\"]) == \"(newest issues | test)\"\"\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    texts\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            textsToRegex([&quot;newest issues&quot;, &quot;test&quot;]) == &quot;(newest issues | test)&quot;&quot;\n                        \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {map} from 'rxjs/operators';\nimport {\n  AddConsumedInterfaceGQL,\n  GetIssueGraphDataForSearchGQL,\n  GetIssueGraphDataGQL,\n  IssueCategory,\n  RemoveConsumedInterfaceGQL\n} from 'src/generated/graphql';\nimport {GraphData, GraphDataFactory} from './graph-data';\nimport {Observable} from 'rxjs';\nimport {SelectedCategories} from '@app/graphs/shared';\nimport {FilterLabel} from '../label/label-store.service';\n\n/**\n * Responsible for retrieval and conversion of data needed for graph rendering from backend.\n *\n * @export\n * @class IssueGraphApiService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class IssueGraphApiService {\n\n  constructor(private getFullIssueGraphDataQuery: GetIssueGraphDataGQL,\n              private addConsumedInterfaceMutation: AddConsumedInterfaceGQL,\n              private removeConsumedInterfaceMutation: RemoveConsumedInterfaceGQL,\n              private getSearchIssueGraphDataQuery: GetIssueGraphDataForSearchGQL) {\n  }\n\n  /**\n   * Queries backend for data needed to render graph when given parameters restricting what information is requested.\n   * This method handels the construction of the parameters to the graphql query,\n   * and makes the query. To carry out the conversion from backend to frontend format,\n   * it invokes GraphDataFactory.graphDataFromGQL\n   * @param projectId\n   * @param categories describes which issue categories (e.g. BUG) are of interest\n   * @param labels a list of issue labels the user has entered into the query bar\n   * @param texts a list of text fragments the user has entered into the query bar\n   */\n  loadIssueGraphData(projectId: string, categories: SelectedCategories, labels: FilterLabel[], texts: string[]): Observable {\n    const activeCategories: IssueCategory[] = [];\n    for (const key of Object.values(IssueCategory)) {\n      if (categories[key]) {\n        activeCategories.push(key as IssueCategory);\n      }\n    }\n    if (labels.length === 0 && texts.length === 0) {\n      return this.getFullIssueGraphDataQuery.fetch({projectId, activeCategories}).pipe(\n        map(result => GraphDataFactory.removeFilteredData(GraphDataFactory.graphDataFromGQL(result.data), activeCategories)\n        ));\n    } else {\n      const selectedLabels: string[] = labels.map(label => label.id);\n      const issueRegex = this.textsToRegex(texts);\n      return this.getSearchIssueGraphDataQuery.fetch({projectId, activeCategories, selectedLabels, issueRegex}).pipe(\n        map(result => GraphDataFactory.removeFilteredData(GraphDataFactory.graphDataFromGQL(result.data), activeCategories)\n        ));\n    }\n  }\n\n  /**\n   * Creates a regular expression denoting a language of the union of the strings in texts\n   * @param texts\n   * @example\n   * textsToRegex([\"newest issues\", \"test\"]) == \"(newest issues | test)\"\"\n   */\n  textsToRegex(texts: string[]): string {\n    if (texts.length === 0) {\n      return undefined;\n    }\n    return texts.map(text => '(' + text + ')').join('|');\n  }\n\n  /**\n   * Make the interface with interfaceId a consumed interface of the component with id componentId\n   * @param component\n   * @param componentInterface\n   */\n  addConsumedInterface(component: string, componentInterface: string) {\n    return this.addConsumedInterfaceMutation.mutate({input: {component, componentInterface}});\n  }\n\n  /**\n   * Remove the interface with interfaceId from consumed interfaces of the component with id componentId\n   * @param component\n   * @param componentInterface\n   */\n  removeConsumedInterface(component: string, componentInterface: string) {\n    return this.removeConsumedInterfaceMutation.mutate({input: {component, componentInterface}});\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IssueGraphClassSettersService.html":{"url":"injectables/IssueGraphClassSettersService.html","title":"injectable - IssueGraphClassSettersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IssueGraphClassSettersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/class-setters/issue-graph-class-setters.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service is respoonsible for managing the class setters\nof a given GraphEditor instance.\nUsed in method initGraph of IssueGraphComponent.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                manageClassSetters\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        manageClassSetters\n                        \n                    \n                \n            \n            \n                \nmanageClassSetters(graph: GraphEditor, minimap: GraphEditor)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/class-setters/issue-graph-class-setters.service.ts:24\n                \n            \n\n\n            \n                \n                    Manages node / edge class setters so that node / edge classes\nof given GraphEditor instances match their corresponding class names.\nThe setters return true if the class name is applied to the corresponding node / edge.\nThey are called on all nodes, pairs of edges and class names.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    graph\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nReference to the GraphEditor instance of the graph that is handled.\n\n\n                                    \n                                \n                                \n                                    minimap\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nReference to the GraphEditor instance of the minimap that is handled.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\nimport GraphEditor from '@ustutt/grapheditor-webcomponent/lib/grapheditor';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\n\n/**\n * This service is respoonsible for managing the class setters \n * of a given GraphEditor instance.\n * Used in method initGraph of IssueGraphComponent.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class IssueGraphClassSettersService {\n\n  /**\n   * Manages node / edge class setters so that node / edge classes \n   * of given GraphEditor instances match their corresponding class names.\n   * The setters return true if the class name is applied to the corresponding node / edge.\n   * They are called on all nodes, pairs of edges and class names.\n   * @param  {GraphEditor} graph - Reference to the GraphEditor instance of the graph that is handled.\n   * @param  {GraphEditor} minimap - Reference to the GraphEditor instance of the minimap that is handled.\n   */\n  manageClassSetters(graph: GraphEditor, minimap: GraphEditor) {\n\n    // node class setter\n    const nodeClassSetter = (className: string, node: Node) => {\n      if (className === node.type) {\n        return true;\n      }\n      return false;\n    };\n\n    // applies noce class setter\n    graph.setNodeClass = nodeClassSetter;\n    minimap.setNodeClass = nodeClassSetter;\n\n    // edge class setter\n    const edgeClassSetter = (\n      className: string,\n      edge: Edge,\n      sourceNode: Node,\n      targetNode: Node\n    ) => {\n      if (className === edge.type) {\n        return true;\n      }\n      if (className === 'related-to' && edge.type === 'relatedTo') {\n        return true;\n      }\n      if (className === 'issue-relation' &&\n        (edge.type === 'relatedTo' ||\n          edge.type === 'duplicate' ||\n          edge.type === 'dependency')) {\n        return true;\n      }\n      return false;\n    };\n\n    // applies edge class setter\n    graph.setEdgeClass = edgeClassSetter;\n    minimap.setEdgeClass = edgeClassSetter;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueGraphControlsComponent.html":{"url":"components/IssueGraphControlsComponent.html","title":"component - IssueGraphControlsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueGraphControlsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component contains the graph toggles, the search bar and the button\nfor creating new components. Additionally it contains the actual graph component and feeds\ndata to it. This component collects the state of the search bar and graph toggles, combines it and emits it via this.filter$.\nAnother observable retrieved from the IssueGraphStateService maps these values into the graph\ndata matching the filters. Whenever new graph data arrives it is feed to the actual graph component. (see ngAfterViewInit)\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-graph-controls\n            \n\n            \n                styleUrls\n                ./issue-graph-controls.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-graph-controls.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bug\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                featureRequests\n                            \n                            \n                                filter$\n                            \n                            \n                                issueGraph\n                            \n                            \n                                labelSearch\n                            \n                            \n                                projectId\n                            \n                            \n                                    Public\n                                selectedCategories$\n                            \n                            \n                                showRelations\n                            \n                            \n                                unclassified\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getSelectedCategories\n                            \n                            \n                                layoutGraph\n                            \n                            \n                                setRelationVisibility\n                            \n                            \n                                    Public\n                                updateSelectedCategories\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, gs: IssueGraphStateService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gs\n                                                  \n                                                        \n                                                                        IssueGraphStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getSelectedCategories\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSelectedCategories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:66\n                \n            \n\n\n            \n                \n                    Gathers booleans indicating whether the toggle switches\ncoressponding to values in IssueCategory are turned on or off\n\n\n                    \n                        Returns :         SelectedCategories\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        layoutGraph\n                        \n                    \n                \n            \n            \n                \nlayoutGraph()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRelationVisibility\n                        \n                    \n                \n            \n            \n                \nsetRelationVisibility()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:108\n                \n            \n\n\n            \n                \n                    Tell the graph component whether to show issue relations or not.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateSelectedCategories\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSelectedCategories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:57\n                \n            \n\n\n            \n                \n                    Emit newly selected categories via this.selectedCategories$\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bug\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        featureRequests\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filter$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issueGraph\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IssueGraphComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(IssueGraphComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelSearch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LabelSearchComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(LabelSearchComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectedCategories$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(\n    this.getSelectedCategories()\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showRelations\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unclassified\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnDestroy, ViewChild} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {ActivatedRoute} from '@angular/router';\nimport {IssueGraphComponent} from '../issue-graph/issue-graph.component';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {BehaviorSubject, combineLatest, ReplaySubject} from 'rxjs';\nimport {SelectedCategories} from '../shared';\nimport {IssueGraphStateService} from '../../data/issue-graph/issue-graph-state.service';\nimport {LabelSearchComponent} from '../label-search/label-search.component';\nimport {map, takeUntil} from 'rxjs/operators';\nimport {FilterState} from '@app/graphs/shared';\n\n/**\n * This component contains the graph toggles, the search bar and the button\n * for creating new components. Additionally it contains the actual graph component and feeds\n * data to it. This component collects the state of the search bar and graph toggles, combines it and emits it via this.filter$.\n * Another observable retrieved from the IssueGraphStateService maps these values into the graph\n * data matching the filters. Whenever new graph data arrives it is feed to the actual graph component. (see ngAfterViewInit)\n */\n@Component({\n  selector: 'app-issue-graph-controls',\n  templateUrl: './issue-graph-controls.component.html',\n  styleUrls: ['./issue-graph-controls.component.scss']\n})\nexport class IssueGraphControlsComponent implements AfterViewInit, OnDestroy {\n  @ViewChild(IssueGraphComponent) issueGraph: IssueGraphComponent;\n  @ViewChild(LabelSearchComponent) labelSearch: LabelSearchComponent;\n\n  projectId: string;\n\n  // these 3 booleans are bound to the issue category toggles via ngModel\n  featureRequests = true;\n  bug = true;\n  unclassified = true;\n\n  showRelations = true;\n  // emits state of toggles and search bar combined\n  filter$: BehaviorSubject;\n  private destroy$ = new ReplaySubject(1);\n\n  constructor(public dialog: MatDialog, private gs: IssueGraphStateService, private route: ActivatedRoute) {\n    this.projectId = this.route.snapshot.paramMap.get('id');\n    this.filter$ = new BehaviorSubject({\n      selectedCategories: this.getSelectedCategories(), selectedFilter: {\n        labels: [], texts: []\n      }\n    });\n  }\n\n  public selectedCategories$ = new BehaviorSubject(\n    this.getSelectedCategories()\n  );\n\n  /**\n   * Emit newly selected categories via this.selectedCategories$\n   */\n  public updateSelectedCategories() {\n    this.selectedCategories$.next(\n      this.getSelectedCategories());\n  }\n\n  /**\n   * Gathers booleans indicating whether the toggle switches\n   * coressponding to values in IssueCategory are turned on or off\n   */\n  private getSelectedCategories(): SelectedCategories {\n    return {\n      [IssueCategory.Bug]: this.bug,\n      [IssueCategory.FeatureRequest]: this.featureRequests,\n      [IssueCategory.Unclassified]: this.unclassified,\n    };\n  }\n\n  layoutGraph(): void {\n    this.issueGraph.layoutGraph();\n    this.issueGraph.drawGraph();\n    this.issueGraph.fitGraphInView();\n  }\n\n  /**\n   * Setup this.filter$ and create subscription for observable returned from graphDataForFilter\n   */\n  ngAfterViewInit(): void {\n    // sets up emission of values representing the state of the graph toggles and the search bar via this.filter$\n    combineLatest([this.selectedCategories$, this.labelSearch.filterSelection$]).pipe(\n      takeUntil(this.destroy$),\n      map(([selectedCategories, filterSelection]) => ({selectedCategories, selectedFilter: filterSelection}))\n    ).subscribe(filterState => this.filter$.next(filterState));\n\n    // gets an obervable from GraphStateService that emits the matching graph state\n    // after this component emits values on this.filter$ or the IssueGraphComponent\n    // signals the need for a reload via this.issueGraph.reload$. Whenever new graph state\n    // arrives we pass it to the graph and issue a redraw on it.\n    this.gs.graphDataForFilter(this.filter$, this.issueGraph.reload$, this.destroy$).pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      graphData => {\n        this.issueGraph.graphData = graphData;\n        this.issueGraph.drawGraph();\n      }\n    );\n  }\n\n  /**\n   * Tell the graph component whether to show issue relations or not.\n   *\n   */\n  setRelationVisibility(): void {\n    this.issueGraph.setRelationVisibility(this.showRelations);\n  }\n\n  /**\n   * Cancel subscriptions by emitting a value on this.destroy$\n   */\n  ngOnDestroy() {\n    this.destroy$.next();\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n  \n\n    \n    \n      emoji_objects\n    \n\n    \n    \n      bug_report\n    \n\n      \n    \n      help\n    \n\n    \n    \n      \n    \n\n    \n    \n      center_focus_strong\n    \n\n    \n    \n      dashboard\n    \n\n    \n    \n\n    \n    \n      add\n    \n  \n\n  \n  \n\n\n    \n\n    \n                \n                    ./issue-graph-controls.component.scss\n                \n                @import '~@angular/material/theming';\n@import 'variables';\n\n.container {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n  margin: 0;\n}\n.container app-issue-graph {\n  flex-grow: 1;\n}\n\n.controls {\n  display: flex;\n  flex-direction: row;\n  background-color: $background-controls;\n  border-bottom: 1px solid $border-color-controls;\n}\n\n.controls app-label-search {\n  display: inline-block;\n    height: 44px;\n    flex-grow: 1;\n    margin-left: 20px;\n}\n\n.slide-toggle {\n  margin-left: 20px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n\n.bug-report-icon {\n  color: red;\n}\n\n.feature-request-icon {\n  color: #005eff;\n}\n\n.feature-request-icon, .bug-report-icon, .notification-icon, .unclassified-icon {\n  margin-top: 7px;\n}\n\n.relation-edge-icon {\n  margin-top: 12px;\n}\n.create-component-button {\n  margin: 10px;\n  margin-left: 20px;\n  right: 10px;\n}\n\n.spacer {\n  flex: 1 1 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  emoji_objects                  bug_report                    help                                    center_focus_strong                  dashboard                          add          '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueGraphControlsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IssueGraphDynamicTemplateRegistryService.html":{"url":"injectables/IssueGraphDynamicTemplateRegistryService.html","title":"injectable - IssueGraphDynamicTemplateRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IssueGraphDynamicTemplateRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/dynamic-template-registry/issue-graph-dynamic-template-registry.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service is respoonsible for managing the dynamic template registry\nof a given GraphEditor instance.\nUsed in method initGraph of IssueGraphComponent.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                manageDynamicTemplateRegistry\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        manageDynamicTemplateRegistry\n                        \n                    \n                \n            \n            \n                \nmanageDynamicTemplateRegistry(graph: GraphEditor)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/dynamic-template-registry/issue-graph-dynamic-template-registry.service.ts:21\n                \n            \n\n\n            \n                \n                    Manages the dynamic template registry of given GraphEditor instance.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    graph\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nReference to the GraphEditor instance of the graph that is handled.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as dynamicTemplate from '@ustutt/grapheditor-webcomponent/lib/dynamic-templates/dynamic-template';\nimport GraphEditor from '@ustutt/grapheditor-webcomponent/lib/grapheditor';\nimport {LinkHandle} from '@ustutt/grapheditor-webcomponent/lib/link-handle';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\n\n/**\n * This service is respoonsible for managing the dynamic template registry \n * of a given GraphEditor instance.\n * Used in method initGraph of IssueGraphComponent.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class IssueGraphDynamicTemplateRegistryService {\n\n  /**\n   * Manages the dynamic template registry of given GraphEditor instance.\n   * @param  {GraphEditor} graph - Reference to the GraphEditor instance of the graph that is handled.\n   */\n  manageDynamicTemplateRegistry(graph: GraphEditor) {\n    graph.dynamicTemplateRegistry.addDynamicTemplate('issue-group-container', {\n      renderInitialTemplate(\n        g,\n        grapheditor: GraphEditor,\n        context: dynamicTemplate.DynamicTemplateContext\n      ): void {\n        // template is empty\n        g.append('circle')\n          .attr('x', 0)\n          .attr('y', 0)\n          .attr('r', 1)\n          .style('opacity', 0);\n      },\n      updateTemplate(\n        g,\n        grapheditor: GraphEditor,\n        context: dynamicTemplate.DynamicTemplateContext\n      ): void {\n        // template is empty\n      },\n      getLinkHandles(g, grapheditor: GraphEditor): LinkHandle[] {\n        // template has no link handles\n        return [];\n      },\n    } as dynamicTemplate.DynamicNodeTemplate);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IssueGraphLinkHandlesService.html":{"url":"injectables/IssueGraphLinkHandlesService.html","title":"injectable - IssueGraphLinkHandlesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IssueGraphLinkHandlesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/link-handles/issue-graph-link-handles.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service is respoonsible for managing the link handles\nof a given GraphEditor instance.\nUsed in method initGraph of IssueGraphComponent.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calculateSourceHandles\n                            \n                            \n                                    Private\n                                calculateTargetHandles\n                            \n                            \n                                manageLinkHandles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        calculateSourceHandles\n                        \n                    \n                \n            \n            \n                \n                    \n                    calculateSourceHandles(source: Node, handles: literal type, sourceHandles: LinkHandle[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/link-handles/issue-graph-link-handles.service.ts:65\n                \n            \n\n\n            \n                \n                    Calculates the source handles of a given edge.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nSource of the edge that is handled.\n\n\n                                    \n                                \n                                \n                                    handles\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nHandles of the edge.\n\n\n                                    \n                                \n                                \n                                    sourceHandles\n                                    \n                                            LinkHandle[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nSource handles of the edge.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        calculateTargetHandles\n                        \n                    \n                \n            \n            \n                \n                    \n                    calculateTargetHandles(target: Node, handles: literal type, targetHandles: LinkHandle[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/link-handles/issue-graph-link-handles.service.ts:101\n                \n            \n\n\n            \n                \n                    Calculates the target handles of a given edge.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nTarget of the edge that is handled.\n\n\n                                    \n                                \n                                \n                                    handles\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nHandles of the edge.\n\n\n                                    \n                                \n                                \n                                    targetHandles\n                                    \n                                            LinkHandle[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nTarget handles of the edge.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        manageLinkHandles\n                        \n                    \n                \n            \n            \n                \nmanageLinkHandles(graph: GraphEditor, minimap: GraphEditor)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/link-handles/issue-graph-link-handles.service.ts:22\n                \n            \n\n\n            \n                \n                    Manages calculation of the link handles of given GraphEditor instances.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    graph\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nReference to the GraphEditor instance of the graph that is handled.\n\n\n                                    \n                                \n                                \n                                    minimap\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nReference to the GraphEditor instance of the minimap that is handled.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {DraggedEdge, Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\nimport GraphEditor from '@ustutt/grapheditor-webcomponent/lib/grapheditor';\nimport { LinkHandle } from '@ustutt/grapheditor-webcomponent/lib/link-handle';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\n\n/**\n * This service is respoonsible for managing the link handles\n * of a given GraphEditor instance.\n * Used in method initGraph of IssueGraphComponent.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class IssueGraphLinkHandlesService {\n\n  /**\n   * Manages calculation of the link handles of given GraphEditor instances.\n   * @param  {GraphEditor} graph - Reference to the GraphEditor instance of the graph that is handled.\n   * @param  {GraphEditor} minimap - Reference to the GraphEditor instance of the minimap that is handled.\n   */\n  manageLinkHandles(graph: GraphEditor, minimap: GraphEditor) {\n\n    // calculation for link handles\n    const linkHandleCalculation = (\n      edge: Edge | DraggedEdge,\n      sourceHandles: LinkHandle[],\n      source: Node,\n      targetHandles: LinkHandle[],\n      target: Node\n    ) => {\n\n      // handles at the source / target of a given edge\n      const handles = {\n        sourceHandles,\n        targetHandles,\n      };\n\n      // case: source of edge has allowed anchors\n      // => calculates source handles\n      if (source?.allowedAnchors != null) {\n        this.calculateSourceHandles(source, handles, sourceHandles);\n      }\n\n      // case: target of edge has allowed anchors\n      // => calculates target handles\n      if (target?.allowedAnchors != null) {\n        this.calculateTargetHandles(target, handles, targetHandles);\n      }\n\n      return handles;\n    };\n\n    // applies calculaiton for link handles\n    graph.calculateLinkHandlesForEdge = linkHandleCalculation;\n    minimap.calculateLinkHandlesForEdge = linkHandleCalculation;\n  }\n\n  /**\n   * Calculates the source handles of a given edge.\n   * @param  {Node} source - Source of the edge that is handled.\n   * @param  {{sourceHandles:LinkHandle[];targetHandles:LinkHandle[];}} handles - Handles of the edge.\n   * @param  {LinkHandle[]} sourceHandles - Source handles of the edge.\n   */\n  private calculateSourceHandles(source: Node, \n    handles: { sourceHandles: LinkHandle[]; targetHandles: LinkHandle[]; }, \n    sourceHandles: LinkHandle[]) {\n\n    handles.sourceHandles = sourceHandles.filter((linkHandle) => {\n\n      // case: X coordinate of link handle further than the Y coordinate\n      if (Math.abs(linkHandle.x) > Math.abs(linkHandle.y)) {\n        if (linkHandle.x > 0 && source.allowedAnchors.has('right')) {\n          return true;\n        }\n        if (linkHandle.x  0 && source.allowedAnchors.has('bottom')) {\n          return true;\n        }\n        if (linkHandle.y  {\n\n      // case: X coordinate of link handle further than the Y coordinate\n      if (Math.abs(linkHandle.x) > Math.abs(linkHandle.y)) {\n        if (linkHandle.x > 0 && target.allowedAnchors.has('right')) {\n          return true;\n        }\n        if (linkHandle.x  0 && target.allowedAnchors.has('bottom')) {\n          return true;\n        }\n        if (linkHandle.y \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IssueGraphStateService.html":{"url":"injectables/IssueGraphStateService.html","title":"injectable - IssueGraphStateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IssueGraphStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/issue-graph/issue-graph-state.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                state$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addConsumedInterface\n                            \n                            \n                                graphDataForFilter\n                            \n                            \n                                removeConsumedInterface\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: IssueGraphApiService, ss: StateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/issue-graph/issue-graph-state.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        IssueGraphApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ss\n                                                  \n                                                        \n                                                                        StateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addConsumedInterface\n                        \n                    \n                \n            \n            \n                \naddConsumedInterface(componentId: string, interfaceId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/issue-graph-state.service.ts:44\n                \n            \n\n\n            \n                \n                    Make the interface with interfaceId a consumed interface of the component with id componentId\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    componentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    interfaceId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        graphDataForFilter\n                        \n                    \n                \n            \n            \n                \ngraphDataForFilter(filter$: BehaviorSubject, reload$: BehaviorSubject, destroy$: ReplaySubject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/issue-graph-state.service.ts:28\n                \n            \n\n\n            \n                \n                    Maps an observable of the state of the graph filters (toggles and queries in search bar) onto an observable\nemitting graph state for these filters retrieved from the backend.\nthe filter$ or reload$ observables emit a value.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter$\n                                    \n                                                BehaviorSubject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        an observable emitting a sequence of values describing the state of the filter bar above the graph\n\n                                    \n                                \n                                \n                                    reload$\n                                    \n                                            BehaviorSubject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        an observable emitting irrelevant values to signal a reload is required, after a manipulation of graph data\n\n                                    \n                                \n                                \n                                    destroy$\n                                    \n                                            ReplaySubject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        used to signal that the caller is no longer interested. On emission the returned observable finishes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable emitting sequence of graph states containing e.g. components and interfaces. It will emit new values when\nthe filter$ or reload$ observables emit a value.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeConsumedInterface\n                        \n                    \n                \n            \n            \n                \nremoveConsumedInterface(componentId: string, interfaceId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/issue-graph-state.service.ts:51\n                \n            \n\n\n            \n                \n                    Remove the interface with interfaceId from consumed interfaces of the component with id componentId\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    componentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    interfaceId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/issue-graph-state.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, ReplaySubject} from 'rxjs';\nimport {StateService} from '@app/state.service';\nimport {GraphData} from './graph-data';\nimport {filter, shareReplay, switchMap, takeUntil} from 'rxjs/operators';\nimport {IssueGraphApiService} from './issue-graph-api.service';\nimport {FilterState} from '@app/graphs/shared';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IssueGraphStateService {\n\n  state$: Observable;\n\n  constructor(private apiService: IssueGraphApiService, private ss: StateService) {\n  }\n\n  /**\n   * Maps an observable of the state of the graph filters (toggles and queries in search bar) onto an observable\n   * emitting graph state for these filters retrieved from the backend.\n   * @param filter$ an observable emitting a sequence of values describing the state of the filter bar above the graph\n   * @param reload$ an observable emitting irrelevant values to signal a reload is required, after a manipulation of graph data\n   * @param destroy$ used to signal that the caller is no longer interested. On emission the returned observable finishes.\n   * @returns observable emitting sequence of graph states containing e.g. components and interfaces. It will emit new values when\n   * the filter$ or reload$ observables emit a value.\n   */\n  graphDataForFilter(filter$: BehaviorSubject, reload$: BehaviorSubject,\n                     destroy$: ReplaySubject): Observable {\n    // Whenever a new value arrives from reload$, loadIssueGraphData is executed\n    this.state$ = combineLatest([this.ss.state$, filter$, reload$]).pipe(\n      takeUntil(destroy$),\n      filter(([appState, _]) => appState.project?.node.id != null),\n      switchMap(([appState, filterState]) => this.apiService.loadIssueGraphData(appState.project.node.id,\n        filterState.selectedCategories, filterState.selectedFilter.labels, filterState.selectedFilter.texts)),\n      shareReplay(1)\n    );\n    return this.state$;\n  }\n\n  /**\n   * Make the interface with interfaceId a consumed interface of the component with id componentId\n   */\n  addConsumedInterface(componentId: string, interfaceId: string) {\n    return this.apiService.addConsumedInterface(componentId, interfaceId);\n  }\n\n  /**\n   * Remove the interface with interfaceId from consumed interfaces of the component with id componentId\n   */\n  removeConsumedInterface(componentId: string, interfaceId: string) {\n    return this.apiService.removeConsumedInterface(componentId, interfaceId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IssueGroupContainerBehaviour.html":{"url":"classes/IssueGroupContainerBehaviour.html","title":"class - IssueGroupContainerBehaviour","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IssueGroupContainerBehaviour\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/group-behaviours.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        GroupBehaviour\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                captureChildMovement\n                            \n                            \n                                childNodePositions\n                            \n                            \n                                moveChildrenAlongGoup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterNodeJoinedGroup\n                            \n                            \n                                afterNodeLeftGroup\n                            \n                            \n                                relativePositionChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        captureChildMovement\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph/group-behaviours.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        childNodePositions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph/group-behaviours.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moveChildrenAlongGoup\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph/group-behaviours.ts:93\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterNodeJoinedGroup\n                        \n                    \n                \n            \n            \n                \nafterNodeJoinedGroup(group: string, childGroup: string, groupNode: IssueGroupContainerNode, childNode: Node, graphEditor: GraphEditor)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/group-behaviours.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    childGroup\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    groupNode\n                                    \n                                                IssueGroupContainerNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    childNode\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    graphEditor\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        afterNodeLeftGroup\n                        \n                    \n                \n            \n            \n                \nafterNodeLeftGroup(group: string, childGroup: string, groupNode: IssueGroupContainerNode, childNode: Node, graphEditor: GraphEditor)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/group-behaviours.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    childGroup\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    groupNode\n                                    \n                                                IssueGroupContainerNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    childNode\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    graphEditor\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        relativePositionChanged\n                        \n                    \n                \n            \n            \n                \nrelativePositionChanged(group: string, groupNode: Node, graphEditor: GraphEditor)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/group-behaviours.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    groupNode\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    graphEditor\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {GroupBehaviour} from '@ustutt/grapheditor-webcomponent/lib/grouping';\nimport {Point} from '@ustutt/grapheditor-webcomponent/lib/edge';\nimport GraphEditor from '@ustutt/grapheditor-webcomponent/lib/grapheditor';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {IssueGroupContainerNode, NodeType} from './issue-graph-nodes';\n\nfunction distance(x, y, x2, y2) {\n  return ((x - x2) ** 2) + ((y - y2) ** 2);\n}\n\n/**\n * See the graph_structure_documentation.png in the src/app/graphs folder for how\n * the two GroupBehaviour implementations interplay with the graph.\n */\n\nexport class IssueGroupContainerParentBehaviour implements GroupBehaviour {\n  moveChildrenAlongGoup = true;\n  childNodePositions = new Map();\n\n  constructor(private initialPosition: string) {\n  }\n\n  beforeNodeMove(group: string, childGroup: string, groupNode: Node, childNode: Node, newPosition: Point, graphEditor: GraphEditor) {\n    // calculate groupNode (the parent node) dimensions\n    const width = groupNode.type === NodeType.Interface ? 10 : 100;\n    const height = groupNode.type === NodeType.Interface ? 10 : 60;\n    // find nearest side\n    let best = 'bottom';\n    if (newPosition != null && (newPosition.x !== 0 || newPosition.y !== 0)) {\n      let bestDistance = distance(newPosition.x, newPosition.y, groupNode.x, groupNode.y + (height / 2) + 25);\n      const rightDistance = distance(newPosition.x, newPosition.y, groupNode.x + (width / 2) + 30, groupNode.y);\n      const leftDistance = distance(newPosition.x, newPosition.y, groupNode.x - (width / 2) - 30, groupNode.y);\n      const topDistance = distance(newPosition.x, newPosition.y, groupNode.x, groupNode.y - (height / 2) - 25);\n      if (rightDistance  0 ? (places / 2) : 0;\n    let xOffset = 0;\n    let yOffset = 0;\n\n    if (groupNode.position === 'bottom' || groupNode.position === 'top') {\n      xOffset = startOffset * 45;\n    }\n    if (groupNode.position === 'right' || groupNode.position === 'left') {\n      yOffset = -startOffset * 35;\n    }\n\n    // order of sortedChildIds decides order of rendering\n    const sortedChildIds = Object.keys(IssueCategory)\n      .map(key => `${parent}__${IssueCategory[key]}`)\n      .filter(childId => children.has(childId));\n\n    // pre sorted list\n    /*\n    const sortedChildIds = [\n        `${parent}__undecided`,\n        `${parent}__bug`,\n        `${parent}__feature`,\n    ].filter(childId => children.has(childId));\n    */\n    sortedChildIds.forEach((childId, index) => {\n      this.childNodePositions.set(childId, {x: xOffset, y: yOffset});\n      const child = graphEditor.getNode(childId);\n      if (child != null) {\n        child.x = groupNode.x + xOffset;\n        child.y = groupNode.y + yOffset;\n      }\n      if (groupNode.position === 'bottom' || groupNode.position === 'top') {\n        xOffset -= 45;\n      }\n      if (groupNode.position === 'right' || groupNode.position === 'left') {\n        yOffset += 35;\n      }\n      // set allowed link anchors\n      const allowedAnchors = new Set();\n      allowedAnchors.add(groupNode.position);\n      if (index === 0) {\n        if (groupNode.position === 'bottom' || groupNode.position === 'top') {\n          allowedAnchors.add('right');\n        }\n        if (groupNode.position === 'right' || groupNode.position === 'left') {\n          allowedAnchors.add('top');\n        }\n      }\n      if (index === (sortedChildIds.length - 1)) {\n        if (groupNode.position === 'bottom' || groupNode.position === 'top') {\n          allowedAnchors.add('left');\n        }\n        if (groupNode.position === 'right' || groupNode.position === 'left') {\n          allowedAnchors.add('bottom');\n        }\n      }\n      const childNode = graphEditor.getNode(childId);\n      if (childNode != null) {\n        childNode.allowedAnchors = allowedAnchors;\n      }\n    });\n  }\n\n  afterNodeJoinedGroup(group: string, childGroup: string, groupNode: IssueGroupContainerNode, childNode: Node, graphEditor: GraphEditor) {\n    this.relativePositionChanged(group, groupNode, graphEditor);\n    groupNode.issueGroupNodeIds.add(childGroup);\n  }\n\n  afterNodeLeftGroup(group: string, childGroup: string, groupNode: IssueGroupContainerNode, childNode: Node, graphEditor: GraphEditor) {\n    this.relativePositionChanged(group, groupNode, graphEditor);\n    groupNode.issueGroupNodeIds.delete(childGroup);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IssueGroupContainerNode.html":{"url":"interfaces/IssueGroupContainerNode.html","title":"interface - IssueGroupContainerNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IssueGroupContainerNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/issue-graph-nodes.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Node\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            issueGroupNodeIds\n                                        \n                                \n                                \n                                        \n                                            position\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        issueGroupNodeIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issueGroupNodeIds:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {GraphComponent, GraphInterface} from '@app/data/issue-graph/graph-data';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\n\nexport {\n  IssueNode, ComponentNode, InterfaceNode, IssueGroupContainerNode, RelationEdge,\n  createComponentNode, createInterfaceNode, createIssueGroupContainerNode, createIssueFolderNode,\n  createRelationEdge, createConsumptionEdge, createInterfaceProvisionEdge,\n  Position,\n  getIssueFolderId\n};\n\nexport enum NodeType {\n  Component = 'component',\n  Interface = 'interface',\n  InterfaceConsumer = 'interface-connect',\n  IssueGroupContainer = 'issue-group-container'\n}\n\n/**\n * This file includes type definitions and creation functions (think constructors)\n * for nodes and edges that are added to the graph editor in order to visualize the project.\n * Since the data that is stored with these differs based on what they represent (e.g.\n * interface vs component node) we give each their own type. We do this by extending\n * the Node class or the Edge class of the grapheditor. These classes are instantiated\n * via calls to the contained create* functions within the drawGraph method of the IssueGraphComponent.\n */\n\ninterface IssueNode extends Node {\n  id: string;\n  title: string;\n  issueGroupContainer?: IssueGroupContainerNode;\n}\n\ninterface ComponentNode extends IssueNode {\n  data: GraphComponent;\n}\n\nfunction createComponentNode(component: GraphComponent, position: Position): ComponentNode {\n  return {\n    ...(position || zeroPosition),\n    id: component.id,\n    title: component.name,\n    type: NodeType.Component,\n    data: component\n  };\n}\n\ninterface InterfaceNode extends IssueNode {\n  offeredById: string;\n}\n\nfunction createInterfaceNode(intrface: GraphInterface, position: Position): InterfaceNode {\n  return {\n    ...(position || zeroPosition),\n    id: intrface.id,\n    title: intrface.name,\n    type: NodeType.Interface,\n    offeredById: intrface.offeredBy,\n  };\n}\n\ninterface IssueGroupContainerNode extends Node {\n  position: string;\n  issueGroupNodeIds: Set;\n}\n\nfunction createIssueGroupContainerNode(node: IssueNode): IssueGroupContainerNode {\n  return {\n    id: `${node.id}__issue-group-container`,\n    type: NodeType.IssueGroupContainer,\n    dynamicTemplate: 'issue-group-container',\n    x: 0,\n    y: 0,\n    position: 'bottom',\n    issueGroupNodeIds: new Set(),\n  };\n}\n\ninterface IssueFolderNode extends Node {\n  type: IssueCategory;\n  issueCount: string;\n}\n\nfunction createIssueFolderNode(node: IssueNode, issueCategory: IssueCategory, issueCount: string): IssueFolderNode {\n  return {\n    id: getIssueFolderId(node.id, issueCategory),\n    type: issueCategory,\n    x: 0,\n    y: 0,\n    issues: new Set(),\n    issueCount\n  };\n}\n\ninterface RelationEdge extends Edge {\n  sourceIssues: Set;\n}\n\nfunction createRelationEdge(sourceId: string, targetId: string, edgeType = folderEdgeTypes.RelatedTo): RelationEdge {\n  return {\n    id: `s${sourceId}t${targetId}r${edgeType}`,\n    source: sourceId,\n    target: targetId,\n    type: folderEdgeTypes.RelatedTo,\n    markerEnd: {\n      template: 'arrow',\n      relativeRotation: 0,\n    },\n    dragHandles: [],\n    sourceIssues: new Set()\n  };\n}\n\nfunction createConsumptionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.InterfaceConsumer,\n    markerEnd: {\n      template: 'interface-connector',\n      relativeRotation: 0,\n    },\n  };\n}\n\nfunction createInterfaceProvisionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.Interface,\n    dragHandles: [],\n  };\n}\n\nfunction getIssueFolderId(id: string, issueCategory: IssueCategory): string {\n  return `${id}__${issueCategory}`;\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst zeroPosition = {x: 0, y: 0};\n\nenum folderEdgeTypes {\n  RelatedTo = 'relatedTo',\n  Depends = 'dependency',\n  Duplicates = 'duplicate'\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IssueGroupContainerParentBehaviour.html":{"url":"classes/IssueGroupContainerParentBehaviour.html","title":"class - IssueGroupContainerParentBehaviour","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IssueGroupContainerParentBehaviour\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/group-behaviours.ts\n        \n\n\n            \n                Description\n            \n            \n                See the graph_structure_documentation.png in the src/app/graphs folder for how\nthe two GroupBehaviour implementations interplay with the graph.\n\n            \n\n\n            \n                Implements\n            \n            \n                        GroupBehaviour\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                childNodePositions\n                            \n                            \n                                moveChildrenAlongGoup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                beforeNodeMove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(initialPosition: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/graphs/issue-graph/group-behaviours.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        initialPosition\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        childNodePositions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph/group-behaviours.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moveChildrenAlongGoup\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph/group-behaviours.ts:18\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        beforeNodeMove\n                        \n                    \n                \n            \n            \n                \nbeforeNodeMove(group: string, childGroup: string, groupNode: Node, childNode: Node, newPosition: Point, graphEditor: GraphEditor)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/group-behaviours.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    childGroup\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    groupNode\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    childNode\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newPosition\n                                    \n                                            Point\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    graphEditor\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {GroupBehaviour} from '@ustutt/grapheditor-webcomponent/lib/grouping';\nimport {Point} from '@ustutt/grapheditor-webcomponent/lib/edge';\nimport GraphEditor from '@ustutt/grapheditor-webcomponent/lib/grapheditor';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {IssueGroupContainerNode, NodeType} from './issue-graph-nodes';\n\nfunction distance(x, y, x2, y2) {\n  return ((x - x2) ** 2) + ((y - y2) ** 2);\n}\n\n/**\n * See the graph_structure_documentation.png in the src/app/graphs folder for how\n * the two GroupBehaviour implementations interplay with the graph.\n */\n\nexport class IssueGroupContainerParentBehaviour implements GroupBehaviour {\n  moveChildrenAlongGoup = true;\n  childNodePositions = new Map();\n\n  constructor(private initialPosition: string) {\n  }\n\n  beforeNodeMove(group: string, childGroup: string, groupNode: Node, childNode: Node, newPosition: Point, graphEditor: GraphEditor) {\n    // calculate groupNode (the parent node) dimensions\n    const width = groupNode.type === NodeType.Interface ? 10 : 100;\n    const height = groupNode.type === NodeType.Interface ? 10 : 60;\n    // find nearest side\n    let best = 'bottom';\n    if (newPosition != null && (newPosition.x !== 0 || newPosition.y !== 0)) {\n      let bestDistance = distance(newPosition.x, newPosition.y, groupNode.x, groupNode.y + (height / 2) + 25);\n      const rightDistance = distance(newPosition.x, newPosition.y, groupNode.x + (width / 2) + 30, groupNode.y);\n      const leftDistance = distance(newPosition.x, newPosition.y, groupNode.x - (width / 2) - 30, groupNode.y);\n      const topDistance = distance(newPosition.x, newPosition.y, groupNode.x, groupNode.y - (height / 2) - 25);\n      if (rightDistance  0 ? (places / 2) : 0;\n    let xOffset = 0;\n    let yOffset = 0;\n\n    if (groupNode.position === 'bottom' || groupNode.position === 'top') {\n      xOffset = startOffset * 45;\n    }\n    if (groupNode.position === 'right' || groupNode.position === 'left') {\n      yOffset = -startOffset * 35;\n    }\n\n    // order of sortedChildIds decides order of rendering\n    const sortedChildIds = Object.keys(IssueCategory)\n      .map(key => `${parent}__${IssueCategory[key]}`)\n      .filter(childId => children.has(childId));\n\n    // pre sorted list\n    /*\n    const sortedChildIds = [\n        `${parent}__undecided`,\n        `${parent}__bug`,\n        `${parent}__feature`,\n    ].filter(childId => children.has(childId));\n    */\n    sortedChildIds.forEach((childId, index) => {\n      this.childNodePositions.set(childId, {x: xOffset, y: yOffset});\n      const child = graphEditor.getNode(childId);\n      if (child != null) {\n        child.x = groupNode.x + xOffset;\n        child.y = groupNode.y + yOffset;\n      }\n      if (groupNode.position === 'bottom' || groupNode.position === 'top') {\n        xOffset -= 45;\n      }\n      if (groupNode.position === 'right' || groupNode.position === 'left') {\n        yOffset += 35;\n      }\n      // set allowed link anchors\n      const allowedAnchors = new Set();\n      allowedAnchors.add(groupNode.position);\n      if (index === 0) {\n        if (groupNode.position === 'bottom' || groupNode.position === 'top') {\n          allowedAnchors.add('right');\n        }\n        if (groupNode.position === 'right' || groupNode.position === 'left') {\n          allowedAnchors.add('top');\n        }\n      }\n      if (index === (sortedChildIds.length - 1)) {\n        if (groupNode.position === 'bottom' || groupNode.position === 'top') {\n          allowedAnchors.add('left');\n        }\n        if (groupNode.position === 'right' || groupNode.position === 'left') {\n          allowedAnchors.add('bottom');\n        }\n      }\n      const childNode = graphEditor.getNode(childId);\n      if (childNode != null) {\n        childNode.allowedAnchors = allowedAnchors;\n      }\n    });\n  }\n\n  afterNodeJoinedGroup(group: string, childGroup: string, groupNode: IssueGroupContainerNode, childNode: Node, graphEditor: GraphEditor) {\n    this.relativePositionChanged(group, groupNode, graphEditor);\n    groupNode.issueGroupNodeIds.add(childGroup);\n  }\n\n  afterNodeLeftGroup(group: string, childGroup: string, groupNode: IssueGroupContainerNode, childNode: Node, graphEditor: GraphEditor) {\n    this.relativePositionChanged(group, groupNode, graphEditor);\n    groupNode.issueGroupNodeIds.delete(childGroup);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueIconComponent.html":{"url":"components/IssueIconComponent.html","title":"component - IssueIconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueIconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/issue-icon/issue-icon.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component automatically displays the appropriate mat-icon for the given issue.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-icon\n            \n\n            \n                styleUrls\n                ./issue-icon.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-icon.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIconLabel\n                            \n                            \n                                getIconName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                issue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        issue\n                    \n                \n                \n                    \n                        Type :     Issue\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-icon/issue-icon.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getIconLabel\n                        \n                    \n                \n            \n            \n                \ngetIconLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/issue-icon/issue-icon.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIconName\n                        \n                    \n                \n            \n            \n                \ngetIconName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/issue-icon/issue-icon.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Issue, IssueCategory } from 'src/generated/graphql-dgql';\n\n/**\n * This component automatically displays the appropriate mat-icon for the given issue.\n */\n@Component({\n  selector: 'app-issue-icon',\n  templateUrl: './issue-icon.component.html',\n  styleUrls: ['./issue-icon.component.scss']\n})\nexport class IssueIconComponent {\n  @Input() issue: Issue;\n\n  getIconName() {\n    const category = this.issue.category === IssueCategory.Bug\n      ? 'bug'\n      : this.issue.category === IssueCategory.FeatureRequest\n      ? 'feature'\n      : 'uncategorized';\n    const closed = this.issue.isOpen ? null : '-closed';\n\n    const hasIn = this.issue.linkedByIssues?.totalCount;\n    const hasOut = this.issue.linksToIssues?.totalCount;\n    const edgeType = (hasIn ? 'in' : '') + (hasOut ? 'out' : '');\n\n    return ['issue-', category, closed, edgeType && '-', edgeType].filter(part => part).join('');\n  }\n\n  getIconLabel() {\n    const category = this.issue.category === IssueCategory.Bug ? 'bug'\n      : this.issue.category === IssueCategory.FeatureRequest ? 'feature' : 'issue';\n    return this.issue.isOpen ? `Open ${category}` : `Closed ${category}`;\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./issue-icon.component.scss\n                \n                :host {\n  display: inline-block;\n}\n\n:host > * {\n  // get rid of bottom space caused by line height\n  display: block;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueIconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueItemComponent.html":{"url":"components/IssueItemComponent.html","title":"component - IssueItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/issue-item/issue-item.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays an issue (for use in e.g. a list).\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-item\n            \n\n            \n                styleUrls\n                ./issue-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIssueLink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                extended\n                            \n                            \n                                interactive\n                            \n                            \n                                issue\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/issue-item/issue-item.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        extended\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-item/issue-item.component.ts:17\n                            \n                        \n                \n                    \n                        Whether to show extended info, such as the issue's locations.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        interactive\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-item/issue-item.component.ts:19\n                            \n                        \n                \n                    \n                        If true, this component will display a hyperlink.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        issue\n                    \n                \n                \n                    \n                        Type :     Issue\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-item/issue-item.component.ts:15\n                            \n                        \n                \n                    \n                        The issue object that will be displayed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-item/issue-item.component.ts:13\n                            \n                        \n                \n                    \n                        The raw project ID.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getIssueLink\n                        \n                    \n                \n            \n            \n                \ngetIssueLink()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/issue-item/issue-item.component.ts:24\n                \n            \n\n\n            \n                \n                    Returns the link URL for the issue.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Issue } from 'src/generated/graphql-dgql';\nimport { Router } from '@angular/router';\n\n/** This component displays an issue (for use in e.g. a list). */\n@Component({\n  selector: 'app-issue-item',\n  templateUrl: './issue-item.component.html',\n  styleUrls: ['./issue-item.component.scss']\n})\nexport class IssueItemComponent {\n  /** The raw project ID. */\n  @Input() projectId: string;\n  /** The issue object that will be displayed. */\n  @Input() issue: Issue;\n  /** Whether to show extended info, such as the issue's locations. */\n  @Input() extended = false;\n  /** If true, this component will display a hyperlink. */\n  @Input() interactive = false;\n\n  constructor(private router: Router) {}\n\n  /** Returns the link URL for the issue. */\n  getIssueLink() {\n    return this.router.serializeUrl(this.router.createUrlTree(\n      ['/projects', this.projectId, 'issues', this.issue.id]\n    ));\n  }\n}\n\n    \n\n    \n        \n  \n  {{issue.title}}\n\n\n  \n  {{issue.title}}\n\n\n  \n    {{component.name}}\n  \n\n\n    \n\n    \n                \n                    ./issue-item.component.scss\n                \n                :host {\n  line-height: 1.4em;\n\n  .issue-icon {\n    vertical-align: middle;\n  }\n\n  .linked-issue-locations {\n    font-size: 0.8em;\n    font-weight: normal;\n\n    .inner-item {\n      display: inline-block;\n      line-height: 1.2em;\n      background: rgba(0, 0, 0, 0.2);\n      border-radius: 2px;\n      padding: 1px 2px;\n      margin-right: 2px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{issue.title}}    {{issue.title}}      {{component.name}}  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueLabelComponent.html":{"url":"components/IssueLabelComponent.html","title":"component - IssueLabelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueLabelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/issue-label/issue-label.component.ts\n\n\n\n    \n        Description\n    \n    \n        Renders an issue label.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-label\n            \n\n            \n                styleUrls\n                ./issue-label.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-label.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                labelColorForBackground\n                            \n                            \n                                    Public\n                                labelIsDark\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :     Label\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-label/issue-label.component.ts:14\n                            \n                        \n                \n                    \n                        The label to display. Nullable. Should have properties name and color.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        labelColorForBackground\n                        \n                    \n                \n            \n            \n                \n                    \n                    labelColorForBackground(color)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/issue-label/issue-label.component.ts:20\n                \n            \n\n\n            \n                \n                    Determines the label color for a given background color.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    color\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the background color string in hex or rgb(...)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     \"black\" | \"white\"\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        labelIsDark\n                        \n                    \n                \n            \n            \n                \n                    \n                    labelIsDark(color)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/issue-label/issue-label.component.ts:65\n                \n            \n\n\n            \n                \n                    Determines whether the background color is light or dark.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    color\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nBackground color of a label.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Label } from 'src/generated/graphql-dgql';\n\n/**\n * Renders an issue label.\n */\n@Component({\n  selector: 'app-issue-label',\n  templateUrl: './issue-label.component.html',\n  styleUrls: ['./issue-label.component.scss']\n})\nexport class IssueLabelComponent {\n  /** The label to display. Nullable. Should have properties `name` and `color`. */\n  @Input() label: Label;\n\n  /**\n   * Determines the label color for a given background color.\n   * @param color the background color string in hex or rgb(...)\n   */\n  public static labelColorForBackground(color) {\n    // Variables for red, green, blue values\n    let r, g, b, hsp;\n\n    // Check the format of the color, HEX or RGB?\n    if (color.match(/^rgb/)) {\n\n      // If RGB --> store the red, green, blue values in separate variables\n      color = color.match(/^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/);\n\n      r = color[1];\n      g = color[2];\n      b = color[3];\n    } else {\n\n      // If hex --> Convert it to RGB: http://gist.github.com/983661\n      color = +('0x' + color.slice(1).replace(\n        color.length > 16;\n      g = color >> 8 & 255;\n      b = color & 255;\n    }\n\n    // HSP (Hue-Sat-Perceived-brightness) equation from http://alienryderflex.com/hsp.html\n    hsp = Math.sqrt(\n      0.299 * (r * r) +\n      0.587 * (g * g) +\n      0.114 * (b * b)\n    );\n\n    // Using the HSP value, determine whether the color is light or dark\n    // Compare against gamma-adjusted tipping point\n    if (hsp > Math.sqrt(0.5) * 255) {\n      return 'black';\n    } else {\n      return 'white';\n    }\n  }\n\n  /**\n   * Determines whether the background color is light or dark.\n   *\n   * @param color - Background color of a label.\n   */\n  public labelIsDark(color) {\n    if (!color) {\n      return false;\n    }\n    return IssueLabelComponent.labelColorForBackground(color) === 'black';\n  }\n}\n\n    \n\n    \n        \n    {{label?.name}}\n\n\n    \n\n    \n                \n                    ./issue-label.component.scss\n                \n                :host {\n  display: inline-block;\n}\n\n.inner-label {\n  display: inline-block;\n  color: white;\n  border-radius: 4px;\n  padding: 1px 2px;\n  margin: 1px;\n  border: 1px solid rgba(255, 255, 255, 0.3);\n\n  &.is-dark-text {\n    color: black;\n    border: 1px solid rgba(0, 0, 0, 0.3);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{label?.name}}'\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueLabelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueListComponent.html":{"url":"components/IssueListComponent.html","title":"component - IssueListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-list/issue-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component shows all issues for a given component / interface.\nIt lets the user 1) filter through all the issues,\n2) create new issues and also 3) sort all issues in a separate table view.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-list\n            \n\n            \n                styleUrls\n                ./issue-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                allLabelsList\n                            \n                            \n                                    Public\n                                canCreateNewIssue\n                            \n                            \n                                columnsToDisplay\n                            \n                            \n                                    Public\n                                    Optional\n                                component$\n                            \n                            \n                                    Public\n                                    Optional\n                                componentInterface$\n                            \n                            \n                                    Public\n                                componentInterfaceProvider\n                            \n                            \n                                    Private\n                                    Optional\n                                componentInterfaceSub\n                            \n                            \n                                    Private\n                                    Optional\n                                componentSub\n                            \n                            \n                                dataSource\n                            \n                            \n                                    Public\n                                    Optional\n                                list$\n                            \n                            \n                                paginator\n                            \n                            \n                                query\n                            \n                            \n                                    Public\n                                queryParamFilter\n                            \n                            \n                                searchIssuesDataArray\n                            \n                            \n                                sort\n                            \n                            \n                                validationFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                clickedOnRow\n                            \n                            \n                                formatCategoryDescription\n                            \n                            \n                                formatCategoryIcon\n                            \n                            \n                                    Private\n                                getQueryParamFilter\n                            \n                            \n                                onAddClick\n                            \n                            \n                                    Private\n                                prepareIssueArray\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                listId\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, dialog: MatDialog, router: Router, dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-list/issue-list.component.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        listId\n                    \n                \n                \n                    \n                        Type :         ListId\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-list/issue-list.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-list/issue-list.component.ts:34\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilter\n                        \n                    \n                \n            \n            \n                \napplyFilter(filter: IssueFilter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-list.component.ts:188\n                \n            \n\n\n            \n                \n                    Applies a given filter.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            IssueFilter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nGiven filter to be applied.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clickedOnRow\n                        \n                    \n                \n            \n            \n                \nclickedOnRow(row: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-list.component.ts:197\n                \n            \n\n\n            \n                \n                    Gets activated when an issue is clicked.\nNavigates the user to the corresponding issue page.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nIssue that is clicked.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatCategoryDescription\n                        \n                    \n                \n            \n            \n                \nformatCategoryDescription(category: IssueCategory)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-list.component.ts:93\n                \n            \n\n\n            \n                \n                    Determines issue description depending on the given categiry.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                            IssueCategory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe given issue category.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Issue description.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatCategoryIcon\n                        \n                    \n                \n            \n            \n                \nformatCategoryIcon(issue: Issue)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-list.component.ts:77\n                \n            \n\n\n            \n                \n                    Determines issue icon depending on the given category.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    issue\n                                    \n                                            Issue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe given issue.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Issue icon id.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getQueryParamFilter\n                        \n                    \n                \n            \n            \n                \n                    \n                    getQueryParamFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-list.component.ts:163\n                \n            \n\n\n            \n                \n                    Gets the query param filter.\nIf it is set, the issue list shows only issues that match the given keyword.\nOtherwise all issues are displayed.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAddClick\n                        \n                    \n                \n            \n            \n                \nonAddClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-list.component.ts:245\n                \n            \n\n\n            \n                \n                    Opens a Create Issue dialog.\nAlso selects components and locations depending from which\nComponent / Interface page the Create Issue dialog was initiated.\nex. Interface I1 with Prvider Component C1 lead to an Interface Issue\nwith components: Component C1 and locations: Component C1, Interface I1\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        prepareIssueArray\n                        \n                    \n                \n            \n            \n                \n                    \n                    prepareIssueArray()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-list.component.ts:207\n                \n            \n\n\n            \n                \n                    Prepares the issue array for the filter function.\nFor each issue a search string is defined.\nThe search string contains assignees, labels, and the author.\nThe filter funcion can search inside the string for keywords matching the given search string.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        allLabelsList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ListId\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        canCreateNewIssue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columnsToDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['title', 'author', 'assignees', 'labels', 'category']\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        component$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataNode\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        componentInterface$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataNode\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        componentInterfaceProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NodeId\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        componentInterfaceSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        componentSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatTableDataSource\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        list$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataList\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginator)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(QueryComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        queryParamFilter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchIssuesDataArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSort\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatSort)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:58\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Subscription} from 'rxjs';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort, MatSortable} from '@angular/material/sort';\nimport {CreateIssueDialogComponent} from '@app/dialogs/create-issue-dialog/create-issue-dialog.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {FormControl} from '@angular/forms';\nimport DataService from '@app/data-dgql';\nimport {ListId, ListType, NodeId, NodeType} from '@app/data-dgql/id';\nimport {DataList, DataNode} from '@app/data-dgql/query';\nimport {\n  Component as IComponent,\n  ComponentInterface,\n  Issue,\n  IssueCategory,\n  IssueFilter\n} from '../../generated/graphql-dgql';\nimport {QueryComponent} from '@app/utils/query-component/query.component';\n\n/**\n * This component shows all issues for a given component / interface.\n * It lets the user 1) filter through all the issues,\n * 2) create new issues and also 3) sort all issues in a separate table view.\n */\n@Component({\n  selector: 'app-issue-list',\n  templateUrl: './issue-list.component.html',\n  styleUrls: ['./issue-list.component.scss']\n})\nexport class IssueListComponent implements OnInit, AfterViewInit, OnDestroy {\n  @Input() listId: ListId;\n  @Input() projectId: string;\n  public queryParamFilter = '';\n  public list$?: DataList;\n\n  // component that is observed\n  public component$?: DataNode;\n  private componentSub?: Subscription;\n\n  // interface that is observed\n  public componentInterface$?: DataNode;\n  private componentInterfaceSub?: Subscription;\n\n  // provider of the interface that is observed\n  public componentInterfaceProvider: NodeId;\n\n  // determines whether one can create new issues from a given component / interface page\n  // FIXME remove and use proper logic instead\n  public canCreateNewIssue = false;\n\n  public allLabelsList: ListId;\n\n  dataSource: MatTableDataSource;\n  columnsToDisplay = ['title', 'author', 'assignees', 'labels', 'category'];\n  searchIssuesDataArray: any;\n  validationFilter = new FormControl('');\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(QueryComponent) query: QueryComponent;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private dialog: MatDialog,\n    private router: Router,\n    private dataService: DataService\n  ) {\n  }\n\n  /**\n   * Determines issue icon depending on the given category.\n   * @param issue - The given issue.\n   * @returns Issue icon id.\n   */\n  formatCategoryIcon(issue: Issue): string {\n    switch (issue.category) {\n      case IssueCategory.Bug:\n        return issue.isOpen ? 'issue-bug' : 'issue-bug-closed';\n      case IssueCategory.FeatureRequest:\n        return issue.isOpen ? 'issue-feature' : 'issue-feature-closed';\n      case IssueCategory.Unclassified:\n        return issue.isOpen ? 'issue-uncategorized' : 'issue-uncategorized-closed';\n    }\n  }\n\n  /**\n   * Determines issue description depending on the given categiry.\n   * @param category - The given issue category.\n   * @returns Issue description.\n   */\n  formatCategoryDescription(category: IssueCategory): string {\n    switch (category) {\n      case IssueCategory.Bug:\n        return 'Bug';\n      case IssueCategory.FeatureRequest:\n        return 'Feature request';\n      case IssueCategory.Unclassified:\n        return 'Unclassified';\n    }\n  }\n\n  ngOnInit(): void {\n\n    this.allLabelsList = {\n      node: this.listId.node,\n      type: ListType.Labels\n    };\n\n    if (this.listId.node.type === NodeType.Component) {\n      this.canCreateNewIssue = true;\n      this.component$ = this.dataService.getNode(this.listId.node);\n      this.componentSub = this.component$.subscribe();\n    } else if (this.listId.node.type === NodeType.ComponentInterface) {\n      this.canCreateNewIssue = true;\n      this.componentInterface$ = this.dataService.getNode(this.listId.node);\n      this.componentInterfaceSub = this.componentInterface$.subscribe();\n\n      this.componentInterface$.dataAsPromise().then(data => {\n        this.componentInterfaceProvider = {type: NodeType.Component, id: data.component.id};\n      });\n    }\n\n    // FIXME: a hack to fix the labels list on interfaces\n    if (this.listId.node.type === NodeType.ComponentInterface) {\n      const interfaceNode = this.dataService.getNode(this.listId.node);\n      interfaceNode.dataAsPromise().then(data => {\n        this.allLabelsList = {\n          node: {type: NodeType.Component, id: data.component.id},\n          type: ListType.Labels\n        };\n      });\n    }\n\n    this.list$ = this.dataService.getList(this.listId);\n    this.list$.count = 25;\n  }\n\n  ngAfterViewInit() {\n    this.query.listenTo(this.list$, data => {\n      this.dataSource = new MatTableDataSource(data ? [...data.values()] : []);\n      this.sort.sort(({id: 'category', start: 'asc'}) as MatSortable);\n      this.dataSource.sort = this.sort;\n      // FIXME use bespoke pagination/sorting/filtering\n      // this.dataSource.paginator = this.paginator;\n      this.dataSource.filter = this.getQueryParamFilter();\n      this.validationFilter.setValue(this.getQueryParamFilter());\n      this.prepareIssueArray();\n    });\n  }\n\n  ngOnDestroy() {\n    this.componentSub?.unsubscribe();\n    this.componentInterfaceSub?.unsubscribe();\n  }\n\n  /**\n   * Gets the query param filter.\n   * If it is set, the issue list shows only issues that match the given keyword.\n   * Otherwise all issues are displayed.\n   */\n  private getQueryParamFilter(): string {\n    let returnedFilter = '';\n    this.activatedRoute.queryParams.subscribe(\n      params => {\n\n        // case: query param filter is set\n        // => shows only matching issues\n        if (params.filter) {\n          this.queryParamFilter = params.filter;\n          returnedFilter = params.filter;\n        }\n\n          // case: query param filter is not set\n        // => shows all issues\n        else {\n          returnedFilter = '';\n        }\n      });\n    return returnedFilter;\n  }\n\n  /**\n   * Applies a given filter.\n   * @param filter - Given filter to be applied.\n   */\n  applyFilter(filter: IssueFilter) {\n    this.list$.filter = filter;\n  }\n\n  /**\n   * Gets activated when an issue is clicked.\n   * Navigates the user to the corresponding issue page.\n   * @param row - Issue that is clicked.\n   */\n  clickedOnRow(row: any) {\n    this.router.navigate(['/projects', this.projectId, 'issues', row.id]);\n  }\n\n  /**\n   * Prepares the issue array for the filter function.\n   * For each issue a search string is defined.\n   * The search string contains assignees, labels, and the author.\n   * The filter funcion can search inside the string for keywords matching the given search string.\n   */\n  private prepareIssueArray() {\n\n    // FIXME use API search\n    if (!this.list$.hasData) {\n      return;\n    }\n    this.searchIssuesDataArray = [...this.list$.current.values()];\n    for (const issue of this.searchIssuesDataArray) {\n      let additionalSearchString = '';\n      issue.assigneesString = '';\n      issue.labelsString = '';\n\n      // adds all assignees\n      for (const assignee of issue.assignees.nodes) {\n        additionalSearchString += ' ' + assignee.displayName;\n        issue.assigneesString += ' ' + assignee.displayName;\n      }\n\n      // adds all labels\n      for (const label of issue.labels.nodes) {\n        additionalSearchString += ' ' + label.name;\n        issue.labelsString += ' ' + label.name;\n      }\n\n      // adds the author\n      additionalSearchString += ' ' + issue.createdBy.displayName;\n\n      issue.search = additionalSearchString;\n    }\n  }\n\n  /**\n   * Opens a Create Issue dialog.\n   * Also selects components and locations depending from which\n   * Component / Interface page the Create Issue dialog was initiated.\n   * ex. Interface I1 with Prvider Component C1 lead to an Interface Issue\n   * with components: Component C1 and locations: Component C1, Interface I1\n   */\n  onAddClick() {\n\n    // FIXME move functionality so that the component can be reusable as a list\n\n    // case: node is a component\n    if (this.listId.node.type === NodeType.Component) {\n      this.dialog.open(CreateIssueDialogComponent,\n        {\n          data: {\n            projectId: this.projectId,\n            components: [this.component$.id]\n          },\n          width: '600px'\n        });\n    }\n\n    // case: node is an interface\n    else if (this.listId.node.type === NodeType.ComponentInterface) {\n      this.dialog.open(CreateIssueDialogComponent,\n        {\n          data: {\n            projectId: this.projectId,\n            components: [this.componentInterfaceProvider],\n            locations: [this.componentInterface$.id]\n          },\n          width: '600px'\n        });\n    }\n  }\n\n}\n\n\n    \n\n    \n        \n\n  \n    \n      \n      \n      \n\n      \n      \n        \n          Create issue\n        \n      \n\n      \n      \n        \n\n          \n          \n            Title\n            \n             {{element.title}} \n          \n\n          \n          \n            Author\n            \n             {{element.createdBy.displayName}} \n          \n\n          \n          \n            Assignees\n            \n             {{element.assigneesString}} \n          \n\n          \n          \n            Labels\n            \n            \n              \n                \n              \n            \n          \n\n          \n          \n            Category\n            \n            \n              \n                \n                \n                {{this.formatCategoryDescription(element.category)}}\n              \n            \n          \n          \n          \n        \n      \n      \n      \n      \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./issue-list.component.scss\n                \n                .mat-row:hover {\n  box-shadow: inset 0 0 43px -17px rgba(201, 195, 201, 1);\n  cursor: pointer;\n}\n\n.table-container {\n  overflow: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      Create issue                                                                  Title                         {{element.title}}                                           Author                         {{element.createdBy.displayName}}                                           Assignees                         {{element.assigneesString}}                                           Labels                                                                                                                          Category                                                                                      {{this.formatCategoryDescription(element.category)}}                                                                                              '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueLocationComponent.html":{"url":"components/IssueLocationComponent.html","title":"component - IssueLocationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueLocationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/issue-location/issue-location.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays an issue location.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-location\n            \n\n            \n                styleUrls\n                ./issue-location.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-location.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToLocationDetails\n                            \n                            \n                                isComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                location\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/issue-location/issue-location.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        location\n                    \n                \n                \n                    \n                        Type :     IssueLocation\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-location/issue-location.component.ts:17\n                            \n                        \n                \n                    \n                        The location object that will be displayed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-location/issue-location.component.ts:15\n                            \n                        \n                \n                    \n                        The raw project ID.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToLocationDetails\n                        \n                    \n                \n            \n            \n                \ngoToLocationDetails()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/issue-location/issue-location.component.ts:28\n                \n            \n\n\n            \n                \n                    Navigates to the location's detail page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isComponent\n                        \n                    \n                \n            \n            \n                \nisComponent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/issue-location/issue-location.component.ts:23\n                \n            \n\n\n            \n                \n                    Returns true if the location refers to a component.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {IssueLocation} from '../../../generated/graphql-dgql';\n\n/**\n * Displays an issue location.\n */\n@Component({\n  selector: 'app-issue-location',\n  styleUrls: ['./issue-location.component.scss'],\n  templateUrl: './issue-location.component.html'\n})\nexport class IssueLocationComponent {\n  /** The raw project ID. */\n  @Input() projectId: string;\n  /** The location object that will be displayed. */\n  @Input() location: IssueLocation;\n\n  constructor(private router: Router) {\n  }\n\n  /** Returns true if the location refers to a component. */\n  isComponent(): boolean {\n    return (this.location as any).__typename === 'Component';\n  }\n\n  /** Navigates to the location's detail page. */\n  goToLocationDetails(): void {\n    if (this.isComponent()) {\n      this.router.navigate(['projects', this.projectId, 'component', this.location.id]);\n    } else {\n      this.router.navigate(['projects', this.projectId, 'interface', this.location.id]);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{location.name}}\n    \n  \n\n\n\n  \n    \n    \n      {{location.name}}\n    \n  \n\n\n    \n\n    \n                \n                    ./issue-location.component.scss\n                \n                .dot {\n  height: 10px;\n  width: 10px;\n  background-color: black;\n  border-radius: 50%;\n  display: inline-block;\n}\n\n.interface-box {\n  background-color: rgb(0, 0, 0, 0.1);\n  border-radius: 5px;\n  text-align: center;\n  margin: 2px;\n  padding: 2px 4px 2px 4px;\n}\n\n.component-box {\n  background-color: rgb(9, 109, 217, 0.5);\n  border-color: black;\n  border-width: 2px;\n  border-style: solid;\n  border-radius: 5px 5px 5px 5px;\n  text-align: center;\n  margin: 2px;\n}\n\n.component-text {\n  font-size: 11pt;\n  font-family: 'Arial Narrow', Arial, sans-serif;\n  color: black;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{location.name}}                      {{location.name}}      '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueLocationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IssueNode.html":{"url":"interfaces/IssueNode.html","title":"interface - IssueNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IssueNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/issue-graph-nodes.ts\n        \n\n\n            \n                Description\n            \n            \n                This file includes type definitions and creation functions (think constructors)\nfor nodes and edges that are added to the graph editor in order to visualize the project.\nSince the data that is stored with these differs based on what they represent (e.g.\ninterface vs component node) we give each their own type. We do this by extending\nthe Node class or the Edge class of the grapheditor. These classes are instantiated\nvia calls to the contained create* functions within the drawGraph method of the IssueGraphComponent.\n\n            \n\n            \n                Extends\n            \n            \n                    Node\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            issueGroupContainer\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issueGroupContainer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issueGroupContainer:         IssueGroupContainerNode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IssueGroupContainerNode\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {GraphComponent, GraphInterface} from '@app/data/issue-graph/graph-data';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\n\nexport {\n  IssueNode, ComponentNode, InterfaceNode, IssueGroupContainerNode, RelationEdge,\n  createComponentNode, createInterfaceNode, createIssueGroupContainerNode, createIssueFolderNode,\n  createRelationEdge, createConsumptionEdge, createInterfaceProvisionEdge,\n  Position,\n  getIssueFolderId\n};\n\nexport enum NodeType {\n  Component = 'component',\n  Interface = 'interface',\n  InterfaceConsumer = 'interface-connect',\n  IssueGroupContainer = 'issue-group-container'\n}\n\n/**\n * This file includes type definitions and creation functions (think constructors)\n * for nodes and edges that are added to the graph editor in order to visualize the project.\n * Since the data that is stored with these differs based on what they represent (e.g.\n * interface vs component node) we give each their own type. We do this by extending\n * the Node class or the Edge class of the grapheditor. These classes are instantiated\n * via calls to the contained create* functions within the drawGraph method of the IssueGraphComponent.\n */\n\ninterface IssueNode extends Node {\n  id: string;\n  title: string;\n  issueGroupContainer?: IssueGroupContainerNode;\n}\n\ninterface ComponentNode extends IssueNode {\n  data: GraphComponent;\n}\n\nfunction createComponentNode(component: GraphComponent, position: Position): ComponentNode {\n  return {\n    ...(position || zeroPosition),\n    id: component.id,\n    title: component.name,\n    type: NodeType.Component,\n    data: component\n  };\n}\n\ninterface InterfaceNode extends IssueNode {\n  offeredById: string;\n}\n\nfunction createInterfaceNode(intrface: GraphInterface, position: Position): InterfaceNode {\n  return {\n    ...(position || zeroPosition),\n    id: intrface.id,\n    title: intrface.name,\n    type: NodeType.Interface,\n    offeredById: intrface.offeredBy,\n  };\n}\n\ninterface IssueGroupContainerNode extends Node {\n  position: string;\n  issueGroupNodeIds: Set;\n}\n\nfunction createIssueGroupContainerNode(node: IssueNode): IssueGroupContainerNode {\n  return {\n    id: `${node.id}__issue-group-container`,\n    type: NodeType.IssueGroupContainer,\n    dynamicTemplate: 'issue-group-container',\n    x: 0,\n    y: 0,\n    position: 'bottom',\n    issueGroupNodeIds: new Set(),\n  };\n}\n\ninterface IssueFolderNode extends Node {\n  type: IssueCategory;\n  issueCount: string;\n}\n\nfunction createIssueFolderNode(node: IssueNode, issueCategory: IssueCategory, issueCount: string): IssueFolderNode {\n  return {\n    id: getIssueFolderId(node.id, issueCategory),\n    type: issueCategory,\n    x: 0,\n    y: 0,\n    issues: new Set(),\n    issueCount\n  };\n}\n\ninterface RelationEdge extends Edge {\n  sourceIssues: Set;\n}\n\nfunction createRelationEdge(sourceId: string, targetId: string, edgeType = folderEdgeTypes.RelatedTo): RelationEdge {\n  return {\n    id: `s${sourceId}t${targetId}r${edgeType}`,\n    source: sourceId,\n    target: targetId,\n    type: folderEdgeTypes.RelatedTo,\n    markerEnd: {\n      template: 'arrow',\n      relativeRotation: 0,\n    },\n    dragHandles: [],\n    sourceIssues: new Set()\n  };\n}\n\nfunction createConsumptionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.InterfaceConsumer,\n    markerEnd: {\n      template: 'interface-connector',\n      relativeRotation: 0,\n    },\n  };\n}\n\nfunction createInterfaceProvisionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.Interface,\n    dragHandles: [],\n  };\n}\n\nfunction getIssueFolderId(id: string, issueCategory: IssueCategory): string {\n  return `${id}__${issueCategory}`;\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst zeroPosition = {x: 0, y: 0};\n\nenum folderEdgeTypes {\n  RelatedTo = 'relatedTo',\n  Depends = 'dependency',\n  Duplicates = 'duplicate'\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IssueStoreService.html":{"url":"injectables/IssueStoreService.html","title":"injectable - IssueStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IssueStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/issue/issue-store.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service provides CRUD operations and linking for issues\nThe code for the mutations are automaticly generated by a code generator for the GraphQL schema\nbased on the definitions in the issue.graphql file in the same folder\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToLocation\n                            \n                            \n                                changeIssueCategory\n                            \n                            \n                                close\n                            \n                            \n                                commentIssue\n                            \n                            \n                                create\n                            \n                            \n                                deleteComment\n                            \n                            \n                                getAllTimelineItems\n                            \n                            \n                                getFullIssue\n                            \n                            \n                                link\n                            \n                            \n                                removeFromLocation\n                            \n                            \n                                rename\n                            \n                            \n                                reopen\n                            \n                            \n                                unlink\n                            \n                            \n                                updateComment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createIssue: CreateIssueGQL, linkIssue: LinkIssueGQL, getFullIssueQuery: GetIssueGQL, commentIssueMutation: CommentIssueGQL, deleteIssueCommentMutation: DeleteIssueCommentGQL, unlinkIssueMutation: UnlinkIssueGQL, closeIssueMutation: CloseIssueGQL, reopenIssueMutation: ReopenIssueGQL, renameIssueMutation: RenameIssueTitleGQL, changeIssueCategoryMutation: ChangeIssueCategoryGQL, addIssueToLocationMutation: AddIssueToLocationGQL, removeIssueFromLocationMutation: RemoveIssueFromLocationGQL, updateCommentMutation: UpdateCommentGQL, getAllTimelineItemsQuery: GetAllTimelineItemsGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/issue/issue-store.service.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createIssue\n                                                  \n                                                        \n                                                                    CreateIssueGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        linkIssue\n                                                  \n                                                        \n                                                                    LinkIssueGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getFullIssueQuery\n                                                  \n                                                        \n                                                                    GetIssueGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commentIssueMutation\n                                                  \n                                                        \n                                                                    CommentIssueGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deleteIssueCommentMutation\n                                                  \n                                                        \n                                                                    DeleteIssueCommentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        unlinkIssueMutation\n                                                  \n                                                        \n                                                                    UnlinkIssueGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        closeIssueMutation\n                                                  \n                                                        \n                                                                    CloseIssueGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reopenIssueMutation\n                                                  \n                                                        \n                                                                    ReopenIssueGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renameIssueMutation\n                                                  \n                                                        \n                                                                    RenameIssueTitleGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeIssueCategoryMutation\n                                                  \n                                                        \n                                                                    ChangeIssueCategoryGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addIssueToLocationMutation\n                                                  \n                                                        \n                                                                    AddIssueToLocationGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        removeIssueFromLocationMutation\n                                                  \n                                                        \n                                                                    RemoveIssueFromLocationGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateCommentMutation\n                                                  \n                                                        \n                                                                    UpdateCommentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getAllTimelineItemsQuery\n                                                  \n                                                        \n                                                                    GetAllTimelineItemsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToLocation\n                        \n                    \n                \n            \n            \n                \naddToLocation(addLocationInput: AddIssueToLocationInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    addLocationInput\n                                    \n                                            AddIssueToLocationInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeIssueCategory\n                        \n                    \n                \n            \n            \n                \nchangeIssueCategory(changeIssueCategoryInput: ChangeIssueCategoryInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changeIssueCategoryInput\n                                    \n                                            ChangeIssueCategoryInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose(closeInput: CloseIssueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    closeInput\n                                    \n                                            CloseIssueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        commentIssue\n                        \n                    \n                \n            \n            \n                \ncommentIssue(commentIssueInput: AddIssueCommentInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    commentIssueInput\n                                    \n                                            AddIssueCommentInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(issueInput: CreateIssueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    issueInput\n                                    \n                                            CreateIssueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteComment\n                        \n                    \n                \n            \n            \n                \ndeleteComment(deleteIssueCommentInput: DeleteIssueCommentInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deleteIssueCommentInput\n                                    \n                                            DeleteIssueCommentInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllTimelineItems\n                        \n                    \n                \n            \n            \n                \ngetAllTimelineItems(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFullIssue\n                        \n                    \n                \n            \n            \n                \ngetFullIssue(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        link\n                        \n                    \n                \n            \n            \n                \nlink(linkIssueInput: LinkIssueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    linkIssueInput\n                                    \n                                            LinkIssueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFromLocation\n                        \n                    \n                \n            \n            \n                \nremoveFromLocation(removeLocationInput: RemoveIssueFromLocationInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    removeLocationInput\n                                    \n                                            RemoveIssueFromLocationInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rename\n                        \n                    \n                \n            \n            \n                \nrename(renameInput: RenameIssueTitleInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    renameInput\n                                    \n                                            RenameIssueTitleInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reopen\n                        \n                    \n                \n            \n            \n                \nreopen(reopenInput: ReopenIssueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reopenInput\n                                    \n                                            ReopenIssueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unlink\n                        \n                    \n                \n            \n            \n                \nunlink(unlinkIssueInput: UnlinkIssueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    unlinkIssueInput\n                                    \n                                            UnlinkIssueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateComment\n                        \n                    \n                \n            \n            \n                \nupdateComment(updateCommentInput: UpdateCommentInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateCommentInput\n                                    \n                                            UpdateCommentInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport {\n  AddIssueCommentInput,\n  CloseIssueGQL,\n  CommentIssueGQL,\n  CreateIssueGQL,\n  CreateIssueInput,\n  GetIssueGQL,\n  GetIssueQuery,\n  LinkIssueGQL,\n  LinkIssueInput,\n  UnlinkIssueGQL,\n  CloseIssueInput,\n  UnlinkIssueInput,\n  ReopenIssueGQL,\n  ReopenIssueInput,\n  RenameIssueTitleInput,\n  RenameIssueTitleGQL,\n  AddIssueToLocationInput,\n  RemoveIssueFromLocationInput,\n  AddIssueToLocationGQL,\n  RemoveIssueFromLocationGQL,\n  DeleteIssueCommentInput,\n  DeleteIssueCommentGQL,\n  UpdateCommentInput,\n  UpdateCommentGQL,\n  GetAllTimelineItemsGQL,\n  GetAllTimelineItemsQuery,\n  ChangeIssueCategoryGQL,\n  ChangeIssueCategoryInput\n} from 'src/generated/graphql';\nimport { Observable } from 'rxjs';\n/**\n * This service provides CRUD operations and linking for issues\n * The code for the mutations are automaticly generated by a code generator for the GraphQL schema\n * based on the definitions in the issue.graphql file in the same folder\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class IssueStoreService {\n\n  constructor(private createIssue: CreateIssueGQL, private linkIssue: LinkIssueGQL, private getFullIssueQuery: GetIssueGQL,\n              private commentIssueMutation: CommentIssueGQL, private deleteIssueCommentMutation: DeleteIssueCommentGQL,\n              private unlinkIssueMutation: UnlinkIssueGQL,\n              private closeIssueMutation: CloseIssueGQL, private reopenIssueMutation: ReopenIssueGQL,\n              private renameIssueMutation: RenameIssueTitleGQL, \n              private changeIssueCategoryMutation: ChangeIssueCategoryGQL,\n              private addIssueToLocationMutation: AddIssueToLocationGQL,\n              private removeIssueFromLocationMutation: RemoveIssueFromLocationGQL,\n              private updateCommentMutation: UpdateCommentGQL,\n              private getAllTimelineItemsQuery: GetAllTimelineItemsGQL) {\n  }\n\n  create(issueInput: CreateIssueInput) {\n    return this.createIssue.mutate({input: issueInput});\n  }\n\n  link(linkIssueInput: LinkIssueInput) {\n    return this.linkIssue.mutate({input: linkIssueInput});\n  }\n\n  unlink(unlinkIssueInput: UnlinkIssueInput) {\n    return this.unlinkIssueMutation.mutate({input: unlinkIssueInput});\n  }\n\n  commentIssue(commentIssueInput: AddIssueCommentInput) {\n    return this.commentIssueMutation.mutate({input: commentIssueInput});\n  }\n\n  deleteComment(deleteIssueCommentInput: DeleteIssueCommentInput) {\n    return this.deleteIssueCommentMutation.mutate({input: deleteIssueCommentInput});\n  }\n\n  close(closeInput: CloseIssueInput) {\n    return this.closeIssueMutation.mutate({input: closeInput});\n  }\n\n  reopen(reopenInput: ReopenIssueInput) {\n    return this.reopenIssueMutation.mutate({input: reopenInput});\n  }\n\n  rename(renameInput: RenameIssueTitleInput) {\n    return this.renameIssueMutation.mutate({input: renameInput});\n  }\n\n  changeIssueCategory(changeIssueCategoryInput: ChangeIssueCategoryInput) {\n    return this.changeIssueCategoryMutation.mutate({input: changeIssueCategoryInput});\n  }\n\n  addToLocation(addLocationInput: AddIssueToLocationInput) {\n    return this.addIssueToLocationMutation.mutate({input: addLocationInput});\n  }\n\n  removeFromLocation(removeLocationInput: RemoveIssueFromLocationInput) {\n    return this.removeIssueFromLocationMutation.mutate({input: removeLocationInput});\n  }\n\n  updateComment(updateCommentInput: UpdateCommentInput) {\n    return this.updateCommentMutation.mutate({input: updateCommentInput});\n  }\n\n  getFullIssue(id: string): Observable {\n    return this.getFullIssueQuery.fetch({id}).pipe(\n      map(({data}) => data)\n    );\n  }\n\n  getAllTimelineItems(id: string): Observable{\n    return this.getAllTimelineItemsQuery.fetch({input: id}).pipe(\n      map(({data}) => data)\n    );\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ItemDirective.html":{"url":"directives/ItemDirective.html","title":"directive - ItemDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ItemDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/item.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Used in various components as an Angular structural directive to define item templates.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appItem]\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\n\n/** Used in various components as an Angular structural directive to define item templates. */\n@Directive({\n  selector: '[appItem]'\n})\nexport class ItemDirective {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LabelSearchComponent.html":{"url":"components/LabelSearchComponent.html","title":"component - LabelSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LabelSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/graphs/label-search/label-search.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is responsible for the display of the search bar above the graph.\nIt allows for filtering issues by multiple labels and text fragments.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-label-search\n            \n\n            \n                styleUrls\n                ./label-search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./label-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                filterSelection$\n                            \n                            \n                                labels$\n                            \n                            \n                                labelsInput$\n                            \n                            \n                                labelsLoading\n                            \n                            \n                                selectedLabels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitSelectedLabels\n                            \n                            \n                                    Private\n                                loadLabels\n                            \n                            \n                                trackByFn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(labelStore: LabelStoreService, ss: StateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/graphs/label-search/label-search.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        labelStore\n                                                  \n                                                        \n                                                                        LabelStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ss\n                                                  \n                                                        \n                                                                        StateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        emitSelectedLabels\n                        \n                    \n                \n            \n            \n                \nemitSelectedLabels()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/label-search/label-search.component.ts:38\n                \n            \n\n\n            \n                \n                    Emit value representing label and text fragments in the search bar via this.filterSelection$\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        loadLabels\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLabels()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/label-search/label-search.component.ts:49\n                \n            \n\n\n            \n                \n                    Load all labels from backend that match the currently typed in ng-select element\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByFn\n                        \n                    \n                \n            \n            \n                \ntrackByFn(item: FilterLabel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/label-search/label-search.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                FilterLabel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        filterSelection$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject({labels: [], texts: []})\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/label-search/label-search.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labels$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/label-search/label-search.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelsInput$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/label-search/label-search.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelsLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/label-search/label-search.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedLabels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterElement[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/label-search/label-search.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { concat, of, Subject, Observable, BehaviorSubject } from 'rxjs';\nimport { catchError, distinctUntilChanged, switchMap, tap } from 'rxjs/operators';\nimport { FilterLabel, isFilterLabel, LabelStoreService } from '../../data/label/label-store.service';\nimport { StateService } from '../../state.service';\n\n/**\n * This component is responsible for the display of the search bar above the graph.\n * It allows for filtering issues by multiple labels and text fragments.\n */\n@Component({\n  selector: 'app-label-search',\n  templateUrl: './label-search.component.html',\n  styleUrls: ['./label-search.component.scss']\n})\nexport class LabelSearchComponent implements OnInit {\n  public filterSelection$ = new BehaviorSubject({labels: [], texts: []});\n\n  labels$: Observable;\n  labelsLoading = false;\n  labelsInput$ = new Subject();\n  selectedLabels: FilterElement[] = [];\n\n  constructor(private labelStore: LabelStoreService, private ss: StateService) {\n  }\n\n  ngOnInit() {\n      this.loadLabels();\n  }\n\n  trackByFn(item: FilterLabel) {\n      return item.id;\n  }\n\n  /**\n   * Emit value representing label and text fragments in the search bar via this.filterSelection$\n   */\n  emitSelectedLabels() {\n    const selection: FilterSelection = {texts: [], labels: []};\n    // find out which elements in search bar correspond to an existing label on the backend and which to a text fragment\n    selection.texts = this.selectedLabels.filter(item => !isFilterLabel(item)).map(item => item.name);\n    selection.labels = this.selectedLabels.filter(label => isFilterLabel(label)) as FilterLabel[];\n    this.filterSelection$.next(selection);\n  }\n\n  /**\n   * Load all labels from backend that match the currently typed in ng-select element\n   */\n  private loadLabels() {\n      this.labels$ = concat(\n          of([]), // default items\n          this.labelsInput$.pipe(\n              distinctUntilChanged(),\n              tap(() => this.labelsLoading = true),\n              switchMap(term => this.labelStore.getMatchingLabels(this.ss.state.project.node.id, term).pipe(\n                  catchError(() => of([])), // empty list on error\n                  tap(() => this.labelsLoading = false)\n              ))\n          )\n      );\n  }\n\n}\n\n\n/**\n * The bar can contain elements standing for labels and elements for text fragments.\n */\ntype FilterElement = TextFragment | FilterLabel;\n\ninterface TextFragment {\n  name: string;\n}\n\nexport interface FilterSelection {\n  texts: string[];\n  labels: FilterLabel[];\n}\n\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./label-search.component.scss\n                \n                .ng-select.label-select ::ng-deep .ng-select-container {\n  min-height: 0;\n}\n\n.ng-select.label-select ::ng-deep .ng-value-container {\n  border-top: 7px solid transparent;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'LabelSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LabelStoreService.html":{"url":"injectables/LabelStoreService.html","title":"injectable - LabelStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LabelStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/label/label-store.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAllFilter\n                            \n                            \n                                getMatchingLabels\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(getLabelsGQL: GetLabelsGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/label/label-store.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        getLabelsGQL\n                                                  \n                                                        \n                                                                    GetLabelsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getAllFilter\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllFilter(projectId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/label/label-store.service.ts:36\n                \n            \n\n\n            \n                \n                    Retrieve all labels from backend\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id of current project\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMatchingLabels\n                        \n                    \n                \n            \n            \n                \ngetMatchingLabels(projectId: string, term: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/label/label-store.service.ts:23\n                \n            \n\n\n            \n                \n                    Retrieve labels matching term.\nwhoose name contains term\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        id of current project\n\n                                    \n                                \n                                \n                                    term\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        coming from search bar above graph\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable emitting objects standing for labels that exist on backend\nwhoose name contains term\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {map} from 'rxjs/operators';\nimport {\n  GetLabelsGQL,\n  Label,\n} from '../../../generated/graphql';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LabelStoreService {\n\n  constructor(private getLabelsGQL: GetLabelsGQL) {}\n\n  /**\n   * Retrieve labels matching term.\n   * @param projectId id of current project\n   * @param term coming from search bar above graph\n   * @returns observable emitting objects standing for labels that exist on backend\n   * whoose name contains term\n   */\n  getMatchingLabels(projectId: string, term: string = null): Observable {\n    if (!term) {\n      return this.getAllFilter(projectId);\n    }\n    return this.getAllFilter(projectId).pipe(\n      map(items => items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1))\n    );\n  }\n\n  /**\n   * Retrieve all labels from backend\n   * @param projectId id of current project\n   */\n  private getAllFilter(projectId: string): Observable {\n    return this.getLabelsGQL.fetch({projectId}).pipe(\n      map(({data}) => data.node.labels.nodes)\n    );\n  }\n}\n\nexport type FilterLabel = Pick;\n\nexport function isFilterLabel(label: any) {\n  return 'id' in label && 'name' in label && 'color' in label;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LayoutNode.html":{"url":"classes/LayoutNode.html","title":"class - LayoutNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LayoutNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/automatic-layout.ts\n        \n\n\n            \n                Description\n            \n            \n                This class is an abstract representation of a node in a graph\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                connectedTo\n                            \n                            \n                                    Public\n                                fixed\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Static\n                                    Readonly\n                                MAX_DISTANCE_CONNECTED\n                            \n                            \n                                    Static\n                                    Readonly\n                                MIN_DISTANCE_CONNECTED\n                            \n                            \n                                    Static\n                                    Readonly\n                                MIN_DISTANCE_EDGE\n                            \n                            \n                                    Static\n                                    Readonly\n                                MIN_DISTANCE_NOT_CONNECTED\n                            \n                            \n                                    Readonly\n                                padding\n                            \n                            \n                                    Static\n                                    Readonly\n                                PADDING_COMPONENT\n                            \n                            \n                                    Static\n                                    Readonly\n                                PADDING_INTERFACE\n                            \n                            \n                                    Public\n                                position\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                calculateMovement\n                            \n                            \n                                    Public\n                                connectTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string | number, positionX: number, positionY: number, nodeType: NodeType)\n                    \n                \n                        \n                            \n                                Defined in src/app/graphs/automatic-layout.ts:173\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                    string | number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        positionX\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        positionY\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nodeType\n                                                  \n                                                        \n                                                                        NodeType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        connectedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:170\n                        \n                    \n\n            \n                \n                    Set of edges this node is connected to\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fixed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:167\n                        \n                    \n\n            \n                \n                    If true, this node will not move under any circumstance\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:161\n                        \n                    \n\n            \n                \n                    Node id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        MAX_DISTANCE_CONNECTED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 80\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:146\n                        \n                    \n\n            \n                \n                    The maximum spacing between two nodes if they are connected by an edge\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        MIN_DISTANCE_CONNECTED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:149\n                        \n                    \n\n            \n                \n                    The minimum spacing between two nodes if they are connected by an edge\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        MIN_DISTANCE_EDGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 60\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:152\n                        \n                    \n\n            \n                \n                    The minimum spacing between a node and an edge\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        MIN_DISTANCE_NOT_CONNECTED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 80\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:143\n                        \n                    \n\n            \n                \n                    The minimum spacing between two nodes if they are not connected by an edge\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        padding\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:173\n                        \n                    \n\n            \n                \n                    Padding to be added to this node\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        PADDING_COMPONENT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:155\n                        \n                    \n\n            \n                \n                    The padding around a component node\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        PADDING_INTERFACE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:158\n                        \n                    \n\n            \n                \n                    The padding around an interface node\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        position\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Vector\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:164\n                        \n                    \n\n            \n                \n                    Position of this node\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        calculateMovement\n                        \n                    \n                \n            \n            \n                \n                    \n                    calculateMovement(allNodes: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:195\n                \n            \n\n\n            \n                \n                    Calculate the movement direction that this node should move in, based on all other nodes around it\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    allNodes\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        All nodes, can include this node as well\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Vector\n\n                    \n                    \n                        The direction in which this node wants to travel\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        connectTo\n                        \n                    \n                \n            \n            \n                \n                    \n                    connectTo(other: LayoutNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:186\n                \n            \n\n\n            \n                \n                    Create an edge between this node and another node.\nDoes not create a connection from the other node to this node!\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                LayoutNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The other node\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {NodeType} from '@app/graphs/issue-graph/issue-graph-nodes';\n\n/**\n * A simple 2D vector class.\n * The value of this vector is essentially immutable, every operation returns a new vector!\n */\nclass Vector {\n  public x: number;\n  public y: number;\n\n  /**\n   * Vector constructor\n   * @param x X component, 0 by default\n   * @param y Y component, 0 by default\n   */\n  constructor(x: number = 0, y: number = 0) {\n    this.x = x;\n    this.y = y;\n  }\n\n  /**\n   * Check if the vector pointing from `source` to `point` is pointing away more than 90 degrees to the vector pointing\n   * from the `source` to the `target`.\n   * @param source The source point, as a vector\n   * @param target The target point, as a vector\n   * @param point The point to check, as a vector\n   * @return dot(target - source, point - source)  = new Set();\n\n  /** Padding to be added to this node */\n  readonly padding: number;\n\n  constructor(id: string | number, positionX: number, positionY: number, nodeType: NodeType) {\n    this.id = id;\n    this.padding = nodeType === NodeType.Component ? LayoutNode.PADDING_COMPONENT : LayoutNode.PADDING_INTERFACE;\n    this.position = new Vector(positionX, positionY);\n  }\n\n  /**\n   * Create an edge between this node and another node.\n   * Does **not** create a connection from the other node to this node!\n   * @param other The other node\n   */\n  public connectTo(other: LayoutNode): void {\n    this.connectedTo.add(other);\n  }\n\n  /**\n   * Calculate the movement direction that this node should move in, based on all other nodes around it\n   * @param allNodes All nodes, can include this node as well\n   * @returns The direction in which this node wants to travel\n   */\n  public calculateMovement(allNodes: Array): Vector {\n    if (this.fixed) {\n      return new Vector();\n    }\n\n    // Total force acting on this node\n    const result = new Vector();\n\n    // Keeps track of edges already visited\n    const otherNodesVisited = new Set();\n\n    for (const otherNode of allNodes) {\n      // Iterate over all other nodes\n      if (otherNode.id === this.id) {\n        continue;\n      }\n\n      // If both nodes are at an identical position, add a small randomized offset to this nodes position\n      let towardsOther = otherNode.position.subtract(this.position);\n      if (towardsOther.isZero()) {\n        this.position.x += Math.random() - .5;\n        this.position.y += Math.random() - .5;\n        towardsOther = otherNode.position.subtract(this.position);\n      }\n\n      const pad = this.padding + otherNode.padding;\n      const distance = Math.max(1, towardsOther.length() - pad);\n      towardsOther = towardsOther.scale(1 / distance);\n\n      // Move this node towards connected nodes, and away from non-connected nodes.\n      // Also make sure that a minimum spacing between nodes exists, regardless of connection.\n      let scale = 0;\n      if (this.connectedTo.has(otherNode)) {\n        if (distance ): void {\n  if (nodes.length === 0) {\n    return;\n  }\n\n  const directions = new Array(nodes.length);\n  // Fix an arbitrary node in place to prevent the graph from flying away\n  const firstNode = nodes[0];\n  firstNode.fixed = true;\n\n  // FIXME: This loop should stop early if no more (significant) changes happen\n  for (let v = 0; v \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LinkedIssueItemComponent.html":{"url":"components/LinkedIssueItemComponent.html","title":"component - LinkedIssueItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LinkedIssueItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-detail/linked-issue-item.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays a linked issue in a list.\nBy default, only information from #issueStub will be displayed. When the user expands\nthe accordion card, the issue's body will be loaded separately.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-detail-linked-issue-item\n            \n\n            \n                styleUrls\n                linked-issue-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                linked-issue-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fullIssueLink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                didOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                issueStub\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-detail/linked-issue-item.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        issueStub\n                    \n                \n                \n                    \n                        Type :     Issue\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/linked-issue-item.component.ts:24\n                            \n                        \n                \n                    \n                        Cursory information about the linked issue.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/linked-issue-item.component.ts:22\n                            \n                        \n                \n                    \n                        The raw project ID.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        didOpen\n                        \n                    \n                \n            \n            \n                \ndidOpen()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/linked-issue-item.component.ts:42\n                \n            \n\n\n            \n                \n                    Event handler for when the accordion is opened. Loads the full issue if it hasn't been loaded yet.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fullIssueLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/linked-issue-item.component.ts:27\n                        \n                    \n\n            \n                \n                    Link to the full issue page.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Issue } from '../../generated/graphql-dgql';\nimport { DataNode } from '@app/data-dgql/query';\nimport DataService from '@app/data-dgql';\nimport { NodeType } from '@app/data-dgql/id';\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\n\n/**\n * Displays a linked issue in a list.\n *\n * By default, only information from {@link #issueStub} will be displayed. When the user expands\n * the accordion card, the issue's body will be loaded separately.\n */\n@Component({\n  selector: 'app-issue-detail-linked-issue-item',\n  templateUrl: 'linked-issue-item.component.html',\n  styleUrls: ['linked-issue-item.component.scss']\n})\nexport class LinkedIssueItemComponent implements OnInit, OnDestroy {\n  /** The raw project ID. */\n  @Input() projectId: string;\n  /** Cursory information about the linked issue. */\n  @Input() issueStub: Issue;\n\n  /** Link to the full issue page. */\n  public fullIssueLink: string;\n  /** @ignore */\n  public fullIssue?: DataNode;\n  /** @ignore */\n  private fullIssueSub: Subscription;\n\n  constructor(private dataService: DataService, private router: Router) {}\n\n  ngOnInit() {\n    this.fullIssueLink = this.router.serializeUrl(this.router.createUrlTree(\n      ['/projects', this.projectId, 'issues', this.issueStub.id]\n    ));\n  }\n\n  /** Event handler for when the accordion is opened. Loads the full issue if it hasn't been loaded yet. */\n  didOpen() {\n    if (!this.fullIssue) {\n      this.fullIssue = this.dataService.getNode({\n        type: NodeType.Issue,\n        id: this.issueStub.id\n      });\n      this.fullIssueSub = this.fullIssue.subscribe();\n    }\n  }\n\n  ngOnDestroy() {\n    this.fullIssueSub?.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n    \n        \n            {{issueStub.title}}\n        \n        \n            {{component.name}}\n        \n    \n    \n        Loading…\n    \n    \n    \n        View Issue chevron_right\n    \n\n\n    \n\n    \n                \n                    linked-issue-item.component.scss\n                \n                .linked-issue-components {\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  .linked-issue-component {\n    &::after {\n      content: ',';\n      margin-right: 0.3em;\n    }\n    &:last-child::after {\n      content: none;\n    }\n  }\n}\n\n.body-loading {\n  min-height: 56px; // some sort of body height so that the animation doesn't glitch out *too* badly\n  text-align: center;\n  opacity: 0.7;\n}\n\n.issue-buttons {\n  text-align: right;\n  margin-top: 8px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{issueStub.title}}                            {{component.name}}                        Loading…                    View Issue chevron_right    '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'LinkedIssueItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListId.html":{"url":"interfaces/ListId.html","title":"interface - ListId","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ListId\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/id.ts\n        \n\n\n            \n                Description\n            \n            \n                Uniquely identifies a list of items.\nLists are always attached to a specific node.\nFor example, a list of issues may be attached to a project or a component.\nLists that do not have a specific parent node in the backend API are attached to the\nROOT_NODE.\nExamples\nThe list of all issues on a component:\n{ node: { type: NodeType.Component, id: '...' }, type: ListType.Issues }The list of linked issues on an issue:\n{ node: { type: NodeType.Issue, id: '...' }, type: ListType.LinkedIssues }\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            node\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        node\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        node:         NodeId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeId\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The parent node.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         ListType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ListType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of list.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export type NodeIdEnc = string;\nexport type ListIdEnc = string;\n\n/**\n * Backend API node types.\n * The names should match the respective value of `__typename` in the GraphQL data for any given node.\n */\nexport enum NodeType {\n  Root,\n  Component,\n  ComponentInterface,\n  Issue,\n  IssueTimelineItem,\n  Label,\n  Project,\n  Artifact,\n  User,\n  IssueComment\n}\n\n/**\n * Returns the NodeType for a given `__typename` value.\n * `__typename` is a tag found in GraphQL data.\n *\n * @param typename the __typename value\n */\nexport function nodeTypeFromTypename(typename: string) {\n  return NodeType[typename] || null;\n}\n\n/**\n * Uniquely identifies a node.\n *\n * Node IDs are composed of a {@link #type} and an {@link #id}.\n * The {@link #id} corresponds to the ID used in the backend API.\n */\nexport interface NodeId {\n  /**\n   * The type of this node.\n   */\n  type: NodeType;\n  /**\n   * The ID of this node. This is the same as the node ID in the backend API.\n   */\n  id: string;\n}\n\n/**\n * See {@link encodeNodeId}.\n * @param id the encoded node ID\n */\nexport function decodeNodeId(id: NodeIdEnc): NodeId {\n  if (!id) {\n    throw new Error('Could not decode node ID: no id given');\n  }\n  const parts = id.split('/');\n  return { type: NodeType[parts[0]], id: parts[1] };\n}\n\n/**\n * Encodes a {@link NodeId} into a string.\n * This is due to a limitation in Javascript where objects cannot be `==` compared with each other\n * apart from identity. Encoding them as a string allows `NodeId`s to be used as object or `Map` keys.\n *\n * @param nd the node ID\n */\nexport function encodeNodeId(nd: NodeId): NodeIdEnc {\n  return NodeType[nd.type] + '/' + nd.id;\n}\n\n/** The ID of the root node. */\nexport const ROOT_NODE = { type: NodeType.Root, id: '' };\n\n/** The special ID of the current user node. */\nexport const CURRENT_USER_NODE = { type: NodeType.User, id: 'self' };\n\n/**\n * All list types represent their respective list queries in the backend API.\n */\nexport enum ListType {\n  Projects,\n  Components,\n  ComponentInterfaces,\n  Issues,\n  IssuesOnLocation,\n  IssueLocations,\n  TimelineItems,\n  Labels,\n  Artifacts,\n  Participants,\n  Assignees,\n  SearchUsers,\n  LinkedIssues,\n  LinkedByIssues\n}\n\n/**\n * Uniquely identifies a list of items.\n *\n * Lists are always attached to a specific node.\n * For example, a list of issues may be attached to a project or a component.\n *\n * Lists that do not have a specific parent node in the backend API are attached to the\n * {@link ROOT_NODE}.\n *\n * #### Examples\n * The list of all issues on a component:\n * ```ts\n * { node: { type: NodeType.Component, id: '...' }, type: ListType.Issues }\n * ```\n *\n * The list of linked issues on an issue:\n * ```ts\n * { node: { type: NodeType.Issue, id: '...' }, type: ListType.LinkedIssues }\n * ```\n */\nexport interface ListId {\n  /**\n   * The parent node.\n   */\n  node: NodeId;\n  /**\n   * The type of list.\n   */\n  type: ListType;\n}\n\n/** List cursor and filter. */\nexport interface ListParams {\n  /** Cursor node. */\n  cursor?: NodeId;\n  /** Max number of items to load. */\n  count: number;\n  /** Whether to look forward from the cursor, or backwards. */\n  forward: boolean;\n  /** The filter. */\n  filter?: F;\n}\n\n/**\n * See {@link decodeListId}.\n * @param id an encoded List ID\n */\nexport function decodeListId(id: ListIdEnc): ListId {\n  if (!id) {\n    throw new Error('Could not decode list ID: no id given');\n  }\n  const parts = id.split('#');\n  return { node: decodeNodeId(parts[0]), type: ListType[parts[1]] };\n}\n\n/**\n * Encodes a List ID into a string.\n *\n * See {@link encodeNodeId} for more details.\n * @param ld a List ID\n */\nexport function encodeListId(ld: ListId): ListIdEnc {\n  return encodeNodeId(ld.node) + '#' + ListType[ld.type];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListParams.html":{"url":"interfaces/ListParams.html","title":"interface - ListParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ListParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/id.ts\n        \n\n\n            \n                Description\n            \n            \n                List cursor and filter.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cursor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            filter\n                                        \n                                \n                                \n                                        \n                                            forward\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Max number of items to load.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cursor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cursor:         NodeId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeId\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Cursor node.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filter:     F\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     F\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The filter.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        forward\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        forward:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether to look forward from the cursor, or backwards.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export type NodeIdEnc = string;\nexport type ListIdEnc = string;\n\n/**\n * Backend API node types.\n * The names should match the respective value of `__typename` in the GraphQL data for any given node.\n */\nexport enum NodeType {\n  Root,\n  Component,\n  ComponentInterface,\n  Issue,\n  IssueTimelineItem,\n  Label,\n  Project,\n  Artifact,\n  User,\n  IssueComment\n}\n\n/**\n * Returns the NodeType for a given `__typename` value.\n * `__typename` is a tag found in GraphQL data.\n *\n * @param typename the __typename value\n */\nexport function nodeTypeFromTypename(typename: string) {\n  return NodeType[typename] || null;\n}\n\n/**\n * Uniquely identifies a node.\n *\n * Node IDs are composed of a {@link #type} and an {@link #id}.\n * The {@link #id} corresponds to the ID used in the backend API.\n */\nexport interface NodeId {\n  /**\n   * The type of this node.\n   */\n  type: NodeType;\n  /**\n   * The ID of this node. This is the same as the node ID in the backend API.\n   */\n  id: string;\n}\n\n/**\n * See {@link encodeNodeId}.\n * @param id the encoded node ID\n */\nexport function decodeNodeId(id: NodeIdEnc): NodeId {\n  if (!id) {\n    throw new Error('Could not decode node ID: no id given');\n  }\n  const parts = id.split('/');\n  return { type: NodeType[parts[0]], id: parts[1] };\n}\n\n/**\n * Encodes a {@link NodeId} into a string.\n * This is due to a limitation in Javascript where objects cannot be `==` compared with each other\n * apart from identity. Encoding them as a string allows `NodeId`s to be used as object or `Map` keys.\n *\n * @param nd the node ID\n */\nexport function encodeNodeId(nd: NodeId): NodeIdEnc {\n  return NodeType[nd.type] + '/' + nd.id;\n}\n\n/** The ID of the root node. */\nexport const ROOT_NODE = { type: NodeType.Root, id: '' };\n\n/** The special ID of the current user node. */\nexport const CURRENT_USER_NODE = { type: NodeType.User, id: 'self' };\n\n/**\n * All list types represent their respective list queries in the backend API.\n */\nexport enum ListType {\n  Projects,\n  Components,\n  ComponentInterfaces,\n  Issues,\n  IssuesOnLocation,\n  IssueLocations,\n  TimelineItems,\n  Labels,\n  Artifacts,\n  Participants,\n  Assignees,\n  SearchUsers,\n  LinkedIssues,\n  LinkedByIssues\n}\n\n/**\n * Uniquely identifies a list of items.\n *\n * Lists are always attached to a specific node.\n * For example, a list of issues may be attached to a project or a component.\n *\n * Lists that do not have a specific parent node in the backend API are attached to the\n * {@link ROOT_NODE}.\n *\n * #### Examples\n * The list of all issues on a component:\n * ```ts\n * { node: { type: NodeType.Component, id: '...' }, type: ListType.Issues }\n * ```\n *\n * The list of linked issues on an issue:\n * ```ts\n * { node: { type: NodeType.Issue, id: '...' }, type: ListType.LinkedIssues }\n * ```\n */\nexport interface ListId {\n  /**\n   * The parent node.\n   */\n  node: NodeId;\n  /**\n   * The type of list.\n   */\n  type: ListType;\n}\n\n/** List cursor and filter. */\nexport interface ListParams {\n  /** Cursor node. */\n  cursor?: NodeId;\n  /** Max number of items to load. */\n  count: number;\n  /** Whether to look forward from the cursor, or backwards. */\n  forward: boolean;\n  /** The filter. */\n  filter?: F;\n}\n\n/**\n * See {@link decodeListId}.\n * @param id an encoded List ID\n */\nexport function decodeListId(id: ListIdEnc): ListId {\n  if (!id) {\n    throw new Error('Could not decode list ID: no id given');\n  }\n  const parts = id.split('#');\n  return { node: decodeNodeId(parts[0]), type: ListType[parts[1]] };\n}\n\n/**\n * Encodes a List ID into a string.\n *\n * See {@link encodeNodeId} for more details.\n * @param ld a List ID\n */\nexport function encodeListId(ld: ListId): ListIdEnc {\n  return encodeNodeId(ld.node) + '#' + ListType[ld.type];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is responsible for the login screen. It gather username and password\nand tries to login the user via the AuthenticationService.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                invalidCredentials\n                            \n                            \n                                isLoading\n                            \n                            \n                                returnUrl\n                            \n                            \n                                unknownError\n                            \n                            \n                                validateForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                submitForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, authService: AuthenticationService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:29\n                \n            \n\n\n            \n                \n                    Gather username and password from form and try login via AuthenticationService.\nIf successfull redirect to root url or to the redirectUrl the user originally wanted to access.\nIf login fails, set this.invalidCredentials so that gui shows error.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        invalidCredentials\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        returnUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unknownError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {first} from 'rxjs/operators';\nimport {AuthenticationService} from '../auth/authentication.service';\nimport {HttpErrorResponse} from '@angular/common/http';\n\n/**\n * This component is responsible for the login screen. It gather username and password\n * and tries to login the user via the AuthenticationService.\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  validateForm!: FormGroup;\n  returnUrl: string;\n  isLoading = false;\n  invalidCredentials = false;\n  unknownError = false;\n\n  /**\n   * Gather username and password from form and try login via AuthenticationService.\n   * If successfull redirect to root url or to the redirectUrl the user originally wanted to access.\n   * If login fails, set this.invalidCredentials so that gui shows error.\n   */\n  submitForm(): void {\n    Object.keys(this.validateForm.controls).forEach(controlKey => {\n      this.validateForm.controls[controlKey].markAsDirty();\n      this.validateForm.controls[controlKey].updateValueAndValidity();\n    });\n    this.isLoading = true;\n    this.authService.login(this.validateForm.controls.userName.value, this.validateForm.controls.password.value)\n      .pipe(first())\n      .subscribe(\n        data => {\n          this.validateForm.controls.password.reset();\n          this.isLoading = false;\n          this.router.navigate([this.returnUrl]);\n        },\n        (error: HttpErrorResponse) => {\n          this.validateForm.controls.password.reset();\n          this.isLoading = false;\n          this.invalidCredentials = error.status === 401;\n          this.unknownError = error.status === 0;\n        });\n  }\n\n  constructor(private route: ActivatedRoute, private router: Router,\n              private authService: AuthenticationService, private fb: FormBuilder) {\n  }\n\n  ngOnInit(): void {\n    this.validateForm = this.fb.group({\n      userName: [null, [Validators.required]],\n      password: [null, [Validators.required]],\n    });\n    this.returnUrl = this.route.snapshot.queryParams.returnUrl || '/';\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      Login\n    \n    \n      \n        \n          \n            \n          \n        \n      \n      \n        \n          \n            \n          \n        \n      \n      \n      \n      Log in\n      \n      Or register!\n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                .login-form {\n  max-width: 300px;\n  margin: auto;\n}\n\n.login-form-margin {\n  margin-bottom: 16px;\n}\n\n.login-form-forgot {\n  float: right;\n}\n\n.login-form-button {\n  width: 100%;\n}\n\n.error-message {\n  margin-bottom: 24px;\n}\n\n#register-link {\n  font-size: larger;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Login                                                                                                                                                  Log in            Or register!      '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MarkdownEditorComponent.html":{"url":"components/MarkdownEditorComponent.html","title":"component - MarkdownEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MarkdownEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/markdown/markdown-editor/markdown-editor.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component contains a monaco markdown editor with syntax highlighting\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-markdown-editor\n            \n\n            \n                styleUrls\n                ./markdown-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./markdown-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editorOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                codeDidChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                codeChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        code\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/markdown/markdown-editor/markdown-editor.component.ts:20\n                            \n                        \n                \n                    \n                        This code is initially displayed in the editor\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        codeChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/markdown/markdown-editor/markdown-editor.component.ts:24\n                            \n                        \n                \n                    \n                        Necessary for communicating changes to the parent when changes have been made to the code in the editor.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        codeDidChange\n                        \n                    \n                \n            \n            \n                \ncodeDidChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/markdown/markdown-editor/markdown-editor.component.ts:29\n                \n            \n\n\n            \n                \n                    Send changes in the editor to the parent component over the EventEmitter\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        editorOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {theme: 'vs', language: 'markdown'}\n                    \n                \n                    \n                        \n                                Defined in src/app/markdown/markdown-editor/markdown-editor.component.ts:16\n                        \n                    \n\n            \n                \n                    necessary options for usage of ngx-monaco-editor\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * This component contains a monaco markdown editor with syntax highlighting\n */\n@Component({\n  selector: 'app-markdown-editor',\n  templateUrl: './markdown-editor.component.html',\n  styleUrls: ['./markdown-editor.component.scss']\n})\nexport class MarkdownEditorComponent {\n\n  /**\n   * necessary options for usage of ngx-monaco-editor\n   */\n  editorOptions = {theme: 'vs', language: 'markdown'};\n  /**\n   * This code is initially displayed in the editor\n   */\n  @Input() code: string;\n  /**\n   * Necessary for communicating changes to the parent when changes have been made to the code in the editor.\n   */\n  @Output() codeChange = new EventEmitter();\n\n  /**\n   * Send changes in the editor to the parent component over the EventEmitter\n   */\n  codeDidChange() {\n    this.codeChange.emit(this.code);\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n\n    \n\n    \n                \n                    ./markdown-editor.component.scss\n                \n                .editorContainer{\n  margin-bottom: 20px;\n  border-color: #e6e6e6;\n  border-style: solid;\n  border-width: 1px;\n  border-radius: 6px;\n\n}\n\n.preview{\n  white-space: pre-wrap;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'MarkdownEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MarkdownPreviewComponent.html":{"url":"components/MarkdownPreviewComponent.html","title":"component - MarkdownPreviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MarkdownPreviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/markdown/markdown-preview/markdown-preview.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component renders and displays markdown\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n            \n                preserveWhitespaces\n                true\n            \n\n\n\n            \n                selector\n                app-markdown-preview\n            \n\n            \n                styleUrls\n                ./markdown-preview.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./markdown-preview.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                displayedCode\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        displayedCode\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/markdown/markdown-preview/markdown-preview.component.ts:17\n                            \n                        \n                \n                    \n                        The markdown code as a string which will be rendered\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\n\n/**\n * This component renders and displays markdown\n */\n@Component({\n  selector: 'app-markdown-preview',\n  templateUrl: './markdown-preview.component.html',\n  styleUrls: ['./markdown-preview.component.scss'],\n  preserveWhitespaces: true\n})\nexport class MarkdownPreviewComponent implements OnInit {\n\n  /**\n   * The markdown code as a string which will be rendered\n   */\n  @Input() displayedCode: string;\n\n  /**\n   * @ignore (Keyword for compodoc documentation generator)\n   */\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./markdown-preview.component.scss\n                \n                :host {\n  display: block;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'MarkdownPreviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MultiSourceList.html":{"url":"classes/MultiSourceList.html","title":"class - MultiSourceList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MultiSourceList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/set-editor/set-editor-dialog.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This is an internal component used to load data from multiple sources and through a layer of indirection (also see SetMultiSource).\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hasMore\n                            \n                            \n                                    Public\n                                limit\n                            \n                            \n                                    Public\n                                query\n                            \n                            \n                                    Public\n                                    Optional\n                                results\n                            \n                            \n                                    Public\n                                scoreKeys\n                            \n                            \n                                    Public\n                                    Optional\n                                sourceNodeList\n                            \n                            \n                                    Public\n                                sources\n                            \n                            \n                                    Public\n                                spec\n                            \n                            \n                                    Public\n                                    Optional\n                                staticSourceNodeList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromSingleList\n                            \n                            \n                                isLoading\n                            \n                            \n                                score\n                            \n                            \n                                setFilter\n                            \n                            \n                                unsubscribe\n                            \n                            \n                                update\n                            \n                            \n                                updateResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(spec: SetMultiSource, scoreKeys: string[], dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        spec\n                                                  \n                                                        \n                                                                        SetMultiSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scoreKeys\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hasMore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:54\n                        \n                    \n\n            \n                \n                    If true, there are more than limit items in the source data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:50\n                        \n                    \n\n            \n                \n                    Max number of items in results.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:59\n                        \n                    \n\n            \n                \n                    Current search query. Used to rank results by relevance.\nThe filters are computed separately! Use #setFilter to set both simultaneously.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        results\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:52\n                        \n                    \n\n            \n                \n                    Current results.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        scoreKeys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        sourceNodeList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataList\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:40\n                        \n                    \n\n            \n                \n                    A DataList that loads the value of sourceNodes, if it's a ListId.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sources\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map>\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:46\n                        \n                    \n\n            \n                \n                    List of all sources that will be included in the results.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        spec\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SetMultiSource\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        staticSourceNodeList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NodeId[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:44\n                        \n                    \n\n            \n                \n                    The list of nodes specified in sourceNodes, if it's a NodeId[].\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        fromSingleList\n                        \n                    \n                \n            \n            \n                \n                    \n                    fromSingleList(list: ListId, scoreKeys: string[], dataService: DataService)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:72\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        F\n                    \n                \n            \n\n            \n                \n                    Creates a new MultiSourceList that actually just loads a single list.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                                ListId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scoreKeys\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dataService\n                                    \n                                                DataService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MultiSourceList\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n            \n                \nisLoading()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:159\n                \n            \n\n\n            \n                \n                    If true, something is loading somewhere.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        score\n                        \n                    \n                \n            \n            \n                \nscore(item: T)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:116\n                \n            \n\n\n            \n                \n                    Scores an item for ranking in results.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFilter\n                        \n                    \n                \n            \n            \n                \nsetFilter(query: string, filter: F)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:108\n                \n            \n\n\n            \n                \n                    Sets a filter on all lists.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            F\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe\n                        \n                    \n                \n            \n            \n                \nunsubscribe()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:173\n                \n            \n\n\n            \n                \n                    Unsubscribes from all subscriptions. This object should no longer be used afterwards.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:77\n                \n            \n\n\n            \n                \n                    Updates lists.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateResults\n                        \n                    \n                \n            \n            \n                \nupdateResults()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:135\n                \n            \n\n\n            \n                \n                    Updates the results array from loaded data.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Inject, OnDestroy, OnInit, TemplateRef } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {\n  decodeListId,\n  decodeNodeId,\n  encodeListId,\n  encodeNodeId,\n  ListId,\n  ListIdEnc,\n  NodeId,\n  NodeIdEnc,\n  nodeTypeFromTypename\n} from '@app/data-dgql/id';\nimport { DataList } from '@app/data-dgql/query';\nimport { Subscription } from 'rxjs';\nimport DataService from '@app/data-dgql';\nimport { UserNotifyService } from '@app/user-notify/user-notify.service';\nimport { quickScore } from 'quick-score';\n\n/**\n * This interface is used to source items from multiple sources in the set editor.\n *\n * staticSources specifies lists whose items will always be loaded.\n * sourceNodes specifies a list of nodes whose the sub-items will be loaded (e.g. a list of components whose labels will be loaded).\n */\nexport interface SetMultiSource {\n  /** A static list of source lists. */\n  staticSources: ListId[];\n  /** A list of nodes that will be passed to listFromNode. */\n  sourceNodes?: ListId | NodeId[];\n  /** Maps nodes from sourceNodes to lists from which items will be sourced. */\n  listFromNode?: (n: NodeId) => ListId;\n}\n\n/**\n * This is an internal component used to load data from multiple sources and through a layer of indirection (also see SetMultiSource).\n */\nclass MultiSourceList {\n  /** A DataList that loads the value of sourceNodes, if it's a ListId. */\n  public sourceNodeList?: DataList;\n  /** @ignore */\n  public sourceNodeListSub?: Subscription;\n  /** The list of nodes specified in sourceNodes, if it's a NodeId[]. */\n  public staticSourceNodeList?: NodeId[];\n  /** List of all sources that will be included in the results. */\n  public sources: Map> = new Map();\n  /** @ignore */\n  public sourceSubs: Map = new Map();\n  /** Max number of items in results. */\n  public limit = 10;\n  /** Current results. */\n  public results?: T[];\n  /** If true, there are more than `limit` items in the source data. */\n  public hasMore = false;\n  /**\n   * Current search query. Used to rank results by relevance.\n   * The filters are computed separately! Use {@link #setFilter} to set both simultaneously.\n   */\n  public query = '';\n\n  constructor(public spec: SetMultiSource, public scoreKeys: string[], private dataService: DataService) {\n    if (Array.isArray(spec.sourceNodes)) {\n      this.staticSourceNodeList = spec.sourceNodes;\n    } else if (typeof spec.sourceNodes === 'object') {\n      this.sourceNodeList = dataService.getList(spec.sourceNodes);\n      this.sourceNodeListSub = this.sourceNodeList.subscribe(() => this.update());\n    }\n    this.update();\n  }\n\n  /** Creates a new MultiSourceList that actually just loads a single list. */\n  static fromSingleList(list: ListId, scoreKeys: string[], dataService: DataService) {\n    return new this({ staticSources: [list] }, scoreKeys, dataService);\n  }\n\n  /** Updates lists. */\n  update() {\n    const newSourceSet = new Set();\n    for (const id of this.sourceNodeList?.current?.keys() || []) {\n      const nodeId = decodeNodeId(id);\n      newSourceSet.add(encodeListId(this.spec.listFromNode(nodeId)));\n    }\n    for (const nodeId of this.staticSourceNodeList || []) {\n      newSourceSet.add(encodeListId(this.spec.listFromNode(nodeId)));\n    }\n    for (const source of this.spec.staticSources) {\n      newSourceSet.add(encodeListId(source));\n    }\n\n    for (const source of newSourceSet) {\n      if (!this.sources.has(source)) {\n        const list = this.dataService.getList(decodeListId(source));\n        list.interactive = true;\n        this.sources.set(source, list);\n        this.sourceSubs.set(source, list.subscribe(() => this.updateResults()));\n      }\n    }\n    for (const source of [...this.sources.keys()]) {\n      if (!newSourceSet.has(source)) {\n        this.sourceSubs.get(source).unsubscribe();\n        this.sourceSubs.delete(source);\n        this.sources.delete(source);\n      }\n    }\n  }\n\n  /** Sets a filter on all lists. */\n  setFilter(query: string, filter: F) {\n    this.query = query;\n    for (const source of this.sources.values()) {\n      source.filter = filter;\n    }\n  }\n\n  /** Scores an item for ranking in results. */\n  score(item: T) {\n    const matchStrings = [];\n    for (const key of this.scoreKeys) {\n      let cursor = item;\n      for (const objKey of key.split('.')) {\n        cursor = cursor[objKey];\n        if (!cursor) {\n          break;\n        }\n      }\n      if (cursor) {\n        matchStrings.push(cursor);\n      }\n    }\n\n    return quickScore(matchStrings.join(' '), this.query);\n  }\n\n  /** Updates the results array from loaded data. */\n  updateResults() {\n    const seenItems = new Set();\n    const items = [];\n    this.hasMore = false;\n    for (const source of this.sources.values()) {\n      if (!source.hasData) {\n        continue;\n      }\n      for (const [id, item] of source.current.entries()) {\n        if (!seenItems.has(id)) {\n          seenItems.add(id);\n          items.push(item);\n        }\n      }\n      this.hasMore = this.hasMore || (source.current.size  this.score(a) - this.score(b));\n    items.splice(this.limit);\n\n    this.results = items;\n  }\n\n  /** If true, something is loading somewhere. */\n  isLoading() {\n    if (this.sourceNodeList?.loading) {\n      return true;\n    }\n    for (const source of this.sources.values()) {\n      if (source.loading) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /** Unsubscribes from all subscriptions. This object should no longer be used afterwards. */\n  unsubscribe() {\n    this.sourceNodeListSub?.unsubscribe();\n    this.sourceSubs.forEach(sub => sub.unsubscribe());\n  }\n}\n\n/** Types of item operations that may be made available. */\nexport type ItemOps = 'none' | 'edit' | 'create-edit' | 'create-edit-delete';\n\nexport interface SetEditorDialogData {\n  title: string;\n  listSet: ListId | NodeId[];\n  listAll: ListId | SetMultiSource;\n  applyChangeset: (add: NodeId[], del: NodeId[]) => Promise;\n  itemTemplate: TemplateRef;\n  makeFilter: (query: string) => F;\n  scoreKeys: string[];\n  emptySuggestionsLabel: string;\n  emptyResultsLabel: string;\n  createItem?: () => Promise;\n  editItem?: ({ id: NodeId, preview: T }) => void;\n  deleteItem?: ({ id: NodeId, preview: T }) => void;\n}\n\n/** This is an internal component used in the set editor. */\n@Component({\n  selector: 'app-set-editor-dialog',\n  templateUrl: './set-editor-dialog.component.html',\n  styleUrls: ['./set-editor-dialog.component.scss']\n})\nexport class SetEditorDialogComponent implements OnInit, OnDestroy {\n  public isLocalSet = false;\n  public localSet: NodeIdEnc[] = [];\n  public listSet$: DataList;\n  public listAll: MultiSourceList;\n  private listSetSub: Subscription;\n  private additions: Set = new Set();\n  private deletions: Set = new Set();\n  public searchQuery = '';\n\n  constructor(\n    private dataService: DataService,\n    private notifyService: UserNotifyService,\n    private dialogRef: MatDialogRef>,\n    @Inject(MAT_DIALOG_DATA) public data: SetEditorDialogData\n  ) {}\n\n  ngOnInit() {\n    if (Array.isArray(this.data.listSet)) {\n      this.isLocalSet = true;\n      this.localSet = [...this.data.listSet].map(id => encodeNodeId(id));\n    } else {\n      this.listSet$ = this.dataService.getList(this.data.listSet);\n    }\n    this.listAll = ('staticSources' in this.data.listAll)\n      ? new MultiSourceList(this.data.listAll, this.data.scoreKeys, this.dataService)\n      : MultiSourceList.fromSingleList(this.data.listAll, this.data.scoreKeys, this.dataService);\n\n    if (this.listSet$) {\n      this.listSetSub = this.listSet$?.subscribe();\n      // TODO: is this a reasonable heuristic for the listSet count? we need to cover >= results from listAll\n      this.listSet$.count = 10;\n      this.listSet$.interactive = true;\n    }\n  }\n\n  searchQueryDidChange() {\n    if (this.listSet$) {\n      this.listSet$.filter = this.data.makeFilter(this.searchQuery);\n    }\n    this.listAll.setFilter(this.searchQuery, this.data.makeFilter(this.searchQuery));\n  }\n\n  getNodeId(item): NodeId {\n    const type = nodeTypeFromTypename(item.__typename);\n    return { type, id: item.id };\n  }\n\n  getEncodedId(item): NodeIdEnc {\n    return encodeNodeId(this.getNodeId(item));\n  }\n\n  isInSet(item): boolean {\n    const id = this.getEncodedId(item);\n    if (this.additions.has(id)) {\n      return true;\n    }\n    if (this.deletions.has(id)) {\n      return false;\n    }\n    if (this.isLocalSet) {\n      return this.localSet.includes(id);\n    }\n    return this.listSet$.current?.has(id) || false;\n  }\n\n  toggleInSet(item): void {\n    const id = this.getEncodedId(item);\n    if (this.isInSet(item)) {\n      this.additions.delete(id);\n      this.deletions.add(id);\n    } else {\n      this.deletions.delete(id);\n      this.additions.add(id);\n    }\n  }\n\n  apply() {\n    if (this.additions.size + this.deletions.size === 0) {\n      this.dialogRef.close(null);\n      return;\n    }\n\n    this.data.applyChangeset([...this.additions].map(decodeNodeId), [...this.deletions].map(decodeNodeId)).then(() => {\n      this.dialogRef.close(null);\n    }).catch(error => {\n      this.notifyService.notifyError('Failed to apply changes', error);\n    });\n  }\n\n  createItem() {\n    this.data.createItem().then(node => {\n      if (node) {\n        this.additions.add(encodeNodeId(node));\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.listSetSub?.unsubscribe();\n    this.listAll.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NodeCache.html":{"url":"classes/NodeCache.html","title":"class - NodeCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NodeCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/query.ts\n        \n\n\n            \n                Description\n            \n            \n                Keeps a cache of DataNodes such that each NodeId has at most one associated DataNode.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nodes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createNode\n                            \n                            \n                                getNode\n                            \n                            \n                                insertNodes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(queries: QueriesService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data-dgql/query.ts:588\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queries\n                                                  \n                                                        \n                                                                        QueriesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        nodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map>\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/query.ts:588\n                        \n                    \n\n            \n                \n                    Internal node storage. Do not use directly.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createNode\n                        \n                    \n                \n            \n            \n                \n                    \n                    createNode(id: NodeId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:593\n                \n            \n\n\n            \n                \n                    Creates a new node.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                NodeId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNode\n                        \n                    \n                \n            \n            \n                \ngetNode(id: NodeId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:599\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Returns the DataNode for the given NodeId.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                NodeId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DataNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        insertNodes\n                        \n                    \n                \n            \n            \n                \ninsertNodes(nodes: T[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:613\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Inserts nodes into the cache and returns them as a map (in the same order).\nNote: the ID parameter of the node is only optional for type compatibility with the GQL schema.\nNodes without an ID will be ignored.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nodes\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Map\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, Subscriber } from 'rxjs';\nimport {\n  decodeNodeId,\n  encodeNodeId,\n  ListId,\n  ListParams,\n  NodeId,\n  NodeIdEnc,\n  nodeTypeFromTypename,\n} from './id';\nimport { QueriesService } from './queries/queries.service';\nimport { ListResult, queryList, queryNode } from './load';\nimport { PageInfo } from '../../generated/graphql-dgql';\n\n/** How long {@link DataQuery} will wait to debounce requests until actually sending a request, in milliseconds. */\nconst CACHE_FAST_DEBOUNCE_TIME_MS = 200;\n/** How long {@link DataQuery} will wait to debounce requests, if the {@link DataQuery#interactive} flag is set, in milliseconds. */\nconst CACHE_INTERACTIVE_DEBOUNCE_TIME_MS = 500;\n/** Number of milliseconds beyond which cached data will be considered stale, and will be reloaded if a new subscriber is added. */\nconst CACHE_STALE_TIME_MS = 5000;\n\n/**\n * A piece of observable data.\n *\n * DataQuery is a stateful interface for interacting with an API object.\n * Instead of calling a function to make an API request, DataQuery lets you declare the ID (like an endpoint) and\n * request parameters (in {@link #params}) of the data you want, and will automatically load the data when needed.\n * Data can then be accessed synchronously with the {@link #current} property.\n *\n * Upon adding a subscriber with [#subscribe]{@link Observable#subscribe}, data will loaded from the API and stored in the\n * cache. Subsequent viewers can then immediately access the cached data.\n *\n * - To check if data is loaded, use {@link #hasData},\n *   and to check if data is still loading, use {@link #loading}.\n * - To (re-)load the data from the API, use {@link #load}.\n *   This happens automatically upon subscription after a sufficient delay (see debounce time constants).\n * - To add a subscriber without triggering this behavior, use {@link #subscribeLazy}, which will\n *   only make an API request if the data is not cached.\n * - To invalidate (i.e. delete) the cached data, use {@link #invalidate}.\n * - If you only need the data right now and don't want to deal with subscriptions, use {@link #dataAsPromise}\n *   to access it as a promise that will either return cached data or load new data.\n *\n * When done using a DataQuery subscription, it *must* be manually destroyed by calling\n * [`sub.unsubscribe()`]{@link Subscription#unsubscribe} on the Subscription object returned by\n * [subscribe]{@link Observable#subscribe}, as it may leak memory otherwise.\n *\n * See {@link DataNode} and {@link DataList} for the two main types of data that use DataQuery.\n *\n * @typeParam T - type of data accessible via .current\n * @typeParam R - type returned by innerQueryFn\n * @typeParam P - parameter type for innerQueryFn\n */\nexport abstract class DataQuery extends Observable {\n  /** The ID of this data. */\n  id: I;\n  loading = false; // TODO: maybe make this value observable too?\n  /** @ignore */\n  protected currentData?: T;\n  /** @ignore */\n  protected lastLoadTime = 0;\n  /** @ignore */\n  protected pSetParamsNoUpdate = false;\n\n  /** Returns true if data is currently available. */\n  get hasData(): boolean {\n    return this.currentData !== undefined;\n  }\n\n  /** The currently loaded data. */\n  get current(): T {\n    return this.currentData;\n  }\n\n  /** @ignore */\n  protected currentQueryParams?: P;\n  /**\n   * Parameters that will be passed to the request.\n   * Changing this property will automatically trigger a load.\n   */\n  get params(): P | undefined {\n    return this.currentQueryParams;\n  }\n  set params(p: P) {\n    this.currentQueryParams = p;\n    if (!this.pSetParamsNoUpdate) {\n      this.loadDebounced();\n    }\n  }\n\n  /** @ignore */\n  protected subscribers: Set> = new Set();\n  /** @ignore */\n  protected innerQueryFn: (id: I, p: P) => Promise;\n  /** @ignore */\n  protected innerMapFn: (r: R) => T;\n  /** @ignore */\n  protected stateLock = 0;\n  /** @ignore */\n  protected loadTimeout = null;\n  /** @ignore */\n  protected hydrated = false;\n  /** @ignore */\n  protected isNextSubLazy = false;\n\n  /** If true, will prolong debounce time a bit. */\n  interactive = false;\n\n  /**\n   * @ignore\n   * Creates a new DataQuery (you should never need to use this directly)\n   *\n   * @param id an identifier for the data being loaded\n   * @param query the inner query function\n   * @param map maps returned data from the query R to usable data T\n   */\n  constructor(id: I, query: (id: I, p: P) => Promise, map: (r: R) => T) {\n    super(subscriber => {\n      this.addSubscriber(subscriber, this.isNextSubLazy);\n      this.isNextSubLazy = false;\n    });\n    this.id = id;\n    this.innerQueryFn = query;\n    this.innerMapFn = map;\n  }\n\n  /**\n   * Returns the data as a promise, without having to create a subscription.\n   *\n   * If cached data is available, this will return the data immediately; otherwise, this will\n   * load the data with an API request.\n   *\n   * #### Example\n   * ```ts\n   * const node = dataService.getNode(someNodeId);\n   * node.dataAsPromise().then(data => {\n   *   console.log('node data:', data);\n   * }).catch(error => console.error('oh no'));\n   * ```\n   */\n  dataAsPromise(): Promise {\n    if (this.hasData) {\n      return Promise.resolve(this.current);\n    }\n    return new Promise((resolve, reject) => {\n      const sub = this.subscribe(data => {\n        resolve(data);\n        sub.unsubscribe();\n      }, error => {\n        reject(error);\n        sub.unsubscribe();\n      });\n    });\n  }\n\n  /** @ignore */\n  private loadImpl(fut: Promise) {\n    clearTimeout(this.loadTimeout);\n    this.loadTimeout = null;\n    this.lastLoadTime = Date.now();\n    this.loading = true;\n\n    // if load is called twice; only the newest load call will have an effect\n    const stateLock = ++this.stateLock;\n\n    fut.then(data => {\n      if (stateLock !== this.stateLock) {\n        return;\n      }\n      this.insertResult(data);\n      this.loading = false;\n      this.hydrated = false;\n    }).catch(error => {\n      if (stateLock !== this.stateLock) {\n        return;\n      }\n      this.emitErrorToAllSubscribers(error);\n      this.loading = false;\n      this.hydrated = false;\n    });\n  }\n\n  /** Loads data. */\n  load() {\n    this.hydrated = false;\n    this.loadImpl(this.innerQueryFn(this.id, this.currentQueryParams));\n  }\n\n  /**\n   * @internal\n   * Use when data has not yet been loaded but is available from elsewhere.\n   */\n  hydrateRaw(preparedData: Promise) {\n    if (this.hasData) {\n      return; // don't need hydration\n    }\n    this.hydrated = true;\n    this.loadImpl(preparedData);\n  }\n\n  /** Will load data if it's stale or not present. */\n  loadIfNeeded() {\n    if (this.loading) {\n      return;\n    }\n    if (!this.hasData || Date.now() - this.lastLoadTime > CACHE_STALE_TIME_MS) {\n      this.load();\n    }\n  }\n\n  /** Loads data after a short delay. Will debounce. */\n  loadDebounced(interactive = this.interactive) {\n    if (this.loadTimeout) {\n      return;\n    }\n    this.loadTimeout = setTimeout(() => {\n      this.loadTimeout = null;\n      this.load();\n    }, interactive ? CACHE_INTERACTIVE_DEBOUNCE_TIME_MS : CACHE_FAST_DEBOUNCE_TIME_MS);\n  }\n\n  /** Deletes current data. */\n  invalidate() {\n    this.currentData = undefined;\n    this.emitUpdateToAllSubscribers();\n  }\n\n  /** @ignore */\n  protected addSubscriber(subscriber: Subscriber, lazy: boolean) {\n    this.subscribers.add(subscriber);\n    if (this.current !== undefined) {\n      // data is available right now! emit current state\n      subscriber.next(this.current);\n    }\n\n    if (!this.hydrated && (!lazy || !this.hasData)) {\n      this.loadIfNeeded();\n    }\n\n    return {\n      unsubscribe: () => {\n        this.subscribers.delete(subscriber);\n      },\n    };\n  }\n\n  /**\n   * Will subscribe to the data, but not cause a reload unless there is no data.\n   * @param args passed verbatim to [#subscribe]{@link Observable#subscribe}\n   */\n  subscribeLazy(...args) {\n    this.isNextSubLazy = true;\n    return this.subscribe(...args);\n  }\n\n  /** @ignore */\n  emitUpdateToAllSubscribers() {\n    for (const sub of this.subscribers) {\n      sub.next(this.current);\n    }\n  }\n\n  /** @ignore */\n  emitErrorToAllSubscribers(error: unknown) {\n    for (const sub of this.subscribers) {\n      sub.error(error);\n    }\n  }\n\n  /** @ignore */\n  insertResult(result: R) {\n    this.currentData = this.innerMapFn(result);\n    this.emitUpdateToAllSubscribers();\n  }\n\n  /** Returns the number of subscribers for this data. */\n  get subscriberCount(): number {\n    return this.subscribers.size;\n  }\n}\n\n/** @ignore */\nconst identity = id => id;\n\n/**\n * A cacheable node with no parameters.\n *\n * See {@link DataQuery} for more information, and {@link DataService} to obtain a DataNode.\n * Nodes are identified by a {@link NodeId}.\n *\n * #### Example\n * ```html\n * \n *   Is it loading? {{thing$.loading ? 'yes' : 'no'}}\n *   Is the thing loaded? {{thing$.hasData ? 'yes' : 'no'}}\n *   \n *     Thing data: {{thing.something}}\n *   \n * \n * ```\n * ```ts\n * class ExampleComponent implements OnInit, OnDestroy {\n *   @Input() thingId: NodeId;\n *\n *   public thing$: DataNode;\n *   public thingSub: Subscription; // subscription to thing$\n *\n *   constructor(private dataService: DataService) {}}\n *\n *   ngOnInit() {\n *     // obtain the DataNode from the data service\n *     this.thing$ = this.dataService.getNode(this.thingId);\n *\n *     // subscribe to indicate that we want some data\n *     this.thingSub = this.thing$.subscribe();\n *   }\n *\n *   ngOnDestroy() {\n *     // remember to unsubscribe!!\n *     this.thingSub.unsubscribe();\n *   }\n * }\n * ```\n */\nexport class DataNode extends DataQuery {\n  /** @ignore */\n  constructor(queries: QueriesService, id: NodeId) {\n    super(id, queryNode(queries), identity);\n  }\n\n  set params(p) {\n    throw new Error('parameters not available on nodes');\n  }\n\n  loadIfNeeded() {\n    if (!this.loading && Date.now() - this.lastLoadTime > CACHE_STALE_TIME_MS) {\n      this.load();\n    }\n  }\n}\n\n/**\n * Provides a view into a list of items.\n *\n * See {@link DataQuery} for more information, and {@link DataService} to obtain a DataList.\n * Lists are identified by a {@link ListId}.\n *\n * - To access list items, use {@link #currentItems}.\n * - If you need the IDs as well, use {@link #current} (note that the Map is ordered).\n *\n * The current view is defined by following properties:\n *\n * - {@link #cursor}: the current NodeId cursor (see backend API documentation for details)\n * - {@link #count}: number of items to load\n * - {@link #forward}: if true, will load items after the cursor. If false, will load items before.\n * - {@link #filter}: filter object (type parameter F)\n *\n * Changing any of these properties will reload the list (debounced).\n *\n * @typeParam T - list item type\n * @typeParam F - list filter type\n *\n * #### Example\n * ```html\n * \n *   \n *     a thing! {{thing.something}}\n *   \n * \n * ```\n * ```ts\n * class ExampleComponent implements OnInit, OnDestroy {\n *   @Input() thingsListId: ListId;\n *\n *   things$: DataList; // filter type unknown because we're not using here\n *   thingsSub: Subscription;\n *\n *   constructor(private dataService: DataService) {}}\n *\n *   ngOnInit() {\n *     // obtain a list view from the data service\n *     this.things$ = this.dataService.getList(this.thingsListId);\n *\n *     // subscribe to the list to indicate that we want some data\n *     this.thingsSub = this.things$.subscribe();\n *   }\n *\n *   ngOnDestroy() {\n *     // remember to unsubscribe!!\n *     this.thingsSub.unsubscribe();\n *   }\n * }\n * ```\n */\nexport class DataList extends DataQuery, ListResult, ListParams> {\n  /** @ignore */\n  private pCursor?: NodeId;\n  /** @ignore */\n  private pCount = 10;\n  /** @ignore */\n  private pFilter?: F;\n  /** @ignore */\n  private pForward = true;\n  /** @ignore */\n  private pageInfo?: PageInfo;\n  /** @ignore */\n  private pTotalCount?: number;\n  /** @ignore */\n  private previouslyHadPageContents = false;\n  /** @ignore */\n  private pNodes: NodeCache;\n\n  /** @ignore */\n  constructor(queries: QueriesService, nodes: NodeCache, id: ListId) {\n    super(id, queryList(queries, nodes), result => {\n      this.pageInfo = result.pageInfo;\n      this.pTotalCount = result.totalCount;\n\n      // API *only* reports hasPreviousPage or hasNextPage correctly if we are navigating in that\n      // same direction. Hence, we need to amend pageInfo with prior knowledge.\n      if (this.forward) {\n        this.pageInfo.hasPreviousPage = this.previouslyHadPageContents;\n      } else {\n        this.pageInfo.hasNextPage = this.previouslyHadPageContents;\n      }\n      this.previouslyHadPageContents = !!result.items.size;\n\n      return result.items;\n    });\n    this.pNodes = nodes;\n    this.pSetParamsNoUpdate = true;\n    this.setParams();\n    this.pSetParamsNoUpdate = false;\n  }\n\n  /**\n   * @internal\n   * Updates the `params` value from list parameters\n   */\n  setParams() {\n    this.params = {\n      cursor: this.pCursor,\n      count: this.pCount,\n      forward: this.pForward,\n      filter: this.pFilter,\n    };\n  }\n\n  /** Returns the total number of items. Null if not loaded. */\n  get totalCount() {\n    return this.pTotalCount;\n  }\n\n  /** Returns the currently loaded items in an array. */\n  get currentItems(): T[] {\n    if (!this.hasData) {\n      return [];\n    }\n    return [...this.current.values()];\n  }\n\n  /** Current list filter object. */\n  get filter(): F | undefined {\n    return this.pFilter;\n  }\n  set filter(f: F) {\n    this.pFilter = f;\n    this.setParams();\n  }\n\n  /** The current pagination cursor (a node relative to which items will be loaded). Nullable. */\n  get cursor(): NodeId {\n    return this.pCursor;\n  }\n  set cursor(c: NodeId) {\n    this.pCursor = c;\n    this.setParams();\n  }\n\n  /** The max amount of items to be loaded. */\n  get count(): number {\n    return this.pCount;\n  }\n  set count(c: number) {\n    this.pCount = c;\n    this.setParams();\n  }\n\n  /** Whether to load items after the cursor (true), or items before the cursor (false). */\n  get forward(): boolean {\n    return this.pForward;\n  }\n  set forward(f: boolean) {\n    this.pForward = f;\n    this.setParams();\n  }\n\n  /** Returns the node ID of the first item on the current page. */\n  get firstPageItemId(): NodeId | null {\n    const firstKey = this.current ? this.current.keys().next()?.value || null : null;\n    return firstKey ? decodeNodeId(firstKey) : null;\n  }\n\n  /** Returns the node ID of the last item on the current page. */\n  get lastPageItemId(): NodeId | null {\n    if (!this.current) {\n      return;\n    }\n    const keys = [...this.current.keys()];\n    return keys[keys.length - 1] ? decodeNodeId(keys[keys.length - 1]) : null;\n  }\n\n  /** Returns true if the current result contains the given node. */\n  currentHasNode(key: NodeId): boolean {\n    return this.current?.has(encodeNodeId(key));\n  }\n\n  get hasPrevPage() {\n    return !this.pageInfo || this.pageInfo.hasPreviousPage;\n  }\n  get hasNextPage() {\n    return !this.pageInfo || this.pageInfo.hasNextPage;\n  }\n\n  /** Moves the view to the first page. */\n  firstPage() {\n    this.cursor = null;\n    this.forward = true;\n    this.previouslyHadPageContents = false;\n    this.invalidate();\n    return true;\n  }\n\n  /** Moves the view to the previous page. */\n  prevPage() {\n    if (this.pageInfo && !this.pageInfo.hasPreviousPage) {\n      return false;\n    }\n    this.cursor = this.firstPageItemId;\n    this.forward = false;\n    this.invalidate();\n    return true;\n  }\n\n  /** Moves the view to the next page. */\n  nextPage() {\n    if (this.pageInfo && !this.pageInfo.hasNextPage) {\n      return false;\n    }\n    this.cursor = this.lastPageItemId;\n    this.forward = true;\n    this.invalidate();\n    return true;\n  }\n\n  /**\n   * Hydrates this list with initial data in the API format\n   *\n   * If you've already got data from the API that contains the first page of this list, you can use\n   * this method to insert that data directly and avoid triggering a redundant API request.\n   *\n   * @param data a promise that returns the API data\n   * @typeParam IdT - equivalent to T\n   */\n  hydrateInitial(data: Promise>) {\n    this.hydrateRaw(data.then(value => ({\n      totalCount: value.totalCount,\n      pageInfo: value.pageInfo,\n      items: this.pNodes.insertNodes(value.nodes || [])\n    })));\n  }\n}\n\n/** List hydration object (constructing this manually shouldn't be necessary as it mirrors the structure of GQL objects) */\nexport type HydrateList = {\n  totalCount: number,\n  pageInfo: PageInfo,\n  /** This is nullable because it's nullable in the GQL schema. In practice it should always exist */\n  nodes?: (T | null)[]\n};\n\n/** Keeps a cache of DataNodes such that each NodeId has at most one associated DataNode. */\nexport class NodeCache {\n  // TODO: garbage collection? (nodes with zero subscribers)\n  /**\n   * @internal\n   * Internal node storage. Do not use directly.\n   */\n  nodes: Map> = new Map();\n\n  constructor(private queries: QueriesService) {}\n\n  /** Creates a new node. */\n  private createNode(id: NodeId) {\n    const encodedId = encodeNodeId(id);\n    this.nodes.set(encodedId, new DataNode(this.queries, id));\n  }\n\n  /** Returns the DataNode for the given NodeId. */\n  getNode(id: NodeId): DataNode {\n    const encodedId = encodeNodeId(id);\n    if (!this.nodes.has(encodedId)) {\n      this.createNode(id);\n    }\n    return this.nodes.get(encodedId) as DataNode;\n  }\n\n  /**\n   * Inserts nodes into the cache and returns them as a map (in the same order).\n   *\n   * Note: the ID parameter of the node is only optional for type compatibility with the GQL schema.\n   * Nodes without an ID will be ignored.\n   */\n  insertNodes(nodes: T[]): Map {\n    const map = new Map();\n\n    for (const node of nodes) {\n      if (!node?.id) {\n        continue;\n      }\n      const type = nodeTypeFromTypename(node.__typename);\n      const id = { type, id: node.id };\n      const dataNode: DataNode = this.getNode(id);\n      if (!dataNode.hasData) {\n        // FIXME: different queries load different amounts of data, simple overwriting doesn't always have the desired effect\n        //  S1: distinguish between nodes and \"partial nodes\"?\n        //  S2: deep merge data?\n        dataNode.insertResult(node);\n      }\n      map.set(encodeNodeId(id), node);\n    }\n\n    return map;\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NodeDetailsComponent.html":{"url":"components/NodeDetailsComponent.html","title":"component - NodeDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NodeDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/node-details/node-details.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component shows details of components or interfaces\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-node-details\n            \n\n            \n                styleUrls\n                ./node-details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./node-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                            \n                                editMode\n                            \n                            \n                                interface\n                            \n                            \n                                issueListId\n                            \n                            \n                                placeholder\n                            \n                            \n                                showName\n                            \n                            \n                                validationDescription\n                            \n                            \n                                validationIMS\n                            \n                            \n                                validationName\n                            \n                            \n                                validationProvider\n                            \n                            \n                                validationType\n                            \n                            \n                                validationUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getNodeName\n                            \n                            \n                                    Public\n                                getNodeTypeString\n                            \n                            \n                                    Public\n                                node\n                            \n                            \n                                    Public\n                                onCancelClick\n                            \n                            \n                                    Public\n                                onDeleteClick\n                            \n                            \n                                    Public\n                                onEditClick\n                            \n                            \n                                    Public\n                                onSaveClick\n                            \n                            \n                                    Private\n                                resetValues\n                            \n                            \n                                    Private\n                                showDeleteDialog\n                            \n                            \n                                    Private\n                                updateComponent\n                            \n                            \n                                    Private\n                                updateInterface\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                callback\n                            \n                            \n                                nodeId\n                            \n                            \n                                nodeType\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, componentStoreService: ComponentStoreService, interfaceStoreService: InterfaceStoreService, dialog: MatDialog, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/node-details/node-details.component.ts:79\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        componentStoreService\n                                                  \n                                                        \n                                                                        ComponentStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        interfaceStoreService\n                                                  \n                                                        \n                                                                        InterfaceStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        callback\n                    \n                \n                \n                    \n                        Type :         NodeUpdatedCallbackFn\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/node-details/node-details.component.ts:55\n                            \n                        \n                \n                    \n                        Function to be called if a node was updated or deleted\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        nodeId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/node-details/node-details.component.ts:47\n                            \n                        \n                \n                    \n                        Id of the node\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        nodeType\n                    \n                \n                \n                    \n                        Type :         NodeDetailsType\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/node-details/node-details.component.ts:51\n                            \n                        \n                \n                    \n                        Either component or interface\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/node-details/node-details.component.ts:43\n                            \n                        \n                \n                    \n                        The project that contains the node\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getNodeName\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodeName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:130\n                \n            \n\n\n            \n                \n                    Get the name of the node, or an empty string if it has not been fetched yet\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getNodeTypeString\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodeTypeString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:145\n                \n            \n\n\n            \n                \n                    Get the type of the node as a formatted string\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        node\n                        \n                    \n                \n            \n            \n                \n                    \n                    node()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:152\n                \n            \n\n\n            \n                \n                    Access the node\n\n\n                    \n                        Returns :     GetComponentQuery | GetInterfaceQuery\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onCancelClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onCancelClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onDeleteClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeleteClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onEditClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onEditClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onSaveClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onSaveClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:249\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        resetValues\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetValues()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:263\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        showDeleteDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    showDeleteDialog(affected: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:201\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    affected\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateComponent\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateComponent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:277\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateInterface\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:292\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GetBasicComponentQuery\n\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interface\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GetInterfaceQuery\n\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issueListId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ListId\n\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        placeholder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'placeholder'\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', CCIMSValidators.contentValidator)\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationIMS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required, CCIMSValidators.urlValidator])\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required, CCIMSValidators.nameFormatValidator])\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationProvider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required, CCIMSValidators.urlValidator])\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required, CCIMSValidators.urlValidator])\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:76\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {\n  GetBasicComponentQuery,\n  GetComponentQuery,\n  GetInterfaceQuery,\n  UpdateComponentInput,\n  UpdateComponentInterfaceInput\n} from '../../generated/graphql';\nimport {FormControl, Validators} from '@angular/forms';\nimport { ListId, ListType, NodeType } from '@app/data-dgql/id';\nimport {Router} from '@angular/router';\nimport {ComponentStoreService} from '@app/data/component/component-store.service';\nimport {InterfaceStoreService} from '@app/data/interface/interface-store.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {QueryComponent} from '@app/utils/query-component/query.component';\nimport {RemoveDialogComponent} from '@app/dialogs/remove-dialog/remove-dialog.component';\nimport {CCIMSValidators} from '@app/utils/validators';\n\n/**\n * A node shown in the details component can either be a component or an interface\n */\nexport enum NodeDetailsType {\n  Component,\n  Interface\n}\n\nexport declare type NodeUpdatedCallbackFn = (nodeDeleted: boolean) => void;\n\n/**\n * This component shows details of components or interfaces\n */\n@Component({\n  selector: 'app-node-details',\n  templateUrl: './node-details.component.html',\n  styleUrls: ['./node-details.component.scss']\n})\nexport class NodeDetailsComponent implements OnInit, AfterViewInit {\n\n  /**\n   * The project that contains the node\n   */\n  @Input() projectId: string;\n  /**\n   * Id of the node\n   */\n  @Input() nodeId: string;\n  /**\n   * Either component or interface\n   */\n  @Input() nodeType: NodeDetailsType;\n  /**\n   * Function to be called if a node was updated or deleted\n   */\n  @Input() callback?: NodeUpdatedCallbackFn;\n  /** @ignore */\n  @ViewChild('nodeQuery') nodeQuery: QueryComponent;\n  /** @ignore */\n  @ViewChild('deleteQuery') deleteQuery: QueryComponent;\n  /** @ignore */\n  @ViewChild('updateQuery') updateQuery: QueryComponent;\n\n  /** @ignore */\n  Type = NodeDetailsType;\n\n  issueListId: ListId;\n  component: GetBasicComponentQuery;\n  interface: GetInterfaceQuery;\n  editMode: boolean;\n  showName = false;\n  placeholder = 'placeholder';\n\n  // TODO: Validators\n  validationProvider = new FormControl('', [Validators.required, CCIMSValidators.urlValidator]);\n  validationName = new FormControl('', [Validators.required, CCIMSValidators.nameFormatValidator]);\n  validationUrl = new FormControl('', [Validators.required, CCIMSValidators.urlValidator]);\n  validationIMS = new FormControl('', [Validators.required, CCIMSValidators.urlValidator]);\n  validationType = new FormControl('');\n  validationDescription = new FormControl('', CCIMSValidators.contentValidator);\n\n  constructor(private router: Router,\n              private componentStoreService: ComponentStoreService,\n              private interfaceStoreService: InterfaceStoreService,\n              private dialog: MatDialog,\n              private notify: UserNotifyService) {\n  }\n\n  ngOnInit(): void {\n    this.editMode = false;\n\n    if (this.nodeType === NodeDetailsType.Component) {\n      this.issueListId = {node: {type: NodeType.Component, id: this.nodeId}, type: ListType.Issues};\n    } else {\n      this.issueListId = {\n        node: {type: NodeType.ComponentInterface, id: this.nodeId},\n        type: ListType.IssuesOnLocation\n      };\n    }\n\n\n    this.validationIMS.setValue('?');\n    this.validationUrl.setValue('?');\n  }\n\n  ngAfterViewInit() {\n    if (this.nodeType === NodeDetailsType.Component) {\n      this.nodeQuery.listenTo(this.componentStoreService.getBasicComponent(this.nodeId), component => {\n        if (component.node) {\n          this.component = component;\n          this.validationIMS.setValue('This is a placeholder');\n          this.validationUrl.setValue(component.node.repositoryURL);\n        } else {\n          this.nodeQuery.setError();\n        }\n      });\n    } else if (this.nodeType === NodeDetailsType.Interface) {\n      this.nodeQuery.listenTo(this.interfaceStoreService.getInterface(this.nodeId), int => {\n        if (int.node) {\n          this.interface = int;\n        } else {\n          this.nodeQuery.setError();\n        }\n      });\n    }\n  }\n\n  /**\n   * Get the name of the node, or an empty string if it has not been fetched yet\n   */\n  public getNodeName(): string {\n    if (!this.nodeQuery) {\n      return '';\n    }\n\n    if (this.nodeQuery.ready()) {\n      return this.node().node.name;\n    }\n\n    return '';\n  }\n\n  /**\n   * Get the type of the node as a formatted string\n   */\n  public getNodeTypeString(): string {\n    return (this.nodeType === NodeDetailsType.Interface ? 'Interface' : 'Component');\n  }\n\n  /**\n   * Access the node\n   */\n  public node(): GetComponentQuery | GetInterfaceQuery {\n    if (this.nodeType === NodeDetailsType.Component) {\n      return this.component;\n    } else if (this.nodeType === NodeDetailsType.Interface) {\n      return this.interface;\n    }\n  }\n\n  public onCancelClick() {\n    this.resetValues();\n    this.editMode = false;\n  }\n\n  public onEditClick() {\n    this.editMode = true;\n  }\n\n  public onDeleteClick(): void {\n    const affected: string[] = [];\n    // Collect affected interfaces and components, then show the delete dialog\n    if (this.nodeType === NodeDetailsType.Component) {\n      this.deleteQuery.listenTo(this.componentStoreService.getComponentInterfaces(this.nodeId), interfaces => {\n        for (const i of interfaces.node.interfaces.nodes) {\n          let affectedInterface = 'Interface \"' + i.name + '\" will be deleted';\n          if (i.consumedBy.nodes.length > 0) {\n            affectedInterface += ', which will affect the following component(s):';\n          }\n\n          affected.push(affectedInterface);\n          for (const component of i.consumedBy.nodes) {\n            affected.push(' ' + component.name);\n          }\n        }\n\n        this.showDeleteDialog(affected);\n      });\n    } else if (this.nodeType === NodeDetailsType.Interface) {\n      this.deleteQuery.listenTo(this.interfaceStoreService.getConsumingComponents(this.nodeId), components => {\n        affected.push('Deleting this interface will affect the following component(s):');\n        affected.push(' ' + components.node.component.name);\n        for (const c of components.node.consumedBy.nodes) {\n          affected.push(' ' + c.name);\n        }\n\n        this.showDeleteDialog(affected);\n      });\n    }\n  }\n\n  private showDeleteDialog(affected: string[]): void {\n    if (this.nodeType === NodeDetailsType.Component) {\n      const confirmDeleteDialogRef = this.dialog.open(RemoveDialogComponent,\n        {\n          data: {\n            title: 'Really delete component \\\"' + this.component.node.name + '\\\"?',\n            messages: ['Are you sure you want to delete the component \\\"' + this.component.node.name + '\\\"?',\n              'This action cannot be undone!'].concat(affected),\n            verificationName: this.component.node.name\n          }\n        });\n\n      confirmDeleteDialogRef.afterClosed().subscribe(deleteData => {\n        if (deleteData) {\n          this.deleteQuery.listenTo(this.componentStoreService.deleteComponent(this.nodeId), () => {\n              this.notify.notifyInfo('Successfully deleted component \\\"' + this.component.node.name + '\\\"\"');\n              if (this.callback) {\n                this.callback(true);\n              }\n            }\n          );\n        }\n      });\n    } else if (this.nodeType === NodeDetailsType.Interface) {\n      const confirmDeleteDialogRef = this.dialog.open(RemoveDialogComponent,\n        {\n          data: {\n            title: 'Really delete interface \\\"' + this.interface.node.name + '\\\"?',\n            messages: ['Are you sure you want to delete the interface \\\"' + this.interface.node.name + '\\\"?',\n              'This action cannot be undone!'].concat(affected),\n            verificationName: this.interface.node.name\n          }\n        });\n\n      confirmDeleteDialogRef.afterClosed().subscribe(deleteData => {\n        // dialog returns if the deleting was successful\n        if (deleteData) {\n          this.deleteQuery.listenTo(this.interfaceStoreService.delete(this.nodeId), () => {\n            this.notify.notifyInfo('Successfully deleted interface \\\"' + this.interface.node.name + '\\\"');\n            if (this.callback) {\n              this.callback(true);\n            }\n          });\n        }\n      });\n    }\n  }\n\n  public onSaveClick(): void {\n    if (this.nodeType === NodeDetailsType.Component) {\n      this.component.node.name = this.validationName.value;\n      // FIXME\n      // this.component.node.ims.imsType = this.validationProvider.value;\n      this.component.node.description = this.validationDescription.value;\n      this.updateComponent();\n    } else if (this.nodeType === NodeDetailsType.Interface) {\n      this.interface.node.name = this.validationName.value;\n      this.interface.node.description = this.validationDescription.value;\n      this.updateInterface();\n    }\n  }\n\n  private resetValues() {\n    if (this.nodeType === NodeDetailsType.Component) {\n      this.validationName.setValue(this.component.node.name);\n      this.validationIMS.setValue('http://example.ims.com');\n      // FIXME\n      // this.validationProvider.setValue(this.component.node.ims.imsType);\n      this.validationUrl.setValue('http://example.repo.com');\n      this.validationDescription.setValue(this.component.node.description);\n    } else if (this.nodeType === NodeDetailsType.Interface) {\n      this.validationName.setValue(this.interface.node.name);\n      this.validationDescription.setValue(this.interface.node.description);\n    }\n  }\n\n  private updateComponent(): void {\n    const input: UpdateComponentInput = {\n      component: this.component.node.id,\n      name: this.component.node.name,\n      description: this.component.node.description\n    };\n\n    this.updateQuery.listenTo(this.componentStoreService.updateComponent(input), () => {\n      this.editMode = false;\n      if (this.callback) {\n        this.callback(false);\n      }\n    });\n  }\n\n  private updateInterface(): void {\n    const MutationinputData: UpdateComponentInterfaceInput = {\n      componentInterface: this.interface.node.id,\n      name: this.interface.node.name,\n      description: this.interface.node.description\n    };\n\n    this.updateQuery.listenTo(this.interfaceStoreService.update(MutationinputData), () => {\n      this.editMode = false;\n      if (this.callback) {\n        this.callback(false);\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n        \n      \n\n      \n        \n          \n            \n              \n                Name\n                \n                \n                  Invalid component name\n                \n              \n              \n                Repository-URL\n                \n                \n                  Enter a valid URL\n                \n              \n            \n\n            \n              \n                Provider Type\n                \n                \n                  Enter a valid URL\n                \n              \n              \n                Provider Type (IMS)\n                \n                  GitHub\n                \n                \n                  Select the Provider\n                \n              \n\n              \n                IMS-URL\n                \n                \n                  Enter a valid URL\n                \n              \n            \n\n            \n              \n                Description\n                \n              \n            \n          \n          \n            \n              \n                Name\n                \n                \n                  Name your Interface\n                \n              \n\n              \n                Interface Type\n                \n                \n                  Enter a valid URL\n                \n              \n            \n\n            \n              \n                Description\n                \n              \n            \n          \n\n          \n            \n              edit\n              Edit {{getNodeTypeString().toLowerCase()}}\n            \n\n            \n              \n                \n                  save\n                  Save changes\n                \n              \n            \n\n            \n              cancel\n              Discard changes\n            \n\n            \n              \n                delete\n                Delete {{getNodeTypeString().toLowerCase()}}\n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./node-details.component.scss\n                \n                .description-field {\n  min-height: 50px;\n}\n\n.row {\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n}\n\n.row > * {\n  margin-right: 4px;\n  flex-grow: 1;\n}\n\n.row > *:last-child {\n  margin-right: 0;\n  flex-grow: 1;\n}\n\n:host ::ng-deep .mat-tab-body-wrapper {\n  height: 100%;\n}\n\n:host ::ng-deep .mat-tab-body.mat-tab-body-active {\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                              Name                                                  Invalid component name                                                            Repository-URL                                                  Enter a valid URL                                                                                    Provider Type                                                  Enter a valid URL                                                            Provider Type (IMS)                                  GitHub                                                  Select the Provider                                                            IMS-URL                                                  Enter a valid URL                                                                                    Description                                                                                                        Name                                                  Name your Interface                                                            Interface Type                                                  Enter a valid URL                                                                                    Description                                                                                        edit              Edit {{getNodeTypeString().toLowerCase()}}                                                                        save                  Save changes                                                                    cancel              Discard changes                                                      delete                Delete {{getNodeTypeString().toLowerCase()}}                                                        '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'NodeDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NodeDetailsPageComponent.html":{"url":"components/NodeDetailsPageComponent.html","title":"component - NodeDetailsPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NodeDetailsPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/node-details-page/node-details-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./node-details-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./node-details-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nodeId\n                            \n                            \n                                nodeType\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNodeUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, changeDetector: ChangeDetectorRef, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/node-details-page/node-details-page.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onNodeUpdate\n                        \n                    \n                \n            \n            \n                \nonNodeUpdate(deleted: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details-page/node-details-page.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deleted\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        nodeId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details-page/node-details-page.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nodeType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NodeDetailsType\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details-page/node-details-page.component.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details-page/node-details-page.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {ChangeDetectorRef, Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {NodeDetailsType} from '@app/node-details/node-details.component';\n\n@Component({\n  templateUrl: './node-details-page.component.html',\n  styleUrls: ['./node-details-page.component.scss']\n})\nexport class NodeDetailsPageComponent implements OnInit {\n  nodeType: NodeDetailsType = null;\n  nodeId: string = null;\n  projectId: string = null;\n\n  constructor(private route: ActivatedRoute,\n              private changeDetector: ChangeDetectorRef,\n              private router: Router) {\n  }\n\n  ngOnInit() {\n    this.projectId = this.route.snapshot.paramMap.get('id');\n    const componentId = this.route.snapshot.paramMap.get('componentId');\n    const interfaceId = this.route.snapshot.paramMap.get('interfaceId');\n\n    if (componentId !== null) {\n      this.nodeId = componentId;\n      this.nodeType = NodeDetailsType.Component;\n    } else if (interfaceId !== null) {\n      this.nodeId = interfaceId;\n      this.nodeType = NodeDetailsType.Interface;\n    }\n    this.changeDetector.detectChanges();\n  }\n\n  onNodeUpdate(deleted: boolean): void {\n    if (deleted) {\n      this.router.navigate(['/projects/' + this.projectId + '/graph']);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./node-details-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'NodeDetailsPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NodeId.html":{"url":"interfaces/NodeId.html","title":"interface - NodeId","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NodeId\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/id.ts\n        \n\n\n            \n                Description\n            \n            \n                Uniquely identifies a node.\nNode IDs are composed of a #type and an #id.\nThe #id corresponds to the ID used in the backend API.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID of this node. This is the same as the node ID in the backend API.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         NodeType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of this node.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export type NodeIdEnc = string;\nexport type ListIdEnc = string;\n\n/**\n * Backend API node types.\n * The names should match the respective value of `__typename` in the GraphQL data for any given node.\n */\nexport enum NodeType {\n  Root,\n  Component,\n  ComponentInterface,\n  Issue,\n  IssueTimelineItem,\n  Label,\n  Project,\n  Artifact,\n  User,\n  IssueComment\n}\n\n/**\n * Returns the NodeType for a given `__typename` value.\n * `__typename` is a tag found in GraphQL data.\n *\n * @param typename the __typename value\n */\nexport function nodeTypeFromTypename(typename: string) {\n  return NodeType[typename] || null;\n}\n\n/**\n * Uniquely identifies a node.\n *\n * Node IDs are composed of a {@link #type} and an {@link #id}.\n * The {@link #id} corresponds to the ID used in the backend API.\n */\nexport interface NodeId {\n  /**\n   * The type of this node.\n   */\n  type: NodeType;\n  /**\n   * The ID of this node. This is the same as the node ID in the backend API.\n   */\n  id: string;\n}\n\n/**\n * See {@link encodeNodeId}.\n * @param id the encoded node ID\n */\nexport function decodeNodeId(id: NodeIdEnc): NodeId {\n  if (!id) {\n    throw new Error('Could not decode node ID: no id given');\n  }\n  const parts = id.split('/');\n  return { type: NodeType[parts[0]], id: parts[1] };\n}\n\n/**\n * Encodes a {@link NodeId} into a string.\n * This is due to a limitation in Javascript where objects cannot be `==` compared with each other\n * apart from identity. Encoding them as a string allows `NodeId`s to be used as object or `Map` keys.\n *\n * @param nd the node ID\n */\nexport function encodeNodeId(nd: NodeId): NodeIdEnc {\n  return NodeType[nd.type] + '/' + nd.id;\n}\n\n/** The ID of the root node. */\nexport const ROOT_NODE = { type: NodeType.Root, id: '' };\n\n/** The special ID of the current user node. */\nexport const CURRENT_USER_NODE = { type: NodeType.User, id: 'self' };\n\n/**\n * All list types represent their respective list queries in the backend API.\n */\nexport enum ListType {\n  Projects,\n  Components,\n  ComponentInterfaces,\n  Issues,\n  IssuesOnLocation,\n  IssueLocations,\n  TimelineItems,\n  Labels,\n  Artifacts,\n  Participants,\n  Assignees,\n  SearchUsers,\n  LinkedIssues,\n  LinkedByIssues\n}\n\n/**\n * Uniquely identifies a list of items.\n *\n * Lists are always attached to a specific node.\n * For example, a list of issues may be attached to a project or a component.\n *\n * Lists that do not have a specific parent node in the backend API are attached to the\n * {@link ROOT_NODE}.\n *\n * #### Examples\n * The list of all issues on a component:\n * ```ts\n * { node: { type: NodeType.Component, id: '...' }, type: ListType.Issues }\n * ```\n *\n * The list of linked issues on an issue:\n * ```ts\n * { node: { type: NodeType.Issue, id: '...' }, type: ListType.LinkedIssues }\n * ```\n */\nexport interface ListId {\n  /**\n   * The parent node.\n   */\n  node: NodeId;\n  /**\n   * The type of list.\n   */\n  type: ListType;\n}\n\n/** List cursor and filter. */\nexport interface ListParams {\n  /** Cursor node. */\n  cursor?: NodeId;\n  /** Max number of items to load. */\n  count: number;\n  /** Whether to look forward from the cursor, or backwards. */\n  forward: boolean;\n  /** The filter. */\n  filter?: F;\n}\n\n/**\n * See {@link decodeListId}.\n * @param id an encoded List ID\n */\nexport function decodeListId(id: ListIdEnc): ListId {\n  if (!id) {\n    throw new Error('Could not decode list ID: no id given');\n  }\n  const parts = id.split('#');\n  return { node: decodeNodeId(parts[0]), type: ListType[parts[1]] };\n}\n\n/**\n * Encodes a List ID into a string.\n *\n * See {@link encodeNodeId} for more details.\n * @param ld a List ID\n */\nexport function encodeListId(ld: ListId): ListIdEnc {\n  return encodeNodeId(ld.node) + '#' + ListType[ld.type];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Position.html":{"url":"interfaces/Position.html","title":"interface - Position","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Position\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/issue-graph-nodes.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {GraphComponent, GraphInterface} from '@app/data/issue-graph/graph-data';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\n\nexport {\n  IssueNode, ComponentNode, InterfaceNode, IssueGroupContainerNode, RelationEdge,\n  createComponentNode, createInterfaceNode, createIssueGroupContainerNode, createIssueFolderNode,\n  createRelationEdge, createConsumptionEdge, createInterfaceProvisionEdge,\n  Position,\n  getIssueFolderId\n};\n\nexport enum NodeType {\n  Component = 'component',\n  Interface = 'interface',\n  InterfaceConsumer = 'interface-connect',\n  IssueGroupContainer = 'issue-group-container'\n}\n\n/**\n * This file includes type definitions and creation functions (think constructors)\n * for nodes and edges that are added to the graph editor in order to visualize the project.\n * Since the data that is stored with these differs based on what they represent (e.g.\n * interface vs component node) we give each their own type. We do this by extending\n * the Node class or the Edge class of the grapheditor. These classes are instantiated\n * via calls to the contained create* functions within the drawGraph method of the IssueGraphComponent.\n */\n\ninterface IssueNode extends Node {\n  id: string;\n  title: string;\n  issueGroupContainer?: IssueGroupContainerNode;\n}\n\ninterface ComponentNode extends IssueNode {\n  data: GraphComponent;\n}\n\nfunction createComponentNode(component: GraphComponent, position: Position): ComponentNode {\n  return {\n    ...(position || zeroPosition),\n    id: component.id,\n    title: component.name,\n    type: NodeType.Component,\n    data: component\n  };\n}\n\ninterface InterfaceNode extends IssueNode {\n  offeredById: string;\n}\n\nfunction createInterfaceNode(intrface: GraphInterface, position: Position): InterfaceNode {\n  return {\n    ...(position || zeroPosition),\n    id: intrface.id,\n    title: intrface.name,\n    type: NodeType.Interface,\n    offeredById: intrface.offeredBy,\n  };\n}\n\ninterface IssueGroupContainerNode extends Node {\n  position: string;\n  issueGroupNodeIds: Set;\n}\n\nfunction createIssueGroupContainerNode(node: IssueNode): IssueGroupContainerNode {\n  return {\n    id: `${node.id}__issue-group-container`,\n    type: NodeType.IssueGroupContainer,\n    dynamicTemplate: 'issue-group-container',\n    x: 0,\n    y: 0,\n    position: 'bottom',\n    issueGroupNodeIds: new Set(),\n  };\n}\n\ninterface IssueFolderNode extends Node {\n  type: IssueCategory;\n  issueCount: string;\n}\n\nfunction createIssueFolderNode(node: IssueNode, issueCategory: IssueCategory, issueCount: string): IssueFolderNode {\n  return {\n    id: getIssueFolderId(node.id, issueCategory),\n    type: issueCategory,\n    x: 0,\n    y: 0,\n    issues: new Set(),\n    issueCount\n  };\n}\n\ninterface RelationEdge extends Edge {\n  sourceIssues: Set;\n}\n\nfunction createRelationEdge(sourceId: string, targetId: string, edgeType = folderEdgeTypes.RelatedTo): RelationEdge {\n  return {\n    id: `s${sourceId}t${targetId}r${edgeType}`,\n    source: sourceId,\n    target: targetId,\n    type: folderEdgeTypes.RelatedTo,\n    markerEnd: {\n      template: 'arrow',\n      relativeRotation: 0,\n    },\n    dragHandles: [],\n    sourceIssues: new Set()\n  };\n}\n\nfunction createConsumptionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.InterfaceConsumer,\n    markerEnd: {\n      template: 'interface-connector',\n      relativeRotation: 0,\n    },\n  };\n}\n\nfunction createInterfaceProvisionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.Interface,\n    dragHandles: [],\n  };\n}\n\nfunction getIssueFolderId(id: string, issueCategory: IssueCategory): string {\n  return `${id}__${issueCategory}`;\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst zeroPosition = {x: 0, y: 0};\n\nenum folderEdgeTypes {\n  RelatedTo = 'relatedTo',\n  Depends = 'dependency',\n  Duplicates = 'duplicate'\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Positions.html":{"url":"interfaces/Positions.html","title":"interface - Positions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Positions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/issue-graph.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface specifying the content of the graph component local storage\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            issueGroups\n                                        \n                                \n                                \n                                        \n                                            nodes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        issueGroups\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issueGroups:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Positions (north, south, east, west) of the issue groups\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nodes:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Positions of the nodes as the user arranged them\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {AfterViewInit, Component, Input, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {DraggedEdge, Edge, Point} from '@ustutt/grapheditor-webcomponent/lib/edge';\nimport GraphEditor from '@ustutt/grapheditor-webcomponent/lib/grapheditor';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {Rect} from '@ustutt/grapheditor-webcomponent/lib/util';\nimport {BehaviorSubject, ReplaySubject, Subject} from 'rxjs';\nimport {debounceTime, takeUntil} from 'rxjs/operators';\nimport {IssueGraphStateService} from '../../data/issue-graph/issue-graph-state.service';\nimport {IssueGroupContainerBehaviour, IssueGroupContainerParentBehaviour} from './group-behaviours';\nimport {CreateInterfaceDialogComponent} from '@app/dialogs/create-interface-dialog/create-interface-dialog.component';\nimport {StateService} from '@app/state.service';\nimport {CreateInterfaceData} from '../../dialogs/create-interface-dialog/create-interface-dialog.component';\nimport {GraphData} from '../../data/issue-graph/graph-data';\nimport {IssueCategory} from 'src/generated/graphql';\nimport * as issueGraphNodes from './issue-graph-nodes';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {CreateComponentDialogComponent} from '@app/dialogs/create-component-dialog/create-component-dialog.component';\nimport {ComponentStoreService} from '@app/data/component/component-store.service';\nimport {InterfaceStoreService} from '@app/data/interface/interface-store.service';\nimport * as componentContextMenuComponent from '@app/graphs/component-context-menu/component-context-menu.component';\nimport {NodeDetailsType} from '@app/node-details/node-details.component';\nimport {doGraphLayout, LayoutNode} from '@app/graphs/automatic-layout';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport { IssueGraphClassSettersService } from './class-setters/issue-graph-class-setters.service';\nimport { IssueGraphLinkHandlesService } from './link-handles/issue-graph-link-handles.service';\nimport { IssueGraphDynamicTemplateRegistryService } from './dynamic-template-registry/issue-graph-dynamic-template-registry.service';\n\n/**\n * Interface specifying the content of the graph component local storage\n */\ninterface Positions {\n  /** Positions of the nodes as the user arranged them */\n  nodes: { [prop: string]: Point; };\n  /** Positions (north, south, east, west) of the issue groups */\n  issueGroups: { [node: string]: string };\n}\n\n/**\n * This component creates nodes and edges in the embedded MICO GraphEditor\n * (html tag: ) to reflect the data for the current project.\n * This data consists of the project's interfaces, components, issues and their relations and\n * is stored in this.graphData. The key method for this purpose is drawGraph().\n * This component is also responsible for registering event listeners with the GraphEditor.\n */\n@Component({\n  selector: 'app-issue-graph',\n  templateUrl: './issue-graph.component.html',\n  styleUrls: ['./issue-graph.component.css'],\n})\nexport class IssueGraphComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  constructor(private dialog: MatDialog,\n              private gs: IssueGraphStateService,\n              private ss: StateService,\n              private router: Router,\n              private activatedRoute: ActivatedRoute,\n              private componentStoreService: ComponentStoreService,\n              private interfaceStoreService: InterfaceStoreService,\n              private componentContextMenuService: componentContextMenuComponent.ComponentContextMenuService,\n              private breakPointObserver: BreakpointObserver,\n              private issueGraphClassSettersService: IssueGraphClassSettersService,\n              private issueGraphLinkHandlesService: IssueGraphLinkHandlesService,\n              private issueGraphDynamicTemplateRegistryService: IssueGraphDynamicTemplateRegistryService) {\n  }\n\n  // references the graph template\n  @ViewChild('graph', {static: true}) graphWrapper: { nativeElement: GraphEditor; };\n\n  // references the minimap template\n  @ViewChild('minimap', {static: true}) minimap: { nativeElement: GraphEditor; };\n\n  currentVisibleArea: Rect = {x: 0, y: 0, width: 1, height: 1};\n  @Input() projectId: string;\n\n  readonly zeroPosition = {x: 0, y: 0};\n\n  private componentContextMenu: componentContextMenuComponent.ComponentContextMenuComponent;\n  private componentContextMenuNodeId: number | string;\n  private destroy$ = new ReplaySubject(1);\n\n  // reference to the GraphEditor instance of the graph\n  private graph: GraphEditor;\n\n  // contains all data about the projects interfaces, components, issues and their relations\n  // that is needed in order to create nodes and edges in the grapheditor to visualize the project\n  public graphData: GraphData;\n  private graphFirstRender = true;\n\n  // indicates whether graph is initialized\n  private graphInitialized = false;\n  private isHandset = false;\n\n  // contains nodes representing interfaces and components which utilize node groups for display of issue folders\n  private issueGroupParents: Node[] = [];\n\n  // local storage key for positions of graph elements\n  private projectStorageKey: string;\n\n  // The component details page moves the graph sometimes a bit,\n  // so dont move back when closing the component details page\n  private redrawByCloseOfComponentDetails = false;\n\n  // when a new graph state arrives it is passed to the graph\n  // and a graph redraw is issued\n  // (check IssueGraphControlsComponents ngAfterViewInit for more information)\n  public reload$: BehaviorSubject = new BehaviorSubject(null);\n  private reloadOnMouseUp = false;\n\n  // Saved positions of the nodes and the issue groups\n  private savedPositions: Positions = {nodes: {}, issueGroups: {}};\n  // Responsible for saving the node positions to local storage\n  private savePositionsSubject = new Subject();\n\n  // used in the drawGraph method true on first draw and after component creation, effects a zoom to bounding box\n  private zoomOnRedraw = true;\n\n  /**\n   * Gets reference to the MICO GraphEditor instance of the graph and initializes it.\n   */\n  ngAfterViewInit(): void {\n    this.graph = this.graphWrapper.nativeElement;\n    this.initGraph();\n  }\n\n  /**\n   * Sets up a local storage key for graph element positions.\n   */\n  ngOnInit() {\n    this.projectStorageKey = `CCIMS-Project_${this.projectId}`;\n    this.breakPointObserver.observe(Breakpoints.Handset)\n      .subscribe(r => this.isHandset = r.matches);\n  }\n\n  /**\n   * Cancels all subscriptions on component destruction.\n   */\n  ngOnDestroy() {\n    // saves the current zoom details of the graph for when the user comes back to the graph\n    localStorage.setItem(`zoomTransform_${this.projectStorageKey}`,\n      JSON.stringify(this.graph.currentZoomTransform));\n\n    // saves the current bounding box of the graph for when the user comes back to the graph\n    localStorage.setItem(`zoomBoundingBox_${this.projectStorageKey}`,\n      JSON.stringify(this.graph.currentViewWindow));\n\n    this.destroy$.next();\n    this.closeComponentActions();\n  }\n\n  /**\n   * 1) Sets up a subscription for node positions\n   * 2) and initializes the graph.\n   * Also manages:\n   * 3) class setters with the graph editor\n   * that apply css classes based on the edge and node types,\n   * 4) the link handle calculation,\n   * 5) the edge drag behaviour,\n   * 6) the dynamic template registry.\n   * 7) and various event listeners on the graph.\n   */\n  initGraph() {\n    // case: graph already initialized\n    if (this.graphInitialized) {\n      return;\n    }\n\n    // loads saved positions\n    this.savedPositions = this.loadSavedPositions();\n\n    // 1) subscribes to the subject emitting node positions\n    this.subscribeToSubject();\n\n    // 2) initializes the graph\n    this.graphInitialized = true;\n\n    // references to the GraphEditor instance of the graph / minimap\n    const graph: GraphEditor = this.graphWrapper.nativeElement;\n    const minimap: GraphEditor = this.minimap.nativeElement;\n\n    // 3) manages the node / edge class setters\n    this.issueGraphClassSettersService.manageClassSetters(graph, minimap);\n\n    // 4) manages the edge link handles\n    this.issueGraphLinkHandlesService.manageLinkHandles(graph, minimap);\n\n    // 5) manages the edge drag behaviour\n    this.manageDragBehaviour(graph);\n\n    // 6) manages the dynamic template registry\n    this.issueGraphDynamicTemplateRegistryService.manageDynamicTemplateRegistry(graph);\n\n    // 7) manages the event listeners\n    this.manageEventListeners(graph, minimap);\n  }\n\n  /**\n   * Loads positions of graph elements from the local storage.\n   * @returns Parsed positions\n   */\n  private loadSavedPositions(): Positions {\n    // gets data from the local storage\n    const data = localStorage.getItem(this.projectStorageKey);\n\n    // case: there is no data\n    if (data == null) {\n      return {nodes: {}, issueGroups: {}};\n    }\n\n    return JSON.parse(data);\n  }\n\n  /**\n   * Subscribes to the subject emitting node positions.\n   */\n  private subscribeToSubject() {\n    this.savePositionsSubject\n      .pipe(takeUntil(this.destroy$), debounceTime(300))\n      .subscribe(() => {\n        console.log('Setting: ', this.projectStorageKey);\n\n        // case: there are saved positions\n        if (this.savedPositions != null) {\n          const newData = JSON.stringify(this.savedPositions);\n          localStorage.setItem(this.projectStorageKey, newData);\n        }\n      });\n  }\n\n  /**\n   * Manages the edge drag behaviour of given GraphEditor instance.\n   * @param graph Reference to the GraphEditor instance of the graph that is handled.\n   */\n  private manageDragBehaviour(graph: GraphEditor) {\n    // applies functionality for when an edge is created\n    graph.onCreateDraggedEdge = this.onCreateEdge;\n\n    // applies functionality for when an edge is dragged (and its target is changed)\n    graph.onDraggedEdgeTargetChange = this.onDraggedEdgeTargetChanged;\n\n    // applies functionality for when an edge is added\n    graph.addEventListener('edgeadd', this.onEdgeAdd);\n\n    // applies functionality for when an edge is removed\n    graph.addEventListener('edgeremove', this.onEdgeRemove);\n\n    // applies functionality for when an edge is dropped\n    graph.addEventListener('edgedrop', this.onEdgeDrop);\n  }\n\n  /**\n   * Method gets triggered after an edge gets created,\n   * it can either be of type provider or consumer.\n   * @param edge Edge that is handled.\n   */\n  private onCreateEdge = (edge: DraggedEdge) => {\n    const graph: GraphEditor = this.graphWrapper.nativeElement;\n    const sourceNode = graph.getNode(edge.source);\n\n    // case: edge created from an existing edge\n    // => allows deletion or dropping at the same node\n    if (edge.createdFrom != null) {\n      const original = graph.getEdge(edge.createdFrom);\n      edge.validTargets.clear();\n      edge.validTargets.add(original.target.toString());\n      return edge;\n    }\n\n    // case: edge originates from a component\n    if (sourceNode.type === issueGraphNodes.NodeType.Component) {\n      // updates edge properties (no drag handles)\n      edge.type = issueGraphNodes.NodeType.Interface;\n      edge.dragHandles = [];\n\n      // updates valid targets\n      edge.validTargets.clear();\n\n      // updates marker at the end of the edge\n      edge.markerEnd = {\n        template: 'interface-connector-initial',\n        relativeRotation: 0,\n        absoluteRotation: 0\n      };\n\n      // allows only interfaces as targets\n      graph.nodeList.forEach((node) => {\n        if (node.type === issueGraphNodes.NodeType.Interface) {\n          edge.validTargets.add(node.id.toString());\n        }\n      });\n\n      // allows only new targets\n      graph.getEdgesBySource(sourceNode.id).forEach((existingEdge) => {\n        edge.validTargets.delete(existingEdge.target.toString());\n      });\n    }\n\n    return edge;\n  }\n\n  /**\n   * Method gets triggered after an edge gets dragged\n   * and its target is changed:\n   * ex. consumer edge gets moved away from the provider edge.\n   * @param edge Edge that is handled.\n   * @param sourceNode Source of the handled edge.\n   * @param targetNode Target of the handled edge.\n   * @returns Edge that is handled.\n   */\n  private onDraggedEdgeTargetChanged = (\n    edge: DraggedEdge,\n    sourceNode: Node,\n    targetNode: Node\n  ) => {\n    // case: edge originates from a component\n    if (sourceNode.type === issueGraphNodes.NodeType.Component) {\n      // case: target of edge is an interface\n      // => handles edge as of type consumer\n      if (targetNode?.type === issueGraphNodes.NodeType.Interface) {\n\n        // updates edge properties (default drag handle)\n        edge.type = issueGraphNodes.NodeType.InterfaceConsumer;\n        delete edge.dragHandles;\n\n        // updates marker at the end of the edge\n        edge.markerEnd = {\n          template: 'interface-connector',\n          relativeRotation: 0,\n        };\n      }\n      // case: target of edge is not an interface (aka. null)\n      // => handles edge as of type provider\n      else {\n        // updates edge properties (no drag handles)\n        edge.type = issueGraphNodes.NodeType.Interface;\n        edge.dragHandles = [];\n\n        // updates marker at the end of the edge\n        // ? delete edge.markerEnd; ?\n        edge.markerEnd = {\n          template: 'interface-connector-initial',\n          relativeRotation: 0,\n          absoluteRotation: 0\n        };\n      }\n    }\n\n    return edge;\n  }\n\n  /**\n   * Method gets triggered after an edge gets added.\n   * @param event Event that is handled.\n   */\n  private onEdgeAdd = (event: CustomEvent) => {\n    const edge: Edge = event.detail.edge;\n\n    // case: source of event is the API\n    if (event.detail.eventSource === 'API') {\n      return;\n    }\n\n    // case: edge of type interface consumer\n    if (edge.type === issueGraphNodes.NodeType.InterfaceConsumer) {\n\n      // cancels edge creation\n      event.preventDefault();\n\n      // updates the graph via the API\n      const sourceNode = this.graph.getNode(edge.source);\n      const targetNode = this.graph.getNode(edge.target);\n\n      // case: edge has source and target\n      // => adds edge of type interface provider\n      if (sourceNode != null && targetNode != null) {\n        this.gs.addConsumedInterface(sourceNode.id.toString(), targetNode.id.toString()).subscribe(() => this.reload$.next(null));\n      }\n    }\n  }\n\n  /**\n   * Method gets triggered after an edge gets dropped.\n   * @param event Event that is handled.\n   */\n  private onEdgeDrop = (event: CustomEvent) => {\n    const edge: DraggedEdge = event.detail.edge;\n\n    // case: source of event is the API\n    if (event.detail.eventSource === 'API') {\n      return;\n    }\n\n    // case: edge created from an existing edge\n    if (edge.createdFrom != null) {\n      return;\n    }\n\n    // case: edge of type interface\n    // => opens the interface creation dialog\n    if (edge.type === issueGraphNodes.NodeType.Interface) {\n      this.addInterfaceToComponent(event.detail.sourceNode.id, event.detail.dropPosition);\n    }\n  }\n\n  /**\n   * Opens the interface creation dialog. If the user actually creates the interface\n   * it is added to the providing component at the position\n   * where the dragged edge was dropped by the user (before opening the interface creation dialog).\n   * @param offeredById Id of the component that will provide the interface.\n   * @param position Position of the interface.\n   */\n  private addInterfaceToComponent(offeredById: string, position: issueGraphNodes.Position) {\n    // interface data\n    const data: CreateInterfaceData = {\n      position,\n      offeredById\n    };\n\n    // interface dialog reference\n    const createInterfaceDialogRef = this.dialog.open(CreateInterfaceDialogComponent, {\n      data\n    });\n\n    // subscribes ...\n    createInterfaceDialogRef.afterClosed().subscribe((interfaceId) => {\n      this.savedPositions.nodes[interfaceId] = {\n        x: position.x,\n        y: position.y\n      };\n      this.savePositionsSubject.next();\n      this.reload$.next(null);\n    });\n  }\n\n  /**\n   * Method gets triggered after an edge gets removed.\n   * @param event Event that is handled.\n   */\n  private onEdgeRemove = (event: CustomEvent) => {\n    const edge: Edge = event.detail.edge;\n\n    // case: source of event is the API\n    if (event.detail.eventSource === 'API') {\n      return;\n    }\n\n    // case: edge of type interface consumer\n    if (edge.type === issueGraphNodes.NodeType.InterfaceConsumer) {\n\n      // cancels edge deletion\n      event.preventDefault();\n\n      // updates the graph via the API\n      const graph: GraphEditor = this.graphWrapper.nativeElement;\n      const sourceNode = graph.getNode(edge.source);\n      const targetNode = graph.getNode(edge.target);\n\n      // case: edge has source and target\n      // => removes edge of type interface provider\n      if (sourceNode != null && targetNode != null) {\n        this.gs.removeConsumedInterface(sourceNode.id.toString(), targetNode.id.toString()).subscribe(() => this.reload$.next(null));\n      }\n    }\n  }\n\n  /**\n   * Adds event listeners to a given GraphEditor instance.\n   * @param graph Reference to the GraphEditor instance of the graph that is handled.\n   * @param minimap Reference to the GraphEditor instance of the minimap that is handled.\n   */\n  private manageEventListeners(graph: GraphEditor, minimap: GraphEditor) {\n    // applies functionality for when a node is clicked\n    graph.addEventListener('nodeclick', this.onNodeClick);\n\n    // applies functionality for when the position of a node is changed\n    graph.addEventListener('nodepositionchange', (e: CustomEvent) => {\n      if (this.closeComponentActions(false)) {\n        this.reloadOnMouseUp = true;\n      }\n    });\n\n    // TODO: document and extract\n    graph.addEventListener('nodedragend', (event: CustomEvent) => {\n      const node = event.detail.node;\n      if (node.type === issueGraphNodes.NodeType.IssueGroupContainer) {\n        this.savedPositions.issueGroups[node.id] = node.position;\n      }\n\n      // store node positioning information\n      this.savedPositions.nodes[node.id] = {\n        x: node.x,\n        y: node.y,\n      };\n      this.savePositionsSubject.next();\n      if (this.reloadOnMouseUp) {\n        this.reloadOnMouseUp = false;\n        this.zoomOnRedraw = false;\n        this.reload();\n      }\n    });\n\n    // applies functionality for when a node is added to the minimap\n    graph.addEventListener('nodeadd', (event: CustomEvent) => {\n      if (event.detail.node.type === issueGraphNodes.NodeType.IssueGroupContainer) {\n        return;\n      }\n      const node = event.detail.node;\n      minimap.addNode(node);\n    });\n\n    // applies functionality for when a node is removed from the minimap\n    graph.addEventListener('noderemove', (event: CustomEvent) => {\n      const node = event.detail.node;\n      if (event.detail.node.type !== issueGraphNodes.NodeType.IssueGroupContainer) {\n        minimap.removeNode(node);\n      }\n    });\n\n    // applies functionality for when an edge is added to the minimap\n    graph.addEventListener('edgeadd', (event: CustomEvent) => {\n      minimap.addEdge(event.detail.edge);\n    });\n\n    // applies functionality for when an edge is removed from the minimap\n    graph.addEventListener('edgeremove', (event: CustomEvent) => {\n      minimap.removeEdge(event.detail.edge);\n    });\n\n    // applies functionality for when the minimap is rendered\n    graph.addEventListener('render', this.onMinimapRender(minimap));\n\n    // Close the component context menu when clicking anywhere in the graph\n    graph.addEventListener('click', (e) => this.closeComponentActions());\n\n    // applies functionality for when the zoom is changed\n    graph.addEventListener('zoomchange', (event: CustomEvent) => {\n      this.currentVisibleArea = event.detail.currentViewWindow;\n      if (!this.componentContextMenu) {\n        return;\n      }\n\n      // Update component context menu position when zoom changed\n      const node = this.graph.getNode(this.componentContextMenuNodeId);\n      const [x, y] = this.graph.currentZoomTransform.apply([node.x, node.y]);\n      this.componentContextMenu.updatePosition(Math.max(x, 0), Math.max(y, 0));\n    });\n  }\n\n  /**\n   * Method gets triggered after a node is clicked.\n   * @param event Event that is handled.\n   */\n  private onNodeClick = (event: CustomEvent) => {\n    // cancels node selection\n    event.preventDefault();\n\n    const node: Node = event.detail.node;\n\n    // Close existing context menu if the user clicked twice on the same node\n    if (this.componentContextMenu && this.componentContextMenu.data.nodeId === node.id) {\n      this.closeComponentActions();\n      return;\n    }\n\n    // Close context menu if one is already open\n    this.closeComponentActions();\n\n    // doesn't allow the view of the graph to change after the Details page has been closed\n    this.redrawByCloseOfComponentDetails = true;\n\n    // Open the details in a new page if a phone is used or if shift is pressed\n    if (event.detail.sourceEvent.shiftKey || this.isHandset) {\n      // case: node of type Component\n      // => opens View Component page\n      if (node.type === issueGraphNodes.NodeType.Component) {\n        this.router.navigate(['./component/', node.id], {relativeTo: this.activatedRoute.parent});\n        return;\n      }\n\n      // case: node of type Interface\n      // => opens View Interface page\n      if (node.type === issueGraphNodes.NodeType.Interface) {\n        this.router.navigate(['./interface/', node.id], {relativeTo: this.activatedRoute.parent});\n        return;\n      }\n    } else {\n      // sets the context menu type\n      const contextMenuType = this.contextMenuTypeForNodeType(node);\n\n      // case: context menu has a type\n      if (contextMenuType != null) {\n        this.nodeClickContextMenuHasType(node, event, contextMenuType);\n        return;\n      }\n    }\n\n    // case: clicked issue folder\n    // => determines issue count, opens corresponding issue page\n    this.nodeClickIssueFolder(node);\n  }\n\n  /**\n   * Sets the context menu type.\n   * @param node Node that is handled.\n   */\n  private contextMenuTypeForNodeType(node: Node): NodeDetailsType {\n    // case: node of type Component\n    // => sets the context menu type as Component\n    if (node.type === issueGraphNodes.NodeType.Component) {\n      return NodeDetailsType.Component;\n    }\n\n    // case: node of type Interface\n    // => sets the context menu type as Interface\n    if (node.type === issueGraphNodes.NodeType.Interface) {\n      return NodeDetailsType.Interface;\n    }\n\n    return null;\n  }\n\n  /**\n   * Open the component context menu\n   * @param node Node that is handled\n   * @param event Event that is handled\n   * @param contextMenuType Type of the context menu that is handled\n   */\n  private nodeClickContextMenuHasType(node: Node, event: CustomEvent, contextMenuType: NodeDetailsType) {\n    // Transform the node graph coordinates to screen coordinates\n    const [x, y] = this.graph.currentZoomTransform.apply([node.x, node.y]);\n\n    // Only open the dialog if it will fit into view\n    if (x >= 0 && y >= 0) {\n      this.componentContextMenuNodeId = node.id;\n\n      // Cancel the click event that would otherwise close the dialog again\n      event.detail.sourceEvent.stopImmediatePropagation();\n\n      this.componentContextMenu =\n        this.componentContextMenuService.open(\n          this.graphWrapper.nativeElement,\n          x,\n          y,\n          this.projectId,\n          node.id.toString(),\n          contextMenuType,\n          this);\n\n      // Make sure that the context menu is visible if it extends over the right/bottom edge\n      const visible = this.graph.currentViewWindow;\n      const scale = this.graph.currentZoomTransform.k;\n      // FIXME: this isn't ideal, as the padding is somewhat dependent on the aspect ratio\n      const padding = 85 / scale;\n      const edgeX = visible.width * scale;\n      const edgeY = visible.height * scale;\n      const moveX = Math.max(0, this.componentContextMenu.width + x - edgeX) / scale;\n      const moveY = Math.max(0, this.componentContextMenu.height + y - edgeY) / scale;\n\n      // case: Zoom has to change to make overlay visible\n      if (moveX || moveY) {\n        this.graph.zoomToBox({\n          x: visible.x + moveX + padding, y: visible.y + moveY + padding,\n          width: visible.width - 2 * padding, height: visible.height - 2 * padding\n        });\n      }\n    }\n  }\n\n  /**\n   * Handles the case in which an issue folder is clicked.\n   * Determines the number of issues in the issue folder\n   * and opens the corresponding issue page.\n   * @param node Issue folder that is handled.\n   */\n  private nodeClickIssueFolder(node: Node) {\n    // case: clicked issue folder\n    // => determines issue count, opens corresponding issue page\n    if (node.type === 'BUG' || node.type === 'UNCLASSIFIED' || node.type === 'FEATURE_REQUEST') {\n\n      // reference to the GraphEditor instance of the graph, the root ID and the root node\n      const graph: GraphEditor = this.graphWrapper.nativeElement;\n      const rootId = graph.groupingManager.getTreeRootOf(node.id);\n      const rootNode = graph.getNode(rootId);\n\n      // case: only one issue inside the clicked issue folder\n      // => opens Issue Details page\n      if (node.issueCount === 1) {\n        this.nodeClickOneIssue(rootId, rootNode, node);\n        return;\n      }\n\n      // case: many issues inside the clicked issue folder\n      // => opens Component Issues / Interface Issues page\n      else {\n        this.nodeClickManyIssues(rootNode);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Handles the case in which the clicked issue folder contains only one issues.\n   * @param rootNode Root node that is handled.\n   * @param rootId Root id that is handled.\n   * @param node Clicked node that is handled.\n   */\n  private nodeClickOneIssue(rootId: string, rootNode: Node, node: Node) {\n    // case: root node of type Component\n    // => handles a single component issue, opens its Issue Details page\n    if (rootNode.type === issueGraphNodes.NodeType.Component) {\n      this.componentStoreService.getFullComponent(rootId).subscribe(component => {\n        const currentIssueId = this.extractIssueId(component.node.issues.nodes, node.type);\n        this.router.navigate(['./', 'issues', currentIssueId], { relativeTo: this.activatedRoute.parent });\n      });\n    }\n\n    // case: root node of type Interface\n    // => handles a single interface issue, opens its Issue Details page\n    else if (rootNode.type === issueGraphNodes.NodeType.Interface) {\n      this.interfaceStoreService.getInterface(rootId).subscribe(interfaceComponent => {\n        const currentIssueId = this.extractIssueId(interfaceComponent.node.issuesOnLocation.nodes, node.type);\n        this.router.navigate(['./', 'issues', currentIssueId], { relativeTo: this.activatedRoute.parent });\n      });\n    }\n  }\n\n  /**\n   * Extracts the id of an issue in a given issue list.\n   * @param issueList Ids of the issues that are handled.\n   * @param category Category of issues that are handled.\n   * @returns Id of the first issue (in the issue list) with matching category.\n   */\n  private extractIssueId(issueList, category: string): string {\n    for (const issue of issueList) {\n      if (issue.category === category) {\n        return issue.id;\n      }\n    }\n  }\n\n  /**\n   * Handles the case in which the clicked issue folder contains many issues.\n   * @param rootNode Root node that is handled.\n   */\n  private nodeClickManyIssues(rootNode: Node) {\n    // case: root node of type Component\n    // => handles many component issues, opens their Component Issues page\n    if (rootNode.type === issueGraphNodes.NodeType.Component) {\n      this.router.navigate(['./component/', rootNode.id], { relativeTo: this.activatedRoute.parent });\n    }\n\n    // case: root node of type Interface\n    // => handles many interface issues, opens their Interface Issues page\n    if (rootNode.type === issueGraphNodes.NodeType.Interface) {\n      this.router.navigate(['./interface/', rootNode.id], { relativeTo: this.activatedRoute.parent });\n    }\n  }\n\n  /**\n   * Closes the component context menu, if one is open\n   * @param reload If true, reloads the graph if a context menu was closed\n   */\n  private closeComponentActions(reload: boolean = true): boolean {\n    // case: there are actions to close\n    if (this.componentContextMenu) {\n      // case: redraw of the graph needed\n      // => issues redraw\n      if (reload) {\n        this.reload();\n      }\n\n      // cancels component actions\n      this.componentContextMenu.close();\n      this.componentContextMenu = null;\n      this.componentContextMenuNodeId = null;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Issues a redraw of the graph. ?\n   */\n  public reload(): void {\n    this.reload$.next(null);\n  }\n\n  /**\n   * Method gets triggered when the minimap renders.\n   * @param minimap Minimap that is handled.\n   */\n  private onMinimapRender(minimap: GraphEditor): EventListenerOrEventListenerObject {\n    return (event: CustomEvent) => {\n      // case: renders the minimap completely\n      if (event.detail.rendered === 'complete') {\n        minimap.completeRender();\n        minimap.zoomToBoundingBox();\n      }\n\n      // case: renders texts\n      else if (event.detail.rendered === 'text') {\n        // irrelevant for the minimap\n      }\n\n      // case: renders node classes\n      else if (event.detail.rendered === 'classes') {\n        minimap.updateNodeClasses();\n      }\n\n      // case: renders node positions\n      else if (event.detail.rendered === 'positions') {\n        minimap.updateGraphPositions();\n        minimap.zoomToBoundingBox();\n      }\n    };\n  }\n\n  /**\n   * Responsible for drawing the graph based on this.graphData.\n   * Takes care of adding interfaces and components, and their connections.\n   * Additionally adds issue folders attached to each component and the dashed edges\n   * between them based on this.graphData.relatedFolders\n   */\n  drawGraph() {\n    const boundingBox = this.calculateBoundingBox();\n    // reset graph and remove all elements, gives us clean slate\n    this.resetGraph();\n\n    const layoutGraph = Object.keys(this.savedPositions.nodes).length === 0;\n    // create nodes corresponding to the components and interfaces of the project\n    const componentNodes = Array.from(this.graphData.components.values()).map(component =>\n      issueGraphNodes.createComponentNode(component, this.findIdealComponentPosition(component.id, boundingBox)));\n    const interfaceNodes = Array.from(this.graphData.interfaces.values()).map(\n      intrface => issueGraphNodes.createInterfaceNode(intrface, this.savedPositions.nodes[intrface.id]));\n    // issueNodes contains BOTH componentNodes and interfaceNodes\n    const issueNodes = (componentNodes as issueGraphNodes.IssueNode[]).concat(interfaceNodes as issueGraphNodes.IssueNode[]);\n    // For components AND interfaces: add the edges, issue folders and relations between folders\n    issueNodes.forEach(node => {\n      this.graph.addNode(node);\n      this.addIssueFolders(node);\n      this.drawFolderRelations(node);\n    });\n    // ONLY for interfaces: create edges connecting interface to offering component and consuming components to interface\n    interfaceNodes.forEach(interfaceNode => {\n      this.connectToOfferingComponent(interfaceNode);\n      this.connectConsumingComponents(interfaceNode);\n    });\n\n    // render all changes\n    this.graph.completeRender();\n    this.setGraphToLastView();\n    if (layoutGraph && issueNodes.length > 0) {\n      this.layoutGraph();\n      this.drawGraph();\n    }\n  }\n\n  /**\n   * Resets graph state. Called at start of draw(). Enables logic in draw()\n   * to assume a 'blank sheet' state avoiding complex updating logic.\n   */\n  resetGraph() {\n    this.graph.edgeList = [];\n    this.graph.nodeList = [];\n    this.issueGroupParents = [];\n    this.graph.groupingManager.clearAllGroups();\n  }\n\n  /**\n   * Finds the ideal component position if none is saved.\n   * @param id Id of component that is handled.\n   * @param boundingBox Bounding box of the component that is handled.\n   */\n  findIdealComponentPosition(id: string, boundingBox: Rect): Point {\n\n    // saved position\n    const saved = this.savedPositions.nodes[id];\n\n    // case: there is a saved position\n    // => return it\n    if (saved) {\n      return saved;\n    }\n\n    // calculates the ideal position\n    const point = {x: 0, y: 0};\n    if (boundingBox) {\n      point.x = boundingBox.x + boundingBox.width + 60;\n      point.y = boundingBox.y + boundingBox.height / 2;\n    }\n\n    // saves the ideal position\n    this.savedPositions.nodes[id] = point;\n\n    return point;\n  }\n\n  /**\n   * Creates and adds an edge between the node representing a component\n   * an the node representing the interface itself.\n   * @param node - Interface that is handled.\n   */\n  connectToOfferingComponent(node: issueGraphNodes.InterfaceNode) {\n    this.graph.addEdge(issueGraphNodes.createInterfaceProvisionEdge(node.offeredById, node.id));\n  }\n\n  /**\n   * Adds an edge from each connected component to the interface.\n   * @param interfaceNode - Interface (visualized by lollipop notation) that is handled.\n   */\n  connectConsumingComponents(interfaceNode: issueGraphNodes.InterfaceNode) {\n    for (const consumerId of this.graphData.interfaces.get(interfaceNode.id).consumedBy) {\n      this.graph.addEdge(issueGraphNodes.createConsumptionEdge(consumerId, interfaceNode.id));\n    }\n  }\n\n  /**\n   * Adds the issue folders with counts for each IssueCategory (currently 3)\n   * to the component or interface represented by node. The first methods call\n   * sets up invisible nodes in the graph to make the folders display properly.\n   * The second method takes care of actually adding the visible folders with\n   * the correct counts.\n   * @param node - Interface / component that is handled.\n   */\n  private addIssueFolders(node: issueGraphNodes.IssueNode) {\n    this.addIssueGroupContainer(node);\n    this.addIssueFolderNodes(node);\n  }\n\n  /**\n   * Creates the node groups necessary for displaying issue folders attached to a node.\n   * A Node represents a component or an interface.\n   * It also gets an issue group of IssueGroupContainerParentBehaviour,\n   * issueGroupContainerNode with IssueGroupContainerBehaviour gets added to it.\n   * This corresponds to the 4 'Grouping Manager' object\n   * on the upper two levels in the graph_structure_documentation.png.\n   * @param node - Node (component or interface) which can have issue folders attached.\n   */\n  private addIssueGroupContainer(node: issueGraphNodes.IssueNode) {\n    const gm = this.graph.groupingManager;\n    gm.markAsTreeRoot(node.id);\n    const issueGroupContainerNode = issueGraphNodes.createIssueGroupContainerNode(node);\n    const initialPosition = this.savedPositions.issueGroups[issueGroupContainerNode.id];\n    gm.setGroupBehaviourOf(\n      node.id,\n      new IssueGroupContainerParentBehaviour(initialPosition)\n    );\n\n    // the issueGroupContainerNode has no visual representation but contains the visible issue folders\n    node.issueGroupContainer = issueGroupContainerNode;\n    this.graph.addNode(issueGroupContainerNode);\n    gm.addNodeToGroup(node.id, issueGroupContainerNode.id);\n    gm.setGroupBehaviourOf(\n      issueGroupContainerNode.id,\n      new IssueGroupContainerBehaviour()\n    );\n    this.issueGroupParents.push(node);\n  }\n\n  /**\n   * This method presumes that node has the 4 'Grouping Manager Objects'\n   * depicted on the the upper levels in the graph_structure_documentation.png.\n   * correctly setup.\n   * @param node Interface / component that is handled.\n   */\n  private addIssueFolderNodes(node: issueGraphNodes.IssueNode) {\n    // get mapping from IssueCategory to number for the component or interface represented by node\n    const issueCounts = this.graphData.graphLocations.get(node.id).issues;\n    // iterate over issue categories and create a node if there is at least one issue of it\n    Object.keys(IssueCategory).forEach(key => {\n      const issueCategory = IssueCategory[key];\n      if (issueCounts.has(issueCategory)) {\n        const count = issueCounts.get(issueCategory);\n        // only show folders for issue categories with at least one issue\n        if (count > 0) {\n          const issueFolderNode = issueGraphNodes.createIssueFolderNode(node, issueCategory, count.toString());\n          this.graph.addNode(issueFolderNode);\n          this.graph.groupingManager.addNodeToGroup(node.issueGroupContainer.id, issueFolderNode.id);\n        }\n      }\n    });\n  }\n\n  /**\n   * Draws folder relations originating from the issue folder represented by node.\n   * @param node - Issue folder (for issues of a certain type) that is handled.\n   */\n  private drawFolderRelations(node: issueGraphNodes.IssueNode) {\n    // @ts-ignore\n    const folderNodes: IssueFolderNode[] = Array.from(node.issueGroupContainer.issueGroupNodeIds).map(\n      (id: string) => this.graph.getNode(id));\n    for (const folderNode of folderNodes) {\n      const relatedFolders = this.graphData.relatedFolders.getValue([node.id.toString(), folderNode.type]);\n      for (const relatedFolder of relatedFolders) {\n        const [issueNodeId, category] = relatedFolder;\n        const edge = issueGraphNodes.createRelationEdge(folderNode.id, issueGraphNodes.getIssueFolderId(issueNodeId, category));\n        this.graph.addEdge(edge);\n      }\n    }\n  }\n\n  /**\n   * Sets the view and the bounding box of the graph to how it was when the user left the graph with the help of localStorage.\n   * When theres no previous session available set the view to the optimized bounding box for the graph.\n   */\n  private setGraphToLastView() {\n    // The previous currentViewWindow of the graph as JSON string\n    const previousBoundingBoxAsString = localStorage.getItem(`zoomBoundingBox_${this.projectStorageKey}`);\n    // The previous zoomTransform of the graph as JSON string\n    const zoomTransformAsString = localStorage.getItem(`zoomTransform_${this.projectStorageKey}`);\n    // Only set the bounding box to the optimized bounding box for the graph when creating the first component\n    const firstComponent = this.graphData.components.size === 1 ? true : false;\n\n    // Set the bounding box to the bounding box of the last session or to the optimized bounding box if there wasnt a last session\n    if ((JSON.parse(previousBoundingBoxAsString) !== null) && (JSON.parse(zoomTransformAsString) !== null) && this.graphFirstRender\n      && !this.redrawByCloseOfComponentDetails && !firstComponent) {\n      const previousBoundingBox = JSON.parse(previousBoundingBoxAsString);\n      /* These calculations are necessary because of how GraphEditor.zoomToBox(box: Rect) works. GraphEditor.zoomToBox zooms to\n      the given box and adds some padding.These calculations get rid of the padding. Otherwise the padding would be added to the graph\n       with every execution of the setGraphToLastView() method. */\n      previousBoundingBox.width = previousBoundingBox.width * 0.9;\n      previousBoundingBox.height = previousBoundingBox.height * 0.9;\n      // Difference between Rect.x that is given into the GraphEdit.zoomToBox(box: Rect) method and the resulting Rect.x\n      const paddingX = 57.75 / JSON.parse(zoomTransformAsString).k;\n      // Difference between Rect.y that is given into the GraphEdit.zoomToBox(box: Rect) method and the resulting Rect.y\n      const paddingY = 17.2 / JSON.parse(zoomTransformAsString).k;\n      previousBoundingBox.x = previousBoundingBox.x + paddingX;\n      previousBoundingBox.y = previousBoundingBox.y + paddingY;\n      this.graph.zoomToBox(previousBoundingBox);\n      this.graphFirstRender = false;\n    }\n    // Zoom to the optimized bounding box if no graph view is stored from the last session or when the first component is created\n    else if ((this.zoomOnRedraw && !this.redrawByCloseOfComponentDetails) || firstComponent) {\n      this.fitGraphInView();\n      this.zoomOnRedraw = false;\n    }\n  }\n\n  /**\n   * Fits the graph into view.\n   */\n  fitGraphInView(): void {\n    // calculates the bounding box of the view\n    const rect = this.calculateBoundingBox();\n\n    // case: bounding box is calculated\n    // => zoom to bounding box\n    if (rect) {\n      this.graph.zoomToBox(rect);\n    }\n  }\n\n  /**\n   * Calculates the bounding box of the view.\n   * @returns The calculated bounding box.\n   */\n  calculateBoundingBox(): Rect {\n    const componentSize = {width: 100, height: 60};\n    const interfaceSize = {width: 14, height: 14};\n    const issueContainerSize = {width: 40, height: 30};\n\n    // calculates bounding box\n    let rect = null;\n    for (const node of this.graph.nodeList) {\n      let size;\n      if (node.type === issueGraphNodes.NodeType.Component) {\n        size = componentSize;\n      } else if (node.type === issueGraphNodes.NodeType.Interface || node.type === issueGraphNodes.NodeType.InterfaceConsumer) {\n        size = interfaceSize;\n      } else if (node.type === issueGraphNodes.NodeType.IssueGroupContainer) {\n        if (node.issueGroupNodeIds.size === 0) {\n          // irrelevant for empty issue group containers\n          continue;\n        }\n\n        size = issueContainerSize;\n      } else {\n        continue;\n      }\n\n      const nodeX = node.x - size.width / 2;\n      const nodeY = node.y - size.height / 2;\n\n      if (rect === null) {\n        rect = {xMin: nodeX, yMin: nodeY, xMax: nodeX + size.width, yMax: nodeY + size.height};\n      } else {\n        rect.xMin = Math.min(nodeX, rect.xMin);\n        rect.yMin = Math.min(nodeY, rect.yMin);\n\n        rect.xMax = Math.max(nodeX + size.width, rect.xMax);\n        rect.yMax = Math.max(nodeY + size.height, rect.yMax);\n      }\n    }\n\n    return rect ? {x: rect.xMin, y: rect.yMin, width: rect.xMax - rect.xMin, height: rect.yMax - rect.yMin} : null;\n  }\n\n  /**\n   * Handles the layour graph.\n   */\n  layoutGraph(): void {\n    const nodes = new Map();\n\n    for (const node of this.graph.nodeList) {\n      if (node.type === issueGraphNodes.NodeType.Component || node.type === issueGraphNodes.NodeType.Interface) {\n        nodes.set(node.id, new LayoutNode(node.id, node.x, node.y, node.type));\n      }\n    }\n\n    for (const edge of this.graph.edgeList) {\n      if (nodes.has(edge.source) && nodes.has(edge.target)) {\n        nodes.get(edge.source).connectTo(nodes.get(edge.target));\n        nodes.get(edge.target).connectTo(nodes.get(edge.source));\n      }\n    }\n\n    const nodeList = Array.from(nodes.values());\n    doGraphLayout(nodeList);\n\n    for (const node of nodeList) {\n      const layoutNode = nodes.get(node.id);\n      this.savedPositions.nodes[layoutNode.id] = {x: layoutNode.position.x, y: layoutNode.position.y};\n    }\n\n    this.savePositionsSubject.next();\n  }\n\n  /**\n   * Sets --show-relations css variable to initial or none. It is the value\n   * of the display attribute of the edges. If we set it to none the edges disappear.\n   * @param showRelations - Boolean derived from the setting of the switch slider for relation edges above the graph.\n   */\n  setRelationVisibility(showRelations: boolean) {\n    this.graph.getSVG().style('--show-relations', showRelations ? 'initial' : 'none');\n  }\n\n  /**\n   * Opens create component dialog and triggers reload of data after the dialog is closed.\n   */\n  public openCreateComponentDialog(): void {\n    const createComponentDialogRef = this.dialog.open(CreateComponentDialogComponent, {\n      data: {projectId: this.projectId}\n    });\n    createComponentDialogRef.afterClosed().subscribe(componentInformation => {\n      this.zoomOnRedraw = false;\n      this.reload$.next(null);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileSettingsDialogComponent.html":{"url":"components/ProfileSettingsDialogComponent.html","title":"component - ProfileSettingsDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileSettingsDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile-settings-dialog\n            \n\n            \n                styleUrls\n                ./profile-settings-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile-settings-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                hide\n                            \n                            \n                                updatePasswordFieldsShown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cancel\n                            \n                            \n                                    Public\n                                changePassword\n                            \n                            \n                                    Public\n                                goBackToSettings\n                            \n                            \n                                projectNameEdited\n                            \n                            \n                                    Public\n                                updatePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        cancel\n                        \n                    \n                \n            \n            \n                \n                    \n                    cancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        changePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    changePassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        goBackToSettings\n                        \n                    \n                \n            \n            \n                \n                    \n                    goBackToSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectNameEdited\n                        \n                    \n                \n            \n            \n                \nprojectNameEdited(saved: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    saved\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePasswordFieldsShown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { SettingsDialogComponent } from '../settings-dialog/settings-dialog.component';\n\n@Component({\n  selector: 'app-profile-settings-dialog',\n  templateUrl: './profile-settings-dialog.component.html',\n  styleUrls: ['./profile-settings-dialog.component.scss']\n})\nexport class ProfileSettingsDialogComponent implements OnInit {\n\n  hide = true;\n  updatePasswordFieldsShown = false;\n  description = '';\n\n  constructor(public dialogRef: MatDialogRef, private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n\n  //go one step back (to the settings menu)\n  public goBackToSettings() {\n    this.dialogRef.close();\n    this.dialog.open(SettingsDialogComponent);\n  }\n\n  //TODO\n  public changePassword() {\n    this.updatePasswordFieldsShown = true;\n  }\n\n  //TODO\n  public cancel() {\n    this.updatePasswordFieldsShown = false;\n  }\n\n  //TODO\n  public updatePassword() {\n    this.updatePasswordFieldsShown = false;\n  }\n\n  projectNameEdited(saved: boolean): void {\n    if (!saved) {\n      return;\n    }\n\n    alert('TODO: Save');\n  }\n}\n\n    \n\n    \n        \n\n    \n        arrow_back_ios\n        Back\n    \n    Profile Settings\n    \n    \n\n    \n    \n    \n\n    \n        Change Password\n    \n\n    \n\n    \n    \n\n        \n        \n            Enter old password\n            \n            \n                {{hide ? 'visibility_off' : 'visibility'}}\n            \n        \n\n        \n        \n            Enter new password\n            \n            \n                {{hide ? 'visibility_off' : 'visibility'}}\n            \n        \n\n        \n            Update Password\n        \n\n        \n            Cancel\n        \n\n    \n\n\n\n    \n\n    \n                \n                    ./profile-settings-dialog.component.scss\n                \n                .dialog{\n    width: 500px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            arrow_back_ios        Back        Profile Settings                                Change Password                                            Enter old password                                        {{hide ? \\'visibility_off\\' : \\'visibility\\'}}                                                Enter new password                                        {{hide ? \\'visibility_off\\' : \\'visibility\\'}}                                        Update Password                            Cancel            '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProfileSettingsDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectHeaderComponent.html":{"url":"components/ProjectHeaderComponent.html","title":"component - ProjectHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-header/project-header.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays the name and the id of a project\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-header\n            \n\n            \n                styleUrls\n                ./project-header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                projectId\n                            \n                            \n                                projectName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-header/project-header.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        projectName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-header/project-header.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\n\n/**\n * This component displays the name and the id of a project\n */\n@Component({\n  selector: 'app-project-header',\n  templateUrl: './project-header.component.html',\n  styleUrls: ['./project-header.component.scss']\n})\nexport class ProjectHeaderComponent {\n  @Input() projectName: string;\n  @Input() projectId: string;\n}\n\n\n    \n\n    \n        \n  \n  \n\n  \n    {{projectName}}\n    Project ID: {{projectId}}\n  \n\n\n    \n\n    \n                \n                    ./project-header.component.scss\n                \n                .project-title-row {\n  align-items: center;\n  width: fit-content;\n}\n\n.icon {\n  float: left;\n  vertical-align: top;\n  margin-right: 5px;\n  max-height: 64px;\n  max-width: 64px;\n}\n\n.content {\n  float: left;\n}\n\n.title, .sub-title {\n  margin: 0;\n  padding: 3px 10px 3px 0;\n}\n\n.title {\n  font-size: 17px;\n  font-weight: bold;\n}\n\n.sub-title {\n  font-weight: bold;\n  color: #3F3F3F;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{projectName}}    Project ID: {{projectId}}  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProjectHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectIssueListComponent.html":{"url":"components/ProjectIssueListComponent.html","title":"component - ProjectIssueListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectIssueListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-issue-list/project-issue-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is displayed when clicking on issues on the sidebar.\nIt contains the IssueHeaderComponent and the IssueListComponent.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-issue-list\n            \n\n            \n                styleUrls\n                ./project-issue-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-issue-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                issueListId\n                            \n                            \n                                    Public\n                                project$\n                            \n                            \n                                    Public\n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/project-issue-list/project-issue-list.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                for retrieving the id of the project through the url\n\n                                                        \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                for connection to API\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issueListId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ListId\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-issue-list/project-issue-list.component.ts:24\n                        \n                    \n\n            \n                \n                    ID of the list which is shown in the IssueListComponent\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataNode\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-issue-list/project-issue-list.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-issue-list/project-issue-list.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ListId, ListType, NodeType } from '@app/data-dgql/id';\nimport { DataNode } from '@app/data-dgql/query';\nimport { Project } from '../../generated/graphql-dgql';\nimport DataService from '@app/data-dgql';\n\n/**\n * This component is displayed when clicking on issues on the sidebar.\n * It contains the IssueHeaderComponent and the IssueListComponent.\n */\n@Component({\n  selector: 'app-project-issue-list',\n  templateUrl: './project-issue-list.component.html',\n  styleUrls: ['./project-issue-list.component.scss']\n})\nexport class ProjectIssueListComponent implements OnInit {\n\n  public projectId: string;\n  public project$: DataNode;\n  /**\n   * ID of the list which is shown in the IssueListComponent\n   */\n  public issueListId: ListId;\n\n  /**\n   * @param route for retrieving the id of the project through the url\n   * @param dataService for connection to API\n   */\n  constructor(private route: ActivatedRoute, private dataService: DataService) { }\n\n  ngOnInit(): void {\n    this.projectId = this.route.snapshot.paramMap.get('id');\n    const node = { type: NodeType.Project, id: this.projectId };\n    this.project$ = this.dataService.getNode(node);\n    this.issueListId = { node, type: ListType.Issues };\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n\n\n    \n\n    \n                \n                    ./project-issue-list.component.scss\n                \n                .center-horizontal{\n  width: 100%;\n  text-align: center;\n  margin-top: 15px;\n}\n.project-title-row {\n  width: 100%;\n  margin-bottom: 12px;\n  align-items: center;\n  height: 85px;\n}\n.box {\n  float: left;\n  //display: inline-block;\n  vertical-align: top;\n  width: 85px;\n  height: auto;\n  margin-right: 5px;\n}\n.content {\n  //display: inline-block;\n  float: left;\n\n}\n.title, .sub-title {\n  margin: 0;\n  padding: 3px 10px 3px 0;\n}\n.title {\n  font-size: 17px;\n  font-weight: bold;\n}\n.sub-title {\n  font-weight: bold;\n  color: #3F3F3F;\n}\n\nimg {\n  width:100%;\n}\n\n.pagefill {\n  width: 100%;\n  height: 300px;\n}\n.margin-left-top {\n  margin-top: 3px;\n  margin-left: 3px;\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProjectIssueListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectListComponent.html":{"url":"components/ProjectListComponent.html","title":"component - ProjectListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-list-component/project-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is the landing page for the user after loggin in to the system\nIt shows a list of all projects the user can access\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-list\n            \n\n            \n                styleUrls\n                ./project-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lastQueriedProjectName\n                            \n                            \n                                loading\n                            \n                            \n                                pendingCreate\n                            \n                            \n                                projectName\n                            \n                            \n                                projects\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                changeColour\n                            \n                            \n                                    Public\n                                nothing\n                            \n                            \n                                    Public\n                                openCreateProjectDialog\n                            \n                            \n                                    Public\n                                reloadProjects\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(projectStore: ProjectStoreService, dialog: MatDialog, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/project-list-component/project-list.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectStore\n                                                  \n                                                        \n                                                                        ProjectStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        changeColour\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeColour()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-list-component/project-list.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        nothing\n                        \n                    \n                \n            \n            \n                \n                    \n                    nothing(e: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-list-component/project-list.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openCreateProjectDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    openCreateProjectDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-list-component/project-list.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        reloadProjects\n                        \n                    \n                \n            \n            \n                \n                    \n                    reloadProjects()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-list-component/project-list.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        lastQueriedProjectName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-list-component/project-list.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-list-component/project-list.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pendingCreate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/project-list-component/project-list.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/project-list-component/project-list.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projects\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Pick[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/project-list-component/project-list.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {CreateProjectDialogComponent} from 'src/app/dialogs/create-project-dialog/create-project-dialog.component';\nimport {Project} from 'src/generated/graphql';\nimport {ProjectStoreService} from '../data/project/project-store.service';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\n\n/**\n * This component is the landing page for the user after loggin in to the system\n * It shows a list of all projects the user can access\n */\n@Component({\n  selector: 'app-project-list',\n  templateUrl: './project-list.component.html',\n  styleUrls: ['./project-list.component.scss']\n})\nexport class ProjectListComponent implements OnInit {\n  pendingCreate = false;\n  projectName = '';\n  lastQueriedProjectName: string;\n  projects: Pick[] = [];\n  loading: boolean;\n\n  constructor(private projectStore: ProjectStoreService,\n              private dialog: MatDialog,\n              private notify: UserNotifyService) {\n  }\n\n  ngOnInit(): void {\n    // get all projects from the database\n    this.reloadProjects();\n  }\n\n  public reloadProjects(): void {\n    if (this.lastQueriedProjectName === this.projectName && this.lastQueriedProjectName) {\n      return;\n    }\n\n    this.loading = true;\n    this.projectStore.getAll(this.projectName).subscribe(projects => {\n      this.loading = false;\n      this.projects = projects;\n      this.lastQueriedProjectName = this.projectName;\n    }, error => {\n      this.loading = false;\n      this.notify.notifyError('Failed to load projects', error);\n    });\n  }\n\n  public openCreateProjectDialog(): void {\n    const createProjectDialogRef = this.dialog.open(CreateProjectDialogComponent);\n    createProjectDialogRef.afterClosed().subscribe(result => {\n      this.changeColour();\n      if (result?.createdProjectId) {\n        this.projectName = '';\n        this.reloadProjects();\n      }\n    });\n  }\n\n  // remove the focus from the create project button after the project is created\n  private changeColour(): void {\n    const b = document.querySelector('#buttonCreateProject') as HTMLElement;\n    b.blur();\n  }\n\n  // if the shortcut icon to the graph view of a project is clicked the list view fires a event that a row was clicked\n  // and the user jumps to the project overview. This method prevents the default event and enable the shortcut button\n  // to perform its action\n  public nothing(e: Event): void {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n}\n\n\n    \n\n    \n        \n  My Projects\n\n\n  Project-List\n  Delete Project\n  \n  Create Project\n  \n  \n  Create Demo Project-->\n  -->\n\n\n\n\n\n  \n    \n  \n  \n  \n    \n      \n    \n  \n\n  \n  \n  \n    \n\n      \n      {{ project.name }}\n      \n        account_tree\n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./project-list.component.scss\n                \n                @import '~@angular/material/theming';\n@import 'variables';\n@import 'src/styles/spinner';\n\nspan[matLine] {\n  padding-left: 16px;\n}\n\n.nz-input-group{\nmax-width: 100%;\n}\n.nz-input-group{\n  max-width: 100%;\n}\n.listWrapper{\n  max-width: 50%;\n  //background-color: black;\n  -webkit-box-shadow: 2px 3px 18px -6px rgba(0,0,0,0.75);\n-moz-box-shadow: 2px 3px 18px -6px rgba(0,0,0,0.75);\nbox-shadow: 2px 3px 18px -6px rgba(0,0,0,0.75);\nmargin-top: 15px;\nmargin-left: auto;\nmargin-right: auto;\n}\n.centered-headline{\n  margin: auto;\n}\n\n\n\n.mat-nav-list-padding-removed{\n  padding-top: 0;\n}\n.floating-button{\nfloat: right;\n}\n.list-header{\nmax-width: 50%;\nmargin-left: auto;\nmargin-right: auto;\nheight: 36px;\nmargin-bottom: 5px;\n}\n.list-h2{\n  max-width: 50%;\n  float: left;\n  margin-bottom: 0;\n}\n\n.graph-icon {\n  color: $icon-gray;\n}\n\n#buttonDeleteProject{\n  margin: 5px;\n}\n\n#buttonCreateProject{\n  margin: 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  My Projects  Project-List  Delete Project    Create Project      Create Demo Project-->  -->                                                  {{ project.name }}              account_tree                  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProjectListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectMembersComponent.html":{"url":"components/ProjectMembersComponent.html","title":"component - ProjectMembersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectMembersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-members/project-members.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is an example for the manage members view\nAll users are displayed in a paginated list. The list can be filtered.\nThe members are hardcoded\nIf the backend offers an interface to get all users the mockUsers list schould be replaced\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-members\n            \n\n            \n                styleUrls\n                ./project-members.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-members.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addableUsers\n                            \n                            \n                                columnsToDisplay\n                            \n                            \n                                dataSource\n                            \n                            \n                                mockUsers\n                            \n                            \n                                paginator\n                            \n                            \n                                paginatorModule\n                            \n                            \n                                    Public\n                                project\n                            \n                            \n                                    Public\n                                project$\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                sort\n                            \n                            \n                                validationFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                clickedOnRow\n                            \n                            \n                                onAddClick\n                            \n                            \n                                onDeleteClick\n                            \n                            \n                                onPageChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, projectStore: ProjectStoreService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/project-members/project-members.component.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectStore\n                                                  \n                                                        \n                                                                        ProjectStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilter\n                        \n                    \n                \n            \n            \n                \napplyFilter(filterValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-members/project-members.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clickedOnRow\n                        \n                    \n                \n            \n            \n                \nclickedOnRow(rowData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-members/project-members.component.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rowData\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAddClick\n                        \n                    \n                \n            \n            \n                \nonAddClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-members/project-members.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteClick\n                        \n                    \n                \n            \n            \n                \nonDeleteClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-members/project-members.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPageChange\n                        \n                    \n                \n            \n            \n                \nonPageChange(event: PageEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-members/project-members.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            PageEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addableUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Default value : [\n    {id: '7', displayName: 'AddedUser1', email: 'AddedUser1.de'},\n    {id: '8', displayName: 'AddedUser2', email: 'AddedUser2.de'},\n    {id: '9', displayName: 'AddedUser3', email: 'AddedUser3.de'},\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columnsToDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['Name', 'Role', 'email']\n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatTableDataSource\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Default value : [{id: '1', displayName: 'User1', email: 'User1.de'},\n    {id: '2', displayName: 'User2', email: 'User2.de'},\n    {id: '3', displayName: 'User3', email: 'User3.de'},\n    {id: '4', displayName: 'User4', email: 'User4.de'},\n    {id: '5', displayName: 'User5', email: 'User5.de'},\n    {id: '6', displayName: 'User6', email: 'User6.de'}]\n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginator)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginatorModule\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginatorModule\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginatorModule)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GetFullProjectQuery\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSort\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatSort)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {ProjectStoreService} from '@app/data/project/project-store.service';\nimport {GetFullProjectQuery} from 'src/generated/graphql';\nimport {Observable} from 'rxjs';\nimport {FormControl} from '@angular/forms';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatSort, MatSortable} from '@angular/material/sort';\nimport {MatPaginator, MatPaginatorModule, PageEvent} from '@angular/material/paginator';\nimport {AddProjectMemberDialogComponent} from '@app/dialogs/add-project-member-dialog/add-project-member-dialog.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {RemoveProjectMemberComponentComponent} from '@app/dialogs/remove-project-member-component/remove-project-member-component.component';\n\n/**\n * This component is an example for the manage members view\n * All users are displayed in a paginated list. The list can be filtered.\n * The members are hardcoded\n * If the backend offers an interface to get all users the mockUsers list schould be replaced\n */\n@Component({\n  selector: 'app-project-members',\n  templateUrl: './project-members.component.html',\n  styleUrls: ['./project-members.component.scss']\n})\nexport class ProjectMembersComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatPaginatorModule) paginatorModule: MatPaginatorModule;\n  @ViewChild(MatSort) sort: MatSort;\n  public projectId: string;\n  public project$: Observable;\n  public project: GetFullProjectQuery;\n  validationFilter = new FormControl('');\n\n  columnsToDisplay = ['Name', 'Role', 'email'];\n  dataSource: MatTableDataSource;\n\n  //users\n  mockUsers: Array = [{id: '1', displayName: 'User1', email: 'User1.de'},\n    {id: '2', displayName: 'User2', email: 'User2.de'},\n    {id: '3', displayName: 'User3', email: 'User3.de'},\n    {id: '4', displayName: 'User4', email: 'User4.de'},\n    {id: '5', displayName: 'User5', email: 'User5.de'},\n    {id: '6', displayName: 'User6', email: 'User6.de'}];\n\n  // list of users who can be added to the project\n  //hardcoded\n  addableUsers: Array = [\n    {id: '7', displayName: 'AddedUser1', email: 'AddedUser1.de'},\n    {id: '8', displayName: 'AddedUser2', email: 'AddedUser2.de'},\n    {id: '9', displayName: 'AddedUser3', email: 'AddedUser3.de'},\n  ];\n\n\n  constructor(private dialog: MatDialog, private projectStore: ProjectStoreService, private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.projectId = this.route.snapshot.paramMap.get('id');\n    this.project$ = this.projectStore.getFullProject(this.projectId);\n    this.project$.subscribe(project => {\n      this.project = project;\n      // MOCK DATA for table\n      // FIXME Api change\n      // project.node.users.nodes.forEach(u => this.mockUsers.push(u));\n      this.dataSource = new MatTableDataSource(this.mockUsers);\n\n      // sort data in table\n      this.sort.sort(({id: 'Name', start: 'asc'}) as MatSortable);\n      this.dataSource.sort = this.sort;\n\n      //paginator\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n\n  // This method adds a user to the project members list without processing a task in the back-end\n  onAddClick() {\n    const addMemberDialogRef = this.dialog.open(AddProjectMemberDialogComponent,\n      {data: {addableMembers: this.addableUsers, projectId: this.projectId}});\n    addMemberDialogRef.afterClosed().subscribe(data => {\n      if (data) {\n        for (const user of data.usersToAdd) {\n          this.addableUsers.forEach(addableUser => {\n            if (addableUser.id == user) {\n              this.mockUsers.push(addableUser);\n            }\n          });\n        }\n        this.dataSource = new MatTableDataSource(this.mockUsers);\n\n      }\n    });\n\n  }\n\n  // This method deletes a user to the project members list without processing a task in the back-end\n  onDeleteClick() {\n    const deleteMemberDialogRef = this.dialog.open(RemoveProjectMemberComponentComponent,\n      {data: {mockMembers: this.mockUsers, projectId: this.projectId}});\n    deleteMemberDialogRef.afterClosed().subscribe(data => {\n      if (data) {\n        for (const user of data.usersToDelete) {\n          for (var i = 0; i (this.mockUsers);\n      }\n    });\n  }\n\n  //change pages\n  onPageChange(event: PageEvent) {\n  }\n\n  // on every key pressed in the filter-field this method is triggered and reduces the shown users in the list (table)\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  clickedOnRow(rowData) {\n    // there schould be the code when a user is selected\n    // TODO jump to the user information page\n  }\n\n}\n\n// defines the structure of a user\nexport interface userMock {\n  id: string;\n  displayName?: string;\n  username?: string;\n  email?: string;\n\n}\n\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n\n      \n        add\n      \n\n      \n        remove\n      \n\n\n      \n        \n          Filter\n          \n        \n      \n\n\n      \n\n        \n        \n\n          \n          \n             Name \n             {{element.displayName}} \n          \n\n          \n          \n             Role \n             Administrator \n          \n\n          \n          \n             Email \n             {{element.email}} \n          \n\n\n          \n          \n        \n\n      \n\n      \n      \n      \n    \n\n    \n\n  \n\n\n    \n\n    \n                \n                    ./project-members.component.scss\n                \n                .project-title-row {\n  width: 100%;\n  margin-bottom: 12px;\n  align-items: center;\n  height: 85px;\n}\n.box {\n  float: left;\n  //display: inline-block;\n  vertical-align: top;\n  width: 85px;\n  height: auto;\n  margin-right: 5px;\n}\n.content {\n  //display: inline-block;\n  float: left;\n\n}\n.title, .sub-title {\n  margin: 0;\n  padding: 3px 10px 3px 0;\n}\n.title {\n  font-size: 17px;\n  font-weight: bold;\n}\n.sub-title {\n  font-weight: bold;\n  color: #3F3F3F;\n}\n\nimg {\n  width:100%;\n}\n\n.pagefill {\n  width: 100%;\n  height: 300px;\n}\n.margin-left-top {\n  margin-top: 3px;\n  margin-left: 3px;\n}\n.text-left {\n  text-align: left;\n}\n.mat-row:hover {\n  box-shadow: inset 0 0 43px -17px rgba(201,195,201,1);\n  cursor: pointer;\n}\n.button-add {\n  margin: 10px 5px 10px 10px;\n  float: left;\n}\n\n.button-remove {\n  margin: 10px 15px 10px 5px;\n  float: left;\n}\n\n.table-container {\n  max-height: 500px;\n  overflow: auto;\n}\n.center-horizontal{\n  width: 100%;\n  text-align: center;\n  margin-top: 15px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            add                    remove                              Filter                                                                               Name              {{element.displayName}}                                            Role              Administrator                                            Email              {{element.email}}                                                                         '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProjectMembersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectOverviewComponent.html":{"url":"components/ProjectOverviewComponent.html","title":"component - ProjectOverviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectOverviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-overview/project-overview.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component offers a view showing the project name,\nowner, id and description.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-overview\n            \n\n            \n                styleUrls\n                ./project-overview.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-overview.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                    Public\n                                project\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                queryComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteProject\n                            \n                            \n                                projectNameEdited\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, projectStore: ProjectStoreService, route: ActivatedRoute, router: Router, changeDetector: ChangeDetectorRef, dialog: MatDialog, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/project-overview/project-overview.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectStore\n                                                  \n                                                        \n                                                                        ProjectStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProject\n                        \n                    \n                \n            \n            \n                \ndeleteProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-overview/project-overview.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectNameEdited\n                        \n                    \n                \n            \n            \n                \nprojectNameEdited(saved: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-overview/project-overview.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    saved\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/project-overview/project-overview.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataNode\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-overview/project-overview.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-overview/project-overview.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(QueryComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/project-overview/project-overview.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, ChangeDetectorRef, Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ProjectStoreService} from '@app/data/project/project-store.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {RemoveDialogComponent} from '@app/dialogs/remove-dialog/remove-dialog.component';\nimport {DataNode} from '@app/data-dgql/query';\nimport {Project} from '../../generated/graphql-dgql';\nimport DataService from '@app/data-dgql';\nimport {NodeType} from '@app/data-dgql/id';\nimport {QueryComponent} from '@app/utils/query-component/query.component';\n\n/**\n * This component offers a view showing the project name,\n * owner, id and description.\n */\n@Component({\n  selector: 'app-project-overview',\n  templateUrl: './project-overview.component.html',\n  styleUrls: ['./project-overview.component.scss']\n})\nexport class ProjectOverviewComponent implements OnInit, AfterViewInit {\n  @ViewChild(QueryComponent) queryComponent: QueryComponent;\n\n  public projectId: string;\n  public project: DataNode;\n  description = '';\n\n  constructor(private dataService: DataService,\n              private projectStore: ProjectStoreService,\n              private route: ActivatedRoute,\n              private router: Router,\n              private changeDetector: ChangeDetectorRef,\n              private dialog: MatDialog,\n              private notify: UserNotifyService) {\n  }\n\n  ngOnInit(): void {\n    this.projectId = this.route.snapshot.paramMap.get('id');\n    this.project = this.dataService.getNode({type: NodeType.Project, id: this.projectId});\n  }\n\n  ngAfterViewInit() {\n    this.queryComponent.listenTo(this.project, project => this.description = project.description);\n  }\n\n  projectNameEdited(saved: boolean): void {\n    if (!saved) {\n      return;\n    }\n\n    alert('TODO: Save');\n  }\n\n  deleteProject(): void {\n    const confirmDeleteDialogRef = this.dialog.open(RemoveDialogComponent,\n      {\n        data: {\n          title: 'Really delete project \\\"' + this.project.current.name + '\\\"?',\n          messages: ['Are you sure you want to delete the project \\\"' + this.project.current.name + '\\\"?',\n            'This action cannot be undone!'],\n          verificationName: this.project.current.name\n        }\n      });\n    confirmDeleteDialogRef.afterClosed().subscribe(del => {\n      if (del) {\n        this.projectStore.delete(this.projectId).subscribe(() => {\n            this.notify.notifyInfo('Successfully deleted project \\\"' + this.project.current.name + '\\\"');\n            this.router.navigate(['/']);\n          },\n          error => this.notify.notifyError('Failed to delete project!', error));\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n        \n\n        \n        \n          Delete\n        \n      \n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./project-overview.component.scss\n                \n                .delete-button-container {\n  width: 100%;\n  display: flex;\n  align-items: center;\n}\n\n.project-overview-container {\n  margin: 4px;\n}\n\n#button{\n  margin: 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                              Delete                                '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProjectOverviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectStoreService.html":{"url":"injectables/ProjectStoreService.html","title":"injectable - ProjectStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProjectStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/project/project-store.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service provides get, create and delete operations for projects\nWith the get-method only the id and name of one project, specified by the id, will be fetched\nThe getFulProject method fetches all the information of a project the database provides\nThe getAll method fetches the name and id for all projects. This is used to reduce\ntransfered data while showing the projects list\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getBasicProject\n                            \n                            \n                                getFullProject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, getAllQuery: GetAllProjectsGQL, getBasicProjectQuery: GetBasicProjectGQL, getFullQuery: GetFullProjectGQL, createProject: CreateProjectGQL, deleteProject: DeleteProjectGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/project/project-store.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getAllQuery\n                                                  \n                                                        \n                                                                    GetAllProjectsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getBasicProjectQuery\n                                                  \n                                                        \n                                                                    GetBasicProjectGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getFullQuery\n                                                  \n                                                        \n                                                                    GetFullProjectGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createProject\n                                                  \n                                                        \n                                                                    CreateProjectGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deleteProject\n                                                  \n                                                        \n                                                                    DeleteProjectGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(name: string, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/project/project-store.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/project/project-store.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(filterText: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/project/project-store.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBasicProject\n                        \n                    \n                \n            \n            \n                \ngetBasicProject(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/project/project-store.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFullProject\n                        \n                    \n                \n            \n            \n                \ngetFullProject(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/project/project-store.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {map} from 'rxjs/operators';\nimport {\n  CreateProjectGQL,\n  CreateProjectInput,\n  DeleteProjectGQL,\n  DeleteProjectInput,\n  GetAllProjectsGQL,\n  GetBasicProjectGQL,\n  GetBasicProjectQuery,\n  GetFullProjectGQL,\n  GetFullProjectQuery,\n  Project,\n  ProjectFilter\n} from 'src/generated/graphql';\nimport {Observable} from 'rxjs';\nimport {AuthenticationService} from '@app/auth/authentication.service';\n\n/**\n * This service provides get, create and delete operations for projects\n * With the get-method only the id and name of one project, specified by the id, will be fetched\n * The getFulProject method fetches all the information of a project the database provides\n * The getAll method fetches the name and id for all projects. This is used to reduce\n * transfered data while showing the projects list\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectStoreService {\n\n  constructor(private authService: AuthenticationService, private getAllQuery: GetAllProjectsGQL,\n              private getBasicProjectQuery: GetBasicProjectGQL, private getFullQuery: GetFullProjectGQL,\n              private createProject: CreateProjectGQL, private deleteProject: DeleteProjectGQL) {\n  }\n\n  create(name: string, description: string) {\n    const input: CreateProjectInput = {\n      name,\n      description\n    };\n    return this.createProject.mutate({input});\n  }\n\n  delete(id: string) {\n    const input: DeleteProjectInput = {\n      project: id\n    };\n    return this.deleteProject.mutate({input});\n  }\n\n  getBasicProject(id: string): Observable {\n    return this.getBasicProjectQuery.fetch({id}).pipe(map(({data}) => data));\n  }\n\n  getFullProject(id: string): Observable {\n    return this.getFullQuery.fetch({id}).pipe(map(({data}) => data));\n  }\n\n  getAll(filterText: string): Observable[]> {\n    const filter: ProjectFilter = {\n      name: filterText\n    };\n    return this.getAllQuery.fetch({filter}).pipe(\n      map(({data}) => data.projects.edges.map(edge => edge.node))\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectsService.html":{"url":"injectables/ProjectsService.html","title":"injectable - ProjectsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProjectsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/queries/projects.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProject\n                            \n                            \n                                listProjects\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(qListProjects: ListProjectsGQL, qGetProject: GetProjectGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data-dgql/queries/projects.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        qListProjects\n                                                  \n                                                        \n                                                                    ListProjectsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qGetProject\n                                                  \n                                                        \n                                                                    GetProjectGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getProject\n                        \n                    \n                \n            \n            \n                \ngetProject(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/queries/projects.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listProjects\n                        \n                    \n                \n            \n            \n                \nlistProjects(list: QueryListParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/queries/projects.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                            QueryListParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  GetProjectGQL,\n  ListProjectsGQL,\n  ProjectFilter,\n} from 'src/generated/graphql-dgql';\nimport { promisifyApolloFetch, QueryListParams } from '@app/data-dgql/queries/util';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectsService {\n  constructor(\n    private qListProjects: ListProjectsGQL,\n    private qGetProject: GetProjectGQL,\n  ) {}\n\n  listProjects(list: QueryListParams) {\n    return promisifyApolloFetch(this.qListProjects.fetch({ ...list }));\n  }\n\n  getProject(id: string) {\n    return promisifyApolloFetch(this.qGetProject.fetch({ id }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueriesService.html":{"url":"injectables/QueriesService.html","title":"injectable - QueriesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QueriesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/queries/queries.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                components\n                            \n                            \n                                    Public\n                                issues\n                            \n                            \n                                    Public\n                                projects\n                            \n                            \n                                    Public\n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(components: ComponentsService, issues: IssuesService, projects: ProjectsService, users: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data-dgql/queries/queries.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        components\n                                                  \n                                                        \n                                                                        ComponentsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        issues\n                                                  \n                                                        \n                                                                        IssuesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projects\n                                                  \n                                                        \n                                                                        ProjectsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        components\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ComponentsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/queries/queries.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IssuesService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/queries/queries.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projects\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProjectsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/queries/queries.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UsersService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/queries/queries.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IssuesService } from './issues.service';\nimport { ProjectsService } from './projects.service';\nimport { ComponentsService } from './components.service';\nimport { UsersService } from './users.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QueriesService {\n  constructor(\n    public components: ComponentsService,\n    public issues: IssuesService,\n    public projects: ProjectsService,\n    public users: UsersService,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryBodyDirective.html":{"url":"directives/QueryBodyDirective.html","title":"directive - QueryBodyDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  QueryBodyDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/query-component/query.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This directive is used on an ng-template, to indicate that the contents of it should be shown once\nthe query finished successfully\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appQueryBody]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef<>)\n                    \n                \n                        \n                            \n                                Defined in src/app/utils/query-component/query.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef<>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/query-component/query.component.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  Input,\n  OnDestroy,\n  TemplateRef\n} from '@angular/core';\nimport {Observable, Subscription} from 'rxjs';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {MatButton} from '@angular/material/button';\n\n/**\n * The current state of the query\n */\nexport enum QueryComponentState {\n  /** The query was executed successfully */\n  Ready,\n  /** The query has not yet finished */\n  Loading,\n  /** The query returned an error */\n  Error\n}\n\n/**\n * This directive is used on an `ng-template`, to indicate that the contents of it should be shown once\n * the query finished successfully\n */\n@Directive({\n  selector: '[appQueryBody]'\n})\nexport class QueryBodyDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used on a `button`, to inidcate that the {@link QueryComponent} should manage the state of this\n * button\n */\n@Directive({\n  selector: '[appQueryButton]'\n})\nexport class QueryButtonDirective {\n  constructor(public element: MatButton) {\n  }\n}\n\n/**\n * This component is intended to be used in combination with an `Observable`.\n * The component expects that either an `ng-template` or a `MatButton` is in the body and that the appropriate directive\n * is used on it ({@link QueryBodyDirective} with `ng-template`, {@link QueryButtonDirective} with `button`).\n * Once the appropriate function is called, the component subscribes to the observable, showing the user a loading\n * indication and, if applicable, disables the `button`.\n * Once the query finished, the content in the `ng-template` is shown or the button is enabled again.\n * If the subscription yielded an error, a message is shown instead of the `ng-template`, or the button is re-enabled.\n * Note that no verification has to be made if the query was successful, when using an `ng-template`.\n * The content of the `ng-template` is only executed once the {@link #queryState} is `Ready`.\n *\n * #### Example 1: Using `ng-template`\n * This example will show, instead of the content directly, a loading indicator as soon as the page is loaded.\n * ```html\n * \n *   \n *     This will only be shown if the query was successful!\n *      Not required! -->\n *     Result is: {{this.data}}\n *      -->\n *   \n * \n * ```\n *\n * ```ts\n * // ...\n *\n * @ViewChild(QueryComponent) query: QueryComponent;\n *\n * // ...\n *\n * ngAfterViewInit() {\n *   // Have to use ngAfterViewInit, otherwise query will be undefined!\n *\n *   this.query.listenTo(this.someObservable,\n *     result => {\n *       this.data = result;\n *       console.log('Result callback');\n *     },\n *     error => {\n *       console.log('Error callback');\n *     }\n *   );\n * }\n * ```\n *\n * #### Example 2: Using `button`\n * This example will subscribe to the observable as soon as the button is clicked.\n * The button is disabled and a loading indicator is shown as long as the subscription has not yielded a result.\n * ```html\n * \n *   \n *     Do something that takes a while...\n *   \n * \n * ```\n *\n * ```ts\n * // ...\n *\n * @ViewChild(QueryComponent) query: QueryComponent;\n *\n * // ...\n *\n * onClick() {\n *   this.query.listenTo(this.somethingThatTakesAWhile,\n *     result => {\n *       console.log('Result callback');\n *     },\n *     error => {\n *       console.log('Error callback');\n *     }\n *   );\n * }\n * ```\n */\n@Component({\n  templateUrl: 'query.component.html',\n  selector: 'app-query-component',\n  styleUrls: ['query.component.scss']\n})\nexport class QueryComponent implements OnDestroy, AfterViewInit {\n  /** Error message to be shown if the subscription failed */\n  @Input() errorMessage = 'Failed to run query!';\n  @ContentChild(QueryBodyDirective) body: QueryBodyDirective;\n  @ContentChild(QueryButtonDirective) button: QueryButtonDirective;\n\n  /** @ignore */\n  readonly State = QueryComponentState;\n  /** The current state of the query */\n  queryState: QueryComponentState = QueryComponentState.Loading;\n  private subscription?: Subscription;\n  /** If true, a button is in the query body, not a template*/\n  buttonMode: boolean;\n\n  constructor(private notify: UserNotifyService,\n              private changeDetector: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit() {\n    this.buttonMode = !this.body && !!this.button;\n    if (this.buttonMode) {\n      this.queryState = QueryComponentState.Ready;\n    }\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n\n  /** Quick way of checking if `this.query.queryState === QueryComponentState.Ready` */\n  public ready(): boolean {\n    return this.queryState === QueryComponentState.Ready;\n  }\n\n  /**\n   * Subscribe the query component to the observable\n   * @param query The observable\n   * @param success The function to be called if the query was successful\n   * @param error The function to be called if the query had an error\n   */\n  public listenTo(query: Observable, success?: (value: T) => void, error?: (error: any) => void): void {\n    this.queryState = QueryComponentState.Loading;\n    this.changeDetector.detectChanges();\n    this.subscription?.unsubscribe();\n    this.updateButton();\n\n    this.subscription = query.subscribe((value: T) => {\n      if (success) {\n        success(value);\n\n        // Check if the callback changed the query state, e.g. by calling setError()\n        if (this.queryState === QueryComponentState.Error) {\n          return;\n        }\n      }\n\n      this.queryState = QueryComponentState.Ready;\n      this.changeDetector.detectChanges();\n      this.updateButton();\n    }, err => {\n      if (error) {\n        error(err);\n      }\n\n      this.setError();\n      this.notify.notifyError(this.errorMessage, err);\n    });\n  }\n\n  /**\n   * Manually sets this query component to the error state.\n   * This may be useful if e.g. the query ran successfully, the contained data in it however is not valid.\n   */\n  public setError(): void {\n    this.queryState = QueryComponentState.Error;\n    this.changeDetector.detectChanges();\n    this.updateButton();\n  }\n\n  private updateButton(): void {\n    if (!this.buttonMode) {\n      return;\n    }\n\n    this.button.element.disabled = this.queryState === QueryComponentState.Loading;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryButtonDirective.html":{"url":"directives/QueryButtonDirective.html","title":"directive - QueryButtonDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  QueryButtonDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/query-component/query.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This directive is used on a button, to inidcate that the QueryComponent should manage the state of this\nbutton\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appQueryButton]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                element\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: MatButton)\n                    \n                \n                        \n                            \n                                Defined in src/app/utils/query-component/query.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    MatButton\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        element\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatButton\n\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/query-component/query.component.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  Input,\n  OnDestroy,\n  TemplateRef\n} from '@angular/core';\nimport {Observable, Subscription} from 'rxjs';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {MatButton} from '@angular/material/button';\n\n/**\n * The current state of the query\n */\nexport enum QueryComponentState {\n  /** The query was executed successfully */\n  Ready,\n  /** The query has not yet finished */\n  Loading,\n  /** The query returned an error */\n  Error\n}\n\n/**\n * This directive is used on an `ng-template`, to indicate that the contents of it should be shown once\n * the query finished successfully\n */\n@Directive({\n  selector: '[appQueryBody]'\n})\nexport class QueryBodyDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used on a `button`, to inidcate that the {@link QueryComponent} should manage the state of this\n * button\n */\n@Directive({\n  selector: '[appQueryButton]'\n})\nexport class QueryButtonDirective {\n  constructor(public element: MatButton) {\n  }\n}\n\n/**\n * This component is intended to be used in combination with an `Observable`.\n * The component expects that either an `ng-template` or a `MatButton` is in the body and that the appropriate directive\n * is used on it ({@link QueryBodyDirective} with `ng-template`, {@link QueryButtonDirective} with `button`).\n * Once the appropriate function is called, the component subscribes to the observable, showing the user a loading\n * indication and, if applicable, disables the `button`.\n * Once the query finished, the content in the `ng-template` is shown or the button is enabled again.\n * If the subscription yielded an error, a message is shown instead of the `ng-template`, or the button is re-enabled.\n * Note that no verification has to be made if the query was successful, when using an `ng-template`.\n * The content of the `ng-template` is only executed once the {@link #queryState} is `Ready`.\n *\n * #### Example 1: Using `ng-template`\n * This example will show, instead of the content directly, a loading indicator as soon as the page is loaded.\n * ```html\n * \n *   \n *     This will only be shown if the query was successful!\n *      Not required! -->\n *     Result is: {{this.data}}\n *      -->\n *   \n * \n * ```\n *\n * ```ts\n * // ...\n *\n * @ViewChild(QueryComponent) query: QueryComponent;\n *\n * // ...\n *\n * ngAfterViewInit() {\n *   // Have to use ngAfterViewInit, otherwise query will be undefined!\n *\n *   this.query.listenTo(this.someObservable,\n *     result => {\n *       this.data = result;\n *       console.log('Result callback');\n *     },\n *     error => {\n *       console.log('Error callback');\n *     }\n *   );\n * }\n * ```\n *\n * #### Example 2: Using `button`\n * This example will subscribe to the observable as soon as the button is clicked.\n * The button is disabled and a loading indicator is shown as long as the subscription has not yielded a result.\n * ```html\n * \n *   \n *     Do something that takes a while...\n *   \n * \n * ```\n *\n * ```ts\n * // ...\n *\n * @ViewChild(QueryComponent) query: QueryComponent;\n *\n * // ...\n *\n * onClick() {\n *   this.query.listenTo(this.somethingThatTakesAWhile,\n *     result => {\n *       console.log('Result callback');\n *     },\n *     error => {\n *       console.log('Error callback');\n *     }\n *   );\n * }\n * ```\n */\n@Component({\n  templateUrl: 'query.component.html',\n  selector: 'app-query-component',\n  styleUrls: ['query.component.scss']\n})\nexport class QueryComponent implements OnDestroy, AfterViewInit {\n  /** Error message to be shown if the subscription failed */\n  @Input() errorMessage = 'Failed to run query!';\n  @ContentChild(QueryBodyDirective) body: QueryBodyDirective;\n  @ContentChild(QueryButtonDirective) button: QueryButtonDirective;\n\n  /** @ignore */\n  readonly State = QueryComponentState;\n  /** The current state of the query */\n  queryState: QueryComponentState = QueryComponentState.Loading;\n  private subscription?: Subscription;\n  /** If true, a button is in the query body, not a template*/\n  buttonMode: boolean;\n\n  constructor(private notify: UserNotifyService,\n              private changeDetector: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit() {\n    this.buttonMode = !this.body && !!this.button;\n    if (this.buttonMode) {\n      this.queryState = QueryComponentState.Ready;\n    }\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n\n  /** Quick way of checking if `this.query.queryState === QueryComponentState.Ready` */\n  public ready(): boolean {\n    return this.queryState === QueryComponentState.Ready;\n  }\n\n  /**\n   * Subscribe the query component to the observable\n   * @param query The observable\n   * @param success The function to be called if the query was successful\n   * @param error The function to be called if the query had an error\n   */\n  public listenTo(query: Observable, success?: (value: T) => void, error?: (error: any) => void): void {\n    this.queryState = QueryComponentState.Loading;\n    this.changeDetector.detectChanges();\n    this.subscription?.unsubscribe();\n    this.updateButton();\n\n    this.subscription = query.subscribe((value: T) => {\n      if (success) {\n        success(value);\n\n        // Check if the callback changed the query state, e.g. by calling setError()\n        if (this.queryState === QueryComponentState.Error) {\n          return;\n        }\n      }\n\n      this.queryState = QueryComponentState.Ready;\n      this.changeDetector.detectChanges();\n      this.updateButton();\n    }, err => {\n      if (error) {\n        error(err);\n      }\n\n      this.setError();\n      this.notify.notifyError(this.errorMessage, err);\n    });\n  }\n\n  /**\n   * Manually sets this query component to the error state.\n   * This may be useful if e.g. the query ran successfully, the contained data in it however is not valid.\n   */\n  public setError(): void {\n    this.queryState = QueryComponentState.Error;\n    this.changeDetector.detectChanges();\n    this.updateButton();\n  }\n\n  private updateButton(): void {\n    if (!this.buttonMode) {\n      return;\n    }\n\n    this.button.element.disabled = this.queryState === QueryComponentState.Loading;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QueryComponent.html":{"url":"components/QueryComponent.html","title":"component - QueryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  QueryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/utils/query-component/query.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is intended to be used in combination with an Observable.\nThe component expects that either an ng-template or a MatButton is in the body and that the appropriate directive\nis used on it (QueryBodyDirective with ng-template, QueryButtonDirective with button).\nOnce the appropriate function is called, the component subscribes to the observable, showing the user a loading\nindication and, if applicable, disables the button.\nOnce the query finished, the content in the ng-template is shown or the button is enabled again.\nIf the subscription yielded an error, a message is shown instead of the ng-template, or the button is re-enabled.\nNote that no verification has to be made if the query was successful, when using an ng-template.\nThe content of the ng-template is only executed once the #queryState is Ready.\nExample 1: Using ng-template\nThis example will show, instead of the content directly, a loading indicator as soon as the page is loaded.\n\n  \n    This will only be shown if the query was successful!\n     Not required! -->\n    Result is: {{this.data}}\n     -->\n  \n// ...\n\n@ViewChild(QueryComponent) query: QueryComponent;\n\n// ...\n\nngAfterViewInit() {\n  // Have to use ngAfterViewInit, otherwise query will be undefined!\n\n  this.query.listenTo(this.someObservable,\n    result => {\n      this.data = result;\n      console.log('Result callback');\n    },\n    error => {\n      console.log('Error callback');\n    }\n  );\n}Example 2: Using button\nThis example will subscribe to the observable as soon as the button is clicked.\nThe button is disabled and a loading indicator is shown as long as the subscription has not yielded a result.\n\n  \n    Do something that takes a while...\n  \n// ...\n\n@ViewChild(QueryComponent) query: QueryComponent;\n\n// ...\n\nonClick() {\n  this.query.listenTo(this.somethingThatTakesAWhile,\n    result => {\n      console.log('Result callback');\n    },\n    error => {\n      console.log('Error callback');\n    }\n  );\n}\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-query-component\n            \n\n            \n                styleUrls\n                query.component.scss\n            \n\n\n\n            \n                templateUrl\n                query.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                button\n                            \n                            \n                                buttonMode\n                            \n                            \n                                queryState\n                            \n                            \n                                    Private\n                                    Optional\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                listenTo\n                            \n                            \n                                    Public\n                                ready\n                            \n                            \n                                    Public\n                                setError\n                            \n                            \n                                    Private\n                                updateButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(notify: UserNotifyService, changeDetector: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/utils/query-component/query.component.ts:144\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Failed to run query!'\n                    \n                \n                        \n                            \n                                    Defined in src/app/utils/query-component/query.component.ts:134\n                            \n                        \n                \n                    \n                        Error message to be shown if the subscription failed\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        listenTo\n                        \n                    \n                \n            \n            \n                \n                    \n                    listenTo(query: Observable, success?: (value?: T) => void, error?: (error?: any) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/query-component/query.component.ts:173\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Subscribe the query component to the observable\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The observable\n\n                                    \n                                \n                                \n                                    success\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The function to be called if the query was successful\n\n                                    \n                                \n                                \n                                    error\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The function to be called if the query had an error\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ready\n                        \n                    \n                \n            \n            \n                \n                    \n                    ready()\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/query-component/query.component.ts:163\n                \n            \n\n\n            \n                \n                    Quick way of checking if this.query.queryState === QueryComponentState.Ready\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setError\n                        \n                    \n                \n            \n            \n                \n                    \n                    setError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/query-component/query.component.ts:206\n                \n            \n\n\n            \n                \n                    Manually sets this query component to the error state.\nThis may be useful if e.g. the query ran successfully, the contained data in it however is not valid.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/query-component/query.component.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryBodyDirective\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(QueryBodyDirective)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/utils/query-component/query.component.ts:135\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        button\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryButtonDirective\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(QueryButtonDirective)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/utils/query-component/query.component.ts:136\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buttonMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/query-component/query.component.ts:144\n                        \n                    \n\n            \n                \n                    If true, a button is in the query body, not a template\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryComponentState\n\n                    \n                \n                \n                    \n                        Default value : QueryComponentState.Loading\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/query-component/query.component.ts:141\n                        \n                    \n\n            \n                \n                    The current state of the query\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/query-component/query.component.ts:142\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  Input,\n  OnDestroy,\n  TemplateRef\n} from '@angular/core';\nimport {Observable, Subscription} from 'rxjs';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {MatButton} from '@angular/material/button';\n\n/**\n * The current state of the query\n */\nexport enum QueryComponentState {\n  /** The query was executed successfully */\n  Ready,\n  /** The query has not yet finished */\n  Loading,\n  /** The query returned an error */\n  Error\n}\n\n/**\n * This directive is used on an `ng-template`, to indicate that the contents of it should be shown once\n * the query finished successfully\n */\n@Directive({\n  selector: '[appQueryBody]'\n})\nexport class QueryBodyDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used on a `button`, to inidcate that the {@link QueryComponent} should manage the state of this\n * button\n */\n@Directive({\n  selector: '[appQueryButton]'\n})\nexport class QueryButtonDirective {\n  constructor(public element: MatButton) {\n  }\n}\n\n/**\n * This component is intended to be used in combination with an `Observable`.\n * The component expects that either an `ng-template` or a `MatButton` is in the body and that the appropriate directive\n * is used on it ({@link QueryBodyDirective} with `ng-template`, {@link QueryButtonDirective} with `button`).\n * Once the appropriate function is called, the component subscribes to the observable, showing the user a loading\n * indication and, if applicable, disables the `button`.\n * Once the query finished, the content in the `ng-template` is shown or the button is enabled again.\n * If the subscription yielded an error, a message is shown instead of the `ng-template`, or the button is re-enabled.\n * Note that no verification has to be made if the query was successful, when using an `ng-template`.\n * The content of the `ng-template` is only executed once the {@link #queryState} is `Ready`.\n *\n * #### Example 1: Using `ng-template`\n * This example will show, instead of the content directly, a loading indicator as soon as the page is loaded.\n * ```html\n * \n *   \n *     This will only be shown if the query was successful!\n *      Not required! -->\n *     Result is: {{this.data}}\n *      -->\n *   \n * \n * ```\n *\n * ```ts\n * // ...\n *\n * @ViewChild(QueryComponent) query: QueryComponent;\n *\n * // ...\n *\n * ngAfterViewInit() {\n *   // Have to use ngAfterViewInit, otherwise query will be undefined!\n *\n *   this.query.listenTo(this.someObservable,\n *     result => {\n *       this.data = result;\n *       console.log('Result callback');\n *     },\n *     error => {\n *       console.log('Error callback');\n *     }\n *   );\n * }\n * ```\n *\n * #### Example 2: Using `button`\n * This example will subscribe to the observable as soon as the button is clicked.\n * The button is disabled and a loading indicator is shown as long as the subscription has not yielded a result.\n * ```html\n * \n *   \n *     Do something that takes a while...\n *   \n * \n * ```\n *\n * ```ts\n * // ...\n *\n * @ViewChild(QueryComponent) query: QueryComponent;\n *\n * // ...\n *\n * onClick() {\n *   this.query.listenTo(this.somethingThatTakesAWhile,\n *     result => {\n *       console.log('Result callback');\n *     },\n *     error => {\n *       console.log('Error callback');\n *     }\n *   );\n * }\n * ```\n */\n@Component({\n  templateUrl: 'query.component.html',\n  selector: 'app-query-component',\n  styleUrls: ['query.component.scss']\n})\nexport class QueryComponent implements OnDestroy, AfterViewInit {\n  /** Error message to be shown if the subscription failed */\n  @Input() errorMessage = 'Failed to run query!';\n  @ContentChild(QueryBodyDirective) body: QueryBodyDirective;\n  @ContentChild(QueryButtonDirective) button: QueryButtonDirective;\n\n  /** @ignore */\n  readonly State = QueryComponentState;\n  /** The current state of the query */\n  queryState: QueryComponentState = QueryComponentState.Loading;\n  private subscription?: Subscription;\n  /** If true, a button is in the query body, not a template*/\n  buttonMode: boolean;\n\n  constructor(private notify: UserNotifyService,\n              private changeDetector: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit() {\n    this.buttonMode = !this.body && !!this.button;\n    if (this.buttonMode) {\n      this.queryState = QueryComponentState.Ready;\n    }\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n\n  /** Quick way of checking if `this.query.queryState === QueryComponentState.Ready` */\n  public ready(): boolean {\n    return this.queryState === QueryComponentState.Ready;\n  }\n\n  /**\n   * Subscribe the query component to the observable\n   * @param query The observable\n   * @param success The function to be called if the query was successful\n   * @param error The function to be called if the query had an error\n   */\n  public listenTo(query: Observable, success?: (value: T) => void, error?: (error: any) => void): void {\n    this.queryState = QueryComponentState.Loading;\n    this.changeDetector.detectChanges();\n    this.subscription?.unsubscribe();\n    this.updateButton();\n\n    this.subscription = query.subscribe((value: T) => {\n      if (success) {\n        success(value);\n\n        // Check if the callback changed the query state, e.g. by calling setError()\n        if (this.queryState === QueryComponentState.Error) {\n          return;\n        }\n      }\n\n      this.queryState = QueryComponentState.Ready;\n      this.changeDetector.detectChanges();\n      this.updateButton();\n    }, err => {\n      if (error) {\n        error(err);\n      }\n\n      this.setError();\n      this.notify.notifyError(this.errorMessage, err);\n    });\n  }\n\n  /**\n   * Manually sets this query component to the error state.\n   * This may be useful if e.g. the query ran successfully, the contained data in it however is not valid.\n   */\n  public setError(): void {\n    this.queryState = QueryComponentState.Error;\n    this.changeDetector.detectChanges();\n    this.updateButton();\n  }\n\n  private updateButton(): void {\n    if (!this.buttonMode) {\n      return;\n    }\n\n    this.button.element.disabled = this.queryState === QueryComponentState.Loading;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n    \n  \n\n\n\n  \n    \n  \n\n  \n    \n      {{errorMessage}}\n    \n  \n\n  \n    \n      \n      Loading...\n    \n  \n\n\n\n\n    \n\n    \n                \n                    query.component.scss\n                \n                .container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  margin: 10px;\n}\n\n.error {\n  border: red 1px solid;\n  border-radius: 10px;\n  padding: 18px;\n  width: fit-content;\n  background-color: rgba(255, 0, 0, 0.1);\n}\n\n.load-container{\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  width: fit-content;\n  height: fit-content;\n  background-color: #ababab;\n  padding: 10px 16px 10px 16px;\n  border-radius: 100px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  font-weight: 500;\n  color: whitesmoke;\n}\n\n.error-text {\n  color: red;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{errorMessage}}                        Loading...      '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'QueryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryListParams.html":{"url":"interfaces/QueryListParams.html","title":"interface - QueryListParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QueryListParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/queries/util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            after\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            before\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            filterBy\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            first\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            last\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        after\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        after:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        before\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        before:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filterBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filterBy:     F\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     F\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\n\n// FIXME: why is this an observable? during runtime, we only ever observe one update emitted from\n//  the observable, yet the Apollo API uses this everywhere\n// TODO: investigate\nexport function promisifyApolloFetch(f: Observable): Promise {\n  return new Promise((resolve, reject) => {\n    f.subscribe(({ data }) => resolve(data), error => reject(error));\n  });\n}\n\nexport interface QueryListParams {\n  after?: string;\n  before?: string;\n  filterBy?: F;\n  first?: number;\n  last?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/register/register.component.ts\n\n\n\n    \n        Description\n    \n    \n        Allows the user to register for a Gropius account.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmValidator\n                            \n                            \n                                isLoading\n                            \n                            \n                                publicClientName\n                            \n                            \n                                userNameAsyncValidator\n                            \n                            \n                                validateForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                backToLogin\n                            \n                            \n                                resetForm\n                            \n                            \n                                submitForm\n                            \n                            \n                                validateConfirmPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, apollo: Apollo, router: Router, registerUserMutation: RegisterUserGQL, userAvailablyQuery: CheckUsernameGQL, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/register/register.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apollo\n                                                  \n                                                        \n                                                                    Apollo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        registerUserMutation\n                                                  \n                                                        \n                                                                        RegisterUserGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userAvailablyQuery\n                                                  \n                                                        \n                                                                        CheckUsernameGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        backToLogin\n                        \n                    \n                \n            \n            \n                \nbackToLogin(e: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:131\n                \n            \n\n\n            \n                \n                    Loads the login page.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nEvent affecting the form reset.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetForm\n                        \n                    \n                \n            \n            \n                \nresetForm(e: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:118\n                \n            \n\n\n            \n                \n                    Resets form fields and marks all controls as pristine.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nEvent affecting the form reset.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm(value: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:95\n                \n            \n\n\n            \n                \n                    Given data needed for account creation\nand carries out the creation by issuing a mutation to the backend.\nIf successfull, the user is redirected to the Login page.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nData (from the register form) that is handled.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateConfirmPassword\n                        \n                    \n                \n            \n            \n                \nvalidateConfirmPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:85\n                \n            \n\n\n            \n                \n                    Recalculates the value and validation status of the password confirmation field.\nThis is triggered whenever the user changes the password in the register form.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:67\n                        \n                    \n\n            \n                \n                    Checks that the password in the Confirm Password field\nmatches the password in the Password field.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    control\n                                                    \n                                                            Password that is handled.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        publicClientName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.publicClientName\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userNameAsyncValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:44\n                        \n                    \n\n            \n                \n                    Checks with backend to ensure that entered username is valid.\nA username is invalid when its taken or contains symbols like '*', etc.\ncontrol is not a valid username. Emits null when username is valid\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    control\n                                                    \n                                                            \nUsername that is handled.\n\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, ValidationErrors, Validators} from '@angular/forms';\nimport {Apollo} from 'apollo-angular';\nimport {Observable, Observer} from 'rxjs';\nimport {environment} from '@environments/environment';\nimport {CheckUsernameGQL, RegisterUserGQL, RegisterUserInput} from 'src/generated/public-graphql';\nimport {Router} from '@angular/router';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\n\n/**\n * Allows the user to register for a Gropius account.\n */\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n\n  validateForm: FormGroup;\n  isLoading = false;\n  publicClientName = environment.publicClientName;\n\n  constructor(private fb: FormBuilder, private apollo: Apollo, private router: Router,\n              private registerUserMutation: RegisterUserGQL, private userAvailablyQuery: CheckUsernameGQL,\n              private notify: UserNotifyService) {\n    this.registerUserMutation.client = this.publicClientName;\n    this.userAvailablyQuery.client = this.publicClientName;\n    this.validateForm = this.fb.group({\n      username: ['', [Validators.required], [this.userNameAsyncValidator]],\n      email: ['', [Validators.email, Validators.required]],\n      password: ['', [Validators.required]],\n      confirm: ['', [this.confirmValidator]],\n    });\n  }\n\n  /**\n   * Checks with backend to ensure that entered username is valid.\n   * A username is invalid when its taken or contains symbols like '*', etc.\n   * @param control - Username that is handled.\n   * @returns Observable emitting values indicating error when string entered in\n   * control is not a valid username. Emits null when username is valid\n   */\n  userNameAsyncValidator = (control: FormControl) =>\n   new Observable((observer: Observer) => {\n     this.userAvailablyQuery.fetch({username: control.value}).subscribe(({data}) => {\n\n       // case: username already taken\n       // => marks event as error\n       if (!data.checkUsername) {\n         // returns `{error: true}` to mark event as an error\n         observer.next({error: true, duplicated: true});\n       } else {\n         observer.next(null);\n       }\n       observer.complete();\n     }, (error) => {\n       this.notify.notifyError('Failed to verify user name!', error);\n     });\n   });\n\n  /**\n   * Checks that the password in the Confirm Password field \n   * matches the password in the Password field.\n   * @param control Password that is handled.\n   */\n  confirmValidator = (control: FormControl): { [s: string]: boolean } => {\n\n    // case: no password given\n    if (!control.value) {\n      return {error: true, required: true};\n    }\n    \n    // case: password does not match\n    else if (control.value !== this.validateForm.controls.password.value) {\n      return {confirm: true, error: true};\n    }\n    return {};\n  };\n\n  /**\n   * Recalculates the value and validation status of the password confirmation field.\n   * This is triggered whenever the user changes the password in the register form.\n   */\n  validateConfirmPassword(): void {\n    setTimeout(() => this.validateForm.controls.confirm.updateValueAndValidity());\n  }\n\n  /**\n   * Given data needed for account creation\n   * and carries out the creation by issuing a mutation to the backend. \n   * If successfull, the user is redirected to the Login page.\n   * @param value - Data (from the register form) that is handled.\n   */\n  submitForm(value: { username: string; email: string; password: string; confirm: string }): void {\n    for (const key of Object.keys(this.validateForm.controls)) {\n      this.validateForm.controls[key].markAsDirty();\n      this.validateForm.controls[key].updateValueAndValidity();\n    }\n    const input: RegisterUserInput = {\n      username: value.username,\n      displayName: value.username,\n      password: value.password,\n      email: value.email\n    };\n\n    this.registerUserMutation.mutate({input}).subscribe(({data}) => {\n      this.router.navigate(['login']);\n    }, (error) => {\n      this.notify.notifyError('Failed to register the user!', error);\n    });\n  }\n\n  /**\n   * Resets form fields and marks all controls as pristine.\n   * @param e - Event affecting the form reset.\n   */\n  resetForm(e: MouseEvent): void {\n    e.preventDefault();\n    this.validateForm.reset();\n    for (const key of Object.keys(this.validateForm.controls)) {\n      this.validateForm.controls[key].markAsPristine();\n      this.validateForm.controls[key].updateValueAndValidity();\n    }\n  }\n  \n  /**\n   * Loads the login page.\n   * @param e - Event affecting the form reset.\n   */\n  backToLogin(e: MouseEvent): void {\n    e.preventDefault();\n    this.router.navigate(['login']);\n  }\n}\n\n    \n\n    \n        \n\n  \n\n    \n\n      \n      \n        \n      \n\n      \n      \n        Register\n      \n\n    \n\n    \n\n      \n      \n\n        \n        \n          Username\n        \n\n        \n        \n          \n          \n            \n              Please enter a Username!\n            \n            \n              This Username is taken!\n            \n          \n        \n      \n\n      \n      \n\n        \n        \n          Email\n        \n\n        \n        \n          \n          \n            \n              Please enter a valid Email!\n            \n            \n              Please enter your Email!\n            \n          \n        \n      \n\n      \n      \n\n        \n        \n          Password\n        \n\n        \n        \n          \n        \n      \n\n      \n      \n\n        \n        \n          Confirm Password\n        \n\n        \n        \n          \n          \n            \n              Please enter your Password!\n            \n            \n              Passwords do not match!\n            \n          \n        \n      \n\n      \n      \n\n        \n        \n\n          \n          Register\n\n          \n          Reset\n\n          \n          Back\n        \n      \n    \n\n  \n\n\n    \n\n    \n                \n                    ./register.component.css\n                \n                \n      [nz-form] {\n        max-width: 600px;\n      }\n\n      button {\n        margin-left: 8px;\n      }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    Register                                                    Username                                                                      Please enter a Username!                                      This Username is taken!                                                                          Email                                                                      Please enter a valid Email!                                      Please enter your Email!                                                                          Password                                                                                      Confirm Password                                                                      Please enter your Password!                                      Passwords do not match!                                                                                    Register                    Reset                    Back                    '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RelationEdge.html":{"url":"interfaces/RelationEdge.html","title":"interface - RelationEdge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RelationEdge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/issue-graph-nodes.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Edge\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            sourceIssues\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sourceIssues\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sourceIssues:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {GraphComponent, GraphInterface} from '@app/data/issue-graph/graph-data';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\n\nexport {\n  IssueNode, ComponentNode, InterfaceNode, IssueGroupContainerNode, RelationEdge,\n  createComponentNode, createInterfaceNode, createIssueGroupContainerNode, createIssueFolderNode,\n  createRelationEdge, createConsumptionEdge, createInterfaceProvisionEdge,\n  Position,\n  getIssueFolderId\n};\n\nexport enum NodeType {\n  Component = 'component',\n  Interface = 'interface',\n  InterfaceConsumer = 'interface-connect',\n  IssueGroupContainer = 'issue-group-container'\n}\n\n/**\n * This file includes type definitions and creation functions (think constructors)\n * for nodes and edges that are added to the graph editor in order to visualize the project.\n * Since the data that is stored with these differs based on what they represent (e.g.\n * interface vs component node) we give each their own type. We do this by extending\n * the Node class or the Edge class of the grapheditor. These classes are instantiated\n * via calls to the contained create* functions within the drawGraph method of the IssueGraphComponent.\n */\n\ninterface IssueNode extends Node {\n  id: string;\n  title: string;\n  issueGroupContainer?: IssueGroupContainerNode;\n}\n\ninterface ComponentNode extends IssueNode {\n  data: GraphComponent;\n}\n\nfunction createComponentNode(component: GraphComponent, position: Position): ComponentNode {\n  return {\n    ...(position || zeroPosition),\n    id: component.id,\n    title: component.name,\n    type: NodeType.Component,\n    data: component\n  };\n}\n\ninterface InterfaceNode extends IssueNode {\n  offeredById: string;\n}\n\nfunction createInterfaceNode(intrface: GraphInterface, position: Position): InterfaceNode {\n  return {\n    ...(position || zeroPosition),\n    id: intrface.id,\n    title: intrface.name,\n    type: NodeType.Interface,\n    offeredById: intrface.offeredBy,\n  };\n}\n\ninterface IssueGroupContainerNode extends Node {\n  position: string;\n  issueGroupNodeIds: Set;\n}\n\nfunction createIssueGroupContainerNode(node: IssueNode): IssueGroupContainerNode {\n  return {\n    id: `${node.id}__issue-group-container`,\n    type: NodeType.IssueGroupContainer,\n    dynamicTemplate: 'issue-group-container',\n    x: 0,\n    y: 0,\n    position: 'bottom',\n    issueGroupNodeIds: new Set(),\n  };\n}\n\ninterface IssueFolderNode extends Node {\n  type: IssueCategory;\n  issueCount: string;\n}\n\nfunction createIssueFolderNode(node: IssueNode, issueCategory: IssueCategory, issueCount: string): IssueFolderNode {\n  return {\n    id: getIssueFolderId(node.id, issueCategory),\n    type: issueCategory,\n    x: 0,\n    y: 0,\n    issues: new Set(),\n    issueCount\n  };\n}\n\ninterface RelationEdge extends Edge {\n  sourceIssues: Set;\n}\n\nfunction createRelationEdge(sourceId: string, targetId: string, edgeType = folderEdgeTypes.RelatedTo): RelationEdge {\n  return {\n    id: `s${sourceId}t${targetId}r${edgeType}`,\n    source: sourceId,\n    target: targetId,\n    type: folderEdgeTypes.RelatedTo,\n    markerEnd: {\n      template: 'arrow',\n      relativeRotation: 0,\n    },\n    dragHandles: [],\n    sourceIssues: new Set()\n  };\n}\n\nfunction createConsumptionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.InterfaceConsumer,\n    markerEnd: {\n      template: 'interface-connector',\n      relativeRotation: 0,\n    },\n  };\n}\n\nfunction createInterfaceProvisionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.Interface,\n    dragHandles: [],\n  };\n}\n\nfunction getIssueFolderId(id: string, issueCategory: IssueCategory): string {\n  return `${id}__${issueCategory}`;\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst zeroPosition = {x: 0, y: 0};\n\nenum folderEdgeTypes {\n  RelatedTo = 'relatedTo',\n  Depends = 'dependency',\n  Duplicates = 'duplicate'\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RemoveDialogComponent.html":{"url":"components/RemoveDialogComponent.html","title":"component - RemoveDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RemoveDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/remove-dialog/remove-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is a confirmation dialog for anything that involves deleting\nExample\n// ...\n\nconstructor(private dialog: MatDialog, ...)\n\n// ...\n\nconst dialogRef = this.dialog.open(RemoveDialogComponent,\n{\n  data: {\n    title: 'This is the title of the dialog',\n    messages: ['Every entry is a new line',\n               'This is the next line',\n               ' Lines beginning with a space will be indented'],\n    verificationName: 'In order for the user to be able to click the confirm button, this text has to be typed',\n    confirmButtonText: 'This is the text of the confirm button'\n  }\n});\n\ndialogRef.afterClosed().subscribe(confirm => {\n  if (confirm) {\n    console.log('Deleted!');\n  } else {\n    console.log('Not deleted!');\n  }\n});\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-remove-dialog\n            \n\n            \n                styleUrls\n                ./remove-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./remove-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                matchValidator\n                            \n                            \n                                verificationNameInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onDeleteClick\n                            \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: DialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/remove-dialog/remove-dialog.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteClick\n                        \n                    \n                \n            \n            \n                \nonDeleteClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/remove-dialog/remove-dialog.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/remove-dialog/remove-dialog.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/remove-dialog/remove-dialog.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/remove-dialog/remove-dialog.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        matchValidator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ValidatorFn\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/remove-dialog/remove-dialog.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verificationNameInput\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', this.matchValidator)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/remove-dialog/remove-dialog.component.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormControl, ValidatorFn} from '@angular/forms';\n\n/**\n * This component is a confirmation dialog for anything that involves deleting\n *\n * #### Example\n * ```ts\n * // ...\n *\n * constructor(private dialog: MatDialog, ...)\n *\n * // ...\n *\n * const dialogRef = this.dialog.open(RemoveDialogComponent,\n * {\n *   data: {\n *     title: 'This is the title of the dialog',\n *     messages: ['Every entry is a new line',\n *                'This is the next line',\n *                ' Lines beginning with a space will be indented'],\n *     verificationName: 'In order for the user to be able to click the confirm button, this text has to be typed',\n *     confirmButtonText: 'This is the text of the confirm button'\n *   }\n * });\n *\n * dialogRef.afterClosed().subscribe(confirm => {\n *   if (confirm) {\n *     console.log('Deleted!');\n *   } else {\n *     console.log('Not deleted!');\n *   }\n * });\n * ```\n */\n@Component({\n  selector: 'app-remove-dialog',\n  templateUrl: './remove-dialog.component.html',\n  styleUrls: ['./remove-dialog.component.scss']\n})\nexport class RemoveDialogComponent implements OnInit {\n  matchValidator: ValidatorFn = control => {\n    return control.value === this.data.verificationName ? null : {'Names don\\'t match': true};\n  }\n\n  verificationNameInput = new FormControl('', this.matchValidator);\n\n  constructor(public dialogRef: MatDialogRef,\n              @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n  }\n\n  ngOnInit(): void {\n    this.verificationNameInput.markAsTouched();\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close(false);\n  }\n\n  onDeleteClick(): void {\n    this.dialogRef.close(true);\n  }\n}\n\nexport interface DialogData {\n  title: string;\n  /** The list of lines shown in the dialog. If a line starts with a space, the line will be indented */\n  messages: Array;\n  /** If set, shows a text box that forces the user to type the specified text before being able to click the confirm button */\n  verificationName?: string;\n  /** If set, shows this text as the text in the confirm button. If not set, button shows 'Delete' */\n  confirmButtonText?: string;\n}\n\n    \n\n    \n        \n  delete\n  {{data.title}}\n\n\n\n  \n    \n      &nbsp;&nbsp;&nbsp;&nbsp;\n      {{message.startsWith(' ') ? message.substring(1) : message}}\n    \n  \n  \n    \n      Type &quot;{{data.verificationName}}&quot; to confirm:\n      \n        Confirm name\n        \n        Names don't match!\n      \n    \n\n    \n      \n    \n  \n\n\n\n  Cancel\n  \n    {{this.data.confirmButtonText ? this.data.confirmButtonText : 'Delete'}}\n  \n\n\n    \n\n    \n                \n                    ./remove-dialog.component.scss\n                \n                .mat-dialog-content{\n  display: flex;\n  flex-direction: column;\n}\n\n.content {\n  display: inline-block;\n  align-self: center;\n  place-self: center;\n  vertical-align: middle;\n  border-top: lightgray;\n  border-top-style: solid;\n  border-bottom: lightgray;\n  border-bottom-style: solid;\n  font-weight: bold;\n  font-size: 1.1em;\n  padding: 8px;\n  margin: 0;\n  width: 100%;\n  overflow: auto;\n  flex: 1 1 auto;\n  white-space: nowrap;\n}\n\n.title{\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n\n.delete-icon {\n  flex: 0 0 auto;\n}\n\n.mat-success {\n  background-color: green;\n  color: #fff;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  delete  {{data.title}}                      {{message.startsWith(\\' \\') ? message.substring(1) : message}}                  Type \"{{data.verificationName}}\" to confirm:              Confirm name                Names don\\'t match!                            Cancel      {{this.data.confirmButtonText ? this.data.confirmButtonText : \\'Delete\\'}}  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'RemoveDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RemoveProjectMemberComponentComponent.html":{"url":"components/RemoveProjectMemberComponentComponent.html","title":"component - RemoveProjectMemberComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RemoveProjectMemberComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/remove-project-member-component/remove-project-member-component.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-remove-project-member-component\n            \n\n            \n                styleUrls\n                ./remove-project-member-component.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./remove-project-member-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                selectedUsers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onDeleteClick\n                            \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/remove-project-member-component/remove-project-member-component.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteClick\n                        \n                    \n                \n            \n            \n                \nonDeleteClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/remove-project-member-component/remove-project-member-component.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/remove-project-member-component/remove-project-member-component.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/remove-project-member-component/remove-project-member-component.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/remove-project-member-component/remove-project-member-component.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/remove-project-member-component/remove-project-member-component.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Inject } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-remove-project-member-component',\n  templateUrl: './remove-project-member-component.component.html',\n  styleUrls: ['./remove-project-member-component.component.scss']\n})\nexport class RemoveProjectMemberComponentComponent implements OnInit {\n\n\n  constructor(public dialogRef: MatDialogRef, @Inject(MAT_DIALOG_DATA) public data) { }\n\n  //users selected in the dialog to be deleted\n  selectedUsers = [];\n\n  ngOnInit(): void {\n  }\n\n  onNoClick() {\n    this.dialogRef.close();\n  }\n\n  onDeleteClick() {\n    const data = {usersToDelete: this.selectedUsers};\n    this.dialogRef.close(data);\n  }\n\n}\n\n    \n\n    \n        Remove Project Member\n\n\n  \n    \n    \n    \n\n      {{user.displayName}}\n    \n  \n\n\n\n  Cancel\n  Delete User \n\n\n    \n\n    \n                \n                    ./remove-project-member-component.component.scss\n                \n                .dialog-content {\n    min-height: 400px;\n    min-width: 400px;\n    max-width: 600px;\n  }\n  .actions {\n    float:right\n  }\n  .stretch {\n    width: 100%;\n  }\n\n  .mat-success {\n    background-color: green;\n    color: #fff;\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Remove Project Member                    {{user.displayName}}        Cancel  Delete User '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'RemoveProjectMemberComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SetEditorComponent.html":{"url":"components/SetEditorComponent.html","title":"component - SetEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SetEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/set-editor/set-editor.component.ts\n\n\n\n    \n        Description\n    \n    \n        The set editor displays and edits a list of items (used in the issue detail sidebar).\n\nThe list of selected items listSet may be either a local array of IDs or a ListId.\nWhen editing, items may be selected from a list of all available items #listAll.\nThe list of items may be searched using a search box (#makeFilter and #scoreKeys).\nUpon closing the edit dialog, a changeset of additions and deletions is passed to a callback (#applyChangeset).\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-set-editor\n            \n\n            \n                styleUrls\n                ./set-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./set-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                beginEditing\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                applyChangeset\n                            \n                            \n                                createItem\n                            \n                            \n                                editable\n                            \n                            \n                                emptyResultsLabel\n                            \n                            \n                                emptySuggestionsLabel\n                            \n                            \n                                hydrate\n                            \n                            \n                                itemOps\n                            \n                            \n                                listAll\n                            \n                            \n                                listSet\n                            \n                            \n                                makeFilter\n                            \n                            \n                                scoreKeys\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deleteItem\n                            \n                            \n                                editItem\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, dialogService: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/set-editor/set-editor.component.ts:79\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        applyChangeset\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:42\n                            \n                        \n                \n                    \n                        Callback for applying a changeset to the listSet.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        createItem\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:59\n                            \n                        \n                \n                    \n                        Callback to create a new item (enabled using itemOps). If the promise returns a node ID, it will be added to the set.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:48\n                            \n                        \n                \n                    \n                        Set editable to false to just display items in the set, without being able to edit them.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        emptyResultsLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'No results'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:52\n                            \n                        \n                \n                    \n                        Set to override the “no results” text in the dialog. Appears when there is a search query.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        emptySuggestionsLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'No suggestions'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:50\n                            \n                        \n                \n                    \n                        Set to override the “no results” text in the dialog. Appears only when there is no search query.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hydrate\n                    \n                \n                \n                    \n                        Type :         Promise>\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:54\n                            \n                        \n                \n                    \n                        Pass a HydrateList object to load the listSet with existing data instead of sending a request to the server.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        itemOps\n                    \n                \n                \n                    \n                        Type :         ItemOps\n\n                    \n                \n                \n                    \n                        Default value : 'none'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:56\n                            \n                        \n                \n                    \n                        Additional operations available from the set editor.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        listAll\n                    \n                \n                \n                    \n                        Type :     ListId | SetMultiSource\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:40\n                            \n                        \n                \n                    \n                        The list of all possible items. Should be a superset of listSet, as otherwise the user may not be able to deselect items.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        listSet\n                    \n                \n                \n                    \n                        Type :     ListId | NodeId[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:38\n                            \n                        \n                \n                    \n                        The list that contains all nodes that are part of the set. string[] is treated as local state.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        makeFilter\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:44\n                            \n                        \n                \n                    \n                        Callback for making a filter for the given search query.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        scoreKeys\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:46\n                            \n                        \n                \n                    \n                        Object keys used for scoring a search result. (e.g. 'title') Should correspond to fields searched in makeFilter.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deleteItem\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:63\n                            \n                        \n                \n                    \n                        Callback to delete an item.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editItem\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:61\n                            \n                        \n                \n                    \n                        Callback to edit an item.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        beginEditing\n                        \n                    \n                \n            \n            \n                \nbeginEditing()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor.component.ts:147\n                \n            \n\n\n            \n                \n                    Opens the editor dialog.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  ContentChild,\n  ElementRef, EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit, Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport { ListId, NodeId } from '@app/data-dgql/id';\nimport { DataList, HydrateList } from '@app/data-dgql/query';\nimport DataService from '@app/data-dgql';\nimport { Subscription } from 'rxjs';\nimport { ItemDirective } from '@app/components/item.directive';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SetEditorDialogComponent, SetEditorDialogData, SetMultiSource } from './set-editor-dialog.component';\n\ntype ItemOps = 'none' | 'edit' | 'create-edit' | 'create-edit-delete';\n\n/**\n * The set editor displays and edits a list of items (used in the issue detail sidebar).\n *\n * - The list of selected items {@link listSet} may be either a local array of IDs or a {@link ListId}.\n * - When editing, items may be selected from a list of all available items {@link #listAll}.\n * - The list of items may be searched using a search box ({@link #makeFilter} and {@link #scoreKeys}).\n * - Upon closing the edit dialog, a changeset of additions and deletions is passed to a callback ({@link #applyChangeset}).\n */\n@Component({\n  selector: 'app-set-editor',\n  templateUrl: './set-editor.component.html',\n  styleUrls: ['./set-editor.component.scss']\n})\nexport class SetEditorComponent implements OnInit, OnChanges, OnDestroy {\n  /** The list that contains all nodes that are part of the set. string[] is treated as local state. */\n  @Input() listSet: ListId | NodeId[];\n  /** The list of all possible items. Should be a superset of listSet, as otherwise the user may not be able to deselect items. */\n  @Input() listAll: ListId | SetMultiSource;\n  /** Callback for applying a changeset to the listSet. */\n  @Input() applyChangeset: (additions: NodeId[], deletions: NodeId[]) => Promise;\n  /** Callback for making a filter for the given search query. */\n  @Input() makeFilter: (searchQuery: string) => F;\n  /** Object keys used for scoring a search result. (e.g. 'title') Should correspond to fields searched in makeFilter. */\n  @Input() scoreKeys: string[];\n  /** Set editable to false to just display items in the set, without being able to edit them. */\n  @Input() editable = true;\n  /** Set to override the “no results” text in the dialog. Appears only when there is no search query. */\n  @Input() emptySuggestionsLabel = 'No suggestions';\n  /** Set to override the “no results” text in the dialog. Appears when there is a search query. */\n  @Input() emptyResultsLabel = 'No results';\n  /** Pass a HydrateList object to load the listSet with existing data instead of sending a request to the server. */\n  @Input() hydrate: Promise>;\n  /** Additional operations available from the set editor. */\n  @Input() itemOps: ItemOps = 'none';\n\n  /** Callback to create a new item (enabled using itemOps). If the promise returns a node ID, it will be added to the set. */\n  @Input() createItem: () => Promise;\n  /** Callback to edit an item. */\n  @Output() editItem = new EventEmitter();\n  /** Callback to delete an item. */\n  @Output() deleteItem = new EventEmitter();\n\n  /** @ignore */\n  @ViewChild('titleText') titleText: ElementRef;\n  /** @ignore */\n  @ContentChild(ItemDirective, { read: TemplateRef }) itemTemplate;\n\n  /** @ignore */\n  public listSet$: DataList;\n  /** @ignore */\n  private listSetSub: Subscription;\n\n  /**\n   * @ignore\n   * If true, the listSet$ variable is null and listSet contains an array of node IDs.\n   */\n  public isLocalSet = false;\n\n  constructor(\n    private dataService: DataService,\n    private dialogService: MatDialog\n  ) {}\n\n  /** @ignore */\n  reloadListSet() {\n    if (Array.isArray(this.listSet)) {\n      this.isLocalSet = true;\n      if (this.listSet$) {\n        this.listSetSub.unsubscribe();\n        this.listSet$ = null;\n      }\n    } else {\n      this.isLocalSet = false;\n      this.listSet$ = this.dataService.getList(this.listSet);\n      this.listSetSub = this.listSet$.subscribe();\n    }\n  }\n\n  ngOnInit() {\n    this.reloadListSet();\n    if (this.hydrate && this.listSet$) {\n      this.listSet$.hydrateInitial(this.hydrate);\n    }\n  }\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.listSet) {\n      const newValue = changes.listSet.currentValue;\n      if (this.isLocalSet !== (typeof newValue !== 'string')) {\n        this.reloadListSet();\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.listSetSub?.unsubscribe();\n  }\n\n  /**\n   * @ignore\n   * This method is needed to satisfy static type checking bounds\n   */\n  getListSetLength(): number {\n    if (this.isLocalSet) {\n      return (this.listSet as NodeId[]).length;\n    }\n    throw new Error('bad state');\n  }\n\n  /** @ignore */\n  private onDialogApplyChangeset = (additions: NodeId[], deletions: NodeId[]): Promise => {\n    return this.applyChangeset(additions, deletions);\n  }\n\n  /** @ignore */\n  private onDialogCreateItem = () => this.createItem();\n  /** @ignore */\n  private onDialogEditItem = (item) => this.editItem.emit(item);\n  /** @ignore */\n  private onDialogDeleteItem = (item) => this.deleteItem.emit(item);\n\n  /**\n   * @internal\n   * Opens the editor dialog.\n   */\n  beginEditing() {\n    this.dialogService.open>(SetEditorDialogComponent, {\n      width: '400px',\n      data: {\n        title: this.titleText?.nativeElement.textContent || '',\n        listSet: this.listSet,\n        listAll: this.listAll,\n        itemTemplate: this.itemTemplate,\n        applyChangeset: this.onDialogApplyChangeset,\n        makeFilter: this.makeFilter,\n        scoreKeys: this.scoreKeys,\n        emptySuggestionsLabel: this.emptySuggestionsLabel,\n        emptyResultsLabel: this.emptyResultsLabel,\n        createItem: this.itemOps.includes('create') ? this.onDialogCreateItem : null,\n        editItem: this.itemOps.includes('edit') ? this.onDialogEditItem : null,\n        deleteItem: this.itemOps.includes('delete') ? this.onDialogDeleteItem : null\n      } as SetEditorDialogData\n    });\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n        \n            settings\n        \n    \n    \n        \n            \n                \n                    \n                        \n                    \n                \n            \n        \n        \n            \n                \n            \n            \n                ...\n            \n        \n        \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./set-editor.component.scss\n                \n                :host {\n  display: block;\n}\n\n.app-set-editor {\n  .set-editor-title {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    min-height: 36px;\n\n    .title-text-container {\n      font-weight: bold;\n      line-height: 1.5;\n    }\n  }\n\n  .items-empty {\n    opacity: 0.5;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    settings                                                                                                                                                                                                                                    ...                                                    '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'SetEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SetEditorDialogComponent.html":{"url":"components/SetEditorDialogComponent.html","title":"component - SetEditorDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SetEditorDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/set-editor/set-editor-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        This is an internal component used in the set editor.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-set-editor-dialog\n            \n\n            \n                styleUrls\n                ./set-editor-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./set-editor-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                additions\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Private\n                                deletions\n                            \n                            \n                                    Public\n                                isLocalSet\n                            \n                            \n                                    Public\n                                listAll\n                            \n                            \n                                    Public\n                                listSet$\n                            \n                            \n                                    Private\n                                listSetSub\n                            \n                            \n                                    Public\n                                localSet\n                            \n                            \n                                    Public\n                                searchQuery\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                apply\n                            \n                            \n                                createItem\n                            \n                            \n                                getEncodedId\n                            \n                            \n                                getNodeId\n                            \n                            \n                                isInSet\n                            \n                            \n                                searchQueryDidChange\n                            \n                            \n                                toggleInSet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, notifyService: UserNotifyService, dialogRef: MatDialogRef>, data: SetEditorDialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:211\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notifyService\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    SetEditorDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        apply\n                        \n                    \n                \n            \n            \n                \napply()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:280\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createItem\n                        \n                    \n                \n            \n            \n                \ncreateItem()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:293\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEncodedId\n                        \n                    \n                \n            \n            \n                \ngetEncodedId(item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:251\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NodeIdEnc\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNodeId\n                        \n                    \n                \n            \n            \n                \ngetNodeId(item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:246\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NodeId\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isInSet\n                        \n                    \n                \n            \n            \n                \nisInSet(item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:255\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchQueryDidChange\n                        \n                    \n                \n            \n            \n                \nsearchQueryDidChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:239\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleInSet\n                        \n                    \n                \n            \n            \n                \ntoggleInSet(item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:269\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        additions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:209\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SetEditorDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:217\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        deletions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:210\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isLocalSet\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:204\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        listAll\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MultiSourceList\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:207\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        listSet$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataList\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:206\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        listSetSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:208\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        localSet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NodeIdEnc[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:205\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        searchQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:211\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnDestroy, OnInit, TemplateRef } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {\n  decodeListId,\n  decodeNodeId,\n  encodeListId,\n  encodeNodeId,\n  ListId,\n  ListIdEnc,\n  NodeId,\n  NodeIdEnc,\n  nodeTypeFromTypename\n} from '@app/data-dgql/id';\nimport { DataList } from '@app/data-dgql/query';\nimport { Subscription } from 'rxjs';\nimport DataService from '@app/data-dgql';\nimport { UserNotifyService } from '@app/user-notify/user-notify.service';\nimport { quickScore } from 'quick-score';\n\n/**\n * This interface is used to source items from multiple sources in the set editor.\n *\n * staticSources specifies lists whose items will always be loaded.\n * sourceNodes specifies a list of nodes whose the sub-items will be loaded (e.g. a list of components whose labels will be loaded).\n */\nexport interface SetMultiSource {\n  /** A static list of source lists. */\n  staticSources: ListId[];\n  /** A list of nodes that will be passed to listFromNode. */\n  sourceNodes?: ListId | NodeId[];\n  /** Maps nodes from sourceNodes to lists from which items will be sourced. */\n  listFromNode?: (n: NodeId) => ListId;\n}\n\n/**\n * This is an internal component used to load data from multiple sources and through a layer of indirection (also see SetMultiSource).\n */\nclass MultiSourceList {\n  /** A DataList that loads the value of sourceNodes, if it's a ListId. */\n  public sourceNodeList?: DataList;\n  /** @ignore */\n  public sourceNodeListSub?: Subscription;\n  /** The list of nodes specified in sourceNodes, if it's a NodeId[]. */\n  public staticSourceNodeList?: NodeId[];\n  /** List of all sources that will be included in the results. */\n  public sources: Map> = new Map();\n  /** @ignore */\n  public sourceSubs: Map = new Map();\n  /** Max number of items in results. */\n  public limit = 10;\n  /** Current results. */\n  public results?: T[];\n  /** If true, there are more than `limit` items in the source data. */\n  public hasMore = false;\n  /**\n   * Current search query. Used to rank results by relevance.\n   * The filters are computed separately! Use {@link #setFilter} to set both simultaneously.\n   */\n  public query = '';\n\n  constructor(public spec: SetMultiSource, public scoreKeys: string[], private dataService: DataService) {\n    if (Array.isArray(spec.sourceNodes)) {\n      this.staticSourceNodeList = spec.sourceNodes;\n    } else if (typeof spec.sourceNodes === 'object') {\n      this.sourceNodeList = dataService.getList(spec.sourceNodes);\n      this.sourceNodeListSub = this.sourceNodeList.subscribe(() => this.update());\n    }\n    this.update();\n  }\n\n  /** Creates a new MultiSourceList that actually just loads a single list. */\n  static fromSingleList(list: ListId, scoreKeys: string[], dataService: DataService) {\n    return new this({ staticSources: [list] }, scoreKeys, dataService);\n  }\n\n  /** Updates lists. */\n  update() {\n    const newSourceSet = new Set();\n    for (const id of this.sourceNodeList?.current?.keys() || []) {\n      const nodeId = decodeNodeId(id);\n      newSourceSet.add(encodeListId(this.spec.listFromNode(nodeId)));\n    }\n    for (const nodeId of this.staticSourceNodeList || []) {\n      newSourceSet.add(encodeListId(this.spec.listFromNode(nodeId)));\n    }\n    for (const source of this.spec.staticSources) {\n      newSourceSet.add(encodeListId(source));\n    }\n\n    for (const source of newSourceSet) {\n      if (!this.sources.has(source)) {\n        const list = this.dataService.getList(decodeListId(source));\n        list.interactive = true;\n        this.sources.set(source, list);\n        this.sourceSubs.set(source, list.subscribe(() => this.updateResults()));\n      }\n    }\n    for (const source of [...this.sources.keys()]) {\n      if (!newSourceSet.has(source)) {\n        this.sourceSubs.get(source).unsubscribe();\n        this.sourceSubs.delete(source);\n        this.sources.delete(source);\n      }\n    }\n  }\n\n  /** Sets a filter on all lists. */\n  setFilter(query: string, filter: F) {\n    this.query = query;\n    for (const source of this.sources.values()) {\n      source.filter = filter;\n    }\n  }\n\n  /** Scores an item for ranking in results. */\n  score(item: T) {\n    const matchStrings = [];\n    for (const key of this.scoreKeys) {\n      let cursor = item;\n      for (const objKey of key.split('.')) {\n        cursor = cursor[objKey];\n        if (!cursor) {\n          break;\n        }\n      }\n      if (cursor) {\n        matchStrings.push(cursor);\n      }\n    }\n\n    return quickScore(matchStrings.join(' '), this.query);\n  }\n\n  /** Updates the results array from loaded data. */\n  updateResults() {\n    const seenItems = new Set();\n    const items = [];\n    this.hasMore = false;\n    for (const source of this.sources.values()) {\n      if (!source.hasData) {\n        continue;\n      }\n      for (const [id, item] of source.current.entries()) {\n        if (!seenItems.has(id)) {\n          seenItems.add(id);\n          items.push(item);\n        }\n      }\n      this.hasMore = this.hasMore || (source.current.size  this.score(a) - this.score(b));\n    items.splice(this.limit);\n\n    this.results = items;\n  }\n\n  /** If true, something is loading somewhere. */\n  isLoading() {\n    if (this.sourceNodeList?.loading) {\n      return true;\n    }\n    for (const source of this.sources.values()) {\n      if (source.loading) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /** Unsubscribes from all subscriptions. This object should no longer be used afterwards. */\n  unsubscribe() {\n    this.sourceNodeListSub?.unsubscribe();\n    this.sourceSubs.forEach(sub => sub.unsubscribe());\n  }\n}\n\n/** Types of item operations that may be made available. */\nexport type ItemOps = 'none' | 'edit' | 'create-edit' | 'create-edit-delete';\n\nexport interface SetEditorDialogData {\n  title: string;\n  listSet: ListId | NodeId[];\n  listAll: ListId | SetMultiSource;\n  applyChangeset: (add: NodeId[], del: NodeId[]) => Promise;\n  itemTemplate: TemplateRef;\n  makeFilter: (query: string) => F;\n  scoreKeys: string[];\n  emptySuggestionsLabel: string;\n  emptyResultsLabel: string;\n  createItem?: () => Promise;\n  editItem?: ({ id: NodeId, preview: T }) => void;\n  deleteItem?: ({ id: NodeId, preview: T }) => void;\n}\n\n/** This is an internal component used in the set editor. */\n@Component({\n  selector: 'app-set-editor-dialog',\n  templateUrl: './set-editor-dialog.component.html',\n  styleUrls: ['./set-editor-dialog.component.scss']\n})\nexport class SetEditorDialogComponent implements OnInit, OnDestroy {\n  public isLocalSet = false;\n  public localSet: NodeIdEnc[] = [];\n  public listSet$: DataList;\n  public listAll: MultiSourceList;\n  private listSetSub: Subscription;\n  private additions: Set = new Set();\n  private deletions: Set = new Set();\n  public searchQuery = '';\n\n  constructor(\n    private dataService: DataService,\n    private notifyService: UserNotifyService,\n    private dialogRef: MatDialogRef>,\n    @Inject(MAT_DIALOG_DATA) public data: SetEditorDialogData\n  ) {}\n\n  ngOnInit() {\n    if (Array.isArray(this.data.listSet)) {\n      this.isLocalSet = true;\n      this.localSet = [...this.data.listSet].map(id => encodeNodeId(id));\n    } else {\n      this.listSet$ = this.dataService.getList(this.data.listSet);\n    }\n    this.listAll = ('staticSources' in this.data.listAll)\n      ? new MultiSourceList(this.data.listAll, this.data.scoreKeys, this.dataService)\n      : MultiSourceList.fromSingleList(this.data.listAll, this.data.scoreKeys, this.dataService);\n\n    if (this.listSet$) {\n      this.listSetSub = this.listSet$?.subscribe();\n      // TODO: is this a reasonable heuristic for the listSet count? we need to cover >= results from listAll\n      this.listSet$.count = 10;\n      this.listSet$.interactive = true;\n    }\n  }\n\n  searchQueryDidChange() {\n    if (this.listSet$) {\n      this.listSet$.filter = this.data.makeFilter(this.searchQuery);\n    }\n    this.listAll.setFilter(this.searchQuery, this.data.makeFilter(this.searchQuery));\n  }\n\n  getNodeId(item): NodeId {\n    const type = nodeTypeFromTypename(item.__typename);\n    return { type, id: item.id };\n  }\n\n  getEncodedId(item): NodeIdEnc {\n    return encodeNodeId(this.getNodeId(item));\n  }\n\n  isInSet(item): boolean {\n    const id = this.getEncodedId(item);\n    if (this.additions.has(id)) {\n      return true;\n    }\n    if (this.deletions.has(id)) {\n      return false;\n    }\n    if (this.isLocalSet) {\n      return this.localSet.includes(id);\n    }\n    return this.listSet$.current?.has(id) || false;\n  }\n\n  toggleInSet(item): void {\n    const id = this.getEncodedId(item);\n    if (this.isInSet(item)) {\n      this.additions.delete(id);\n      this.deletions.add(id);\n    } else {\n      this.deletions.delete(id);\n      this.additions.add(id);\n    }\n  }\n\n  apply() {\n    if (this.additions.size + this.deletions.size === 0) {\n      this.dialogRef.close(null);\n      return;\n    }\n\n    this.data.applyChangeset([...this.additions].map(decodeNodeId), [...this.deletions].map(decodeNodeId)).then(() => {\n      this.dialogRef.close(null);\n    }).catch(error => {\n      this.notifyService.notifyError('Failed to apply changes', error);\n    });\n  }\n\n  createItem() {\n    this.data.createItem().then(node => {\n      if (node) {\n        this.additions.add(encodeNodeId(node));\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.listSetSub?.unsubscribe();\n    this.listAll.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n    {{data.title}}\n    \n        \n            \n                Search\n                search\n                \n            \n        \n        \n            \n                \n                    \n                        \n                    \n\n                    \n                        \n                            \n                                \n                                    Edit\n                                \n                                \n                                    Delete\n                                \n                            \n                        \n                        \n                            more_vert\n                        \n                    \n                \n            \n            \n                \n                    \n                    \n                    \n                    \n                \n                Use search to find more items\n            \n            \n                \n                    {{data.emptyResultsLabel}}\n                \n                \n                    {{data.emptySuggestionsLabel}}\n                \n            \n            \n                \n                    add\n                    Create new\n                \n            \n        \n    \n    \n        \n            Cancel\n        \n        \n            Apply\n        \n    \n\n\n    \n\n    \n                \n                    ./set-editor-dialog.component.scss\n                \n                .set-editor-dialog {\n  .dialog-search {\n    .search-field {\n      width: 100%;\n    }\n  }\n\n  .dialog-items {\n    margin-bottom: 16px;\n\n    .selectable-item {\n      border-top: 1px solid rgba(0, 0, 0, 0.2);\n      display: flex;\n\n      &:first-child {\n        border-top: none;\n      }\n\n      .inner-checkbox {\n        display: block;\n        flex: 1;\n        padding: 8px 16px;\n      }\n    }\n\n    .items-more {\n      text-align: center;\n      opacity: 0.7;\n      font-size: smaller;\n\n      .more-dots {\n        display: block;\n        margin-bottom: 4px;\n\n        .dot {\n          display: block;\n          width: 4px;\n          height: 4px;\n          border-radius: 2px;\n          background: currentColor;\n          margin: 0 auto 3px auto;\n\n          &:nth-child(2) { opacity: 0.6; }\n          &:nth-child(3) { opacity: 0.27; }\n          &:nth-child(4) { opacity: 0.08; }\n        }\n      }\n    }\n\n    .items-empty {\n      text-align: center;\n      opacity: 0.5;\n    }\n\n    .items-create {\n      text-align: center;\n      margin-top: 16px;\n      margin-bottom: 8px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{data.title}}                                        Search                search                                                                                                                                                                                                                                                                                    Edit                                                                                                    Delete                                                                                                                                        more_vert                                                                                                                                                                                                                    Use search to find more items                                                            {{data.emptyResultsLabel}}                                                    {{data.emptySuggestionsLabel}}                                                                            add                    Create new                                                                Cancel                            Apply            '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'SetEditorDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SetEditorDialogData.html":{"url":"interfaces/SetEditorDialogData.html","title":"interface - SetEditorDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SetEditorDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/set-editor/set-editor-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            applyChangeset\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createItem\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            deleteItem\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            editItem\n                                        \n                                \n                                \n                                        \n                                            emptyResultsLabel\n                                        \n                                \n                                \n                                        \n                                            emptySuggestionsLabel\n                                        \n                                \n                                \n                                        \n                                            itemTemplate\n                                        \n                                \n                                \n                                        \n                                            listAll\n                                        \n                                \n                                \n                                        \n                                            listSet\n                                        \n                                \n                                \n                                        \n                                            makeFilter\n                                        \n                                \n                                \n                                        \n                                            scoreKeys\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        applyChangeset\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        applyChangeset:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createItem\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createItem:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deleteItem\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deleteItem:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editItem\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        editItem:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emptyResultsLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emptyResultsLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emptySuggestionsLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emptySuggestionsLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itemTemplate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        itemTemplate:     TemplateRef<>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TemplateRef<>\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listAll\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listAll:     ListId | SetMultiSource\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ListId | SetMultiSource\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listSet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listSet:     ListId | NodeId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ListId | NodeId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        makeFilter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        makeFilter:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scoreKeys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scoreKeys:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, OnDestroy, OnInit, TemplateRef } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {\n  decodeListId,\n  decodeNodeId,\n  encodeListId,\n  encodeNodeId,\n  ListId,\n  ListIdEnc,\n  NodeId,\n  NodeIdEnc,\n  nodeTypeFromTypename\n} from '@app/data-dgql/id';\nimport { DataList } from '@app/data-dgql/query';\nimport { Subscription } from 'rxjs';\nimport DataService from '@app/data-dgql';\nimport { UserNotifyService } from '@app/user-notify/user-notify.service';\nimport { quickScore } from 'quick-score';\n\n/**\n * This interface is used to source items from multiple sources in the set editor.\n *\n * staticSources specifies lists whose items will always be loaded.\n * sourceNodes specifies a list of nodes whose the sub-items will be loaded (e.g. a list of components whose labels will be loaded).\n */\nexport interface SetMultiSource {\n  /** A static list of source lists. */\n  staticSources: ListId[];\n  /** A list of nodes that will be passed to listFromNode. */\n  sourceNodes?: ListId | NodeId[];\n  /** Maps nodes from sourceNodes to lists from which items will be sourced. */\n  listFromNode?: (n: NodeId) => ListId;\n}\n\n/**\n * This is an internal component used to load data from multiple sources and through a layer of indirection (also see SetMultiSource).\n */\nclass MultiSourceList {\n  /** A DataList that loads the value of sourceNodes, if it's a ListId. */\n  public sourceNodeList?: DataList;\n  /** @ignore */\n  public sourceNodeListSub?: Subscription;\n  /** The list of nodes specified in sourceNodes, if it's a NodeId[]. */\n  public staticSourceNodeList?: NodeId[];\n  /** List of all sources that will be included in the results. */\n  public sources: Map> = new Map();\n  /** @ignore */\n  public sourceSubs: Map = new Map();\n  /** Max number of items in results. */\n  public limit = 10;\n  /** Current results. */\n  public results?: T[];\n  /** If true, there are more than `limit` items in the source data. */\n  public hasMore = false;\n  /**\n   * Current search query. Used to rank results by relevance.\n   * The filters are computed separately! Use {@link #setFilter} to set both simultaneously.\n   */\n  public query = '';\n\n  constructor(public spec: SetMultiSource, public scoreKeys: string[], private dataService: DataService) {\n    if (Array.isArray(spec.sourceNodes)) {\n      this.staticSourceNodeList = spec.sourceNodes;\n    } else if (typeof spec.sourceNodes === 'object') {\n      this.sourceNodeList = dataService.getList(spec.sourceNodes);\n      this.sourceNodeListSub = this.sourceNodeList.subscribe(() => this.update());\n    }\n    this.update();\n  }\n\n  /** Creates a new MultiSourceList that actually just loads a single list. */\n  static fromSingleList(list: ListId, scoreKeys: string[], dataService: DataService) {\n    return new this({ staticSources: [list] }, scoreKeys, dataService);\n  }\n\n  /** Updates lists. */\n  update() {\n    const newSourceSet = new Set();\n    for (const id of this.sourceNodeList?.current?.keys() || []) {\n      const nodeId = decodeNodeId(id);\n      newSourceSet.add(encodeListId(this.spec.listFromNode(nodeId)));\n    }\n    for (const nodeId of this.staticSourceNodeList || []) {\n      newSourceSet.add(encodeListId(this.spec.listFromNode(nodeId)));\n    }\n    for (const source of this.spec.staticSources) {\n      newSourceSet.add(encodeListId(source));\n    }\n\n    for (const source of newSourceSet) {\n      if (!this.sources.has(source)) {\n        const list = this.dataService.getList(decodeListId(source));\n        list.interactive = true;\n        this.sources.set(source, list);\n        this.sourceSubs.set(source, list.subscribe(() => this.updateResults()));\n      }\n    }\n    for (const source of [...this.sources.keys()]) {\n      if (!newSourceSet.has(source)) {\n        this.sourceSubs.get(source).unsubscribe();\n        this.sourceSubs.delete(source);\n        this.sources.delete(source);\n      }\n    }\n  }\n\n  /** Sets a filter on all lists. */\n  setFilter(query: string, filter: F) {\n    this.query = query;\n    for (const source of this.sources.values()) {\n      source.filter = filter;\n    }\n  }\n\n  /** Scores an item for ranking in results. */\n  score(item: T) {\n    const matchStrings = [];\n    for (const key of this.scoreKeys) {\n      let cursor = item;\n      for (const objKey of key.split('.')) {\n        cursor = cursor[objKey];\n        if (!cursor) {\n          break;\n        }\n      }\n      if (cursor) {\n        matchStrings.push(cursor);\n      }\n    }\n\n    return quickScore(matchStrings.join(' '), this.query);\n  }\n\n  /** Updates the results array from loaded data. */\n  updateResults() {\n    const seenItems = new Set();\n    const items = [];\n    this.hasMore = false;\n    for (const source of this.sources.values()) {\n      if (!source.hasData) {\n        continue;\n      }\n      for (const [id, item] of source.current.entries()) {\n        if (!seenItems.has(id)) {\n          seenItems.add(id);\n          items.push(item);\n        }\n      }\n      this.hasMore = this.hasMore || (source.current.size  this.score(a) - this.score(b));\n    items.splice(this.limit);\n\n    this.results = items;\n  }\n\n  /** If true, something is loading somewhere. */\n  isLoading() {\n    if (this.sourceNodeList?.loading) {\n      return true;\n    }\n    for (const source of this.sources.values()) {\n      if (source.loading) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /** Unsubscribes from all subscriptions. This object should no longer be used afterwards. */\n  unsubscribe() {\n    this.sourceNodeListSub?.unsubscribe();\n    this.sourceSubs.forEach(sub => sub.unsubscribe());\n  }\n}\n\n/** Types of item operations that may be made available. */\nexport type ItemOps = 'none' | 'edit' | 'create-edit' | 'create-edit-delete';\n\nexport interface SetEditorDialogData {\n  title: string;\n  listSet: ListId | NodeId[];\n  listAll: ListId | SetMultiSource;\n  applyChangeset: (add: NodeId[], del: NodeId[]) => Promise;\n  itemTemplate: TemplateRef;\n  makeFilter: (query: string) => F;\n  scoreKeys: string[];\n  emptySuggestionsLabel: string;\n  emptyResultsLabel: string;\n  createItem?: () => Promise;\n  editItem?: ({ id: NodeId, preview: T }) => void;\n  deleteItem?: ({ id: NodeId, preview: T }) => void;\n}\n\n/** This is an internal component used in the set editor. */\n@Component({\n  selector: 'app-set-editor-dialog',\n  templateUrl: './set-editor-dialog.component.html',\n  styleUrls: ['./set-editor-dialog.component.scss']\n})\nexport class SetEditorDialogComponent implements OnInit, OnDestroy {\n  public isLocalSet = false;\n  public localSet: NodeIdEnc[] = [];\n  public listSet$: DataList;\n  public listAll: MultiSourceList;\n  private listSetSub: Subscription;\n  private additions: Set = new Set();\n  private deletions: Set = new Set();\n  public searchQuery = '';\n\n  constructor(\n    private dataService: DataService,\n    private notifyService: UserNotifyService,\n    private dialogRef: MatDialogRef>,\n    @Inject(MAT_DIALOG_DATA) public data: SetEditorDialogData\n  ) {}\n\n  ngOnInit() {\n    if (Array.isArray(this.data.listSet)) {\n      this.isLocalSet = true;\n      this.localSet = [...this.data.listSet].map(id => encodeNodeId(id));\n    } else {\n      this.listSet$ = this.dataService.getList(this.data.listSet);\n    }\n    this.listAll = ('staticSources' in this.data.listAll)\n      ? new MultiSourceList(this.data.listAll, this.data.scoreKeys, this.dataService)\n      : MultiSourceList.fromSingleList(this.data.listAll, this.data.scoreKeys, this.dataService);\n\n    if (this.listSet$) {\n      this.listSetSub = this.listSet$?.subscribe();\n      // TODO: is this a reasonable heuristic for the listSet count? we need to cover >= results from listAll\n      this.listSet$.count = 10;\n      this.listSet$.interactive = true;\n    }\n  }\n\n  searchQueryDidChange() {\n    if (this.listSet$) {\n      this.listSet$.filter = this.data.makeFilter(this.searchQuery);\n    }\n    this.listAll.setFilter(this.searchQuery, this.data.makeFilter(this.searchQuery));\n  }\n\n  getNodeId(item): NodeId {\n    const type = nodeTypeFromTypename(item.__typename);\n    return { type, id: item.id };\n  }\n\n  getEncodedId(item): NodeIdEnc {\n    return encodeNodeId(this.getNodeId(item));\n  }\n\n  isInSet(item): boolean {\n    const id = this.getEncodedId(item);\n    if (this.additions.has(id)) {\n      return true;\n    }\n    if (this.deletions.has(id)) {\n      return false;\n    }\n    if (this.isLocalSet) {\n      return this.localSet.includes(id);\n    }\n    return this.listSet$.current?.has(id) || false;\n  }\n\n  toggleInSet(item): void {\n    const id = this.getEncodedId(item);\n    if (this.isInSet(item)) {\n      this.additions.delete(id);\n      this.deletions.add(id);\n    } else {\n      this.deletions.delete(id);\n      this.additions.add(id);\n    }\n  }\n\n  apply() {\n    if (this.additions.size + this.deletions.size === 0) {\n      this.dialogRef.close(null);\n      return;\n    }\n\n    this.data.applyChangeset([...this.additions].map(decodeNodeId), [...this.deletions].map(decodeNodeId)).then(() => {\n      this.dialogRef.close(null);\n    }).catch(error => {\n      this.notifyService.notifyError('Failed to apply changes', error);\n    });\n  }\n\n  createItem() {\n    this.data.createItem().then(node => {\n      if (node) {\n        this.additions.add(encodeNodeId(node));\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.listSetSub?.unsubscribe();\n    this.listAll.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SetMultiSource.html":{"url":"interfaces/SetMultiSource.html","title":"interface - SetMultiSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SetMultiSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/set-editor/set-editor-dialog.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This interface is used to source items from multiple sources in the set editor.\nstaticSources specifies lists whose items will always be loaded.\nsourceNodes specifies a list of nodes whose the sub-items will be loaded (e.g. a list of components whose labels will be loaded).\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            listFromNode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sourceNodes\n                                        \n                                \n                                \n                                        \n                                            staticSources\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        listFromNode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listFromNode:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Maps nodes from sourceNodes to lists from which items will be sourced.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceNodes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sourceNodes:     ListId | NodeId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ListId | NodeId[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A list of nodes that will be passed to listFromNode.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        staticSources\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        staticSources:         ListId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ListId[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A static list of source lists.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, OnDestroy, OnInit, TemplateRef } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {\n  decodeListId,\n  decodeNodeId,\n  encodeListId,\n  encodeNodeId,\n  ListId,\n  ListIdEnc,\n  NodeId,\n  NodeIdEnc,\n  nodeTypeFromTypename\n} from '@app/data-dgql/id';\nimport { DataList } from '@app/data-dgql/query';\nimport { Subscription } from 'rxjs';\nimport DataService from '@app/data-dgql';\nimport { UserNotifyService } from '@app/user-notify/user-notify.service';\nimport { quickScore } from 'quick-score';\n\n/**\n * This interface is used to source items from multiple sources in the set editor.\n *\n * staticSources specifies lists whose items will always be loaded.\n * sourceNodes specifies a list of nodes whose the sub-items will be loaded (e.g. a list of components whose labels will be loaded).\n */\nexport interface SetMultiSource {\n  /** A static list of source lists. */\n  staticSources: ListId[];\n  /** A list of nodes that will be passed to listFromNode. */\n  sourceNodes?: ListId | NodeId[];\n  /** Maps nodes from sourceNodes to lists from which items will be sourced. */\n  listFromNode?: (n: NodeId) => ListId;\n}\n\n/**\n * This is an internal component used to load data from multiple sources and through a layer of indirection (also see SetMultiSource).\n */\nclass MultiSourceList {\n  /** A DataList that loads the value of sourceNodes, if it's a ListId. */\n  public sourceNodeList?: DataList;\n  /** @ignore */\n  public sourceNodeListSub?: Subscription;\n  /** The list of nodes specified in sourceNodes, if it's a NodeId[]. */\n  public staticSourceNodeList?: NodeId[];\n  /** List of all sources that will be included in the results. */\n  public sources: Map> = new Map();\n  /** @ignore */\n  public sourceSubs: Map = new Map();\n  /** Max number of items in results. */\n  public limit = 10;\n  /** Current results. */\n  public results?: T[];\n  /** If true, there are more than `limit` items in the source data. */\n  public hasMore = false;\n  /**\n   * Current search query. Used to rank results by relevance.\n   * The filters are computed separately! Use {@link #setFilter} to set both simultaneously.\n   */\n  public query = '';\n\n  constructor(public spec: SetMultiSource, public scoreKeys: string[], private dataService: DataService) {\n    if (Array.isArray(spec.sourceNodes)) {\n      this.staticSourceNodeList = spec.sourceNodes;\n    } else if (typeof spec.sourceNodes === 'object') {\n      this.sourceNodeList = dataService.getList(spec.sourceNodes);\n      this.sourceNodeListSub = this.sourceNodeList.subscribe(() => this.update());\n    }\n    this.update();\n  }\n\n  /** Creates a new MultiSourceList that actually just loads a single list. */\n  static fromSingleList(list: ListId, scoreKeys: string[], dataService: DataService) {\n    return new this({ staticSources: [list] }, scoreKeys, dataService);\n  }\n\n  /** Updates lists. */\n  update() {\n    const newSourceSet = new Set();\n    for (const id of this.sourceNodeList?.current?.keys() || []) {\n      const nodeId = decodeNodeId(id);\n      newSourceSet.add(encodeListId(this.spec.listFromNode(nodeId)));\n    }\n    for (const nodeId of this.staticSourceNodeList || []) {\n      newSourceSet.add(encodeListId(this.spec.listFromNode(nodeId)));\n    }\n    for (const source of this.spec.staticSources) {\n      newSourceSet.add(encodeListId(source));\n    }\n\n    for (const source of newSourceSet) {\n      if (!this.sources.has(source)) {\n        const list = this.dataService.getList(decodeListId(source));\n        list.interactive = true;\n        this.sources.set(source, list);\n        this.sourceSubs.set(source, list.subscribe(() => this.updateResults()));\n      }\n    }\n    for (const source of [...this.sources.keys()]) {\n      if (!newSourceSet.has(source)) {\n        this.sourceSubs.get(source).unsubscribe();\n        this.sourceSubs.delete(source);\n        this.sources.delete(source);\n      }\n    }\n  }\n\n  /** Sets a filter on all lists. */\n  setFilter(query: string, filter: F) {\n    this.query = query;\n    for (const source of this.sources.values()) {\n      source.filter = filter;\n    }\n  }\n\n  /** Scores an item for ranking in results. */\n  score(item: T) {\n    const matchStrings = [];\n    for (const key of this.scoreKeys) {\n      let cursor = item;\n      for (const objKey of key.split('.')) {\n        cursor = cursor[objKey];\n        if (!cursor) {\n          break;\n        }\n      }\n      if (cursor) {\n        matchStrings.push(cursor);\n      }\n    }\n\n    return quickScore(matchStrings.join(' '), this.query);\n  }\n\n  /** Updates the results array from loaded data. */\n  updateResults() {\n    const seenItems = new Set();\n    const items = [];\n    this.hasMore = false;\n    for (const source of this.sources.values()) {\n      if (!source.hasData) {\n        continue;\n      }\n      for (const [id, item] of source.current.entries()) {\n        if (!seenItems.has(id)) {\n          seenItems.add(id);\n          items.push(item);\n        }\n      }\n      this.hasMore = this.hasMore || (source.current.size  this.score(a) - this.score(b));\n    items.splice(this.limit);\n\n    this.results = items;\n  }\n\n  /** If true, something is loading somewhere. */\n  isLoading() {\n    if (this.sourceNodeList?.loading) {\n      return true;\n    }\n    for (const source of this.sources.values()) {\n      if (source.loading) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /** Unsubscribes from all subscriptions. This object should no longer be used afterwards. */\n  unsubscribe() {\n    this.sourceNodeListSub?.unsubscribe();\n    this.sourceSubs.forEach(sub => sub.unsubscribe());\n  }\n}\n\n/** Types of item operations that may be made available. */\nexport type ItemOps = 'none' | 'edit' | 'create-edit' | 'create-edit-delete';\n\nexport interface SetEditorDialogData {\n  title: string;\n  listSet: ListId | NodeId[];\n  listAll: ListId | SetMultiSource;\n  applyChangeset: (add: NodeId[], del: NodeId[]) => Promise;\n  itemTemplate: TemplateRef;\n  makeFilter: (query: string) => F;\n  scoreKeys: string[];\n  emptySuggestionsLabel: string;\n  emptyResultsLabel: string;\n  createItem?: () => Promise;\n  editItem?: ({ id: NodeId, preview: T }) => void;\n  deleteItem?: ({ id: NodeId, preview: T }) => void;\n}\n\n/** This is an internal component used in the set editor. */\n@Component({\n  selector: 'app-set-editor-dialog',\n  templateUrl: './set-editor-dialog.component.html',\n  styleUrls: ['./set-editor-dialog.component.scss']\n})\nexport class SetEditorDialogComponent implements OnInit, OnDestroy {\n  public isLocalSet = false;\n  public localSet: NodeIdEnc[] = [];\n  public listSet$: DataList;\n  public listAll: MultiSourceList;\n  private listSetSub: Subscription;\n  private additions: Set = new Set();\n  private deletions: Set = new Set();\n  public searchQuery = '';\n\n  constructor(\n    private dataService: DataService,\n    private notifyService: UserNotifyService,\n    private dialogRef: MatDialogRef>,\n    @Inject(MAT_DIALOG_DATA) public data: SetEditorDialogData\n  ) {}\n\n  ngOnInit() {\n    if (Array.isArray(this.data.listSet)) {\n      this.isLocalSet = true;\n      this.localSet = [...this.data.listSet].map(id => encodeNodeId(id));\n    } else {\n      this.listSet$ = this.dataService.getList(this.data.listSet);\n    }\n    this.listAll = ('staticSources' in this.data.listAll)\n      ? new MultiSourceList(this.data.listAll, this.data.scoreKeys, this.dataService)\n      : MultiSourceList.fromSingleList(this.data.listAll, this.data.scoreKeys, this.dataService);\n\n    if (this.listSet$) {\n      this.listSetSub = this.listSet$?.subscribe();\n      // TODO: is this a reasonable heuristic for the listSet count? we need to cover >= results from listAll\n      this.listSet$.count = 10;\n      this.listSet$.interactive = true;\n    }\n  }\n\n  searchQueryDidChange() {\n    if (this.listSet$) {\n      this.listSet$.filter = this.data.makeFilter(this.searchQuery);\n    }\n    this.listAll.setFilter(this.searchQuery, this.data.makeFilter(this.searchQuery));\n  }\n\n  getNodeId(item): NodeId {\n    const type = nodeTypeFromTypename(item.__typename);\n    return { type, id: item.id };\n  }\n\n  getEncodedId(item): NodeIdEnc {\n    return encodeNodeId(this.getNodeId(item));\n  }\n\n  isInSet(item): boolean {\n    const id = this.getEncodedId(item);\n    if (this.additions.has(id)) {\n      return true;\n    }\n    if (this.deletions.has(id)) {\n      return false;\n    }\n    if (this.isLocalSet) {\n      return this.localSet.includes(id);\n    }\n    return this.listSet$.current?.has(id) || false;\n  }\n\n  toggleInSet(item): void {\n    const id = this.getEncodedId(item);\n    if (this.isInSet(item)) {\n      this.additions.delete(id);\n      this.deletions.add(id);\n    } else {\n      this.deletions.delete(id);\n      this.additions.add(id);\n    }\n  }\n\n  apply() {\n    if (this.additions.size + this.deletions.size === 0) {\n      this.dialogRef.close(null);\n      return;\n    }\n\n    this.data.applyChangeset([...this.additions].map(decodeNodeId), [...this.deletions].map(decodeNodeId)).then(() => {\n      this.dialogRef.close(null);\n    }).catch(error => {\n      this.notifyService.notifyError('Failed to apply changes', error);\n    });\n  }\n\n  createItem() {\n    this.data.createItem().then(node => {\n      if (node) {\n        this.additions.add(encodeNodeId(node));\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.listSetSub?.unsubscribe();\n    this.listAll.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsDialogComponent.html":{"url":"components/SettingsDialogComponent.html","title":"component - SettingsDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/settings-dialog/settings-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings-dialog\n            \n\n            \n                styleUrls\n                ./settings-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                mode\n                            \n                            \n                                modeIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                openAccessTokenSettings\n                            \n                            \n                                    Public\n                                openProfileSettings\n                            \n                            \n                                    Public\n                                switchTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/settings-dialog/settings-dialog.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openAccessTokenSettings\n                        \n                    \n                \n            \n            \n                \n                    \n                    openAccessTokenSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/settings-dialog/settings-dialog.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openProfileSettings\n                        \n                    \n                \n            \n            \n                \n                    \n                    openProfileSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/settings-dialog/settings-dialog.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        switchTheme\n                        \n                    \n                \n            \n            \n                \n                    \n                    switchTheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/settings-dialog/settings-dialog.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/settings-dialog/settings-dialog.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Dark Mode\"\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/settings-dialog/settings-dialog.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modeIcon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"dark_mode\"\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/settings-dialog/settings-dialog.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Inject } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Output, EventEmitter, Input } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { AuthenticationService } from '@app/auth/authentication.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ProfileSettingsDialogComponent } from '../profile-settings-dialog/profile-settings-dialog.component';\nimport { AccessTokenDialogComponent } from '../access-token-dialog/access-token-dialog.component';\n\n@Component({\n  selector: 'app-settings-dialog',\n  templateUrl: './settings-dialog.component.html',\n  styleUrls: ['./settings-dialog.component.scss']\n})\nexport class SettingsDialogComponent implements OnInit {\n\n  mode = \"Dark Mode\"\n  modeIcon = \"dark_mode\"\n\n  constructor(public dialogRef: MatDialogRef, private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n\n  //open the dialog with profile settings\n  public openProfileSettings() {\n    this.dialogRef.close();\n    this.dialog.open(ProfileSettingsDialogComponent);\n  }\n\n  //open the dialog with access token settings\n  public openAccessTokenSettings() {\n    this.dialogRef.close();\n    this.dialog.open(AccessTokenDialogComponent);\n  }\n\n  //switch to dark mode / light mode (TODO)\n  public switchTheme() {\n\n    if(this.mode === 'Light Mode') { \n      this.mode = 'Dark Mode'\n    } else {\n      this.mode = 'Light Mode'\n    }\n\n    if(this.modeIcon === 'light_mode') { \n      this.modeIcon = 'dark_mode'\n    } else {\n      this.modeIcon = 'light_mode'\n    }\n\n    console.log('dark mode / light mode');\n  }\n\n}\n\n    \n\n    \n        \nSettings\n\n      \n        account_circle\n          Profile Settings\n      \n        token\n         Access Token\n      \n        {{modeIcon}}\n         {{mode}} \n\n    \n\n    \n                \n                    ./settings-dialog.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Settings              account_circle          Profile Settings              token         Access Token              {{modeIcon}}         {{mode}} '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SideNavComponent.html":{"url":"components/SideNavComponent.html","title":"component - SideNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SideNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/side-nav/side-nav.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays and manages the sidemenu showing\nthe name of the current project at the top. Beneath it\nnavigation points e.g. 'Graph' are displayed.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-side-nav\n            \n\n            \n                styleUrls\n                ./side-nav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./side-nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                defaultMenuTitle\n                            \n                            \n                                graphLink\n                            \n                            \n                                issuesLink\n                            \n                            \n                                membersLink\n                            \n                            \n                                    Public\n                                menuTitle\n                            \n                            \n                                    Public\n                                notify\n                            \n                            \n                                overviewLink\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                ss\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ss: StateService, router: Router, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/side-nav/side-nav.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ss\n                                                  \n                                                        \n                                                                        StateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        defaultMenuTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Menu'\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        graphLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['/']\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issuesLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['/']\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        membersLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['/']\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        menuTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.defaultMenuTitle\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        notify\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserNotifyService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        overviewLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['/']\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ss\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StateService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {StateService} from '@app/state.service';\nimport {Router} from '@angular/router';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\n\n/**\n * This component displays and manages the sidemenu showing\n * the name of the current project at the top. Beneath it\n * navigation points e.g. 'Graph' are displayed.\n */\n@Component({\n  selector: 'app-side-nav',\n  templateUrl: './side-nav.component.html',\n  styleUrls: ['./side-nav.component.scss']\n})\nexport class SideNavComponent {\n  readonly defaultMenuTitle = 'Menu';\n  public menuTitle = this.defaultMenuTitle;\n  overviewLink = ['/'];\n  graphLink = ['/'];\n  issuesLink = ['/'];\n  membersLink = ['/'];\n\n  constructor(public ss: StateService,\n              public router: Router,\n              public notify: UserNotifyService) {\n    ss.state$.subscribe(appState => {\n      if (!appState.project) {\n        return;\n      }\n\n      if (appState.project.node) {\n        this.menuTitle = appState.project.node.name;\n        this.overviewLink = ['/projects', appState.project.node.id];\n        this.graphLink = ['/projects', appState.project.node.id, 'graph'];\n        this.issuesLink = ['/projects', appState.project.node.id, 'issues'];\n        this.membersLink = ['/projects', appState.project.node.id, 'members'];\n      } else {\n        this.router.navigate(['/']);\n        notify.notifyError('The specified project does not exist!');\n      }\n    });\n  }\n\n\n}\n\n    \n\n    \n        {{menuTitle}}\n\n    \n        info\n        Overview\n    \n    \n        account_tree\n        Graph\n    \n    \n        bug_report\n        Issues\n    \n    \n        group\n        Members\n    \n\n\n    \n\n    \n                \n                    ./side-nav.component.scss\n                \n                @import '~@angular/material/theming';\n@import 'variables';\n\nmat-icon {\n  color: rgba(0, 0, 0, 0.54);\n  margin-right: 20px;\n  padding-left: 4px;\n}\n\n.list-item-active {\n  font-weight: bold;\n  background-color: mat-color($accent, 300) !important;\n}\n\nmat-nav-list {\n  padding-top: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{menuTitle}}            info        Overview                account_tree        Graph                bug_report        Issues                group        Members    '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'SideNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StateService.html":{"url":"injectables/StateService.html","title":"injectable - StateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service exposes an observable of the name and id of the current project.\nIt determines the current project by listening for url changes and parsing the url.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                state\n                            \n                            \n                                state$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isProjectURL\n                            \n                            \n                                syncStateWithUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, ps: ProjectStoreService)\n                    \n                \n                        \n                            \n                                Defined in src/app/state.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ps\n                                                  \n                                                        \n                                                                        ProjectStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isProjectURL\n                        \n                    \n                \n            \n            \n                \n                    \n                    isProjectURL(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/state.service.ts:57\n                \n            \n\n\n            \n                \n                    Caution:\nIf you change the routing you might have to change this function too.\nThat is if it has the form 'projects/:id' + further stuff.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true iff url is a route pertaining to a project\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncStateWithUrl\n                        \n                    \n                \n            \n            \n                \nsyncStateWithUrl(router: Router, ps: ProjectStoreService)\n                \n            \n\n\n            \n                \n                    Defined in src/app/state.service.ts:31\n                \n            \n\n\n            \n                \n                    Sets up two mutually exclusive (look at filter) subscriptions to track whether we are at a\nurl referring to a project or not. If we are at a project we retrieve information about it\nfrom the backend and make it available in the state observable\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    router\n                                    \n                                                Router\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        allows to listen for routing events\n\n                                    \n                                \n                                \n                                    ps\n                                    \n                                                ProjectStoreService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppState\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/state.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in src/app/state.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {NavigationEnd, PRIMARY_OUTLET, Router} from '@angular/router';\nimport {ReplaySubject} from 'rxjs';\nimport {filter, switchMap} from 'rxjs/operators';\nimport {GetBasicProjectQuery} from 'src/generated/graphql';\nimport {ProjectStoreService} from './data/project/project-store.service';\n\n/**\n * This service exposes an observable of the name and id of the current project.\n * It determines the current project by listening for url changes and parsing the url.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateService {\n  state: AppState = {};\n  state$ = new ReplaySubject(1);\n\n  constructor(private router: Router, private ps: ProjectStoreService) {\n    this.syncStateWithUrl(router, ps);\n  }\n\n  /**\n   * Sets up two mutually exclusive (look at filter) subscriptions to track whether we are at a\n   * url referring to a project or not. If we are at a project we retrieve information about it\n   * from the backend and make it available in the state observable\n   *\n   * @param router allows to listen for routing events\n   * @param ps\n   */\n  syncStateWithUrl(router: Router, ps: ProjectStoreService) {\n    router.events.pipe(\n      filter(event => (event instanceof NavigationEnd && this.isProjectURL(event.url))),\n      switchMap((event: NavigationEnd) =>\n        ps.getBasicProject(this.router.parseUrl(event.url).root?.children[PRIMARY_OUTLET].segments[1].path)\n      )\n    ).subscribe(project => {\n      this.state.project = project;\n      this.state$.next(this.state);\n    });\n    // set project to null if new url is not specific to a project\n    router.events.pipe(\n      filter(event => (event instanceof NavigationEnd && !this.isProjectURL(event.url))),\n    ).subscribe(_ => {\n      this.state.project = null;\n      this.state$.next(this.state);\n    });\n  }\n\n  /**\n   * Caution:\n   * If you change the routing you might have to change this function too.\n   * That is if it has the form 'projects/:id' + further stuff.\n   * @param url\n   * @returns true iff url is a route pertaining to a project\n   */\n  private isProjectURL(url: string): boolean {\n    const tree = this.router.parseUrl(url);\n    const primary = tree.root.children[PRIMARY_OUTLET];\n    if (primary) {\n      const primarySegments = primary.segments;\n      return (primarySegments[0].path === 'projects' && primary.segments.length >= 2);\n    }\n    return false;\n  }\n}\n\nexport interface AppState {\n  project?: GetBasicProjectQuery;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextDisplayComponent.html":{"url":"components/TextDisplayComponent.html","title":"component - TextDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/text-display/text-display.component.ts\n\n\n\n    \n        Description\n    \n    \n        The text display component shows text in a labeled box, and if desired, allows the user to edit and save the\ntext\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-text-display\n            \n\n            \n                styleUrls\n                ./text-display.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./text-display.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editMode\n                            \n                            \n                                editText\n                            \n                            \n                                showPlaceholder\n                            \n                            \n                                    Private\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                finishEditing\n                            \n                            \n                                startEditing\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                labelText\n                            \n                            \n                                onEditFinished\n                            \n                            \n                                placeholder\n                            \n                            \n                                readonly\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    text\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        labelText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/text-display/text-display.component.ts:23\n                            \n                        \n                \n                    \n                        The title text.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        onEditFinished\n                    \n                \n                \n                    \n                        Type :         TextDisplayEditCallbackFn\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/text-display/text-display.component.ts:21\n                            \n                        \n                \n                    \n                        A callback function.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/text-display/text-display.component.ts:37\n                            \n                        \n                \n                    \n                        The placeholder will be shown if the content is empty\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        readonly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/text-display/text-display.component.ts:35\n                            \n                        \n                \n                    \n                        If true, the edit button is not shown\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/text-display/text-display.component.ts:25\n                            \n                        \n                \n                    \n                        Sets the content of the text display, and shows the placeholder if the text is empty\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        finishEditing\n                        \n                    \n                \n            \n            \n                \nfinishEditing(saved: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/text-display/text-display.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    saved\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startEditing\n                        \n                    \n                \n            \n            \n                \nstartEditing()\n                \n            \n\n\n            \n                \n                    Defined in src/app/text-display/text-display.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        editMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/text-display/text-display.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/text-display/text-display.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPlaceholder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/text-display/text-display.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        value\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/text-display/text-display.component.ts:39\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n\n                \n                    \n                        gettext()\n                    \n                \n                            \n                                \n                                    Defined in src/app/text-display/text-display.component.ts:30\n                                \n                            \n\n                \n                    \n                        settext(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/text-display/text-display.component.ts:25\n                                \n                            \n                    \n                        \n                                Sets the content of the text display, and shows the placeholder if the text is empty\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\n\n/**\n * A callback function that is called once the user finishes editing the text.\n * @param saved true if the user clicked save, false if the user cancelled the editing\n */\nexport type TextDisplayEditCallbackFn = (saved: boolean) => void;\n\n\n/**\n * The text display component shows text in a labeled box, and if desired, allows the user to edit and save the\n * text\n */\n@Component({\n  selector: 'app-text-display',\n  templateUrl: './text-display.component.html',\n  styleUrls: ['./text-display.component.scss']\n})\nexport class TextDisplayComponent {\n  /** A callback function. */\n  @Input() onEditFinished: TextDisplayEditCallbackFn;\n  /** The title text. */\n  @Input() labelText: string;\n  /** Sets the content of the text display, and shows the placeholder if the text is empty */\n  @Input() set text(value: string) {\n    this.value = value;\n    this.showPlaceholder = !value || value.length === 0;\n  }\n\n  get text() {\n    return this.value;\n  }\n\n  /** If true, the edit button is not shown */\n  @Input() readonly: boolean;\n  /** The placeholder will be shown if the content is empty */\n  @Input() placeholder = '';\n\n  private value;\n  editMode = false;\n  editText = '';\n  showPlaceholder = false;\n\n  finishEditing(saved: boolean): void {\n    this.editMode = false;\n    if (saved) {\n      this.text = this.editText;\n    }\n\n    if (this.onEditFinished) {\n      this.onEditFinished(saved);\n    }\n  }\n\n  startEditing() {\n    this.editText = this.text;\n    this.editMode = true;\n  }\n}\n\n    \n\n    \n        \n    \n        {{labelText}}\n        \n        \n            \n                save\n            \n            \n                cancel\n            \n        \n    \n\n\n\n    \n        \n            {{labelText}}\n        \n        \n            edit\n        \n        \n            \n                {{line.replace('\\n', '')}}\n            \n        \n    \n\n\n    \n\n    \n                \n                    ./text-display.component.scss\n                \n                @import \"src/styles/variables\";\n\n.text-display-label-container {\n  position: relative;\n  width: fit-content;\n  height: .8em;\n  line-height: .8em;\n  padding: 0 2px 0 2px;\n  top: -.5em;\n  left: -1px;\n  background-color: #fafafa; // FIXME: Hardcoded background color\n  color: rgba(0, 0, 0, .6);\n  text-align: center;\n}\n\n.text-display-label {\n  display: inline-block;\n  vertical-align: middle;\n  font-size: .8em;\n}\n\n.text-display-container {\n  margin-top: 10px;\n  padding: 0 8px 16px 8px;\n  width: 100%;\n  height: 100%;\n  border: 1px rgba(0, 0, 0, .2) solid;\n  border-radius: 4px;\n  word-break: break-all;\n  min-height: 60px;\n}\n\n.text-content-container {\n  padding-top: 8px;\n}\n\n.text-content-container-placeholder {\n  padding-top: 8px;\n  color: gray;\n  font-style: italic;\n}\n\n.text-edit-container{\n  width: 100%;\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{labelText}}                                            save                                        cancel                                                {{labelText}}                            edit                                            {{line.replace(\\'\\n\\', \\'\\')}}                        '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TextFragment.html":{"url":"interfaces/TextFragment.html","title":"interface - TextFragment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TextFragment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/label-search/label-search.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { concat, of, Subject, Observable, BehaviorSubject } from 'rxjs';\nimport { catchError, distinctUntilChanged, switchMap, tap } from 'rxjs/operators';\nimport { FilterLabel, isFilterLabel, LabelStoreService } from '../../data/label/label-store.service';\nimport { StateService } from '../../state.service';\n\n/**\n * This component is responsible for the display of the search bar above the graph.\n * It allows for filtering issues by multiple labels and text fragments.\n */\n@Component({\n  selector: 'app-label-search',\n  templateUrl: './label-search.component.html',\n  styleUrls: ['./label-search.component.scss']\n})\nexport class LabelSearchComponent implements OnInit {\n  public filterSelection$ = new BehaviorSubject({labels: [], texts: []});\n\n  labels$: Observable;\n  labelsLoading = false;\n  labelsInput$ = new Subject();\n  selectedLabels: FilterElement[] = [];\n\n  constructor(private labelStore: LabelStoreService, private ss: StateService) {\n  }\n\n  ngOnInit() {\n      this.loadLabels();\n  }\n\n  trackByFn(item: FilterLabel) {\n      return item.id;\n  }\n\n  /**\n   * Emit value representing label and text fragments in the search bar via this.filterSelection$\n   */\n  emitSelectedLabels() {\n    const selection: FilterSelection = {texts: [], labels: []};\n    // find out which elements in search bar correspond to an existing label on the backend and which to a text fragment\n    selection.texts = this.selectedLabels.filter(item => !isFilterLabel(item)).map(item => item.name);\n    selection.labels = this.selectedLabels.filter(label => isFilterLabel(label)) as FilterLabel[];\n    this.filterSelection$.next(selection);\n  }\n\n  /**\n   * Load all labels from backend that match the currently typed in ng-select element\n   */\n  private loadLabels() {\n      this.labels$ = concat(\n          of([]), // default items\n          this.labelsInput$.pipe(\n              distinctUntilChanged(),\n              tap(() => this.labelsLoading = true),\n              switchMap(term => this.labelStore.getMatchingLabels(this.ss.state.project.node.id, term).pipe(\n                  catchError(() => of([])), // empty list on error\n                  tap(() => this.labelsLoading = false)\n              ))\n          )\n      );\n  }\n\n}\n\n\n/**\n * The bar can contain elements standing for labels and elements for text fragments.\n */\ntype FilterElement = TextFragment | FilterLabel;\n\ninterface TextFragment {\n  name: string;\n}\n\nexport interface FilterSelection {\n  texts: string[];\n  labels: FilterLabel[];\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeFormatter.html":{"url":"classes/TimeFormatter.html","title":"class - TimeFormatter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeFormatter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/issue-detail/time-formatter.ts\n        \n\n\n            \n                Description\n            \n            \n                This class contains functionality for time formatting which is needed for correct time representation\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatTime\n                            \n                            \n                                formatTimeDifference\n                            \n                            \n                                pluralize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        formatTime\n                        \n                    \n                \n            \n            \n                \nformatTime(time: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/time-formatter.ts:11\n                \n            \n\n\n            \n                \n                    E.g. converts (2021-10-01T19:44:04.813Z) to\n(Fri Oct 01 2021 21:44:04 GMT+0200 (Mitteleuropäische Sommerzeit))\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        any string that can be parsed by Date\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatTimeDifference\n                        \n                    \n                \n            \n            \n                \nformatTimeDifference(dateString: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/time-formatter.ts:19\n                \n            \n\n\n            \n                \n                    E.g. converts (2021-11-02T12:27:58.192Z) to (8 days ago)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    dateString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        any string that can be parsed by Date\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluralize\n                        \n                    \n                \n            \n            \n                \npluralize(n: number, singular: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/time-formatter.ts:48\n                \n            \n\n\n            \n                \n                    Change singular form of a word into pluralized form if necessary.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    n\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        number of entities\n\n                                    \n                                \n                                \n                                    singular\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        singular form of the word\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class TimeFormatter {\n\n  /**\n   * E.g. converts (2021-10-01T19:44:04.813Z) to\n   * (Fri Oct 01 2021 21:44:04 GMT+0200 (Mitteleuropäische Sommerzeit))\n   * @param time any string that can be parsed by `Date`\n   */\n  formatTime(time: string): string {\n    return new Date(time).toString();\n  }\n\n  /**\n   * E.g. converts (2021-11-02T12:27:58.192Z) to (8 days ago)\n   * @param dateString any string that can be parsed by `Date`\n   */\n  formatTimeDifference(dateString: string): string {\n    const now = new Date();\n    const pastTime = new Date(dateString);\n\n    const months = (now.getMonth() - pastTime.getMonth()) + (now.getFullYear() - pastTime.getFullYear()) * 12;\n    const minutes = Math.round((+now - +pastTime) / 1000 / 60);\n    const hours = Math.round(minutes / 60);\n    const days = Math.round(hours / 24);\n\n    if (months >= 12) {\n      return this.pluralize(months / 12, 'year') + ' ago';\n    } else if (days >= 31) {\n      return this.pluralize(months, 'month') + ' ago';\n    } else if (hours >= 24) {\n      return this.pluralize(days, 'day') + ' ago';\n    } else if (minutes >= 60) {\n      return this.pluralize(hours, 'hour') + ' ago';\n    } else if (minutes >= 1) {\n      return this.pluralize(minutes, 'minute') + ' ago';\n    }\n\n    return 'just now';\n  }\n\n  /**\n   * Change singular form of a word into pluralized form if necessary.\n   * @param n number of entities\n   * @param singular singular form of the word\n   */\n  pluralize(n: number, singular: string): string {\n    return (n === 1 ? n + ' ' + singular : n + ' ' + singular + 's');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TimelineCoalescedItemsDirective.html":{"url":"directives/TimelineCoalescedItemsDirective.html","title":"directive - TimelineCoalescedItemsDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  TimelineCoalescedItemsDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/issue-detail/timeline/coalesced/timeline-item.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This directive is used in conjunction with an ng-template.\nThe content of the ng-template specifies the content of a timeline item, if it was coalesced\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appCoalescedTimelineItems]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef<>)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef<>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, ChangeDetectorRef, Component, ContentChild, Directive, Input, TemplateRef} from '@angular/core';\nimport {CoalescedTimelineItem} from '@app/issue-detail/timeline/timeline.component';\nimport {TimeFormatter} from '@app/issue-detail/time-formatter';\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if it was *not* coalesced\n */\n@Directive({\n  selector: '[appSingleTimelineItem]'\n})\nexport class TimelineSingleItemDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if it was coalesced\n */\n@Directive({\n  selector: '[appCoalescedTimelineItems]'\n})\nexport class TimelineCoalescedItemsDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if the attribute `showDeleted` of the\n * {@link TimelineItemComponent} is set to `true`.\n */\n@Directive({\n  selector: '[appTimelineItemDeleted]'\n})\nexport class TimelineItemDeletedDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This component provides an easy method to switch between the different possible content types of a timeline item,\n * such as single, coalesced or deleted.\n * Additionally, the formatted time is shown.\n */\n@Component({\n  selector: 'app-timeline-item',\n  templateUrl: './timeline-item.component.html',\n  styleUrls: ['../timeline.component.scss']\n})\nexport class TimelineItemComponent implements AfterViewInit {\n  /** The timeline item to show */\n  @Input() timelineItem: CoalescedTimelineItem;\n  /** If this option is set to true, the template with the `appTimelineItemDeleted` directive is shown */\n  @Input() showDeleted = false;\n\n  /** The content to be shown if the timeline item was not coalesced */\n  @ContentChild(TimelineSingleItemDirective) timelineItemContent: TimelineSingleItemDirective;\n  /** The content to be shown if the timeline item was coalesced */\n  @ContentChild(TimelineCoalescedItemsDirective) timelineItemsContent: TimelineCoalescedItemsDirective;\n  /** The content to be shown if the timeline item contains deleted data */\n  @ContentChild(TimelineItemDeletedDirective) timelineItemDeletedContent: TimelineItemDeletedDirective;\n\n  timeFormatter: TimeFormatter = new TimeFormatter();\n  activeItemContent: TemplateRef = null;\n\n  constructor(private changeDetector: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit() {\n    if (this.showDeleted) {\n      this.activeItemContent = this.timelineItemDeletedContent.template;\n    } else if (this.timelineItem.isCoalesced && this.timelineItemsContent) {\n      this.activeItemContent = this.timelineItemsContent.template;\n    } else if (!this.timelineItem.isCoalesced) {\n      this.activeItemContent = this.timelineItemContent.template;\n    }\n\n    this.changeDetector.detectChanges();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimelineItemComponent.html":{"url":"components/TimelineItemComponent.html","title":"component - TimelineItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TimelineItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-detail/timeline/coalesced/timeline-item.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component provides an easy method to switch between the different possible content types of a timeline item,\nsuch as single, coalesced or deleted.\nAdditionally, the formatted time is shown.\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-timeline-item\n            \n\n            \n                styleUrls\n                ../timeline.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./timeline-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeItemContent\n                            \n                            \n                                timeFormatter\n                            \n                            \n                                timelineItemContent\n                            \n                            \n                                timelineItemDeletedContent\n                            \n                            \n                                timelineItemsContent\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                showDeleted\n                            \n                            \n                                timelineItem\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(changeDetector: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changeDetector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        showDeleted\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:56\n                            \n                        \n                \n                    \n                        If this option is set to true, the template with the appTimelineItemDeleted directive is shown\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        timelineItem\n                    \n                \n                \n                    \n                        Type :         CoalescedTimelineItem\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:54\n                            \n                        \n                \n                    \n                        The timeline item to show\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeItemContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef<>\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeFormatter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TimeFormatter\n\n                    \n                \n                \n                    \n                        Default value : new TimeFormatter()\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timelineItemContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TimelineSingleItemDirective\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(TimelineSingleItemDirective)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:59\n                        \n                    \n\n            \n                \n                    The content to be shown if the timeline item was not coalesced\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timelineItemDeletedContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TimelineItemDeletedDirective\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(TimelineItemDeletedDirective)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:63\n                        \n                    \n\n            \n                \n                    The content to be shown if the timeline item contains deleted data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timelineItemsContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TimelineCoalescedItemsDirective\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(TimelineCoalescedItemsDirective)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:61\n                        \n                    \n\n            \n                \n                    The content to be shown if the timeline item was coalesced\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, ChangeDetectorRef, Component, ContentChild, Directive, Input, TemplateRef} from '@angular/core';\nimport {CoalescedTimelineItem} from '@app/issue-detail/timeline/timeline.component';\nimport {TimeFormatter} from '@app/issue-detail/time-formatter';\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if it was *not* coalesced\n */\n@Directive({\n  selector: '[appSingleTimelineItem]'\n})\nexport class TimelineSingleItemDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if it was coalesced\n */\n@Directive({\n  selector: '[appCoalescedTimelineItems]'\n})\nexport class TimelineCoalescedItemsDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if the attribute `showDeleted` of the\n * {@link TimelineItemComponent} is set to `true`.\n */\n@Directive({\n  selector: '[appTimelineItemDeleted]'\n})\nexport class TimelineItemDeletedDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This component provides an easy method to switch between the different possible content types of a timeline item,\n * such as single, coalesced or deleted.\n * Additionally, the formatted time is shown.\n */\n@Component({\n  selector: 'app-timeline-item',\n  templateUrl: './timeline-item.component.html',\n  styleUrls: ['../timeline.component.scss']\n})\nexport class TimelineItemComponent implements AfterViewInit {\n  /** The timeline item to show */\n  @Input() timelineItem: CoalescedTimelineItem;\n  /** If this option is set to true, the template with the `appTimelineItemDeleted` directive is shown */\n  @Input() showDeleted = false;\n\n  /** The content to be shown if the timeline item was not coalesced */\n  @ContentChild(TimelineSingleItemDirective) timelineItemContent: TimelineSingleItemDirective;\n  /** The content to be shown if the timeline item was coalesced */\n  @ContentChild(TimelineCoalescedItemsDirective) timelineItemsContent: TimelineCoalescedItemsDirective;\n  /** The content to be shown if the timeline item contains deleted data */\n  @ContentChild(TimelineItemDeletedDirective) timelineItemDeletedContent: TimelineItemDeletedDirective;\n\n  timeFormatter: TimeFormatter = new TimeFormatter();\n  activeItemContent: TemplateRef = null;\n\n  constructor(private changeDetector: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit() {\n    if (this.showDeleted) {\n      this.activeItemContent = this.timelineItemDeletedContent.template;\n    } else if (this.timelineItem.isCoalesced && this.timelineItemsContent) {\n      this.activeItemContent = this.timelineItemsContent.template;\n    } else if (!this.timelineItem.isCoalesced) {\n      this.activeItemContent = this.timelineItemContent.template;\n    }\n\n    this.changeDetector.detectChanges();\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      {{this.timeFormatter.formatTimeDifference(timelineItem.time)}}\n    \n  \n\n\n    \n\n    \n                \n                    ../timeline.component.scss\n                \n                .timeline {\n  list-style: none;\n  margin: 0;\n  padding: 20px 0 20px;\n  position: relative;\n\n  &::before {\n    top: 0;\n    bottom: 0;\n    position: absolute;\n    content: \" \";\n    width: 2px;\n    background: rgba(0, 0, 0, 0.12);\n    left: 35px;\n  }\n\n  & > li {\n    margin-bottom: 20px;\n    position: relative;\n    display: flex;\n    align-items: flex-start;\n\n    & > .timeline-badge {\n      color: #fff;\n      $size: 50px;\n      width: $size;\n      height: $size;\n      line-height: 50px;\n      font-size: 2.5em;\n      text-align: center;\n      position: relative;\n      top: 16px;\n      margin-left: calc(36px - (#{$size} / 2));\n      margin-right: 12px;\n      background-color: #999999;\n      z-index: 100;\n      border-radius: 50%;\n    }\n\n    & > .timeline-panel {\n      flex: 1;\n      border: 1px solid #d4d4d4;\n      border-radius: 2px;\n      padding: 20px;\n      position: relative;\n      -webkit-box-shadow: 0 1px 6px rgba(0, 0, 0, 0.175);\n      box-shadow: 0 1px 6px rgba(0, 0, 0, 0.175);\n\n      &::before {\n        position: absolute;\n        top: 26px;\n        display: inline-block;\n        border-top: 15px solid transparent;\n        border-left: 15px solid #ccc;\n        border-right: 0 solid #ccc;\n        border-bottom: 15px solid transparent;\n        content: \" \";\n        border-left-width: 0;\n        border-right-width: 15px;\n        left: -15px;\n        right: auto;\n      }\n\n      &::after {\n        position: absolute;\n        top: 27px;\n        display: inline-block;\n        border-top: 14px solid transparent;\n        border-left: 14px solid #fafafa;\n        border-right: 0 solid #fafafa;\n        border-bottom: 14px solid transparent;\n        content: \" \";\n        border-left-width: 0;\n        border-right-width: 14px;\n        left: -14px;\n        right: auto;\n      }\n    }\n\n    & > .commentContainer {\n      flex: 1;\n      left: -36px;\n      z-index: 100;\n\n      ::ng-deep .timeline-item::before {\n        display: none; // hide duplicate line\n      }\n    }\n  }\n}\n.timeline-badge.warning {\n  background-color: #f0ad4e !important;\n}\n\n.timeline-badge.closed {\n  background-color: #ff0036 !important;\n}\n\n.timeline-badge.reopened {\n  background-color: #00ba39 !important;\n}\n\n.timeline-title {\n  margin-top: 0;\n  color: inherit;\n}\n\n.timeline-body > p,\n.timeline-body > ul {\n  margin-bottom: 0;\n}\n\n.timeline-body > p + p {\n  margin-top: 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{this.timeFormatter.formatTimeDifference(timelineItem.time)}}      '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimelineItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TimelineItemDeletedDirective.html":{"url":"directives/TimelineItemDeletedDirective.html","title":"directive - TimelineItemDeletedDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  TimelineItemDeletedDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/issue-detail/timeline/coalesced/timeline-item.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This directive is used in conjunction with an ng-template.\nThe content of the ng-template specifies the content of a timeline item, if the attribute showDeleted of the\nTimelineItemComponent is set to true.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appTimelineItemDeleted]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef<>)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef<>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, ChangeDetectorRef, Component, ContentChild, Directive, Input, TemplateRef} from '@angular/core';\nimport {CoalescedTimelineItem} from '@app/issue-detail/timeline/timeline.component';\nimport {TimeFormatter} from '@app/issue-detail/time-formatter';\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if it was *not* coalesced\n */\n@Directive({\n  selector: '[appSingleTimelineItem]'\n})\nexport class TimelineSingleItemDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if it was coalesced\n */\n@Directive({\n  selector: '[appCoalescedTimelineItems]'\n})\nexport class TimelineCoalescedItemsDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if the attribute `showDeleted` of the\n * {@link TimelineItemComponent} is set to `true`.\n */\n@Directive({\n  selector: '[appTimelineItemDeleted]'\n})\nexport class TimelineItemDeletedDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This component provides an easy method to switch between the different possible content types of a timeline item,\n * such as single, coalesced or deleted.\n * Additionally, the formatted time is shown.\n */\n@Component({\n  selector: 'app-timeline-item',\n  templateUrl: './timeline-item.component.html',\n  styleUrls: ['../timeline.component.scss']\n})\nexport class TimelineItemComponent implements AfterViewInit {\n  /** The timeline item to show */\n  @Input() timelineItem: CoalescedTimelineItem;\n  /** If this option is set to true, the template with the `appTimelineItemDeleted` directive is shown */\n  @Input() showDeleted = false;\n\n  /** The content to be shown if the timeline item was not coalesced */\n  @ContentChild(TimelineSingleItemDirective) timelineItemContent: TimelineSingleItemDirective;\n  /** The content to be shown if the timeline item was coalesced */\n  @ContentChild(TimelineCoalescedItemsDirective) timelineItemsContent: TimelineCoalescedItemsDirective;\n  /** The content to be shown if the timeline item contains deleted data */\n  @ContentChild(TimelineItemDeletedDirective) timelineItemDeletedContent: TimelineItemDeletedDirective;\n\n  timeFormatter: TimeFormatter = new TimeFormatter();\n  activeItemContent: TemplateRef = null;\n\n  constructor(private changeDetector: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit() {\n    if (this.showDeleted) {\n      this.activeItemContent = this.timelineItemDeletedContent.template;\n    } else if (this.timelineItem.isCoalesced && this.timelineItemsContent) {\n      this.activeItemContent = this.timelineItemsContent.template;\n    } else if (!this.timelineItem.isCoalesced) {\n      this.activeItemContent = this.timelineItemContent.template;\n    }\n\n    this.changeDetector.detectChanges();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TimelineSingleItemDirective.html":{"url":"directives/TimelineSingleItemDirective.html","title":"directive - TimelineSingleItemDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  TimelineSingleItemDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/issue-detail/timeline/coalesced/timeline-item.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This directive is used in conjunction with an ng-template.\nThe content of the ng-template specifies the content of a timeline item, if it was not coalesced\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appSingleTimelineItem]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef<>)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef<>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, ChangeDetectorRef, Component, ContentChild, Directive, Input, TemplateRef} from '@angular/core';\nimport {CoalescedTimelineItem} from '@app/issue-detail/timeline/timeline.component';\nimport {TimeFormatter} from '@app/issue-detail/time-formatter';\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if it was *not* coalesced\n */\n@Directive({\n  selector: '[appSingleTimelineItem]'\n})\nexport class TimelineSingleItemDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if it was coalesced\n */\n@Directive({\n  selector: '[appCoalescedTimelineItems]'\n})\nexport class TimelineCoalescedItemsDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if the attribute `showDeleted` of the\n * {@link TimelineItemComponent} is set to `true`.\n */\n@Directive({\n  selector: '[appTimelineItemDeleted]'\n})\nexport class TimelineItemDeletedDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This component provides an easy method to switch between the different possible content types of a timeline item,\n * such as single, coalesced or deleted.\n * Additionally, the formatted time is shown.\n */\n@Component({\n  selector: 'app-timeline-item',\n  templateUrl: './timeline-item.component.html',\n  styleUrls: ['../timeline.component.scss']\n})\nexport class TimelineItemComponent implements AfterViewInit {\n  /** The timeline item to show */\n  @Input() timelineItem: CoalescedTimelineItem;\n  /** If this option is set to true, the template with the `appTimelineItemDeleted` directive is shown */\n  @Input() showDeleted = false;\n\n  /** The content to be shown if the timeline item was not coalesced */\n  @ContentChild(TimelineSingleItemDirective) timelineItemContent: TimelineSingleItemDirective;\n  /** The content to be shown if the timeline item was coalesced */\n  @ContentChild(TimelineCoalescedItemsDirective) timelineItemsContent: TimelineCoalescedItemsDirective;\n  /** The content to be shown if the timeline item contains deleted data */\n  @ContentChild(TimelineItemDeletedDirective) timelineItemDeletedContent: TimelineItemDeletedDirective;\n\n  timeFormatter: TimeFormatter = new TimeFormatter();\n  activeItemContent: TemplateRef = null;\n\n  constructor(private changeDetector: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit() {\n    if (this.showDeleted) {\n      this.activeItemContent = this.timelineItemDeletedContent.template;\n    } else if (this.timelineItem.isCoalesced && this.timelineItemsContent) {\n      this.activeItemContent = this.timelineItemsContent.template;\n    } else if (!this.timelineItem.isCoalesced) {\n      this.activeItemContent = this.timelineItemContent.template;\n    }\n\n    this.changeDetector.detectChanges();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopToolbarComponent.html":{"url":"components/TopToolbarComponent.html","title":"component - TopToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TopToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/top-toolbar/top-toolbar.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is responsible for showing the top bar containing the home icon\non the left-hand side and the mock settings and user icon as well as the functional\nlog out button on the right-hand side. It does NOT determine whether to show the sandwich\nmenu icon itself, but gets this information passed from FrameComponent.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-top-toolbar\n            \n\n            \n                styleUrls\n                ./top-toolbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./top-toolbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                isHandset$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                handleClick\n                            \n                            \n                                    Public\n                                openSettingsDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                showMenuButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                menuClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver, authService: AuthenticationService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/top-toolbar/top-toolbar.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        showMenuButton\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/top-toolbar/top-toolbar.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        menuClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/top-toolbar/top-toolbar.component.ts:25\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        handleClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/top-toolbar/top-toolbar.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openSettingsDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    openSettingsDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/top-toolbar/top-toolbar.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthenticationService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/top-toolbar/top-toolbar.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isHandset$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/top-toolbar/top-toolbar.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Output, EventEmitter, Input } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { AuthenticationService } from '@app/auth/authentication.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsDialogComponent } from '@app/dialogs/settings-dialog/settings-dialog.component';\n\n/**\n * This component is responsible for showing the top bar containing the home icon\n * on the left-hand side and the mock settings and user icon as well as the functional\n * log out button on the right-hand side. It does NOT determine whether to show the sandwich\n * menu icon itself, but gets this information passed from FrameComponent.\n */\n@Component({\n  selector: 'app-top-toolbar',\n  templateUrl: './top-toolbar.component.html',\n  styleUrls: ['./top-toolbar.component.scss']\n})\nexport class TopToolbarComponent {\n  @Input()\n  showMenuButton = false;\n\n  @Output()\n  public menuClick = new EventEmitter();\n\n  isHandset$: Observable = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver, public authService: AuthenticationService, private dialog: MatDialog) { }\n  \n  public handleClick() {\n    this.menuClick.emit();\n  }\n\n  public openSettingsDialog() {\n    this.dialog.open(SettingsDialogComponent);\n  }\n}\n\n    \n\n    \n        \n  \n  \n    menu\n  \n  \n    home\n  \n  \n  \n  \n    \n      settings\n    \n    \n      account_circle\n    \n    \n      logout\n    \n  \n\n\n    \n\n    \n                \n                    ./top-toolbar.component.scss\n                \n                mat-toolbar {\n  position: sticky;\n  top: 0;\n  z-index: 1;\n}\n.toolbar-spacer {\n  flex: 1 1 auto;\n}\n\n.mat-toolbar {\n  justify-content: space-between;\n}\n\n.toolbar-spacer {\n  flex: 1 1 auto;\n}\n\n#current-project {\n  font-size: 12px;\n  border: 3px solid white;\n  border-radius: 0.5em;\n  padding: 0 4px 0 4px;\n  margin: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        menu        home                  settings              account_circle              logout      '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'TopToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/authentication.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {environment} from '@environments/environment';\nimport {Router} from '@angular/router';\nimport {map} from 'rxjs/operators';\n\n/**\n * Responsible for saving user name, id and jwt token in localstorage\n * and exposing the name and id through currentUserSubject\n */\n@Injectable({providedIn: 'root'})\nexport class AuthenticationService {\n\n  readonly userStorageKey = 'currentUser';\n  private currentUserSubject: BehaviorSubject;\n  public currentUser: Observable;\n\n  constructor(private http: HttpClient, private router: Router) {\n    this.currentUserSubject = new BehaviorSubject(this.fetchUserFromStorage());\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): User {\n    return this.currentUserSubject.value;\n  }\n\n  fetchUserFromStorage(): User {\n    return JSON.parse(localStorage.getItem(this.userStorageKey));\n  }\n\n  saveUserToStorage(user: User): void {\n    localStorage.setItem(this.userStorageKey, JSON.stringify(user));\n  }\n\n  /**\n   * If login is sucessfull save the user name, id and jwt token to local storage and expose the name and id\n   * through currentUserSubject. If the login fails the returned observable errors.\n   * @param username provided by user to LoginComponent\n   * @param password provided by user to LoginComponent\n   * @returns the logged in user, errors if login is not successful\n   */\n  login(username: string, password: string): Observable {\n    return this.http.post(environment.loginUrl, {username, password})\n      .pipe(map(response => {\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        localStorage.setItem('token', response.token);\n        const tokenPayload = JSON.parse(atob(response.token.split('.')[1]));\n        const user = {name: tokenPayload.name, id: tokenPayload.sub};\n        this.saveUserToStorage(user);\n        this.currentUserSubject.next(user);\n        return user;\n      }));\n  }\n\n  /**\n   * remove user from local storage and set subject holding the current user to null\n   */\n  logout() {\n    localStorage.removeItem('currentUser');\n    localStorage.removeItem('token');\n    this.router.navigate(['login']);\n    this.currentUserSubject.next(null);\n  }\n}\n\ninterface User {\n  name: string;\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserItemComponent.html":{"url":"components/UserItemComponent.html","title":"component - UserItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/user-item/user-item.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a user.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-item\n            \n\n            \n                styleUrls\n                ./user-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                noDisplay\n                            \n                            \n                                short\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        noDisplay\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/user-item/user-item.component.ts:16\n                            \n                        \n                \n                    \n                        Hides the display name.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        short\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/user-item/user-item.component.ts:14\n                            \n                        \n                \n                    \n                        Will show only the display name or username.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                \n                    \n                        Type :         User\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/user-item/user-item.component.ts:12\n                            \n                        \n                \n                    \n                        The user data.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { User } from 'src/generated/graphql-dgql';\n\n/** This component displays a user. */\n@Component({\n  selector: 'app-user-item',\n  templateUrl: './user-item.component.html',\n  styleUrls: ['./user-item.component.scss']\n})\nexport class UserItemComponent {\n  /** The user data. */\n  @Input() user: User;\n  /** Will show only the display name or username. */\n  @Input() short = false;\n  /** Hides the display name. */\n  @Input() noDisplay = false;\n}\n\n    \n\n    \n        \n  \n    {{user.displayName}}\n  \n    \n    {{user.username}}\n  \n\n\n    \n\n    \n                \n                    ./user-item.component.scss\n                \n                .display-name {\n  font-weight: 500;\n}\n.username {\n  &.has-display-name {\n    opacity: 0.7;\n  }\n  &:not(.has-display-name) {\n    font-weight: 500;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{user.displayName}}          {{user.username}}  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'UserItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserNotifyService.html":{"url":"injectables/UserNotifyService.html","title":"injectable - UserNotifyService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserNotifyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user-notify/user-notify.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service provides functions for user notification\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                notifyError\n                            \n                            \n                                notifyInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-notify/user-notify.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        notifyError\n                        \n                    \n                \n            \n            \n                \nnotifyError(message: string, error?: Error)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-notify/user-notify.service.ts:33\n                \n            \n\n\n            \n                \n                    Notify the user that an error occurred\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The message to be shown\n\n                                    \n                                \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optionally, the error. This will be logged in the console, if defined.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notifyInfo\n                        \n                    \n                \n            \n            \n                \nnotifyInfo(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-notify/user-notify.service.ts:45\n                \n            \n\n\n            \n                \n                    Notify the user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The message to be shown\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {IndividualConfig, ToastrService} from 'ngx-toastr';\n\n/**\n * This service provides functions for user notification\n */\n@Injectable({providedIn: 'root'})\nexport class UserNotifyService {\n  /** @ignore */\n  private errorConfig: Partial = {\n    timeOut: 10000,\n    closeButton: true,\n    positionClass: 'toast-top-center',\n    enableHtml: true\n  };\n\n  /** @ignore */\n  private infoConfig: Partial = {\n    timeOut: 4000,\n    closeButton: true,\n    positionClass: 'toast-top-center',\n    enableHtml: true\n  };\n\n  constructor(private toastr: ToastrService) {\n  }\n\n  /**\n   * Notify the user that an error occurred\n   * @param message The message to be shown\n   * @param error Optionally, the error. This will be logged in the console, if defined.\n   */\n  notifyError(message: string, error?: Error) {\n    if (error !== undefined) {\n      console.log('Error:', error);\n    }\n\n    this.toastr.error(message, 'Error!', this.errorConfig);\n  }\n\n  /**\n   * Notify the user\n   * @param message The message to be shown\n   */\n  notifyInfo(message: string) {\n    this.toastr.info(message, 'Info', this.infoConfig);\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/queries/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                searchUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(qSearchUsers: SearchUsersGQL, qCurrentUser: CurrentUserGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data-dgql/queries/users.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        qSearchUsers\n                                                  \n                                                        \n                                                                        SearchUsersGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qCurrentUser\n                                                  \n                                                        \n                                                                        CurrentUserGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n            \n                \ncurrentUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/queries/users.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchUsers\n                        \n                    \n                \n            \n            \n                \nsearchUsers(filter: string | literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/queries/users.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            string | literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  CurrentUserGQL,\n  SearchUsersGQL\n} from 'src/generated/graphql-dgql';\nimport { promisifyApolloFetch } from '@app/data-dgql/queries/util';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n  constructor(\n    private qSearchUsers: SearchUsersGQL,\n    private qCurrentUser: CurrentUserGQL,\n  ) {}\n\n  searchUsers(filter: string | { username: string }) {\n    let query = '';\n    // filter accepts an object for compatibility with UserFilter\n    // FIXME: this is not very elegant of a solution\n    if (typeof filter === 'string') {\n      query = filter;\n    } else if (filter) {\n      query = filter.username;\n    }\n\n    if (!query) {\n      // searchUser does not work without a search string\n      return Promise.resolve([]);\n    }\n\n    return promisifyApolloFetch(this.qSearchUsers.fetch({ query })).then(data => data.searchUser);\n  }\n\n  currentUser() {\n    return promisifyApolloFetch(this.qCurrentUser.fetch());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Vector.html":{"url":"classes/Vector.html","title":"class - Vector","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Vector\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/automatic-layout.ts\n        \n\n\n            \n                Description\n            \n            \n                A simple 2D vector class.\nThe value of this vector is essentially immutable, every operation returns a new vector!\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                x\n                            \n                            \n                                    Public\n                                y\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                add\n                            \n                            \n                                    Public\n                                addSelf\n                            \n                            \n                                    Public\n                                distanceToLine\n                            \n                            \n                                    Public\n                                dot\n                            \n                            \n                                    Static\n                                isBehind\n                            \n                            \n                                    Public\n                                isZero\n                            \n                            \n                                    Public\n                                length\n                            \n                            \n                                    Public\n                                normalize\n                            \n                            \n                                    Public\n                                perpendicularClockwise\n                            \n                            \n                                    Public\n                                perpendicularCounterClockwise\n                            \n                            \n                                    Public\n                                scale\n                            \n                            \n                                    Public\n                                subtract\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(x: number, y: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/graphs/automatic-layout.ts:9\n                            \n                        \n\n                \n                    \n                            Vector constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        x\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                X component, 0 by default\n\n                                                        \n                                                \n                                                \n                                                        y\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Y component, 0 by default\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        x\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        y\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        add\n                        \n                    \n                \n            \n            \n                \n                    \n                    add(other: Vector)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:64\n                \n            \n\n\n            \n                \n                    Add this vector and another vector\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The other vector\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Vector\n\n                    \n                    \n                        A new vector, the sum of this vector and the other vector\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addSelf\n                        \n                    \n                \n            \n            \n                \n                    \n                    addSelf(other: Vector)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:73\n                \n            \n\n\n            \n                \n                    Add another vector on this vector\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The other vector\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Vector\n\n                    \n                    \n                        This vector\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        distanceToLine\n                        \n                    \n                \n            \n            \n                \n                    \n                    distanceToLine(sourcePoint: Vector, targetPoint: Vector)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:123\n                \n            \n\n\n            \n                \n                    Calculate the distance of a point, as represented by this vector, to a line, as defined by two other points.\nNote that the length of the line is infinite, and that this function calculates the distance to this infinitely\nlong line.\nIf this is not desired, the #isBehind function can be used to determine if a point is outside the defined\nline segment.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sourcePoint\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The source point of the line\n\n                                    \n                                \n                                \n                                    targetPoint\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The target point of the line\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The distance to the infinitely long line\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        dot\n                        \n                    \n                \n            \n            \n                \n                    \n                    dot(other: Vector)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:109\n                \n            \n\n\n            \n                \n                    Calculate the dot product\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The other vector\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        dot(this, other)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isBehind\n                        \n                    \n                \n            \n            \n                \n                    \n                    isBehind(source: Vector, target: Vector, point: Vector)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:29\n                \n            \n\n\n            \n                \n                    Check if the vector pointing from source to point is pointing away more than 90 degrees to the vector pointing\nfrom the source to the target.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The source point, as a vector\n\n                                    \n                                \n                                \n                                    target\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The target point, as a vector\n\n                                    \n                                \n                                \n                                    point\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The point to check, as a vector\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        dot(target - source, point - source) \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isZero\n                        \n                    \n                \n            \n            \n                \n                    \n                    isZero()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:133\n                \n            \n\n\n            \n                \n                    Check if both components of this vector are zero\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True if it is zero\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        length\n                        \n                    \n                \n            \n            \n                \n                    \n                    length()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:47\n                \n            \n\n\n            \n                \n                    Length of the vector\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        normalize\n                        \n                    \n                \n            \n            \n                \n                    \n                    normalize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:55\n                \n            \n\n\n            \n                \n                    Normalize the vector\n\n\n                    \n                    \n                    \n                        Returns :         Vector\n\n                    \n                    \n                        A new, normalized vector\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        perpendicularClockwise\n                        \n                    \n                \n            \n            \n                \n                    \n                    perpendicularClockwise()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:92\n                \n            \n\n\n            \n                \n                    Rotate this vector by 90 degrees in the clockwise direction\n\n\n                    \n                    \n                    \n                        Returns :         Vector\n\n                    \n                    \n                        A new, rotated vector\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        perpendicularCounterClockwise\n                        \n                    \n                \n            \n            \n                \n                    \n                    perpendicularCounterClockwise()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:100\n                \n            \n\n\n            \n                \n                    Rotate this vector by 90 degrees in the counter-clockwise direction\n\n\n                    \n                    \n                    \n                        Returns :         Vector\n\n                    \n                    \n                        A new, rotated vector\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        scale\n                        \n                    \n                \n            \n            \n                \n                    \n                    scale(factor: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:40\n                \n            \n\n\n            \n                \n                    Scale the vector\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    factor\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The scalar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Vector\n\n                    \n                    \n                        A new, scaled vector\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        subtract\n                        \n                    \n                \n            \n            \n                \n                    \n                    subtract(other: Vector)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:84\n                \n            \n\n\n            \n                \n                    Subtract this vector and another vector\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The other vector\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Vector\n\n                    \n                    \n                        A new vector, the difference of this vector and the other vector\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {NodeType} from '@app/graphs/issue-graph/issue-graph-nodes';\n\n/**\n * A simple 2D vector class.\n * The value of this vector is essentially immutable, every operation returns a new vector!\n */\nclass Vector {\n  public x: number;\n  public y: number;\n\n  /**\n   * Vector constructor\n   * @param x X component, 0 by default\n   * @param y Y component, 0 by default\n   */\n  constructor(x: number = 0, y: number = 0) {\n    this.x = x;\n    this.y = y;\n  }\n\n  /**\n   * Check if the vector pointing from `source` to `point` is pointing away more than 90 degrees to the vector pointing\n   * from the `source` to the `target`.\n   * @param source The source point, as a vector\n   * @param target The target point, as a vector\n   * @param point The point to check, as a vector\n   * @return dot(target - source, point - source)  = new Set();\n\n  /** Padding to be added to this node */\n  readonly padding: number;\n\n  constructor(id: string | number, positionX: number, positionY: number, nodeType: NodeType) {\n    this.id = id;\n    this.padding = nodeType === NodeType.Component ? LayoutNode.PADDING_COMPONENT : LayoutNode.PADDING_INTERFACE;\n    this.position = new Vector(positionX, positionY);\n  }\n\n  /**\n   * Create an edge between this node and another node.\n   * Does **not** create a connection from the other node to this node!\n   * @param other The other node\n   */\n  public connectTo(other: LayoutNode): void {\n    this.connectedTo.add(other);\n  }\n\n  /**\n   * Calculate the movement direction that this node should move in, based on all other nodes around it\n   * @param allNodes All nodes, can include this node as well\n   * @returns The direction in which this node wants to travel\n   */\n  public calculateMovement(allNodes: Array): Vector {\n    if (this.fixed) {\n      return new Vector();\n    }\n\n    // Total force acting on this node\n    const result = new Vector();\n\n    // Keeps track of edges already visited\n    const otherNodesVisited = new Set();\n\n    for (const otherNode of allNodes) {\n      // Iterate over all other nodes\n      if (otherNode.id === this.id) {\n        continue;\n      }\n\n      // If both nodes are at an identical position, add a small randomized offset to this nodes position\n      let towardsOther = otherNode.position.subtract(this.position);\n      if (towardsOther.isZero()) {\n        this.position.x += Math.random() - .5;\n        this.position.y += Math.random() - .5;\n        towardsOther = otherNode.position.subtract(this.position);\n      }\n\n      const pad = this.padding + otherNode.padding;\n      const distance = Math.max(1, towardsOther.length() - pad);\n      towardsOther = towardsOther.scale(1 / distance);\n\n      // Move this node towards connected nodes, and away from non-connected nodes.\n      // Also make sure that a minimum spacing between nodes exists, regardless of connection.\n      let scale = 0;\n      if (this.connectedTo.has(otherNode)) {\n        if (distance ): void {\n  if (nodes.length === 0) {\n    return;\n  }\n\n  const directions = new Array(nodes.length);\n  // Fix an arbitrary node in place to prevent the graph from flying away\n  const firstNode = nodes[0];\n  firstNode.fixed = true;\n\n  // FIXME: This loop should stop early if no more (significant) changes happen\n  for (let v = 0; v \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            antDesignIcons\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            icons\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            toasterConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/auth/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                src/app/auth/authentication.service.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/cache-node.component.ts\n            \n            component\n            CacheNodeComponent\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/components/cursor-paginator/cursor-paginator.component.ts\n            \n            component\n            CursorPaginatorComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/components/issue-category/issue-category.component.ts\n            \n            component\n            IssueCategoryComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/issue-icon/issue-icon.component.ts\n            \n            component\n            IssueIconComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/components/issue-item/issue-item.component.ts\n            \n            component\n            IssueItemComponent\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/components/issue-label/issue-label.component.ts\n            \n            component\n            IssueLabelComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/issue-location/issue-location.component.ts\n            \n            component\n            IssueLocationComponent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/components/item.directive.ts\n            \n            directive\n            ItemDirective\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/set-editor/set-editor-dialog.component.ts\n            \n            component\n            SetEditorDialogComponent\n            \n                5 %\n                (1/18)\n            \n        \n        \n            \n                \n                src/app/components/set-editor/set-editor-dialog.component.ts\n            \n            class\n            MultiSourceList\n            \n                83 %\n                (15/18)\n            \n        \n        \n            \n                \n                src/app/components/set-editor/set-editor-dialog.component.ts\n            \n            interface\n            SetEditorDialogData\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/set-editor/set-editor-dialog.component.ts\n            \n            interface\n            SetMultiSource\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/set-editor/set-editor.component.ts\n            \n            component\n            SetEditorComponent\n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                src/app/components/user-item/user-item.component.ts\n            \n            component\n            UserItemComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            interface\n            ListId\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            interface\n            ListParams\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            interface\n            NodeId\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            function\n            decodeListId\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            function\n            decodeNodeId\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            function\n            encodeListId\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            function\n            encodeNodeId\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            function\n            nodeTypeFromTypename\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            variable\n            CURRENT_USER_NODE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            variable\n            ROOT_NODE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/index.ts\n            \n            injectable\n            DataService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/data-dgql/load.ts\n            \n            function\n            listParams\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/load.ts\n            \n            variable\n            listQueries\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/load.ts\n            \n            variable\n            nodeQueries\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/load.ts\n            \n            variable\n            queryList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/load.ts\n            \n            variable\n            queryNode\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/mutate.ts\n            \n            class\n            Mutations\n            \n                14 %\n                (4/27)\n            \n        \n        \n            \n                \n                src/app/data-dgql/queries/components.service.ts\n            \n            injectable\n            ComponentsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/data-dgql/queries/issues.service.ts\n            \n            injectable\n            IssuesService\n            \n                0 %\n                (0/43)\n            \n        \n        \n            \n                \n                src/app/data-dgql/queries/projects.service.ts\n            \n            injectable\n            ProjectsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/data-dgql/queries/queries.service.ts\n            \n            injectable\n            QueriesService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/data-dgql/queries/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/data-dgql/queries/util.ts\n            \n            interface\n            QueryListParams\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/data-dgql/queries/util.ts\n            \n            function\n            promisifyApolloFetch\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/query.ts\n            \n            class\n            DataList\n            \n                94 %\n                (16/17)\n            \n        \n        \n            \n                \n                src/app/data-dgql/query.ts\n            \n            class\n            DataNode\n            \n                81 %\n                (9/11)\n            \n        \n        \n            \n                \n                src/app/data-dgql/query.ts\n            \n            class\n            DataQuery\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/app/data-dgql/query.ts\n            \n            class\n            NodeCache\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/data-dgql/query.ts\n            \n            variable\n            CACHE_FAST_DEBOUNCE_TIME_MS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/query.ts\n            \n            variable\n            CACHE_INTERACTIVE_DEBOUNCE_TIME_MS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/query.ts\n            \n            variable\n            CACHE_STALE_TIME_MS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data/component/component-store.service.ts\n            \n            injectable\n            ComponentStoreService\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/data/interface/interface-store.service.ts\n            \n            injectable\n            InterfaceStoreService\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/graph-data.ts\n            \n            class\n            GraphComponent\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/graph-data.ts\n            \n            class\n            GraphDataFactory\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/graph-data.ts\n            \n            class\n            GraphInterface\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/graph-data.ts\n            \n            class\n            GraphIssue\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/graph-data.ts\n            \n            interface\n            GraphData\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/graph-data.ts\n            \n            function\n            computeRelatedFolders\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/graph-data.ts\n            \n            function\n            issueCounts\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/graph-data.ts\n            \n            function\n            removeOfferingComponents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/issue-graph-api.service.ts\n            \n            injectable\n            IssueGraphApiService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/issue-graph-state.service.ts\n            \n            injectable\n            IssueGraphStateService\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/data/issue/issue-store.service.ts\n            \n            injectable\n            IssueStoreService\n            \n                6 %\n                (1/16)\n            \n        \n        \n            \n                \n                src/app/data/label/label-store.service.ts\n            \n            injectable\n            LabelStoreService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/data/label/label-store.service.ts\n            \n            function\n            isFilterLabel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data/project/project-store.service.ts\n            \n            injectable\n            ProjectStoreService\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/dialogs/access-token-dialog/access-token-dialog.component.ts\n            \n            component\n            AccessTokenDialogComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts\n            \n            component\n            AddProjectMemberDialogComponent\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-component-dialog/create-component-dialog.component.ts\n            \n            component\n            CreateComponentDialogComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-component-dialog/create-component-dialog.component.ts\n            \n            interface\n            CreateComponentData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts\n            \n            component\n            CreateInterfaceDialogComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts\n            \n            interface\n            CreateInterfaceData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts\n            \n            component\n            CreateIssueDialogComponent\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts\n            \n            interface\n            DialogData\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts\n            \n            component\n            CreateEditLabelDialogComponent\n            \n                83 %\n                (10/12)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts\n            \n            interface\n            CreateEditLabelDialogData\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-project-dialog/create-project-dialog.component.ts\n            \n            component\n            CreateProjectDialogComponent\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts\n            \n            component\n            ProfileSettingsDialogComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/dialogs/remove-dialog/remove-dialog.component.ts\n            \n            component\n            RemoveDialogComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/dialogs/remove-dialog/remove-dialog.component.ts\n            \n            interface\n            DialogData\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/dialogs/remove-project-member-component/remove-project-member-component.component.ts\n            \n            component\n            RemoveProjectMemberComponentComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/dialogs/settings-dialog/settings-dialog.component.ts\n            \n            component\n            SettingsDialogComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/frame/frame.component.ts\n            \n            component\n            FrameComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/graphql.module.ts\n            \n            function\n            createErrorLink\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphql.module.ts\n            \n            function\n            provideDefaultApollo\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/graphql.module.ts\n            \n            function\n            providePublicApollo\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/graphql.module.ts\n            \n            variable\n            basic\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphql.module.ts\n            \n            variable\n            defaultOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/graphql.module.ts\n            \n            variable\n            networkErrorToast\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/graphs/automatic-layout.ts\n            \n            class\n            LayoutNode\n            \n                93 %\n                (14/15)\n            \n        \n        \n            \n                \n                src/app/graphs/automatic-layout.ts\n            \n            class\n            Vector\n            \n                87 %\n                (14/16)\n            \n        \n        \n            \n                \n                src/app/graphs/automatic-layout.ts\n            \n            function\n            doGraphLayout\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/graphs/component-context-menu/component-context-menu.component.ts\n            \n            component\n            ComponentContextMenuComponent\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/app/graphs/component-context-menu/component-context-menu.component.ts\n            \n            injectable\n            ComponentContextMenuService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/graphs/component-context-menu/component-context-menu.component.ts\n            \n            interface\n            ComponentContextMenuData\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/graphs/component-context-menu/component-context-menu.component.ts\n            \n            variable\n            COMPONENT_CONTEXT_MENU_DATA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts\n            \n            component\n            IssueGraphControlsComponent\n            \n                23 %\n                (4/17)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/class-setters/issue-graph-class-setters.service.ts\n            \n            injectable\n            IssueGraphClassSettersService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/dynamic-template-registry/issue-graph-dynamic-template-registry.service.ts\n            \n            injectable\n            IssueGraphDynamicTemplateRegistryService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/group-behaviours.ts\n            \n            class\n            IssueGroupContainerBehaviour\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/group-behaviours.ts\n            \n            class\n            IssueGroupContainerParentBehaviour\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/group-behaviours.ts\n            \n            function\n            distance\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            interface\n            ComponentNode\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            interface\n            InterfaceNode\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            interface\n            IssueFolderNode\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            interface\n            IssueGroupContainerNode\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            interface\n            IssueNode\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            interface\n            Position\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            interface\n            RelationEdge\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            function\n            createComponentNode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            function\n            createConsumptionEdge\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            function\n            createInterfaceNode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            function\n            createInterfaceProvisionEdge\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            function\n            createIssueFolderNode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            function\n            createIssueGroupContainerNode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            function\n            createRelationEdge\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            function\n            getIssueFolderId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            variable\n            zeroPosition\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph.component.ts\n            \n            component\n            IssueGraphComponent\n            \n                62 %\n                (37/59)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph.component.ts\n            \n            interface\n            Positions\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/link-handles/issue-graph-link-handles.service.ts\n            \n            injectable\n            IssueGraphLinkHandlesService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/graphs/label-search/label-search.component.ts\n            \n            component\n            LabelSearchComponent\n            \n                30 %\n                (3/10)\n            \n        \n        \n            \n                \n                src/app/graphs/label-search/label-search.component.ts\n            \n            interface\n            FilterSelection\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/graphs/label-search/label-search.component.ts\n            \n            interface\n            TextFragment\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/graphs/shared.ts\n            \n            interface\n            FilterState\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/issue-detail/comment/comment.component.ts\n            \n            component\n            CommentComponent\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/issue-detail/issue-contents.component.ts\n            \n            component\n            IssueContentsComponent\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/issue-detail/issue-detail.component.ts\n            \n            component\n            IssueDetailComponent\n            \n                17 %\n                (3/17)\n            \n        \n        \n            \n                \n                src/app/issue-detail/issue-sidebar.component.ts\n            \n            component\n            IssueSidebarComponent\n            \n                2 %\n                (1/39)\n            \n        \n        \n            \n                \n                src/app/issue-detail/linked-issue-item.component.ts\n            \n            component\n            LinkedIssueItemComponent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/issue-detail/time-formatter.ts\n            \n            class\n            TimeFormatter\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/issue-detail/timeline/coalesced/timeline-item.component.ts\n            \n            component\n            TimelineItemComponent\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/app/issue-detail/timeline/coalesced/timeline-item.component.ts\n            \n            directive\n            TimelineCoalescedItemsDirective\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/issue-detail/timeline/coalesced/timeline-item.component.ts\n            \n            directive\n            TimelineItemDeletedDirective\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/issue-detail/timeline/coalesced/timeline-item.component.ts\n            \n            directive\n            TimelineSingleItemDirective\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/issue-detail/timeline/timeline.component.ts\n            \n            component\n            TimelineComponent\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                src/app/issue-detail/timeline/timeline.component.ts\n            \n            interface\n            CoalescedTimelineItem\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/issue-list/issue-filter.component.ts\n            \n            component\n            IssueFilterComponent\n            \n                88 %\n                (15/17)\n            \n        \n        \n            \n                \n                src/app/issue-list/issue-filter.component.ts\n            \n            function\n            convertValueForFilter\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/issue-list/issue-filter.component.ts\n            \n            function\n            getDefaultForType\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/issue-list/issue-filter.component.ts\n            \n            variable\n            listAllIssues\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/issue-list/issue-filter.component.ts\n            \n            variable\n            PREDICATES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/issue-list/issue-list.component.ts\n            \n            component\n            IssueListComponent\n            \n                29 %\n                (8/27)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/markdown/markdown-editor/markdown-editor.component.ts\n            \n            component\n            MarkdownEditorComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/markdown/markdown-preview/markdown-preview.component.ts\n            \n            component\n            MarkdownPreviewComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/node-details-page/node-details-page.component.ts\n            \n            component\n            NodeDetailsPageComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/node-details/node-details.component.ts\n            \n            component\n            NodeDetailsComponent\n            \n                27 %\n                (8/29)\n            \n        \n        \n            \n                \n                src/app/project-header/project-header.component.ts\n            \n            component\n            ProjectHeaderComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/project-issue-list/project-issue-list.component.ts\n            \n            component\n            ProjectIssueListComponent\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/project-list-component/project-list.component.ts\n            \n            component\n            ProjectListComponent\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/project-members/project-members.component.ts\n            \n            component\n            ProjectMembersComponent\n            \n                5 %\n                (1/18)\n            \n        \n        \n            \n                \n                src/app/project-members/project-members.component.ts\n            \n            interface\n            userMock\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/project-overview/project-overview.component.ts\n            \n            component\n            ProjectOverviewComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                src/app/route-animations.ts\n            \n            function\n            slideTo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/route-animations.ts\n            \n            variable\n            slider\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/side-nav/side-nav.component.ts\n            \n            component\n            SideNavComponent\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/state.service.ts\n            \n            injectable\n            StateService\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/state.service.ts\n            \n            interface\n            AppState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/text-display/text-display.component.ts\n            \n            component\n            TextDisplayComponent\n            \n                50 %\n                (6/12)\n            \n        \n        \n            \n                \n                src/app/top-toolbar/top-toolbar.component.ts\n            \n            component\n            TopToolbarComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/user-notify/user-notify.service.ts\n            \n            injectable\n            UserNotifyService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/utils/query-component/query.component.ts\n            \n            component\n            QueryComponent\n            \n                58 %\n                (7/12)\n            \n        \n        \n            \n                \n                src/app/utils/query-component/query.component.ts\n            \n            directive\n            QueryBodyDirective\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/utils/query-component/query.component.ts\n            \n            directive\n            QueryButtonDirective\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/utils/validators.ts\n            \n            class\n            CCIMSValidators\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            host\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            host\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~9.1.12\n        \n            @angular/cdk : ^9.2.4\n        \n            @angular/common : ~9.1.12\n        \n            @angular/compiler : ~9.1.12\n        \n            @angular/core : ~9.1.12\n        \n            @angular/forms : ~9.1.12\n        \n            @angular/material : ^9.2.4\n        \n            @angular/platform-browser : ~9.1.12\n        \n            @angular/platform-browser-dynamic : ~9.1.12\n        \n            @angular/router : ~9.1.12\n        \n            @apollo/client : ^3.2.5\n        \n            @apollo/link-context : ^2.0.0-beta.3\n        \n            @clr/ui : ^4.0.4\n        \n            @github/time-elements : ^3.1.1\n        \n            @ng-select/ng-option-highlight : 0.0.5\n        \n            @ng-select/ng-select : ^4.0.4\n        \n            @primer/css : ^15.2.0\n        \n            @ustutt/grapheditor-webcomponent : ^0.6.0\n        \n            apollo-angular : ^2.0.4\n        \n            graphql : ^15.3.0\n        \n            monaco-editor : ^0.27.0\n        \n            ng-zorro-antd : ^9.3.0\n        \n            ngx-color-picker : ^10.1.0\n        \n            ngx-markdown : ^8.2.2\n        \n            ngx-monaco-editor : ^9.0.0\n        \n            ngx-toastr : ^13.1.0\n        \n            quick-score : ^0.0.12\n        \n            rxjs : ~6.5.4\n        \n            tslib : ^1.14.1\n        \n            typescript-collections : ^1.3.3\n        \n            zone.js : ~0.10.2\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            folderEdgeTypes   (src/.../issue-graph-nodes.ts)\n                        \n                        \n                            ListType   (src/.../id.ts)\n                        \n                        \n                            NodeDetailsType   (src/.../node-details.component.ts)\n                        \n                        \n                            NodeType   (src/.../id.ts)\n                        \n                        \n                            NodeType   (src/.../issue-graph-nodes.ts)\n                        \n                        \n                            QueryComponentState   (src/.../query.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/graphs/issue-graph/issue-graph-nodes.ts\n    \n        \n            \n                \n                    \n                        \n                        folderEdgeTypes\n                    \n                \n                        \n                            \n                                 RelatedTo\n                            \n                        \n                        \n                            \n                                Value : relatedTo\n                            \n                        \n                        \n                            \n                                 Depends\n                            \n                        \n                        \n                            \n                                Value : dependency\n                            \n                        \n                        \n                            \n                                 Duplicates\n                            \n                        \n                        \n                            \n                                Value : duplicate\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        NodeType\n                    \n                \n                        \n                            \n                                 Component\n                            \n                        \n                        \n                            \n                                Value : component\n                            \n                        \n                        \n                            \n                                 Interface\n                            \n                        \n                        \n                            \n                                Value : interface\n                            \n                        \n                        \n                            \n                                 InterfaceConsumer\n                            \n                        \n                        \n                            \n                                Value : interface-connect\n                            \n                        \n                        \n                            \n                                 IssueGroupContainer\n                            \n                        \n                        \n                            \n                                Value : issue-group-container\n                            \n                        \n            \n        \n\n    src/app/data-dgql/id.ts\n    \n        \n            \n                \n                    \n                        \n                        ListType\n                    \n                \n                    \n                        \n                            All list types represent their respective list queries in the backend API.\n\n                        \n                    \n                        \n                            \n                                 Projects\n                            \n                        \n                        \n                            \n                                 Components\n                            \n                        \n                        \n                            \n                                 ComponentInterfaces\n                            \n                        \n                        \n                            \n                                 Issues\n                            \n                        \n                        \n                            \n                                 IssuesOnLocation\n                            \n                        \n                        \n                            \n                                 IssueLocations\n                            \n                        \n                        \n                            \n                                 TimelineItems\n                            \n                        \n                        \n                            \n                                 Labels\n                            \n                        \n                        \n                            \n                                 Artifacts\n                            \n                        \n                        \n                            \n                                 Participants\n                            \n                        \n                        \n                            \n                                 Assignees\n                            \n                        \n                        \n                            \n                                 SearchUsers\n                            \n                        \n                        \n                            \n                                 LinkedIssues\n                            \n                        \n                        \n                            \n                                 LinkedByIssues\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        NodeType\n                    \n                \n                    \n                        \n                            Backend API node types.\nThe names should match the respective value of __typename in the GraphQL data for any given node.\n\n                        \n                    \n                        \n                            \n                                 Root\n                            \n                        \n                        \n                            \n                                 Component\n                            \n                        \n                        \n                            \n                                 ComponentInterface\n                            \n                        \n                        \n                            \n                                 Issue\n                            \n                        \n                        \n                            \n                                 IssueTimelineItem\n                            \n                        \n                        \n                            \n                                 Label\n                            \n                        \n                        \n                            \n                                 Project\n                            \n                        \n                        \n                            \n                                 Artifact\n                            \n                        \n                        \n                            \n                                 User\n                            \n                        \n                        \n                            \n                                 IssueComment\n                            \n                        \n            \n        \n\n    src/app/node-details/node-details.component.ts\n    \n        \n            \n                \n                    \n                        \n                        NodeDetailsType\n                    \n                \n                    \n                        \n                            A node shown in the details component can either be a component or an interface\n\n                        \n                    \n                        \n                            \n                                 Component\n                            \n                        \n                        \n                            \n                                 Interface\n                            \n                        \n            \n        \n\n    src/app/utils/query-component/query.component.ts\n    \n        \n            \n                \n                    \n                        \n                        QueryComponentState\n                    \n                \n                    \n                        \n                            The current state of the query\n\n                        \n                    \n                        \n                            \n                                 Ready\n                            \n                        \n                        \n                            \n                                 Loading\n                            \n                        \n                        \n                            \n                                 Error\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nWebfrontend for Gropius\nDevelopment server\nThis project was generated with Angular CLI version 9.1.12.\nRun npm start for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nProject structure\nHave a look at the routing module to get a nice overview\nof the primary components of the app.\n\n\n\nAspect\nCode\n\n\n\n\nApp Layout\nFrameComponent\n\n\nGraph\nGraphsModule, look at the declarations\n\n\nProject Context\nStateService\n\n\nAccount Management and Auth with Backend\nLoginComponent, RegisterComponent, AuthenticationService, AuthGuard\n\n\nApollo GraphQL Client Setup\nGraphQLModule\n\n\nType Definitions for Data from Backend  Helper Objects for Queries & Mutations  All of this is output of code generator\ngenerated\n\n\n\nDocumentation generation\nThe documentation is generated with Compodoc. Run npm run compodocfor a documentation server. Navigate to http://localhost:6060/. The documentation will automatically reload if you change any of the source files. The configuration for the documentation is managed in tsconfig.doc.json.\nCodegeneration from .graphql files\nThe app uses GraphQL instead of REST to communicate with the backend. The graphql files are in the\ndata folder and subdivided by entities they pertain to e.g. label \nWhen you change .graphql files you have to rerun the code generator. It will update the files in\nsrc/generated to match the changes in the .graphql files.:warning: The backend has to be running with debugNoLogin set to true to make the backend schema\ndefinition accessible to the generator via the urls defined in the codegen configuration file.Run npm run generate to execute the codegenerator when this condition is met.\nCodegenerator explanation\nWe use a codegenerator (https://graphql-code-generator.com/) to create typescript classes from .graphql files\ncontaining queries and mutations. One class per query/mutation. We then use dependency injection to inject objects of theses classes \ninto e.g. services via dependency injection. These objects make it easy to parameterize the mutations and queries and\ninvoke them in typescript code.\nMocked Members Page\nEvery project offers a mocked 'Members' page. It shows a list of users in the project and\noffers a dialog to add users. However this area is purely a mock, changes are not persisted\nand there are no other users who really have access to your project.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphQLModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_GraphsModule\n\n\n\ncluster_GraphsModule_declarations\n\n\n\ncluster_GraphsModule_exports\n\n\n\n\nAccessTokenDialogComponent\n\nAccessTokenDialogComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccessTokenDialogComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommentComponent\n\nCommentComponent\n\nAppModule -->\n\nCommentComponent->AppModule\n\n\n\n\n\nComponentContextMenuComponent\n\nComponentContextMenuComponent\n\nAppModule -->\n\nComponentContextMenuComponent->AppModule\n\n\n\n\n\nCreateComponentDialogComponent\n\nCreateComponentDialogComponent\n\nAppModule -->\n\nCreateComponentDialogComponent->AppModule\n\n\n\n\n\nCreateEditLabelDialogComponent\n\nCreateEditLabelDialogComponent\n\nAppModule -->\n\nCreateEditLabelDialogComponent->AppModule\n\n\n\n\n\nCreateInterfaceDialogComponent\n\nCreateInterfaceDialogComponent\n\nAppModule -->\n\nCreateInterfaceDialogComponent->AppModule\n\n\n\n\n\nCreateIssueDialogComponent\n\nCreateIssueDialogComponent\n\nAppModule -->\n\nCreateIssueDialogComponent->AppModule\n\n\n\n\n\nCreateProjectDialogComponent\n\nCreateProjectDialogComponent\n\nAppModule -->\n\nCreateProjectDialogComponent->AppModule\n\n\n\n\n\nFrameComponent\n\nFrameComponent\n\nAppModule -->\n\nFrameComponent->AppModule\n\n\n\n\n\nIssueContentsComponent\n\nIssueContentsComponent\n\nAppModule -->\n\nIssueContentsComponent->AppModule\n\n\n\n\n\nIssueDetailComponent\n\nIssueDetailComponent\n\nAppModule -->\n\nIssueDetailComponent->AppModule\n\n\n\n\n\nLinkedIssueItemComponent\n\nLinkedIssueItemComponent\n\nAppModule -->\n\nLinkedIssueItemComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMarkdownEditorComponent\n\nMarkdownEditorComponent\n\nAppModule -->\n\nMarkdownEditorComponent->AppModule\n\n\n\n\n\nMarkdownPreviewComponent\n\nMarkdownPreviewComponent\n\nAppModule -->\n\nMarkdownPreviewComponent->AppModule\n\n\n\n\n\nNodeDetailsComponent\n\nNodeDetailsComponent\n\nAppModule -->\n\nNodeDetailsComponent->AppModule\n\n\n\n\n\nNodeDetailsPageComponent\n\nNodeDetailsPageComponent\n\nAppModule -->\n\nNodeDetailsPageComponent->AppModule\n\n\n\n\n\nProfileSettingsDialogComponent\n\nProfileSettingsDialogComponent\n\nAppModule -->\n\nProfileSettingsDialogComponent->AppModule\n\n\n\n\n\nProjectListComponent\n\nProjectListComponent\n\nAppModule -->\n\nProjectListComponent->AppModule\n\n\n\n\n\nProjectOverviewComponent\n\nProjectOverviewComponent\n\nAppModule -->\n\nProjectOverviewComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nRemoveDialogComponent\n\nRemoveDialogComponent\n\nAppModule -->\n\nRemoveDialogComponent->AppModule\n\n\n\n\n\nRemoveProjectMemberComponentComponent\n\nRemoveProjectMemberComponentComponent\n\nAppModule -->\n\nRemoveProjectMemberComponentComponent->AppModule\n\n\n\n\n\nSettingsDialogComponent\n\nSettingsDialogComponent\n\nAppModule -->\n\nSettingsDialogComponent->AppModule\n\n\n\n\n\nSideNavComponent\n\nSideNavComponent\n\nAppModule -->\n\nSideNavComponent->AppModule\n\n\n\n\n\nTextDisplayComponent\n\nTextDisplayComponent\n\nAppModule -->\n\nTextDisplayComponent->AppModule\n\n\n\n\n\nTimelineCoalescedItemsDirective\n\nTimelineCoalescedItemsDirective\n\nAppModule -->\n\nTimelineCoalescedItemsDirective->AppModule\n\n\n\n\n\nTimelineComponent\n\nTimelineComponent\n\nAppModule -->\n\nTimelineComponent->AppModule\n\n\n\n\n\nTimelineItemComponent\n\nTimelineItemComponent\n\nAppModule -->\n\nTimelineItemComponent->AppModule\n\n\n\n\n\nTimelineItemDeletedDirective\n\nTimelineItemDeletedDirective\n\nAppModule -->\n\nTimelineItemDeletedDirective->AppModule\n\n\n\n\n\nTimelineSingleItemDirective\n\nTimelineSingleItemDirective\n\nAppModule -->\n\nTimelineSingleItemDirective->AppModule\n\n\n\n\n\nTopToolbarComponent\n\nTopToolbarComponent\n\nAppModule -->\n\nTopToolbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGraphQLModule\n\nGraphQLModule\n\nAppModule -->\n\nGraphQLModule->AppModule\n\n\n\n\n\nGraphsModule\n\nGraphsModule\n\nAppModule -->\n\nGraphsModule->AppModule\n\n\n\n\n\nCursorPaginatorComponent \n\nCursorPaginatorComponent \n\nCursorPaginatorComponent  -->\n\nGraphsModule->CursorPaginatorComponent \n\n\n\n\n\nIssueCategoryComponent \n\nIssueCategoryComponent \n\nIssueCategoryComponent  -->\n\nGraphsModule->IssueCategoryComponent \n\n\n\n\n\nIssueGraphComponent \n\nIssueGraphComponent \n\nIssueGraphComponent  -->\n\nGraphsModule->IssueGraphComponent \n\n\n\n\n\nIssueGraphControlsComponent \n\nIssueGraphControlsComponent \n\nIssueGraphControlsComponent  -->\n\nGraphsModule->IssueGraphControlsComponent \n\n\n\n\n\nIssueIconComponent \n\nIssueIconComponent \n\nIssueIconComponent  -->\n\nGraphsModule->IssueIconComponent \n\n\n\n\n\nIssueItemComponent \n\nIssueItemComponent \n\nIssueItemComponent  -->\n\nGraphsModule->IssueItemComponent \n\n\n\n\n\nIssueLabelComponent \n\nIssueLabelComponent \n\nIssueLabelComponent  -->\n\nGraphsModule->IssueLabelComponent \n\n\n\n\n\nIssueListComponent \n\nIssueListComponent \n\nIssueListComponent  -->\n\nGraphsModule->IssueListComponent \n\n\n\n\n\nIssueLocationComponent \n\nIssueLocationComponent \n\nIssueLocationComponent  -->\n\nGraphsModule->IssueLocationComponent \n\n\n\n\n\nIssueSidebarComponent \n\nIssueSidebarComponent \n\nIssueSidebarComponent  -->\n\nGraphsModule->IssueSidebarComponent \n\n\n\n\n\nItemDirective \n\nItemDirective \n\nItemDirective  -->\n\nGraphsModule->ItemDirective \n\n\n\n\n\nProjectHeaderComponent \n\nProjectHeaderComponent \n\nProjectHeaderComponent  -->\n\nGraphsModule->ProjectHeaderComponent \n\n\n\n\n\nQueryBodyDirective \n\nQueryBodyDirective \n\nQueryBodyDirective  -->\n\nGraphsModule->QueryBodyDirective \n\n\n\n\n\nQueryButtonDirective \n\nQueryButtonDirective \n\nQueryButtonDirective  -->\n\nGraphsModule->QueryButtonDirective \n\n\n\n\n\nQueryComponent \n\nQueryComponent \n\nQueryComponent  -->\n\nGraphsModule->QueryComponent \n\n\n\n\n\nSetEditorComponent \n\nSetEditorComponent \n\nSetEditorComponent  -->\n\nGraphsModule->SetEditorComponent \n\n\n\n\n\nUserItemComponent \n\nUserItemComponent \n\nUserItemComponent  -->\n\nGraphsModule->UserItemComponent \n\n\n\n\n\nAddProjectMemberDialogComponent\n\nAddProjectMemberDialogComponent\n\nGraphsModule -->\n\nAddProjectMemberDialogComponent->GraphsModule\n\n\n\n\n\nCacheNodeComponent\n\nCacheNodeComponent\n\nGraphsModule -->\n\nCacheNodeComponent->GraphsModule\n\n\n\n\n\nCursorPaginatorComponent\n\nCursorPaginatorComponent\n\nGraphsModule -->\n\nCursorPaginatorComponent->GraphsModule\n\n\n\n\n\nIssueCategoryComponent\n\nIssueCategoryComponent\n\nGraphsModule -->\n\nIssueCategoryComponent->GraphsModule\n\n\n\n\n\nIssueFilterComponent\n\nIssueFilterComponent\n\nGraphsModule -->\n\nIssueFilterComponent->GraphsModule\n\n\n\n\n\nIssueGraphComponent\n\nIssueGraphComponent\n\nGraphsModule -->\n\nIssueGraphComponent->GraphsModule\n\n\n\n\n\nIssueGraphControlsComponent\n\nIssueGraphControlsComponent\n\nGraphsModule -->\n\nIssueGraphControlsComponent->GraphsModule\n\n\n\n\n\nIssueIconComponent\n\nIssueIconComponent\n\nGraphsModule -->\n\nIssueIconComponent->GraphsModule\n\n\n\n\n\nIssueItemComponent\n\nIssueItemComponent\n\nGraphsModule -->\n\nIssueItemComponent->GraphsModule\n\n\n\n\n\nIssueLabelComponent\n\nIssueLabelComponent\n\nGraphsModule -->\n\nIssueLabelComponent->GraphsModule\n\n\n\n\n\nIssueListComponent\n\nIssueListComponent\n\nGraphsModule -->\n\nIssueListComponent->GraphsModule\n\n\n\n\n\nIssueLocationComponent\n\nIssueLocationComponent\n\nGraphsModule -->\n\nIssueLocationComponent->GraphsModule\n\n\n\n\n\nIssueSidebarComponent\n\nIssueSidebarComponent\n\nGraphsModule -->\n\nIssueSidebarComponent->GraphsModule\n\n\n\n\n\nItemDirective\n\nItemDirective\n\nGraphsModule -->\n\nItemDirective->GraphsModule\n\n\n\n\n\nLabelSearchComponent\n\nLabelSearchComponent\n\nGraphsModule -->\n\nLabelSearchComponent->GraphsModule\n\n\n\n\n\nProjectHeaderComponent\n\nProjectHeaderComponent\n\nGraphsModule -->\n\nProjectHeaderComponent->GraphsModule\n\n\n\n\n\nProjectIssueListComponent\n\nProjectIssueListComponent\n\nGraphsModule -->\n\nProjectIssueListComponent->GraphsModule\n\n\n\n\n\nProjectMembersComponent\n\nProjectMembersComponent\n\nGraphsModule -->\n\nProjectMembersComponent->GraphsModule\n\n\n\n\n\nQueryBodyDirective\n\nQueryBodyDirective\n\nGraphsModule -->\n\nQueryBodyDirective->GraphsModule\n\n\n\n\n\nQueryButtonDirective\n\nQueryButtonDirective\n\nGraphsModule -->\n\nQueryButtonDirective->GraphsModule\n\n\n\n\n\nQueryComponent\n\nQueryComponent\n\nGraphsModule -->\n\nQueryComponent->GraphsModule\n\n\n\n\n\nSetEditorComponent\n\nSetEditorComponent\n\nGraphsModule -->\n\nSetEditorComponent->GraphsModule\n\n\n\n\n\nSetEditorDialogComponent\n\nSetEditorDialogComponent\n\nGraphsModule -->\n\nSetEditorDialogComponent->GraphsModule\n\n\n\n\n\nUserItemComponent\n\nUserItemComponent\n\nGraphsModule -->\n\nUserItemComponent->GraphsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    51 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    20 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    16 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    28 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        21 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EnumDictionary   (src/.../shared.ts)\n                        \n                        \n                            FilterElement   (src/.../label-search.component.ts)\n                        \n                        \n                            FilterLabel   (src/.../label-store.service.ts)\n                        \n                        \n                            GQLGraphComponent   (src/.../graph-data.ts)\n                        \n                        \n                            GQLInterface   (src/.../graph-data.ts)\n                        \n                        \n                            GQLIssue   (src/.../graph-data.ts)\n                        \n                        \n                            GraphFolder   (src/.../graph-data.ts)\n                        \n                        \n                            GraphLocation   (src/.../graph-data.ts)\n                        \n                        \n                            HydrateList   (src/.../query.ts)\n                        \n                        \n                            IssueListParams   (src/.../issues.service.ts)\n                        \n                        \n                            ItemFilterFunction   (src/.../timeline.component.ts)\n                        \n                        \n                            ItemOps   (src/.../set-editor-dialog.component.ts)\n                        \n                        \n                            ItemOps   (src/.../set-editor.component.ts)\n                        \n                        \n                            ListIdEnc   (src/.../id.ts)\n                        \n                        \n                            ListQueries   (src/.../load.ts)\n                        \n                        \n                            ListQueryInput   (src/.../load.ts)\n                        \n                        \n                            ListResult   (src/.../load.ts)\n                        \n                        \n                            LocalIssueData   (src/.../issue-sidebar.component.ts)\n                        \n                        \n                            LocationId   (src/.../graph-data.ts)\n                        \n                        \n                            MaybeLocalList   (src/.../issue-sidebar.component.ts)\n                        \n                        \n                            NodeIdEnc   (src/.../id.ts)\n                        \n                        \n                            NodeQueries   (src/.../load.ts)\n                        \n                        \n                            NodeQueryInput   (src/.../load.ts)\n                        \n                        \n                            NodeUpdatedCallbackFn   (src/.../node-details.component.ts)\n                        \n                        \n                            SelectedCategories   (src/.../shared.ts)\n                        \n                        \n                            TextDisplayEditCallbackFn   (src/.../text-display.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/graphs/shared.ts\n    \n    \n        \n            \n                \n                    \n                    EnumDictionary\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SelectedCategories\n                \n            \n            \n                \n                            EnumDictionary\n\n                \n            \n        \n    \n    src/app/graphs/label-search/label-search.component.ts\n    \n    \n        \n            \n                \n                    \n                    FilterElement\n                \n            \n            \n                \n                    The bar can contain elements standing for labels and elements for text fragments.\n\n                \n            \n            \n                \n                            TextFragment | FilterLabel\n\n                \n            \n        \n    \n    src/app/data/label/label-store.service.ts\n    \n    \n        \n            \n                \n                    \n                    FilterLabel\n                \n            \n            \n                \n                        Pick\n\n                \n            \n        \n    \n    src/app/data/issue-graph/graph-data.ts\n    \n    \n        \n            \n                \n                    \n                    GQLGraphComponent\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GQLInterface\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GQLIssue\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GraphFolder\n                \n            \n            \n                \n                            [LocationId, IssueCategory]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GraphLocation\n                \n            \n            \n                \n                        GraphInterface | GraphComponent\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LocationId\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/app/data-dgql/query.ts\n    \n    \n        \n            \n                \n                    \n                    HydrateList\n                \n            \n            \n                \n                    List hydration object (constructing this manually shouldn't be necessary as it mirrors the structure of GQL objects)\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/data-dgql/queries/issues.service.ts\n    \n    \n        \n            \n                \n                    \n                    IssueListParams\n                \n            \n            \n                \n                        QueryListParams\n\n                \n            \n        \n    \n    src/app/issue-detail/timeline/timeline.component.ts\n    \n    \n        \n            \n                \n                    \n                    ItemFilterFunction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/app/components/set-editor/set-editor-dialog.component.ts\n    \n    \n        \n            \n                \n                    \n                    ItemOps\n                \n            \n            \n                \n                    Types of item operations that may be made available.\n\n                \n            \n            \n                \n                        \"none\" | \"edit\" | \"create-edit\" | \"create-edit-delete\"\n\n                \n            \n        \n    \n    src/app/components/set-editor/set-editor.component.ts\n    \n    \n        \n            \n                \n                    \n                    ItemOps\n                \n            \n            \n                \n                        \"none\" | \"edit\" | \"create-edit\" | \"create-edit-delete\"\n\n                \n            \n        \n    \n    src/app/data-dgql/id.ts\n    \n    \n        \n            \n                \n                    \n                    ListIdEnc\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NodeIdEnc\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    src/app/data-dgql/load.ts\n    \n    \n        \n            \n                \n                    \n                    ListQueries\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ListQueryInput\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ListResult\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NodeQueries\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NodeQueryInput\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/issue-detail/issue-sidebar.component.ts\n    \n    \n        \n            \n                \n                    \n                    LocalIssueData\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MaybeLocalList\n                \n            \n            \n                \n                            ListId | T[]\n\n                \n            \n        \n    \n    src/app/node-details/node-details.component.ts\n    \n    \n        \n            \n                \n                    \n                    NodeUpdatedCallbackFn\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/app/text-display/text-display.component.ts\n    \n    \n        \n            \n                \n                    \n                    TextDisplayEditCallbackFn\n                \n            \n            \n                \n                    A callback function that is called once the user finishes editing the text.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/userMock.html":{"url":"interfaces/userMock.html","title":"interface - userMock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  userMock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/project-members/project-members.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            displayName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {ProjectStoreService} from '@app/data/project/project-store.service';\nimport {GetFullProjectQuery} from 'src/generated/graphql';\nimport {Observable} from 'rxjs';\nimport {FormControl} from '@angular/forms';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatSort, MatSortable} from '@angular/material/sort';\nimport {MatPaginator, MatPaginatorModule, PageEvent} from '@angular/material/paginator';\nimport {AddProjectMemberDialogComponent} from '@app/dialogs/add-project-member-dialog/add-project-member-dialog.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {RemoveProjectMemberComponentComponent} from '@app/dialogs/remove-project-member-component/remove-project-member-component.component';\n\n/**\n * This component is an example for the manage members view\n * All users are displayed in a paginated list. The list can be filtered.\n * The members are hardcoded\n * If the backend offers an interface to get all users the mockUsers list schould be replaced\n */\n@Component({\n  selector: 'app-project-members',\n  templateUrl: './project-members.component.html',\n  styleUrls: ['./project-members.component.scss']\n})\nexport class ProjectMembersComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatPaginatorModule) paginatorModule: MatPaginatorModule;\n  @ViewChild(MatSort) sort: MatSort;\n  public projectId: string;\n  public project$: Observable;\n  public project: GetFullProjectQuery;\n  validationFilter = new FormControl('');\n\n  columnsToDisplay = ['Name', 'Role', 'email'];\n  dataSource: MatTableDataSource;\n\n  //users\n  mockUsers: Array = [{id: '1', displayName: 'User1', email: 'User1.de'},\n    {id: '2', displayName: 'User2', email: 'User2.de'},\n    {id: '3', displayName: 'User3', email: 'User3.de'},\n    {id: '4', displayName: 'User4', email: 'User4.de'},\n    {id: '5', displayName: 'User5', email: 'User5.de'},\n    {id: '6', displayName: 'User6', email: 'User6.de'}];\n\n  // list of users who can be added to the project\n  //hardcoded\n  addableUsers: Array = [\n    {id: '7', displayName: 'AddedUser1', email: 'AddedUser1.de'},\n    {id: '8', displayName: 'AddedUser2', email: 'AddedUser2.de'},\n    {id: '9', displayName: 'AddedUser3', email: 'AddedUser3.de'},\n  ];\n\n\n  constructor(private dialog: MatDialog, private projectStore: ProjectStoreService, private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.projectId = this.route.snapshot.paramMap.get('id');\n    this.project$ = this.projectStore.getFullProject(this.projectId);\n    this.project$.subscribe(project => {\n      this.project = project;\n      // MOCK DATA for table\n      // FIXME Api change\n      // project.node.users.nodes.forEach(u => this.mockUsers.push(u));\n      this.dataSource = new MatTableDataSource(this.mockUsers);\n\n      // sort data in table\n      this.sort.sort(({id: 'Name', start: 'asc'}) as MatSortable);\n      this.dataSource.sort = this.sort;\n\n      //paginator\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n\n  // This method adds a user to the project members list without processing a task in the back-end\n  onAddClick() {\n    const addMemberDialogRef = this.dialog.open(AddProjectMemberDialogComponent,\n      {data: {addableMembers: this.addableUsers, projectId: this.projectId}});\n    addMemberDialogRef.afterClosed().subscribe(data => {\n      if (data) {\n        for (const user of data.usersToAdd) {\n          this.addableUsers.forEach(addableUser => {\n            if (addableUser.id == user) {\n              this.mockUsers.push(addableUser);\n            }\n          });\n        }\n        this.dataSource = new MatTableDataSource(this.mockUsers);\n\n      }\n    });\n\n  }\n\n  // This method deletes a user to the project members list without processing a task in the back-end\n  onDeleteClick() {\n    const deleteMemberDialogRef = this.dialog.open(RemoveProjectMemberComponentComponent,\n      {data: {mockMembers: this.mockUsers, projectId: this.projectId}});\n    deleteMemberDialogRef.afterClosed().subscribe(data => {\n      if (data) {\n        for (const user of data.usersToDelete) {\n          for (var i = 0; i (this.mockUsers);\n      }\n    });\n  }\n\n  //change pages\n  onPageChange(event: PageEvent) {\n  }\n\n  // on every key pressed in the filter-field this method is triggered and reduces the shown users in the list (table)\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  clickedOnRow(rowData) {\n    // there schould be the code when a user is selected\n    // TODO jump to the user information page\n  }\n\n}\n\n// defines the structure of a user\nexport interface userMock {\n  id: string;\n  displayName?: string;\n  username?: string;\n  email?: string;\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            antDesignIcons   (src/.../app.module.ts)\n                        \n                        \n                            basic   (src/.../graphql.module.ts)\n                        \n                        \n                            CACHE_FAST_DEBOUNCE_TIME_MS   (src/.../query.ts)\n                        \n                        \n                            CACHE_INTERACTIVE_DEBOUNCE_TIME_MS   (src/.../query.ts)\n                        \n                        \n                            CACHE_STALE_TIME_MS   (src/.../query.ts)\n                        \n                        \n                            COMPONENT_CONTEXT_MENU_DATA   (src/.../component-context-menu.component.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            CURRENT_USER_NODE   (src/.../id.ts)\n                        \n                        \n                            defaultOptions   (src/.../graphql.module.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            host   (src/.../environment.prod.ts)\n                        \n                        \n                            host   (src/.../environment.ts)\n                        \n                        \n                            icons   (src/.../app.module.ts)\n                        \n                        \n                            listAllIssues   (src/.../issue-filter.component.ts)\n                        \n                        \n                            listQueries   (src/.../load.ts)\n                        \n                        \n                            networkErrorToast   (src/.../graphql.module.ts)\n                        \n                        \n                            nodeQueries   (src/.../load.ts)\n                        \n                        \n                            PREDICATES   (src/.../issue-filter.component.ts)\n                        \n                        \n                            queryList   (src/.../load.ts)\n                        \n                        \n                            queryNode   (src/.../load.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            ROOT_NODE   (src/.../id.ts)\n                        \n                        \n                            slider   (src/.../route-animations.ts)\n                        \n                        \n                            toasterConfig   (src/.../app.module.ts)\n                        \n                        \n                            zeroPosition   (src/.../issue-graph-nodes.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        antDesignIcons\n                        \n                    \n                \n            \n                \n                    \n                        Default value : AllIcons as {\n  [key: string]: IconDefinition;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        icons\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IconDefinition[]\n\n                    \n                \n                \n                    \n                        Default value : Object.keys(antDesignIcons).map(key => antDesignIcons[key])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toasterConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial\n\n                    \n                \n                \n                    \n                        Default value : {\n  maxOpened: 4,\n  autoDismiss: true\n}\n                    \n                \n\n\n        \n    \n\n    src/app/graphql.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        basic\n                        \n                    \n                \n            \n                \n                    \n                        Default value : setContext((operation, context) => ({\n  headers: {\n    Accept: 'charset=utf-8'\n  }\n}))\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DefaultOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  query: {\n    fetchPolicy: 'no-cache',\n    errorPolicy: 'all',\n  }\n}\n                    \n                \n\n            \n                \n                    This modules purpose is to provide define functions returning configurations\nfor the automatic creation of ApolloClients for graphql communication with the backend.\nThe key functions are providePublicApollo and provideDefaultApollo. The apollo instance\nconstructed from providePublicApollo is only used for registering.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        networkErrorToast\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial\n\n                    \n                \n                \n                    \n                        Default value : {\n  timeOut: 5000,\n  closeButton: true,\n  positionClass: 'toast-top-center',\n  enableHtml: true\n}\n                    \n                \n\n            \n                \n                    Congiuration for network error toast on register page.\n\n                \n            \n\n        \n    \n\n    src/app/data-dgql/query.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CACHE_FAST_DEBOUNCE_TIME_MS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 200\n                    \n                \n\n            \n                \n                    How long DataQuery will wait to debounce requests until actually sending a request, in milliseconds.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CACHE_INTERACTIVE_DEBOUNCE_TIME_MS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 500\n                    \n                \n\n            \n                \n                    How long DataQuery will wait to debounce requests, if the undefined flag is set, in milliseconds.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CACHE_STALE_TIME_MS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5000\n                    \n                \n\n            \n                \n                    Number of milliseconds beyond which cached data will be considered stale, and will be reloaded if a new subscriber is added.\n\n                \n            \n\n        \n    \n\n    src/app/graphs/component-context-menu/component-context-menu.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        COMPONENT_CONTEXT_MENU_DATA\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('COMPONENT_CONTEXT_MENU_DATA')\n                    \n                \n\n\n        \n    \n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/app/data-dgql/id.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CURRENT_USER_NODE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { type: NodeType.User, id: 'self' }\n                    \n                \n\n            \n                \n                    The special ID of the current user node.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROOT_NODE\n                        \n                    \n                \n            \n                \n                    \n                        Type :     miscellaneous\n\n                    \n                \n                \n                    \n                        Default value : { type: NodeType.Root, id: '' }\n                    \n                \n\n            \n                \n                    The ID of the root node.\n\n                \n            \n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  apiUrl: `${host}/api`,\n  signUpUrl: `${host}/api/public`,\n  loginUrl: `${host}/login`,\n  publicClientName: 'publicClient'\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        host\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:8080'\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  apiUrl: `${host}/api`,\n  // url for public api endpoint offering signup\n  signUpUrl: `${host}/api/public`,\n  loginUrl: `${host}/login`,\n  publicClientName: 'publicClient'\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        host\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:8080'\n                    \n                \n\n\n        \n    \n\n    src/app/issue-list/issue-filter.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        listAllIssues\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (self: IssueFilterComponent) => ({\n  node: { type: NodeType.Project, id: self.projectId },\n  type: ListType.Issues\n})\n                    \n                \n\n            \n                \n                    Returns the ListId for listing all project issues.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PREDICATES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  isOpen: { type: 'bool', label: 'Is open' },\n  isDuplicate: { type: 'bool', label: 'Is duplicate' },\n  category: {\n    type: 'enum',\n    label: 'Category',\n    options: [\n      [IssueCategory.Unclassified, 'Unclassified'],\n      [IssueCategory.Bug, 'Bug'],\n      [IssueCategory.FeatureRequest, 'Feature Request']\n    ]\n  },\n  labels: {\n    type: 'ids',\n    label: 'Labels',\n    dataType: 'label',\n    scoreKeys: ['name'],\n    listAll: (self: IssueFilterComponent) => self.allLabelsList,\n    makeFilter: (query: string) => ({ name: query }),\n    ifEmpty: 'No labels selected',\n  },\n  linksIssues: { type: 'bool', label: 'Has linked issues' },\n  linkedIssues: {\n    type: 'ids',\n    label: 'Linked issues',\n    dataType: 'issue',\n    scoreKeys: ['title'],\n    listAll: listAllIssues,\n    makeFilter: (query: string) => ({ title: query }),\n    ifEmpty: 'No issues selected',\n  },\n  isLinkedByIssues: { type: 'bool', label: 'Is linked by issues' },\n  linkedByIssues: {\n    type: 'ids',\n    label: 'Linked by issues',\n    dataType: 'issue',\n    scoreKeys: ['title'],\n    listAll: listAllIssues,\n    makeFilter: (query: string) => ({ title: query }),\n    ifEmpty: 'No issues selected',\n  },\n  participants: {\n    type: 'ids',\n    label: 'Participants',\n    dataType: 'user',\n    scoreKeys: ['username', 'displayName'],\n    listAll: () => ({ node: ROOT_NODE, type: ListType.SearchUsers }),\n    makeFilter: (query: string) => ({ username: query }),\n    ifEmpty: 'No users selected',\n  },\n  locations: {\n    type: 'ids',\n    label: 'Locations',\n    dataType: 'location',\n    scoreKeys: ['name'],\n    listAll: (self: IssueFilterComponent) => ({\n      staticSources: [\n        { node: { type: NodeType.Project, id: self.projectId }, type: ListType.Components },\n        { node: { type: NodeType.Project, id: self.projectId }, type: ListType.ComponentInterfaces },\n      ]\n    }),\n    makeFilter: (query: string) => ({ title: query }),\n    ifEmpty: 'No locations selected',\n  },\n}\n                    \n                \n\n            \n                \n                    List of all possible issue filter predicates.\nKeyed by their name, each predicate has a type, label,\nand possibly additional options depending on their type.\n\n                \n            \n\n        \n    \n\n    src/app/data-dgql/load.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        listQueries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ListQueries\n\n                    \n                \n                \n                    \n                        Default value : {\n  [ListType.Projects]: {\n    [NodeType.Root]: (i, list, params) => i.q.projects.listProjects(listParams(params)).then(data => ({\n      totalCount: data.projects.totalCount,\n      pageInfo: data.projects.pageInfo,\n      items: i.c.insertNodes(data.projects.nodes),\n    })),\n  },\n  [ListType.Components]: {\n    [NodeType.Project]: (i, list, params) => i.q.components.listProjectComponents(list.node.id, listParams(params)).then(data => ({\n      totalCount: data.node.components.totalCount,\n      pageInfo: data.node.components.pageInfo,\n      items: i.c.insertNodes(data.node.components.nodes),\n    })),\n    [NodeType.Issue]: (i, list, params) => i.q.issues.listIssueComponents(list.node.id, listParams(params)).then(data => ({\n      totalCount: data.node.components.totalCount,\n      pageInfo: data.node.components.pageInfo,\n      items: i.c.insertNodes(data.node.components.nodes),\n    })),\n    [NodeType.Label]: (i, list, params) => i.q.issues.listLabelComponents(list.node.id, listParams(params)).then(data => ({\n      totalCount: data.node.components.totalCount,\n      pageInfo: data.node.components.pageInfo,\n      items: i.c.insertNodes(data.node.components.nodes),\n    }))\n  },\n  [ListType.ComponentInterfaces]: {\n    [NodeType.Project]: (i, list, params) => i.q.components.listProjectInterfaces(list.node.id, listParams(params)).then(data => ({\n      totalCount: data.node.interfaces.totalCount,\n      pageInfo: data.node.interfaces.pageInfo,\n      items: i.c.insertNodes(data.node.interfaces.nodes),\n    })),\n  },\n  [ListType.Issues]: {\n    [NodeType.Project]: (i, list, params) => i.q.issues.listProjectIssues(list.node.id, listParams(params)).then(data => ({\n      totalCount: data.node.issues.totalCount,\n      pageInfo: data.node.issues.pageInfo,\n      items: i.c.insertNodes(data.node.issues.nodes),\n    })),\n    [NodeType.Component]: (i, list, params) => i.q.issues.listComponentIssues(list.node.id, listParams(params)).then(data => ({\n      totalCount: data.node.issues.totalCount,\n      pageInfo: data.node.issues.pageInfo,\n      items: i.c.insertNodes(data.node.issues.nodes),\n    })),\n  },\n  [ListType.IssuesOnLocation]: {\n    [NodeType.Component]: (i, list, params) => i.q.issues.listComponentIssuesOnLocation(list.node.id, listParams(params))\n      .then(data => ({\n        totalCount: data.node.issuesOnLocation.totalCount,\n        pageInfo: data.node.issuesOnLocation.pageInfo,\n        items: i.c.insertNodes(data.node.issuesOnLocation.nodes),\n      })),\n    [NodeType.ComponentInterface]: (i, list, params) => i.q.issues.listComponentInterfaceIssuesOnLocation(list.node.id, listParams(params))\n      .then(data => ({\n        totalCount: data.node.issuesOnLocation.totalCount,\n        pageInfo: data.node.issuesOnLocation.pageInfo,\n        items: i.c.insertNodes(data.node.issuesOnLocation.nodes),\n      })),\n  },\n  [ListType.TimelineItems]: {\n    [NodeType.Issue]: (i, list, params) => i.q.issues.listIssueTimelineItems(list.node.id, listParams(params))\n      .then(data => ({\n        totalCount: data.node.timeline.totalCount,\n        pageInfo: data.node.timeline.pageInfo,\n        items: i.c.insertNodes(data.node.timeline.nodes),\n      })),\n  },\n  [ListType.IssueLocations]: {\n    [NodeType.Issue]: (i, list, params) => i.q.issues.listIssueLocations(list.node.id, listParams(params))\n      .then(data => ({\n        totalCount: data.node.locations.totalCount,\n        pageInfo: data.node.locations.pageInfo,\n        items: i.c.insertNodes(data.node.locations.nodes),\n      }))\n  },\n  [ListType.Labels]: {\n    [NodeType.Project]: (i, list, params) => i.q.issues.listProjectLabels(list.node.id, listParams(params))\n      .then(data => ({\n        totalCount: data.node.labels.totalCount,\n        pageInfo: data.node.labels.pageInfo,\n        items: i.c.insertNodes(data.node.labels.nodes)\n      })),\n    [NodeType.Component]: (i, list, params) => i.q.issues.listComponentLabels(list.node.id, listParams(params))\n      .then(data => ({\n        totalCount: data.node.labels.totalCount,\n        pageInfo: data.node.labels.pageInfo,\n        items: i.c.insertNodes(data.node.labels.nodes)\n      })),\n    [NodeType.Issue]: (i, list, params) => i.q.issues.listIssueLabels(list.node.id, listParams(params))\n      .then(data => ({\n        totalCount: data.node.labels.totalCount,\n        pageInfo: data.node.labels.pageInfo,\n        items: i.c.insertNodes(data.node.labels.nodes)\n      }))\n  },\n  [ListType.Assignees]: {\n    [NodeType.Issue]: (i, list, params) => i.q.issues.listIssueAssignees(list.node.id, listParams(params))\n      .then(data => ({\n        totalCount: data.node.assignees.totalCount,\n        pageInfo: data.node.assignees.pageInfo,\n        items: i.c.insertNodes(data.node.assignees.nodes)\n      }))\n  },\n  [ListType.LinkedIssues]: {\n    [NodeType.Issue]: (i, list, params) => i.q.issues.listIssueLinksToIssues(list.node.id, listParams(params))\n      .then(data => ({\n        totalCount: data.node.linksToIssues.totalCount,\n        pageInfo: data.node.linksToIssues.pageInfo,\n        items: i.c.insertNodes(data.node.linksToIssues.nodes)\n      }))\n  },\n  [ListType.LinkedByIssues]: {\n    [NodeType.Issue]: (i, list, params) => i.q.issues.listIssueLinkedByIssues(list.node.id, listParams(params))\n      .then(data => ({\n        totalCount: data.node.linkedByIssues.totalCount,\n        pageInfo: data.node.linkedByIssues.pageInfo,\n        items: i.c.insertNodes(data.node.linkedByIssues.nodes)\n      }))\n  },\n  [ListType.SearchUsers]: {\n    [NodeType.Root]: (i, list, params) => i.q.users.searchUsers(params.filter as (string | { username: string }))\n      .then(data => ({\n        totalCount: data.length,\n        pageInfo: {\n          startCursor: data[0]?.id || null,\n          endCursor: data[data.length - 1]?.id || null,\n          hasNextPage: false,\n          hasPreviousPage: false,\n        },\n        items: i.c.insertNodes(data)\n      }))\n  }\n}\n                    \n                \n\n            \n                \n                    Available list queries.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nodeQueries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NodeQueries\n\n                    \n                \n                \n                    \n                        Default value : {\n  [NodeType.Project]: (i, id) => i.q.projects.getProject(id).then(data => data.node),\n  [NodeType.Component]: (i, id) => i.q.components.getComponent(id).then(data => data.node),\n  [NodeType.ComponentInterface]: (i, id) => i.q.components.getInterface(id).then(data => data.node),\n  [NodeType.Issue]: (i, id) => i.q.issues.getIssueHeader(id).then(data => data.node),\n  [NodeType.User]: (i, id) => id === CURRENT_USER_NODE.id\n    ? i.q.users.currentUser().then(data => data.currentUser)\n    : Promise.reject(new Error('not implemented')),\n  [NodeType.Label]: (i, id) => i.q.issues.getLabel(id).then(data => data.node)\n}\n                    \n                \n\n            \n                \n                    Types of nodes that can be loaded directly.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryList\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (q: QueriesService, c: NodeCache) => async (\n  listId: ListId,\n  params: ListParams\n): Promise> => {\n  const { node, type } = listId;\n\n  if (!listQueries[type] || !listQueries[type][node.type]) {\n    throw new Error(`${NodeType[node.type]} has no list ${ListType[type]}`);\n  }\n\n  const i = { q, c };\n  return (await listQueries[type][node.type](i, { node, type }, params)) as ListResult;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryNode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (q: QueriesService) => async (nodeId: NodeId): Promise => {\n  const { type, id } = nodeId;\n\n  if (!nodeQueries[type]) {\n    throw new Error(`${NodeType[type]} cannot be loaded directly`);\n  }\n\n  const i = { q };\n  return (await nodeQueries[type](i, id)) as T;\n}\n                    \n                \n\n            \n                \n                    Loads a node.\n\n                \n            \n\n        \n    \n\n    src/app/route-animations.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        slider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('routeAnimations', [\n    transition('* => isRight', slideTo('right')),\n  ])\n                    \n                \n\n            \n                \n                    Describes an animation of sliding to to the right, used for the entry of the ComponentDetails component\n\n                \n            \n\n        \n    \n\n    src/app/graphs/issue-graph/issue-graph-nodes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        zeroPosition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {x: 0, y: 0}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
