var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AccessTokenDialogComponent.html",[0,0.085,1,0.915]],["body/components/AccessTokenDialogComponent.html",[0,0.145,1,1.566,2,0.85,3,0.08,4,0.071,5,0.753,6,1.058,7,1.036,8,0.993,9,0.071,10,7.352,11,1.868,12,6.259,13,1.891,14,1.263,15,1.962,16,0.913,17,1.384,18,1.348,19,1.812,20,1.424,21,0.932,22,3.058,23,0.932,24,2.698,25,0.088,26,0.531,27,1.417,28,3.368,29,4.056,30,0.85,31,7.708,32,6.826,33,0.673,34,2.644,35,3.334,36,3.368,37,0.694,38,6.346,39,0.517,40,0.008,41,0.535,42,0.149,43,0.404,44,2.997,45,0.717,46,1.057,47,3.534,48,4.151,49,0.335,50,0.875,51,0.736,52,6.346,53,0.177,54,0.324,55,1.425,56,1.289,57,1.633,58,3.147,59,2.107,60,0.097,61,0.012,62,1.632,63,0.689,64,1.279,65,4.151,66,2.304,67,4.151,68,4.83,69,2.749,70,2.46,71,3.798,72,1.891,73,5.619,74,7.708,75,6.346,76,6.826,77,5.619,78,3.449,79,6.346,80,4.498,81,7.647,82,4.498,83,3.879,84,4.783,85,2.773,86,2.313,87,4.783,88,3.221,89,2.46,90,2.749,91,4.688,92,1.843,93,2.262,94,3.798,95,1.036,96,1.236,97,1.21,98,0.786,99,1.668,100,1.036,101,1.955,102,0.933,103,0.821,104,1.077,105,1.289,106,0.953,107,1.036,108,0.953,109,0.933,110,1.036,111,0.953,112,1.036,113,0.894,114,0.913,115,0.957,116,0.933,117,0.894,118,1.019,119,1.59,120,0.913,121,0.071,122,0.933,123,0.987,124,0.953,125,0.953,126,0.857,127,1.036,128,0.913,129,1.036,130,0.953,131,1.036,132,0.953,133,1.036,134,0.933,135,1.036,136,0.933,137,1.036,138,0.658,139,1.036,140,0.933,141,0.453,142,1.036,143,0.953,144,1.036,145,0.953,146,1.59,147,0.953,148,1.036,149,0.953,150,1.59,151,0.953,152,1.036,153,0.973,154,1.036,155,0.913,156,1.036,157,0.953,158,1.036,159,0.993,160,0.875,161,1.036,162,0.953,163,1.345,164,1.402,165,0.953,166,1.036,167,0.913,168,0.53,169,1.036,170,0.933,171,0.953,172,1.036,173,0.953,174,1.036,175,0.933,176,0.933,177,0.913,178,1.036,179,0.933,180,1.036,181,0.875,182,0.736,183,0.913,184,1.036,185,0.913,186,1.21,187,0.933,188,0.953,189,0.613,190,0.894,191,0.736,192,0.953,193,0.973,194,1.036,195,0.953,196,0.875,197,1.036,198,0.953,199,1.036,200,0.894,201,0.953,202,0.953,203,0.875,204,1.036,205,0.953,206,0.673,207,0.804,208,0.894,209,0.933,210,1.036,211,0.913,212,1.036,213,0.913,214,1.036,215,0.894,216,1.036,217,0.894,218,1.036,219,0.894,220,0.973,221,1.036,222,0.005,223,0.005]],["title/components/AddProjectMemberDialogComponent.html",[0,0.085,102,0.896]],["body/components/AddProjectMemberDialogComponent.html",[0,0.154,1,0.901,2,0.818,3,0.075,4,0.067,5,0.712,6,1,7,0.979,8,0.939,9,0.067,11,0.882,13,1.788,14,1.215,15,1.906,16,0.864,17,1.381,18,1.345,19,0.882,20,1.263,21,0.897,22,2.971,23,0.897,24,2.597,25,0.084,26,0.511,27,1.296,28,3.29,30,0.818,33,0.636,34,2.499,35,3.117,37,0.745,39,0.489,40,0.008,41,0.526,42,0.145,43,0.382,44,2.834,45,0.69,46,1.026,50,1.406,51,1.183,53,0.172,54,0.306,55,1.347,56,0.901,57,1.294,60,0.092,61,0.011,62,1.543,64,1.209,70,2.326,85,3.053,86,1.947,90,3.581,92,1.742,93,1.58,95,0.979,96,1.19,97,1.165,98,0.744,99,1.629,100,0.979,101,1.934,102,1.498,103,1.591,104,1.188,105,1.926,106,0.901,107,0.979,108,0.901,109,0.882,110,0.979,111,0.901,112,0.979,113,0.845,114,0.864,115,0.939,116,0.882,117,0.845,118,0.981,119,1.544,120,0.864,121,0.067,122,0.882,123,0.98,124,0.901,125,0.901,126,0.81,127,0.979,128,0.864,129,0.979,130,0.901,131,0.979,132,0.901,133,0.979,134,0.882,135,0.979,136,0.882,137,0.979,138,0.622,139,0.979,140,0.882,141,0.428,142,0.979,143,0.901,144,0.979,145,0.901,146,1.544,147,0.901,148,0.979,149,0.901,150,1.544,151,0.901,152,0.979,153,0.92,154,0.979,155,0.864,156,0.979,157,0.901,158,0.979,159,0.939,160,0.828,161,0.979,162,0.901,163,1.294,164,1.35,165,0.901,166,0.979,167,0.864,168,0.501,169,0.979,170,0.882,171,0.901,172,0.979,173,0.901,174,0.979,175,0.882,176,0.882,177,0.864,178,0.979,179,0.882,180,0.979,181,0.828,182,0.696,183,0.864,184,0.979,185,0.864,186,1.165,187,0.882,188,0.901,189,0.59,190,0.845,191,0.696,192,0.901,193,0.92,194,0.979,195,0.901,196,0.828,197,0.979,198,0.901,199,0.979,200,0.845,201,0.901,202,0.901,203,0.828,204,0.979,205,0.901,206,0.636,207,0.76,208,0.845,209,0.882,210,0.979,211,0.864,212,0.979,213,0.864,214,0.979,215,0.845,216,0.979,217,0.845,218,0.979,219,0.845,220,0.92,221,0.979,222,0.005,223,0.005,224,7.751,225,6.204,226,0.393,227,2.669,228,4.093,229,5.408,230,6.107,231,2.401,232,4.329,233,4.604,234,1.34,235,2.747,236,6.187,237,6.187,238,6.987,239,4.246,240,5.676,241,6.107,242,3.591,243,1.937,244,2.05,245,4.948,246,1.322,247,3.925,248,0.895,249,3.358,250,3.701,251,3.591,252,4.432,253,1.788,254,2.05,255,1.658,256,1.992,257,4.432,258,4.432,259,2.597,260,0.527,261,4.432,262,3.925,263,3.925,264,4.948,265,4.948,266,5.408,267,1.618,268,1.618,269,4.948,270,2.834,271,3.341,272,3.925,273,3.925,274,2.05,275,2.834,276,1.885,277,2.341,278,3.142,279,3.142]],["title/components/AppComponent.html",[0,0.085,106,0.915]],["body/components/AppComponent.html",[0,0.148,1,0.999,2,0.878,3,0.084,4,0.075,5,0.789,6,1.109,7,1.086,8,1.042,9,0.075,11,0.978,16,0.958,17,1.386,18,1.351,19,0.978,20,0.825,21,0.962,23,0.962,25,0.093,26,0.548,33,0.706,37,0.565,39,0.542,40,0.008,41,0.543,42,0.17,43,0.424,49,0.351,50,0.918,51,1.234,53,0.181,54,0.34,56,0.999,57,1.388,60,0.102,61,0.012,63,0.722,95,1.086,96,1.276,97,1.25,98,0.825,99,1.7,100,1.086,101,1.973,102,0.978,103,1.148,104,1.089,105,1.331,106,1.597,107,1.086,108,0.999,109,0.978,110,1.086,111,0.999,112,1.086,113,0.938,114,0.958,115,0.973,116,0.978,117,0.938,118,1.052,119,1.628,120,0.958,121,0.075,122,0.978,123,0.999,124,0.999,125,0.999,126,0.899,127,1.086,128,0.958,129,1.086,130,0.999,131,1.086,132,0.999,133,1.086,134,0.978,135,1.086,136,0.978,137,1.086,138,0.69,139,1.086,140,0.978,141,0.475,142,1.086,143,0.999,144,1.086,145,0.999,146,1.628,147,0.999,148,1.086,149,0.999,150,1.628,151,0.999,152,1.086,153,1.02,154,1.086,155,0.958,156,1.086,157,0.999,158,1.086,159,1.042,160,0.918,161,1.086,162,0.999,163,1.388,164,1.448,165,0.999,166,1.086,167,0.958,168,0.556,169,1.086,170,0.978,171,0.999,172,1.086,173,0.999,174,1.086,175,0.978,176,0.978,177,0.958,178,1.086,179,0.978,180,1.086,181,0.918,182,0.772,183,0.958,184,1.086,185,0.958,186,1.25,187,0.978,188,0.999,189,0.632,190,0.938,191,0.772,192,0.999,193,1.02,194,1.086,195,0.999,196,0.918,197,1.086,198,0.999,199,1.086,200,0.938,201,0.999,202,0.999,203,0.918,204,1.086,205,0.999,206,0.706,207,0.843,208,0.938,209,0.978,210,1.086,211,0.958,212,1.086,213,0.958,214,1.086,215,0.938,216,1.086,217,0.938,218,1.086,219,0.938,220,1.02,221,1.086,222,0.006,223,0.006,246,1.064,260,1.037,280,4.353,281,2.035,282,7.368,283,6.551,284,2.341,285,4.916,286,8.418,287,8.593,288,6.551,289,5.307,290,3.983,291,3.706,292,3.485,293,0.938,294,4.916,295,4.938,296,2.417,297,4.916,298,4.938,299,3.706,300,4.916,301,3.22,302,4.916,303,4.916,304,4.916,305,4.916,306,4.916,307,3.706,308,3.983,309,5.969,310,3.409,311,2.672,312,2.417,313,3.706,314,7.368,315,0.789,316,4.608,317,2.336,318,2.417,319,4.916,320,4.916,321,4.916,322,4.398,323,3.983,324,6.551,325,5.801,326,4.916,327,4.916,328,4.916]],["title/modules/AppModule.html",[329,3.024,330,3.395]],["body/modules/AppModule.html",[0,0.112,1,1.638,3,0.072,4,0.065,9,0.065,11,1.182,12,3.21,18,0.598,40,0.008,49,0.304,53,0.237,54,0.294,55,1.294,56,1.638,57,1.259,58,2.859,59,3.853,60,0.088,61,0.011,104,1.006,105,1.207,106,1.799,111,1.638,113,1.538,114,1.571,116,1.604,117,0.812,118,0.954,120,1.571,121,0.09,122,1.604,123,0.866,124,1.638,128,1.571,132,1.638,134,1.604,157,1.638,160,1.506,162,1.638,163,0.903,165,1.638,167,1.571,170,1.604,171,1.638,176,1.604,179,1.604,183,1.571,185,1.571,187,1.604,191,0.669,192,1.638,193,0.884,195,1.638,198,1.638,200,1.538,202,1.638,203,0.795,215,1.538,217,1.538,219,1.538,222,0.005,223,0.005,255,1.593,260,0.813,277,1.633,290,3.45,291,4.478,292,3.019,301,2.094,307,4.478,315,0.684,318,2.094,330,7.276,331,2.603,332,4.211,333,3.771,334,3.771,335,3.771,336,3.771,337,5.715,338,5.413,339,5.413,340,4.478,341,3.019,342,3.45,343,4.813,344,4.478,345,5.941,346,5.26,347,6.058,348,5.26,349,4.478,350,4.259,351,4.259,352,5.26,353,3.771,354,5.941,355,3.019,356,5.26,357,3.771,358,5.26,359,4.211,360,5.26,361,3.771,362,5.26,363,5.26,364,3.771,365,5.26,366,3.771,367,3.988,368,5.26,369,5.26,370,3.771,371,1.045,372,3.21,373,3.45,374,3.21,375,3.771,376,3.45,377,4.259,378,3.45,379,4.259,380,4.259,381,5.26,382,3.019,383,3.483,384,3.771,385,4.259,386,5.26,387,5.26,388,5.941,389,3.499,390,6.058,391,4.259,392,5.941,393,5.941,394,4.259,395,5.941,396,3.771,397,5.26,398,5.941,399,5.941,400,4.259,401,6.058,402,2.603,403,5.26,404,4.259,405,3.45,406,4.259,407,4.259,408,3.771,409,3.771,410,3.771,411,2.235,412,3.827,413,5.26,414,3.771,415,5.26,416,3.771,417,2.497,418,5.26,419,3.771,420,5.941,421,4.259,422,4.259,423,3.771,424,5.247,425,3.21,426,5.941,427,2.497,428,6.058,429,5.26,430,4.813,431,2.315,432,5.26,433,2.723,434,3.45,435,5.941,436,3.45,437,3.45,438,3.019,439,3.45,440,5.941,441,3.21,442,3.771,443,3.229,444,2.723,445,3.771,446,3.798,447,2.402,448,2.859,449,4.259,450,3.45,451,5.941,452,3.45,453,3.771,454,4.259,455,3.45,456,4.259,457,3.019,458,4.259,459,2.748,460,3.21,461,3.771,462,4.259,463,3.21,464,4.259,465,5.26,466,3.718,467,3.771,468,3.45,469,4.813,470,3.771,471,4.259,472,3.21,473,4.259,474,2.859,475,4.259,476,3.45,477,3.771,478,3.771,479,3.771,480,4.259,481,3.45,482,4.259,483,4.259,484,3.45,485,2.723,486,3.771,487,2.859,488,3.771,489,4.259,490,4.259,491,4.259,492,3.45,493,4.211,494,5.26]],["title/modules/AppRoutingModule.html",[329,3.024,337,3.192]],["body/modules/AppRoutingModule.html",[0,0.177,3,0.1,4,0.089,9,0.089,40,0.008,53,0.229,54,0.406,60,0.122,61,0.015,94,7.336,104,1.049,123,0.903,128,1.432,134,1.672,140,1.462,141,0.774,160,1.372,170,1.672,175,1.462,176,1.462,177,1.432,179,1.462,183,1.432,222,0.006,223,0.006,260,0.698,331,3.589,337,5.208,344,4.426,349,5.539,371,1.44,372,4.426,373,5.952,374,4.426,375,5.199,383,3.442,384,5.199,408,5.199,409,5.199,410,5.199,446,3.753,459,3.399,460,4.426,461,5.199,495,5.871,496,5.871,497,6.045,498,7.348,499,2.143,500,5.871,501,4.426,502,5.199,503,5.208,504,5.871,505,4.426,506,4.162,507,5.199,508,9.512,509,5.199,510,8.828,511,7.348,512,3.399,513,9.056,514,4.756,515,1.824,516,3.442,517,4.162,518,5.871,519,7.348,520,5.871,521,3.942,522,4.162,523,3.311,524,4.756,525,5.199,526,5.871,527,4.756]],["title/interfaces/AppState.html",[121,0.068,528,3.395]],["body/interfaces/AppState.html",[3,0.102,4,0.091,8,1.269,9,0.091,25,0.113,26,0.622,40,0.008,41,0.386,42,0.124,43,0.641,45,0.677,49,0.428,53,0.218,54,0.414,60,0.154,61,0.015,63,1.093,89,3.144,104,1.163,121,0.091,189,0.578,222,0.006,223,0.006,231,2.355,246,1.296,248,0.884,260,0.962,281,1.861,293,1.143,315,0.962,317,2.212,499,2.187,512,2.771,514,4.853,528,6.101,529,1.634,530,4.853,531,6.858,532,1.788,533,7.496,534,5.305,535,3.912,536,4.246,537,1.533,538,2.925,539,4.022,540,2.48,541,1.705,542,4.564,543,4.853,544,2.692,545,2.692,546,5.305,547,2.473,548,0.941,549,2.852,550,4.022,551,5.305,552,4.822,553,2.771,554,5.305,555,2.618,556,3.144,557,3.744,558,4.516,559,6.858,560,5.305,561,2.771,562,3.83,563,3.378,564,5.305,565,5.305,566,4.022,567,3.256,568,4.516,569,2.692,570,5.305,571,4.853,572,2.547,573,3.256,574,3.378,575,1.986,576,3.662,577,5.305,578,5.609,579,4.516,580,5.305,581,6.589,582,6.589,583,4.196,584,6.589,585,6.589,586,5.305,587,5.305,588,5.305,589,6.589,590,6.589,591,5.305,592,5.305,593,5.305,594,4.548,595,1.634,596,4.853,597,5.305,598,4.853,599,3.256,600,5.305,601,5.305,602,1.409,603,5.305,604,6.028,605,5.305,606,5.305,607,5.305,608,0.699,609,5.305,610,5.305,611,2.416]],["title/guards/AuthGuard.html",[503,3.192,612,3.395]],["body/guards/AuthGuard.html",[3,0.104,4,0.093,9,0.093,14,1.216,25,0.115,30,1.009,33,1.081,37,0.649,39,0.83,40,0.008,41,0.486,42,0.156,43,0.649,45,0.851,53,0.201,54,0.422,60,0.127,61,0.016,63,1.106,206,1.31,222,0.007,223,0.007,226,0.668,246,1.322,260,0.726,281,1.898,315,1.369,402,4.604,499,2.23,503,6.042,509,8.08,521,6.065,524,6.615,532,1.81,535,4.101,552,3.321,555,2.67,557,4.124,575,1.848,578,5.677,579,5.677,598,6.101,599,4.094,602,1.437,608,0.8,612,5.677,613,6.11,614,5.41,615,4.247,616,5.677,617,4.247,618,6.72,619,8.524,620,7.532,621,5.677,622,2.622,623,4.815,624,8.524,625,4.331,626,4.668,627,6.11,628,7.532,629,8.524,630,8.524,631,6.11,632,7.532,633,7.532,634,7.532,635,3.385,636,7.532,637,2.503,638,6.11,639,5.339,640,6.11,641,2.402,642,6.11,643,6.11,644,5.41,645,6.11]],["title/injectables/AuthenticationService.html",[532,1.082,626,2.286]],["body/injectables/AuthenticationService.html",[3,0.091,4,0.081,9,0.081,11,1.674,25,0.101,26,0.58,27,1.334,30,0.929,33,0.769,37,0.774,39,0.847,40,0.008,41,0.595,42,0.179,43,0.662,45,0.951,46,1.129,49,0.642,50,1,51,0.841,53,0.212,54,0.37,60,0.111,61,0.014,63,1.193,121,0.081,160,1.517,186,1.322,189,0.669,206,1.366,222,0.006,223,0.006,226,0.615,233,6.124,248,0.636,260,0.824,281,1.664,293,1.022,317,2.06,382,3.796,459,2.477,499,1.955,521,5.969,532,1.287,535,3.943,537,1.37,540,2.217,547,2.916,548,1.423,549,2.657,575,1.7,608,0.763,615,3.908,618,5.791,626,3.518,639,5.964,641,2.105,646,2.217,647,4.339,648,5.224,649,7.451,650,5.614,651,6.137,652,4.966,653,7.768,654,4.032,655,6.804,656,7.194,657,6.582,658,6.93,659,5.224,660,6.804,661,5.355,662,7.194,663,6.93,664,6.137,665,5.355,666,6.137,667,5.964,668,5.355,669,6.137,670,3.767,671,5.144,672,5.38,673,6.137,674,5.614,675,3.908,676,6.124,677,4.333,678,4.236,679,5.355,680,4.653,681,6.137,682,6.137,683,5.355,684,4.505,685,5.355,686,5.355,687,5.355,688,5.355,689,3.596,690,4.037,691,1.664,692,3.596,693,4.742,694,4.742,695,4.339,696,4.742,697,4.742,698,4.742,699,4.742,700,4.742,701,4.742,702,4.742,703,4.037,704,4.742,705,2.217,706,4.339,707,4.742,708,4.742,709,4.742,710,4.742,711,4.742,712,4.742,713,4.742,714,4.742,715,4.742,716,4.742,717,4.339,718,4.742]],["title/classes/CCIMSValidators.html",[61,0.011,719,2.286]],["body/classes/CCIMSValidators.html",[3,0.104,4,0.093,9,0.093,25,0.116,26,0.632,37,0.736,40,0.008,41,0.576,50,1.595,51,1.341,53,0.151,60,0.127,61,0.021,72,2.477,77,5.438,196,1.73,222,0.007,223,0.007,226,0.545,227,3.302,233,5.695,254,3.786,255,2.297,267,2.758,318,3.019,552,4.448,637,2.838,654,4.907,719,3.835,720,2.242,721,5.438,722,7.556,723,6.691,724,6.437,725,2.826,726,1.741,727,4.619,728,3.975,729,8.184,730,8.184,731,7.764,732,8.184,733,8.539,734,6.141,735,9.133,736,6.053,737,7.904,738,7.556,739,6.121,740,7.556,741,6.141,742,5.695,743,7.556,744,6.121,745,4.619,746,7.556,747,5.695,748,7.556,749,6.141,750,6.141,751,6.437,752,4.107,753,1.787,754,5.438,755,6.141,756,6.141,757,4.353,758,6.141]],["title/components/CacheNodeComponent.html",[0,0.085,108,0.915]],["body/components/CacheNodeComponent.html",[0,0.158,1,0.979,2,0.866,3,0.082,4,0.073,5,1.038,7,1.064,8,1.021,9,0.073,11,0.958,14,1.286,15,1.989,16,0.938,17,1.386,18,1.348,19,0.958,20,0.808,25,0.091,26,0.541,33,0.691,37,0.721,39,0.531,40,0.008,41,0.54,42,0.169,43,0.415,50,0.899,51,0.756,53,0.206,54,0.333,56,0.979,57,1.369,60,0.1,61,0.012,64,1.313,95,1.064,96,1.259,97,1.233,98,0.808,99,1.686,100,1.064,101,1.965,102,0.958,103,0.844,104,1.084,105,1.313,106,0.979,107,1.064,108,1.584,109,1.617,110,1.064,111,0.979,112,1.064,113,0.919,114,0.938,115,0.966,116,0.958,117,0.919,118,1.038,119,1.611,120,0.938,121,0.073,122,0.958,123,0.99,124,0.979,125,0.979,126,0.88,127,1.064,128,0.938,129,1.064,130,0.979,131,1.064,132,0.979,133,1.064,134,0.958,135,1.064,136,0.958,137,1.064,138,0.676,139,1.064,140,0.958,141,0.465,142,1.064,143,0.979,144,1.064,145,0.979,146,1.611,147,0.979,148,1.064,149,0.979,150,1.611,151,0.979,152,1.064,153,0.999,154,1.064,155,0.938,156,1.064,157,0.979,158,1.064,159,1.021,160,0.899,161,1.064,162,0.979,163,1.369,164,1.428,165,0.979,166,1.064,167,0.938,168,1.038,169,1.064,170,0.958,171,0.979,172,1.064,173,0.979,174,1.064,175,0.958,176,0.958,177,0.938,178,1.064,179,0.958,180,1.064,181,0.899,182,0.756,183,0.938,184,1.064,185,0.938,186,1.233,187,0.958,188,0.979,189,0.624,190,0.919,191,0.756,192,0.979,193,0.999,194,1.064,195,0.979,196,0.899,197,1.064,198,0.979,199,1.064,200,0.919,201,0.979,202,0.979,203,0.899,204,1.064,205,0.979,206,0.691,207,0.826,208,0.919,209,1.286,210,1.064,211,0.938,212,1.064,213,0.938,214,1.064,215,0.919,216,1.064,217,0.919,218,1.064,219,0.919,220,0.999,221,1.064,222,0.006,223,0.006,226,0.427,234,1.373,243,2.104,248,0.768,293,0.919,315,1.251,537,1.232,602,1.133,726,1.68,759,7.57,760,4.264,761,4.131,762,2.904,763,2.867,764,4.896,765,7.292,766,2.359,767,5.497,768,2.944,769,3.13,770,6.462,771,4.816,772,3.644,773,6.462,774,4.871,775,6.462,776,4.871,777,3.789,778,2.48,779,4.816,780,3.08,781,5.722,782,5.235,783,3.701,784,4.816,785,3.585,786,4.816,787,3.019,788,2.824,789,3.901,790,2.662,791,1.53,792,1.994,793,2.295,794,4.816,795,3.233,796,4.816,797,4.816,798,4.816,799,4.816,800,4.816,801,4.816,802,4.816,803,1.893,804,4.816]],["title/interfaces/CoalescedTimelineItem.html",[121,0.068,805,2.879]],["body/interfaces/CoalescedTimelineItem.html",[0,0.131,3,0.063,4,0.056,9,0.056,14,0.732,17,0.528,18,0.517,21,0.541,23,0.541,25,0.069,26,0.448,27,0.879,40,0.008,41,0.407,42,0.188,45,0.896,46,0.927,49,0.609,51,0.991,53,0.2,54,0.254,60,0.111,61,0.009,63,1.018,66,3.897,83,2.25,88,1.868,94,2.982,104,0.459,118,1.113,121,0.096,123,0.873,168,0.605,181,1,182,0.841,196,0.687,198,0.748,201,1.893,206,1.249,207,1.602,222,0.005,223,0.005,226,0.327,227,1.608,246,1.499,248,0.75,260,0.965,293,0.702,308,4.337,309,4.337,315,0.86,317,2.06,371,2.193,466,2,469,2.982,499,1.344,516,2.158,529,1.004,535,1.654,538,3.193,545,1.654,547,1.223,548,1.156,549,2.419,550,3.594,569,2.836,575,2.115,579,5.791,583,3.019,602,1.865,608,0.84,611,2.159,635,1.654,637,1.223,654,1.932,691,2.153,726,1.454,728,1.565,751,2.774,753,1.557,762,2.406,769,2.753,777,3.139,778,1.821,787,1.524,790,2.303,791,1.701,792,1.524,793,1.754,805,5.069,806,1.754,807,2.982,808,3.019,809,4.741,810,5.354,811,2.944,812,6.539,813,5.354,814,2.717,815,5.354,816,2.106,817,3.302,818,2.91,819,4.573,820,2.552,821,3.594,822,4.741,823,5.354,824,4.337,825,7.928,826,3.452,827,6.262,828,2.477,829,1.608,830,3.558,831,2.353,832,1.524,833,2.632,834,1.868,835,1.196,836,2.353,837,2.353,838,4.741,839,2.158,840,3.568,841,3.68,842,2.609,843,2.158,844,3.68,845,3.68,846,3.68,847,3.68,848,3.68,849,3.68,850,3.68,851,3.68,852,3.68,853,3.68,854,3.68,855,3.68,856,3.68,857,3.68,858,3.68,859,3.68,860,2.774,861,2.982,862,3.7,863,4.473,864,2.158,865,1.524,866,3.68,867,1.196,868,6.31,869,2.982,870,2.25,871,4.036,872,2.477,873,3.68,874,3.68,875,5.588,876,1.754,877,3.68,878,3.68,879,3.68,880,2.609,881,3.68,882,5.354,883,3.259,884,2.353,885,2.774,886,3.259,887,1.754,888,3.68,889,1.654,890,3.68,891,3.68,892,3.68,893,3.68,894,3.259,895,3.68,896,3.68,897,7.928,898,8.124,899,4.706,900,8.282,901,5.758,902,5.379,903,3.558,904,6.31,905,6.31,906,0.732,907,3.68,908,5.871,909,3.68,910,7.682,911,4.741,912,3.68,913,8.124,914,2.982,915,5.613,916,8.124,917,3.68,918,3.68,919,5.354,920,6.31,921,5.354,922,5.354,923,2.91,924,2.471,925,2.81,926,2.471,927,2.774,928,3.68,929,3.68,930,3.68,931,3.68,932,2.982,933,3.68,934,3.68,935,3.68,936,5.354,937,6.31,938,3.68,939,6.31,940,3.68,941,2,942,6.31,943,5.354,944,2.471,945,3.68,946,3.68,947,2.158,948,3.68,949,3.68,950,3.68,951,3.259,952,2.25,953,2.609,954,3.68,955,2.158,956,3.766,957,3.68,958,3.68,959,3.68,960,3.68,961,3.68,962,3.68,963,2.982,964,2.353,965,3.68,966,3.68,967,3.68,968,3.68,969,2.774,970,3.68,971,3.68,972,2.353]],["title/components/CommentComponent.html",[0,0.085,111,0.915]],["body/components/CommentComponent.html",[0,0.147,1,0.862,2,0.794,3,0.072,4,0.064,5,0.681,6,0.958,7,0.938,8,0.899,9,0.064,11,0.844,14,1.179,15,1.862,16,0.827,17,1.379,18,1.342,19,0.844,20,1.24,21,0.87,23,0.87,25,0.08,26,0.496,27,1.482,30,0.794,33,0.609,36,3.229,37,0.756,39,0.653,40,0.008,41,0.533,42,0.172,43,0.511,45,0.67,46,1.086,49,0.488,50,1.275,51,1.072,53,0.215,54,0.293,55,1.29,56,0.862,57,1.256,59,1.907,60,0.088,61,0.011,63,0.87,64,1.157,66,2.086,85,2.589,95,0.938,96,1.154,97,1.13,98,0.712,99,1.599,100,0.938,101,1.917,102,0.844,103,0.743,104,1.069,105,1.204,106,0.862,107,0.938,108,0.862,109,0.844,110,0.938,111,1.502,112,0.938,113,0.809,114,0.827,115,0.924,116,0.844,117,1.302,118,0.952,119,1.509,120,0.827,121,0.064,122,0.844,123,0.986,124,0.862,125,0.862,126,0.776,127,0.938,128,0.827,129,0.938,130,0.862,131,0.938,132,0.862,133,0.938,134,0.844,135,0.938,136,0.844,137,0.938,138,0.596,139,0.938,140,0.844,141,0.41,142,0.938,143,0.862,144,0.938,145,0.862,146,1.509,147,0.862,148,0.938,149,0.862,150,1.509,151,0.862,152,0.938,153,0.881,154,0.938,155,0.827,156,0.938,157,0.862,158,0.938,159,0.899,160,0.792,161,0.938,162,0.862,163,1.256,164,1.309,165,0.862,166,0.938,167,0.827,168,0.48,169,0.938,170,0.844,171,0.862,172,0.938,173,0.862,174,0.938,175,0.844,176,0.844,177,0.827,178,0.938,179,0.844,180,0.938,181,0.792,182,0.667,183,0.827,184,0.938,185,1.154,186,1.13,187,0.844,188,0.862,189,0.572,190,0.809,191,0.667,192,0.862,193,0.881,194,0.938,195,0.862,196,0.792,197,0.938,198,0.862,199,0.938,200,0.809,201,0.862,202,0.862,203,0.792,204,0.938,205,0.862,206,0.851,207,0.727,208,0.809,209,0.844,210,0.938,211,0.827,212,0.938,213,0.827,214,0.938,215,0.809,216,0.938,217,0.809,218,0.938,219,0.809,220,0.881,221,0.938,222,0.005,223,0.005,226,0.69,234,0.697,246,1.743,248,0.878,260,0.504,284,1.348,293,0.809,315,0.681,427,2.488,466,2.306,467,3.758,516,4.003,537,1.086,549,3.087,575,1.041,602,1.394,670,3.221,678,2.594,726,1.703,763,2.684,766,2.163,768,2.594,769,3.012,778,2.644,785,3.356,787,2.826,790,2.492,791,1.882,792,1.757,793,2.023,803,1.668,806,4.217,830,4.542,831,2.713,832,1.757,885,3.199,925,2.227,973,3.758,974,7.223,975,6.828,976,5.926,977,6.828,978,6.046,979,6.828,980,6.544,981,5.926,982,6.828,983,6.828,984,3.068,985,2.833,986,5.926,987,4.244,988,4.244,989,4.244,990,4.244,991,3.978,992,5.926,993,4.244,994,4.8,995,3.85,996,4.244,997,4.244,998,4.244,999,4.244,1000,3.008,1001,2.713,1002,1.757,1003,1.668,1004,1.757,1005,1.627,1006,4.244,1007,4.244,1008,4.244,1009,4.244,1010,4.244,1011,5.926,1012,4.244,1013,4.2,1014,5.926,1015,4.244,1016,4.244,1017,2.713,1018,3.438,1019,2.713,1020,2.849,1021,3.218,1022,2.713,1023,2.594,1024,2.393,1025,3.199,1026,3.758,1027,3.758,1028,2.849,1029,4.244,1030,3.438,1031,4.244,1032,3.438,1033,1.925,1034,2.306,1035,5.926,1036,5.926,1037,4.244,1038,5.247,1039,5.926]],["title/components/ComponentContextMenuComponent.html",[0,0.085,113,0.859]],["body/components/ComponentContextMenuComponent.html",[0,0.168,1,0.696,2,0.68,3,0.058,4,0.052,5,0.55,6,0.773,7,0.757,8,0.726,9,0.052,11,0.681,14,1.01,16,0.667,17,1.365,18,1.326,19,0.681,20,1.199,21,0.746,23,0.746,25,0.065,26,0.425,27,0.993,30,0.68,33,0.492,37,0.668,39,0.56,40,0.008,41,0.5,42,0.165,43,0.438,45,0.574,46,1.1,49,0.535,50,0.948,51,0.797,53,0.184,54,0.237,56,0.696,57,1.076,60,0.105,61,0.013,63,1.194,69,5.186,72,1.381,78,1.861,86,2.086,93,1.22,95,0.757,96,0.989,97,1.154,98,0.574,99,1.448,100,0.757,101,1.828,102,0.681,103,0.6,104,1.032,105,1.032,106,0.696,107,0.757,108,0.696,109,0.681,110,0.757,111,0.696,112,0.757,113,1.428,114,0.667,115,0.89,116,0.681,117,0.653,118,0.815,119,1.337,120,0.667,121,0.101,122,0.681,123,0.955,124,0.696,125,0.696,126,0.626,127,0.757,128,0.667,129,0.757,130,0.696,131,0.757,132,0.696,133,0.757,134,0.681,135,0.757,136,0.681,137,0.757,138,0.939,139,0.757,140,0.681,141,0.69,142,0.757,143,0.696,144,0.757,145,0.696,146,1.337,147,0.696,148,0.757,149,0.696,150,1.337,151,0.696,152,0.757,153,0.711,154,0.757,155,0.667,156,0.757,157,0.696,158,0.757,159,0.726,160,0.639,161,0.757,162,0.696,163,1.076,164,1.122,165,0.696,166,0.757,167,1.179,168,0.919,169,0.757,170,0.681,171,0.696,172,0.757,173,0.696,174,0.757,175,0.681,176,0.681,177,0.667,178,0.757,179,0.681,180,0.757,181,0.639,182,0.538,183,0.667,184,0.757,185,0.667,186,0.968,187,0.681,188,0.696,189,0.584,190,0.653,191,0.538,192,0.696,193,0.711,194,0.757,195,0.696,196,0.948,197,0.757,198,0.696,199,0.757,200,0.653,201,0.696,202,0.696,203,1.603,204,0.757,205,0.696,206,0.492,207,0.587,208,0.653,209,0.681,210,0.757,211,0.667,212,0.757,213,0.667,214,0.757,215,0.653,216,0.757,217,0.653,218,0.757,219,0.653,220,0.711,221,0.757,222,0.004,223,0.004,226,0.45,234,1.173,243,1.496,246,1.099,248,0.795,253,1.381,260,0.89,267,2.443,268,2.733,276,2.159,277,1.313,281,1.064,284,1.088,293,0.653,298,2.581,299,6.235,315,1.075,317,1.018,441,2.581,443,5.058,444,5.088,446,2.189,447,1.931,448,2.299,459,2.349,532,0.823,545,1.539,548,1.051,549,2.566,575,1.995,583,1.931,602,1.424,608,0.568,635,1.539,637,2.011,670,1.861,671,2.093,672,2.189,691,1.577,692,2.299,728,2.845,753,0.996,763,2.379,778,2.431,780,2.42,803,1.346,814,3.8,820,1.632,828,2.799,829,1.496,835,1.966,865,1.417,867,2.322,872,1.584,876,1.632,906,1.67,1040,5.641,1041,2.427,1042,3.103,1043,2.977,1044,4.902,1045,4.113,1046,4.902,1047,5.077,1048,3.424,1049,5.066,1050,3.176,1051,3.512,1052,3.424,1053,3.424,1054,4.113,1055,2.266,1056,3.474,1057,3.424,1058,2.42,1059,3.279,1060,3.457,1061,4.744,1062,3.424,1063,4.39,1064,4.667,1065,3.424,1066,3.424,1067,4.902,1068,3.424,1069,3.424,1070,4.902,1071,3.424,1072,4.289,1073,2.774,1074,2.774,1075,5.422,1076,4.902,1077,5.066,1078,5.422,1079,2.774,1080,2.774,1081,2.774,1082,2.427,1083,1.281,1084,2.427,1085,3.868,1086,3.599,1087,2.581,1088,1.931,1089,3.409,1090,2.977,1091,4.279,1092,1.138,1093,3.103,1094,2.427,1095,2.581,1096,2.774,1097,4.561,1098,2.774,1099,2.774,1100,4.113,1101,2.774,1102,2.863,1103,2.774,1104,2.774,1105,2.774,1106,2.774,1107,2.774,1108,2.774,1109,4.113,1110,2.774,1111,2.774,1112,4.113,1113,2.774,1114,2.189,1115,2.774,1116,2.774,1117,2.774,1118,2.774,1119,2.774,1120,2.774,1121,2.774,1122,3.299,1123,2.774,1124,2.774,1125,2.774,1126,2.774,1127,4.902,1128,2.774,1129,4.902,1130,2.774,1131,3.827,1132,2.774,1133,2.774,1134,2.774,1135,4.902,1136,2.774,1137,2.774,1138,2.774,1139,2.774,1140,4.113,1141,2.774,1142,2.774,1143,1.861,1144,4.113,1145,4.113,1146,2.774,1147,3.827,1148,2.774,1149,2.774,1150,2.774,1151,2.774,1152,2.774,1153,2.774,1154,2.774,1155,2.774,1156,2.774,1157,2.774,1158,2.581,1159,2.774,1160,2.774,1161,2.774,1162,2.774,1163,5.077,1164,5.077,1165,3.032,1166,1.25,1167,4.496,1168,1.539,1169,1.683,1170,1.738,1171,1.632,1172,2.427,1173,3.424,1174,2.427,1175,2.774,1176,5.358,1177,2.581,1178,3.424,1179,2.008,1180,2.774,1181,3.424,1182,3.424,1183,1.797,1184,2.774,1185,1.496,1186,1.417,1187,1.112,1188,2.427,1189,1.456,1190,3.424,1191,2.774,1192,2.189,1193,1.797]],["title/interfaces/ComponentContextMenuData.html",[121,0.068,1049,3.192]],["body/interfaces/ComponentContextMenuData.html",[0,0.168,3,0.075,4,0.067,9,0.067,14,0.879,20,1.022,21,0.649,23,0.649,25,0.083,26,0.51,27,0.725,40,0.008,42,0.187,46,1.105,49,0.637,53,0.194,54,0.305,60,0.126,61,0.015,63,1.27,69,5.347,72,1.782,78,3.312,86,1.698,97,0.843,104,0.87,113,1.331,115,0.525,121,0.12,123,0.749,138,1.107,141,0.822,167,1.187,168,0.963,189,0.427,203,1.59,222,0.005,223,0.005,226,0.392,234,1.145,246,1.319,248,0.894,253,1.782,260,0.969,267,2.745,268,2.225,281,1.373,293,0.843,298,3.331,299,6.148,315,1.12,317,1.314,441,3.331,443,4.996,444,2.825,446,2.825,447,2.492,448,2.967,459,2.044,529,1.205,532,1.062,545,1.986,548,1.281,549,2.336,575,2.121,583,2.492,602,1.434,608,0.655,635,2.739,637,2.711,670,2.402,671,2.701,672,2.825,691,1.893,692,2.967,728,3.197,753,1.285,763,2.396,778,2.896,780,2.106,803,1.737,814,3.093,820,2.905,828,2.819,829,1.931,835,2.267,865,2.523,867,2.767,872,2.044,876,2.106,1040,3.132,1041,3.132,1042,2.701,1043,2.591,1044,3.58,1045,3.58,1046,3.58,1049,4.945,1050,2.319,1051,3.198,1054,3.58,1055,2.141,1056,3.525,1058,2.106,1059,3.593,1060,3.554,1061,4.32,1062,3.376,1063,4.409,1064,4.782,1067,4.937,1070,4.937,1072,4.945,1073,3.58,1074,3.58,1075,6.092,1076,6.391,1077,5.924,1078,7.002,1079,3.58,1080,3.58,1081,3.58,1082,3.132,1083,1.653,1084,3.132,1085,5.044,1086,4.32,1087,4.594,1088,3.436,1089,4.683,1090,4.09,1091,5.214,1092,2.026,1093,3.725,1094,3.132,1095,3.331,1096,3.58,1097,5.258,1098,3.58,1099,3.58,1100,4.937,1101,3.58,1102,3.436,1103,3.58,1104,3.58,1105,3.58,1106,3.58,1107,3.58,1108,3.58,1109,4.937,1110,3.58,1111,3.58,1112,4.937,1113,3.58,1114,2.825,1115,3.58,1116,3.58,1117,3.58,1118,3.58,1119,3.58,1120,3.58,1121,3.58,1122,3.473,1123,3.58,1124,3.58,1125,3.58,1126,3.58,1127,5.651,1128,3.58,1129,5.651,1130,3.58,1131,3.331,1132,3.58,1133,3.58,1134,3.58,1135,5.651,1136,3.58,1137,3.58,1138,3.58,1139,3.58,1140,4.937,1141,3.58,1142,3.58,1143,2.402,1144,4.937,1145,4.937,1146,3.58,1147,4.594,1148,3.58,1149,3.58,1150,3.58,1151,3.58,1152,3.58,1153,3.58,1154,3.58,1155,3.58,1156,3.58,1157,3.58,1158,3.331,1159,3.58,1160,3.58,1161,3.58,1162,3.58]],["title/injectables/ComponentContextMenuService.html",[532,1.082,1089,3.024]],["body/injectables/ComponentContextMenuService.html",[0,0.166,3,0.074,4,0.066,9,0.066,14,0.868,20,1.013,21,0.641,23,0.641,25,0.082,27,0.716,30,0.809,33,0.626,37,0.52,39,0.666,40,0.008,41,0.389,42,0.173,43,0.52,45,0.493,46,1.098,49,0.624,53,0.193,54,0.301,60,0.125,61,0.015,63,1.266,69,5.313,72,1.759,78,2.37,86,1.683,97,1.322,104,0.864,113,1.498,115,0.718,121,0.105,123,0.744,138,1.102,141,0.758,167,1.177,168,0.974,189,0.421,203,1.629,222,0.005,223,0.005,226,0.536,234,0.991,246,1.307,248,0.933,253,1.759,260,0.965,267,2.529,268,2.205,281,1.355,293,0.832,298,3.288,299,6.399,315,1.112,317,1.297,441,3.288,443,5.035,444,4.429,446,2.788,447,2.459,448,2.928,459,2.018,532,1.048,545,2.714,548,1.276,549,2.315,575,2.115,583,2.459,602,1.421,608,0.651,635,1.96,637,2.303,646,1.805,670,2.37,671,2.666,672,2.788,691,1.876,692,2.928,728,3.179,753,1.269,763,2.374,778,2.833,780,2.079,803,1.714,814,3.065,820,2.079,828,2.794,829,1.906,835,2.551,865,1.805,867,2.706,872,2.018,876,2.879,1040,4.911,1041,3.091,1042,2.666,1043,2.557,1044,3.533,1045,3.533,1046,3.533,1049,4.281,1050,2.289,1051,3.17,1054,3.533,1055,2.417,1056,3.649,1058,2.079,1059,3.519,1060,3.71,1061,4.281,1062,3.514,1063,4.763,1064,5.116,1067,4.893,1070,4.893,1072,4.911,1073,3.533,1074,3.533,1075,6.877,1076,5.612,1077,6.017,1078,6.058,1079,3.533,1080,3.533,1081,3.533,1082,3.091,1083,1.631,1084,3.091,1085,5.02,1086,4.281,1087,3.288,1088,2.459,1089,4.651,1090,4.604,1091,5.193,1092,1.45,1093,2.666,1094,3.091,1095,3.288,1096,4.893,1097,5.919,1098,4.893,1099,3.533,1100,4.893,1101,3.533,1102,3.406,1103,3.533,1104,3.533,1105,3.533,1106,3.533,1107,3.533,1108,3.533,1109,4.893,1110,3.533,1111,3.533,1112,4.893,1113,3.533,1114,2.788,1115,3.533,1116,3.533,1117,3.533,1118,3.533,1119,3.533,1120,3.533,1121,3.533,1122,3.465,1123,3.533,1124,3.533,1125,3.533,1126,3.533,1127,5.612,1128,3.533,1129,5.612,1130,3.533,1131,3.288,1132,3.533,1133,3.533,1134,3.533,1135,5.612,1136,3.533,1137,3.533,1138,3.533,1139,3.533,1140,4.893,1141,3.533,1142,3.533,1143,2.37,1144,4.893,1145,4.893,1146,3.533,1147,4.552,1148,3.533,1149,3.533,1150,3.533,1151,3.533,1152,3.533,1153,3.533,1154,3.533,1155,3.533,1156,3.533,1157,3.533,1158,3.288,1159,3.533,1160,3.533,1161,3.533,1162,3.533,1194,4.361,1195,4.361,1196,4.361]],["title/interfaces/ComponentNode.html",[121,0.068,1197,2.641]],["body/interfaces/ComponentNode.html",[0,0.152,3,0.09,4,0.122,5,1.101,9,0.104,25,0.099,26,0.574,40,0.008,42,0.189,49,0.661,53,0.198,60,0.142,61,0.017,104,0.658,115,0.626,121,0.139,123,0.737,138,0.74,141,0.662,168,0.97,189,0.808,191,0.828,222,0.006,223,0.006,234,1.435,248,0.906,260,0.626,284,2.422,296,4.116,316,3.091,515,1.638,529,1.438,541,1.501,548,1.348,595,2.417,608,0.832,622,1.835,720,1.924,725,1.972,817,2.513,835,1.713,906,1.763,952,3.222,1055,1.953,1056,3.343,1059,3.645,1060,3.434,1083,1.972,1189,3.242,1197,4.735,1198,2.369,1199,2.973,1200,4.75,1201,5.125,1202,3.991,1203,3.269,1204,2.865,1205,2.513,1206,3.235,1207,3.269,1208,2.676,1209,2.767,1210,4.144,1211,4.238,1212,4.471,1213,3.222,1214,3.222,1215,3.222,1216,3.222,1217,3.222,1218,3.222,1219,3.222,1220,3.222,1221,3.173,1222,3.222,1223,3.222,1224,4.193,1225,3.748,1226,3.37,1227,3.091,1228,2.369,1229,3.728,1230,3.37,1231,3.37,1232,1.793,1233,2.439,1234,2.513,1235,3.222,1236,2.865,1237,2.591,1238,3.37,1239,3.222,1240,3.37,1241,2.369,1242,3.37,1243,2.676,1244,3.37,1245,2.304,1246,3.37,1247,2.973,1248,3.37,1249,3.222,1250,3.37,1251,4.3,1252,2.767,1253,2.973,1254,2.767,1255,3.868,1256,3.37,1257,3.37,1258,3.37,1259,4.022,1260,3.37,1261,4.385,1262,3.37,1263,3.37,1264,3.37,1265,3.222,1266,1.924,1267,3.868,1268,4.875,1269,3.37,1270,3.37,1271,4.385,1272,3.37,1273,4.385,1274,4.385,1275,3.37,1276,3.37,1277,4.144,1278,4.385,1279,3.222,1280,4.193,1281,4.385,1282,3.37,1283,4.554,1284,3.6,1285,3.37,1286,3.222,1287,3.37,1288,3.37,1289,3.37,1290,3.222,1291,4.022,1292,3.222,1293,2.973,1294,3.222,1295,2.767]],["title/injectables/ComponentStoreService.html",[532,1.082,1296,2.879]],["body/injectables/ComponentStoreService.html",[0,0.104,2,0.948,3,0.094,4,0.084,9,0.118,25,0.104,30,0.948,33,0.795,37,0.771,39,0.987,40,0.008,41,0.577,42,0.186,43,0.771,45,0.999,49,0.667,53,0.202,54,0.383,60,0.115,61,0.014,63,1.277,182,1.112,222,0.006,223,0.006,226,0.491,227,3.093,231,2.783,234,1.35,260,0.658,281,1.72,293,1.056,532,1.701,537,1.417,540,2.292,541,1.576,547,3.005,548,1.366,555,2.419,608,0.83,646,2.292,691,1.72,726,1.798,818,3.848,924,4.753,1237,3.48,1296,4.526,1297,8.005,1298,3.539,1299,6.269,1300,5.336,1301,6.269,1302,5.028,1303,8.226,1304,5.735,1305,6.269,1306,5.028,1307,7.284,1308,7.079,1309,4.753,1310,7.079,1311,7.079,1312,7.079,1313,7.079,1314,7.079,1315,7.079,1316,7.079,1317,5.536,1318,8.226,1319,7.805,1320,8.226,1321,7.805,1322,7.284,1323,7.805,1324,8.226,1325,7.805,1326,8.226,1327,7.284,1328,8.226,1329,8.226,1330,8.226,1331,5.536,1332,7.079,1333,6.664,1334,4.902,1335,7.079,1336,4.902,1337,7.079,1338,5.536,1339,7.079,1340,4.902,1341,7.079,1342,5.536,1343,7.079,1344,4.902,1345,7.079,1346,7.284,1347,4.902,1348,7.079,1349,5.536,1350,4.902,1351,5.536,1352,5.536,1353,5.536,1354,5.536,1355,5.536,1356,5.536,1357,5.536]],["title/injectables/ComponentsService.html",[532,1.082,1358,3.395]],["body/injectables/ComponentsService.html",[3,0.106,4,0.094,9,0.094,25,0.118,30,1.022,33,1.095,37,0.759,39,0.97,40,0.008,41,0.568,42,0.183,43,0.759,45,0.97,49,0.67,53,0.202,54,0.431,60,0.129,61,0.016,63,1.261,104,1.071,222,0.007,223,0.007,281,1.937,371,2.247,532,1.832,541,1.774,548,1.348,555,2.724,608,0.806,646,2.58,790,2.275,791,1.98,1322,7.6,1358,5.748,1359,4.144,1360,5.52,1361,7.625,1362,6.752,1363,7.625,1364,7.625,1365,6.233,1366,8.583,1367,8.238,1368,8.583,1369,8.238,1370,8.238,1371,7.6,1372,6.233,1373,7.625,1374,7.625,1375,6.233,1376,6.752,1377,6.233,1378,7.625,1379,6.09,1380,6.233,1381,7.625,1382,6.233,1383,5.05,1384,6.233,1385,4.699,1386,5.05,1387,6.233,1388,6.233,1389,6.233,1390,6.233]],["title/interfaces/CreateComponentData.html",[121,0.068,1391,3.395]],["body/interfaces/CreateComponentData.html",[0,0.174,3,0.105,4,0.093,9,0.093,13,2.481,17,0.883,18,0.863,20,1.269,21,0.904,22,2.616,23,0.904,24,2.616,25,0.116,26,0.633,27,1.01,28,2.688,35,3.131,40,0.008,41,0.397,42,0.128,46,1.111,49,0.662,53,0.224,54,0.425,55,1.87,60,0.128,61,0.016,62,2.142,63,1.203,70,3.97,72,2.481,85,2.688,103,1.078,114,1.199,115,0.973,121,0.093,141,0.594,181,1.53,222,0.007,223,0.007,226,0.671,232,4.361,234,1.01,239,3.469,244,2.846,248,1.042,249,3.797,250,4.2,253,2.481,254,2.846,255,2.301,256,2.765,260,0.731,411,3.229,412,3.024,512,2.846,529,1.678,541,1.751,544,2.765,552,4.111,608,0.578,622,2.142,635,2.765,719,3.123,726,1.969,727,3.76,814,3.123,829,2.688,836,3.933,837,3.933,867,2.85,870,3.76,906,1.224,1083,2.301,1204,3.344,1228,2.765,1296,4.836,1306,3.76,1333,6.128,1391,6.174,1392,4.836,1393,6.698,1394,4.435,1395,3.607,1396,4.637,1397,3.469,1398,3.933,1399,4.13,1400,5.448,1401,5.361,1402,5.448,1403,4.361,1404,4.13,1405,4.984,1406,6.128,1407,4.984,1408,4.984,1409,4.361,1410,3.76,1411,3.607,1412,4.361,1413,6.128,1414,4.361,1415,3.344,1416,3.607,1417,3.933,1418,4.637,1419,5.448,1420,5.448,1421,5.448,1422,5.448,1423,5.448]],["title/components/CreateComponentDialogComponent.html",[0,0.085,114,0.877]],["body/components/CreateComponentDialogComponent.html",[0,0.179,1,0.817,2,0.764,3,0.068,4,0.061,5,0.645,6,0.907,7,0.888,8,0.852,9,0.061,11,0.8,13,1.621,16,0.783,17,1.376,18,1.339,19,0.8,20,1.278,21,0.838,22,2.819,23,0.838,24,2.425,25,0.076,26,0.477,27,1.25,28,3.153,30,0.764,33,0.577,34,2.266,35,3.154,37,0.761,39,0.731,40,0.008,41,0.574,42,0.176,43,0.571,45,0.749,46,1.06,47,3.03,49,0.657,50,1.423,51,1.197,53,0.208,54,0.278,55,1.221,56,0.817,57,1.209,60,0.083,61,0.01,62,1.399,63,0.974,70,2.993,72,1.621,85,2.897,86,1.12,92,1.58,95,0.888,96,1.111,97,1.088,98,0.674,99,1.561,100,0.888,101,1.896,102,0.8,103,0.999,104,1.038,105,1.159,106,0.817,107,0.888,108,0.817,109,0.8,110,0.888,111,0.817,112,0.888,113,0.767,114,1.406,115,1.07,116,0.8,117,0.767,118,0.916,119,1.465,120,0.783,121,0.086,122,0.8,123,0.967,124,0.817,125,0.817,126,0.735,127,0.888,128,0.783,129,0.888,130,0.817,131,0.888,132,0.817,133,0.888,134,0.8,135,0.888,136,0.8,137,0.888,138,0.564,139,0.888,140,0.8,141,0.551,142,0.888,143,0.817,144,0.888,145,0.817,146,1.465,147,0.817,148,0.888,149,0.817,150,1.465,151,0.817,152,0.888,153,0.834,154,0.888,155,0.783,156,0.888,157,0.817,158,0.888,159,0.852,160,0.751,161,0.888,162,0.817,163,1.209,164,1.26,165,0.817,166,0.888,167,0.783,168,0.454,169,0.888,170,0.8,171,0.817,172,0.888,173,0.817,174,0.888,175,0.8,176,0.8,177,0.783,178,0.888,179,0.8,180,0.888,181,1.52,182,0.631,183,0.783,184,0.888,185,0.783,186,1.088,187,0.8,188,0.817,189,0.551,190,0.767,191,0.631,192,0.817,193,0.834,194,0.888,195,0.817,196,0.751,197,0.888,198,0.817,199,0.888,200,0.767,201,0.817,202,0.817,203,0.751,204,0.888,205,0.817,206,0.577,207,0.689,208,0.767,209,0.8,210,0.888,211,0.783,212,0.888,213,0.783,214,0.888,215,0.767,216,0.888,217,0.767,218,0.888,219,0.767,220,0.834,221,0.888,222,0.005,223,0.005,226,0.702,232,2.849,234,1.25,239,4.069,240,4.299,242,3.256,243,2.492,244,2.638,245,3.256,248,1.019,249,3.69,250,4.088,251,4.62,253,1.621,254,1.859,255,1.503,256,1.806,260,0.478,270,2.57,411,4.671,412,4.375,431,3.1,512,1.859,541,1.144,544,1.806,552,4.763,608,0.377,622,1.399,635,1.806,719,2.04,726,1.662,727,2.457,766,2.082,814,2.04,829,1.756,836,2.57,837,2.57,867,2.344,870,3.486,906,0.8,1083,1.503,1204,2.185,1228,1.806,1296,4.613,1306,2.457,1333,4.62,1391,5.743,1392,4.613,1393,5.87,1394,4.23,1395,2.357,1396,3.03,1397,2.266,1398,4.238,1399,4.451,1400,5.87,1401,4.043,1402,3.559,1403,4.699,1404,3.829,1405,5.37,1406,5.845,1407,5.37,1408,5.37,1409,4.699,1410,3.486,1411,2.357,1412,4.043,1413,6.738,1414,5.769,1415,2.185,1416,2.357,1417,2.57,1418,3.03,1419,3.559,1420,3.559,1421,5.05,1422,3.559,1423,3.559,1424,5.703,1425,4.019,1426,4.019,1427,3.03,1428,3.256,1429,3.256,1430,3.559,1431,3.256,1432,3.03,1433,3.559,1434,3.646,1435,5.05,1436,5.439,1437,4.613,1438,5.05,1439,3.03,1440,2.849]],["title/components/CreateEditLabelDialogComponent.html",[0,0.085,116,0.896]],["body/components/CreateEditLabelDialogComponent.html",[0,0.155,1,0.721,2,0.972,3,0.06,4,0.079,5,0.57,6,0.801,7,0.784,8,0.752,9,0.054,11,0.706,13,1.431,14,1.037,15,1.685,16,0.692,17,1.369,18,1.331,19,0.706,20,1.217,21,0.766,22,2.627,23,0.766,24,2.217,25,0.067,26,0.436,27,1.014,30,0.699,33,0.51,35,2.819,37,0.745,39,0.681,40,0.008,41,0.573,42,0.167,43,0.533,44,2.269,45,0.77,46,1.066,49,0.56,50,1.416,51,1.191,53,0.198,54,0.245,55,1.079,56,0.721,57,1.105,60,0.108,61,0.009,63,0.766,64,0.968,66,1.745,85,2.278,86,0.989,93,1.265,95,0.784,96,1.016,97,0.995,98,0.595,99,1.474,100,0.784,101,1.844,102,0.706,103,0.622,104,1.003,105,1.059,106,0.721,107,0.784,108,0.721,109,0.706,110,0.784,111,0.721,112,0.784,113,0.677,114,0.692,115,1.062,116,1.355,117,1.739,118,1.526,119,1.365,120,0.692,121,0.079,122,0.706,123,0.955,124,0.721,125,0.721,126,0.649,127,0.784,128,0.692,129,0.784,130,0.721,131,0.784,132,0.721,133,0.784,134,0.706,135,0.784,136,0.706,137,0.784,138,0.498,139,0.784,140,0.706,141,0.343,142,0.784,143,0.721,144,0.784,145,0.721,146,1.365,147,0.721,148,0.784,149,0.721,150,1.365,151,0.721,152,0.784,153,0.737,154,0.784,155,0.692,156,0.784,157,0.721,158,0.784,159,0.752,160,0.663,161,0.784,162,0.721,163,1.105,164,1.152,165,0.721,166,0.784,167,0.692,168,0.77,169,0.784,170,0.706,171,0.721,172,0.784,173,0.721,174,0.784,175,0.706,176,0.706,177,0.692,178,0.784,179,0.706,180,0.784,181,0.663,182,0.558,183,0.692,184,0.784,185,0.692,186,0.995,187,0.706,188,0.721,189,0.657,190,0.677,191,0.558,192,0.721,193,0.737,194,0.784,195,0.721,196,0.663,197,0.784,198,0.721,199,0.784,200,0.677,201,0.721,202,0.721,203,0.974,204,0.784,205,0.721,206,0.51,207,1.344,208,0.677,209,0.706,210,0.784,211,0.692,212,0.784,213,0.692,214,0.784,215,0.677,216,0.784,217,0.677,218,0.784,219,0.677,220,0.737,221,0.784,222,0.005,223,0.005,226,0.713,234,1.287,235,2.429,242,2.875,243,1.551,244,2.412,246,1.57,248,0.975,249,3.084,250,2.563,253,1.431,254,1.642,255,1.327,256,1.595,259,1.509,260,0.975,271,2.675,274,1.642,275,2.269,276,2.217,277,3.243,278,2.516,279,2.516,293,0.677,315,0.837,411,4.575,412,4.285,431,1.929,516,2.081,548,0.558,608,0.333,611,2.492,719,1.802,726,0.818,745,2.17,769,2.932,778,2.791,790,1.903,791,1.656,792,1.469,816,1.079,820,1.692,832,1.469,834,1.802,867,1.153,953,3.695,984,2.777,985,2.611,1002,1.469,1003,1.395,1004,1.469,1013,3.695,1017,3.951,1033,2.008,1034,2.834,1058,2.945,1062,1.469,1166,1.296,1170,1.802,1187,2.008,1266,1.296,1383,5.006,1397,2.001,1410,3.187,1418,2.675,1427,2.675,1431,2.875,1432,3.93,1434,3.333,1441,5.472,1442,5.472,1443,5.472,1444,5.472,1445,5.472,1446,5.214,1447,5.214,1448,6.031,1449,6.031,1450,2.875,1451,5.468,1452,4.617,1453,3.549,1454,2.646,1455,4.617,1456,3.549,1457,2.081,1458,3.549,1459,3.549,1460,2.852,1461,3.549,1462,4.617,1463,3.549,1464,2.875,1465,4.617,1466,2.001,1467,2.269,1468,2.675,1469,3.143,1470,6.716,1471,5.472,1472,3.93,1473,3.943,1474,3.143,1475,2.081,1476,3.143,1477,3.143,1478,2.516,1479,3.143,1480,6.424,1481,3.143,1482,3.143,1483,2.081,1484,3.143,1485,1.551,1486,2.269,1487,4.617,1488,3.143,1489,4.617,1490,3.143,1491,2.675,1492,3.951,1493,3.951,1494,3.143,1495,3.143,1496,3.143,1497,2.081,1498,4.617,1499,3.143,1500,3.143,1501,3.143,1502,3.143,1503,3.695,1504,3.143,1505,3.143,1506,3.143,1507,3.143,1508,3.143,1509,4.617,1510,3.143,1511,3.143,1512,3.143,1513,3.5,1514,5.472,1515,4.658,1516,5.472,1517,3.93,1518,5.214,1519,3.695,1520,5.214,1521,3.5,1522,1.929,1523,2.675,1524,3.549,1525,4.617,1526,2.001,1527,3.549,1528,2.383,1529,1.361]],["title/interfaces/CreateInterfaceData.html",[121,0.068,1530,3.192]],["body/interfaces/CreateInterfaceData.html",[0,0.143,3,0.105,4,0.093,9,0.093,13,2.483,17,0.884,18,0.864,20,1.374,21,0.904,22,2.618,23,0.904,24,2.618,25,0.116,26,0.633,27,1.345,28,2.691,35,3.133,40,0.008,42,0.182,46,1.203,49,0.647,53,0.225,54,0.426,55,1.871,60,0.157,61,0.016,62,2.144,63,1.289,70,3.232,115,1.043,120,1.2,121,0.14,141,0.594,222,0.007,223,0.007,226,0.546,234,1.011,235,2.42,239,3.472,244,2.848,246,1.849,248,0.899,249,3.484,250,3.027,253,2.483,254,2.848,255,2.303,256,2.767,315,1.215,411,3.232,412,3.027,529,1.679,544,2.767,548,0.967,602,1.781,608,0.578,626,3.841,719,3.125,726,1.744,814,3.125,867,2.001,924,4.134,984,2.767,985,2.901,1002,2.549,1003,2.42,1004,2.549,1033,2.459,1034,3.347,1055,2.154,1056,2.549,1059,3.447,1060,2.618,1083,2.303,1204,3.347,1255,4.82,1306,3.764,1392,4.838,1394,4.437,1395,3.61,1397,3.472,1398,3.936,1399,4.134,1403,4.364,1404,4.134,1409,4.364,1410,3.764,1412,4.364,1473,4.645,1530,5.808,1531,4.626,1532,4.364,1533,4.838,1534,4.641,1535,4.364,1536,4.134,1537,5.453,1538,5.453,1539,5.453,1540,5.453,1541,4.988,1542,5.453,1543,5.364,1544,4.364]],["title/components/CreateInterfaceDialogComponent.html",[0,0.085,120,0.877]],["body/components/CreateInterfaceDialogComponent.html",[0,0.139,1,0.855,2,0.789,3,0.072,4,0.064,5,0.675,6,0.949,7,0.929,8,0.891,9,0.064,11,0.837,13,1.696,16,0.819,17,1.378,18,1.342,19,0.837,20,1.347,21,0.865,22,2.889,23,0.865,24,2.504,25,0.079,26,0.493,27,1.437,28,3.217,30,0.789,33,0.604,34,2.372,35,3.208,37,0.754,39,0.649,40,0.008,41,0.57,42,0.183,43,0.507,44,2.689,45,0.768,46,1.18,47,3.17,49,0.631,50,1.1,51,0.925,53,0.21,54,0.291,55,1.278,56,0.855,57,1.248,60,0.122,61,0.011,62,1.464,63,1.138,70,2.207,85,2.573,86,1.172,92,1.653,95,0.929,96,1.147,97,1.123,98,0.706,99,1.593,100,0.929,101,1.914,102,0.837,103,0.737,104,1.05,105,1.197,106,0.855,107,0.929,108,0.855,109,0.837,110,0.929,111,0.855,112,0.929,113,0.802,114,0.819,115,1.086,116,0.837,117,0.802,118,0.946,119,1.501,120,1.434,121,0.144,122,0.837,123,0.973,124,0.855,125,0.855,126,0.769,127,0.929,128,0.819,129,0.929,130,0.855,131,0.929,132,0.855,133,0.929,134,0.837,135,0.929,136,0.837,137,0.929,138,0.59,139,0.929,140,0.837,141,0.569,142,0.929,143,0.855,144,0.929,145,0.855,146,1.501,147,0.855,148,0.929,149,0.855,150,1.501,151,0.855,152,0.929,153,0.873,154,0.929,155,0.819,156,0.929,157,0.855,158,0.929,159,0.891,160,0.785,161,0.929,162,0.855,163,1.248,164,1.301,165,0.855,166,0.929,167,0.819,168,0.475,169,0.929,170,0.837,171,0.855,172,0.929,173,0.855,174,0.929,175,0.837,176,0.837,177,0.819,178,0.929,179,0.837,180,0.929,181,0.785,182,0.661,183,0.819,184,0.929,185,0.819,186,1.123,187,0.837,188,0.855,189,0.569,190,0.802,191,0.661,192,0.855,193,0.873,194,0.929,195,0.855,196,0.785,197,0.929,198,0.855,199,0.929,200,0.802,201,0.855,202,0.855,203,0.785,204,0.929,205,0.855,206,0.604,207,0.721,208,0.802,209,0.837,210,0.929,211,0.819,212,0.929,213,0.819,214,0.929,215,0.802,216,0.929,217,0.802,218,0.929,219,0.802,220,0.873,221,0.929,222,0.005,223,0.005,226,0.688,234,1.272,235,2.671,239,4.151,240,4.439,243,1.838,244,2.724,246,1.593,248,0.875,249,3.295,250,2.895,251,3.407,253,1.696,254,1.946,255,1.573,256,1.89,270,2.689,315,0.946,411,4.637,412,4.343,544,1.89,548,0.661,602,1.732,608,0.395,626,3.736,719,2.135,726,1.357,766,2.15,814,2.135,867,2.208,924,2.824,984,3.054,985,2.822,1002,1.741,1003,1.653,1004,1.741,1033,1.913,1034,2.286,1055,1.676,1056,1.741,1059,1.696,1060,1.788,1083,1.573,1204,2.286,1255,2.372,1306,2.571,1392,4.706,1394,4.316,1395,2.466,1397,2.372,1398,4.344,1399,4.562,1403,4.816,1404,3.953,1409,4.816,1410,3.599,1412,4.174,1427,3.17,1429,3.407,1434,3.765,1439,3.17,1440,2.981,1464,3.407,1473,4.001,1530,5.493,1532,2.981,1533,4.706,1534,3.17,1535,4.816,1536,4.562,1537,6.017,1538,3.724,1539,3.724,1540,3.724,1541,3.407,1542,3.724,1543,4.174,1544,5.218,1545,4.174,1546,4.206,1547,3.407,1548,3.407]],["title/components/CreateIssueDialogComponent.html",[0,0.085,122,0.896]],["body/components/CreateIssueDialogComponent.html",[0,0.143,1,0.729,2,1.103,3,0.061,4,0.054,5,0.576,6,0.81,7,0.793,8,0.761,9,0.054,11,0.714,13,1.447,14,1.046,15,1.696,16,0.699,17,1.37,18,1.331,19,0.714,20,1.353,21,0.772,22,2.644,23,0.772,24,2.235,25,0.068,26,0.44,27,1.434,28,2.992,29,3.507,30,0.704,33,0.515,34,2.024,35,3.017,36,2.992,37,0.746,39,0.579,40,0.008,41,0.507,42,0.158,43,0.453,44,2.294,45,0.774,46,1.155,49,0.257,50,1.361,51,1.145,53,0.211,54,0.248,55,1.091,56,0.729,57,1.114,59,1.613,60,0.109,61,0.009,62,1.249,63,1.118,64,0.979,70,2.759,85,2.297,86,1.464,89,2.759,93,1.873,95,0.793,96,1.024,97,1.003,98,0.602,99,1.482,100,0.793,101,1.848,102,0.714,103,0.629,104,1.007,105,1.068,106,0.729,107,0.793,108,0.729,109,0.714,110,0.793,111,0.729,112,0.793,113,0.685,114,0.699,115,1.069,116,0.714,117,0.685,118,0.844,119,1.374,120,0.699,121,0.094,122,1.362,123,1.026,124,0.729,125,0.729,126,0.656,127,0.793,128,0.699,129,0.793,130,0.729,131,0.793,132,0.729,133,0.793,134,0.714,135,0.793,136,0.714,137,0.793,138,0.504,139,0.793,140,0.714,141,0.346,142,0.793,143,0.729,144,0.793,145,0.729,146,1.374,147,0.729,148,0.793,149,0.729,150,1.374,151,0.729,152,0.793,153,0.745,154,0.793,155,0.699,156,0.793,157,0.729,158,0.793,159,1.114,160,0.67,161,0.793,162,0.729,163,1.114,164,1.161,165,0.729,166,0.793,167,0.699,168,0.406,169,0.793,170,0.714,171,0.729,172,0.793,173,0.729,174,0.793,175,0.714,176,0.714,177,0.699,178,0.793,179,0.714,180,0.793,181,0.67,182,0.564,183,0.699,184,0.793,185,1.024,186,1.003,187,0.714,188,0.729,189,0.507,190,0.685,191,0.564,192,0.729,193,0.745,194,0.793,195,0.729,196,0.67,197,0.793,198,0.729,199,0.793,200,0.685,201,0.729,202,0.729,203,0.67,204,0.793,205,0.729,206,0.515,207,0.615,208,0.685,209,0.714,210,0.793,211,0.699,212,0.793,213,0.699,214,0.793,215,0.685,216,0.793,217,0.685,218,0.793,219,0.685,220,0.745,221,0.793,222,0.005,223,0.005,234,1.291,235,2.445,239,2.964,243,2.297,244,2.432,246,1.702,248,0.814,249,3.098,250,3.365,253,1.447,254,1.66,255,1.342,256,1.613,259,2.235,260,0.905,274,2.432,284,2.615,310,3.522,311,2.857,312,2.584,315,0.999,367,3.529,371,1.29,383,2.104,389,1.613,411,4.584,412,4.293,427,2.104,466,1.951,516,3.082,548,0.564,557,2.877,561,1.66,562,2.294,602,1.463,611,2.12,641,2.066,719,1.822,727,2.194,739,4.258,753,1.044,769,2.942,778,2.115,790,1.919,791,1.67,792,1.486,811,2.021,814,1.822,816,1.597,829,1.568,832,2.176,835,1.166,867,1.166,884,2.294,906,1.362,972,4.377,984,2.795,985,2.625,995,3.861,1001,2.294,1002,1.486,1003,1.411,1004,1.486,1017,2.294,1019,2.294,1020,2.41,1022,2.294,1023,2.194,1024,2.024,1033,1.166,1034,2.857,1093,2.194,1183,1.884,1187,1.166,1206,1.31,1228,1.613,1266,1.31,1284,2.759,1304,2.907,1397,2.024,1428,2.907,1431,2.907,1432,2.705,1434,3.36,1439,2.705,1464,4.258,1473,2.857,1503,2.544,1535,4.408,1543,4.408,1544,4.853,1545,2.544,1549,6.063,1550,6.063,1551,6.063,1552,4.659,1553,3.589,1554,3.589,1555,4.654,1556,3.589,1557,4.654,1558,3.589,1559,3.961,1560,4.654,1561,4.276,1562,4.654,1563,3.589,1564,5.038,1565,2.575,1566,3.976,1567,3.36,1568,3.178,1569,4.258,1570,2.907,1571,2.544,1572,3.157,1573,3.178,1574,3.178,1575,3.178,1576,3.178,1577,3.178,1578,4.654,1579,4.654,1580,4.258,1581,2.705,1582,2.544,1583,3.178,1584,3.178,1585,3.178,1586,2.907,1587,3.178,1588,3.178,1589,3.178,1590,3.178,1591,3.178,1592,3.178,1593,3.178,1594,1.951,1595,3.178,1596,3.178,1597,3.178,1598,3.178,1599,3.178,1600,3.726,1601,3.178,1602,2.544,1603,3.178,1604,2.104,1605,3.178,1606,3.178,1607,3.178,1608,3.178,1609,2.705,1610,3.178,1611,2.705,1612,3.529,1613,4.258,1614,2.024,1615,2.857,1616,5.256,1617,2.104,1618,3.178,1619,1.486,1620,1.822,1621,3.178,1622,3.589,1623,2.907,1624,3.178,1625,3.589]],["title/interfaces/CreateLabelDialogData.html",[121,0.068,1451,3.395]],["body/interfaces/CreateLabelDialogData.html",[0,0.142,2,0.902,3,0.087,4,0.102,9,0.078,13,2.067,14,1.02,15,1.837,17,0.736,18,0.719,20,1.13,21,0.753,22,2.18,23,0.753,24,2.18,25,0.097,26,0.563,27,0.841,35,2.788,40,0.008,41,0.515,42,0.172,43,0.688,46,0.989,49,0.481,53,0.216,54,0.354,55,1.558,60,0.14,61,0.013,63,0.989,64,1.398,66,3.311,115,0.949,116,1.02,117,1.625,118,1.473,121,0.078,123,0.723,168,0.85,189,0.771,207,1.46,222,0.006,223,0.006,226,0.709,234,1.235,235,2.015,244,2.372,246,1.729,248,0.986,249,3.198,250,2.52,253,2.067,254,2.372,255,1.917,256,2.304,260,1.059,277,2.582,293,0.978,315,1.082,411,2.69,412,2.52,431,3.661,516,4.684,529,1.398,548,0.805,608,0.481,611,3.034,719,2.602,769,2.813,778,3.134,790,2.459,791,2.14,792,2.122,816,1.558,820,3.21,832,2.122,834,2.602,867,2.596,953,4.774,984,2.304,985,2.582,1002,2.122,1003,2.015,1004,2.122,1013,4.774,1017,4.809,1033,2.188,1034,3.661,1058,2.443,1383,5.456,1397,2.891,1410,3.134,1418,3.864,1441,4.54,1442,4.54,1443,4.54,1444,4.54,1445,4.54,1448,4.54,1449,4.54,1451,5.67,1452,4.54,1454,2.602,1455,4.54,1460,2.957,1462,4.54,1465,4.54,1466,2.891,1467,4.306,1468,5.077,1469,7.075,1470,7.543,1471,6.661,1472,5.077,1473,4.51,1474,4.54,1475,3.006,1476,4.54,1477,4.54,1478,3.634,1479,4.54,1480,7.348,1481,4.54,1482,4.54,1483,3.006,1484,4.54,1485,2.24,1486,3.277,1487,5.964,1488,4.54,1489,5.964,1490,4.54,1491,3.864,1492,4.809,1493,4.809,1494,4.54,1495,4.54,1496,4.54,1497,3.006,1498,5.964,1499,4.54,1500,4.54,1501,4.54,1502,4.54,1503,4.774,1504,4.54,1505,4.54,1506,4.54,1507,4.54,1508,4.54,1509,5.964,1510,4.54,1511,4.54,1512,4.54,1513,4.522,1514,6.661,1515,5.67,1516,6.661,1517,5.077]],["title/components/CreateProjectDialogComponent.html",[0,0.085,124,0.915]],["body/components/CreateProjectDialogComponent.html",[0,0.153,1,0.876,2,0.803,3,0.073,4,0.065,5,0.692,6,0.973,7,0.953,8,0.914,9,0.065,11,0.858,13,1.738,16,0.84,17,1.38,18,1.343,19,0.858,20,1.312,21,0.88,22,2.927,23,0.88,24,2.547,25,0.081,26,0.501,27,1.389,28,3.251,30,0.803,33,0.619,34,2.431,35,3.237,37,0.758,39,0.66,40,0.008,41,0.589,42,0.172,43,0.516,44,2.756,45,0.778,46,1.189,47,3.249,49,0.622,50,1.119,51,0.941,53,0.204,54,0.298,55,1.31,56,0.876,57,1.27,60,0.089,61,0.011,62,1.501,63,1.011,70,2.262,85,2.618,95,0.953,96,1.167,97,1.143,98,0.723,99,1.61,100,0.953,101,1.923,102,0.858,103,0.755,104,1.194,105,1.217,106,0.876,107,0.953,108,0.876,109,0.858,110,0.953,111,0.876,112,0.953,113,0.822,114,0.84,115,1.089,116,0.858,117,0.822,118,0.962,119,1.521,120,0.84,121,0.065,122,0.858,123,0.976,124,1.512,125,0.876,126,0.788,127,0.953,128,0.84,129,0.953,130,0.876,131,0.953,132,0.876,133,0.953,134,0.858,135,0.953,136,0.858,137,0.953,138,0.605,139,0.953,140,0.858,141,0.416,142,0.953,143,0.876,144,0.953,145,0.876,146,1.521,147,0.876,148,0.953,149,0.876,150,1.521,151,0.876,152,0.953,153,0.895,154,0.953,155,0.84,156,0.953,157,0.876,158,0.953,159,0.914,160,0.805,161,0.953,162,0.876,163,1.27,164,1.324,165,0.876,166,0.953,167,0.84,168,0.487,169,0.953,170,0.858,171,0.876,172,0.953,173,0.876,174,0.953,175,0.858,176,0.858,177,0.84,178,0.953,179,0.858,180,0.953,181,0.805,182,0.677,183,0.84,184,0.953,185,0.84,186,1.143,187,0.858,188,0.876,189,0.718,190,0.822,191,0.677,192,0.876,193,0.895,194,0.953,195,0.876,196,0.805,197,0.953,198,0.876,199,0.953,200,0.822,201,0.876,202,0.876,203,0.805,204,0.953,205,0.876,206,1.068,207,0.739,208,0.822,209,0.858,210,0.953,211,0.84,212,0.953,213,0.84,214,0.953,215,0.822,216,0.953,217,0.822,218,0.953,219,0.822,220,0.895,221,0.953,222,0.005,223,0.005,226,0.793,227,2.618,235,2.707,239,4.196,240,4.516,246,1.61,248,0.884,249,3.324,250,2.945,254,1.994,255,1.612,259,1.833,315,0.962,411,4.656,412,4.361,542,4.196,544,1.937,559,5.578,602,1.751,719,2.188,726,1.586,731,6.097,766,2.187,984,3.094,985,2.852,1002,1.785,1003,1.695,1004,1.785,1033,1.947,1034,2.343,1228,3.094,1306,2.635,1392,4.757,1397,2.431,1398,4.402,1404,4.022,1410,3.662,1412,4.246,1427,3.249,1429,3.492,1430,3.817,1434,4.757,1439,3.249,1473,4.044,1535,4.88,1541,3.492,1543,4.246,1544,5.274,1545,4.246,1547,3.492,1548,3.492,1626,6.885,1627,3.492,1628,4.311,1629,3.249,1630,2.635,1631,4.311,1632,4.311,1633,4.311,1634,4.311]],["title/components/CursorPaginatorComponent.html",[0,0.085,125,0.915]],["body/components/CursorPaginatorComponent.html",[0,0.159,1,1.002,2,0.88,3,0.084,4,0.075,5,0.792,6,1.113,7,1.09,8,1.045,9,0.075,11,0.982,16,0.961,17,1.387,18,1.351,19,0.982,20,0.828,21,0.965,23,0.965,25,0.093,37,0.566,40,0.008,41,0.528,42,0.136,53,0.161,54,0.341,56,1.002,57,1.392,60,0.102,61,0.013,86,1.374,93,2.34,95,1.09,96,1.279,97,1.253,98,0.828,99,1.703,100,1.09,101,1.974,102,0.982,103,0.864,104,1.09,105,1.334,106,1.002,107,1.09,108,1.002,109,0.982,110,1.09,111,1.002,112,1.09,113,0.941,114,0.961,115,0.974,116,0.982,117,0.941,118,1.185,119,1.631,120,0.961,121,0.075,122,0.982,123,0.993,124,1.002,125,1.599,126,1.646,127,1.09,128,0.961,129,1.09,130,1.002,131,1.09,132,1.002,133,1.09,134,0.982,135,1.09,136,0.982,137,1.09,138,0.692,139,1.09,140,0.982,141,0.476,142,1.09,143,1.002,144,1.09,145,1.002,146,1.631,147,1.002,148,1.09,149,1.002,150,1.631,151,1.002,152,1.09,153,1.024,154,1.09,155,0.961,156,1.09,157,1.002,158,1.09,159,1.045,160,0.921,161,1.09,162,1.002,163,1.392,164,1.451,165,1.002,166,1.09,167,0.961,168,0.558,169,1.09,170,0.982,171,1.002,172,1.09,173,1.002,174,1.09,175,0.982,176,0.982,177,0.961,178,1.09,179,0.982,180,1.09,181,0.921,182,0.775,183,0.961,184,1.09,185,0.961,186,1.253,187,0.982,188,1.002,189,0.634,190,0.941,191,0.775,192,1.002,193,1.024,194,1.09,195,1.002,196,0.921,197,1.09,198,1.002,199,1.09,200,0.941,201,1.002,202,1.002,203,0.921,204,1.09,205,1.002,206,0.708,207,0.846,208,0.941,209,0.982,210,1.09,211,0.961,212,1.09,213,0.961,214,1.09,215,0.941,216,1.09,217,0.941,218,1.09,219,0.941,220,1.024,221,1.09,222,0.006,223,0.006,226,0.438,267,1.801,277,1.891,371,1.811,431,2.681,574,3.703,641,3.476,725,2.456,726,1.701,753,1.435,766,2.397,790,1.801,793,2.351,811,2.134,816,1.996,833,4.228,1055,1.869,1092,1.64,1093,4.014,1166,1.801,1183,3.446,1187,2.134,1522,3.569,1529,2.517,1619,2.042,1635,6.536,1636,5.98,1637,4.369,1638,3.85,1639,6.567,1640,4.164,1641,5.564,1642,7.381,1643,6.567,1644,7.381,1645,4.933,1646,6.567,1647,4.933,1648,6.567,1649,3.333,1650,4.655,1651,5.815,1652,6.567,1653,6.567,1654,5.815,1655,3.228,1656,3.719,1657,3.719,1658,4.933,1659,4.933,1660,4.369,1661,3.719,1662,3.154,1663,4.369]],["title/classes/DataNode.html",[61,0.011,785,2.214]],["body/classes/DataNode.html",[3,0.038,4,0.034,9,0.034,14,0.922,15,1.264,19,0.922,25,0.043,26,0.447,27,0.876,30,0.491,37,0.661,39,0.788,40,0.008,41,0.344,42,0.164,43,0.506,45,0.95,46,0.925,50,0.865,51,0.923,53,0.144,60,0.122,61,0.017,63,1.08,64,1.264,66,1.108,72,1.479,78,1.993,88,2.982,92,0.886,96,0.714,103,0.395,109,0.922,115,0.436,121,0.034,126,1.264,168,0.85,182,0.923,189,0.668,207,0.794,222,0.003,223,0.003,226,0.325,227,0.985,228,3.422,234,1.532,235,2.609,246,1.832,248,0.822,260,0.991,293,1.018,315,1.303,317,2.281,371,1.882,459,1.043,485,1.441,523,2.613,537,0.577,538,2.609,545,2.083,547,1.775,548,1.338,549,3.036,557,1.043,563,1.271,567,1.225,569,1.013,572,1.97,573,2.519,574,3.742,575,1.441,595,1,602,1.382,608,0.845,616,1.699,617,2.613,621,2.764,622,0.785,623,2.963,641,2.475,659,2.764,675,2.613,691,2.337,705,0.933,720,0.823,724,1.699,726,1.068,752,1.225,753,2.445,757,2.599,761,3.413,762,3.507,763,1.822,767,2.764,769,2.674,772,3.55,774,1.699,776,4.746,777,1.322,778,2.729,780,3.656,785,3.943,787,3.043,791,0.716,795,1.513,803,1.822,811,2.493,816,1.114,818,1.993,819,2.519,820,1.074,826,1.013,832,0.933,833,2.624,840,1.518,843,3.444,876,3.719,887,1.074,889,2.083,906,0.73,923,1.225,941,2.519,947,3.444,955,2.717,972,1.441,991,2.461,1005,1.405,1021,0.933,1024,3.313,1033,0.732,1043,1.322,1055,1.969,1063,1.322,1088,2.067,1114,1.441,1122,3.446,1200,2.902,1232,2.609,1234,1.074,1236,1.225,1241,1.013,1245,0.985,1302,1.378,1359,1.696,1417,2.344,1457,3.13,1460,1.822,1466,1.271,1473,3.193,1475,2.717,1478,2.599,1483,2.717,1485,3.673,1497,2.15,1513,4.455,1529,1.405,1559,1.225,1594,1.993,1602,2.599,1612,1.513,1615,3.607,1617,1.322,1638,2.15,1649,1.144,1664,1.513,1665,2.97,1666,3.55,1667,6.037,1668,5.1,1669,2.97,1670,5.793,1671,2.97,1672,3.754,1673,3.754,1674,2.97,1675,2.97,1676,2.97,1677,2.97,1678,3.111,1679,2.97,1680,2.97,1681,3.754,1682,3.413,1683,2.97,1684,4.428,1685,4.759,1686,4.759,1687,3.247,1688,5.1,1689,3.247,1690,3.754,1691,4.164,1692,7.35,1693,2.254,1694,2.254,1695,2.97,1696,4.759,1697,2.764,1698,2.254,1699,2.254,1700,2.254,1701,4.4,1702,3.413,1703,2.97,1704,3.754,1705,2.97,1706,2.97,1707,2.97,1708,2.97,1709,2.254,1710,2.97,1711,1.996,1712,2.254,1713,2.254,1714,2.97,1715,2.254,1716,2.764,1717,3.754,1718,2.97,1719,2.97,1720,2.254,1721,2.97,1722,2.97,1723,2.613,1724,2.97,1725,1.996,1726,2.254,1727,5.541,1728,4.325,1729,1.378,1730,2.15,1731,1.225,1732,1.378,1733,3.263,1734,1.699,1735,2.599,1736,1.598,1737,1.598,1738,5.002,1739,2.599,1740,2.599,1741,1.441,1742,3.285,1743,1.598,1744,1.826,1745,1.826,1746,1.826,1747,2.252,1748,2.461,1749,1.598,1750,1.699,1751,1.598,1752,1.144,1753,1.826,1754,1.826,1755,2.97,1756,2.764,1757,1.699,1758,3.754,1759,3.754,1760,1.826,1761,1.826,1762,2.067,1763,2.97,1764,1.826,1765,1.513,1766,1.826,1767,1.826,1768,1.699,1769,2.97,1770,1.826,1771,2.764,1772,1.826,1773,1.826,1774,2.344,1775,1.826,1776,1.826,1777,1.826,1778,1.826,1779,1.826,1780,1.598,1781,1.108,1782,5.1,1783,3.698,1784,1.699,1785,3.754,1786,3.754,1787,1.699,1788,1.378,1789,6.215,1790,1.826,1791,1.826,1792,1.826,1793,4.325,1794,1.826,1795,2.97,1796,1.826,1797,3.754,1798,2.97,1799,3.754,1800,1.826,1801,3.754,1802,1.826,1803,4.325,1804,1.826,1805,1.826,1806,1.826,1807,1.513,1808,1.826,1809,1.699,1810,1.441,1811,1.513,1812,1.322,1813,1.598,1814,1.826,1815,1.826,1816,3.754,1817,1.598,1818,1.826,1819,1.826,1820,2.209,1821,4.759,1822,1.826,1823,1.699,1824,1.699,1825,2.613,1826,1.826,1827,1.699,1828,2.344,1829,1.699,1830,1.826,1831,1.826,1832,4.325,1833,3.754,1834,3.493,1835,1.225,1836,1.699,1837,1.699,1838,1.699,1839,2.97,1840,3.754,1841,1.826,1842,1.826,1843,4.759,1844,1.826,1845,1.826,1846,2.241,1847,2.764,1848,1.826,1849,1.826,1850,1.826,1851,3.754,1852,1.699,1853,2.97,1854,1.826,1855,1.826,1856,3.754,1857,1.378,1858,1.826,1859,1.826,1860,1.826,1861,1.826,1862,1.826,1863,2.97,1864,1.826,1865,1.826,1866,2.97,1867,1.826,1868,1.826,1869,1.826,1870,1.826,1871,1.826,1872,2.599,1873,2.764,1874,2.97,1875,1.826,1876,1.322,1877,1.826,1878,2.97,1879,1.183,1880,1.826,1881,1.699,1882,1.513,1883,2.963,1884,2.15,1885,3.368,1886,1.826,1887,1.826,1888,1.826,1889,1.826,1890,1.699,1891,1.826,1892,1.826,1893,1.826,1894,1.826,1895,1.826,1896,1.826,1897,1.826,1898,1.826,1899,1.826,1900,1.826,1901,1.826,1902,1.826,1903,1.826,1904,2.963,1905,1.826,1906,4.759,1907,1.826,1908,2.97,1909,1.826,1910,1.826,1911,1.699,1912,2.764,1913,1.699,1914,1.322,1915,1.826,1916,1.826,1917,1.826,1918,1.826,1919,4.325,1920,3.754,1921,4.325,1922,3.754,1923,1.826,1924,1.826,1925,1.826,1926,4.759,1927,1.826,1928,1.826,1929,3.754,1930,3.754,1931,3.754,1932,3.754,1933,1.598,1934,3.493,1935,1.826,1936,1.826,1937,1.826,1938,3.493,1939,1.826,1940,2.599,1941,1.826,1942,1.826,1943,1.826,1944,1.826,1945,2.97,1946,1.826,1947,1.826,1948,1.441,1949,1.826,1950,1.699,1951,1.826,1952,1.826,1953,1.826,1954,1.826,1955,1.826,1956,1.826,1957,3.493,1958,1.826,1959,3.754,1960,3.754,1961,1.598,1962,1.826,1963,1.826,1964,1.826,1965,1.826,1966,1.826,1967,1.826,1968,1.826,1969,1.826,1970,1.826,1971,1.826,1972,1.826,1973,1.826,1974,1.826,1975,1.826,1976,1.826,1977,1.826,1978,1.699,1979,1.699,1980,1.441,1981,1.699,1982,1.441,1983,3.285,1984,1.598,1985,1.826,1986,2.344,1987,1.598,1988,1.598,1989,1.826,1990,1.378,1991,1.826,1992,1.826,1993,1.826,1994,1.699,1995,2.241,1996,1.826,1997,2.764,1998,1.826,1999,1.826,2000,1.699,2001,1.826,2002,1.826,2003,1.826,2004,1.826,2005,1.699,2006,1.826,2007,1.826,2008,1.826,2009,1.826,2010,1.826,2011,1.826,2012,2.344,2013,1.826,2014,1.598,2015,1.826,2016,1.271,2017,1.271,2018,1.826,2019,1.826,2020,1.826,2021,1.826,2022,1.826,2023,1.826]],["title/classes/DataQuery.html",[61,0.011,1667,3.192]],["body/classes/DataQuery.html",[3,0.037,4,0.033,9,0.033,14,0.708,15,0.97,19,1.147,25,0.041,26,0.437,27,0.584,30,0.477,37,0.694,39,0.8,40,0.008,41,0.337,42,0.165,43,0.497,45,0.978,46,0.909,50,0.844,51,0.905,53,0.142,60,0.12,61,0.016,63,1.067,64,0.97,66,1.068,72,1.435,78,1.934,88,2.651,92,0.854,96,0.693,103,0.623,109,1.039,115,0.423,121,0.054,126,1.247,168,0.821,182,0.905,189,0.658,207,0.775,222,0.003,223,0.003,226,0.316,227,0.95,228,3.364,234,1.544,235,2.68,246,1.819,248,0.839,260,0.984,293,0.862,315,1.306,317,2.257,371,1.863,459,1.005,485,1.389,523,2.945,537,0.556,538,2.568,545,1.599,547,2.057,548,1.337,549,3.118,557,1.005,563,2.007,567,1.934,569,0.977,572,1.513,573,3.132,574,3.845,575,1.414,595,1.232,602,1.456,608,0.844,616,1.638,617,3.25,621,3.406,622,0.756,623,3.956,641,2.433,659,2.682,675,2.945,691,2.311,705,0.9,720,0.793,724,1.638,726,0.82,752,1.181,753,2.428,757,3.203,761,3.339,762,3.691,763,1.399,767,2.682,769,2.315,772,3.684,774,2.682,776,5.474,777,1.274,778,2.668,780,3.739,785,3.732,787,3.079,791,0.69,795,1.459,803,1.399,811,2.467,816,1.081,818,1.934,819,2.839,820,1.696,826,0.977,832,0.9,833,2.833,840,1.473,843,3.629,876,3.979,887,1.036,889,2.031,906,0.708,923,1.181,941,1.934,947,3.629,955,2.649,972,1.389,991,2.389,1005,1.364,1021,1.473,1024,3.49,1033,0.706,1043,1.274,1055,2.067,1063,1.274,1088,2.007,1114,1.389,1122,3.428,1200,2.839,1232,2.582,1234,1.036,1236,1.934,1241,0.977,1245,0.95,1302,1.328,1359,3.723,1417,2.275,1457,2.086,1460,1.776,1466,1.225,1473,3.132,1475,2.649,1478,2.522,1483,2.649,1485,3.778,1497,2.086,1513,4.386,1529,1.732,1559,1.181,1594,1.934,1602,2.522,1612,1.459,1615,4.043,1617,1.274,1638,2.649,1649,1.103,1664,1.459,1665,1.76,1666,3.684,1667,5.636,1668,4.231,1669,1.76,1670,4.668,1671,1.76,1672,2.883,1673,2.883,1674,1.76,1675,1.76,1676,1.76,1677,1.76,1678,2.389,1679,1.76,1680,1.76,1681,2.883,1682,2.889,1683,1.76,1684,4.344,1685,4.668,1686,5.013,1687,3.151,1688,5.524,1689,3.151,1690,4.231,1691,4.387,1695,2.883,1696,5.013,1697,2.682,1701,4.424,1702,3.684,1703,2.883,1704,4.231,1705,2.883,1706,2.883,1707,2.883,1708,2.883,1710,2.883,1711,1.924,1714,2.883,1716,2.682,1717,4.231,1718,2.883,1719,2.883,1721,2.883,1722,2.883,1723,2.945,1724,2.883,1725,1.924,1727,5.824,1728,5.013,1729,1.328,1730,2.086,1731,1.181,1732,1.328,1733,3.193,1734,1.638,1735,2.522,1736,1.54,1737,1.54,1738,4.925,1739,2.522,1740,2.522,1741,1.389,1742,3.203,1743,1.54,1744,2.883,1745,2.883,1746,2.883,1747,2.505,1748,3.507,1749,2.522,1750,2.682,1751,2.522,1752,1.806,1753,2.883,1754,2.883,1755,4.231,1756,3.937,1757,2.682,1758,3.661,1759,3.661,1760,2.883,1761,2.883,1762,2.945,1763,4.668,1764,2.883,1765,2.389,1766,2.883,1767,2.883,1768,2.682,1769,3.661,1770,2.883,1771,3.406,1772,2.883,1773,2.883,1774,2.889,1775,2.883,1776,1.76,1777,1.76,1778,2.883,1779,2.883,1780,2.522,1781,1.749,1782,5.013,1783,3.732,1784,1.638,1785,3.661,1786,3.661,1787,1.638,1788,1.328,1789,6.15,1790,1.76,1791,1.76,1792,1.76,1793,4.231,1794,1.76,1795,3.661,1796,2.883,1797,3.661,1798,2.883,1799,3.661,1800,1.76,1801,4.231,1802,1.76,1803,4.231,1804,1.76,1805,1.76,1806,1.76,1807,1.459,1808,1.76,1809,1.638,1810,1.389,1811,1.459,1812,1.274,1813,1.54,1814,1.76,1815,1.76,1816,3.661,1817,1.54,1818,1.76,1819,1.76,1820,2.154,1821,4.668,1822,1.76,1823,1.638,1824,1.638,1825,2.548,1826,1.76,1827,1.638,1828,2.889,1829,1.638,1830,1.76,1831,1.76,1832,4.231,1833,3.661,1834,3.406,1835,1.181,1836,1.638,1837,1.638,1838,1.638,1839,2.883,1840,3.661,1841,1.76,1842,1.76,1843,4.668,1844,1.76,1845,1.76,1846,2.175,1847,2.682,1848,1.76,1849,2.883,1850,2.883,1851,3.661,1852,1.638,1853,2.883,1854,1.76,1855,1.76,1856,3.661,1857,1.328,1858,1.76,1859,1.76,1860,1.76,1861,1.76,1862,1.76,1863,2.883,1864,1.76,1865,1.76,1866,2.883,1867,1.76,1868,1.76,1869,1.76,1870,3.661,1871,1.76,1872,2.522,1873,2.682,1874,2.883,1875,1.76,1876,1.274,1877,1.76,1878,2.883,1879,1.14,1880,1.76,1881,1.638,1882,1.459,1883,2.889,1884,2.086,1885,3.316,1886,1.76,1887,1.76,1888,1.76,1889,1.76,1890,1.638,1891,1.76,1892,1.76,1893,1.76,1894,1.76,1895,1.76,1896,1.76,1897,1.76,1898,1.76,1899,1.76,1900,1.76,1901,1.76,1902,1.76,1903,1.76,1904,2.889,1905,1.76,1906,4.668,1907,1.76,1908,2.883,1909,1.76,1910,1.76,1911,1.638,1912,2.682,1913,1.638,1914,1.274,1915,1.76,1916,1.76,1917,1.76,1918,1.76,1919,4.231,1920,3.661,1921,4.231,1922,3.661,1923,1.76,1924,1.76,1925,1.76,1926,4.668,1927,1.76,1928,1.76,1929,3.661,1930,3.661,1931,3.661,1932,3.661,1933,1.54,1934,3.406,1935,1.76,1936,1.76,1937,1.76,1938,3.406,1939,1.76,1940,2.522,1941,1.76,1942,1.76,1943,1.76,1944,1.76,1945,2.883,1946,1.76,1947,1.76,1948,1.389,1949,1.76,1950,1.638,1951,1.76,1952,1.76,1953,1.76,1954,1.76,1955,1.76,1956,1.76,1957,3.406,1958,1.76,1959,3.661,1960,3.661,1961,1.54,1962,1.76,1963,1.76,1964,1.76,1965,1.76,1966,1.76,1967,1.76,1968,1.76,1969,1.76,1970,1.76,1971,1.76,1972,1.76,1973,1.76,1974,1.76,1975,1.76,1976,1.76,1977,1.76,1978,1.638,1979,1.638,1980,1.389,1981,1.638,1982,1.389,1983,3.203,1984,1.54,1985,1.76,1986,2.275,1987,1.54,1988,1.54,1989,1.76,1990,1.328,1991,1.76,1992,1.76,1993,1.76,1994,1.638,1995,2.175,1996,1.76,1997,2.682,1998,1.76,1999,1.76,2000,1.638,2001,1.76,2002,1.76,2003,1.76,2004,1.76,2005,1.638,2006,1.76,2007,1.76,2008,1.76,2009,1.76,2010,1.76,2011,1.76,2012,2.275,2013,1.76,2014,1.54,2015,1.76,2016,1.225,2017,1.225,2018,1.76,2019,1.76,2020,1.76,2021,1.76,2022,1.76,2023,1.76,2024,2.173,2025,2.173,2026,2.173,2027,2.173,2028,2.173,2029,2.173,2030,2.173,2031,2.173,2032,2.173,2033,2.173,2034,2.173,2035,2.173,2036,2.173,2037,2.173,2038,2.173,2039,2.173,2040,2.173,2041,2.173,2042,2.173]],["title/injectables/DataService.html",[532,1.082,769,1.685]],["body/injectables/DataService.html",[3,0.091,4,0.081,9,0.081,17,1.101,19,1.375,25,0.101,26,0.578,30,0.926,33,0.992,37,0.724,39,0.949,40,0.008,41,0.523,42,0.186,43,0.699,45,0.991,46,0.783,50,0.996,53,0.206,54,0.368,60,0.111,61,0.014,63,0.783,182,0.837,189,0.515,222,0.006,223,0.006,226,0.473,227,3.544,231,2.716,234,1.506,248,1.041,260,1.041,281,1.656,371,2.112,532,1.66,545,3.105,548,1.395,553,2.466,555,2.33,608,0.72,623,4.418,646,2.207,691,2.147,725,1.994,753,2.549,762,3.645,769,2.584,778,2.928,785,4.13,790,1.946,833,4.13,834,4.117,840,3.564,876,3.866,1024,3.006,1122,2.716,1232,1.813,1306,4.224,1359,3.983,1460,3.529,1559,3.756,1733,4.958,1734,4.019,1747,2.044,1783,3.397,1873,4.019,1885,2.706,1904,4.418,1995,4.224,1997,4.019,2000,5.209,2043,4.721,2044,5.598,2045,6.91,2046,6.91,2047,4.639,2048,4.418,2049,6.91,2050,6.91,2051,6.119,2052,7.182,2053,8.111,2054,6.91,2055,6.825,2056,6.91,2057,6.91,2058,6.91,2059,5.331,2060,5.331,2061,6.91,2062,5.331,2063,6.91,2064,6.212,2065,3.579,2066,3.579,2067,3.126,2068,5.331,2069,7.667,2070,5.331,2071,5.331,2072,5.331,2073,5.331,2074,5.331,2075,3.408,2076,5.331,2077,5.331,2078,5.331,2079,6.91,2080,5.331,2081,5.331,2082,4.319,2083,5.331,2084,5.331,2085,6.91,2086,5.331,2087,5.331,2088,5.331,2089,5.331,2090,5.331,2091,5.331,2092,5.331]],["title/interfaces/DialogData.html",[121,0.068,1552,2.879]],["body/interfaces/DialogData.html",[0,0.151,2,1.182,3,0.088,4,0.078,9,0.078,13,2.081,14,1.027,15,1.845,17,0.741,18,0.724,20,1.395,21,0.758,22,2.194,23,0.758,24,2.194,25,0.097,26,0.566,27,1.315,28,2.255,29,3.814,35,2.8,36,2.956,40,0.008,42,0.166,46,1.108,49,0.539,53,0.223,54,0.357,55,1.568,59,2.319,60,0.14,61,0.013,62,1.796,63,1.176,64,1.407,70,3.55,89,3.55,115,0.988,121,0.114,122,1.027,123,0.981,159,1.093,185,1.005,222,0.006,223,0.006,226,0.458,234,1.315,235,2.028,244,2.387,246,1.799,248,0.804,249,3.209,250,3.325,253,2.081,254,2.387,255,1.93,256,2.319,260,1.014,284,2.397,310,3.491,315,1.212,371,1.66,383,3.026,411,2.708,412,2.537,427,3.026,466,2.805,516,3.966,529,1.407,548,0.811,557,3.491,561,2.387,562,3.299,602,1.214,611,2.081,641,2.028,719,2.619,727,3.154,739,4.18,753,1.501,769,2.822,778,2.958,790,2.469,791,2.149,792,2.136,811,2.198,814,2.619,816,1.568,829,2.255,832,2.8,835,1.677,867,2.602,884,3.299,972,5.121,984,2.319,985,2.593,995,3.814,1001,3.299,1002,2.136,1003,2.028,1004,2.136,1017,3.299,1019,3.299,1020,3.464,1022,3.299,1023,3.154,1024,2.91,1033,1.677,1034,3.677,1093,3.154,1206,1.884,1228,2.319,1284,3.55,1304,5.48,1397,2.91,1473,3.677,1503,3.658,1535,3.658,1543,5.349,1544,3.658,1549,5.99,1550,4.569,1551,4.569,1552,4.825,1555,4.569,1557,4.569,1559,4.353,1560,4.569,1561,4.795,1562,4.569,1564,5.48,1565,2.8,1566,4.325,1567,3.299,1569,5.48,1570,4.18,1571,3.658,1572,2.619,1573,4.569,1574,4.569,1575,4.569,1576,4.569,1577,4.569,1578,5.99,1579,5.99,1580,5.48,1581,3.89,1582,3.658,1583,4.569,1584,4.569,1585,4.569,1586,4.18,1587,4.569,1588,4.569,1589,4.569,1590,4.569,1591,4.569,1592,4.569,1593,4.569,1594,2.805,1595,4.569,1596,4.569,1597,4.569,1598,4.569,1599,4.569,1600,4.795,1601,4.569,1602,3.658,1603,4.569,1604,3.026,1605,4.569,1606,4.569,1607,4.569,1608,4.569,1609,3.89,1610,4.569,1611,5.099,1612,4.541,1613,5.48,1614,2.91]],["title/interfaces/DialogData-1.html",[121,0.057,816,1.139,1552,2.396]],["body/interfaces/DialogData-1.html",[0,0.149,3,0.096,4,0.086,9,0.086,13,2.288,14,1.129,15,1.961,17,0.815,18,0.796,20,1.468,21,0.833,22,2.412,23,0.833,24,2.412,25,0.107,26,0.602,27,0.931,28,3.142,35,2.977,36,2.479,40,0.008,42,0.182,43,0.715,46,1.16,49,0.649,53,0.194,54,0.392,55,1.724,60,0.149,61,0.014,62,1.975,64,1.547,88,2.88,121,0.086,185,1.105,186,1.506,189,0.845,196,1.708,206,1.134,222,0.006,223,0.006,234,1.18,239,3.199,244,2.625,248,0.855,249,3.057,253,2.288,255,2.122,256,2.55,259,3.825,260,0.674,284,2.78,293,1.082,315,0.911,317,1.687,371,1.764,427,3.326,529,1.547,608,0.533,795,3.809,826,3.548,839,5.131,865,2.977,925,2.978,1019,3.627,1021,2.977,1022,5.476,1171,3.427,1234,2.704,1300,4.277,1415,3.908,1552,5.047,1581,6.457,1582,6.301,1609,4.277,1661,4.277,1810,4.597,1820,2.704,1884,4.216,2093,4.277,2094,6.457,2095,6.991,2096,5.349,2097,6.368,2098,5.3,2099,6.991,2100,6.368,2101,6.396,2102,6.368,2103,4.596,2104,5.024,2105,5.024,2106,4.596,2107,5.024,2108,4.021,2109,5.024,2110,5.024,2111,5.024,2112,5.024,2113,4.596,2114,5.024,2115,3.468,2116,5.024,2117,2.88,2118,5.024,2119,5.024,2120,5.024,2121,5.024,2122,3.809]],["title/interfaces/FilterSelection.html",[121,0.068,2123,2.879]],["body/interfaces/FilterSelection.html",[0,0.151,3,0.1,4,0.089,9,0.089,14,1.165,15,2.001,17,0.841,18,0.822,21,0.86,23,0.86,25,0.111,26,0.614,27,0.961,40,0.008,41,0.378,42,0.166,49,0.6,50,1.094,51,0.92,53,0.212,54,0.405,60,0.152,61,0.015,63,1.078,64,1.597,97,1.117,118,1.389,121,0.111,141,0.565,155,1.141,196,1.568,222,0.006,223,0.006,231,2.884,246,1.588,248,0.872,260,0.696,293,1.117,315,0.94,318,2.879,371,1.437,389,2.632,431,3.183,515,1.82,529,1.597,537,1.499,539,3.932,540,2.424,544,2.632,547,2.439,556,3.85,576,3.58,608,0.55,615,3.303,617,3.303,680,4.925,684,3.434,808,3.303,811,1.903,821,3.932,903,3.303,1033,1.903,1092,1.947,1245,2.559,1395,3.434,1454,4.262,1467,3.744,1485,2.559,1519,4.151,1565,3.78,1857,3.58,2108,4.151,2117,2.973,2123,5.368,2124,4.151,2125,3.58,2126,4.151,2127,5.923,2128,6.01,2129,5.943,2130,5.943,2131,5.943,2132,6.49,2133,4.415,2134,4.925,2135,4.744,2136,4.735,2137,3.932,2138,4.744,2139,3.744,2140,5.678,2141,4.744,2142,4.744,2143,4.744,2144,4.744,2145,4.744,2146,4.415,2147,5.53,2148,4.744,2149,3.744,2150,4.744,2151,4.744,2152,3.58,2153,4.744,2154,4.744,2155,4.415,2156,3.932,2157,5.378,2158,4.415,2159,4.744,2160,4.744,2161,4.744,2162,4.744,2163,4.744,2164,4.744,2165,4.415,2166,4.744,2167,4.744,2168,4.744,2169,4.744,2170,5.943,2171,4.744,2172,4.744,2173,4.744,2174,4.151,2175,4.925]],["title/interfaces/FilterState.html",[121,0.068,2176,3.192]],["body/interfaces/FilterState.html",[3,0.12,4,0.107,9,0.107,25,0.134,26,0.688,40,0.008,42,0.186,53,0.202,60,0.171,118,1.136,121,0.107,222,0.007,223,0.007,529,1.93,541,2.014,1206,2.583,1783,3.478,2123,5.722,2125,4.325,2176,5.829,2177,5.732,2178,7.058,2179,7.925,2180,5.732,2181,7.282,2182,7.075,2183,7.075]],["title/components/FrameComponent.html",[0,0.085,128,0.877]],["body/components/FrameComponent.html",[0,0.158,1,0.852,2,0.787,3,0.071,4,0.064,5,1.089,6,0.946,7,0.927,8,0.889,9,0.064,11,0.834,16,0.817,17,1.378,18,1.342,19,0.834,20,0.703,21,0.863,23,0.863,25,0.079,26,0.492,27,1.402,30,0.787,33,0.602,37,0.71,39,0.648,40,0.008,41,0.531,42,0.153,43,0.506,45,0.664,46,0.863,50,1.267,51,1.216,53,0.202,54,0.29,56,0.852,57,1.245,60,0.087,61,0.011,69,4.704,86,1.637,93,2.62,95,0.927,96,1.145,97,1.121,98,0.703,99,1.591,100,0.927,101,1.913,102,0.834,103,0.734,104,1.08,105,1.194,106,0.852,107,0.927,108,0.852,109,0.834,110,0.927,111,0.852,112,0.927,113,0.8,114,0.817,115,0.92,116,0.834,117,0.8,118,0.944,119,1.499,120,0.817,121,0.064,122,0.834,123,0.973,124,0.852,125,0.852,126,0.767,127,0.927,128,1.432,129,0.927,130,0.852,131,0.927,132,0.852,133,0.927,134,0.834,135,0.927,136,0.834,137,0.927,138,0.588,139,0.927,140,0.834,141,0.405,142,0.927,143,0.852,144,0.927,145,0.852,146,1.499,147,0.852,148,0.927,149,0.852,150,1.499,151,0.852,152,0.927,153,0.87,154,0.927,155,0.817,156,0.927,157,0.852,158,0.927,159,0.889,160,0.783,161,0.927,162,0.852,163,1.245,164,1.298,165,0.852,166,0.927,167,0.817,168,0.474,169,0.927,170,0.834,171,0.852,172,0.927,173,0.852,174,0.927,175,0.834,176,0.834,177,0.817,178,0.927,179,0.834,180,0.927,181,0.783,182,0.659,183,0.817,184,0.927,185,0.817,186,1.121,187,0.834,188,0.852,189,0.567,190,0.8,191,0.659,192,0.852,193,1.71,194,0.927,195,0.852,196,0.783,197,0.927,198,0.852,199,0.927,200,0.8,201,0.852,202,0.852,203,1.446,204,0.927,205,0.852,206,1.183,207,0.719,208,0.8,209,0.834,210,0.927,211,0.817,212,0.927,213,0.817,214,0.927,215,0.8,216,0.927,217,0.8,218,0.927,219,0.8,220,0.87,221,0.927,222,0.005,223,0.005,226,0.372,248,0.698,267,1.531,268,2.476,274,1.94,276,1.783,281,1.303,293,0.8,315,0.944,317,1.247,355,2.972,499,1.531,537,1.073,540,1.736,547,2.255,552,3.194,553,2.718,556,4.062,569,2.641,572,2.498,599,2.279,602,1.383,608,0.394,611,2.965,617,3.314,684,2.459,691,1.303,705,2.433,816,2.352,822,5.204,901,4.165,906,1.169,963,5.956,1056,2.433,1077,4.165,1092,2.444,1131,5.542,1166,1.531,1187,1.362,1189,3.126,1192,3.757,1193,3.56,1237,2.889,1245,2.568,1640,3.504,1655,3.335,1780,4.165,2136,4.524,2149,4.949,2184,3.713,2185,5.876,2186,5.876,2187,5.876,2188,4.761,2189,5.876,2190,7.352,2191,2.983,2192,7.352,2193,5.876,2194,5.204,2195,5.876,2196,8.023,2197,4.761,2198,5.876,2199,5.876,2200,4.43,2201,5.204,2202,5.876,2203,6.784,2204,5.876,2205,5.496,2206,6.784,2207,6.784,2208,5.876,2209,7.352,2210,3.713,2211,6.048,2212,4.193,2213,5.876,2214,7.352,2215,4.193,2216,5.876,2217,4.193,2218,5.204,2219,4.761,2220,5.204,2221,4.761,2222,5.204,2223,5.114,2224,4.193,2225,5.876,2226,4.193,2227,4.193,2228,4.193,2229,3.161,2230,3.161,2231,4.43,2232,5.876,2233,4.193,2234,4.193,2235,4.193,2236,4.193,2237,4.193,2238,4.193,2239,7.352,2240,8.238,2241,5.114,2242,3.314,2243,2.681,2244,4.193,2245,3.713,2246,3.397,2247,4.193,2248,4.193,2249,5.876,2250,4.193,2251,3.397,2252,2.972]],["title/classes/GraphComponent.html",[61,0.011,1202,2.147]],["body/classes/GraphComponent.html",[0,0.16,2,1.122,3,0.07,4,0.063,9,0.063,25,0.078,26,0.487,30,0.78,37,0.664,39,0.641,40,0.008,41,0.54,42,0.179,43,0.501,45,0.826,49,0.522,53,0.143,60,0.152,61,0.019,121,0.117,123,0.937,138,0.945,141,0.771,189,0.399,222,0.005,223,0.005,226,0.367,231,3.49,234,1.398,248,0.975,260,1.074,310,2.692,312,2.032,515,2.809,529,2.452,541,1.177,548,1.371,572,1.758,575,2.161,595,1.993,608,0.827,635,1.858,691,2.777,705,2.787,720,1.509,728,3.745,752,4.553,753,1.693,808,2.331,862,4.912,864,2.424,889,2.615,956,2.247,1005,1.585,1055,2.274,1122,1.625,1202,3.67,1203,3.209,1205,3.807,1206,2.811,1232,2.29,1233,1.913,1241,1.858,1252,2.17,1415,2.247,1561,4.341,1567,2.643,1572,3.417,1604,2.424,1614,3.281,1747,1.585,1752,3.417,1788,4.882,1820,1.971,1879,3.835,2016,2.331,2017,3.796,2047,2.776,2048,2.643,2253,4.683,2254,2.643,2255,4.714,2256,5.152,2257,4.134,2258,4.134,2259,4.134,2260,4.124,2261,5.718,2262,4.134,2263,4.905,2264,5.509,2265,4.124,2266,4.134,2267,4.134,2268,2.099,2269,2.931,2270,4.124,2271,2.931,2272,2.931,2273,5.458,2274,2.643,2275,2.776,2276,5.17,2277,5.661,2278,4.52,2279,2.776,2280,2.643,2281,2.776,2282,4.341,2283,5.179,2284,2.776,2285,5.17,2286,5.458,2287,5.106,2288,2.527,2289,2.643,2290,5.17,2291,4.115,2292,3.72,2293,2.931,2294,2.776,2295,2.931,2296,3.906,2297,2.776,2298,2.643,2299,2.931,2300,2.931,2301,2.931,2302,2.931,2303,2.931,2304,2.776,2305,2.931,2306,2.527,2307,2.931,2308,2.931,2309,2.931,2310,2.931,2311,2.931,2312,2.931,2313,4.124,2314,5.458,2315,4.52,2316,3.72,2317,3.906,2318,2.931,2319,3.557,2320,2.931,2321,2.931,2322,2.931,2323,2.931,2324,2.931,2325,2.931,2326,2.931,2327,2.931,2328,2.931,2329,4.124,2330,4.772,2331,4.772,2332,4.772,2333,2.331,2334,2.931,2335,2.931,2336,2.331,2337,2.331,2338,2.424,2339,4.52,2340,5.384,2341,3.906,2342,4.772,2343,4.124,2344,2.931,2345,2.931,2346,2.931,2347,2.931,2348,4.124,2349,2.931,2350,2.931,2351,2.931,2352,2.931,2353,2.931,2354,2.931,2355,2.931,2356,2.931,2357,2.931,2358,2.931,2359,2.931,2360,2.931,2361,2.931,2362,2.931,2363,2.931,2364,4.52,2365,2.643,2366,4.124,2367,4.124,2368,2.931,2369,2.931,2370,2.931,2371,2.931,2372,2.931,2373,2.931,2374,2.931,2375,2.931,2376,4.124,2377,2.931,2378,2.931,2379,2.032,2380,2.776,2381,2.931,2382,2.776,2383,2.643,2384,4.772,2385,2.931,2386,2.931,2387,2.931,2388,2.931,2389,2.643,2390,2.931,2391,2.931,2392,2.931,2393,2.931,2394,2.931,2395,2.931,2396,2.931,2397,2.931]],["title/interfaces/GraphData.html",[121,0.068,2282,2.448]],["body/interfaces/GraphData.html",[0,0.156,2,1.174,3,0.072,4,0.064,9,0.064,25,0.08,26,0.494,40,0.008,41,0.475,42,0.182,45,0.667,49,0.487,53,0.145,60,0.153,61,0.019,121,0.118,123,0.941,138,1.035,141,0.776,189,0.407,222,0.005,223,0.005,226,0.374,231,3.444,234,1.423,248,0.981,260,1.077,310,2.731,312,2.075,515,2.786,529,2.503,541,1.202,548,1.344,572,1.795,575,2.169,595,2.011,608,0.83,635,1.897,691,2.841,705,2.818,728,3.58,752,4.577,753,1.717,808,2.38,862,4.549,864,2.475,889,2.653,956,2.294,1005,1.618,1055,2.289,1122,1.659,1202,3.245,1203,3.245,1205,2.012,1206,2.832,1232,2.316,1233,1.953,1241,1.897,1252,2.215,1415,2.294,1561,4.37,1567,2.698,1572,3.456,1604,2.475,1614,3.329,1747,1.618,1752,3.742,1788,4.915,1820,2.012,1879,3.869,2016,2.38,2017,3.839,2047,2.834,2048,2.698,2253,2.475,2254,2.698,2260,2.992,2261,4.95,2263,4.571,2264,5.398,2265,2.992,2268,2.142,2269,2.992,2270,4.184,2271,2.992,2272,2.992,2273,5.85,2274,2.698,2275,2.834,2276,5.209,2277,5.699,2278,4.571,2279,2.834,2280,3.774,2281,3.963,2282,4.486,2283,5.85,2284,2.834,2285,5.654,2286,5.969,2287,5.384,2288,2.58,2289,2.698,2290,5.209,2291,4.161,2292,3.774,2293,2.992,2294,2.834,2295,2.992,2296,3.963,2297,2.834,2298,2.698,2299,2.992,2300,2.992,2301,2.992,2302,2.992,2303,2.992,2304,2.834,2305,2.992,2306,2.58,2307,2.992,2308,2.992,2309,2.992,2310,2.992,2311,2.992,2312,2.992,2313,4.184,2314,5.5,2315,4.571,2316,3.774,2317,3.963,2318,2.992,2319,3.608,2320,2.992,2321,2.992,2322,2.992,2323,2.992,2324,2.992,2325,2.992,2326,2.992,2327,2.992,2328,2.992,2329,4.184,2330,4.826,2331,4.826,2332,4.826,2333,2.38,2334,2.992,2335,2.992,2336,2.38,2337,2.38,2338,2.475,2339,4.571,2340,5.403,2341,3.963,2342,4.826,2343,4.184,2344,2.992,2345,2.992,2346,2.992,2347,2.992,2348,4.184,2349,2.992,2350,2.992,2351,2.992,2352,2.992,2353,2.992,2354,2.992,2355,2.992,2356,2.992,2357,2.992,2358,2.992,2359,2.992,2360,2.992,2361,2.992,2362,2.992,2363,2.992,2364,4.571,2365,2.698,2366,4.184,2367,4.184,2368,2.992,2369,2.992,2370,2.992,2371,2.992,2372,2.992,2373,2.992,2374,2.992,2375,2.992,2376,4.184,2377,2.992,2378,2.992,2379,2.075,2380,2.834,2381,2.992,2382,2.834,2383,2.698,2384,4.826,2385,2.992,2386,2.992,2387,2.992,2388,2.992,2389,2.698,2390,2.992,2391,2.992,2392,2.992,2393,2.992,2394,2.992,2395,2.992,2396,2.992,2397,2.992]],["title/classes/GraphDataFactory.html",[61,0.011,2288,2.753]],["body/classes/GraphDataFactory.html",[0,0.158,2,1.122,3,0.07,4,0.063,9,0.063,25,0.078,30,0.778,37,0.501,39,0.64,40,0.008,41,0.515,42,0.174,43,0.501,45,0.825,49,0.481,53,0.143,60,0.152,61,0.019,121,0.117,123,0.946,138,1.024,141,0.792,189,0.398,222,0.005,223,0.005,226,0.366,231,3.489,234,1.445,248,0.974,260,1.074,310,2.687,312,2.028,515,2.776,529,2.452,541,1.174,548,1.337,572,1.754,575,2.16,595,1.99,608,0.827,635,2.611,691,2.735,705,2.783,720,1.506,728,3.743,752,4.626,753,1.69,808,2.326,862,4.511,864,3.406,889,2.611,956,2.242,1005,1.581,1055,2.272,1122,1.621,1202,3.205,1203,3.205,1205,3.205,1206,2.993,1232,2.287,1233,1.908,1241,1.854,1252,2.165,1415,2.242,1561,4.338,1567,2.637,1572,3.413,1604,3.406,1614,3.276,1747,2.227,1752,3.905,1788,4.878,1820,1.966,1879,3.831,2016,3.276,2017,3.792,2047,3.9,2048,2.637,2253,3.942,2254,2.637,2260,2.924,2261,4.9,2263,4.514,2264,5.358,2265,2.924,2268,2.094,2269,2.924,2270,5.173,2271,2.924,2272,2.924,2273,5.453,2274,2.637,2275,2.769,2276,5.165,2277,5.657,2278,4.514,2279,2.769,2280,2.637,2281,2.769,2282,4.785,2283,5.173,2284,2.769,2285,5.165,2286,5.453,2287,5.102,2288,3.551,2289,3.714,2290,5.621,2291,4.878,2292,4.666,2293,4.117,2294,3.9,2295,4.117,2296,4.9,2297,3.9,2298,3.714,2299,4.117,2300,2.924,2301,2.924,2302,2.924,2303,2.924,2304,3.9,2305,4.117,2306,3.551,2307,4.117,2308,2.924,2309,2.924,2310,2.924,2311,2.924,2312,2.924,2313,4.117,2314,5.453,2315,4.514,2316,3.714,2317,3.9,2318,2.924,2319,3.551,2320,2.924,2321,2.924,2322,2.924,2323,2.924,2324,2.924,2325,2.924,2326,2.924,2327,2.924,2328,2.924,2329,4.117,2330,4.766,2331,4.766,2332,4.766,2333,2.326,2334,2.924,2335,2.924,2336,2.326,2337,2.326,2338,2.418,2339,4.514,2340,5.382,2341,3.9,2342,4.766,2343,4.117,2344,2.924,2345,2.924,2346,2.924,2347,2.924,2348,4.117,2349,2.924,2350,2.924,2351,2.924,2352,2.924,2353,2.924,2354,2.924,2355,2.924,2356,2.924,2357,2.924,2358,2.924,2359,2.924,2360,2.924,2361,2.924,2362,2.924,2363,2.924,2364,4.514,2365,2.637,2366,4.117,2367,4.117,2368,2.924,2369,2.924,2370,2.924,2371,2.924,2372,2.924,2373,2.924,2374,2.924,2375,2.924,2376,4.117,2377,2.924,2378,2.924,2379,2.028,2380,2.769,2381,2.924,2382,2.769,2383,2.637,2384,4.766,2385,2.924,2386,2.924,2387,2.924,2388,2.924,2389,2.637,2390,2.924,2391,2.924,2392,2.924,2393,2.924,2394,2.924,2395,2.924,2396,2.924,2397,2.924,2398,5.809,2399,5.809,2400,4.125,2401,4.125]],["title/classes/GraphInterface.html",[61,0.011,1203,2.147]],["body/classes/GraphInterface.html",[0,0.155,2,1.122,3,0.07,4,0.063,9,0.063,25,0.078,26,0.486,30,0.778,37,0.707,39,0.64,40,0.008,41,0.54,42,0.181,43,0.501,45,0.825,49,0.522,53,0.143,60,0.152,61,0.019,121,0.117,123,0.937,138,0.944,141,0.743,189,0.398,222,0.005,223,0.005,231,3.429,234,1.397,248,0.974,260,1.074,310,2.687,312,2.028,515,2.808,529,2.452,541,1.174,548,1.37,572,1.754,575,2.16,595,1.99,608,0.827,635,1.854,691,2.776,705,2.783,720,1.506,728,3.743,752,4.551,753,1.69,808,2.326,862,4.511,864,2.418,889,2.611,956,2.242,1005,1.581,1055,2.272,1122,1.621,1202,3.205,1203,3.667,1205,3.99,1206,2.808,1232,2.287,1233,1.908,1241,1.854,1252,2.165,1415,2.242,1561,4.338,1567,2.637,1572,3.413,1604,2.418,1614,3.276,1747,1.581,1752,3.413,1788,4.878,1820,1.966,1879,3.831,2016,2.326,2017,3.792,2047,2.769,2048,2.637,2253,4.909,2254,2.637,2255,4.706,2256,5.144,2260,2.924,2261,4.9,2263,4.514,2264,5.358,2265,2.924,2268,2.094,2269,2.924,2270,4.117,2271,2.924,2272,2.924,2273,5.453,2274,2.637,2275,2.769,2276,5.165,2277,5.657,2278,4.514,2279,2.769,2280,2.637,2281,2.769,2282,4.338,2283,5.173,2284,2.769,2285,5.165,2286,5.453,2287,5.102,2288,2.521,2289,2.637,2290,5.165,2291,4.11,2292,3.714,2293,2.924,2294,2.769,2295,2.924,2296,3.9,2297,2.769,2298,2.637,2299,2.924,2300,2.924,2301,2.924,2302,2.924,2303,2.924,2304,2.769,2305,2.924,2306,2.521,2307,2.924,2308,2.924,2309,2.924,2310,2.924,2311,2.924,2312,2.924,2313,4.117,2314,5.453,2315,4.514,2316,3.714,2317,3.9,2318,2.924,2319,3.551,2320,2.924,2321,2.924,2322,2.924,2323,2.924,2324,2.924,2325,2.924,2326,2.924,2327,2.924,2328,2.924,2329,4.117,2330,4.766,2331,4.766,2332,4.766,2333,2.326,2334,2.924,2335,2.924,2336,2.326,2337,2.326,2338,2.418,2339,5.621,2340,5.382,2341,3.9,2342,5.453,2343,5.173,2344,4.117,2345,2.924,2346,2.924,2347,2.924,2348,4.117,2349,2.924,2350,2.924,2351,2.924,2352,4.117,2353,2.924,2354,2.924,2355,2.924,2356,2.924,2357,2.924,2358,2.924,2359,2.924,2360,2.924,2361,2.924,2362,2.924,2363,2.924,2364,4.514,2365,2.637,2366,4.117,2367,4.117,2368,2.924,2369,2.924,2370,2.924,2371,2.924,2372,2.924,2373,2.924,2374,2.924,2375,2.924,2376,4.117,2377,2.924,2378,2.924,2379,2.028,2380,2.769,2381,2.924,2382,2.769,2383,2.637,2384,4.766,2385,2.924,2386,2.924,2387,2.924,2388,2.924,2389,2.637,2390,2.924,2391,2.924,2392,2.924,2393,2.924,2394,2.924,2395,2.924,2396,2.924,2397,2.924,2402,4.125,2403,4.125,2404,4.125,2405,4.125,2406,4.125,2407,4.125,2408,4.125,2409,4.125]],["title/classes/GraphIssue.html",[61,0.011,2287,2.879]],["body/classes/GraphIssue.html",[0,0.154,2,1.117,3,0.069,4,0.062,9,0.062,25,0.077,26,0.481,30,0.77,37,0.684,39,0.633,40,0.008,41,0.512,42,0.181,43,0.625,45,0.82,49,0.477,53,0.141,60,0.15,61,0.018,121,0.116,123,0.958,138,0.936,141,0.739,189,0.392,222,0.005,223,0.005,226,0.51,231,3.526,234,1.392,248,0.97,260,1.072,310,3.539,312,1.997,515,2.815,529,2.446,541,1.157,548,1.379,572,1.728,575,2.154,595,1.977,608,0.825,635,1.826,691,2.728,705,3.167,720,1.483,728,3.733,752,4.674,753,1.672,808,2.291,862,4.787,864,2.382,889,2.583,956,2.208,1005,1.558,1055,2.261,1122,1.597,1202,3.179,1203,3.179,1205,3.892,1206,2.899,1232,2.268,1233,1.88,1241,1.826,1252,2.132,1415,2.208,1561,4.61,1567,2.598,1572,3.385,1604,2.382,1614,3.241,1747,1.558,1752,3.385,1788,4.855,1820,1.937,1879,3.805,2016,2.291,2017,3.761,2047,2.728,2048,2.598,2253,4.787,2254,2.598,2255,4.656,2260,2.88,2261,4.868,2263,5.136,2264,5.6,2265,2.88,2268,2.062,2269,2.88,2270,4.074,2271,2.88,2272,2.88,2273,5.423,2274,2.598,2275,2.728,2276,5.332,2277,5.63,2278,4.477,2279,2.728,2280,2.598,2281,2.728,2282,4.317,2283,5.139,2284,2.728,2285,5.136,2286,5.423,2287,5.423,2288,2.484,2289,2.598,2290,5.136,2291,4.076,2292,3.674,2293,2.88,2294,2.728,2295,2.88,2296,3.859,2297,2.728,2298,2.598,2299,2.88,2300,2.88,2301,2.88,2302,2.88,2303,2.88,2304,2.728,2305,2.88,2306,2.484,2307,2.88,2308,2.88,2309,2.88,2310,2.88,2311,2.88,2312,2.88,2313,4.074,2314,5.423,2315,4.477,2316,3.674,2317,3.859,2318,2.88,2319,3.513,2320,2.88,2321,2.88,2322,2.88,2323,2.88,2324,2.88,2325,2.88,2326,2.88,2327,2.88,2328,2.88,2329,4.074,2330,4.727,2331,4.727,2332,4.727,2333,2.291,2334,2.88,2335,2.88,2336,2.291,2337,2.291,2338,2.382,2339,4.477,2340,5.449,2341,3.859,2342,4.727,2343,4.074,2344,2.88,2345,2.88,2346,2.88,2347,2.88,2348,4.074,2349,2.88,2350,2.88,2351,2.88,2352,2.88,2353,2.88,2354,2.88,2355,2.88,2356,2.88,2357,2.88,2358,2.88,2359,2.88,2360,2.88,2361,2.88,2362,2.88,2363,2.88,2364,5.332,2365,4.263,2366,5.139,2367,5.139,2368,4.074,2369,4.074,2370,2.88,2371,2.88,2372,2.88,2373,2.88,2374,4.074,2375,2.88,2376,4.074,2377,2.88,2378,2.88,2379,1.997,2380,2.728,2381,2.88,2382,2.728,2383,2.598,2384,4.727,2385,2.88,2386,2.88,2387,2.88,2388,2.88,2389,2.598,2390,2.88,2391,2.88,2392,2.88,2393,2.88,2394,2.88,2395,2.88,2396,2.88,2397,2.88,2410,5.747,2411,4.063,2412,4.063,2413,4.063,2414,4.063,2415,4.063,2416,4.063]],["title/modules/GraphQLModule.html",[329,3.024,338,3.024]],["body/modules/GraphQLModule.html",[3,0.091,4,0.081,9,0.081,11,1.528,27,0.878,40,0.008,53,0.224,54,0.37,60,0.169,61,0.014,109,1.674,115,0.635,182,0.84,203,0.999,206,0.768,222,0.006,223,0.006,231,2.102,248,0.823,260,1.096,301,2.629,315,1.112,331,4.232,338,4.648,344,4.031,349,5.219,381,6.131,382,3.79,402,3.269,423,6.131,424,3.79,425,6.7,443,4.173,481,6.98,485,3.419,492,4.332,493,5.442,522,3.79,527,4.332,575,2.114,595,2.094,608,0.79,626,4.373,637,2.301,641,2.102,671,4.232,672,4.426,676,4.031,689,3.59,690,4.031,753,2.362,782,4.332,809,4.735,927,4.031,1033,2.638,1122,2.102,1186,2.214,1228,2.403,1229,3.763,1401,3.79,1416,4.059,1536,5.452,1743,3.79,1751,3.79,1807,3.59,1820,2.549,1883,3.419,2044,4.332,2048,3.419,2383,4.426,2417,4.332,2418,6.923,2419,6.923,2420,6.923,2421,5.647,2422,6.923,2423,6.923,2424,7.678,2425,5.347,2426,8.888,2427,5.347,2428,5.347,2429,4.735,2430,5.347,2431,5.347,2432,4.735,2433,4.735,2434,6.814,2435,5.347,2436,4.332,2437,4.735,2438,4.735,2439,4.735,2440,4.735,2441,6.22,2442,6.22,2443,4.648,2444,4.735,2445,4.332,2446,4.735,2447,4.735,2448,4.735,2449,4.735,2450,5.609,2451,6.22,2452,4.332,2453,4.332,2454,4.332,2455,4.332,2456,4.332,2457,4.735,2458,7.448,2459,4.735,2460,4.735,2461,3.419,2462,7.678,2463,8.616,2464,5.347,2465,6.923,2466,4.332,2467,5.347,2468,4.426,2469,5.347,2470,5.347,2471,5.347,2472,5.347,2473,5.347,2474,5.347,2475,5.347,2476,4.735,2477,5.347,2478,5.347,2479,5.347,2480,5.347,2481,5.347,2482,7.678,2483,6.131,2484,5.347,2485,5.347,2486,5.347,2487,5.347,2488,6.923,2489,6.923,2490,5.347,2491,4.735,2492,5.347,2493,5.347,2494,5.347,2495,5.347,2496,4.735,2497,6.923,2498,6.923]],["title/modules/GraphsModule.html",[329,3.024,339,3.024]],["body/modules/GraphsModule.html",[3,0.071,4,0.063,9,0.063,18,0.82,40,0.008,53,0.235,54,0.287,55,1.264,59,2.626,60,0.121,61,0.015,89,3.066,102,1.592,104,0.729,105,1.187,108,1.626,118,0.668,123,0.787,125,1.792,130,1.792,136,1.592,138,1.256,140,1.78,141,0.564,143,1.792,145,1.792,147,1.792,149,1.792,151,1.792,153,1.83,155,1.559,173,1.792,175,1.592,177,1.559,181,1.647,188,1.792,190,1.526,191,0.653,205,1.792,209,1.754,211,1.718,213,1.718,222,0.005,223,0.005,225,2.948,226,0.369,255,1.555,290,3.369,291,4.404,292,2.948,318,2.044,329,3.922,331,2.542,332,4.141,339,6.465,340,4.404,341,2.948,343,4.733,344,3.135,346,5.174,347,5.981,348,5.174,349,4.404,352,5.174,353,3.683,356,5.981,357,3.683,358,5.981,359,4.141,360,5.981,361,3.683,362,5.981,363,5.981,364,3.683,365,5.981,366,3.683,367,3.922,368,5.174,369,5.174,370,3.683,373,4.733,383,2.438,386,5.174,387,5.174,389,2.626,403,5.174,405,3.369,413,5.981,414,3.683,415,5.981,416,5.174,417,3.426,418,5.981,419,3.683,429,5.174,430,4.733,431,2.26,432,5.174,433,2.659,434,3.369,453,3.683,465,5.174,466,3.671,469,4.733,492,3.369,493,2.948,494,3.683,501,3.135,502,3.683,505,3.135,506,2.948,507,3.683,527,4.733,789,3.369,836,2.659,837,2.659,1083,1.555,1084,2.948,1207,1.982,1570,3.369,1623,3.369,1636,3.369,1780,4.141,1890,4.404,2125,2.542,2180,3.369,2499,3.683,2500,3.683,2501,3.683,2502,4.159,2503,5.842,2504,5.842,2505,5.842,2506,3.135,2507,4.159,2508,5.842,2509,4.733,2510,3.135,2511,4.141,2512,5.842,2513,4.159,2514,5.842,2515,4.159,2516,5.842,2517,3.135,2518,6.754,2519,4.159,2520,4.159,2521,4.159,2522,5.842,2523,3.571,2524,7.717,2525,3.369,2526,4.159,2527,5.842,2528,4.159,2529,3.369,2530,4.159,2531,3.369,2532,3.369,2533,4.159,2534,5.842,2535,4.159,2536,4.159,2537,4.159,2538,3.369,2539,4.159,2540,4.159,2541,5.842,2542,4.159,2543,5.842,2544,4.159,2545,4.159,2546,3.369,2547,4.159,2548,3.369,2549,4.159,2550,4.159,2551,3.683]],["title/interfaces/InterfaceNode.html",[121,0.068,1210,2.448]],["body/interfaces/InterfaceNode.html",[0,0.152,3,0.09,4,0.122,5,1.101,9,0.104,25,0.099,26,0.574,40,0.008,42,0.189,49,0.666,53,0.198,60,0.142,61,0.017,104,0.658,115,0.626,121,0.139,123,0.737,138,0.74,141,0.662,168,0.97,189,0.808,191,0.828,222,0.006,223,0.006,234,1.326,248,0.906,260,0.626,284,2.422,296,4.116,316,3.091,515,1.638,529,1.438,541,1.501,548,1.348,595,2.417,608,0.832,622,1.835,720,1.924,725,1.972,817,2.513,835,1.713,906,1.763,952,3.222,1055,1.953,1056,3.343,1059,3.645,1060,3.434,1083,1.972,1189,3.242,1197,4.471,1198,2.369,1199,2.973,1200,4.75,1201,5.125,1202,3.634,1203,3.269,1204,2.865,1205,2.513,1206,3.235,1207,3.269,1208,2.676,1209,2.767,1210,4.389,1211,4.238,1212,4.471,1213,3.222,1214,3.222,1215,3.222,1216,3.222,1217,3.222,1218,3.222,1219,3.222,1220,3.222,1221,3.173,1222,3.222,1223,3.222,1224,4.193,1225,3.748,1226,3.37,1227,3.091,1228,2.369,1229,3.728,1230,3.37,1231,3.37,1232,1.793,1233,2.439,1234,2.513,1235,3.222,1236,2.865,1237,2.591,1238,3.37,1239,3.222,1240,3.37,1241,2.369,1242,3.37,1243,2.676,1244,3.37,1245,2.304,1246,3.37,1247,2.973,1248,3.37,1249,3.222,1250,3.37,1251,4.3,1252,2.767,1253,2.973,1254,2.767,1255,4.721,1256,3.37,1257,3.37,1258,3.37,1259,4.022,1260,3.37,1261,4.385,1262,3.37,1263,3.37,1264,3.37,1265,3.222,1266,1.924,1267,3.868,1268,4.875,1269,3.37,1270,3.37,1271,4.385,1272,3.37,1273,4.385,1274,4.385,1275,3.37,1276,3.37,1277,4.144,1278,4.385,1279,3.222,1280,4.193,1281,4.385,1282,3.37,1283,4.554,1284,3.6,1285,3.37,1286,3.222,1287,3.37,1288,3.37,1289,3.37,1290,3.222,1291,4.022,1292,3.222,1293,2.973,1294,3.222,1295,2.767]],["title/injectables/InterfaceStoreService.html",[532,1.082,1533,2.879]],["body/injectables/InterfaceStoreService.html",[0,0.107,2,0.966,3,0.097,4,0.086,9,0.12,25,0.108,27,1.537,30,0.966,33,0.819,37,0.755,39,0.966,40,0.008,41,0.581,42,0.182,43,0.755,45,0.97,49,0.675,53,0.204,54,0.394,60,0.118,61,0.014,63,1.221,115,0.857,222,0.006,223,0.006,226,0.761,227,3.152,234,1.184,260,0.857,281,1.771,293,1.087,529,1.967,532,1.733,537,1.459,540,2.36,545,3.242,547,2.851,548,1.306,555,2.491,608,0.806,646,2.36,691,1.771,726,1.823,818,3.92,832,2.36,1021,2.986,1030,5.843,1058,3.963,1228,3.242,1237,3.546,1298,3.645,1336,5.048,1340,5.048,1344,5.048,1362,6.387,1371,7.364,1376,6.387,1457,3.343,1533,4.611,1747,2.765,1983,5.113,2268,2.894,2552,7.88,2553,7.213,2554,7.213,2555,5.843,2556,4.611,2557,5.437,2558,7.213,2559,7.213,2560,7.213,2561,5.701,2562,8.316,2563,7.912,2564,8.316,2565,7.912,2566,8.316,2567,7.364,2568,8.316,2569,8.316,2570,5.701,2571,7.213,2572,6.387,2573,8.316,2574,5.701,2575,6.387,2576,7.213,2577,5.701,2578,7.213,2579,7.364,2580,7.213,2581,7.213,2582,5.701,2583,5.701,2584,4.297,2585,5.701,2586,5.701,2587,5.701]],["title/components/IssueCategoryComponent.html",[0,0.085,130,0.915]],["body/components/IssueCategoryComponent.html",[0,0.152,1,1.066,2,0.916,3,0.089,4,0.079,5,0.842,6,1.183,7,1.159,8,1.111,9,0.079,11,1.043,16,1.022,17,1.389,18,1.354,19,1.043,20,0.88,21,1.004,23,1.004,25,0.099,37,0.452,40,0.008,41,0.539,42,0.109,53,0.168,54,0.362,56,1.066,57,1.449,60,0.109,61,0.013,95,1.159,96,1.332,97,1.304,98,0.88,99,1.744,100,1.159,101,1.995,102,1.043,103,0.919,104,1.104,105,1.389,106,1.066,107,1.159,108,1.066,109,1.043,110,1.159,111,1.066,112,1.159,113,1,114,1.022,115,0.993,116,1.043,117,1,118,1.098,119,1.681,120,1.022,121,0.079,122,1.043,123,1.016,124,1.066,125,1.066,126,0.959,127,1.159,128,1.022,129,1.159,130,1.638,131,1.159,132,1.066,133,1.159,134,1.043,135,1.159,136,1.043,137,1.159,138,0.736,139,1.159,140,1.043,141,0.506,142,1.159,143,1.066,144,1.159,145,1.066,146,1.681,147,1.066,148,1.159,149,1.066,150,1.681,151,1.066,152,1.159,153,1.088,154,1.159,155,1.022,156,1.159,157,1.066,158,1.159,159,1.111,160,0.979,161,1.159,162,1.066,163,1.449,164,1.511,165,1.066,166,1.159,167,1.022,168,0.593,169,1.159,170,1.043,171,1.066,172,1.159,173,1.066,174,1.159,175,1.043,176,1.043,177,1.022,178,1.159,179,1.043,180,1.159,181,0.979,182,0.824,183,1.022,184,1.159,185,1.022,186,1.304,187,1.043,188,1.066,189,0.66,190,1,191,0.824,192,1.066,193,1.088,194,1.159,195,1.066,196,0.979,197,1.159,198,1.066,199,1.159,200,1,201,1.066,202,1.066,203,0.979,204,1.159,205,1.066,206,0.753,207,0.899,208,1,209,1.043,210,1.159,211,1.022,212,1.159,213,1.022,214,1.159,215,1,216,1.159,217,1,218,1.159,219,1,220,1.088,221,1.159,222,0.006,223,0.006,276,2.23,310,4.038,311,3.716,312,3.36,313,5.153,726,1.575,766,2.496,791,1.666,811,1.704,832,2.171,906,1.36,1166,1.914,1168,2.357,1169,2.578,1171,2.499,1179,3.075,1183,2.752,1185,2.987,1186,2.171,1187,1.704,1206,2.777,1266,1.914,1526,2.957,1615,3.716,2191,2.662,2548,5.538,2588,4.59,2589,4.644,2590,7.606,2591,6.836,2592,5.244,2593,3.353,2594,3.953,2595,2.85,2596,4.644]],["title/components/IssueContentsComponent.html",[0,0.085,132,0.915]],["body/components/IssueContentsComponent.html",[0,0.133,1,0.781,2,0.74,3,0.065,4,0.058,5,0.617,6,0.867,7,0.85,8,0.815,9,0.058,11,0.765,14,1.099,15,1.764,16,0.749,17,1.373,18,1.336,19,0.765,20,0.645,21,0.812,23,0.812,25,0.073,26,0.462,27,1.524,30,0.74,33,0.552,37,0.761,39,0.424,40,0.008,41,0.503,42,0.176,43,0.331,45,0.731,46,1.145,49,0.505,50,1.032,51,0.868,53,0.202,54,0.266,56,0.781,57,1.171,60,0.08,61,0.01,64,1.048,86,1.071,89,2.018,95,0.85,96,1.076,97,1.054,98,0.645,99,1.53,100,0.85,101,1.877,102,0.765,103,0.673,104,1.026,105,1.123,106,0.781,107,0.85,108,0.781,109,0.765,110,0.85,111,0.781,112,0.85,113,0.733,114,0.749,115,0.89,116,0.765,117,1.054,118,0.887,119,1.429,120,0.749,121,0.058,122,0.765,123,1.014,124,0.781,125,0.781,126,0.703,127,0.85,128,0.749,129,0.85,130,0.781,131,0.85,132,1.437,133,0.85,134,0.765,135,0.85,136,0.765,137,0.85,138,0.54,139,0.85,140,0.765,141,0.371,142,0.85,143,0.781,144,0.85,145,0.781,146,1.429,147,0.781,148,0.85,149,0.781,150,1.429,151,0.781,152,0.85,153,0.798,154,0.85,155,0.749,156,0.85,157,0.781,158,0.85,159,1.371,160,0.718,161,0.85,162,0.781,163,1.171,164,1.221,165,0.781,166,0.85,167,0.749,168,0.625,169,0.85,170,0.765,171,0.781,172,0.85,173,0.781,174,0.85,175,0.765,176,0.765,177,0.749,178,0.85,179,0.765,180,0.85,181,0.718,182,0.604,183,0.749,184,0.85,185,0.749,186,1.054,187,0.765,188,0.781,189,0.533,190,0.733,191,0.604,192,0.781,193,0.798,194,0.85,195,0.781,196,1.208,197,0.85,198,0.781,199,0.85,200,0.733,201,1.123,202,0.781,203,1.32,204,0.85,205,0.781,206,0.793,207,1.435,208,0.733,209,0.765,210,0.85,211,0.749,212,0.85,213,0.749,214,0.85,215,0.733,216,0.85,217,0.733,218,0.85,219,0.733,220,0.798,221,0.85,222,0.005,223,0.005,243,1.68,246,1.621,267,1.403,274,1.778,276,2.75,284,1.221,293,0.733,315,0.617,322,3.709,383,5.216,515,1.717,516,3.792,537,0.984,548,0.604,549,2.989,572,2.349,639,4.584,678,2.35,695,3.114,706,4.476,726,1.629,745,2.35,753,1.607,763,2.542,766,2.017,768,2.35,769,2.916,785,3.682,787,3.1,790,2.361,791,1.755,792,1.591,793,1.832,803,1.511,806,4.24,811,1.249,814,2.804,816,1.168,829,1.68,832,2.287,833,3.179,834,1.951,835,1.249,867,2.101,883,3.404,884,2.458,885,2.898,899,3.532,906,1.813,955,2.254,974,6.659,978,5.727,995,3.116,1013,2.725,1017,2.458,1038,3.404,1059,2.608,1062,2.927,1063,3.24,1092,1.278,1166,2.847,1168,3.178,1169,2.716,1170,3.283,1171,1.832,1179,2.254,1183,3.711,1185,2.826,1186,1.591,1187,2.61,1192,2.458,1266,2.581,1486,2.458,1522,3.515,1526,2.168,1529,2.479,1619,2.287,1620,1.951,1640,1.832,1649,2.804,1655,2.716,1662,2.458,1884,2.254,2191,1.951,2246,4.476,2251,3.114,2252,2.725,2595,3.843,2596,3.404,2597,3.404,2598,3.916,2599,6.468,2600,5.525,2601,6.468,2602,6.468,2603,4.135,2604,6.468,2605,6.468,2606,7.071,2607,6.261,2608,7.071,2609,5.525,2610,3.845,2611,3.845,2612,3.845,2613,3.845,2614,4.893,2615,3.845,2616,3.845,2617,5.525,2618,5.525,2619,3.845,2620,3.845,2621,3.845,2622,3.845,2623,3.845,2624,3.845,2625,2.581,2626,3.845,2627,3.404,2628,3.845,2629,3.845,2630,3.845,2631,3.845,2632,3.845,2633,3.845,2634,3.845,2635,3.845,2636,5.727,2637,3.845,2638,5.525,2639,3.845,2640,5.525,2641,3.845,2642,5.525,2643,5.525,2644,5.525,2645,4.893,2646,3.114,2647,4.165,2648,2.725,2649,3.404,2650,3.003,2651,2.254,2652,3.404,2653,1.89,2654,3.916,2655,2.725,2656,2.898,2657,4.893]],["title/components/IssueDetailComponent.html",[0,0.085,134,0.896]],["body/components/IssueDetailComponent.html",[0,0.131,1,0.658,2,0.652,3,0.055,4,0.049,5,0.52,6,0.73,7,0.715,8,0.686,9,0.049,11,0.644,14,0.968,15,1.596,16,0.63,17,1.363,18,1.324,19,0.644,20,0.543,21,0.715,23,0.715,25,0.061,26,0.489,27,1.509,30,0.652,33,0.465,37,0.751,39,0.536,40,0.008,41,0.49,42,0.166,43,0.419,45,0.736,46,1.025,49,0.524,50,1.303,51,1.096,53,0.204,54,0.224,56,0.658,57,1.031,60,0.067,61,0.008,63,0.859,64,0.882,85,2.127,86,1.944,89,2.555,92,1.913,93,1.735,95,0.715,96,1.14,97,0.928,98,0.543,99,1.408,100,0.715,101,1.803,102,0.644,103,0.567,104,0.999,105,0.989,106,0.658,107,0.715,108,0.658,109,0.644,110,0.715,111,0.658,112,0.715,113,0.617,114,0.63,115,0.829,116,0.644,117,1.241,118,0.939,119,1.293,120,0.63,121,0.049,122,0.644,123,1.022,124,0.658,125,0.658,126,0.592,127,0.715,128,0.63,129,0.715,130,0.658,131,0.715,132,0.658,133,0.715,134,1.295,135,0.715,136,0.644,137,0.715,138,0.454,139,0.715,140,0.644,141,0.312,142,0.715,143,0.658,144,0.715,145,0.658,146,1.293,147,0.658,148,0.715,149,0.658,150,1.293,151,0.658,152,0.715,153,0.672,154,0.715,155,0.63,156,0.715,157,0.658,158,1.293,159,0.686,160,0.604,161,0.715,162,0.658,163,1.031,164,1.076,165,0.658,166,0.715,167,0.63,168,0.366,169,0.715,170,0.644,171,0.658,172,0.715,173,0.658,174,0.715,175,0.644,176,0.644,177,0.63,178,0.715,179,0.644,180,0.715,181,0.604,182,0.508,183,0.63,184,0.715,185,0.63,186,0.928,187,0.644,188,0.658,189,0.47,190,0.617,191,0.508,192,0.658,193,0.672,194,0.715,195,0.658,196,0.909,197,0.715,198,0.658,199,0.715,200,0.617,201,0.658,202,0.658,203,0.909,204,0.715,205,0.658,206,0.699,207,0.555,208,0.617,209,0.644,210,0.715,211,0.63,212,0.715,213,0.63,214,0.715,215,0.617,216,0.715,217,0.617,218,0.715,219,0.617,220,0.672,221,0.715,222,0.004,223,0.004,226,0.287,227,2.127,235,1.272,243,1.414,246,1.646,248,0.997,249,2.487,250,2.393,254,1.497,255,1.21,259,2.487,260,0.385,270,2.069,274,3.011,276,2.069,277,1.866,284,2.632,293,0.617,309,2.621,310,3.883,311,2.645,312,2.393,315,1.045,318,1.591,322,3.928,323,2.621,367,3.268,383,5.141,389,2.629,417,2.854,459,2.252,466,1.759,499,1.181,516,3.43,537,0.828,541,0.921,548,0.919,549,3,553,3.392,561,1.497,562,2.069,569,2.925,572,1.376,575,0.794,602,1.642,608,0.304,611,2.625,637,1.076,641,1.913,648,3.669,670,4.254,726,0.746,745,3.978,763,2.3,768,1.978,769,2.742,785,2.876,787,2.422,790,2.136,791,1.546,792,1.34,793,1.542,803,1.272,806,4.179,811,2.115,816,2.379,819,1.759,829,1.414,830,4.134,831,2.069,835,1.051,861,2.621,867,1.901,884,2.069,885,3.669,887,1.542,902,3.112,906,1.459,951,6.492,974,3.943,1013,3.45,1017,2.069,1062,1.34,1072,4.147,1090,3.43,1092,2.602,1166,2.376,1168,2.925,1169,1.591,1170,1.642,1183,3.662,1185,2.844,1186,2.694,1187,2.651,1229,1.759,1266,2.777,1279,2.975,1440,2.294,1457,1.897,1486,4.161,1522,3.985,1529,2.495,1572,2.471,1586,2.621,1615,2.645,1617,3.43,1618,2.865,1619,2.015,1620,2.471,1621,2.865,1623,2.621,1655,3.936,1741,2.069,1749,2.294,1810,2.069,2191,2.471,2200,3.669,2252,3.45,2379,1.591,2551,4.31,2595,2.645,2598,2.294,2636,4.31,2646,2.621,2650,2.645,2651,3.43,2653,2.393,2654,2.294,2658,2.865,2659,5.851,2660,4.867,2661,4.6,2662,5.851,2663,5.851,2664,5.851,2665,5.851,2666,5.851,2667,5.763,2668,4.31,2669,6.508,2670,6.508,2671,4.867,2672,3.236,2673,4.867,2674,4.369,2675,4.867,2676,3.236,2677,3.669,2678,4.31,2679,3.236,2680,3.236,2681,6.179,2682,3.236,2683,4.867,2684,3.236,2685,3.236,2686,3.236,2687,3.236,2688,3.236,2689,3.236,2690,3.236,2691,3.236,2692,3.236,2693,3.236,2694,4.31,2695,4.31,2696,4.147,2697,3.236,2698,3.236,2699,2.173,2700,2.865,2701,1.698,2702,3.236,2703,3.236,2704,2.865,2705,3.236,2706,3.236,2707,3.236,2708,3.236,2709,3.236,2710,3.236,2711,3.236,2712,5.763,2713,5.851,2714,3.236,2715,3.236,2716,2.865,2717,4.867,2718,3.236,2719,3.236,2720,3.236,2721,3.236,2722,3.236,2723,2.439,2724,4.31,2725,3.236,2726,5.851,2727,4.867,2728,3.236,2729,4.867,2730,3.236,2731,3.236,2732,2.439,2733,2.865,2734,3.236,2735,3.236,2736,2.865,2737,2.788,2738,3.236,2739,2.865,2740,3.236,2741,5.763,2742,2.645,2743,2.865,2744,3.236,2745,3.236,2746,3.236,2747,3.236,2748,2.621,2749,4.31,2750,2.439,2751,2.865,2752,2.865,2753,3.236]],["title/components/IssueFilterComponent.html",[0,0.085,136,0.896]],["body/components/IssueFilterComponent.html",[0,0.117,1,0.603,2,0.611,3,0.05,4,0.084,5,0.477,6,0.67,7,0.656,8,0.629,9,0.045,11,0.591,16,0.578,17,1.357,18,1.317,19,0.591,20,0.498,21,0.67,23,0.67,25,0.169,26,0.464,29,3.788,30,0.611,37,0.739,39,0.781,40,0.008,41,0.543,42,0.194,43,0.611,45,0.902,46,0.987,49,0.622,50,1.379,51,1.253,53,0.136,54,0.205,56,0.603,57,0.966,60,0.062,61,0.012,86,1.975,87,2.238,89,2.392,90,1.74,92,1.167,93,1.978,95,0.656,96,0.888,97,0.87,98,0.498,99,1.347,100,0.656,101,1.763,102,0.591,103,1.242,104,0.995,105,0.926,106,0.603,107,0.656,108,0.603,109,0.591,110,0.656,111,0.603,112,0.656,113,0.566,114,0.578,115,0.798,116,0.591,117,0.566,118,1.366,119,1.226,120,0.578,121,0.045,122,0.591,123,0.965,124,0.603,125,0.603,126,0.543,127,0.656,128,0.578,129,0.656,130,0.603,131,0.656,132,0.603,133,0.656,134,0.591,135,0.656,136,1.469,137,0.656,138,0.417,139,0.656,140,0.591,141,0.287,142,0.656,143,0.603,144,0.656,145,0.603,146,1.226,147,0.603,148,0.656,149,0.603,150,1.226,151,0.603,152,0.656,153,0.616,154,0.656,155,0.578,156,0.656,157,0.603,158,0.656,159,1.423,160,0.554,161,0.656,162,0.603,163,0.966,164,1.007,165,0.603,166,0.656,167,0.578,168,0.759,169,0.656,170,0.591,171,0.603,172,0.656,173,0.603,174,0.656,175,0.591,176,0.591,177,0.578,178,0.656,179,0.591,180,0.656,181,0.554,182,1.31,183,0.578,184,0.656,185,0.578,186,1.281,187,0.591,188,0.603,189,0.44,190,0.566,191,0.466,192,0.603,193,0.616,194,0.656,195,0.603,196,1.163,197,0.656,198,0.603,199,0.656,200,0.566,201,0.603,202,0.603,203,1.163,204,0.656,205,0.603,206,0.655,207,1.215,208,0.566,209,0.591,210,0.656,211,0.578,212,0.656,213,0.578,214,0.656,215,0.566,216,0.656,217,0.566,218,0.656,219,0.566,220,0.616,221,0.656,222,0.004,223,0.004,226,0.596,248,0.843,259,1.262,260,0.929,274,2.109,284,2.252,301,1.459,310,2.109,311,1.613,312,1.459,315,0.477,367,1.993,371,1.118,389,1.334,402,1.814,417,2.673,436,3.693,515,2.203,538,3.237,548,1.16,549,1.747,561,2.109,575,1.648,595,1.243,608,0.693,617,3.511,676,2.238,677,2.57,726,1.279,727,1.814,766,1.664,790,1.084,791,0.943,792,1.229,806,4.12,811,2.023,816,2.041,817,2.645,819,2.478,826,1.334,832,1.229,834,1.507,835,0.964,840,2.577,867,1.803,899,2.914,902,3.98,906,1.638,964,3.548,994,3.693,1021,1.229,1024,1.674,1055,2.344,1058,2.967,1062,2.781,1090,1.74,1092,1.844,1102,1.674,1166,2.452,1168,2.798,1169,1.459,1170,2.314,1171,2.173,1183,3.721,1185,2.425,1186,1.229,1187,2.592,1206,1.084,1221,2.109,1266,2.026,1295,1.558,1440,2.104,1454,3.599,1457,2.673,1460,2.181,1472,2.238,1491,2.238,1519,4.413,1522,3.016,1529,2.127,1531,1.814,1561,3.016,1565,2.781,1572,1.507,1614,1.674,1615,1.613,1617,1.74,1619,1.229,1620,1.507,1655,3.302,1747,1.747,1768,2.238,1781,2.241,1876,1.74,1879,3.875,1961,3.231,2115,2.786,2152,1.814,2289,2.914,2319,3.392,2333,2.57,2336,1.674,2337,1.674,2338,1.74,2365,1.898,2511,6.127,2595,2.478,2603,1.898,2650,2.478,2653,2.241,2654,3.231,2674,3.06,2733,2.629,2737,1.415,2754,2.405,2755,6.279,2756,5.549,2757,4.558,2758,8.644,2759,5.549,2760,6.754,2761,5.549,2762,3.726,2763,4.558,2764,4.558,2765,6.226,2766,4.558,2767,4.558,2768,4.558,2769,4.558,2770,4.914,2771,3.436,2772,5.549,2773,2.968,2774,2.968,2775,3.693,2776,3.933,2777,2.968,2778,4.036,2779,4.558,2780,2.968,2781,8.428,2782,4.558,2783,2.968,2784,2.968,2785,4.558,2786,2.968,2787,4.036,2788,4.558,2789,2.968,2790,4.558,2791,6.717,2792,2.968,2793,4.558,2794,2.968,2795,4.558,2796,2.968,2797,2.968,2798,5.044,2799,4.558,2800,2.968,2801,2.968,2802,2.968,2803,2.968,2804,3.06,2805,3.06,2806,4.495,2807,4.183,2808,4.914,2809,2.238,2810,2.629,2811,6.279,2812,2.629,2813,2.405,2814,5.948,2815,4.294,2816,4.294,2817,2.629,2818,4.294,2819,5.948,2820,2.629,2821,1.993,2822,3.06,2823,2.104,2824,2.629,2825,1.898,2826,1.993,2827,2.629,2828,2.968,2829,2.786,2830,2.968,2831,2.968,2832,2.968,2833,2.968,2834,2.968,2835,2.968,2836,2.968,2837,2.968,2838,5.549,2839,4.558,2840,4.761,2841,4.558,2842,4.558,2843,2.968,2844,4.558,2845,2.968,2846,2.968,2847,2.968,2848,2.968,2849,4.558,2850,2.968,2851,2.968,2852,2.968,2853,2.968,2854,2.968,2855,2.968,2856,4.558,2857,4.558,2858,4.558,2859,4.558,2860,4.558,2861,4.558,2862,2.968,2863,2.405,2864,2.405,2865,2.968,2866,1.814,2867,2.629,2868,2.968,2869,6.226,2870,4.558,2871,1.898,2872,4.558,2873,1.674]],["title/interfaces/IssueFolderNode.html",[121,0.068,1267,2.54]],["body/interfaces/IssueFolderNode.html",[0,0.152,3,0.089,4,0.122,5,1.098,9,0.104,25,0.099,26,0.572,40,0.008,42,0.193,49,0.665,53,0.198,60,0.142,61,0.017,104,0.654,115,0.623,121,0.139,123,0.734,138,0.736,141,0.66,168,0.987,189,0.807,191,0.824,222,0.006,223,0.006,234,1.323,248,0.904,260,0.623,284,2.416,296,4.109,316,3.075,515,1.629,529,1.43,541,1.493,548,1.346,595,2.414,608,0.831,622,1.826,720,1.914,725,1.961,817,2.499,835,1.704,906,1.761,952,3.206,1055,1.946,1056,3.336,1059,3.641,1060,3.427,1083,1.961,1189,3.234,1197,4.46,1198,2.357,1199,2.957,1200,4.744,1201,5.025,1202,3.625,1203,3.258,1204,2.85,1205,2.499,1206,3.296,1207,3.258,1208,2.662,1209,2.752,1210,4.134,1211,4.23,1212,4.46,1213,3.206,1214,3.206,1215,3.206,1216,3.206,1217,3.206,1218,3.206,1219,3.206,1220,3.206,1221,3.163,1222,3.206,1223,3.206,1224,4.179,1225,3.739,1226,3.353,1227,3.075,1228,2.357,1229,3.716,1230,3.353,1231,3.353,1232,1.784,1233,2.426,1234,2.499,1235,3.206,1236,2.85,1237,2.578,1238,3.353,1239,3.206,1240,3.353,1241,2.357,1242,3.353,1243,2.662,1244,3.353,1245,2.292,1246,3.353,1247,2.957,1248,3.353,1249,3.206,1250,3.353,1251,4.289,1252,2.752,1253,2.957,1254,2.752,1255,3.855,1256,3.353,1257,3.353,1258,3.353,1259,4.008,1260,3.353,1261,4.371,1262,3.353,1263,3.353,1264,3.353,1265,3.206,1266,1.914,1267,4.289,1268,5.48,1269,3.353,1270,3.353,1271,4.371,1272,3.353,1273,4.371,1274,4.371,1275,3.353,1276,3.353,1277,4.134,1278,4.371,1279,3.206,1280,4.179,1281,4.371,1282,3.353,1283,4.545,1284,3.588,1285,3.353,1286,3.206,1287,3.353,1288,3.353,1289,3.353,1290,3.206,1291,4.008,1292,3.206,1293,2.957,1294,3.206,1295,2.752]],["title/injectables/IssueGraphApiService.html",[532,1.082,2874,3.395]],["body/injectables/IssueGraphApiService.html",[0,0.167,3,0.082,4,0.073,9,0.073,25,0.091,30,0.863,33,0.689,37,0.7,39,0.969,40,0.008,41,0.523,42,0.168,43,0.7,45,0.88,49,0.672,53,0.21,54,0.331,60,0.134,61,0.016,63,1.069,88,3.271,121,0.127,123,0.836,141,0.865,182,1.364,186,1.229,196,1.359,206,1.117,222,0.006,223,0.006,226,0.572,231,3.286,234,1.332,260,0.925,281,1.49,293,0.915,301,2.358,311,3.502,318,3.168,371,1.909,515,2.522,529,1.757,532,1.548,537,1.227,540,1.985,541,1.365,544,2.155,547,2.419,548,1.222,555,2.096,572,2.74,573,3.502,575,2.158,608,0.785,615,3.634,622,2.243,646,1.985,691,1.49,725,2.41,752,3.502,840,2.668,867,2.094,906,1.448,947,2.812,1083,3.126,1206,2.657,1283,4.387,1284,4.083,1416,3.778,1565,3.46,1752,3.949,1807,4.326,1837,4.857,1995,3.939,2127,5.828,2128,5.224,2136,4.387,2140,4.568,2146,4.857,2178,5.865,2201,5.706,2221,5.22,2253,4.901,2264,4.326,2268,4.511,2280,4.12,2282,2.607,2284,4.326,2288,2.932,2291,5.109,2296,5.224,2306,3.939,2874,5.486,2875,4.247,2876,6.444,2877,7.78,2878,5.706,2879,5.706,2880,5.706,2881,6.444,2882,4.796,2883,7.78,2884,7.277,2885,7.78,2886,7.277,2887,7.78,2888,7.277,2889,7.78,2890,4.796,2891,6.444,2892,6.444,2893,4.796,2894,6.89,2895,6.444,2896,4.796,2897,5.706,2898,6.444,2899,6.444,2900,6.444,2901,6.444,2902,6.444,2903,6.444,2904,6.444,2905,6.444,2906,6.89,2907,6.444,2908,4.796,2909,6.444,2910,4.796,2911,6.444,2912,6.444,2913,6.444,2914,5.706,2915,6.444,2916,6.444,2917,7.78,2918,4.796,2919,4.796,2920,4.796,2921,4.796,2922,4.796,2923,3.885,2924,4.796,2925,4.796,2926,4.796,2927,4.796,2928,4.796,2929,6.444,2930,4.796,2931,4.796,2932,6.444,2933,4.796,2934,4.796,2935,4.796,2936,4.796,2937,4.796,2938,4.796,2939,4.796,2940,4.796,2941,4.796,2942,4.796]],["title/injectables/IssueGraphClassSettersService.html",[532,1.082,2943,3.395]],["body/injectables/IssueGraphClassSettersService.html",[3,0.096,4,0.086,9,0.086,25,0.107,30,0.962,37,0.488,39,0.624,40,0.008,41,0.508,42,0.117,43,0.488,45,0.64,46,0.831,49,0.513,53,0.204,54,0.391,60,0.117,61,0.024,123,0.608,138,1.008,141,0.844,168,1.046,222,0.006,223,0.006,226,0.637,246,1.554,260,0.853,281,1.758,295,4.266,296,4.523,315,1.404,532,1.725,545,3.227,555,2.473,575,1.762,608,0.844,622,2.499,637,2.387,646,2.343,720,2.621,840,3.433,864,4.863,956,4.508,1042,4.389,1091,5.302,1198,3.227,1207,3.759,1208,2.873,1209,2.97,1232,2.442,1233,3.321,1243,4.776,1291,4.21,1293,3.192,1295,2.97,1835,3.902,2115,5.07,2117,3.644,2443,5.872,2943,5.412,2944,6.358,2945,5.817,2946,5.012,2947,5.817,2948,5.817,2949,7.745,2950,5.412,2951,7.18,2952,7.18,2953,7.085,2954,5.66,2955,6.358,2956,6.358,2957,7.18,2958,3.8,2959,8.294,2960,7.886,2961,8.746,2962,5.012,2963,5.412,2964,5.66,2965,5.66,2966,5.66,2967,7.886,2968,5.012,2969,5.012,2970,7.579,2971,5.66,2972,5.66,2973,5.66]],["title/components/IssueGraphControlsComponent.html",[0,0.085,140,0.896]],["body/components/IssueGraphControlsComponent.html",[0,0.165,1,0.688,2,0.892,3,0.058,4,0.051,5,0.544,6,0.764,7,0.749,8,0.718,9,0.051,11,0.674,14,1.002,16,0.66,17,1.366,18,1.329,19,0.674,20,1.194,21,0.74,23,0.74,25,0.064,26,0.421,27,1.302,29,2.84,30,0.675,33,0.486,36,3.109,37,0.756,39,0.373,40,0.008,41,0.481,42,0.155,43,0.292,45,0.753,46,1.095,49,0.36,50,1.393,51,1.213,53,0.21,54,0.234,55,1.03,56,0.688,57,1.067,60,0.07,61,0.009,62,1.179,63,1.165,85,1.48,86,0.944,93,1.795,95,0.749,96,0.981,97,0.961,98,0.568,99,1.441,100,0.749,101,1.823,102,0.674,103,1.053,104,0.99,105,1.024,106,0.688,107,0.749,108,0.688,109,0.674,110,0.749,111,0.688,112,0.749,113,0.646,114,0.66,115,0.918,116,0.674,117,0.646,118,1.069,119,1.329,120,0.66,121,0.051,122,0.674,123,0.99,124,0.688,125,0.688,126,0.619,127,0.749,128,0.66,129,0.749,130,0.688,131,0.749,132,0.688,133,0.749,134,0.674,135,0.749,136,0.674,137,0.749,138,0.999,139,0.749,140,1.325,141,0.92,142,0.749,143,0.688,144,0.749,145,0.688,146,1.329,147,0.688,148,0.749,149,0.688,150,1.329,151,0.688,152,0.749,153,0.703,154,0.749,155,1.297,156,0.749,157,0.688,158,0.749,159,0.718,160,0.633,161,0.749,162,0.688,163,1.067,164,1.113,165,0.688,166,0.749,167,0.66,168,0.383,169,0.749,170,0.674,171,0.688,172,0.749,173,0.688,174,0.749,175,0.674,176,0.674,177,0.66,178,0.749,179,0.674,180,0.749,181,0.633,182,0.532,183,0.66,184,0.749,185,0.66,186,0.961,187,0.674,188,0.688,189,0.486,190,0.646,191,0.532,192,0.688,193,0.703,194,0.749,195,0.688,196,0.633,197,0.749,198,0.688,199,0.749,200,0.646,201,0.688,202,0.688,203,1.243,204,0.749,205,0.688,206,0.486,207,0.581,208,0.646,209,0.674,210,0.749,211,0.66,212,0.749,213,0.66,214,0.749,215,0.646,216,0.749,217,0.646,218,0.749,219,0.646,220,0.703,221,0.749,222,0.004,223,0.006,226,0.301,234,1.224,243,2.201,248,0.98,259,2.557,268,1.839,276,2.142,277,2.552,295,2.554,296,1.665,310,1.567,311,3.868,312,2.476,315,1.274,367,4.037,499,1.237,501,6.657,536,2.401,537,0.867,538,2.364,540,1.402,541,0.964,547,1.999,557,3.45,558,3.797,561,1.567,562,2.166,567,1.841,569,2.992,599,3.268,608,0.318,675,1.91,684,4.373,691,1.053,763,2.364,772,1.91,787,1.402,803,1.332,816,2.023,821,2.274,828,2.782,829,1.48,843,1.986,867,1.954,872,2.782,880,2.401,906,0.674,932,4.081,1005,2.552,1062,2.489,1083,1.884,1084,2.401,1092,1.999,1093,4.559,1097,4.533,1168,2.264,1175,2.744,1187,2.634,1188,4.262,1189,2.142,1193,1.778,1198,3.969,1206,2.195,1245,3.375,1266,1.839,1394,4.373,1395,1.986,1399,4.037,1450,2.744,1454,3.92,1468,3.797,1475,1.986,1529,1.299,1565,1.402,1572,3.379,1615,2.738,1655,3.796,1662,2.166,1666,2.84,1812,2.953,1857,3.079,1914,2.953,2123,3.22,2125,2.071,2127,2.274,2136,4.205,2176,2.401,2178,5.981,2179,4.461,2180,2.744,2191,3.92,2241,2.554,2242,1.91,2243,2.166,2282,2.738,2291,3.079,2298,4.937,2333,4.205,2336,1.91,2337,1.91,2338,1.986,2341,4.037,2650,1.841,2653,1.665,2661,3.754,2701,1.778,2737,1.615,2742,1.841,2923,2.744,2974,3,2975,3.382,2976,6.658,2977,5.037,2978,5.037,2979,5.037,2980,6.301,2981,7.458,2982,4.081,2983,4.461,2984,4.871,2985,4.871,2986,5.037,2987,6.013,2988,5.037,2989,4.871,2990,6.013,2991,5.325,2992,6.658,2993,5.896,2994,6.658,2995,6.658,2996,5.037,2997,3.388,2998,5.037,2999,6.013,3000,4.461,3001,5.037,3002,5.037,3003,5.037,3004,3.388,3005,3.388,3006,5.037,3007,2.557,3008,4.461,3009,3.388,3010,5.037,3011,5.037,3012,3.388,3013,3.388,3014,3.388,3015,3.388,3016,5.037,3017,3.388,3018,5.037,3019,3.388,3020,3.388,3021,6.658,3022,3.388,3023,3.388,3024,3.388,3025,3,3026,3.388,3027,3,3028,2.744,3029,3.388,3030,3.388,3031,3.388,3032,2.274,3033,3.388,3034,3.388,3035,3.388,3036,3.388,3037,3.388,3038,5.037,3039,3.388,3040,2.744,3041,3,3042,3,3043,3.388,3044,3.388,3045,5.037,3046,3.388,3047,3.388,3048,3.388,3049,3.388,3050,3.388,3051,3.388,3052,5.037,3053,3,3054,3,3055,3.388,3056,3.388,3057,3.388,3058,3.388,3059,2.401,3060,3.388,3061,3,3062,5.037,3063,4.461,3064,4.461,3065,5.037,3066,5.037,3067,2.744,3068,2.274,3069,4.461,3070,3.388,3071,3.388,3072,4.256,3073,5.037,3074,2.744,3075,3.388,3076,3,3077,3]],["title/injectables/IssueGraphDynamicTemplateRegistryService.html",[532,1.082,3078,3.395]],["body/injectables/IssueGraphDynamicTemplateRegistryService.html",[3,0.106,4,0.094,5,1.504,9,0.094,25,0.117,30,1.021,37,0.536,39,0.686,40,0.008,41,0.401,42,0.129,43,0.536,45,0.703,46,1.209,53,0.216,54,0.43,60,0.129,61,0.016,138,1.069,141,0.864,168,0.703,222,0.007,223,0.007,226,0.676,281,1.933,443,4.14,532,1.83,545,3.423,555,2.719,575,1.527,608,0.584,622,2.652,637,2.532,646,2.576,753,1.81,816,1.891,840,3.551,903,4.295,906,1.638,956,4.14,969,4.69,1042,4.656,1091,4.869,1189,2.646,1198,3.423,1207,4.088,1208,3.158,1225,3.059,1243,4.819,1265,3.804,1517,5.741,2443,6.012,2947,6.17,2948,6.17,2950,5.741,2958,4.178,3078,5.741,3079,6.745,3080,6.17,3081,6.75,3082,5.51,3083,7.596,3084,7.617,3085,7.617,3086,6.222,3087,6.222,3088,6.222,3089,6.745,3090,5.51,3091,5.041,3092,6.222,3093,6.222,3094,7.617,3095,6.222,3096,6.222,3097,6.222,3098,6.222,3099,6.222,3100,6.222,3101,6.222,3102,6.222]],["title/injectables/IssueGraphLinkHandlesService.html",[532,1.082,3103,3.395]],["body/injectables/IssueGraphLinkHandlesService.html",[3,0.087,4,0.139,9,0.077,25,0.096,30,0.899,37,0.646,39,0.826,40,0.008,41,0.483,42,0.18,43,0.646,45,0.848,46,1.101,53,0.203,54,0.352,60,0.106,61,0.013,63,1.216,138,0.941,141,0.849,168,1.006,222,0.006,223,0.006,226,0.707,260,0.797,281,1.582,296,4.589,315,1.28,317,1.994,532,1.611,545,3.014,555,2.226,575,2.032,596,5.433,608,0.778,622,2.335,637,2.229,646,2.108,747,5.055,753,2.651,840,3.642,902,5.095,906,1.586,956,4.711,969,7.162,1042,4.1,1056,2.776,1060,2.851,1091,5.095,1198,3.581,1207,3.798,1208,2.585,1209,2.673,1243,4.725,1277,4.781,1531,4.871,2443,5.708,2947,5.433,2948,5.433,2950,5.055,2953,6.888,2955,5.939,2958,3.419,2963,3.839,3089,8.017,3090,4.51,3091,6.075,3103,5.055,3104,7.057,3105,6.456,3106,4.51,3107,6.707,3108,6.707,3109,6.707,3110,6.707,3111,8.797,3112,5.093,3113,6.708,3114,5.093,3115,8.502,3116,5.093,3117,6.707,3118,5.093,3119,6.64,3120,5.939,3121,7.499,3122,5.433,3123,5.093,3124,5.093,3125,5.093,3126,5.093,3127,5.093,3128,5.093,3129,5.093,3130,5.093,3131,5.093,3132,5.093,3133,7.969,3134,6.707,3135,6.707,3136,7.969,3137,5.093,3138,5.093,3139,6.707,3140,5.093,3141,5.093]],["title/injectables/IssueGraphStateService.html",[532,1.082,1394,2.641]],["body/injectables/IssueGraphStateService.html",[0,0.152,2,0.916,3,0.089,4,0.079,9,0.079,25,0.099,26,0.572,30,0.916,33,0.752,37,0.72,39,0.888,40,0.008,41,0.519,42,0.173,43,0.694,45,0.911,49,0.654,51,1.266,53,0.214,54,0.362,60,0.109,61,0.013,63,0.77,121,0.13,123,0.563,141,0.904,186,1.303,222,0.006,223,0.006,226,0.465,231,2.686,234,1.248,248,0.904,281,1.628,293,1,317,1.558,529,2.197,532,1.642,536,5.711,537,1.341,538,3.518,539,3.518,540,2.169,547,3.103,548,1.266,555,2.29,556,4.229,557,4.14,573,3.714,575,1.865,608,0.714,635,3.071,637,2.271,646,2.169,675,3.853,684,5.117,725,2.556,901,4.843,926,4.588,932,5.536,1083,3.205,1283,5.16,1284,4.497,1394,4.006,1454,3.468,1475,5.293,1812,4.006,1857,5.108,1995,4.177,2136,4.544,2137,4.588,2149,4.861,2176,4.843,2223,3.95,2230,3.95,2253,5.024,2282,2.848,2298,4.368,2333,4.832,2677,5.151,2874,6.074,2878,6.051,2879,4.64,2880,6.051,2894,7.135,2923,4.245,2983,7.135,2984,4.245,2985,4.245,2989,6.527,3025,4.64,3028,4.245,3041,6.051,3042,6.051,3059,6.273,3142,4.64,3143,5.24,3144,6.833,3145,6.833,3146,6.833,3147,5.24,3148,6.833,3149,5.24,3150,6.833,3151,7.603,3152,8.057,3153,6.833,3154,6.051,3155,8.057,3156,6.833,3157,6.833,3158,6.833,3159,6.833,3160,6.833,3161,5.24,3162,5.24,3163,3.95,3164,6.833,3165,5.24,3166,5.24,3167,5.24,3168,5.24,3169,5.24,3170,5.24,3171,5.24,3172,5.24,3173,5.24,3174,5.24,3175,5.24,3176,5.24,3177,5.24,3178,5.24]],["title/classes/IssueGroupContainerBehaviour.html",[61,0.011,3179,3.395]],["body/classes/IssueGroupContainerBehaviour.html",[3,0.08,4,0.072,9,0.072,14,1.27,25,0.146,26,0.534,30,0.855,37,0.717,39,0.796,40,0.008,41,0.466,42,0.15,43,0.623,45,0.817,46,1.061,49,0.66,50,1.349,51,1.135,53,0.205,60,0.098,61,0.012,82,4.524,83,2.891,86,2.013,93,1.685,123,0.508,141,0.616,168,1.018,189,0.616,193,0.981,203,1.445,222,0.006,223,0.006,248,0.859,260,1.053,268,2.638,293,0.902,315,1.16,317,2.148,371,1.16,541,1.346,563,2.667,595,1.29,608,0.444,611,3.431,691,1.983,720,1.726,747,3.565,753,1.376,816,1.437,835,1.536,906,1.693,914,3.831,1056,2.991,1060,2.714,1062,3.202,1064,2.773,1198,3.824,1206,1.726,1207,3.687,1208,2.4,1209,2.482,1211,4.466,1225,3.552,1232,1.608,1234,3.042,1243,4.74,1259,3.742,1266,2.949,1309,3.175,1529,2.966,1649,3.24,1650,4.524,1666,2.667,2156,3.175,2306,2.891,2648,4.524,2958,3.175,3122,3.831,3179,3.565,3180,6.893,3181,3.831,3182,6.85,3183,6.383,3184,6.398,3185,6.398,3186,6.383,3187,6.383,3188,6.383,3189,4.729,3190,4.729,3191,4.729,3192,5.652,3193,7.535,3194,7.977,3195,7.765,3196,4.729,3197,5.652,3198,4.729,3199,4.729,3200,4.729,3201,4.187,3202,4.285,3203,4.187,3204,5.652,3205,5.652,3206,3.831,3207,4.187,3208,4.187,3209,4.187,3210,3.352,3211,3.831,3212,4.187,3213,5.652,3214,3.565,3215,4.187,3216,5.652,3217,4.187,3218,4.187,3219,4.187,3220,7.153,3221,4.187,3222,6.85,3223,7.153,3224,7.153,3225,5.652,3226,4.187,3227,4.187,3228,4.187,3229,7.153,3230,7.153,3231,8.145,3232,5.652,3233,5.171,3234,5.652,3235,6.398,3236,4.187,3237,4.187,3238,4.187,3239,5.652,3240,5.652,3241,3.831,3242,4.187,3243,4.187,3244,4.187,3245,4.187,3246,4.187,3247,4.187,3248,5.652,3249,4.187,3250,4.187,3251,5.652,3252,4.187,3253,4.187,3254,4.187,3255,4.187,3256,4.187,3257,4.187,3258,4.187,3259,5.652,3260,4.187,3261,4.187]],["title/interfaces/IssueGroupContainerNode.html",[121,0.068,1211,2.364]],["body/interfaces/IssueGroupContainerNode.html",[0,0.152,3,0.089,4,0.122,5,1.098,9,0.104,25,0.099,26,0.572,40,0.008,42,0.19,49,0.665,53,0.198,60,0.142,61,0.017,104,0.654,115,0.623,121,0.139,123,0.734,138,0.736,141,0.66,168,0.987,189,0.843,191,0.824,222,0.006,223,0.006,234,1.323,248,0.904,260,0.623,284,2.416,296,4.109,316,3.075,515,1.629,529,1.43,541,1.493,548,1.346,595,2.414,608,0.831,622,1.826,720,1.914,725,1.961,817,2.499,835,1.704,906,1.761,952,3.206,1055,1.946,1056,3.336,1059,3.71,1060,3.427,1083,1.961,1189,3.234,1197,4.46,1198,2.357,1199,2.957,1200,4.744,1201,5.025,1202,3.625,1203,3.258,1204,2.85,1205,2.499,1206,3.231,1207,3.258,1208,2.662,1209,2.752,1210,4.134,1211,4.387,1212,4.46,1213,3.206,1214,3.206,1215,3.206,1216,3.206,1217,3.206,1218,3.206,1219,3.206,1220,3.206,1221,3.163,1222,3.206,1223,3.206,1224,4.179,1225,3.739,1226,3.353,1227,3.075,1228,2.357,1229,3.716,1230,3.353,1231,3.353,1232,1.784,1233,2.426,1234,2.499,1235,3.206,1236,2.85,1237,2.578,1238,3.353,1239,3.206,1240,3.353,1241,2.357,1242,3.353,1243,2.662,1244,3.353,1245,2.292,1246,3.353,1247,2.957,1248,3.353,1249,3.206,1250,3.353,1251,4.289,1252,2.752,1253,2.957,1254,2.752,1255,3.855,1256,3.353,1257,3.353,1258,3.353,1259,4.008,1260,3.353,1261,5.344,1262,3.353,1263,3.353,1264,3.353,1265,3.206,1266,1.914,1267,3.855,1268,4.863,1269,3.353,1270,3.353,1271,4.371,1272,3.353,1273,4.371,1274,4.371,1275,3.353,1276,3.353,1277,4.134,1278,4.371,1279,3.206,1280,4.179,1281,4.371,1282,3.353,1283,4.545,1284,3.588,1285,3.353,1286,3.206,1287,3.353,1288,3.353,1289,3.353,1290,3.206,1291,4.008,1292,3.206,1293,2.957,1294,3.206,1295,2.752]],["title/classes/IssueGroupContainerParentBehaviour.html",[61,0.011,3210,3.192]],["body/classes/IssueGroupContainerParentBehaviour.html",[3,0.083,4,0.074,9,0.074,14,1.295,25,0.148,26,0.544,30,0.872,33,0.699,37,0.674,39,0.717,40,0.008,41,0.419,42,0.135,43,0.561,45,0.55,46,0.715,49,0.651,50,1.215,51,1.022,53,0.206,60,0.101,61,0.012,82,4.612,83,2.974,86,2.042,93,1.734,123,0.523,141,0.708,168,1.007,189,0.628,193,1.01,203,1.461,222,0.006,223,0.006,226,0.432,248,0.871,260,1.059,268,2.676,293,0.928,315,1.045,317,2.179,371,1.194,541,1.385,563,3.669,595,1.327,608,0.457,611,3.456,691,2.021,720,1.776,747,3.668,753,1.415,816,1.479,835,1.581,906,1.705,914,3.942,1056,3.034,1060,2.766,1062,3.24,1064,2.853,1198,3.666,1206,1.776,1207,3.73,1208,2.47,1209,2.554,1211,3.847,1225,2.392,1232,1.655,1234,3.101,1243,4.621,1259,3.815,1266,2.977,1309,4.368,1529,3,1649,3.302,1650,4.612,1666,3.669,2156,3.267,2306,2.974,2648,4.612,2958,3.267,3122,3.942,3180,6.608,3181,3.942,3182,7.223,3184,6.491,3185,6.491,3192,4.308,3193,7.223,3194,7.712,3195,7.589,3197,4.308,3201,4.308,3202,5.254,3203,4.308,3204,5.761,3205,5.761,3206,5.271,3207,5.761,3208,5.761,3209,5.761,3210,4.612,3211,5.271,3212,5.761,3213,6.93,3214,3.668,3215,4.308,3216,5.761,3217,4.308,3218,4.308,3219,4.308,3220,7.223,3221,4.308,3222,6.93,3223,7.223,3224,7.223,3225,5.761,3226,4.308,3227,4.308,3228,4.308,3229,7.223,3230,7.223,3231,8.173,3232,5.761,3233,5.271,3234,5.761,3235,6.491,3236,4.308,3237,4.308,3238,4.308,3239,5.761,3240,5.761,3241,3.942,3242,4.308,3243,4.308,3244,4.308,3245,4.308,3246,4.308,3247,4.308,3248,5.761,3249,4.308,3250,4.308,3251,5.761,3252,4.308,3253,4.308,3254,4.308,3255,4.308,3256,4.308,3257,4.308,3258,4.308,3259,5.761,3260,4.308,3261,4.308,3262,6.506,3263,4.865,3264,6.506,3265,4.865,3266,4.865]],["title/components/IssueIconComponent.html",[0,0.085,143,0.915]],["body/components/IssueIconComponent.html",[0,0.158,1,0.98,2,0.867,3,0.082,4,0.073,5,0.774,6,1.088,7,1.066,8,1.022,9,0.073,11,0.96,16,0.94,17,1.385,18,1.35,19,0.96,20,0.809,21,0.95,23,0.95,25,0.091,30,0.867,37,0.629,40,0.008,41,0.524,42,0.1,45,0.731,49,0.345,53,0.159,54,0.333,56,0.98,57,1.371,60,0.1,61,0.012,95,1.066,96,1.26,97,1.234,98,0.809,99,1.687,100,1.066,101,1.966,102,0.96,103,0.845,104,1.084,105,1.314,106,0.98,107,1.066,108,0.98,109,0.96,110,1.066,111,0.98,112,1.066,113,0.92,114,0.94,115,0.966,116,0.96,117,0.92,118,1.039,119,1.612,120,0.94,121,0.073,122,0.96,123,1.022,124,0.98,125,0.98,126,0.882,127,1.066,128,0.94,129,1.066,130,0.98,131,1.066,132,0.98,133,1.066,134,0.96,135,1.066,136,0.96,137,1.066,138,0.677,139,1.066,140,0.96,141,0.466,142,1.066,143,1.585,144,1.066,145,0.98,146,1.612,147,0.98,148,1.066,149,0.98,150,1.612,151,0.98,152,1.066,153,1.001,154,1.066,155,0.94,156,1.066,157,0.98,158,1.066,159,1.022,160,0.901,161,1.066,162,0.98,163,1.371,164,1.429,165,0.98,166,1.066,167,0.94,168,0.545,169,1.066,170,0.96,171,0.98,172,1.066,173,0.98,174,1.066,175,0.96,176,0.96,177,0.94,178,1.066,179,0.96,180,1.066,181,0.901,182,0.757,183,0.94,184,1.066,185,0.94,186,1.234,187,0.96,188,0.98,189,0.624,190,0.92,191,0.757,192,0.98,193,1.001,194,1.066,195,0.98,196,0.901,197,1.066,198,0.98,199,1.066,200,0.92,201,0.98,202,0.98,203,0.901,204,1.066,205,0.98,206,0.692,207,0.827,208,0.92,209,0.96,210,1.066,211,0.94,212,1.066,213,0.94,214,1.066,215,0.92,216,1.066,217,0.92,218,1.066,219,0.92,220,1.001,221,1.066,222,0.006,223,0.006,226,0.428,260,0.995,268,1.76,274,2.992,310,3.762,311,3.515,312,3.179,313,3.635,316,3.792,317,1.434,318,2.37,322,5.235,325,4.27,541,1.373,608,0.607,623,4.135,726,1.49,736,4.584,766,2.361,791,1.532,840,2.677,1090,2.827,1092,2.15,1206,1.76,1266,1.76,2096,2.948,2098,3.238,2191,3.958,2336,3.647,2337,3.647,2379,3.179,2532,6.317,2588,5.235,2737,3.083,2742,2.621,3267,4.27,3268,7.297,3269,6.468,3270,7.798,3271,7.798,3272,4.822,3273,4.822,3274,4.822,3275,7.798,3276,6.468,3277,6.468,3278,4.822,3279,6.468,3280,4.822,3281,4.822,3282,3.953,3283,4.27,3284,4.822]],["title/components/IssueItemComponent.html",[0,0.085,145,0.915]],["body/components/IssueItemComponent.html",[0,0.162,1,0.946,2,0.846,3,0.122,4,0.071,5,0.748,6,1.051,7,1.029,8,0.987,9,0.071,11,0.927,16,0.907,17,1.384,18,1.348,19,0.927,20,0.781,21,0.928,23,0.928,25,0.088,30,0.846,33,0.669,37,0.714,39,0.513,40,0.008,41,0.534,42,0.167,43,0.401,45,0.526,49,0.452,50,1.18,51,0.992,53,0.176,54,0.322,56,0.946,57,1.339,60,0.097,61,0.012,95,1.029,96,1.231,97,1.205,98,0.781,99,1.664,100,1.029,101,1.953,102,0.927,103,0.816,104,1.103,105,1.284,106,0.946,107,1.029,108,0.946,109,0.927,110,1.029,111,0.946,112,1.029,113,0.888,114,0.907,115,0.955,116,0.927,117,0.888,118,1.014,119,1.584,120,0.907,121,0.071,122,0.927,123,1.022,124,0.946,125,0.946,126,0.851,127,1.029,128,0.907,129,1.029,130,0.946,131,1.029,132,0.946,133,1.029,134,0.927,135,1.029,136,0.927,137,1.029,138,0.654,139,1.029,140,0.927,141,0.45,142,1.029,143,0.946,144,1.029,145,1.562,146,1.584,147,0.946,148,1.029,149,0.946,150,1.584,151,0.946,152,1.029,153,0.966,154,1.029,155,0.907,156,1.029,157,0.946,158,1.029,159,1.339,160,0.87,161,1.029,162,0.946,163,1.339,164,1.396,165,0.946,166,1.029,167,0.907,168,0.526,169,1.029,170,0.927,171,0.946,172,1.029,173,0.946,174,1.029,175,0.927,176,0.927,177,0.907,178,1.029,179,0.927,180,1.029,181,0.87,182,0.732,183,0.907,184,1.029,185,0.907,186,1.205,187,0.927,188,0.946,189,0.61,190,0.888,191,0.732,192,0.946,193,0.966,194,1.029,195,0.946,196,0.87,197,1.029,198,0.946,199,1.029,200,0.888,201,0.946,202,0.946,203,0.87,204,1.029,205,0.946,206,0.669,207,1.318,208,0.888,209,0.927,210,1.029,211,0.907,212,1.029,213,0.907,214,1.029,215,0.888,216,1.029,217,0.888,218,1.029,219,0.888,220,0.966,221,1.029,222,0.005,223,0.005,226,0.413,246,1.664,268,2.306,276,1.98,293,0.888,308,3.773,315,1.014,371,1.55,499,1.7,512,2.154,515,1.447,535,3.724,541,1.326,548,0.992,569,2.839,602,1.486,608,0.437,625,3.301,725,2.363,726,1.852,766,2.306,791,1.48,867,2.329,876,3.011,906,1.257,1092,2.383,1166,1.7,1168,2.093,1169,2.289,1185,2.035,1187,1.513,1253,3.562,1529,1.785,1561,3.897,1613,5.118,1619,2.615,1620,2.364,1640,2.22,1684,5.404,1747,2.422,1811,3.127,1990,3.861,2096,3.861,2191,2.364,2379,3.105,2529,6.866,2588,5.69,2593,2.977,2594,3.511,2595,2.531,2650,2.531,2651,4.203,2701,2.444,2724,6.807,2737,2.22,2742,2.531,2775,5.118,3007,3.207,3282,2.847,3285,2.847,3286,5.808,3287,4.039,3288,7.687,3289,8.036,3290,5.594,3291,4.657,3292,6.317,3293,3.773,3294,3.861,3295,3.773,3296,4.657,3297,4.124,3298,4.657,3299,4.657,3300,4.657,3301,4.657,3302,4.124]],["title/components/IssueLabelComponent.html",[0,0.085,147,0.915]],["body/components/IssueLabelComponent.html",[0,0.141,1,0.885,2,0.808,3,0.074,4,0.066,5,0.699,6,0.983,7,0.963,8,0.923,9,0.066,11,0.867,16,0.849,17,1.38,18,1.344,19,0.867,20,0.731,21,0.886,23,0.886,25,0.082,26,0.505,27,1.227,30,0.808,37,0.597,39,0.665,40,0.008,41,0.556,42,0.09,43,0.52,45,0.682,49,0.431,51,0.684,53,0.148,54,0.301,56,0.885,57,1.279,60,0.09,61,0.011,95,0.963,96,1.176,97,1.151,98,0.731,99,1.617,100,0.963,101,1.928,102,0.867,103,0.763,104,1.059,105,1.226,106,0.885,107,0.963,108,0.885,109,0.867,110,0.963,111,0.885,112,0.963,113,0.831,114,0.849,115,0.933,116,0.867,117,0.831,118,1.479,119,1.53,120,0.849,121,0.066,122,0.867,123,1.004,124,0.885,125,0.885,126,0.796,127,0.963,128,0.849,129,0.963,130,0.885,131,0.963,132,0.885,133,0.963,134,0.867,135,0.963,136,0.867,137,0.963,138,0.611,139,0.963,140,0.867,141,0.421,142,0.963,143,0.885,144,0.963,145,0.885,146,1.53,147,1.519,148,0.963,149,0.885,150,1.53,151,0.885,152,0.963,153,0.904,154,0.963,155,0.849,156,0.963,157,0.885,158,0.963,159,0.923,160,0.813,161,0.963,162,0.885,163,1.279,164,1.333,165,0.885,166,0.963,167,0.849,168,0.492,169,0.963,170,0.867,171,0.885,172,0.963,173,0.885,174,0.963,175,0.867,176,0.867,177,0.849,178,0.963,179,0.867,180,0.963,181,0.813,182,0.684,183,0.849,184,0.963,185,0.849,186,1.151,187,0.867,188,0.885,189,0.583,190,0.831,191,0.684,192,0.885,193,0.904,194,0.963,195,0.885,196,1.127,197,0.963,198,0.885,199,0.963,200,0.831,201,0.885,202,0.885,203,0.813,204,0.963,205,0.885,206,0.625,207,0.747,208,0.831,209,0.867,210,0.963,211,0.849,212,0.963,213,0.849,214,0.963,215,0.831,216,0.963,217,0.831,218,0.963,219,0.831,220,0.904,221,0.963,222,0.005,223,0.005,226,0.614,246,0.943,276,3.608,277,3.583,278,4.277,541,1.24,550,5.018,569,3.112,575,1.481,602,1.025,608,0.702,703,3.283,726,1.39,728,2.944,745,4.232,752,2.368,766,2.203,791,1.384,840,2.498,906,1.201,953,5.563,1092,2.484,1166,1.59,1168,3.112,1169,2.141,1170,2.211,1187,1.415,1513,5.018,1517,5.916,1638,2.554,1762,2.456,1811,2.925,1938,4.549,2263,2.925,2333,3.403,2461,2.785,2525,6.055,2588,5.018,2595,2.368,2650,4.062,2651,2.554,2653,2.966,2737,2.876,2742,3.28,2748,3.529,2749,6.95,3068,4.051,3074,4.888,3202,2.925,3282,2.663,3303,3.857,3304,4.888,3305,6.924,3306,6.034,3307,6.034,3308,6.034,3309,4.356,3310,6.034,3311,4.356,3312,7.474,3313,7.849,3314,6.055,3315,6.034,3316,4.356,3317,6.131,3318,6.619,3319,6.034,3320,7.849,3321,4.356,3322,3.857,3323,4.356,3324,4.356,3325,4.356,3326,4.356,3327,4.356,3328,4.356,3329,4.356,3330,4.356,3331,3.529,3332,4.356,3333,4.356,3334,4.356,3335,4.356,3336,4.356,3337,4.356,3338,4.356,3339,4.356,3340,4.356,3341,4.356,3342,3.529,3343,4.356,3344,4.356,3345,4.356,3346,4.356,3347,4.356,3348,4.356,3349,4.356,3350,6.034,3351,6.034]],["title/components/IssueListComponent.html",[0,0.085,149,0.915]],["body/components/IssueListComponent.html",[0,0.167,1,0.555,2,0.993,3,0.046,4,0.041,5,0.439,6,0.616,7,0.604,8,0.579,9,0.041,11,0.544,14,0.851,15,1.436,16,0.532,17,1.35,18,1.31,19,0.544,20,1.244,21,0.628,23,0.628,25,0.052,26,0.358,27,1.434,30,0.573,33,0.614,36,2.602,37,0.774,39,0.712,40,0.008,41,0.503,42,0.185,43,0.721,45,0.862,46,0.949,49,0.609,50,1.112,51,0.935,53,0.204,54,0.189,55,0.83,56,0.555,57,0.906,59,1.228,60,0.057,61,0.007,63,1.241,64,0.745,66,1.343,86,1.191,95,0.604,96,0.833,97,0.815,98,0.458,99,1.289,100,0.604,101,1.722,102,0.544,103,0.479,104,0.925,105,0.869,106,0.555,107,0.604,108,0.555,109,0.544,110,0.604,111,0.555,112,0.604,113,0.521,114,0.532,115,0.984,116,0.544,117,0.521,118,0.845,119,1.163,120,0.532,121,0.127,122,0.851,123,1.017,124,0.555,125,0.555,126,0.781,127,0.604,128,0.532,129,0.604,130,0.555,131,0.604,132,0.555,133,0.604,134,0.544,135,0.604,136,0.544,137,0.604,138,0.383,139,0.604,140,0.544,141,0.264,142,0.604,143,0.555,144,0.604,145,0.555,146,1.163,147,0.555,148,0.604,149,1.21,150,1.163,151,0.555,152,0.604,153,0.567,154,0.604,155,0.532,156,0.604,157,0.555,158,0.604,159,0.579,160,0.51,161,0.604,162,0.555,163,0.906,164,0.945,165,0.555,166,0.604,167,0.532,168,0.731,169,0.604,170,0.544,171,0.555,172,0.604,173,0.555,174,0.604,175,0.544,176,0.544,177,0.532,178,0.604,179,0.544,180,0.604,181,1.112,182,1.164,183,0.532,184,0.604,185,0.532,186,1.004,187,0.544,188,0.555,189,0.662,190,0.521,191,0.429,192,0.555,193,0.567,194,0.604,195,0.555,196,0.51,197,0.604,198,0.555,199,0.604,200,0.521,201,0.555,202,0.555,203,0.51,204,0.604,205,0.555,206,0.928,207,0.468,208,0.521,209,0.544,210,0.604,211,0.532,212,0.604,213,0.532,214,0.604,215,0.521,216,0.604,217,0.521,218,0.604,219,0.521,220,0.567,221,0.604,222,0.004,223,0.006,226,0.676,228,2.323,234,0.864,243,2.301,246,0.925,248,0.815,249,2.239,255,1.022,260,0.708,270,2.733,274,1.264,284,1.892,310,3.734,311,2.862,312,2.588,313,3.222,315,0.686,322,3.535,371,1.87,412,1.343,437,2.213,499,0.997,515,2.625,523,2.41,529,0.745,535,3.219,537,0.699,538,3.348,548,0.935,550,4.34,569,1.228,575,1.819,595,1.166,608,0.696,611,1.724,641,2.541,652,2.613,726,1.213,762,1.228,763,2.07,766,1.56,769,2.679,778,1.791,785,3.178,787,2.676,790,1.922,791,1.358,792,1.131,793,1.302,803,1.074,806,4.269,816,1.6,820,1.302,826,1.921,828,2.436,829,1.194,832,1.131,833,2.588,834,1.387,835,0.888,836,1.747,837,1.747,839,4.019,840,3.576,860,2.059,864,2.506,867,2.1,870,2.613,872,1.264,876,2.51,880,4.222,887,3.081,894,3.785,899,3.366,902,4.984,906,0.851,1005,1.639,1102,1.541,1171,1.302,1172,1.937,1189,1.162,1192,1.747,1193,1.434,1206,2.174,1210,1.485,1241,1.921,1254,3.126,1414,1.937,1454,3.868,1460,2.914,1561,3.513,1565,3.069,1566,4.579,1571,3.03,1572,1.387,1615,1.485,1630,3.64,1641,3.969,1650,1.937,1691,1.937,1749,3.03,2117,2.17,2191,3.023,2242,2.41,2243,2.733,2268,3.023,2297,2.87,2336,2.41,2337,2.41,2338,2.506,2389,1.747,2506,2.059,2510,2.059,2511,6.348,2517,2.059,2661,3.865,2701,2.763,2755,5.274,2770,4.663,2829,2.613,2956,3.785,2963,3.222,3294,2.613,3322,3.785,3352,2.059,3353,4.873,3354,3.969,3355,4.266,3356,3.463,3357,5.265,3358,4.266,3359,5.265,3360,5.265,3361,5.265,3362,4.266,3363,5.265,3364,5.265,3365,4.266,3366,3.785,3367,3.785,3368,4.275,3369,4.275,3370,5.956,3371,4.825,3372,5.956,3373,2.732,3374,3.785,3375,2.732,3376,2.419,3377,4.275,3378,2.732,3379,4.275,3380,2.732,3381,4.275,3382,4.275,3383,2.732,3384,6.854,3385,4.275,3386,4.275,3387,2.732,3388,2.732,3389,3.785,3390,2.732,3391,4.275,3392,4.275,3393,3.785,3394,5.956,3395,4.275,3396,6.854,3397,4.275,3398,2.732,3399,7.163,3400,4.275,3401,3.785,3402,4.275,3403,2.732,3404,2.732,3405,2.732,3406,2.732,3407,2.732,3408,2.732,3409,2.732,3410,2.732,3411,4.266,3412,2.732,3413,2.732,3414,4.266,3415,3.463,3416,2.732,3417,2.732,3418,2.732,3419,4.266,3420,3.463,3421,2.732,3422,2.732,3423,3.463,3424,2.732,3425,5.265,3426,2.732,3427,2.419,3428,5.265,3429,4.275,3430,2.732,3431,3.785,3432,6.464,3433,4.275,3434,2.419,3435,5.265,3436,2.732,3437,2.732,3438,4.266,3439,2.732,3440,2.732,3441,2.732,3442,2.732,3443,4.275,3444,4.275,3445,2.732,3446,2.213,3447,2.732,3448,2.732,3449,2.732,3450,2.732,3451,2.732,3452,2.213,3453,2.732,3454,2.732,3455,2.213,3456,2.213,3457,2.213,3458,2.213,3459,2.732,3460,2.732,3461,2.213,3462,2.213,3463,2.213,3464,2.732,3465,2.732,3466,2.732,3467,2.732,3468,2.732,3469,5.956,3470,2.732,3471,5.265,3472,2.732,3473,2.732,3474,2.419,3475,2.732,3476,2.732,3477,4.275,3478,2.732,3479,6.464,3480,4.275,3481,4.275,3482,2.732,3483,2.732,3484,4.275,3485,2.732,3486,4.275,3487,2.732,3488,2.732,3489,2.059,3490,2.732,3491,4.275,3492,2.732,3493,2.732,3494,4.275,3495,4.275,3496,4.275,3497,4.275,3498,2.419,3499,2.419,3500,2.419,3501,2.059,3502,2.732,3503,2.732,3504,2.732,3505,2.419]],["title/components/IssueLocationComponent.html",[0,0.085,151,0.915]],["body/components/IssueLocationComponent.html",[0,0.163,1,0.951,2,0.849,3,0.08,4,0.071,5,0.752,6,1.056,7,1.035,8,0.992,9,0.071,11,0.932,16,0.912,17,1.384,18,1.348,19,0.932,20,0.785,21,0.931,23,0.931,25,0.088,30,0.849,33,0.672,37,0.694,39,0.516,40,0.008,41,0.535,42,0.149,43,0.403,45,0.717,46,0.931,49,0.453,53,0.177,54,0.324,56,0.951,57,1.344,60,0.097,61,0.012,86,1.766,95,1.035,96,1.235,97,1.209,98,0.785,99,1.667,100,1.035,101,1.955,102,0.932,103,0.82,104,1.104,105,1.288,106,0.951,107,1.035,108,0.951,109,0.932,110,1.035,111,0.951,112,1.035,113,0.893,114,0.912,115,0.957,116,0.932,117,0.893,118,1.018,119,1.588,120,0.912,121,0.109,122,0.932,123,1.01,124,0.951,125,0.951,126,0.856,127,1.035,128,0.912,129,1.035,130,0.951,131,1.035,132,0.951,133,1.035,134,0.932,135,1.035,136,0.932,137,1.035,138,0.657,139,1.035,140,0.932,141,0.452,142,1.035,143,0.951,144,1.035,145,0.951,146,1.588,147,0.951,148,1.035,149,0.951,150,1.588,151,1.566,152,1.035,153,0.972,154,1.035,155,0.912,156,1.035,157,0.951,158,1.035,159,0.992,160,0.874,161,1.035,162,0.951,163,1.344,164,1.401,165,0.951,166,1.035,167,0.912,168,0.529,169,1.035,170,0.932,171,0.951,172,1.035,173,0.951,174,1.035,175,0.932,176,0.932,177,0.912,178,1.035,179,0.932,180,1.035,181,0.874,182,0.735,183,0.912,184,1.035,185,0.912,186,1.209,187,0.932,188,0.951,189,0.612,190,0.893,191,0.735,192,0.951,193,0.972,194,1.035,195,0.951,196,1.439,197,1.035,198,0.951,199,1.035,200,0.893,201,0.951,202,0.951,203,0.874,204,1.035,205,0.951,206,0.672,207,0.803,208,0.893,209,0.932,210,1.035,211,0.912,212,1.035,213,0.912,214,1.035,215,0.893,216,1.035,217,0.893,218,1.035,219,0.893,220,0.972,221,1.035,222,0.005,223,0.005,226,0.415,268,1.709,276,3.056,277,3.086,293,0.893,499,1.709,535,3.73,548,0.996,602,1.492,608,0.44,625,3.319,726,1.656,766,2.314,791,1.487,832,1.938,867,2.336,906,1.262,911,4.146,1092,1.556,1166,1.709,1168,3.73,1169,3.534,1170,3.218,1171,3.022,1176,4.146,1185,2.77,1186,2.624,1187,2.06,1526,4.54,1614,4.934,1619,2.624,1640,2.231,1747,2.43,2379,3.116,2546,6.724,2588,5.572,2651,4.72,2653,2.301,2654,3.319,2656,3.529,2701,3.327,2736,4.146,2737,2.231,2742,2.545,2775,5.136,3072,4.053,3294,3.875,3314,5.824,3506,4.146,3507,7.189,3508,6.34,3509,7.704,3510,7.704,3511,6.34,3512,7.189,3513,4.682,3514,4.682,3515,4.682,3516,4.682,3517,4.682,3518,6.34,3519,6.34,3520,7.704,3521,3.793,3522,3.319,3523,4.682,3524,4.682,3525,4.682,3526,3.319,3527,4.682,3528,4.682,3529,6.34,3530,4.682,3531,4.682]],["title/interfaces/IssueNode.html",[121,0.068,1201,2.641]],["body/interfaces/IssueNode.html",[0,0.155,3,0.086,4,0.12,5,1.069,9,0.113,25,0.095,26,0.557,40,0.008,42,0.192,43,0.574,49,0.666,53,0.195,60,0.138,61,0.02,104,0.83,115,0.791,121,0.139,123,0.715,138,0.934,141,0.72,168,1.004,189,0.796,191,1.046,222,0.006,223,0.006,226,0.447,234,1.354,248,0.886,260,0.598,284,2.692,296,4.166,316,2.952,515,1.564,529,1.373,541,1.433,548,1.395,595,2.393,608,0.824,622,2.317,720,2.43,725,2.489,817,3.172,835,1.636,906,1.746,952,4.069,1055,1.895,1056,3.284,1059,3.616,1060,3.373,1083,1.883,1189,3.17,1197,4.372,1198,2.263,1199,2.839,1200,4.698,1201,5.068,1202,3.554,1203,3.172,1204,2.737,1205,2.4,1206,3.203,1207,3.172,1208,2.556,1209,2.643,1210,4.053,1211,4.448,1212,4.372,1213,3.078,1214,3.078,1215,3.078,1216,3.078,1217,3.078,1218,3.078,1219,3.078,1220,3.078,1221,3.079,1222,3.078,1223,3.078,1224,5.043,1225,3.665,1226,4.255,1227,3.903,1228,2.991,1229,4.312,1230,4.255,1231,4.255,1232,2.264,1233,3.079,1234,3.172,1235,4.069,1236,3.618,1237,3.272,1238,4.255,1239,4.069,1240,4.255,1241,2.991,1242,4.255,1243,3.379,1244,4.255,1245,2.909,1246,4.255,1247,3.753,1248,4.255,1249,4.069,1250,3.219,1251,4.205,1252,2.643,1253,2.839,1254,2.643,1255,3.753,1256,3.219,1257,3.219,1258,3.219,1259,3.903,1260,3.219,1261,4.255,1262,3.219,1263,3.219,1264,3.219,1265,3.078,1266,1.838,1267,3.753,1268,4.767,1269,3.219,1270,3.219,1271,4.255,1272,3.219,1273,4.255,1274,4.255,1275,3.219,1276,3.219,1277,4.053,1278,4.255,1279,3.078,1280,4.069,1281,4.255,1282,3.219,1283,4.474,1284,3.493,1285,3.219,1286,3.078,1287,3.219,1288,3.219,1289,3.219,1290,3.078,1291,3.903,1292,3.078,1293,2.839,1294,3.078,1295,2.643]],["title/injectables/IssueStoreService.html",[532,1.082,3532,3.649]],["body/injectables/IssueStoreService.html",[3,0.08,4,0.072,9,0.109,25,0.089,30,0.855,33,0.679,37,0.789,39,1.01,40,0.008,41,0.591,42,0.19,43,0.789,45,1.031,49,0.595,53,0.19,54,0.327,60,0.098,61,0.012,63,1.332,115,0.758,222,0.006,223,0.006,226,0.42,227,2.789,234,1.048,281,1.469,293,0.902,515,1.983,532,1.534,537,1.21,540,1.958,541,1.346,545,2.869,547,2.685,548,1.003,555,2.066,608,0.856,646,1.958,691,1.469,753,1.857,814,3.24,818,3.469,980,5.652,1227,3.742,1237,3.138,1298,3.023,1309,4.285,1334,4.187,1347,4.187,1416,3.742,1417,4.081,1569,6.267,2055,4.811,2555,5.171,2556,4.946,2557,4.811,2584,4.811,2607,5.652,2645,5.652,3532,5.171,3533,8.145,3534,6.383,3535,5.171,3536,6.383,3537,6.383,3538,6.383,3539,6.383,3540,6.383,3541,6.383,3542,6.383,3543,6.383,3544,6.383,3545,6.383,3546,6.383,3547,4.729,3548,7.736,3549,7.225,3550,7.736,3551,7.225,3552,7.736,3553,7.225,3554,7.736,3555,7.225,3556,7.736,3557,7.225,3558,7.736,3559,7.225,3560,7.736,3561,7.225,3562,7.736,3563,7.225,3564,7.736,3565,7.225,3566,7.736,3567,7.225,3568,7.736,3569,7.225,3570,7.736,3571,7.225,3572,7.736,3573,7.736,3574,7.736,3575,4.729,3576,6.383,3577,6.383,3578,7.736,3579,4.729,3580,6.383,3581,6.383,3582,8.324,3583,4.729,3584,6.383,3585,7.736,3586,4.729,3587,6.383,3588,6.383,3589,7.736,3590,6.383,3591,6.383,3592,4.729,3593,6.383,3594,6.383,3595,8.324,3596,4.729,3597,6.383,3598,4.729,3599,6.383,3600,4.729,3601,6.383,3602,8.324,3603,4.729,3604,6.383,3605,7.736,3606,4.729,3607,6.383,3608,6.383,3609,7.736,3610,4.729,3611,6.383,3612,6.383,3613,7.736,3614,4.729,3615,6.383,3616,6.383,3617,8.324,3618,6.383,3619,8.324,3620,4.729,3621,4.729,3622,4.729,3623,4.729,3624,4.729,3625,4.729,3626,4.729,3627,4.729,3628,4.729,3629,4.729,3630,4.729,3631,4.729,3632,4.729,3633,4.729,3634,4.729,3635,4.729,3636,4.729]],["title/directives/ItemDirective.html",[98,0.756,209,0.896]],["body/directives/ItemDirective.html",[2,1.111,3,0.122,4,0.109,9,0.109,16,1.398,17,1.19,40,0.008,53,0.176,54,0.496,60,0.149,61,0.018,98,1.508,207,1.421,208,1.369,209,1.65,222,0.007,223,0.007,226,0.637,402,5.068,637,2.756,1401,5.877,3637,6.354,3638,7.342,3639,8.291,3640,8.291,3641,8.291]],["title/components/LabelSearchComponent.html",[0,0.085,155,0.877]],["body/components/LabelSearchComponent.html",[0,0.151,1,0.847,2,0.784,3,0.071,4,0.063,5,0.669,6,0.94,7,0.921,8,0.883,9,0.063,11,0.829,14,1.164,15,1.844,16,0.812,17,1.378,18,1.341,19,0.829,20,0.699,21,0.859,23,0.859,25,0.079,26,0.489,27,1.11,30,0.784,33,0.598,37,0.735,39,0.645,40,0.008,41,0.541,42,0.16,43,0.504,45,0.764,46,0.859,49,0.418,50,1.442,51,1.292,53,0.19,54,0.288,56,0.847,57,1.24,60,0.121,61,0.011,63,1.077,64,1.136,90,2.443,95,0.921,96,1.14,97,1.398,98,0.699,99,1.586,100,0.921,101,1.91,102,0.829,103,0.73,104,1.047,105,1.189,106,0.847,107,0.921,108,0.847,109,0.829,110,0.921,111,0.847,112,0.921,113,0.795,114,0.812,115,0.918,116,0.829,117,0.795,118,1.416,119,1.494,120,0.812,121,0.102,122,0.829,123,0.972,124,0.847,125,0.847,126,0.762,127,0.921,128,0.812,129,0.921,130,0.847,131,0.921,132,0.847,133,0.921,134,0.829,135,0.921,136,0.829,137,0.921,138,0.585,139,0.921,140,0.829,141,0.653,142,0.921,143,0.847,144,0.921,145,0.847,146,1.494,147,0.847,148,0.921,149,0.847,150,1.494,151,0.847,152,0.921,153,0.865,154,0.921,155,1.428,156,0.921,157,0.847,158,0.921,159,0.883,160,0.778,161,0.921,162,0.847,163,1.24,164,1.293,165,0.847,166,0.921,167,0.812,168,0.471,169,0.921,170,0.829,171,0.847,172,0.921,173,0.847,174,0.921,175,0.829,176,0.829,177,0.812,178,0.921,179,0.829,180,0.921,181,0.778,182,0.654,183,0.812,184,0.921,185,0.812,186,1.116,187,0.829,188,0.847,189,0.565,190,0.795,191,0.654,192,0.847,193,0.865,194,0.921,195,0.847,196,1.536,197,0.921,198,0.847,199,0.921,200,0.795,201,0.847,202,0.847,203,1.092,204,0.921,205,0.847,206,0.598,207,1.003,208,0.795,209,0.829,210,0.921,211,0.812,212,0.921,213,0.812,214,0.921,215,0.795,216,0.921,217,0.795,218,0.921,219,0.795,220,0.865,221,0.921,222,0.005,223,0.005,226,0.37,231,2.657,246,1.463,248,0.871,260,0.495,268,1.521,293,0.795,315,0.669,318,2.048,371,1.022,389,3.772,431,4.197,515,1.817,537,1.066,539,2.797,540,1.725,544,1.872,547,2.247,556,3.847,576,3.576,608,0.391,615,3.299,617,3.299,680,4.539,684,2.443,808,2.349,811,1.354,821,3.927,903,2.349,906,0.829,1033,1.354,1092,1.944,1168,1.872,1175,3.375,1189,2.487,1245,2.556,1395,2.443,1454,4.174,1467,2.663,1485,2.556,1519,2.953,1565,3.578,1617,3.43,1857,3.576,2108,4.146,2117,2.969,2123,4.937,2124,6.127,2125,5.284,2126,2.953,2127,4.922,2128,5.521,2129,4.739,2130,4.739,2131,4.739,2132,5.477,2133,3.14,2134,4.922,2135,3.375,2136,4.515,2137,3.927,2138,4.739,2139,3.74,2140,5.473,2141,4.739,2142,5.477,2143,4.739,2144,5.477,2145,5.477,2146,5.096,2147,5.096,2148,4.739,2149,4.322,2150,3.375,2151,4.739,2152,2.547,2153,4.739,2154,5.939,2155,3.14,2156,2.797,2157,4.539,2158,3.14,2159,3.375,2160,3.375,2161,3.375,2162,3.375,2163,3.375,2164,3.375,2165,3.14,2166,3.375,2167,5.939,2168,3.375,2169,3.375,2170,4.739,2171,3.375,2172,3.375,2173,3.375,2174,2.953,2175,3.927,2653,2.048,3642,5.85,3643,4.166,3644,5.85,3645,4.166,3646,4.166,3647,4.166,3648,4.166,3649,4.166,3650,4.166,3651,4.166,3652,5.85,3653,3.689]],["title/injectables/LabelStoreService.html",[532,1.082,2134,3.024]],["body/injectables/LabelStoreService.html",[3,0.102,4,0.091,9,0.091,25,0.114,30,1.001,33,0.865,37,0.699,39,0.894,40,0.008,41,0.581,42,0.176,43,0.699,45,0.917,49,0.656,50,1.125,51,0.947,53,0.208,54,0.417,60,0.168,61,0.015,63,1.192,104,1.058,118,1.362,141,0.721,222,0.006,223,0.007,226,0.663,231,3.335,277,2.31,281,1.872,293,1.15,317,2.22,532,1.794,537,1.542,540,2.495,547,2.994,548,1.37,549,3.252,555,2.633,571,6.872,575,1.991,595,1.643,608,0.797,646,2.495,691,1.872,816,1.831,832,2.495,867,2.756,1005,3.111,1298,3.853,1302,4.565,1454,3.791,1565,3.678,1987,5.293,2128,4.046,2134,5.014,2136,4.211,2137,5.014,2165,4.543,2174,5.293,2317,5.448,2340,3.684,2584,4.543,3059,5.293,3654,6.872,3655,7.468,3656,7.468,3657,6.026,3658,8.885,3659,6.026,3660,7.468,3661,5.336,3662,7.468,3663,9.236,3664,6.026,3665,7.468,3666,6.026,3667,6.026,3668,6.026,3669,6.026,3670,6.026,3671,6.026,3672,6.026]],["title/classes/LayoutNode.html",[61,0.011,3673,3.192]],["body/classes/LayoutNode.html",[0,0.131,3,0.075,4,0.126,9,0.066,25,0.083,26,0.507,27,1.46,30,0.812,33,0.871,37,0.777,39,0.766,40,0.008,41,0.448,42,0.186,43,0.599,45,0.847,46,1.021,49,0.536,50,1.631,51,1.355,53,0.108,61,0.018,63,0.891,83,2.681,84,3.306,103,0.768,115,0.891,121,0.066,141,0.671,168,1.064,189,0.76,222,0.005,223,0.005,226,0.616,246,0.949,248,1.01,260,0.991,296,4,315,0.974,548,1.236,553,2.029,563,3.918,568,3.306,573,2.384,575,2.046,608,0.653,654,4.802,705,3.453,720,1.601,728,3.783,742,3.306,777,2.571,817,2.89,826,3.123,835,2.762,862,2.571,871,5.238,887,2.09,906,1.66,915,3.553,923,2.384,927,3.306,941,3.295,1023,2.681,1043,3.555,1055,2.646,1056,3.257,1059,3.173,1060,3.187,1061,3.109,1082,3.109,1083,1.64,1166,3.045,1177,3.306,1232,3.067,1233,2.805,1237,2.98,1254,2.302,1277,3.777,1515,4.57,1594,2.384,1604,2.571,1762,3.419,1787,3.306,1813,4.297,1817,4.297,1914,4.395,1933,3.109,1988,3.109,2014,3.109,2466,3.553,2863,6.374,2864,6.073,2982,4.912,3202,5.463,3214,4.57,3446,3.553,3489,5.65,3522,3.109,3673,5.313,3674,7.346,3675,3.553,3676,6.063,3677,6.063,3678,6.063,3679,6.063,3680,6.063,3681,6.063,3682,6.063,3683,6.063,3684,6.063,3685,6.063,3686,6.153,3687,6.638,3688,6.063,3689,4.386,3690,6.592,3691,4.386,3692,4.386,3693,4.386,3694,4.386,3695,6.063,3696,4.386,3697,4.386,3698,4.386,3699,6.638,3700,4.386,3701,4.386,3702,4.386,3703,4.665,3704,4.386,3705,6.835,3706,4.386,3707,5.369,3708,4.386,3709,5.369,3710,6.153,3711,5.369,3712,5.369,3713,5.369,3714,4.386,3715,3.884,3716,3.884,3717,3.884,3718,3.884,3719,3.884,3720,3.884,3721,6.153,3722,5.629,3723,3.884,3724,3.884,3725,5.369,3726,3.884,3727,3.884,3728,3.884,3729,3.884,3730,3.884,3731,3.884,3732,3.884,3733,3.884,3734,3.884,3735,3.884,3736,3.884,3737,3.553,3738,3.306,3739,3.884,3740,3.884,3741,3.884,3742,3.884,3743,6.153,3744,5.369,3745,3.884,3746,3.884,3747,3.884,3748,5.369,3749,3.884,3750,5.629,3751,3.884,3752,3.884,3753,3.884,3754,3.884,3755,3.884,3756,3.553,3757,3.884,3758,3.884,3759,3.884,3760,3.884,3761,3.884,3762,3.553,3763,3.884,3764,3.884,3765,3.884,3766,3.884,3767,3.884,3768,3.884,3769,3.884,3770,3.884,3771,3.884,3772,5.369]],["title/components/LinkedIssueItemComponent.html",[0,0.085,157,0.915]],["body/components/LinkedIssueItemComponent.html",[0,0.15,1,0.916,2,0.945,3,0.077,4,0.068,5,0.724,6,1.017,7,0.996,8,0.955,9,0.068,11,0.897,14,1.23,15,1.923,16,0.878,17,1.382,18,1.346,19,0.897,20,0.756,21,0.908,23,0.908,25,0.085,26,0.517,27,1.347,30,0.828,33,0.647,37,0.724,39,0.497,40,0.008,41,0.529,42,0.174,43,0.608,45,0.51,46,0.662,49,0.542,53,0.206,54,0.312,56,0.916,57,1.309,60,0.094,61,0.011,63,1.114,64,1.23,90,2.644,95,0.996,96,1.204,97,1.179,98,0.756,99,1.641,100,0.996,101,1.941,102,0.897,103,0.79,104,1.068,105,1.256,106,0.916,107,0.996,108,0.916,109,0.897,110,0.996,111,0.916,112,0.996,113,0.86,114,0.878,115,0.944,116,0.897,117,0.86,118,0.992,119,1.558,120,0.878,121,0.068,122,0.897,123,1.025,124,0.916,125,0.916,126,0.824,127,0.996,128,0.878,129,0.996,130,0.916,131,0.996,132,0.916,133,0.996,134,0.897,135,0.996,136,0.897,137,0.996,138,0.633,139,0.996,140,0.897,141,0.435,142,0.996,143,0.916,144,0.996,145,0.916,146,1.558,147,0.916,148,0.996,149,0.916,150,1.558,151,0.916,152,0.996,153,0.936,154,0.996,155,0.878,156,0.996,157,1.541,158,1.558,159,1.861,160,0.842,161,0.996,162,0.916,163,1.309,164,1.365,165,0.916,166,0.996,167,0.878,168,0.51,169,0.996,170,0.897,171,0.916,172,0.996,173,0.916,174,0.996,175,0.897,176,0.897,177,0.878,178,0.996,179,0.897,180,0.996,181,0.842,182,0.708,183,0.878,184,0.996,185,0.878,186,1.179,187,0.897,188,0.916,189,0.597,190,0.86,191,0.708,192,0.916,193,0.936,194,0.996,195,0.916,196,1.416,197,0.996,198,0.916,199,0.996,200,0.86,201,0.916,202,0.916,203,1.154,204,0.996,205,0.916,206,0.647,207,1.209,208,0.86,209,0.897,210,0.996,211,0.878,212,0.996,213,0.878,214,0.996,215,0.86,216,0.996,217,0.86,218,0.996,219,0.86,220,0.936,221,0.996,222,0.005,223,0.005,228,3.359,235,2.771,267,2.256,268,2.256,293,0.86,318,2.216,468,6.932,499,1.646,512,2.086,515,1.401,535,3.777,537,1.154,548,0.708,726,1.624,763,2.771,766,2.256,768,2.756,769,3.069,785,3.466,787,2.918,790,2.574,791,1.963,792,1.866,793,2.149,803,1.772,806,4.079,832,1.866,835,1.465,867,2.291,884,2.882,995,3.485,1183,2.366,1185,2.7,1186,1.866,1187,2.008,1192,3.95,1253,3.485,1529,2.369,1654,5.472,1948,2.882,2016,2.542,2251,3.653,2655,3.196,2657,3.993,2701,2.366,2750,3.399,2873,2.542,3285,2.756,3286,5.711,3287,3.95,3290,3.993,3293,3.653,3297,3.993,3353,3.399,3773,7.05,3774,7.05,3775,7.05,3776,7.584,3777,7.05,3778,6.179,3779,4.509,3780,4.509,3781,4.509,3782,4.509,3783,6.179,3784,6.179,3785,4.509,3786,4.509,3787,4.509,3788,4.509,3789,6.179,3790,4.509,3791,4.509,3792,4.509,3793,4.509,3794,3.993,3795,4.509,3796,4.509]],["title/interfaces/ListId.html",[121,0.068,1460,1.77]],["body/interfaces/ListId.html",[0,0.106,2,0.756,3,0.096,4,0.086,9,0.086,25,0.107,26,0.6,40,0.008,42,0.195,45,0.638,49,0.592,51,1.237,60,0.194,92,2.219,104,0.704,118,0.907,121,0.119,123,0.606,126,1.515,168,1.058,206,0.811,222,0.006,223,0.006,226,0.501,248,0.852,260,0.985,281,1.754,317,1.679,371,2.145,512,2.612,515,1.754,529,1.54,538,3.096,548,1.453,566,3.791,569,2.537,575,1.385,595,2.333,602,1.328,608,0.803,762,3.222,778,3.02,811,2.559,818,3.069,827,4.002,834,4.206,835,2.559,840,3.43,863,4.002,889,2.537,964,3.61,1000,4.002,1055,2.041,1064,4.203,1221,3.316,1359,2.612,1460,3.257,1485,2.467,1565,2.337,1566,3.61,1730,3.311,1731,4.281,1781,2.775,1876,4.203,1883,4.583,1885,2.866,2067,4.619,2115,3.451,2117,2.866,2268,2.866,2603,3.61,2625,3.791,2805,3.791,2821,3.791,2822,3.791,3797,3.61,3798,6.381,3799,6.381,3800,4.256,3801,5.938,3802,4.256,3803,4.574,3804,4.574,3805,4.574,3806,3.61,3807,5.808,3808,5.808,3809,5.808,3810,5.808,3811,4.574,3812,4.574,3813,4.574,3814,4.574,3815,4.574,3816,4.256,3817,4.256,3818,4.256,3819,4.256,3820,4.256,3821,4.256,3822,4.002,3823,4.574,3824,4.574,3825,4.574,3826,4.574,3827,4.574,3828,4.574,3829,4.574]],["title/interfaces/ListParams.html",[121,0.068,1730,2.641]],["body/interfaces/ListParams.html",[0,0.104,2,0.742,3,0.094,4,0.084,9,0.084,25,0.104,26,0.592,40,0.008,42,0.193,43,0.709,45,0.626,49,0.588,51,1.226,60,0.193,92,2.783,104,0.691,118,0.889,121,0.118,123,0.595,126,1.666,168,1.043,206,0.795,222,0.006,223,0.006,226,0.491,248,0.841,260,0.978,281,1.72,317,1.646,371,2.086,512,2.561,515,1.72,529,1.51,538,3.519,548,1.449,566,4.753,569,3.182,575,1.358,595,2.319,602,1.836,608,0.798,762,3.182,778,3.007,811,2.536,818,3.009,827,3.924,834,3.593,835,2.536,840,3.405,863,3.924,889,3.697,964,3.539,1000,3.924,1055,2.42,1064,3.246,1221,3.275,1359,2.561,1460,3.068,1485,3.093,1565,2.292,1566,3.539,1730,4.151,1731,4.242,1781,2.721,1876,4.151,1883,5.559,1885,3.961,2067,4.576,2115,3.384,2117,2.81,2268,2.81,2603,3.539,2625,3.717,2805,3.717,2821,3.717,2822,3.717,3797,3.539,3798,5.735,3799,5.735,3800,4.173,3801,5.883,3802,4.173,3803,4.485,3804,4.485,3805,4.485,3806,3.539,3807,5.735,3808,5.735,3809,5.735,3810,5.735,3811,4.485,3812,4.485,3813,4.485,3814,4.485,3815,4.485,3816,4.173,3817,4.173,3818,4.173,3819,4.173,3820,4.173,3821,4.173,3822,3.924,3823,5.735,3824,4.485,3825,4.485,3826,4.485,3827,4.485,3828,4.485,3829,4.485]],["title/components/LoginComponent.html",[0,0.085,160,0.841]],["body/components/LoginComponent.html",[0,0.154,1,0.895,2,0.814,3,0.075,4,0.067,5,0.707,6,0.993,7,0.973,8,0.933,9,0.067,11,0.876,14,1.209,15,1.899,16,0.858,17,1.381,18,1.345,19,1.385,20,0.738,21,0.893,23,0.893,25,0.083,26,0.509,30,0.814,33,0.632,37,0.72,39,0.485,40,0.008,41,0.525,42,0.145,43,0.379,45,0.498,46,1.023,49,0.434,50,1.3,51,1.094,53,0.2,54,0.304,56,0.895,57,1.288,60,0.091,61,0.011,63,1.023,64,1.201,86,1.694,89,4.276,92,1.73,93,1.569,95,0.973,96,1.184,97,1.159,98,0.738,99,1.625,100,0.973,101,1.932,102,0.876,103,0.771,104,1.062,105,1.235,106,0.895,107,0.973,108,0.895,109,0.876,110,0.973,111,0.895,112,0.973,113,0.84,114,0.858,115,0.936,116,0.876,117,0.84,118,0.976,119,1.538,120,0.858,121,0.067,122,0.876,123,0.979,124,0.895,125,0.895,126,0.805,127,0.973,128,0.858,129,0.973,130,0.895,131,0.973,132,0.895,133,0.973,134,0.876,135,0.973,136,0.876,137,0.973,138,0.618,139,0.973,140,0.876,141,0.425,142,0.973,143,0.895,144,0.973,145,0.895,146,1.538,147,0.895,148,0.973,149,0.895,150,1.538,151,0.895,152,0.973,153,0.914,154,0.973,155,0.858,156,0.973,157,0.895,158,0.973,159,0.933,160,1.402,161,0.973,162,0.895,163,1.288,164,1.343,165,0.895,166,0.973,167,0.858,168,0.498,169,0.973,170,0.876,171,0.895,172,0.973,173,0.895,174,0.973,175,0.876,176,0.876,177,0.858,178,0.973,179,0.876,180,0.973,181,0.822,182,0.691,183,0.858,184,0.973,185,0.858,186,1.159,187,0.876,188,0.895,189,0.725,190,0.84,191,0.691,192,0.895,193,0.914,194,0.973,195,0.895,196,0.822,197,0.973,198,0.895,199,0.973,200,0.84,201,0.895,202,0.895,203,0.822,204,0.973,205,0.895,206,1.131,207,0.755,208,0.84,209,0.876,210,0.973,211,0.858,212,0.973,213,0.858,214,0.973,215,0.84,216,0.973,217,0.84,218,0.973,219,0.84,220,0.914,221,0.973,222,0.005,223,0.005,226,0.391,234,0.723,246,1.841,250,2.988,254,2.036,255,1.646,259,1.872,281,1.888,293,0.84,315,0.707,317,1.807,382,3.12,499,1.607,521,6.12,522,4.935,524,4.924,535,3.752,540,1.822,552,3.304,599,3.304,615,3.428,626,4.319,644,6.165,667,5.584,674,4.924,677,4.443,753,1.281,772,2.482,839,3.564,906,0.876,955,2.581,1033,2.439,1167,3.898,1187,2.439,1193,2.31,1245,3.281,1266,2.219,1392,4.8,1398,4.451,1522,2.393,1528,2.955,1529,1.688,1536,4.674,1619,1.822,1640,2.098,2432,3.898,2468,2.814,2476,3.898,2661,4.234,2732,3.318,3830,3.898,3831,5.383,3832,7.508,3833,6.078,3834,6.962,3835,6.078,3836,6.962,3837,4.674,3838,6.962,3839,6.165,3840,6.648,3841,3.566,3842,4.402,3843,4.402,3844,6.078,3845,5.383,3846,6.078,3847,6.078,3848,6.078,3849,6.962,3850,6.078,3851,4.402,3852,4.402,3853,4.402,3854,4.402,3855,6.165,3856,4.402,3857,6.078,3858,4.402,3859,4.402,3860,4.402,3861,6.962,3862,4.402,3863,3.898,3864,4.402,3865,6.078,3866,4.402,3867,6.078,3868,4.402,3869,3.898,3870,3.898,3871,4.402,3872,4.402,3873,5.383,3874,4.402,3875,4.402]],["title/components/MarkdownEditorComponent.html",[0,0.085,162,0.915]],["body/components/MarkdownEditorComponent.html",[0,0.164,1,0.976,2,0.864,3,0.082,4,0.073,5,0.771,6,1.084,7,1.061,8,1.018,9,0.073,11,0.956,16,0.936,17,1.385,18,1.349,19,0.956,20,0.806,21,0.947,23,0.947,25,0.091,26,0.54,30,0.864,37,0.671,40,0.008,41,0.524,42,0.151,45,0.543,46,0.705,49,0.461,50,0.897,51,0.754,53,0.118,54,0.332,56,0.976,57,1.367,60,0.1,61,0.012,86,1.338,95,1.061,96,1.257,97,1.23,98,0.806,99,1.685,100,1.061,101,1.964,102,0.956,103,0.841,104,1.083,105,1.311,106,0.976,107,1.061,108,0.976,109,0.956,110,1.061,111,0.976,112,1.061,113,0.916,114,0.936,115,0.965,116,0.956,117,0.916,118,1.036,119,1.609,120,0.936,121,0.073,122,0.956,123,0.99,124,0.976,125,0.976,126,0.878,127,1.061,128,0.936,129,1.061,130,0.976,131,1.061,132,0.976,133,1.061,134,0.956,135,1.061,136,0.956,137,1.061,138,0.674,139,1.061,140,0.956,141,0.464,142,1.061,143,0.976,144,1.061,145,0.976,146,1.609,147,0.976,148,1.061,149,0.976,150,1.609,151,0.976,152,1.061,153,0.997,154,1.061,155,0.936,156,1.061,157,0.976,158,1.061,159,1.018,160,0.897,161,1.061,162,1.582,163,1.926,164,1.425,165,0.976,166,1.061,167,0.936,168,0.543,169,1.061,170,0.956,171,0.976,172,1.061,173,0.976,174,1.061,175,0.956,176,0.956,177,0.936,178,1.061,179,0.956,180,1.061,181,0.897,182,0.754,183,0.936,184,1.061,185,0.936,186,1.23,187,0.956,188,0.976,189,0.623,190,0.916,191,1.427,192,0.976,193,0.997,194,1.061,195,0.976,196,0.897,197,1.061,198,0.976,199,1.061,200,0.916,201,0.976,202,0.976,203,0.897,204,1.061,205,0.976,206,0.69,207,0.823,208,0.916,209,0.956,210,1.061,211,0.936,212,1.061,213,0.936,214,1.061,215,0.916,216,1.061,217,0.916,218,1.061,219,0.916,220,0.997,221,1.061,222,0.006,223,0.006,226,0.426,248,0.571,277,1.841,424,4.572,450,6.307,452,6.579,553,3.868,726,1.486,745,2.936,766,2.354,1005,2.473,1064,4.564,1168,3.499,1169,2.361,1187,1.56,1188,3.404,1239,3.942,1266,1.753,1523,3.62,1747,1.841,1980,4.977,2098,3.224,2556,5.461,2650,2.61,2653,2.361,2771,4.862,2776,5.756,2804,4.33,2813,5.225,2914,5.711,3241,3.891,3294,3.942,3526,3.404,3738,4.862,3876,6.579,3877,3.62,3878,6.45,3879,6.45,3880,6.449,3881,5.711,3882,7.282,3883,7.785,3884,7.282,3885,4.803,3886,6.45,3887,4.803,3888,6.45,3889,4.862,3890,4.803,3891,6.45,3892,6.45,3893,4.803,3894,6.45,3895,4.803,3896,4.803,3897,4.803,3898,3.224,3899,4.803]],["title/components/MarkdownPreviewComponent.html",[0,0.085,165,0.915]],["body/components/MarkdownPreviewComponent.html",[0,0.161,1,1.056,2,0.911,3,0.088,4,0.079,5,0.835,6,1.173,7,1.149,8,1.102,9,0.079,11,1.034,14,1.352,15,2.065,16,1.013,17,1.389,18,1.354,19,1.034,20,0.872,21,0.998,23,0.998,25,0.098,33,0.746,37,0.448,40,0.008,41,0.537,42,0.108,46,0.764,49,0.574,53,0.128,54,0.359,56,1.056,57,1.44,60,0.108,61,0.013,64,1.418,95,1.149,96,1.324,97,1.297,98,0.872,99,1.738,100,1.149,101,1.992,102,1.034,103,0.91,104,1.102,105,1.381,106,1.056,107,1.149,108,1.056,109,1.034,110,1.149,111,1.056,112,1.149,113,0.992,114,1.013,115,0.991,116,1.034,117,0.992,118,1.091,119,1.673,120,1.013,121,0.079,122,1.034,123,0.999,124,1.056,125,1.056,126,0.95,127,1.149,128,1.013,129,1.149,130,1.056,131,1.149,132,1.056,133,1.149,134,1.034,135,1.149,136,1.034,137,1.149,138,0.729,139,1.149,140,1.034,141,0.502,142,1.149,143,1.056,144,1.149,145,1.056,146,1.673,147,1.056,148,1.149,149,1.056,150,1.673,151,1.056,152,1.149,153,1.079,154,1.149,155,1.013,156,1.149,157,1.056,158,1.149,159,1.102,160,0.971,161,1.149,162,1.056,163,1.947,164,1.502,165,1.632,166,1.149,167,1.013,168,0.588,169,1.149,170,1.034,171,1.056,172,1.149,173,1.056,174,1.149,175,1.034,176,1.034,177,1.013,178,1.149,179,1.034,180,1.149,181,0.971,182,0.816,183,1.013,184,1.149,185,1.013,186,1.297,187,1.034,188,1.056,189,0.656,190,0.992,191,0.816,192,1.056,193,1.079,194,1.149,195,1.056,196,0.971,197,1.149,198,1.056,199,1.149,200,0.992,201,1.056,202,1.056,203,0.971,204,1.149,205,1.056,206,0.746,207,0.891,208,0.992,209,1.034,210,1.149,211,1.013,212,1.149,213,1.013,214,1.149,215,0.992,216,1.149,217,0.992,218,1.149,219,0.992,220,1.079,221,1.149,222,0.006,223,0.006,226,0.461,315,1.091,455,5.506,726,1.566,766,2.481,1092,1.728,1122,2.043,1882,3.49,2188,5.506,2379,3.341,2556,4.345,2557,3.918,2737,2.477,3282,3.177,3304,5.506,3389,4.603,3876,5.506,3898,4.563,3900,4.603,3901,6.797,3902,7.573,3903,6.797,3904,7.573,3905,5.198,3906,4.603]],["title/classes/MultiSourceList.html",[61,0.011,3907,3.024]],["body/classes/MultiSourceList.html",[0,0.134,2,0.451,3,0.057,4,0.127,9,0.051,13,1.358,14,0.67,15,1.368,17,0.484,18,0.473,20,0.565,21,0.495,22,1.432,23,0.495,24,1.432,25,0.064,26,0.42,27,1.534,28,1.472,30,0.672,33,0.72,35,2.076,37,0.769,39,0.782,40,0.008,41,0.428,42,0.184,43,0.73,45,0.871,46,1.132,49,0.627,50,1.326,51,1.115,53,0.195,54,0.233,55,1.024,60,0.138,61,0.013,62,1.173,63,1.132,64,0.919,72,1.358,92,1.972,103,0.59,115,0.596,117,1.143,121,0.091,126,1.214,168,0.567,182,1.169,189,0.807,190,0.643,191,1.432,207,1.217,222,0.007,223,0.004,226,0.299,234,1.265,235,1.972,244,1.558,246,1.668,248,0.979,253,1.358,256,1.514,260,1.065,284,1.07,301,1.656,315,1.323,371,1.943,537,0.862,538,2.925,548,1.211,553,1.558,561,2.32,567,2.726,602,1.18,608,0.795,637,2.474,652,3.066,691,2.461,720,1.23,725,1.26,728,2.823,763,1.972,764,2.261,769,3.279,778,2.91,780,3.383,783,2.546,787,2.748,790,2.188,791,1.07,792,1.394,793,1.605,803,1.324,811,2.677,826,2.254,833,3.264,843,1.975,889,1.514,906,0.67,923,1.831,926,3.367,941,2.726,985,1.923,1002,1.394,1003,1.324,1004,1.394,1021,1.394,1028,2.261,1033,1.094,1055,1.706,1058,3.164,1232,2.038,1428,2.729,1460,3.182,1466,1.899,1483,1.975,1485,2.192,1492,2.153,1493,2.153,1497,1.975,1521,3.367,1559,3.608,1565,1.394,1627,2.729,1649,3.042,1666,2.828,1682,4.245,1701,2.828,1723,1.899,1729,2.059,1731,3.257,1732,2.059,1747,2.297,1783,3.894,1812,1.975,1825,1.899,1828,2.153,1846,3.663,1885,3.603,1986,2.153,2064,5.464,2065,2.261,2066,2.261,2067,1.975,2075,2.153,2139,3.831,2152,2.059,2523,5.476,2762,2.261,2815,5.267,2816,3.831,2818,2.153,2826,4.457,2840,3.555,2873,1.899,3806,2.153,3837,4.457,3898,3.367,3907,4.457,3908,5.728,3909,5.61,3910,3.781,3911,3.781,3912,5.064,3913,4.517,3914,5.351,3915,4.517,3916,4.517,3917,4.517,3918,5.005,3919,4.517,3920,5.016,3921,4.248,3922,5.016,3923,5.005,3924,3.368,3925,4.442,3926,3.368,3927,3.368,3928,3.368,3929,5.016,3930,3.368,3931,2.729,3932,3.368,3933,3.781,3934,2.983,3935,3.368,3936,3.207,3937,3.781,3938,3.781,3939,3.368,3940,3.781,3941,3.781,3942,3.781,3943,3.368,3944,3.368,3945,3.781,3946,3.781,3947,3.368,3948,3.368,3949,2.539,3950,2.059,3951,3.066,3952,4.517,3953,4.517,3954,3.781,3955,2.539,3956,2.388,3957,2.539,3958,3.781,3959,3.781,3960,2.539,3961,2.539,3962,2.539,3963,2.539,3964,3.781,3965,2.539,3966,3.781,3967,2.539,3968,2.539,3969,2.539,3970,2.539,3971,2.539,3972,2.539,3973,2.539,3974,2.539,3975,2.539,3976,2.539,3977,2.539,3978,2.539,3979,2.539,3980,2.539,3981,3.781,3982,4.517,3983,2.539,3984,2.539,3985,2.388,3986,2.539,3987,2.539,3988,2.539,3989,2.388,3990,2.539,3991,2.539,3992,2.539,3993,4.517,3994,2.539,3995,2.539,3996,2.539,3997,2.539,3998,2.539,3999,2.539,4000,2.539,4001,2.539,4002,2.539,4003,2.539,4004,2.539,4005,2.539,4006,2.539,4007,2.539,4008,2.261,4009,3.207,4010,4.248,4011,2.388,4012,2.388,4013,2.388,4014,3.555,4015,2.388,4016,2.388,4017,2.388,4018,2.539,4019,2.388,4020,2.539,4021,2.539,4022,3.555,4023,2.539,4024,2.539,4025,4.248,4026,2.539,4027,2.388,4028,2.539,4029,2.539,4030,3.781,4031,3.781,4032,2.539,4033,2.388,4034,2.539,4035,2.539,4036,2.539,4037,2.539,4038,2.539,4039,2.539,4040,2.539,4041,2.539,4042,3.781,4043,2.539,4044,2.539,4045,2.539,4046,2.539,4047,2.539,4048,2.539,4049,3.781,4050,2.539,4051,2.539,4052,2.539,4053,2.539,4054,2.539,4055,2.539,4056,2.539,4057,2.539,4058,2.539,4059,2.539,4060,2.539,4061,2.539,4062,3.781,4063,2.539,4064,2.539,4065,2.539,4066,2.539,4067,2.539,4068,2.388,4069,2.539]],["title/classes/NodeCache.html",[61,0.011,1904,2.879]],["body/classes/NodeCache.html",[3,0.04,4,0.036,9,0.036,14,0.76,15,1.042,19,0.954,25,0.045,26,0.46,27,0.627,30,0.512,33,0.34,37,0.555,39,0.823,40,0.008,41,0.355,42,0.175,43,0.555,45,0.928,46,0.348,50,0.443,51,0.753,53,0.148,60,0.125,61,0.016,63,1.143,64,1.042,66,1.878,72,1.54,78,2.607,88,2.435,92,0.932,96,0.744,103,0.415,109,1.2,115,0.282,121,0.036,126,1.289,168,0.845,182,0.947,189,0.681,207,0.822,222,0.003,223,0.003,226,0.21,227,1.036,228,3.502,234,1.514,235,2.162,246,1.823,248,0.865,260,0.993,293,0.915,315,1.303,317,2.313,371,1.909,459,1.097,485,1.516,523,2.154,537,0.607,538,2.664,545,1.717,547,1.828,548,1.357,549,3.031,557,1.097,563,1.337,567,1.289,569,1.066,572,1.624,573,2.607,574,3.4,575,1.479,595,1.042,602,1.419,608,0.848,616,1.787,617,2.705,621,2.879,622,0.825,623,3.066,641,2.533,675,2.705,691,2.522,705,0.982,720,0.866,724,1.787,726,0.88,752,1.289,753,2.468,757,2.707,761,2.442,762,3.497,763,1.502,767,2.879,769,2.41,772,2.705,774,1.787,776,4.545,777,1.39,778,2.886,780,3.561,785,3.941,787,2.805,791,0.753,795,1.592,803,1.502,811,2.528,816,1.161,818,2.607,819,2.076,820,1.13,826,1.066,832,0.982,833,2.703,840,1.986,843,3.536,876,3.708,887,1.13,889,2.156,906,0.76,923,1.289,941,2.076,947,3.536,955,2.812,972,1.516,991,1.592,1005,1.464,1021,0.982,1024,3.101,1033,0.77,1043,1.39,1055,2.007,1063,1.39,1088,2.154,1114,1.516,1122,3.47,1200,2.607,1232,2.818,1234,1.821,1236,1.289,1241,1.717,1245,1.036,1302,1.449,1359,2.981,1417,3.066,1457,2.24,1460,1.885,1466,1.337,1473,3.277,1475,2.24,1478,1.681,1483,2.24,1485,3.586,1497,2.24,1513,4.55,1529,1.464,1559,1.289,1594,2.076,1602,1.681,1612,1.592,1615,3.502,1617,1.39,1638,2.24,1649,1.204,1664,1.592,1665,1.921,1666,3.4,1667,5.295,1668,4.455,1669,1.921,1670,4.885,1671,1.921,1672,3.094,1673,3.094,1674,1.921,1675,1.921,1676,1.921,1677,1.921,1678,2.564,1679,1.921,1680,1.921,1681,3.094,1682,3.066,1683,1.921,1684,2.879,1685,3.094,1686,3.094,1688,3.886,1690,1.921,1691,3.4,1695,1.921,1696,3.886,1697,1.787,1701,4.104,1702,3.516,1703,1.921,1704,3.094,1705,1.921,1706,1.921,1707,1.921,1708,1.921,1710,1.921,1714,1.921,1716,1.787,1717,3.094,1718,1.921,1719,1.921,1721,1.921,1722,1.921,1723,2.154,1724,1.921,1727,5.486,1728,4.455,1729,1.449,1730,2.24,1731,1.289,1732,1.449,1733,3.939,1734,1.787,1735,2.707,1736,1.681,1737,1.681,1738,5.108,1739,2.707,1740,2.707,1741,1.516,1742,3.4,1743,1.681,1744,1.921,1745,1.921,1746,1.921,1747,2.312,1748,2.564,1749,1.681,1750,1.787,1751,1.681,1752,1.204,1753,1.921,1754,1.921,1755,3.094,1756,2.879,1757,1.787,1758,3.886,1759,3.886,1760,1.921,1761,1.921,1762,2.154,1763,3.094,1764,1.921,1765,1.592,1766,1.921,1767,1.921,1768,1.787,1769,3.094,1770,1.921,1771,2.879,1772,1.921,1773,1.921,1774,2.442,1775,1.921,1776,1.921,1777,1.921,1778,1.921,1779,1.921,1780,1.681,1781,1.166,1782,5.221,1783,3.99,1784,1.787,1785,3.886,1786,4.455,1787,1.787,1788,1.449,1789,6.303,1790,1.921,1791,1.921,1792,1.921,1793,4.455,1794,1.921,1795,3.094,1796,1.921,1797,3.886,1798,3.094,1799,3.886,1800,1.921,1801,3.886,1802,1.921,1803,4.455,1804,1.921,1805,1.921,1806,1.921,1807,1.592,1808,1.921,1809,1.787,1810,1.516,1811,1.592,1812,1.39,1813,1.681,1814,1.921,1815,1.921,1816,3.886,1817,1.681,1818,1.921,1819,1.921,1820,2.286,1821,4.885,1822,1.921,1823,1.787,1824,1.787,1825,2.705,1826,1.921,1827,1.787,1828,2.442,1829,1.787,1830,1.921,1831,1.921,1832,4.455,1833,3.886,1834,3.616,1835,1.289,1836,1.787,1837,1.787,1838,1.787,1839,3.094,1840,3.886,1841,1.921,1842,1.921,1843,4.885,1844,1.921,1845,1.921,1846,2.335,1847,2.879,1848,1.921,1849,1.921,1850,1.921,1851,3.886,1852,1.787,1853,3.094,1854,1.921,1855,1.921,1856,3.886,1857,1.449,1858,1.921,1859,1.921,1860,1.921,1861,1.921,1862,1.921,1863,3.094,1864,1.921,1865,1.921,1866,3.094,1867,1.921,1868,1.921,1869,1.921,1870,1.921,1871,1.921,1872,2.707,1873,3.616,1874,3.094,1875,1.921,1876,1.39,1877,1.921,1878,3.094,1879,1.244,1880,1.921,1881,1.787,1882,1.592,1883,3.066,1884,2.24,1885,3.44,1886,1.921,1887,1.921,1888,1.921,1889,1.921,1890,1.787,1891,1.921,1892,1.921,1893,1.921,1894,1.921,1895,1.921,1896,1.921,1897,1.921,1898,1.921,1899,1.921,1900,1.921,1901,1.921,1902,1.921,1903,1.921,1904,3.516,1905,1.921,1906,4.885,1907,1.921,1908,3.094,1909,1.921,1910,1.921,1911,1.787,1912,2.879,1913,1.787,1914,1.39,1915,1.921,1916,1.921,1917,1.921,1918,1.921,1919,4.455,1920,3.886,1921,4.455,1922,3.886,1923,1.921,1924,1.921,1925,1.921,1926,4.885,1927,1.921,1928,1.921,1929,3.886,1930,3.886,1931,3.886,1932,3.886,1933,1.681,1934,3.616,1935,1.921,1936,1.921,1937,1.921,1938,3.616,1939,1.921,1940,2.707,1941,1.921,1942,1.921,1943,1.921,1944,1.921,1945,3.094,1946,1.921,1947,1.921,1948,1.516,1949,1.921,1950,1.787,1951,1.921,1952,1.921,1953,1.921,1954,1.921,1955,1.921,1956,1.921,1957,3.616,1958,1.921,1959,3.886,1960,3.886,1961,1.681,1962,1.921,1963,1.921,1964,1.921,1965,1.921,1966,1.921,1967,1.921,1968,1.921,1969,1.921,1970,1.921,1971,1.921,1972,1.921,1973,1.921,1974,1.921,1975,1.921,1976,1.921,1977,1.921,1978,1.787,1979,1.787,1980,1.516,1981,1.787,1982,1.516,1983,3.898,1984,1.681,1985,1.921,1986,2.442,1987,1.681,1988,2.707,1989,3.094,1990,2.335,1991,3.094,1992,1.921,1993,1.921,1994,1.787,1995,2.932,1996,3.094,1997,2.879,1998,1.921,1999,1.921,2000,2.879,2001,1.921,2002,1.921,2003,1.921,2004,3.094,2005,2.879,2006,3.094,2007,3.094,2008,1.921,2009,1.921,2010,1.921,2011,1.921,2012,2.442,2013,1.921,2014,1.681,2015,1.921,2016,1.337,2017,1.337,2018,1.921,2019,1.921,2020,1.921,2021,1.921,2022,1.921,2023,1.921,2052,3.382,4070,3.82,4071,3.82,4072,3.82,4073,2.371,4074,2.371,4075,2.371]],["title/components/NodeDetailsComponent.html",[0,0.085,167,0.877]],["body/components/NodeDetailsComponent.html",[0,0.167,1,0.561,2,0.923,3,0.047,4,0.042,5,0.444,6,0.623,7,0.61,8,0.585,9,0.042,11,0.55,14,0.858,15,1.446,16,0.538,17,1.351,18,1.311,19,1.055,20,1.155,21,0.633,23,0.633,25,0.052,26,0.361,27,1.436,30,0.578,33,0.397,36,2.618,37,0.775,39,0.475,40,0.008,41,0.558,42,0.185,43,0.372,45,0.915,46,1.232,49,0.61,50,1.39,51,1.169,53,0.199,54,0.191,55,0.839,56,0.561,57,0.914,59,1.241,60,0.11,61,0.007,63,1.243,64,0.753,72,1.114,85,1.884,86,0.77,90,1.619,93,1.89,95,0.61,96,0.84,97,0.822,98,0.463,99,1.296,100,0.61,101,1.728,102,0.55,103,0.484,104,0.976,105,0.876,106,0.561,107,0.61,108,0.561,109,0.55,110,0.61,111,0.561,112,0.61,113,0.527,114,0.538,115,0.772,116,0.55,117,1.239,118,0.692,119,1.172,120,0.538,121,0.13,122,0.55,123,0.909,124,0.561,125,0.561,126,0.505,127,0.61,128,0.538,129,0.61,130,0.561,131,0.61,132,0.561,133,0.61,134,0.55,135,0.61,136,0.55,137,0.61,138,0.388,139,0.61,140,0.55,141,0.267,142,0.61,143,0.561,144,0.61,145,0.561,146,1.172,147,0.561,148,0.61,149,0.561,150,1.172,151,0.561,152,0.61,153,0.573,154,0.61,155,0.538,156,0.61,157,0.561,158,0.61,159,0.585,160,0.516,161,0.61,162,0.561,163,0.914,164,0.953,165,0.561,166,0.61,167,1.167,168,1.014,169,0.61,170,0.55,171,0.561,172,0.61,173,0.561,174,0.61,175,0.55,176,0.55,177,0.538,178,0.61,179,0.55,180,0.61,181,1.213,182,0.434,183,0.538,184,0.61,185,0.84,186,0.822,187,0.55,188,0.561,189,0.416,190,0.527,191,0.434,192,0.561,193,0.573,194,0.61,195,0.561,196,0.516,197,0.61,198,0.561,199,0.61,200,0.527,201,0.561,202,0.561,203,0.516,204,0.61,205,0.561,206,0.397,207,0.473,208,0.527,209,0.55,210,0.61,211,0.538,212,0.61,213,0.538,214,0.61,215,0.527,216,0.61,217,0.527,218,0.61,219,0.527,220,0.573,221,0.61,222,0.004,223,0.004,226,0.66,234,0.708,246,1.49,248,0.962,249,3.488,250,3.658,254,1.994,255,1.033,260,0.884,268,1.936,274,1.994,284,1.37,293,0.527,315,0.444,389,1.937,417,1.619,427,1.619,431,2.343,447,5.087,459,3.006,499,1.008,529,1.634,535,3.094,544,1.937,548,0.941,552,4.399,553,2.771,595,1.176,602,1.248,608,0.647,625,1.958,670,3.256,678,1.688,719,1.402,726,1.586,766,1.574,778,1.803,790,1.008,792,1.143,816,1.31,828,2.453,829,1.207,832,1.143,834,1.402,835,1.947,836,1.766,837,1.766,839,2.528,865,1.143,867,1.723,872,1.278,887,2.055,903,2.431,906,0.858,925,3.41,984,2.383,985,2.297,995,2.431,1001,1.766,1002,1.143,1003,1.086,1004,1.143,1005,1.653,1018,3.492,1019,2.756,1020,2.894,1021,3.165,1022,2.756,1023,2.635,1024,2.431,1025,3.25,1032,3.492,1085,3.83,1086,3.758,1092,0.918,1122,2.355,1147,2.082,1170,1.402,1187,1.401,1191,2.238,1221,1.278,1253,1.557,1254,1.45,1296,4.598,1300,2.082,1307,5.305,1327,4.695,1346,3.817,1350,4.695,1396,2.082,1397,1.557,1403,3.758,1404,2.894,1405,4.295,1406,5.578,1407,4.295,1408,4.295,1409,3.758,1410,2.635,1411,3.109,1413,4.853,1414,4.881,1434,2.756,1435,3.817,1436,5.609,1437,4.757,1438,3.817,1440,1.958,1460,2.084,1529,1.653,1533,4.598,1534,2.082,1580,3.492,1617,2.528,1655,2.945,1750,2.082,1835,2.343,1881,3.25,1914,1.619,1940,1.958,1948,1.766,2051,4.695,2094,3.25,2122,4.022,2242,3.378,2268,1.402,2567,5.754,2579,3.817,2648,1.958,2798,2.238,2809,2.082,3007,1.402,3069,3.817,3282,2.635,3434,3.817,3438,2.238,4076,6.395,4077,2.082,4078,5.302,4079,4.311,4080,4.695,4081,4.695,4082,6.097,4083,5.302,4084,5.302,4085,5.991,4086,5.991,4087,5.991,4088,5.991,4089,5.991,4090,5.991,4091,4.311,4092,5.991,4093,4.311,4094,2.762,4095,4.311,4096,2.762,4097,2.762,4098,2.762,4099,2.762,4100,3.817,4101,2.762,4102,3.056,4103,2.762,4104,2.762,4105,2.762,4106,2.762,4107,2.762,4108,2.762,4109,4.311,4110,2.762,4111,2.762,4112,2.762,4113,2.762,4114,2.762,4115,2.762,4116,2.762,4117,2.762,4118,2.762,4119,2.762,4120,2.762,4121,2.762,4122,2.762,4123,2.762,4124,2.762,4125,2.762,4126,2.762,4127,2.762,4128,2.762,4129,2.762,4130,5.754,4131,7.352,4132,5.827,4133,3.817,4134,3.817,4135,2.446,4136,2.762,4137,2.762,4138,2.762,4139,2.762,4140,2.762,4141,2.762,4142,4.311,4143,5.827,4144,2.762,4145,4.311,4146,2.762,4147,4.311,4148,2.762,4149,2.762,4150,2.762,4151,2.762,4152,2.762,4153,2.762,4154,2.762,4155,4.311,4156,2.762,4157,2.762,4158,4.311,4159,4.311,4160,2.762,4161,2.762,4162,5.302,4163,4.311,4164,2.762,4165,2.762,4166,2.762,4167,2.762,4168,2.762,4169,6.885,4170,4.311,4171,4.311,4172,4.311,4173,2.762,4174,5.991,4175,4.311,4176,6.885,4177,2.762,4178,4.311,4179,2.762,4180,2.762,4181,4.311,4182,4.311,4183,2.762,4184,4.311,4185,2.762,4186,2.762,4187,2.762,4188,2.762,4189,2.762,4190,2.762,4191,2.762,4192,2.762,4193,2.762,4194,2.762,4195,4.311,4196,2.762,4197,2.762,4198,2.762,4199,5.991,4200,5.302,4201,2.762]],["title/components/NodeDetailsPageComponent.html",[0,0.085,170,0.896]],["body/components/NodeDetailsPageComponent.html",[0,0.147,1,0.975,2,0.863,3,0.082,4,0.073,5,0.77,6,1.082,7,1.06,8,1.016,9,0.073,11,0.954,14,1.282,15,1.985,16,0.934,17,1.384,18,1.348,19,0.954,20,0.805,21,0.947,23,0.947,25,0.091,26,0.539,30,0.863,33,0.689,37,0.7,39,0.71,40,0.008,41,0.551,42,0.168,43,0.555,45,0.542,46,0.947,49,0.556,50,1.359,51,1.143,53,0.179,54,0.331,56,0.975,57,1.366,60,0.1,61,0.012,63,0.947,64,1.308,95,1.06,96,1.255,97,1.229,98,0.805,99,1.684,100,1.06,101,1.964,102,0.954,103,0.84,104,1.083,105,1.309,106,0.975,107,1.06,108,0.975,109,0.954,110,1.06,111,0.975,112,1.06,113,0.915,114,0.934,115,0.965,116,0.954,117,0.915,118,1.035,119,1.608,120,0.934,121,0.073,122,0.954,123,0.99,124,0.975,125,0.975,126,0.877,127,1.06,128,0.934,129,1.06,130,0.975,131,1.06,132,0.975,133,1.06,134,0.954,135,1.06,136,0.954,137,1.06,138,0.673,139,1.06,140,0.954,141,0.622,142,1.06,143,0.975,144,1.06,145,0.975,146,1.608,147,0.975,148,1.06,149,0.975,150,1.608,151,0.975,152,1.06,153,0.995,154,1.06,155,0.934,156,1.06,157,0.975,158,1.06,159,1.016,160,0.896,161,1.06,162,0.975,163,1.366,164,1.424,165,0.975,166,1.06,167,0.934,168,0.945,169,1.06,170,1.548,171,0.975,172,1.06,173,0.975,174,1.06,175,0.954,176,0.954,177,0.934,178,1.06,179,0.954,180,1.06,181,0.896,182,0.753,183,0.934,184,1.06,185,0.934,186,1.229,187,0.954,188,0.975,189,0.622,190,0.915,191,0.753,192,0.975,193,0.995,194,1.06,195,0.975,196,0.896,197,1.06,198,0.975,199,1.06,200,0.915,201,0.975,202,0.975,203,0.896,204,1.06,205,0.975,206,0.689,207,0.822,208,0.915,209,0.954,210,1.06,211,0.934,212,1.06,213,0.934,214,1.06,215,0.915,216,1.06,217,0.915,218,1.06,219,0.915,220,0.995,221,1.06,222,0.006,223,0.006,260,0.766,293,0.915,317,2.581,446,3.066,447,2.705,448,3.22,459,4.278,460,6.3,499,1.751,535,3.838,599,3.502,602,1.712,778,2.475,835,2.365,867,2.365,925,3.382,1050,3.819,1051,4.083,1085,4.652,1143,2.607,1283,4.104,1284,3.819,2661,4.387,2701,3.382,3032,3.22,3474,4.247,3841,3.885,4076,5.925,4131,5.706,4132,3.885,4134,5.706,4143,3.885,4202,4.247,4203,7.277,4204,6.444,4205,6.444,4206,6.444,4207,6.444,4208,4.796,4209,4.796,4210,4.796,4211,4.796,4212,4.796]],["title/interfaces/NodeId.html",[121,0.068,778,1.532]],["body/interfaces/NodeId.html",[0,0.106,2,0.755,3,0.096,4,0.085,9,0.085,25,0.106,26,0.599,40,0.008,42,0.195,45,0.637,49,0.624,51,1.236,60,0.194,92,2.214,104,0.703,118,0.904,121,0.119,123,0.605,126,1.514,168,1.057,206,0.809,222,0.006,223,0.006,226,0.5,248,0.851,260,0.984,281,1.75,317,1.675,371,2.031,512,2.606,515,1.75,529,1.536,538,3.093,548,1.477,566,3.782,569,2.531,575,1.382,595,2.331,602,1.325,608,0.803,762,3.536,778,2.971,811,2.326,818,3.891,827,3.993,834,3.633,835,2.777,840,3.427,863,3.993,889,2.531,964,3.601,1000,3.993,1055,2.038,1064,3.303,1221,3.311,1359,2.606,1460,3.093,1485,2.461,1565,2.332,1566,3.601,1730,3.303,1731,4.277,1781,2.769,1876,4.197,1883,4.576,1885,2.859,2067,4.613,2115,3.443,2117,2.859,2268,2.859,2603,3.601,2625,3.782,2805,3.782,2821,3.782,2822,3.782,3797,3.601,3798,6.374,3799,6.374,3800,4.246,3801,5.931,3802,4.246,3803,4.563,3804,4.563,3805,4.563,3806,3.601,3807,5.799,3808,5.799,3809,5.799,3810,5.799,3811,4.563,3812,4.563,3813,4.563,3814,4.563,3815,4.563,3816,4.246,3817,4.246,3818,4.246,3819,4.246,3820,4.246,3821,4.246,3822,3.993,3823,4.563,3824,4.563,3825,4.563,3826,4.563,3827,4.563,3828,4.563,3829,4.563]],["title/interfaces/Position.html",[121,0.068,1059,1.816]],["body/interfaces/Position.html",[0,0.152,3,0.089,4,0.122,5,1.099,9,0.104,25,0.099,26,0.572,40,0.008,42,0.19,49,0.661,53,0.198,60,0.142,61,0.017,104,0.655,115,0.624,121,0.139,123,0.735,138,0.737,141,0.661,168,0.969,189,0.807,191,0.825,222,0.006,223,0.006,234,1.324,248,0.905,260,0.624,284,2.418,296,4.111,316,3.079,515,1.632,529,1.432,541,1.495,548,1.347,595,2.415,608,0.832,622,1.828,720,1.917,725,1.964,817,2.503,835,1.706,906,1.762,952,3.21,1055,2.441,1056,3.615,1059,3.669,1060,3.713,1083,1.964,1189,3.236,1197,4.463,1198,2.36,1199,2.962,1200,4.66,1201,5.028,1202,3.628,1203,3.261,1204,2.855,1205,2.503,1206,3.232,1207,3.261,1208,2.666,1209,2.756,1210,4.137,1211,4.232,1212,4.463,1213,3.21,1214,3.21,1215,3.21,1216,3.21,1217,3.21,1218,3.21,1219,3.21,1220,3.21,1221,3.166,1222,3.21,1223,3.21,1224,4.183,1225,3.742,1226,3.358,1227,3.079,1228,2.36,1229,3.719,1230,3.358,1231,3.358,1232,1.786,1233,2.43,1234,2.503,1235,3.21,1236,2.855,1237,2.582,1238,3.358,1239,3.21,1240,3.358,1241,2.36,1242,3.358,1243,2.666,1244,3.358,1245,2.295,1246,3.358,1247,2.962,1248,3.358,1249,3.21,1250,3.358,1251,4.292,1252,2.756,1253,2.962,1254,2.756,1255,3.859,1256,3.358,1257,3.358,1258,3.358,1259,4.012,1260,3.358,1261,4.375,1262,3.358,1263,3.358,1264,3.358,1265,3.21,1266,1.917,1267,3.859,1268,4.866,1269,3.358,1270,3.358,1271,4.375,1272,3.358,1273,4.375,1274,4.375,1275,3.358,1276,3.358,1277,4.137,1278,4.375,1279,3.21,1280,4.183,1281,4.375,1282,3.358,1283,4.548,1284,3.591,1285,3.358,1286,3.21,1287,3.358,1288,3.358,1289,3.358,1290,3.21,1291,4.012,1292,3.21,1293,2.962,1294,3.21,1295,2.756]],["title/interfaces/Positions.html",[121,0.068,4213,3.649]],["body/interfaces/Positions.html",[0,0.165,2,0.728,3,0.025,4,0.082,5,0.969,9,0.022,14,0.294,15,0.701,17,0.212,18,0.207,20,1.012,21,0.217,23,0.217,25,0.028,26,0.386,27,0.669,30,0.198,36,1.123,40,0.008,42,0.171,45,0.46,46,0.678,49,0.5,50,0.276,51,0.232,53,0.2,54,0.102,55,0.449,59,1.532,60,0.031,61,0.012,63,1.293,64,0.403,66,2.487,68,2.288,69,4.103,72,0.596,80,1.822,82,1.048,83,1.571,85,0.646,86,1.41,93,0.527,96,0.288,97,0.282,103,0.259,104,0.425,113,0.282,114,0.288,115,0.548,120,0.288,121,0.133,123,0.941,138,0.207,141,0.869,168,1.032,186,0.282,189,0.393,191,0.232,196,0.276,206,0.827,222,0.002,223,0.003,226,0.131,228,3.411,234,1.124,246,1.404,248,0.746,260,1.089,267,0.938,268,1.847,271,1.937,281,1.875,293,0.282,295,1.114,296,4.461,301,1.676,310,2.515,311,0.804,315,1.072,317,2.222,322,2.288,340,4.098,341,1.048,355,1.048,371,0.631,412,1.676,428,1.309,437,2.082,442,1.309,443,3.945,444,0.945,445,1.309,446,0.945,447,0.834,448,0.993,459,2.664,487,2.735,493,1.048,499,0.54,512,0.684,515,2.352,523,1.449,529,1.646,535,1.532,536,1.048,537,0.378,540,0.612,541,0.421,544,1.155,548,0.904,549,1.307,550,2.288,553,0.684,556,1.349,557,1.577,558,1.114,561,2.792,562,2.179,563,0.834,567,0.804,569,0.664,572,1.093,573,1.853,574,0.834,575,2.074,576,2.084,583,4.683,594,1.571,602,0.958,608,0.772,611,2.192,615,1.922,617,0.834,622,2.436,637,0.854,641,2.804,648,1.114,650,1.198,654,0.776,671,3.323,672,3.476,680,2.735,684,1.507,691,0.459,703,1.114,705,1.91,720,1.244,723,1.309,726,0.592,728,1.093,742,1.114,751,1.114,753,1.185,761,1.643,762,2.588,763,1.01,772,0.834,777,1.507,787,0.612,803,0.581,814,2.342,816,1.538,817,2.591,818,1.397,821,2.288,824,2.761,828,1.189,829,0.646,840,2.095,860,5.161,862,0.867,864,2.388,867,0.835,872,1.189,875,1.309,880,5.225,887,0.705,889,1.831,899,3.476,902,5.533,903,0.834,906,1.506,923,1.397,924,3.097,941,0.804,944,1.725,955,2.705,956,4.514,969,5.161,972,3.235,1005,1.94,1021,1.064,1023,0.904,1030,2.082,1042,3.323,1055,0.97,1056,2.834,1058,0.705,1059,2.693,1060,2.911,1062,0.612,1077,1.048,1083,0.961,1085,2.179,1087,1.937,1089,0.993,1090,2.705,1091,3.476,1092,1.133,1102,0.834,1122,0.581,1166,2.102,1171,3.563,1180,2.082,1198,0.664,1200,0.804,1205,0.705,1206,1.684,1207,1.941,1208,0.75,1209,0.776,1210,0.804,1211,2.138,1225,1.676,1228,2.073,1232,2.469,1233,2.664,1234,0.705,1235,0.904,1236,1.397,1237,1.676,1241,1.532,1243,4.066,1245,1.123,1249,2.084,1251,0.834,1255,1.449,1267,1.449,1277,2.955,1280,2.084,1286,2.084,1296,2.179,1299,1.309,1302,0.904,1309,4.483,1394,1.507,1395,0.867,1396,1.114,1399,0.993,1414,3.27,1437,0.945,1467,2.179,1468,1.114,1475,2.705,1521,0.993,1530,1.822,1531,2.49,1533,2.179,1534,1.114,1559,3.28,1571,4.96,1572,0.75,1612,2.735,1624,1.309,1630,3.967,1640,1.941,1657,2.569,1697,1.114,1723,0.834,1747,0.567,1752,1.304,1757,1.937,1762,0.834,1781,0.727,1807,2.735,1820,0.705,1835,0.804,1836,1.114,1838,1.114,1879,0.776,1884,0.867,1913,1.114,1948,2.179,1957,1.114,1961,2.416,1980,1.643,2016,0.834,2082,1.198,2101,1.198,2127,0.993,2137,0.993,2149,0.945,2155,1.114,2157,2.288,2188,1.198,2197,1.198,2205,1.198,2211,2.569,2219,1.198,2229,1.114,2230,1.114,2231,1.114,2243,2.179,2281,2.288,2282,1.853,2285,1.725,2289,0.945,2290,1.725,2291,1.571,2294,0.993,2315,0.993,2316,0.945,2319,2.49,2380,4.357,2382,0.993,2383,2.179,2389,0.945,2436,1.198,2443,4.052,2445,1.198,2614,1.309,2661,1.922,2674,3.097,2678,1.309,2681,3.018,2696,4.278,2700,1.309,2701,1.349,2704,1.309,2829,0.904,2873,2.297,2897,1.309,2943,2.569,2945,1.198,2949,2.276,2950,1.114,2953,6.203,2958,0.993,2962,6.619,2963,5.161,2968,4.814,2969,4.481,2970,4.481,2975,0.993,2985,1.198,2989,1.198,2991,2.276,2993,3.018,3007,1.73,3008,4.481,3027,2.276,3028,1.198,3040,1.198,3054,3.607,3059,1.822,3061,1.309,3064,1.309,3078,2.569,3080,1.198,3081,3.07,3083,2.276,3091,2.082,3103,2.569,3105,1.198,3113,3.3,3119,1.309,3120,3.607,3154,2.276,3179,2.569,3202,3.397,3206,2.082,3210,1.822,3211,1.198,3283,1.309,3304,3.737,3393,1.309,3401,2.276,3427,2.276,3489,1.114,3638,1.309,3673,1.822,3690,1.198,3703,1.725,3722,1.198,3737,1.198,3738,1.937,3756,4.099,3831,1.309,4132,1.198,4143,1.198,4213,6.269,4214,1.309,4215,5.06,4216,2.57,4217,2.57,4218,2.57,4219,2.57,4220,4.613,4221,2.57,4222,6.846,4223,1.478,4224,1.478,4225,1.478,4226,1.478,4227,1.309,4228,1.478,4229,1.478,4230,1.478,4231,1.478,4232,1.478,4233,1.478,4234,2.57,4235,1.478,4236,1.478,4237,1.478,4238,1.478,4239,2.57,4240,4.073,4241,1.478,4242,1.478,4243,1.478,4244,3.409,4245,1.478,4246,1.478,4247,2.57,4248,1.478,4249,1.478,4250,1.478,4251,1.478,4252,1.478,4253,1.478,4254,2.57,4255,1.478,4256,1.478,4257,1.478,4258,1.478,4259,1.478,4260,1.478,4261,1.309,4262,1.478,4263,1.478,4264,1.478,4265,1.478,4266,1.478,4267,1.478,4268,1.478,4269,1.478,4270,7.371,4271,1.478,4272,3.409,4273,1.478,4274,5.06,4275,1.478,4276,2.57,4277,1.478,4278,1.478,4279,2.57,4280,1.478,4281,4.613,4282,1.478,4283,2.57,4284,1.478,4285,1.478,4286,1.478,4287,1.478,4288,4.073,4289,2.57,4290,5.06,4291,3.409,4292,1.725,4293,2.57,4294,2.57,4295,1.478,4296,2.569,4297,1.478,4298,1.478,4299,1.478,4300,1.478,4301,1.478,4302,1.478,4303,1.478,4304,1.478,4305,1.478,4306,1.478,4307,1.478,4308,1.478,4309,1.478,4310,1.478,4311,1.478,4312,1.478,4313,2.57,4314,1.478,4315,1.478,4316,1.478,4317,1.478,4318,1.478,4319,3.409,4320,1.478,4321,1.478,4322,2.57,4323,1.478,4324,2.57,4325,1.478,4326,3.409,4327,1.478,4328,1.478,4329,4.098,4330,4.613,4331,1.478,4332,2.57,4333,1.478,4334,2.57,4335,1.478,4336,1.478,4337,2.57,4338,1.478,4339,2.57,4340,2.57,4341,5.758,4342,6.489,4343,3.409,4344,3.409,4345,3.409,4346,4.073,4347,2.57,4348,1.478,4349,1.478,4350,1.478,4351,1.478,4352,1.478,4353,1.478,4354,1.478,4355,4.073,4356,1.478,4357,6.846,4358,3.409,4359,3.409,4360,3.409,4361,1.478,4362,1.478,4363,1.478,4364,2.57,4365,4.613,4366,1.478,4367,1.478,4368,1.478,4369,2.57,4370,1.478,4371,1.478,4372,1.478,4373,1.478,4374,1.478,4375,1.478,4376,1.478,4377,1.478,4378,1.478,4379,1.478,4380,3.409,4381,1.478,4382,1.478,4383,1.478,4384,1.478,4385,1.478,4386,1.478,4387,1.478,4388,2.082,4389,1.478,4390,3.409,4391,1.478,4392,1.478,4393,1.478,4394,4.073,4395,4.073,4396,1.478,4397,1.478,4398,1.478,4399,1.478,4400,3.409,4401,4.613,4402,4.073,4403,2.57,4404,1.478,4405,2.57,4406,1.478,4407,1.478,4408,1.478,4409,1.478,4410,1.478,4411,1.478,4412,1.478,4413,1.309,4414,1.478,4415,1.478,4416,1.478,4417,1.478,4418,1.478,4419,4.613,4420,1.478,4421,2.57,4422,1.478,4423,1.478,4424,1.478,4425,1.478,4426,3.409,4427,1.478,4428,1.478,4429,1.198,4430,1.478,4431,2.57,4432,5.06,4433,5.06,4434,2.57,4435,5.06,4436,1.478,4437,1.478,4438,1.478,4439,1.478,4440,1.478,4441,2.57,4442,1.114,4443,2.57,4444,1.114,4445,1.478,4446,1.478,4447,1.478,4448,4.613,4449,1.478,4450,1.478,4451,1.478,4452,1.478,4453,4.073,4454,1.478,4455,1.478,4456,1.309,4457,1.478,4458,1.478,4459,2.57,4460,2.57,4461,2.57,4462,2.57,4463,3.409,4464,2.57,4465,1.478,4466,3.409,4467,1.478,4468,1.478,4469,1.478,4470,1.478,4471,1.478,4472,1.478,4473,2.57,4474,1.478,4475,4.613,4476,1.478,4477,1.478,4478,1.478,4479,4.073,4480,1.478,4481,1.478,4482,4.073,4483,1.478,4484,4.073,4485,1.478,4486,2.082,4487,1.478,4488,1.478,4489,1.478,4490,2.57,4491,1.478,4492,1.478,4493,1.478,4494,2.57,4495,1.478,4496,1.478,4497,1.478,4498,1.478,4499,1.478,4500,1.478,4501,4.073,4502,1.478,4503,1.478,4504,2.57,4505,1.478,4506,1.478,4507,1.937,4508,2.57,4509,1.478,4510,1.478,4511,1.478,4512,4.613,4513,2.57,4514,1.478,4515,1.478,4516,1.478,4517,1.478,4518,1.478,4519,3.409,4520,1.478,4521,1.478,4522,1.478,4523,2.57,4524,1.478,4525,1.478,4526,1.478,4527,1.478,4528,2.57,4529,1.478,4530,4.613,4531,1.478,4532,1.478,4533,1.478,4534,1.478,4535,1.478,4536,1.478,4537,1.478,4538,1.478,4539,1.478,4540,1.478,4541,1.478,4542,1.478,4543,1.478,4544,1.478,4545,1.309,4546,1.478,4547,1.478,4548,1.478,4549,1.478,4550,1.478,4551,1.478,4552,1.478,4553,2.57,4554,3.409,4555,1.478,4556,1.478,4557,1.478,4558,1.478,4559,2.57,4560,1.478,4561,1.478,4562,1.478,4563,1.478,4564,1.478,4565,1.478,4566,1.478,4567,2.57,4568,1.478,4569,1.478,4570,1.478,4571,1.478,4572,1.478,4573,1.478,4574,1.478,4575,1.478,4576,1.478,4577,1.478,4578,1.478,4579,1.478,4580,1.478,4581,1.478,4582,1.478,4583,1.478,4584,1.478,4585,1.478,4586,2.57,4587,2.57,4588,2.57,4589,2.57,4590,1.478,4591,1.478,4592,1.478,4593,1.478,4594,1.478,4595,1.478,4596,2.57,4597,1.478,4598,1.478,4599,1.478,4600,1.478,4601,1.478,4602,2.57,4603,1.478,4604,1.478,4605,1.478,4606,1.478,4607,1.309,4608,1.478,4609,1.478,4610,1.478,4611,1.478,4612,1.478,4613,1.478,4614,1.478,4615,1.478,4616,1.478,4617,1.478,4618,1.478,4619,1.478,4620,1.478,4621,1.478,4622,2.57,4623,1.478,4624,1.478,4625,1.478,4626,1.478,4627,1.478,4628,2.57,4629,1.478,4630,1.478,4631,1.478,4632,1.478,4633,4.073,4634,4.073,4635,2.57,4636,1.478,4637,2.57,4638,1.478,4639,1.478,4640,1.478,4641,1.478,4642,1.478,4643,3.409,4644,1.478,4645,1.478,4646,2.57,4647,1.478,4648,2.57,4649,1.478,4650,2.57,4651,1.478,4652,1.478,4653,1.478,4654,1.478,4655,1.478,4656,2.57,4657,2.57,4658,2.57,4659,2.276,4660,2.57,4661,2.57,4662,2.57,4663,2.57,4664,1.478,4665,2.57,4666,2.57,4667,2.57,4668,1.478,4669,2.57,4670,2.57,4671,1.478,4672,1.478,4673,1.478,4674,1.478,4675,2.57,4676,1.478,4677,1.478,4678,2.57,4679,2.57,4680,2.57,4681,1.309,4682,1.478,4683,1.478,4684,3.409,4685,3.409,4686,3.409,4687,3.409,4688,1.478,4689,1.478,4690,1.478,4691,1.478,4692,4.073,4693,1.478,4694,4.073,4695,1.478,4696,3.409,4697,1.478,4698,3.409,4699,1.478,4700,1.478,4701,1.478,4702,1.478,4703,1.478,4704,1.478,4705,1.478,4706,1.478,4707,2.57,4708,1.478,4709,1.478,4710,1.478,4711,1.478,4712,1.478,4713,1.478,4714,1.198,4715,1.048,4716,1.478,4717,1.478,4718,1.478,4719,1.478,4720,1.478,4721,1.478,4722,1.478,4723,1.478,4724,1.478,4725,1.478]],["title/components/ProfileSettingsDialogComponent.html",[0,0.085,171,0.915]],["body/components/ProfileSettingsDialogComponent.html",[0,0.142,1,0.9,2,0.818,3,0.075,4,0.067,5,0.711,6,0.999,7,0.978,8,0.938,9,0.067,11,0.881,13,1.785,14,1.214,15,1.904,16,0.862,17,1.381,18,1.345,19,0.881,20,1.403,21,0.896,22,2.969,23,0.896,24,2.594,25,0.084,26,0.51,27,1.482,28,3.289,30,0.818,32,6.664,33,0.636,34,2.496,35,3.268,36,3.289,37,0.754,39,0.673,40,0.008,41,0.539,42,0.156,43,0.526,45,0.892,46,1.228,48,3.92,49,0.316,50,1.304,51,1.097,53,0.172,54,0.306,55,1.345,56,1.24,57,2.01,58,2.972,59,1.99,60,0.092,61,0.011,62,1.541,63,0.65,64,1.207,65,3.92,66,2.176,67,3.92,68,4.688,69,2.596,70,2.323,71,3.586,72,2.816,73,5.403,85,3.566,86,1.233,87,3.337,95,0.978,96,1.189,97,1.164,98,0.743,99,1.629,100,0.978,101,1.934,102,0.881,103,0.775,104,1.063,105,1.24,106,0.9,107,0.978,108,0.9,109,0.881,110,0.978,111,0.9,112,0.978,113,0.844,114,0.862,115,0.938,116,0.881,117,0.844,118,0.98,119,1.543,120,0.862,121,0.067,122,0.881,123,0.98,124,0.9,125,0.9,126,0.809,127,0.978,128,0.862,129,0.978,130,0.9,131,0.978,132,0.9,133,0.978,134,0.881,135,0.978,136,0.881,137,0.978,138,0.621,139,0.978,140,0.881,141,0.427,142,0.978,143,0.9,144,0.978,145,0.9,146,1.543,147,0.9,148,0.978,149,0.9,150,1.543,151,0.9,152,0.978,153,0.919,154,0.978,155,0.862,156,0.978,157,0.9,158,0.978,159,0.938,160,0.827,161,0.978,162,0.9,163,1.293,164,1.348,165,0.9,166,0.978,167,0.862,168,0.5,169,0.978,170,0.881,171,1.529,172,1.934,173,0.9,174,0.978,175,0.881,176,0.881,177,0.862,178,0.978,179,0.881,180,0.978,181,0.827,182,0.695,183,0.862,184,0.978,185,0.862,186,1.164,187,0.881,188,0.9,189,0.589,190,0.844,191,0.695,192,0.9,193,0.919,194,0.978,195,0.9,196,0.827,197,0.978,198,0.9,199,0.978,200,0.844,201,0.9,202,0.9,203,0.827,204,0.978,205,0.9,206,0.636,207,0.759,208,0.844,209,0.881,210,0.978,211,0.862,212,0.978,213,0.862,214,0.978,215,0.844,216,0.978,217,0.844,218,0.978,219,0.844,220,0.919,221,0.978,222,0.005,223,0.005,226,0.62,245,3.586,246,1.629,247,5.403,248,0.725,315,1.121,472,6.662,594,3.73,602,1.643,608,0.416,667,6.039,670,2.406,1058,2.908,1433,3.92,1436,5.673,1545,3.138,1547,3.586,2696,4.325,3931,3.586,4726,7.826,4727,7.405,4728,6.983,4729,7.526,4730,5.403,4731,7.526,4732,4.427,4733,5.403,4734,4.427,4735,6.983,4736,3.92,4737,6.102,4738,7.526,4739,7.526]],["title/components/ProjectHeaderComponent.html",[0,0.085,173,0.915]],["body/components/ProjectHeaderComponent.html",[0,0.16,1,1.022,2,0.891,3,0.086,4,0.076,5,0.807,6,1.135,7,1.111,8,1.065,9,0.076,11,1,16,0.98,17,1.387,18,1.352,19,1,20,0.843,21,0.977,23,0.977,25,0.095,37,0.573,40,0.008,41,0.557,42,0.138,49,0.567,53,0.124,54,0.348,56,1.022,57,1.409,60,0.104,61,0.013,86,1.853,92,2.614,95,1.111,96,1.296,97,1.268,98,0.843,99,1.716,100,1.111,101,1.981,102,1,103,0.881,104,1.169,105,1.351,106,1.022,107,1.111,108,1.022,109,1,110,1.111,111,1.022,112,1.111,113,0.959,114,0.98,115,0.98,116,1,117,0.959,118,1.068,119,1.646,120,0.98,121,0.076,122,1,123,0.995,124,1.022,125,1.022,126,0.919,127,1.111,128,0.98,129,1.111,130,1.022,131,1.111,132,1.022,133,1.111,134,1,135,1.111,136,1,137,1.111,138,0.706,139,1.111,140,1,141,0.485,142,1.111,143,1.022,144,1.111,145,1.022,146,1.646,147,1.022,148,1.111,149,1.022,150,1.646,151,1.022,152,1.111,153,1.043,154,1.111,155,0.98,156,1.111,157,1.022,158,1.111,159,1.065,160,0.939,161,1.111,162,1.022,163,1.409,164,1.469,165,1.022,166,1.111,167,0.98,168,0.568,169,1.111,170,1,171,1.022,172,1.111,173,1.611,174,1.111,175,1,176,1,177,0.98,178,1.111,179,1,180,1.111,181,0.939,182,0.79,183,0.98,184,1.111,185,0.98,186,1.268,187,1,188,1.022,189,0.642,190,0.959,191,0.79,192,1.022,193,1.043,194,1.111,195,1.022,196,0.939,197,1.111,198,1.022,199,1.111,200,0.959,201,1.022,202,1.022,203,1.242,204,1.111,205,1.022,206,0.722,207,0.862,208,0.959,209,1,210,1.111,211,0.98,212,1.111,213,0.98,214,1.111,215,0.959,216,1.111,217,0.959,218,1.111,219,0.959,220,1.043,221,1.111,222,0.006,223,0.006,226,0.446,267,2.428,268,1.835,277,1.927,284,2.62,548,1.245,726,1.717,766,2.428,811,1.634,867,2.679,906,1.323,1062,2.753,1166,1.835,1179,3.899,1185,2.906,1186,2.081,1187,2.161,1526,2.835,1528,4.465,1529,1.927,1619,3.084,1620,3.375,1640,2.396,1663,5.889,1825,3.75,2191,2.552,2242,2.835,2252,4.714,2379,3.269,2538,6.036,2593,3.214,2871,4.251,3072,3.214,3501,3.79,4442,3.79,4740,4.764,4741,4.452,4742,7.451,4743,6.65,4744,7.302,4745,5.028,4746,5.028,4747,4.073]],["title/components/ProjectIssueListComponent.html",[0,0.085,175,0.896]],["body/components/ProjectIssueListComponent.html",[0,0.154,1,0.897,2,0.816,3,0.075,4,0.067,5,0.709,6,0.996,7,0.975,8,0.935,9,0.067,11,0.878,14,1.212,15,1.901,16,0.86,17,1.381,18,1.345,19,0.878,20,0.74,21,0.894,23,0.894,25,0.083,26,0.509,27,1.418,33,0.634,37,0.648,39,0.486,40,0.008,41,0.526,42,0.169,43,0.38,46,0.648,49,0.435,53,0.2,54,0.305,56,0.897,57,1.29,60,0.092,61,0.011,63,0.648,64,1.204,86,2.094,93,2.485,95,0.975,96,1.186,97,1.161,98,0.74,99,1.626,100,0.975,101,1.933,102,0.878,103,0.773,104,1.16,105,1.237,106,0.897,107,0.975,108,0.897,109,0.878,110,0.975,111,0.897,112,0.975,113,0.842,114,0.86,115,0.937,116,0.878,117,0.842,118,0.978,119,1.54,120,0.86,121,0.067,122,0.878,123,1.017,124,0.897,125,0.897,126,0.807,127,0.975,128,0.86,129,0.975,130,0.897,131,0.975,132,0.897,133,0.975,134,0.878,135,0.975,136,0.878,137,0.975,138,0.619,139,0.975,140,0.878,141,0.426,142,0.975,143,0.897,144,0.975,145,0.897,146,1.54,147,0.897,148,0.975,149,1.602,150,1.54,151,0.897,152,0.975,153,0.916,154,0.975,155,0.86,156,0.975,157,0.897,158,0.975,159,0.935,160,0.824,161,0.975,162,0.897,163,1.29,164,1.345,165,0.897,166,0.975,167,0.86,168,0.788,169,0.975,170,0.878,171,0.897,172,0.975,173,0.897,174,0.975,175,1.495,176,0.878,177,0.86,178,0.975,179,0.878,180,0.975,181,0.824,182,0.693,183,0.86,184,0.975,185,0.86,186,1.161,187,0.878,188,0.897,189,0.588,190,0.842,191,0.693,192,0.897,193,0.916,194,0.975,195,0.897,196,1.137,197,0.975,198,0.897,199,0.975,200,0.842,201,0.897,202,0.897,203,1.473,204,0.975,205,0.897,206,0.634,207,0.756,208,0.842,209,0.878,210,0.975,211,0.86,212,0.975,213,0.86,214,0.975,215,0.842,216,0.975,217,0.842,218,0.975,219,0.842,220,0.916,221,0.975,222,0.005,223,0.005,226,0.54,260,0.524,267,1.611,268,2.545,277,1.692,284,2.505,293,0.842,371,1.844,499,1.611,505,5.944,515,1.892,548,1.239,552,3.309,575,1.494,599,3.789,652,3.722,762,2.736,769,3.184,785,3.427,790,2.545,791,1.934,792,1.827,793,2.103,811,1.434,832,1.827,834,2.24,835,1.434,865,2.521,867,2.265,871,4.59,906,1.212,1005,2.334,1062,3.111,1092,2.024,1166,1.611,1171,2.103,1174,3.128,1179,4.407,1185,3.046,1186,2.886,1187,2.715,1193,2.316,1266,1.611,1301,5.392,1460,2.74,1526,2.489,1528,4.088,1529,1.692,1619,2.886,1620,3.091,1640,2.103,1662,2.821,1825,3.434,2200,4.59,2242,2.489,2593,2.821,2661,4.238,2701,3.196,2732,3.327,2737,2.902,2742,3.309,2807,3.327,2809,3.327,2871,3.893,3032,2.963,3072,2.821,3294,3.722,3352,3.327,3355,5.648,3356,4.933,3501,3.327,3841,3.575,4081,6.173,4133,3.908,4413,5.392,4740,5.041,4747,3.575,4748,6.089,4749,6.089,4750,3.908,4751,3.908,4752,3.327,4753,4.413,4754,3.908,4755,5.392,4756,3.908,4757,3.908,4758,3.908]],["title/components/ProjectListComponent.html",[0,0.085,176,0.896]],["body/components/ProjectListComponent.html",[0,0.148,1,0.796,2,0.751,3,0.067,4,0.059,5,0.629,6,0.884,7,0.866,8,0.83,9,0.059,11,0.78,14,1.115,15,1.783,16,0.764,17,1.374,18,1.337,19,1.301,20,1.197,21,0.823,23,0.823,25,0.074,26,0.469,27,1.38,30,0.751,33,0.563,36,3.117,37,0.735,39,0.617,40,0.008,41,0.521,42,0.163,43,0.483,45,0.806,46,1.235,49,0.467,50,1.332,51,1.027,53,0.207,54,0.271,55,1.191,56,0.796,57,1.187,59,1.761,60,0.081,61,0.01,63,1.108,64,1.069,86,2.102,92,2.966,93,1.997,95,0.866,96,1.091,97,1.069,98,0.657,99,1.544,100,0.866,101,1.885,102,0.78,103,0.686,104,1.166,105,1.138,106,0.796,107,0.866,108,0.796,109,0.78,110,0.866,111,0.796,112,0.866,113,0.748,114,0.764,115,1.014,116,0.78,117,0.748,118,0.9,119,1.445,120,0.764,121,0.059,122,0.78,123,0.964,124,1.138,125,0.796,126,0.716,127,0.866,128,0.764,129,0.866,130,0.796,131,0.866,132,0.796,133,0.866,134,0.78,135,0.866,136,0.78,137,0.866,138,0.55,139,0.866,140,0.78,141,0.631,142,0.866,143,0.796,144,0.866,145,0.796,146,1.445,147,0.796,148,0.866,149,0.796,150,1.445,151,0.796,152,0.866,153,0.813,154,0.866,155,0.764,156,0.866,157,0.796,158,0.866,159,0.83,160,0.732,161,0.866,162,0.796,163,1.187,164,1.238,165,0.796,166,0.866,167,0.764,168,0.443,169,0.866,170,0.78,171,0.796,172,0.866,173,0.796,174,0.866,175,0.78,176,1.419,177,0.764,178,0.866,179,0.78,180,0.866,181,0.732,182,0.616,183,0.764,184,0.866,185,0.764,186,1.247,187,0.78,188,0.796,189,0.541,190,0.748,191,0.616,192,0.796,193,0.813,194,0.866,195,0.796,196,0.732,197,0.866,198,0.796,199,0.866,200,0.748,201,0.796,202,0.796,203,1.221,204,0.866,205,0.796,206,1.127,207,0.672,208,0.748,209,0.78,210,0.866,211,0.764,212,0.866,213,0.764,214,0.866,215,0.748,216,0.866,217,0.748,218,0.866,219,0.748,220,0.813,221,0.866,222,0.005,223,0.005,226,0.348,228,3.045,232,2.778,235,2.57,246,1.544,259,2.779,260,0.666,268,1.431,274,1.813,276,1.666,277,2.147,293,0.748,315,0.629,371,2.247,372,6.509,411,2.057,412,1.926,512,3.947,541,1.116,542,4.022,543,3.175,544,1.761,583,4.255,602,1.318,608,0.368,622,1.364,641,2.202,726,1.291,839,3.284,906,1.115,924,2.631,953,2.778,984,2.938,985,2.734,1002,1.622,1003,1.541,1004,1.622,1021,2.319,1025,2.954,1033,1.82,1034,2.13,1062,2.953,1166,2.386,1171,3.116,1172,4.634,1174,2.778,1179,3.833,1187,2.772,1193,3.96,1225,2.754,1266,2.045,1473,3.553,1485,1.712,1522,2.13,1523,4.928,1526,3.686,1528,3.761,1529,2.506,1630,3.424,2191,3.318,2242,2.21,2252,2.778,2319,2.396,2340,3.424,2646,3.175,2647,2.954,2651,3.833,3067,3.175,3068,2.631,3314,3.175,3352,2.954,3355,5.296,3356,4.538,3374,3.47,3376,3.47,3522,4.634,4388,3.175,4740,5.521,4744,5.789,4750,3.47,4751,3.47,4759,5.602,4760,5.602,4761,5.602,4762,6.537,4763,6.537,4764,7.133,4765,5.602,4766,7.133,4767,7.133,4768,3.919,4769,5.602,4770,4.223,4771,5.602,4772,3.919,4773,3.919,4774,3.919,4775,3.919,4776,5.602,4777,6.537,4778,6.537,4779,3.919,4780,3.919,4781,3.919,4782,3.919,4783,3.919,4784,3.919,4785,3.919,4786,3.919,4787,3.919,4788,3.919,4789,3.919,4790,5.602,4791,3.919,4792,3.919,4793,2.631,4794,3.919,4795,3.919,4796,3.919,4797,3.47,4798,3.919,4799,5.602,4800,5.602,4801,4.96,4802,3.919,4803,4.96,4804,3.919,4805,3.47,4806,5.789,4807,6.537,4808,3.919,4809,3.919,4810,3.919,4811,3.47,4812,3.919,4813,3.919,4814,3.47,4815,3.919,4816,3.919]],["title/components/ProjectMembersComponent.html",[0,0.085,177,0.877]],["body/components/ProjectMembersComponent.html",[0,0.139,1,0.662,2,0.656,3,0.055,4,0.049,5,0.523,6,0.735,7,0.72,8,0.69,9,0.049,11,0.648,14,0.974,15,1.602,16,0.635,17,1.363,18,1.324,19,0.648,20,0.985,21,0.719,23,0.719,25,0.061,26,0.409,27,1.317,29,1.837,30,0.656,33,0.468,36,2.854,37,0.756,39,0.72,40,0.008,41,0.553,42,0.176,43,0.563,45,0.791,46,1.08,49,0.573,50,1.22,51,1.026,53,0.207,54,0.225,55,0.99,56,0.662,57,1.037,59,1.464,60,0.102,61,0.008,63,0.719,64,0.889,68,3.285,72,1.314,80,3.468,86,1.819,87,2.456,88,2.483,92,1.281,93,2.094,95,0.72,96,0.953,97,0.933,98,0.547,99,1.515,100,0.72,101,1.806,102,0.974,103,1.144,104,1.148,105,1.494,106,0.662,107,0.72,108,0.662,109,0.648,110,0.72,111,0.662,112,0.72,113,0.622,114,0.635,115,0.832,116,0.648,117,0.622,118,0.786,119,1.298,120,0.635,121,0.099,122,0.648,123,0.937,124,0.662,125,0.662,126,0.894,127,0.72,128,0.635,129,0.72,130,0.662,131,0.72,132,0.662,133,0.72,134,0.648,135,0.72,136,0.648,137,0.72,138,0.457,139,0.72,140,0.648,141,0.315,142,0.72,143,0.662,144,0.72,145,0.662,146,1.298,147,0.662,148,0.72,149,0.662,150,1.298,151,0.662,152,0.72,153,0.676,154,0.72,155,0.635,156,0.72,157,0.662,158,0.72,159,0.69,160,0.608,161,0.72,162,0.662,163,1.037,164,1.081,165,0.662,166,0.72,167,0.635,168,0.368,169,0.72,170,0.648,171,0.662,172,0.72,173,0.662,174,0.72,175,0.648,176,0.648,177,1.272,178,0.72,179,0.648,180,0.72,181,0.608,182,0.512,183,0.635,184,0.72,185,0.635,186,1.402,187,0.974,188,0.662,189,0.472,190,0.622,191,0.512,192,0.662,193,0.676,194,0.72,195,0.662,196,1.22,197,0.72,198,0.662,199,0.72,200,0.622,201,0.662,202,0.662,203,1.307,204,0.72,205,0.662,206,1.152,207,0.559,208,0.622,209,0.648,210,0.72,211,0.635,212,0.72,213,0.635,214,0.72,215,0.622,216,0.72,217,0.622,218,0.72,219,0.622,220,0.676,221,0.72,222,0.004,223,0.004,225,2.31,226,0.289,228,2.659,231,1.923,234,1.206,243,2.567,248,0.776,249,2.498,255,1.219,259,2.08,260,0.776,265,5.29,266,4.332,267,1.189,268,2.384,274,1.507,277,1.249,284,2.224,293,0.622,301,1.602,371,2.005,417,1.91,438,2.31,439,2.64,487,3.285,499,1.189,506,6.258,517,5.559,537,0.834,538,2.309,541,0.928,542,3.682,544,1.464,547,1.953,548,1.394,572,1.385,583,1.837,594,2.991,599,3.193,611,1.973,622,2.045,641,1.281,677,1.837,744,2.64,762,1.464,811,1.059,816,1.487,817,1.553,826,2.935,829,1.424,865,1.349,867,2.274,887,1.553,899,2.083,906,1.393,991,2.188,1001,2.083,1062,3.247,1092,1.626,1102,1.837,1166,1.189,1171,2.332,1172,2.31,1174,3.468,1179,3.829,1185,2.854,1186,2.432,1187,2.607,1189,1.385,1192,2.083,1193,2.568,1266,1.189,1450,2.64,1526,3.313,1528,4.384,1529,1.249,1611,2.456,1619,2.432,1620,2.483,1629,2.456,1640,1.553,1641,4.923,1657,3.688,1662,2.083,1702,3.128,1825,2.759,1982,2.083,2122,4.384,2242,1.837,2243,3.128,2292,3.128,2461,3.128,2506,2.456,2509,4.759,2510,2.456,2517,2.456,2556,2.083,2593,2.083,2661,3.682,2701,3.083,2732,2.456,2737,2.332,2742,2.659,2823,6.292,2825,4.874,2871,3.128,3032,2.188,3072,4.699,3294,2.991,3353,4.923,3354,4.923,3358,4.759,3362,4.759,3365,4.759,3366,4.332,3367,4.332,3371,5.29,3411,5.29,3414,4.759,3415,3.964,3419,4.759,3420,3.964,3423,3.964,3452,3.964,3455,2.64,3456,2.64,3457,2.64,3458,2.64,3461,2.64,3462,2.64,3463,2.64,3498,2.885,3499,2.885,3500,2.885,3501,3.688,3505,2.885,3703,3.285,4292,3.285,4329,2.456,4429,2.64,4740,5.645,4747,2.64,4752,3.688,4754,2.885,4755,4.332,4756,2.885,4757,2.885,4758,2.885,4770,4.428,4817,2.64,4818,3.468,4819,4.332,4820,4.759,4821,3.688,4822,6.198,4823,5.202,4824,4.332,4825,5.202,4826,4.332,4827,5.202,4828,5.202,4829,4.893,4830,3.258,4831,4.332,4832,3.258,4833,5.783,4834,4.332,4835,3.258,4836,3.258,4837,3.258,4838,3.258,4839,4.332,4840,5.783,4841,3.258,4842,4.332,4843,7.313,4844,4.332,4845,4.332,4846,4.332,4847,3.964,4848,4.332,4849,4.332,4850,3.258,4851,3.258,4852,3.258,4853,4.332,4854,4.332,4855,4.332,4856,4.332,4857,4.332,4858,4.332,4859,4.332,4860,4.332,4861,4.332,4862,4.332,4863,4.332,4864,4.332,4865,3.258,4866,3.258,4867,4.332,4868,3.258,4869,4.759,4870,3.258,4871,3.258,4872,3.258,4873,3.258,4874,3.258,4875,2.885,4876,2.885,4877,2.885,4878,2.456,4879,2.885,4880,2.885,4881,4.332,4882,4.332,4883,4.332,4884,2.885,4885,2.885,4886,2.885,4887,2.885,4888,2.885,4889,2.885,4890,2.885,4891,2.885,4892,2.885,4893,2.885,4894,2.885,4895,2.885,4896,4.332,4897,2.885,4898,2.885,4899,2.885,4900,2.885,4901,2.885,4902,2.885,4903,2.885,4904,2.885,4905,2.64,4906,2.885,4907,2.456,4908,4.893,4909,4.893,4910,3.258]],["title/components/ProjectOverviewComponent.html",[0,0.085,179,0.896]],["body/components/ProjectOverviewComponent.html",[0,0.153,1,0.876,2,0.803,3,0.073,4,0.065,5,0.692,6,0.973,7,0.953,8,0.914,9,0.065,11,0.858,14,1.192,15,1.878,16,0.84,17,1.38,18,1.343,19,0.858,20,1.248,21,0.88,23,0.88,25,0.081,26,0.501,27,1.328,30,0.803,33,0.619,36,3.251,37,0.715,39,0.66,40,0.008,41,0.554,42,0.168,43,0.516,45,0.677,46,1.149,49,0.492,50,0.805,51,0.677,53,0.216,54,0.298,55,1.31,56,0.876,57,1.27,59,1.937,60,0.089,61,0.011,63,1.189,64,1.176,86,1.201,93,1.536,95,0.953,96,1.167,97,1.143,98,0.723,99,1.61,100,0.953,101,1.923,102,0.858,103,0.755,104,1.169,105,1.217,106,0.876,107,0.953,108,0.876,109,0.858,110,0.953,111,0.876,112,0.953,113,0.822,114,0.84,115,0.929,116,0.858,117,0.822,118,0.962,119,1.521,120,0.84,121,0.065,122,0.858,123,0.976,124,0.876,125,0.876,126,0.788,127,0.953,128,0.84,129,0.953,130,0.876,131,0.953,132,0.876,133,0.953,134,0.858,135,0.953,136,0.858,137,0.953,138,0.605,139,0.953,140,0.858,141,0.416,142,0.953,143,0.876,144,0.953,145,0.876,146,1.521,147,0.876,148,0.953,149,0.876,150,1.521,151,0.876,152,0.953,153,0.895,154,0.953,155,0.84,156,0.953,157,0.876,158,0.953,159,0.914,160,0.805,161,0.953,162,0.876,163,1.27,164,1.324,165,0.876,166,0.953,167,0.84,168,0.487,169,0.953,170,0.858,171,0.876,172,0.953,173,0.876,174,0.953,175,0.858,176,0.858,177,0.84,178,0.953,179,1.481,180,0.953,181,1.55,182,0.677,183,0.84,184,0.953,185,1.167,186,1.143,187,0.858,188,0.876,189,0.578,190,0.822,191,0.677,192,0.876,193,0.895,194,0.953,195,0.876,196,0.805,197,0.953,198,0.876,199,0.953,200,0.822,201,0.876,202,0.876,203,0.805,204,0.953,205,0.876,206,0.619,207,0.739,208,0.822,209,0.858,210,0.953,211,0.84,212,0.953,213,0.84,214,0.953,215,0.822,216,0.953,217,0.822,218,0.953,219,0.822,220,0.895,221,0.953,222,0.005,223,0.005,226,0.718,228,3.256,234,0.708,243,1.884,259,2.547,260,0.512,284,1.37,293,0.822,374,6.381,427,2.528,499,1.574,535,3.731,542,4.196,544,1.937,548,1.081,599,3.742,602,1.62,608,0.405,670,2.343,768,2.635,769,3.027,785,3.385,790,2.513,791,1.903,792,1.785,793,2.055,811,1.401,828,3.185,829,1.884,832,1.785,835,1.401,836,2.756,837,2.756,867,2.237,870,3.662,872,1.994,925,2.262,984,3.094,985,2.852,1001,2.756,1002,1.785,1003,1.695,1004,1.785,1018,3.492,1019,2.756,1020,2.894,1021,3.35,1022,2.756,1023,2.635,1024,2.431,1025,3.249,1026,3.817,1027,3.817,1028,2.894,1032,3.492,1033,1.947,1034,2.343,1050,3.614,1051,3.905,1092,1.433,1170,2.188,1185,1.884,1186,1.785,1187,1.947,1189,2.547,1526,2.431,1629,3.249,1655,2.119,2094,3.249,2661,4.196,2696,4.246,2701,3.144,2807,3.249,2866,3.662,3032,2.894,4486,3.492,4730,5.305,4733,5.305,4736,3.817,4740,5.412,4752,3.249,4770,5.19,4793,4.623,4821,4.516,4911,3.817,4912,5.991,4913,6.885,4914,5.991,4915,6.589,4916,5.991,4917,4.311,4918,4.311,4919,4.311,4920,4.311,4921,4.311,4922,4.311,4923,4.311,4924,4.311,4925,4.311,4926,7.441,4927,4.311]],["title/injectables/ProjectStoreService.html",[532,1.082,542,2.54]],["body/injectables/ProjectStoreService.html",[3,0.094,4,0.084,9,0.084,25,0.105,30,0.95,33,0.797,37,0.75,39,0.959,40,0.008,41,0.598,42,0.181,43,0.75,45,0.962,49,0.673,53,0.209,54,0.384,60,0.115,61,0.014,63,1.25,66,3.487,104,1.086,115,0.979,222,0.006,223,0.006,226,0.755,227,3.599,232,5.028,234,1.352,260,0.929,281,1.725,293,1.059,371,1.74,512,4.026,531,6.672,532,1.704,537,1.421,538,2.183,540,2.299,541,1.581,542,4,545,3.188,547,2.94,548,1.432,555,2.426,572,3.016,608,0.799,622,3.03,626,4.18,637,2.358,646,2.299,691,1.725,726,1.634,1021,3.409,1298,3.55,1415,3.855,1532,3.936,1536,4.762,2572,6.281,2575,6.281,2584,4.186,2866,4.336,3535,5.747,3661,4.917,4100,6.281,4869,4.499,4915,6.921,4928,7.834,4929,7.093,4930,8.236,4931,8.236,4932,7.093,4933,7.093,4934,7.093,4935,7.093,4936,5.553,4937,7.816,4938,8.236,4939,8.236,4940,7.816,4941,8.236,4942,7.816,4943,8.236,4944,8.236,4945,5.553,4946,5.553,4947,7.093,4948,5.553,4949,7.093,4950,7.093,4951,5.553,4952,7.093,4953,5.553,4954,7.093,4955,7.093,4956,6.281,4957,5.553,4958,5.553,4959,5.553,4960,5.553,4961,5.553,4962,5.553,4963,5.553]],["title/injectables/ProjectsService.html",[532,1.082,4964,3.395]],["body/injectables/ProjectsService.html",[3,0.114,4,0.102,9,0.102,25,0.126,30,1.067,33,1.144,37,0.732,39,0.937,40,0.008,41,0.548,42,0.176,43,0.732,45,0.9,49,0.607,53,0.209,54,0.463,60,0.139,61,0.017,63,1.17,222,0.007,223,0.007,281,2.082,371,1.954,532,1.913,541,1.907,548,1.251,555,2.928,608,0.748,646,2.773,790,2.446,791,2.128,1359,4.068,1379,5.904,1385,5.05,1386,5.428,4956,5.933,4964,6.003,4965,5.933,4966,7.964,4967,7.964,4968,6.7,4969,8.794,4970,8.499,4971,8.794,4972,6.7,4973,7.964,4974,7.964,4975,6.7,4976,7.964,4977,6.7,4978,6.7,4979,6.7]],["title/injectables/QueriesService.html",[532,1.082,1733,2.753]],["body/injectables/QueriesService.html",[2,1.174,3,0.113,4,0.1,9,0.1,25,0.125,26,0.662,27,1.549,33,1.137,37,0.772,39,0.731,40,0.008,41,0.428,42,0.186,43,0.571,53,0.22,54,0.458,60,0.138,61,0.017,222,0.007,223,0.007,281,2.06,512,4.143,515,2.782,532,1.902,555,2.897,646,2.745,1358,6.751,1359,4.205,1733,4.838,2825,5.726,4964,6.751,4980,5.872,4981,6.631,4982,7.931,4983,6.751,4984,6.631,4985,6.631,4986,6.631,4987,6.631,4988,6.631,4989,6.631,4990,6.631,4991,6.631,4992,6.631]],["title/directives/QueryBodyDirective.html",[98,0.756,211,0.877]],["body/directives/QueryBodyDirective.html",[0,0.161,3,0.075,4,0.067,5,1.45,9,0.067,14,0.882,16,0.864,17,1.081,18,0.622,21,0.651,23,0.651,25,0.084,26,0.511,27,1.296,33,0.636,37,0.526,39,0.489,40,0.008,41,0.286,42,0.127,43,0.382,46,1.16,51,0.696,53,0.185,54,0.306,60,0.156,61,0.018,62,2.126,63,1.026,78,2.409,88,3.822,96,1.19,97,0.845,98,1.403,181,1.406,182,1.465,206,0.636,208,0.845,211,1.467,213,1.361,222,0.005,223,0.005,226,0.393,234,0.728,235,2.96,259,3.759,267,2.551,275,4.467,293,0.845,315,0.712,359,3.142,389,3.887,523,2.499,537,1.134,547,2.78,549,2.341,557,3.777,561,2.05,575,1.714,595,1.906,602,1.437,608,0.656,611,1.788,635,1.992,637,2.625,641,1.742,654,2.326,675,2.499,678,4.271,725,2.284,726,1.407,736,4.329,753,2.19,763,2.401,772,3.444,780,2.113,783,4.009,787,3.379,788,2.599,803,1.742,816,1.347,820,2.911,828,2.825,865,3.463,870,3.733,872,3.232,876,2.113,947,2.599,984,1.992,985,2.341,995,3.94,1002,1.835,1003,1.742,1004,1.835,1033,2.896,1050,2.326,1051,3.205,1088,2.499,1122,1.742,1143,4.093,1221,2.05,1247,2.499,1411,4.631,1437,2.834,1594,4.293,1600,4.329,1630,2.709,1638,4.097,1678,4.1,1748,2.976,1762,2.499,1765,2.976,1774,2.834,1783,3.002,1820,2.911,1835,3.798,2468,3.904,2598,4.329,2674,2.976,2699,5.302,2723,5.676,2866,2.709,3007,2.25,3163,4.604,3889,3.341,3936,2.834,3950,2.709,4296,3.341,4444,3.341,4507,3.341,4818,3.142,4993,4.953,4994,3.142,4995,6.1,4996,4.948,4997,3.341,4998,4.432,4999,4.432,5000,5.661,5001,5.267,5002,5.267,5003,3.591,5004,3.591,5005,3.591,5006,3.591,5007,3.591,5008,3.591,5009,3.591,5010,3.591,5011,4.604,5012,4.948,5013,3.591,5014,4.948,5015,4.948,5016,4.948,5017,4.948,5018,3.591,5019,4.948,5020,4.604,5021,3.591,5022,3.341,5023,3.591,5024,3.591,5025,3.591,5026,3.591,5027,4.948,5028,3.591,5029,3.341,5030,3.591,5031,3.591,5032,5.661,5033,3.591,5034,5.661,5035,3.591,5036,3.591,5037,6.777,5038,6.1,5039,4.948,5040,3.591,5041,3.341,5042,3.591,5043,3.591,5044,5.661,5045,3.591,5046,3.591,5047,3.591,5048,4.948,5049,4.948,5050,3.591,5051,3.591,5052,3.591,5053,3.591,5054,3.591,5055,3.591,5056,3.591]],["title/directives/QueryButtonDirective.html",[98,0.756,213,0.877]],["body/directives/QueryButtonDirective.html",[0,0.161,3,0.076,4,0.067,5,1.406,9,0.067,14,0.884,16,0.865,17,1.082,18,0.623,21,0.652,23,0.652,25,0.084,26,0.512,27,1.297,33,0.638,37,0.527,39,0.489,40,0.008,41,0.286,42,0.127,43,0.383,46,1.161,51,0.698,53,0.185,54,0.307,60,0.156,61,0.018,62,2.129,63,1.027,78,2.414,88,3.825,96,1.191,97,1.437,98,1.404,181,1.476,182,1.461,206,0.638,208,0.847,211,1.363,213,1.468,222,0.005,223,0.005,226,0.394,234,0.729,235,2.962,259,3.818,267,2.553,275,4.471,293,0.847,315,0.713,359,3.148,389,3.832,523,2.504,537,1.136,547,2.782,549,2.344,557,3.872,561,2.054,575,1.716,595,1.907,602,1.439,608,0.657,611,1.791,635,1.996,637,2.627,641,1.746,654,2.331,675,2.504,678,4.275,725,2.287,726,1.409,736,4.335,753,2.192,763,2.404,772,3.448,780,2.117,783,3.104,787,3.381,788,2.604,803,1.746,816,1.35,820,2.915,828,2.829,865,3.381,870,3.738,872,3.236,876,2.117,947,2.604,984,1.996,985,2.344,995,3.944,1002,1.838,1003,1.746,1004,1.838,1033,2.897,1050,2.331,1051,3.209,1088,2.504,1122,1.746,1143,4.096,1221,2.054,1247,2.504,1411,4.634,1437,2.839,1594,4.295,1600,4.335,1630,2.714,1638,4.101,1678,2.981,1748,2.981,1762,2.504,1765,2.981,1774,2.839,1783,3.006,1820,2.915,1835,3.801,2468,3.909,2598,3.148,2674,2.981,2699,5.059,2723,5.272,2866,2.714,3007,2.254,3163,4.61,3889,3.347,3936,2.839,3950,2.714,4296,3.347,4444,3.347,4507,3.347,4818,4.335,4993,4.958,4994,3.148,4995,5.666,4996,3.598,5000,6.617,5001,5.272,5002,5.272,5003,4.954,5004,4.954,5005,3.598,5006,3.598,5007,3.598,5008,3.598,5009,3.598,5010,3.598,5011,4.61,5012,4.954,5013,3.598,5014,4.954,5015,4.954,5016,4.954,5017,4.954,5018,3.598,5019,4.954,5020,4.61,5021,3.598,5022,3.347,5023,3.598,5024,3.598,5025,3.598,5026,3.598,5027,4.954,5028,3.598,5029,3.347,5030,3.598,5031,3.598,5032,5.666,5033,3.598,5034,5.666,5035,3.598,5036,3.598,5037,6.78,5038,6.105,5039,4.954,5040,3.598,5041,3.347,5042,3.598,5043,3.598,5044,5.666,5045,3.598,5046,3.598,5047,3.598,5048,4.954,5049,4.954,5050,3.598,5051,3.598,5052,3.598,5053,3.598,5054,3.598,5055,3.598,5056,3.598,5057,4.441,5058,4.441,5059,4.441]],["title/components/QueryComponent.html",[0,0.085,181,0.841]],["body/components/QueryComponent.html",[0,0.162,1,0.611,2,0.617,3,0.051,4,0.046,5,1.408,6,0.679,7,0.665,8,0.637,9,0.046,11,0.598,14,0.916,16,0.586,17,1.359,18,1.318,19,0.598,20,0.504,21,0.676,23,0.676,25,0.057,26,0.385,27,1.287,30,0.617,33,0.432,37,0.702,39,0.617,40,0.008,41,0.478,42,0.163,43,0.54,45,0.709,46,1.176,49,0.215,50,0.86,51,0.985,53,0.154,54,0.208,56,0.611,57,0.976,60,0.13,61,0.014,62,1.603,63,1.09,78,2.503,86,1.559,88,3.884,93,1.641,95,0.665,96,1.221,97,1.067,98,1.283,99,1.356,100,0.665,101,1.769,102,0.598,103,0.527,104,0.955,105,0.936,106,0.611,107,0.665,108,0.611,109,0.598,110,0.665,111,0.611,112,0.665,113,0.574,114,0.586,115,0.803,116,0.598,117,0.574,118,0.739,119,1.236,120,0.586,121,0.046,122,0.598,123,0.924,124,0.611,125,0.611,126,0.55,127,0.665,128,0.586,129,0.665,130,0.611,131,0.665,132,0.611,133,0.665,134,0.598,135,0.665,136,0.598,137,0.665,138,0.422,139,0.665,140,0.598,141,0.29,142,0.665,143,0.611,144,0.665,145,0.611,146,1.236,147,0.611,148,0.665,149,0.611,150,1.236,151,0.611,152,0.665,153,0.624,154,0.665,155,0.586,156,0.665,157,0.611,158,0.665,159,0.637,160,0.562,161,0.665,162,0.611,163,0.976,164,1.017,165,0.611,166,0.665,167,0.586,168,0.34,169,0.665,170,0.598,171,0.611,172,0.665,173,0.611,174,0.665,175,0.598,176,0.598,177,0.586,178,0.665,179,0.598,180,0.665,181,1.465,182,1.457,183,0.586,184,0.665,185,0.586,186,0.878,187,0.598,188,0.611,189,0.445,190,0.574,191,0.472,192,0.611,193,0.624,194,0.665,195,0.611,196,0.86,197,0.665,198,0.611,199,0.665,200,0.574,201,0.611,202,0.611,203,0.562,204,0.665,205,0.611,206,0.803,207,0.516,208,0.574,209,0.598,210,0.665,211,1.389,212,0.665,213,1.389,214,0.665,215,0.574,216,0.665,217,0.574,218,0.665,219,0.574,220,0.624,221,0.665,222,0.004,223,0.004,226,0.409,234,0.756,235,3.083,243,2.012,259,3.767,267,2.972,268,1.681,275,4.32,276,1.958,277,2.403,293,0.574,315,0.739,359,2.132,389,3.833,523,2.596,537,0.77,547,2.809,549,2.145,557,3.539,561,2.13,575,1.373,595,2.087,602,1.475,608,0.525,611,1.857,635,2.069,637,2.369,641,1.81,654,1.578,675,1.696,678,4.357,725,2.092,726,1.061,736,4.443,753,1.823,763,2.199,766,1.681,772,3.535,780,2.194,783,2.337,787,3.419,788,1.763,803,1.182,811,1.496,816,1.399,820,2.988,828,2.588,865,3.37,870,3.832,872,3.126,876,2.194,906,1.247,947,2.7,984,2.069,985,2.403,995,4.183,1002,1.245,1003,1.182,1004,1.245,1033,2.904,1050,2.936,1051,3.29,1088,2.596,1092,1.53,1122,1.182,1143,3.407,1166,1.681,1168,2.817,1169,2.263,1185,2.012,1186,2.595,1187,0.977,1189,1.958,1221,1.391,1247,2.596,1411,4.599,1437,2.944,1457,2.7,1485,1.314,1522,2.503,1594,4.35,1600,3.264,1619,1.245,1620,1.527,1630,2.814,1638,4.179,1655,3.081,1656,3.471,1678,2.019,1741,1.923,1748,2.019,1762,1.696,1765,3.091,1774,2.944,1783,3.081,1820,2.194,1835,3.874,1914,2.7,2241,2.267,2242,1.696,2468,4.007,2595,1.635,2598,2.132,2650,2.503,2653,2.263,2654,3.264,2674,2.019,2699,4.98,2723,4.725,2743,2.663,2748,2.436,2866,2.814,3007,2.337,3072,4.007,3074,3.73,3163,4.217,3889,3.471,3936,2.944,3950,2.814,4296,3.471,4442,4.217,4444,3.471,4507,3.471,4806,2.663,4818,2.132,4993,5.854,4994,2.132,4995,5.078,4996,2.436,5000,5.078,5001,4.725,5002,5.591,5003,2.436,5004,2.436,5005,3.73,5006,3.73,5007,3.73,5008,3.73,5009,3.73,5010,3.73,5011,4.725,5012,5.078,5013,3.73,5014,5.474,5015,5.078,5016,5.078,5017,5.078,5018,3.73,5019,5.078,5020,4.725,5021,3.73,5022,3.471,5023,3.73,5024,3.73,5025,3.73,5026,4.532,5027,5.078,5028,5.474,5029,3.471,5030,3.73,5031,3.73,5032,5.078,5033,4.532,5034,4.532,5035,2.436,5036,2.436,5037,6.009,5038,5.474,5039,3.73,5040,3.73,5041,3.471,5042,3.73,5043,3.73,5044,4.532,5045,2.436,5046,2.436,5047,2.436,5048,5.474,5049,3.73,5050,2.436,5051,2.436,5052,2.436,5053,3.73,5054,3.73,5055,5.078,5056,2.436,5060,4.604,5061,3.007,5062,4.604,5063,3.007,5064,3.007,5065,3.007,5066,3.007,5067,3.007,5068,3.007,5069,3.007,5070,3.007,5071,3.007,5072,3.007,5073,3.007]],["title/interfaces/QueryListParams.html",[121,0.068,1379,3.024]],["body/interfaces/QueryListParams.html",[3,0.114,4,0.102,9,0.102,25,0.127,26,0.667,40,0.008,42,0.187,43,0.809,49,0.651,53,0.165,60,0.166,66,3.3,72,2.707,121,0.102,222,0.007,223,0.007,234,1.102,248,0.798,529,1.831,537,1.718,547,2.925,595,1.831,608,0.63,762,3.017,887,3.199,955,5.159,1033,2.181,1055,2.595,1058,3.199,1359,3.105,1379,5.353,1701,3.785,1823,5.06,1824,5.06,1827,5.06,1829,5.06,1884,5.159,1885,4.317,1948,5.625,2421,4.507,2778,5.944,5074,5.944,5075,8.799,5076,6.713,5077,6.713,5078,6.713,5079,5.944,5080,6.713,5081,6.713,5082,6.713,5083,6.713]],["title/components/RegisterComponent.html",[0,0.085,183,0.877]],["body/components/RegisterComponent.html",[0,0.129,1,0.725,2,0.701,3,0.061,4,0.054,5,0.573,6,0.804,7,0.788,8,0.756,9,0.054,11,0.709,16,0.695,17,1.369,18,1.331,19,0.709,20,0.598,21,0.768,23,0.768,25,0.067,26,0.438,30,0.701,33,0.512,37,0.72,39,0.837,40,0.008,41,0.552,42,0.163,43,0.588,45,0.859,46,1.183,49,0.543,50,1.275,51,1.265,53,0.198,54,0.246,56,0.725,57,1.108,60,0.074,61,0.009,63,1.068,68,3.512,86,0.993,89,4.444,92,1.402,95,0.788,96,1.019,97,0.998,98,0.598,99,1.477,100,0.788,101,1.846,102,0.709,103,0.625,104,1.005,105,1.063,106,0.725,107,0.788,108,0.725,109,0.709,110,0.788,111,0.725,112,0.788,113,0.68,114,0.695,115,0.864,116,0.709,117,0.68,118,0.84,119,1.369,120,0.695,121,0.054,122,0.709,123,0.95,124,0.725,125,0.725,126,0.652,127,0.788,128,0.695,129,0.788,130,0.725,131,0.788,132,0.725,133,0.788,134,0.709,135,0.788,136,0.709,137,0.788,138,0.5,139,0.788,140,0.709,141,0.344,142,0.788,143,0.725,144,0.788,145,0.725,146,1.369,147,0.725,148,0.788,149,0.725,150,1.369,151,0.725,152,0.788,153,0.74,154,0.788,155,0.695,156,0.788,157,0.725,158,0.788,159,0.756,160,0.666,161,0.788,162,0.725,163,1.108,164,1.156,165,0.725,166,0.788,167,0.695,168,0.403,169,0.788,170,0.709,171,0.725,172,0.788,173,0.725,174,0.788,175,0.709,176,0.709,177,0.695,178,0.788,179,0.709,180,0.788,181,0.666,182,0.56,183,1.33,184,0.788,185,0.695,186,0.998,187,0.709,188,0.725,189,0.505,190,0.68,191,0.56,192,0.725,193,0.74,194,0.788,195,0.725,196,0.666,197,0.788,198,0.725,199,0.788,200,0.68,201,0.725,202,0.725,203,0.666,204,0.788,205,0.725,206,1.18,207,0.611,208,0.68,209,0.709,210,0.788,211,0.695,212,0.788,213,0.695,214,0.788,215,0.68,216,0.788,217,0.68,218,0.788,219,0.68,220,0.74,221,0.788,222,0.005,223,0.005,226,0.674,231,2.683,234,1.12,237,4.632,246,1.132,248,0.424,249,2.634,250,3.046,254,1.649,255,1.334,259,1.516,260,0.736,270,2.279,289,4.238,293,0.68,301,2.571,315,1.261,317,1.555,318,2.571,341,5.385,402,2.179,417,4.454,499,1.302,521,4.582,522,6.131,535,3.528,537,0.912,547,1.739,553,2.42,575,1.783,576,3.197,583,4.284,602,0.839,608,0.582,635,1.602,641,2.683,667,6.502,677,5.089,689,2.394,690,2.688,717,4.238,726,0.821,727,3.197,754,3.157,761,3.344,777,2.091,840,2.565,902,3.961,956,4.129,963,5.529,984,2.784,985,2.616,1002,1.476,1003,1.402,1004,1.476,1005,2.005,1033,2.714,1034,2.843,1062,1.476,1093,3.197,1158,5.726,1183,1.871,1187,1.158,1228,3.067,1306,3.197,1392,4.363,1398,3.344,1416,2.091,1434,3.344,1436,6.069,1437,5.148,1531,3.197,1582,5.564,1661,6.069,1752,2.655,1852,2.688,2103,4.238,2113,4.238,2117,3.145,2333,2.011,2421,5.406,2694,3.157,2712,5.486,2741,4.632,2787,6.436,2823,2.527,2906,5.486,2980,4.632,2984,4.238,3000,3.157,3059,2.527,3837,4.16,3839,5.486,3840,4.632,3845,4.632,3855,5.486,3863,3.157,3869,3.157,3870,3.157,4329,3.943,4388,5.529,4545,4.632,4797,4.632,4803,3.157,4843,6.656,4905,4.238,5084,3.157,5085,6.044,5086,6.196,5087,5.231,5088,6.196,5089,5.486,5090,6.196,5091,5.231,5092,5.231,5093,6.825,5094,3.565,5095,6.196,5096,6.825,5097,6.196,5098,6.825,5099,5.231,5100,5.231,5101,3.565,5102,6.825,5103,5.231,5104,3.565,5105,5.231,5106,5.231,5107,3.565,5108,5.231,5109,5.231,5110,5.231,5111,3.565,5112,5.231,5113,3.565,5114,3.565,5115,5.231,5116,3.565,5117,5.231,5118,5.231,5119,5.231,5120,3.565,5121,3.565,5122,5.231,5123,5.231,5124,3.565,5125,3.565,5126,5.231,5127,3.565,5128,3.565,5129,3.565,5130,3.565,5131,3.565,5132,3.565,5133,3.565,5134,3.565,5135,3.565,5136,3.565,5137,3.565,5138,3.565,5139,3.157,5140,3.565,5141,5.231,5142,3.565,5143,5.231,5144,5.231,5145,3.565,5146,3.565,5147,3.565,5148,3.565,5149,3.565,5150,8.052,5151,5.231]],["title/interfaces/RelationEdge.html",[121,0.068,1212,2.641]],["body/interfaces/RelationEdge.html",[0,0.152,3,0.09,4,0.122,5,1.101,9,0.104,25,0.099,26,0.574,40,0.008,42,0.189,49,0.661,53,0.198,60,0.142,61,0.017,104,0.658,115,0.626,121,0.139,123,0.737,138,0.74,141,0.662,168,0.97,189,0.844,191,0.828,222,0.006,223,0.006,234,1.326,248,0.906,260,0.626,284,2.422,296,4.219,316,3.091,515,1.638,529,1.438,541,1.501,548,1.348,595,2.417,608,0.832,622,1.835,720,1.924,725,1.972,817,2.513,835,1.713,906,1.763,952,3.222,1055,1.953,1056,3.343,1059,3.645,1060,3.434,1083,1.972,1189,3.242,1197,4.471,1198,2.369,1199,2.973,1200,4.75,1201,5.033,1202,3.634,1203,3.269,1204,2.865,1205,2.513,1206,3.235,1207,3.269,1208,2.676,1209,2.767,1210,4.144,1211,4.238,1212,4.735,1213,3.222,1214,3.222,1215,3.222,1216,3.222,1217,3.222,1218,3.222,1219,3.222,1220,3.222,1221,3.173,1222,3.222,1223,3.222,1224,4.193,1225,3.748,1226,3.37,1227,3.091,1228,2.369,1229,3.728,1230,3.37,1231,3.37,1232,1.793,1233,2.439,1234,2.513,1235,3.222,1236,2.865,1237,2.591,1238,3.37,1239,3.222,1240,3.37,1241,2.369,1242,3.37,1243,2.676,1244,3.37,1245,2.304,1246,3.37,1247,2.973,1248,3.37,1249,3.222,1250,3.37,1251,4.3,1252,2.767,1253,2.973,1254,2.767,1255,3.868,1256,3.37,1257,3.37,1258,3.37,1259,4.022,1260,3.37,1261,4.385,1262,3.37,1263,3.37,1264,3.37,1265,3.222,1266,1.924,1267,3.868,1268,4.875,1269,3.37,1270,3.37,1271,5.353,1272,3.37,1273,4.385,1274,4.385,1275,3.37,1276,3.37,1277,4.144,1278,4.385,1279,3.222,1280,4.193,1281,4.385,1282,3.37,1283,4.554,1284,3.6,1285,3.37,1286,3.222,1287,3.37,1288,3.37,1289,3.37,1290,3.222,1291,4.022,1292,3.222,1293,2.973,1294,3.222,1295,2.767]],["title/components/RemoveDialogComponent.html",[0,0.085,185,0.877]],["body/components/RemoveDialogComponent.html",[0,0.148,1,0.802,2,0.754,3,0.067,4,0.06,5,0.634,6,0.89,7,0.872,8,0.836,9,0.06,11,0.785,13,1.591,14,1.12,15,1.789,16,0.769,17,1.375,18,1.338,19,0.785,20,1.45,21,0.827,22,2.79,23,0.827,24,2.393,25,0.074,26,0.471,27,1.242,28,3.437,30,0.754,33,0.567,34,2.225,35,3.132,36,2.459,37,0.698,39,0.435,40,0.008,41,0.534,42,0.168,43,0.34,45,0.636,46,1.111,49,0.469,50,1.051,51,0.884,53,0.161,54,0.273,55,1.199,56,0.802,57,1.193,60,0.117,61,0.01,62,1.373,64,1.076,85,2.459,86,1.099,88,2.857,93,1.406,95,0.872,96,1.097,97,1.074,98,0.662,99,1.548,100,0.872,101,1.888,102,0.785,103,0.691,104,1.033,105,1.144,106,0.802,107,0.872,108,0.802,109,0.785,110,0.872,111,0.802,112,0.872,113,0.753,114,0.769,115,0.899,116,0.785,117,0.753,118,0.904,119,1.45,120,0.769,121,0.085,122,0.785,123,0.965,124,0.802,125,0.802,126,0.721,127,0.872,128,0.769,129,0.872,130,0.802,131,0.872,132,0.802,133,0.872,134,0.785,135,0.872,136,0.785,137,0.872,138,0.554,139,0.872,140,0.785,141,0.381,142,0.872,143,0.802,144,0.872,145,0.802,146,1.45,147,0.802,148,0.872,149,0.802,150,1.45,151,0.802,152,0.872,153,0.819,154,0.872,155,0.769,156,0.872,157,0.802,158,0.872,159,0.836,160,0.737,161,0.872,162,0.802,163,1.193,164,1.244,165,0.802,166,0.872,167,0.769,168,0.446,169,0.872,170,0.785,171,0.802,172,0.872,173,0.802,174,0.872,175,0.785,176,0.785,177,0.769,178,0.872,179,0.785,180,0.872,181,0.737,182,0.62,183,0.769,184,0.872,185,1.394,186,1.607,187,0.785,188,0.802,189,0.73,190,0.753,191,0.62,192,0.802,193,0.819,194,0.872,195,0.802,196,1.573,197,0.872,198,0.802,199,0.872,200,0.753,201,0.802,202,0.802,203,1.225,204,0.872,205,0.802,206,1.027,207,0.676,208,0.753,209,0.785,210,0.872,211,0.769,212,0.872,213,0.769,214,0.872,215,0.753,216,0.872,217,0.753,218,0.872,219,0.753,220,0.819,221,0.872,222,0.005,223,0.005,226,0.35,234,1.329,239,4.035,243,1.724,244,2.604,248,0.85,249,2.79,253,1.591,255,1.476,256,1.773,259,3.442,260,0.669,267,2.055,274,2.604,275,2.522,276,1.677,277,2.158,278,2.797,279,2.797,284,2.499,293,1.074,315,0.634,317,1.173,371,0.968,427,4.853,608,0.37,745,2.412,795,3.779,811,1.282,816,1.71,826,1.773,839,3.847,865,1.633,906,1.306,925,2.954,964,3.598,1019,3.598,1021,3.256,1022,4.195,1092,2.181,1166,1.44,1168,3.215,1171,1.88,1183,2.071,1185,2.867,1186,2.716,1187,1.282,1192,2.522,1193,3.444,1234,2.683,1266,2.055,1300,4.243,1415,2.144,1552,4.836,1581,4.946,1582,6.19,1609,2.974,1619,2.33,1620,2.003,1627,3.196,1640,1.88,1655,3.866,1661,2.974,1771,2.974,1810,2.522,1820,1.88,1884,2.313,1914,3.3,2093,6.239,2094,4.946,2095,5.81,2096,4.808,2097,3.494,2098,4.804,2099,5.81,2100,3.494,2101,5.316,2102,5.81,2103,4.56,2104,4.984,2105,4.984,2106,4.56,2107,4.984,2108,3.99,2109,4.984,2110,4.984,2111,4.984,2112,5.81,2113,3.196,2114,3.494,2115,4.011,2116,4.984,2117,3.331,2118,5.81,2119,4.984,2120,3.494,2121,3.494,2122,4.804,2191,2.003,2241,2.974,2242,2.225,2468,3.598,2593,2.522,2594,2.974,2653,2.767,2737,1.88,2742,2.144,2871,2.522,3526,3.99,3762,3.196,3925,3.494,3934,3.494,5152,5.629,5153,3.945,5154,3.945,5155,4.984,5156,3.945,5157,5.629,5158,5.629,5159,3.945,5160,7.155,5161,5.629,5162,3.945,5163,3.945,5164,3.945]],["title/components/RemoveProjectMemberComponentComponent.html",[0,0.085,187,0.896]],["body/components/RemoveProjectMemberComponentComponent.htmltitle/components/SetEditorComponent.html",[0,0.085,188,0.915]],["body/components/SetEditorComponent.html",[0,0.121,1,0.645,2,0.643,3,0.054,4,0.048,5,0.51,6,0.716,7,0.702,8,0.673,9,0.048,11,0.632,14,0.955,15,1.577,16,0.619,17,1.361,18,1.323,19,0.632,20,1.336,21,0.705,23,0.705,25,0.06,27,0.788,29,3.635,30,0.643,33,0.689,36,2.816,37,0.742,39,0.35,40,0.008,41,0.469,42,0.18,43,0.274,45,0.654,46,0.466,49,0.556,50,1.204,51,1.012,53,0.191,54,0.219,55,0.965,56,0.645,57,1.366,59,1.427,60,0.066,61,0.008,63,1.11,64,0.866,86,0.885,90,1.862,95,0.702,96,0.935,97,0.915,98,0.533,99,1.395,100,0.702,101,1.794,102,0.632,103,0.556,104,0.971,105,0.975,106,0.645,107,0.702,108,0.645,109,0.632,110,0.702,111,0.645,112,0.702,113,0.606,114,0.619,115,0.947,116,0.632,117,1.549,118,0.77,119,1.278,120,0.619,121,0.048,122,0.632,123,0.945,124,0.645,125,0.645,126,0.58,127,0.702,128,0.619,129,0.702,130,0.645,131,0.702,132,0.645,133,0.702,134,0.632,135,0.702,136,0.632,137,0.702,138,0.446,139,0.702,140,0.632,141,0.307,142,0.702,143,0.645,144,0.702,145,0.645,146,1.278,147,0.645,148,0.702,149,0.645,150,1.278,151,0.645,152,0.702,153,0.659,154,0.702,155,0.619,156,0.702,157,0.645,158,1.278,159,0.673,160,0.593,161,0.702,162,0.645,163,1.017,164,1.06,165,0.645,166,0.702,167,0.619,168,0.729,169,0.702,170,0.632,171,0.645,172,0.702,173,0.645,174,0.702,175,0.632,176,0.632,177,0.619,178,0.702,179,0.632,180,0.702,181,0.593,182,1.187,183,0.619,184,0.702,185,0.619,186,0.915,187,0.632,188,1.31,189,0.882,190,0.915,191,1.313,192,0.645,193,0.659,194,0.702,195,0.645,196,1.359,197,0.702,198,0.645,199,0.702,200,0.606,201,0.645,202,0.645,203,0.593,204,0.702,205,0.645,206,0.83,207,1.365,208,0.606,209,0.955,210,0.702,211,0.619,212,0.702,213,0.619,214,0.702,215,0.606,216,0.702,217,0.606,218,0.702,219,0.606,220,0.659,221,0.702,222,0.007,223,0.004,226,0.282,234,0.949,246,1.395,248,0.822,260,0.377,267,1.159,268,1.751,269,2.572,284,2.199,315,1.035,317,2.058,371,2.051,523,2.706,537,0.812,538,1.886,548,0.754,557,2.676,574,3.635,595,1.577,602,0.747,608,0.451,622,1.105,637,2.142,671,3.94,705,1.314,725,1.795,726,1.926,727,2.933,728,1.35,753,2.117,763,2.273,764,3.221,766,1.751,768,1.941,769,2.722,778,2.571,781,2.811,782,2.572,783,2.435,787,1.986,788,1.862,789,2.572,790,2.111,791,1.009,792,1.314,793,1.513,803,1.248,811,2.857,817,2.287,820,2.287,826,2.599,829,1.387,833,2.359,840,1.986,869,3.887,903,1.79,994,3.887,1005,2.217,1021,2.394,1055,0.904,1072,3.401,1092,2.142,1122,3.242,1171,2.287,1185,1.387,1186,1.314,1189,1.35,1232,1.632,1411,4.901,1454,4.121,1460,2.971,1467,3.067,1485,2.097,1486,3.067,1492,4.121,1493,4.425,1571,3.401,1594,2.608,1615,2.608,1619,1.314,1620,1.611,1638,3.779,1655,1.561,1656,2.393,1701,4.262,1702,3.067,1723,2.706,1747,2.471,1752,1.611,1756,3.617,1810,3.067,1846,1.941,1876,1.862,1879,3.035,1885,1.611,1950,3.617,1984,4.099,2075,2.03,2096,1.941,2098,2.132,2158,3.617,2200,3.617,2379,2.359,2523,5.307,2647,2.393,2655,2.25,2656,2.393,2667,5.708,2695,6.129,2737,1.513,2762,2.132,2771,3.617,2776,4.906,2804,3.883,2815,4.653,2816,4.653,2818,4.975,2871,2.03,2873,3.261,3053,4.249,3282,1.941,3535,3.887,3877,2.393,3880,5.121,3881,4.249,3908,5.55,3912,3.697,3985,2.25,4008,5.224,4009,3.067,4010,6.107,4011,5.159,4012,4.569,4013,4.569,4014,4.569,4015,4.569,4016,4.569,4017,2.25,4019,2.25,4022,4.569,4025,5.159,4027,2.25,4033,2.25,4068,2.25,4261,4.249,4714,2.572,5011,3.617,5041,2.393,5174,6.446,5175,6.446,5176,5.784,5177,5.784,5178,5.784,5179,3.175,5180,3.175,5181,4.798,5182,3.175,5183,3.175,5184,3.175,5185,6.446,5186,6.446,5187,4.798,5188,3.175,5189,3.175,5190,4.798,5191,3.175,5192,4.798,5193,3.175,5194,3.401,5195,4.798,5196,4.798,5197,3.175,5198,4.798,5199,4.798,5200,3.175,5201,4.798,5202,3.175,5203,4.798,5204,3.175,5205,3.175,5206,3.175,5207,4.798,5208,3.175,5209,3.175,5210,3.175,5211,3.175,5212,3.175,5213,3.175,5214,3.175,5215,4.798,5216,3.175,5217,3.175,5218,3.175,5219,3.175,5220,4.798,5221,3.175,5222,3.175,5223,3.175,5224,3.175,5225,3.175,5226,3.175,5227,3.175,5228,3.175,5229,3.175,5230,3.175,5231,3.175,5232,3.175,5233,3.175,5234,3.175,5235,3.175,5236,3.175,5237,3.175,5238,3.175,5239,3.175,5240,3.175,5241,3.175,5242,3.175,5243,3.175,5244,3.175,5245,3.175,5246,3.175,5247,3.175,5248,3.175]],["title/components/SetEditorDialogComponent.html",[0,0.085,190,0.859]],["body/components/SetEditorDialogComponent.html",[0,0.137,1,0.572,2,0.719,3,0.048,4,0.119,5,0.452,6,0.635,7,0.622,8,0.597,9,0.043,11,0.56,13,1.136,14,0.871,15,1.464,16,0.549,17,1.353,18,1.312,19,0.56,20,1.164,21,0.643,22,2.282,23,0.643,24,1.861,25,0.053,26,0.366,27,1.48,28,2.346,30,0.586,33,0.628,35,2.506,37,0.738,39,0.723,40,0.008,41,0.507,42,0.169,43,0.565,45,0.819,46,1.064,49,0.55,50,1.224,51,1.03,53,0.184,54,0.195,55,0.856,56,0.572,57,0.927,60,0.126,61,0.011,62,0.98,63,1.21,64,0.768,72,1.136,85,1.912,86,1.219,92,1.107,93,1.004,95,0.622,96,0.853,97,0.835,98,0.472,99,1.31,100,0.622,101,1.737,102,0.56,103,1.06,104,0.934,105,0.889,106,0.572,107,0.622,108,0.572,109,0.56,110,0.622,111,0.572,112,0.622,113,0.537,114,0.549,115,0.934,116,0.56,117,1.324,118,0.703,119,1.186,120,0.549,121,0.092,122,0.56,123,0.913,124,0.572,125,0.572,126,1.199,127,0.622,128,0.549,129,0.622,130,0.572,131,0.622,132,0.572,133,0.622,134,0.56,135,0.622,136,0.56,137,0.622,138,0.395,139,0.622,140,0.56,141,0.272,142,0.622,143,0.572,144,0.622,145,0.572,146,1.186,147,0.572,148,0.622,149,0.572,150,1.186,151,0.572,152,0.622,153,0.584,154,0.622,155,0.549,156,0.622,157,0.572,158,0.622,159,0.597,160,0.526,161,0.622,162,0.572,163,0.927,164,0.967,165,0.572,166,0.622,167,0.549,168,0.607,169,0.622,170,0.56,171,0.572,172,0.622,173,0.572,174,0.622,175,0.56,176,0.56,177,0.549,178,0.622,179,0.56,180,0.622,181,0.526,182,0.951,183,0.549,184,0.622,185,0.549,186,0.835,187,0.56,188,0.572,189,0.855,190,1.155,191,1.424,192,0.572,193,0.584,194,0.622,195,0.572,196,1.131,197,0.622,198,0.572,199,0.622,200,0.537,201,0.572,202,0.572,203,1.131,204,0.622,205,0.572,206,0.404,207,1.319,208,0.537,209,0.56,210,0.622,211,0.549,212,0.622,213,0.549,214,0.622,215,0.537,216,0.622,217,0.537,218,0.622,219,0.537,220,0.584,221,0.622,222,0.006,223,0.004,226,0.25,234,1.229,235,1.107,243,1.23,244,2.025,246,1.568,248,0.966,253,1.136,256,1.266,260,1.038,268,1.028,276,1.197,284,0.895,301,1.384,315,1.203,371,1.777,417,1.651,537,0.721,538,2.11,548,1.138,553,1.303,561,1.303,567,1.53,602,1.03,608,0.764,637,2.179,652,1.721,691,1.881,725,1.053,728,1.861,763,2.11,764,1.891,768,1.721,769,2.995,778,2.803,780,2.885,783,2.221,787,2.506,790,1.96,791,0.895,792,1.166,793,1.342,803,1.107,811,2.709,816,0.856,826,1.266,833,2.976,843,1.651,876,2.086,889,1.266,903,1.588,906,1.205,923,1.53,926,1.891,941,3.564,955,1.651,985,2.321,1002,1.166,1003,1.107,1004,1.166,1021,2.222,1028,1.891,1033,0.915,1055,0.802,1058,1.342,1092,2.012,1166,1.028,1168,2.412,1169,1.384,1170,2.725,1179,1.651,1183,2.297,1185,2.346,1186,2.222,1187,2.13,1193,2.297,1232,1.826,1266,1.96,1454,3.801,1460,2.848,1466,1.588,1483,1.651,1485,1.23,1492,3.432,1493,3.432,1497,1.651,1521,4.863,1522,2.918,1559,2.379,1565,1.166,1619,1.166,1640,1.342,1649,2.221,1655,2.151,1666,1.588,1682,1.8,1701,2.468,1723,1.588,1729,1.721,1731,3.564,1732,1.721,1747,1.678,1783,2.976,1811,1.891,1812,1.651,1825,1.588,1828,1.8,1846,3.281,1885,2.221,1986,1.8,2064,4.647,2065,1.891,2066,1.891,2067,1.651,2075,1.8,2139,2.798,2152,1.721,2156,2.938,2523,5.272,2595,1.53,2648,1.996,2650,1.53,2651,1.651,2653,1.384,2655,4.647,2656,2.123,2737,2.558,2750,2.123,2762,3.604,2815,3.87,2816,4.192,2818,1.8,2826,4.064,2840,3.102,2873,2.468,3302,2.494,3521,2.281,3806,1.8,3837,1.891,3898,2.938,3907,3.604,3908,5.514,3909,4.046,3910,2.123,3911,2.123,3912,3.87,3913,2.123,3914,3.299,3915,2.123,3916,2.123,3917,2.123,3918,2.123,3919,2.123,3921,1.996,3923,2.123,3933,2.123,3936,1.8,3937,2.123,3938,2.123,3940,2.123,3941,2.123,3942,2.123,3945,2.123,3946,2.123,3949,2.123,3950,1.721,3951,2.675,3952,4.046,3953,4.046,3954,3.299,3955,2.123,3956,1.996,3957,2.123,3958,3.299,3959,3.299,3960,2.123,3961,2.123,3962,2.123,3963,2.123,3964,3.299,3965,2.123,3966,3.299,3967,2.123,3968,2.123,3969,2.123,3970,2.123,3971,2.123,3972,2.123,3973,2.123,3974,2.123,3975,2.123,3976,2.123,3977,2.123,3978,2.123,3979,2.123,3980,2.123,3981,3.299,3982,4.046,3983,2.123,3984,2.123,3985,1.996,3986,2.123,3987,2.123,3988,2.123,3989,1.996,3990,2.123,3991,2.123,3992,2.123,3993,4.046,3994,2.123,3995,2.123,3996,2.123,3997,2.123,3998,2.123,3999,2.123,4000,2.123,4001,2.123,4002,2.123,4003,2.123,4004,2.123,4005,2.123,4006,2.123,4007,2.123,4008,1.891,4009,4.192,4010,4.647,4011,1.996,4012,1.996,4013,1.996,4014,4.647,4015,1.996,4016,1.996,4017,3.805,4018,4.046,4019,3.805,4020,4.046,4021,2.123,4022,3.102,4023,2.123,4024,2.123,4025,3.805,4026,2.123,4027,1.996,4028,2.123,4029,2.123,4030,3.299,4031,3.299,4032,2.123,4033,1.996,4034,2.123,4035,2.123,4036,2.123,4037,2.123,4038,2.123,4039,2.123,4040,4.563,4041,2.123,4042,3.299,4043,2.123,4044,3.299,4045,2.123,4046,3.299,4047,2.123,4048,3.299,4049,3.299,4050,2.123,4051,2.123,4052,2.123,4053,2.123,4054,3.299,4055,2.123,4056,2.123,4057,2.123,4058,2.123,4059,2.123,4060,2.123,4061,2.123,4062,3.299,4063,2.123,4064,2.123,4065,2.123,4066,2.123,4067,2.123,4068,1.996,4069,2.123,5155,3.875,5249,4.376,5250,4.376,5251,4.376,5252,4.376,5253,4.376,5254,2.816,5255,2.816,5256,2.816,5257,2.816,5258,2.816,5259,2.816,5260,2.816,5261,2.816,5262,2.816,5263,2.816,5264,2.816,5265,2.816,5266,2.816,5267,2.816,5268,2.816,5269,4.376,5270,4.376,5271,4.376,5272,2.816,5273,2.816,5274,2.816,5275,2.816,5276,2.816,5277,5.368,5278,2.816,5279,2.816,5280,2.816,5281,2.816,5282,2.816,5283,2.816]],["title/interfaces/SetEditorDialogData.html",[121,0.068,4009,2.879]],["body/interfaces/SetEditorDialogData.html",[0,0.133,2,0.513,3,0.065,4,0.129,9,0.058,13,1.544,14,0.762,15,1.502,17,0.55,18,0.537,20,0.642,21,0.562,22,1.627,23,0.562,24,1.627,25,0.072,26,0.461,27,1.468,28,1.673,33,0.55,35,2.28,40,0.008,42,0.185,43,0.671,46,0.948,49,0.639,53,0.202,54,0.265,55,1.163,60,0.146,61,0.014,62,1.333,63,1.179,64,1.044,72,1.544,92,1.505,103,0.67,115,0.655,117,1.231,121,0.098,126,1.29,168,0.623,182,1.013,189,0.83,190,0.73,191,1.223,207,1.106,222,0.007,223,0.005,234,1.158,235,1.505,244,1.771,246,1.685,248,0.976,253,1.544,256,1.72,260,1.082,284,2.242,301,1.882,315,1.318,371,1.969,529,1.044,537,0.98,538,2.536,548,1.26,553,1.771,561,1.771,567,2.08,595,2.315,602,0.901,608,0.816,637,2.346,652,2.34,691,2.192,725,1.432,728,2.342,763,2.165,764,4.738,769,3.071,778,3.003,780,3.363,783,3.582,787,2.671,790,2.355,791,1.216,792,1.585,793,1.824,803,1.505,811,2.668,826,1.72,833,3.172,843,2.244,889,1.72,906,0.762,923,2.08,926,2.57,941,2.08,985,2.111,1002,1.585,1003,1.505,1004,1.585,1021,1.585,1028,2.57,1033,1.244,1055,1.09,1058,1.824,1232,2.194,1460,3.378,1466,2.159,1483,2.244,1485,1.673,1492,2.447,1493,2.447,1497,2.244,1521,3.698,1559,2.994,1565,1.585,1649,2.796,1666,2.159,1682,2.447,1701,3.106,1723,2.159,1729,2.34,1731,3.507,1732,2.34,1747,2.111,1783,3.469,1812,2.244,1825,2.159,1828,2.447,1846,3.367,1885,2.796,1986,2.447,2064,5.3,2065,2.57,2066,2.57,2067,2.244,2075,2.447,2139,3.521,2152,2.34,2523,2.34,2762,2.57,2815,5.129,2816,4.978,2818,4.511,2826,4.738,2840,3.904,2873,2.159,3806,2.447,3837,2.57,3898,3.698,3907,3.698,3908,2.447,3909,4.863,3910,2.885,3911,2.885,3912,4.978,3913,2.885,3914,4.152,3915,2.885,3916,2.885,3917,2.885,3918,2.885,3919,2.885,3921,2.713,3923,2.885,3933,2.885,3936,2.447,3937,2.885,3938,2.885,3940,2.885,3941,2.885,3942,2.885,3945,2.885,3946,2.885,3949,2.885,3950,2.34,3951,3.367,3952,4.863,3953,4.863,3954,4.152,3955,2.885,3956,2.713,3957,2.885,3958,4.152,3959,4.152,3960,2.885,3961,2.885,3962,2.885,3963,2.885,3964,4.152,3965,2.885,3966,4.152,3967,2.885,3968,2.885,3969,2.885,3970,2.885,3971,2.885,3972,2.885,3973,2.885,3974,2.885,3975,2.885,3976,2.885,3977,2.885,3978,2.885,3979,2.885,3980,2.885,3981,4.152,3982,4.863,3983,2.885,3984,2.885,3985,2.713,3986,2.885,3987,2.885,3988,2.885,3989,2.713,3990,2.885,3991,2.885,3992,2.885,3993,4.863,3994,2.885,3995,2.885,3996,2.885,3997,2.885,3998,2.885,3999,2.885,4000,2.885,4001,2.885,4002,2.885,4003,2.885,4004,2.885,4005,2.885,4006,2.885,4007,2.885,4008,2.57,4009,4.125,4010,5.519,4011,5.002,4012,5.002,4013,5.002,4014,5.3,4015,5.002,4016,5.002,4017,2.713,4018,2.885,4019,2.713,4020,2.885,4021,2.885,4022,3.904,4023,2.885,4024,2.885,4025,4.573,4026,2.885,4027,2.713,4028,2.885,4029,2.885,4030,4.152,4031,4.152,4032,2.885,4033,2.713,4034,2.885,4035,2.885,4036,2.885,4037,2.885,4038,2.885,4039,2.885,4040,2.885,4041,2.885,4042,4.152,4043,2.885,4044,2.885,4045,2.885,4046,2.885,4047,2.885,4048,2.885,4049,4.152,4050,2.885,4051,2.885,4052,2.885,4053,2.885,4054,2.885,4055,2.885,4056,2.885,4057,2.885,4058,2.885,4059,2.885,4060,2.885,4061,2.885,4062,4.152,4063,2.885,4064,2.885,4065,2.885,4066,2.885,4067,2.885,4068,2.713,4069,2.885]],["title/interfaces/SetMultiSource.html",[121,0.068,3912,2.879]],["body/interfaces/SetMultiSource.html",[0,0.134,2,0.745,3,0.066,4,0.132,9,0.059,13,1.565,14,0.772,15,1.517,17,0.557,18,0.545,20,0.651,21,0.57,22,1.65,23,0.57,24,1.65,25,0.073,26,0.465,27,1.471,28,1.696,33,0.557,35,2.302,40,0.008,42,0.162,43,0.612,46,0.955,49,0.589,53,0.202,54,0.268,55,1.179,60,0.147,61,0.014,62,1.351,63,1.183,64,1.058,72,1.565,92,1.525,103,0.68,115,0.661,117,1.24,121,0.108,126,1.298,168,0.629,182,1.021,189,0.841,190,0.74,191,1.265,207,1.114,222,0.007,223,0.005,226,0.344,234,1.165,235,1.525,244,1.795,246,1.693,248,0.979,253,1.565,256,1.744,260,1.084,284,1.233,301,1.907,315,1.323,371,2.114,529,1.058,537,0.993,538,2.556,548,1.265,553,1.795,561,1.795,567,2.109,595,1.517,602,0.913,608,0.818,637,2.498,652,2.372,691,2.206,725,2.08,728,2.764,763,2.186,764,2.605,769,3.082,778,3.01,780,3.84,783,2.823,787,2.691,790,2.373,791,1.233,792,1.606,793,1.849,803,1.525,811,2.829,826,1.744,833,3.196,843,2.275,889,1.744,906,0.772,923,2.109,926,2.605,941,2.109,985,2.132,1002,1.606,1003,1.525,1004,1.606,1021,1.606,1028,2.605,1033,1.261,1055,1.105,1058,1.849,1232,2.66,1460,3.388,1466,2.188,1483,2.275,1485,1.696,1492,2.481,1493,2.481,1497,2.275,1521,3.734,1559,3.023,1565,2.302,1649,2.823,1666,2.188,1682,2.481,1701,3.136,1723,3.136,1729,2.372,1731,3.534,1732,2.372,1747,2.132,1783,3.491,1812,3.261,1825,3.136,1828,2.481,1846,3.4,1885,2.823,1986,3.556,2064,5.841,2065,2.605,2066,2.605,2067,2.275,2075,2.481,2139,4.156,2152,2.372,2523,2.372,2762,2.605,2815,4.54,2816,4.156,2818,2.481,2826,5.533,2840,3.943,2873,2.188,3806,2.481,3837,2.605,3898,3.734,3907,3.734,3908,2.481,3909,5.353,3910,2.925,3911,2.925,3912,4.806,3913,2.925,3914,4.193,3915,2.925,3916,2.925,3917,2.925,3918,2.925,3919,2.925,3921,2.75,3923,2.925,3933,2.925,3936,2.481,3937,2.925,3938,2.925,3940,2.925,3941,2.925,3942,2.925,3945,2.925,3946,2.925,3949,2.925,3950,2.372,3951,4.34,3952,5.896,3953,6.212,3954,5.896,3955,4.193,3956,2.75,3957,2.925,3958,4.193,3959,4.193,3960,2.925,3961,2.925,3962,2.925,3963,2.925,3964,4.193,3965,2.925,3966,4.193,3967,2.925,3968,2.925,3969,2.925,3970,2.925,3971,2.925,3972,2.925,3973,2.925,3974,2.925,3975,2.925,3976,2.925,3977,2.925,3978,2.925,3979,2.925,3980,2.925,3981,4.193,3982,4.901,3983,2.925,3984,2.925,3985,2.75,3986,2.925,3987,2.925,3988,2.925,3989,2.75,3990,2.925,3991,2.925,3992,2.925,3993,4.901,3994,2.925,3995,2.925,3996,2.925,3997,2.925,3998,2.925,3999,2.925,4000,2.925,4001,2.925,4002,2.925,4003,2.925,4004,2.925,4005,2.925,4006,2.925,4007,2.925,4008,2.605,4009,3.556,4010,4.608,4011,2.75,4012,2.75,4013,2.75,4014,3.943,4015,2.75,4016,2.75,4017,2.75,4018,2.925,4019,2.75,4020,2.925,4021,2.925,4022,3.943,4023,2.925,4024,2.925,4025,4.608,4026,2.925,4027,2.75,4028,2.925,4029,2.925,4030,4.193,4031,4.193,4032,2.925,4033,2.75,4034,2.925,4035,2.925,4036,2.925,4037,2.925,4038,2.925,4039,2.925,4040,2.925,4041,2.925,4042,4.193,4043,2.925,4044,2.925,4045,2.925,4046,2.925,4047,2.925,4048,2.925,4049,4.193,4050,2.925,4051,2.925,4052,2.925,4053,2.925,4054,2.925,4055,2.925,4056,2.925,4057,2.925,4058,2.925,4059,2.925,4060,2.925,4061,2.925,4062,4.193,4063,2.925,4064,2.925,4065,2.925,4066,2.925,4067,2.925,4068,2.75,4069,2.925]],["title/components/SettingsDialogComponent.html",[0,0.085,56,0.915]],["body/components/SettingsDialogComponent.html",[0,0.143,1,1.256,2,0.828,3,0.077,4,0.068,5,0.724,6,1.017,7,0.996,8,0.955,9,0.068,11,1.703,12,3.399,13,1.818,14,1.23,15,1.923,16,0.878,17,1.382,18,1.346,19,1.581,20,1.435,21,0.908,22,2.997,23,0.908,24,2.627,25,0.085,26,0.517,27,1.455,28,3.314,30,0.828,33,0.647,34,2.542,35,3.289,36,3.314,37,0.724,39,0.497,40,0.008,41,0.529,42,0.157,43,0.389,44,2.882,45,0.797,46,1.114,49,0.442,50,1.154,51,0.971,53,0.22,54,0.487,55,1.878,56,1.541,57,1.946,58,5.745,59,2.777,60,0.094,61,0.011,62,1.57,63,0.662,64,1.23,70,3.243,72,1.818,95,0.996,96,1.204,97,1.179,98,0.756,99,1.641,100,0.996,101,1.941,102,0.897,103,0.79,104,1.068,105,1.256,106,0.916,107,0.996,108,0.916,109,0.897,110,0.996,111,0.916,112,0.996,113,0.86,114,0.878,115,0.944,116,0.897,117,0.86,118,0.992,119,1.558,120,0.878,121,0.068,122,0.897,123,0.982,124,0.916,125,0.916,126,0.824,127,0.996,128,0.878,129,0.996,130,0.916,131,0.996,132,0.916,133,0.996,134,0.897,135,0.996,136,0.897,137,0.996,138,0.633,139,0.996,140,0.897,141,0.435,142,0.996,143,0.916,144,0.996,145,0.916,146,1.558,147,0.916,148,0.996,149,0.916,150,1.558,151,0.916,152,0.996,153,0.936,154,0.996,155,0.878,156,0.996,157,0.916,158,0.996,159,0.955,160,0.842,161,0.996,162,0.916,163,1.309,164,1.365,165,0.916,166,0.996,167,0.878,168,0.51,169,0.996,170,0.897,171,1.256,172,1.756,173,0.916,174,0.996,175,0.897,176,0.897,177,0.878,178,0.996,179,0.897,180,0.996,181,0.842,182,0.708,183,0.878,184,0.996,185,0.878,186,1.179,187,0.897,188,0.916,189,0.597,190,0.86,191,0.708,192,0.916,193,0.936,194,0.996,195,0.916,196,0.842,197,0.996,198,0.916,199,0.996,200,0.86,201,0.916,202,0.916,203,0.842,204,0.996,205,0.916,206,0.647,207,0.773,208,0.86,209,0.897,210,0.996,211,0.878,212,0.996,213,0.878,214,0.996,215,0.86,216,0.996,217,0.86,218,0.996,219,0.86,220,0.936,221,0.996,222,0.005,223,0.005,249,1.917,253,1.818,254,2.086,255,1.686,256,2.026,355,3.196,472,3.399,537,1.154,540,1.866,547,1.499,626,2.289,691,1.401,726,1.039,1090,3.623,1432,3.399,1532,3.196,1545,4.38,1548,3.653,1568,3.993,2211,3.399,2223,3.399,2229,3.399,2776,3.196,2804,3.027,2829,2.756,3317,6.716,3318,6.716,3931,3.653,5284,7.578,5285,9.055,5286,7.946,5287,7.584,5288,7.584,5289,7.584,5290,7.05,5291,4.509,5292,4.509,5293,4.509,5294,6.179,5295,4.509,5296,6.179,5297,6.179,5298,4.509,5299,5.472]],["title/components/SideNavComponent.html",[0,0.085,192,0.915]],["body/components/SideNavComponent.html",[0,0.154,1,0.895,2,0.814,3,0.118,4,0.067,5,0.707,6,0.993,7,0.973,8,0.933,9,0.067,11,0.876,16,0.858,17,1.381,18,1.345,19,0.876,20,0.738,21,0.893,23,0.893,25,0.083,26,0.509,27,1.449,33,0.632,37,0.753,39,0.485,40,0.008,41,0.549,42,0.179,43,0.379,49,0.315,50,1.521,51,1.28,53,0.2,54,0.304,56,0.895,57,1.288,60,0.091,61,0.011,62,1.532,69,3.564,95,0.973,96,1.184,97,1.159,98,0.738,99,1.625,100,0.973,101,1.932,102,0.876,103,0.771,104,1.102,105,1.235,106,0.895,107,0.973,108,0.895,109,0.876,110,0.973,111,0.895,112,0.973,113,0.84,114,0.858,115,0.936,116,0.876,117,0.84,118,0.976,119,1.538,120,0.858,121,0.067,122,0.876,123,0.979,124,0.895,125,0.895,126,0.805,127,0.973,128,0.858,129,0.973,130,0.895,131,0.973,132,0.895,133,0.973,134,0.876,135,0.973,136,0.876,137,0.973,138,0.618,139,0.973,140,0.876,141,0.786,142,0.973,143,0.895,144,0.973,145,0.895,146,1.538,147,0.895,148,0.973,149,0.895,150,1.538,151,0.895,152,0.973,153,0.914,154,0.973,155,0.858,156,0.973,157,0.895,158,0.973,159,0.933,160,0.822,161,0.973,162,0.895,163,1.288,164,1.343,165,0.895,166,0.973,167,0.858,168,0.498,169,0.973,170,0.876,171,0.895,172,0.973,173,0.895,174,0.973,175,0.876,176,0.876,177,0.858,178,0.973,179,0.876,180,0.973,181,0.822,182,0.691,183,0.858,184,0.973,185,0.858,186,1.159,187,0.876,188,0.895,189,0.587,190,0.84,191,0.691,192,1.526,193,1.766,194,0.973,195,0.895,196,0.822,197,0.973,198,0.895,199,0.973,200,0.84,201,0.895,202,0.895,203,1.402,204,0.973,205,0.895,206,0.632,207,1.042,208,0.84,209,0.876,210,0.973,211,0.858,212,0.973,213,0.858,214,0.973,215,0.84,216,0.973,217,0.84,218,0.973,219,0.84,220,0.914,221,0.973,222,0.005,223,0.005,226,0.391,274,3.221,276,1.872,277,2.33,371,1.491,378,7.153,499,1.607,512,3.473,515,2.163,517,4.935,535,3.929,549,2.33,556,4.135,608,0.413,654,3.654,725,2.273,906,1.385,984,3.541,985,3.02,1002,1.822,1003,1.73,1004,1.822,1042,3.715,1062,1.822,1166,2.219,1170,2.234,1187,1.43,1188,3.12,1225,2.988,1415,2.393,1529,1.688,1619,1.822,1620,2.234,1660,3.898,1987,3.12,2149,4.8,2191,2.234,2194,5.383,2230,3.318,2379,2.988,2595,2.393,2798,3.566,2866,3.715,2871,2.814,3063,5.383,3067,3.566,3068,2.955,3294,3.715,4486,3.566,4793,4.081,4801,5.383,4811,6.165,5300,7.819,5301,3.898,5302,6.078,5303,6.078,5304,5.383,5305,6.962,5306,6.078,5307,6.962,5308,6.962,5309,6.962,5310,6.962,5311,7.878,5312,6.962,5313,4.402,5314,6.078,5315,4.402,5316,4.402,5317,4.402,5318,6.078,5319,4.402,5320,4.402,5321,4.402,5322,4.402,5323,4.402,5324,4.402,5325,4.402,5326,4.402,5327,4.402,5328,4.402,5329,4.402,5330,7.508,5331,4.402,5332,4.402,5333,4.402,5334,4.402,5335,4.402,5336,4.402,5337,3.898]],["title/injectables/StateService.html",[532,1.082,556,2.364]],["body/injectables/StateService.html",[3,0.092,4,0.082,8,1.148,9,0.082,25,0.102,26,0.584,30,0.935,33,0.778,37,0.728,39,0.851,40,0.008,41,0.544,42,0.169,43,0.666,45,0.873,46,0.796,49,0.552,50,1.304,51,1.097,53,0.212,54,0.374,60,0.145,61,0.014,63,1.199,89,3.664,104,1.158,121,0.082,189,0.523,222,0.006,223,0.006,226,0.619,231,2.744,246,1.172,248,0.918,260,0.918,281,1.683,293,1.033,315,1.121,317,2.076,499,1.977,512,2.506,514,5.656,528,5.823,530,4.388,531,5.656,532,1.677,533,7.226,534,4.797,535,4.108,536,3.84,537,1.386,538,3.037,539,3.637,540,2.242,541,1.542,542,4.96,543,4.388,544,2.434,545,3.138,546,6.182,547,2.712,548,1.097,549,3.128,550,4.687,551,6.182,552,4.969,553,3.23,554,6.182,555,2.367,556,3.664,557,4.123,558,5.263,559,7.22,560,4.797,561,3.23,562,4.463,563,3.937,564,6.182,565,6.182,566,4.687,567,3.795,568,5.263,569,3.138,570,6.182,571,5.656,572,2.968,573,3.795,574,3.937,575,1.895,576,4.267,577,6.182,578,6.151,579,5.263,580,6.182,581,6.182,582,6.182,583,3.937,584,6.182,585,6.182,586,4.797,587,4.797,588,4.797,589,6.182,590,6.182,591,4.797,592,4.797,593,6.182,594,4.988,595,1.904,596,5.656,597,6.182,598,5.656,599,3.795,600,6.182,601,6.182,602,1.643,603,4.797,604,5.656,605,4.797,606,4.797,607,4.797,608,0.656,609,4.797,610,4.797,611,2.185,625,3.84,646,2.242,5338,6.981,5339,6.981,5340,6.981,5341,5.417,5342,5.417,5343,5.417]],["title/components/TextDisplayComponent.html",[0,0.085,195,0.915]],["body/components/TextDisplayComponent.html",[0,0.149,1,0.812,2,0.761,3,0.068,4,0.061,5,0.642,6,0.902,7,0.883,8,0.847,9,0.061,11,0.795,16,0.779,17,1.376,18,1.339,19,0.795,20,0.67,21,0.834,23,0.834,25,0.075,26,0.475,30,0.761,37,0.761,39,0.626,40,0.008,41,0.524,42,0.175,43,0.49,45,0.747,46,1.117,49,0.594,50,1.344,51,1.346,53,0.14,54,0.276,56,0.812,57,1.204,60,0.118,61,0.01,63,0.971,85,2.482,86,1.841,90,2.343,93,2.565,95,0.883,96,1.107,97,1.084,98,0.67,99,1.557,100,0.883,101,1.893,102,0.795,103,0.7,104,1.036,105,1.154,106,0.812,107,0.883,108,0.812,109,0.795,110,0.883,111,0.812,112,0.883,113,0.762,114,0.779,115,0.903,116,0.795,117,1.584,118,1.156,119,1.46,120,0.779,121,0.061,122,0.795,123,0.966,124,0.812,125,0.812,126,0.731,127,0.883,128,0.779,129,0.883,130,0.812,131,0.883,132,0.812,133,0.883,134,0.795,135,0.883,136,0.795,137,0.883,138,0.561,139,0.883,140,0.795,141,0.386,142,0.883,143,0.812,144,0.883,145,0.812,146,1.46,147,0.812,148,0.883,149,0.812,150,1.46,151,0.812,152,0.883,153,0.829,154,0.883,155,0.779,156,0.883,157,0.812,158,0.883,159,0.847,160,0.746,161,0.883,162,0.812,163,1.204,164,1.255,165,0.812,166,0.883,167,0.779,168,0.452,169,0.883,170,0.795,171,0.812,172,0.883,173,0.812,174,0.883,175,0.795,176,0.795,177,0.779,178,0.883,179,0.795,180,0.883,181,0.746,182,0.628,183,0.779,184,0.883,185,0.779,186,1.084,187,0.795,188,0.812,189,0.638,190,0.762,191,0.628,192,0.812,193,0.829,194,0.883,195,1.462,196,1.76,197,0.883,198,0.812,199,0.883,200,0.762,201,0.812,202,0.812,203,1.42,204,0.883,205,0.812,206,1.134,207,0.685,208,0.762,209,0.795,210,0.883,211,0.779,212,0.883,213,0.779,214,0.883,215,0.762,216,0.883,217,0.762,218,0.883,219,0.762,220,0.829,221,0.883,222,0.005,223,0.005,226,0.355,246,1.709,259,2.415,267,3.032,268,2.775,276,2.415,277,2.759,284,1.805,315,1.156,463,6.702,561,3.057,575,0.981,576,3.472,595,1.802,602,1.859,608,0.375,611,1.612,654,3.468,659,4.282,670,4.132,726,1.82,766,2.074,839,4.458,865,2.979,887,1.905,903,4.287,906,1.652,1059,1.612,1062,1.654,1063,2.343,1092,2.881,1165,3.539,1166,2.627,1168,2.553,1169,1.965,1170,2.029,1171,2.707,1183,3.777,1185,2.482,1186,1.654,1187,1.299,1189,3.232,1411,3.875,1486,3.632,1522,2.172,1619,2.351,1630,2.443,1640,1.905,1835,2.172,2017,3.203,2096,2.443,2593,2.555,2594,3.013,2595,3.087,2650,3.087,2651,3.331,2653,1.965,2668,5.03,2677,3.013,2696,5.101,2699,2.683,2737,1.905,2742,2.172,3072,2.555,3526,2.833,3989,4.026,4080,5.852,4082,7.482,4130,5.03,4292,2.683,4442,3.013,4814,3.539,4820,3.238,5344,7.203,5345,3.238,5346,5.681,5347,6.609,5348,5.681,5349,6.609,5350,6.609,5351,7.197,5352,8.126,5353,6.609,5354,3.997,5355,5.852,5356,3.997,5357,3.997,5358,3.997,5359,5.681,5360,5.681,5361,3.997,5362,3.997,5363,3.997,5364,3.997,5365,3.997,5366,3.997,5367,3.997,5368,3.997,5369,3.997,5370,3.997,5371,3.997,5372,5.681,5373,3.997,5374,3.997,5375,5.681,5376,5.681,5377,3.997,5378,3.997,5379,3.997,5380,6.609,5381,3.997,5382,3.539,5383,3.539,5384,3.997,5385,3.997,5386,3.997]],["title/interfaces/TextFragment.html",[121,0.068,2175,3.024]],["body/interfaces/TextFragment.html",[0,0.151,3,0.1,4,0.089,9,0.089,14,1.172,15,2.008,17,0.846,18,0.827,21,0.865,23,0.865,25,0.111,26,0.616,27,0.967,40,0.008,41,0.543,42,0.153,49,0.601,50,1.1,51,0.925,53,0.213,54,0.407,60,0.153,61,0.015,63,1.082,64,1.606,97,1.124,118,1.391,121,0.112,141,0.569,155,1.148,196,1.571,222,0.006,223,0.006,231,2.894,246,1.593,248,0.875,260,0.7,293,1.124,315,0.946,318,2.896,371,1.445,389,2.647,431,3.202,515,1.83,529,1.606,537,1.507,539,3.955,540,2.439,544,2.647,547,2.447,556,3.864,576,3.601,608,0.553,615,3.322,617,3.322,680,4.943,684,3.454,808,3.322,811,1.914,821,3.955,903,3.322,1033,1.914,1092,1.958,1245,2.574,1395,3.454,1454,4.271,1467,3.766,1485,2.574,1519,4.175,1565,3.657,1857,3.601,2108,4.175,2117,2.99,2123,5.135,2124,4.175,2125,3.601,2126,4.175,2127,5.393,2128,5.815,2129,5.965,2130,5.965,2131,5.965,2132,6.507,2133,4.44,2134,4.943,2135,4.772,2136,4.745,2137,3.955,2138,4.772,2139,3.766,2140,5.693,2141,4.772,2142,4.772,2143,4.772,2144,4.772,2145,4.772,2146,4.44,2147,5.55,2148,4.772,2149,3.766,2150,4.772,2151,4.772,2152,3.601,2153,4.772,2154,4.772,2155,4.44,2156,3.955,2157,5.393,2158,4.44,2159,4.772,2160,4.772,2161,4.772,2162,4.772,2163,4.772,2164,4.772,2165,4.44,2166,4.772,2167,4.772,2168,4.772,2169,4.772,2170,5.965,2171,4.772,2172,4.772,2173,4.772,2174,4.175,2175,5.393]],["title/classes/TimeFormatter.html",[61,0.011,830,2.54]],["body/classes/TimeFormatter.html",[3,0.096,4,0.085,9,0.085,25,0.106,30,0.958,37,0.677,39,0.866,40,0.008,41,0.507,42,0.163,43,0.677,45,0.889,49,0.668,60,0.117,61,0.018,81,7.325,83,4.804,89,4.582,222,0.006,223,0.006,226,0.634,248,0.934,260,1.067,575,2.03,594,4.369,608,0.843,720,2.051,725,3.094,751,4.236,757,5.066,806,3.943,816,2.172,819,4.496,830,4.03,860,4.236,861,4.552,862,3.295,1005,2.154,1055,2.431,1184,6.367,1649,3.628,1752,2.852,1834,4.236,1980,4.569,2304,5.554,2461,4.569,3956,6.054,5139,4.976,5383,7.325,5387,4.976,5388,7.147,5389,7.147,5390,7.147,5391,7.147,5392,5.619,5393,8.73,5394,7.147,5395,7.147,5396,7.147,5397,7.147,5398,7.147,5399,7.147,5400,7.147,5401,7.147,5402,7.147,5403,5.619,5404,6.329,5405,7.147,5406,8.87,5407,7.147,5408,7.147,5409,9.134,5410,5.619,5411,7.147,5412,6.329,5413,5.619,5414,7.147,5415,5.619,5416,5.619,5417,5.619,5418,5.619,5419,5.619,5420,7.147,5421,5.619,5422,5.619,5423,5.619,5424,5.619,5425,7.86,5426,5.619,5427,5.619,5428,7.147,5429,5.619,5430,5.619,5431,7.147,5432,7.147,5433,5.619,5434,5.619,5435,5.619,5436,5.619,5437,5.619,5438,5.619,5439,5.619,5440,5.619,5441,5.619]],["title/directives/TimelineCoalescedItemsDirective.html",[98,0.756,215,0.859]],["body/directives/TimelineCoalescedItemsDirective.html",[0,0.149,3,0.097,4,0.086,5,1.503,9,0.086,14,1.13,16,1.106,17,1.23,18,0.797,21,0.834,23,0.834,25,0.107,26,0.602,27,1.181,33,0.815,37,0.62,39,0.626,40,0.008,41,0.366,42,0.149,43,0.489,53,0.194,54,0.392,60,0.172,61,0.021,62,2.749,98,1.523,189,0.695,200,1.372,201,1.871,207,1.568,208,1.083,215,1.507,217,1.372,219,1.372,220,1.178,222,0.006,223,0.006,226,0.504,227,2.481,234,0.932,246,1.229,248,0.675,267,3.378,293,1.083,315,1.155,317,1.688,389,4.043,433,3.63,457,4.025,466,3.91,474,5.302,622,1.977,637,2.76,705,2.35,726,1.82,753,1.652,783,4.567,788,3.329,805,4.6,806,3.764,812,6.204,819,3.086,828,3.328,830,4.682,831,3.63,842,4.025,865,3.547,872,2.627,908,4.025,925,3.776,944,3.812,1005,2.177,1050,2.98,1051,3.776,1143,3.086,1781,2.791,1990,3.471,2012,3.63,2829,3.471,2975,3.812,3007,2.882,3285,3.471,3287,3.63,3951,5.076,4102,4.025,4715,4.025,4997,4.28,5194,4.025,5442,6.259,5443,5.423,5444,5.678,5445,5.678,5446,5.423,5447,5.423,5448,4.025,5449,4.28,5450,4.28,5451,4.28,5452,4.28,5453,4.28,5454,4.28,5455,4.28,5456,4.28,5457,5.953,5458,4.28,5459,5.423,5460,4.28,5461,4.28,5462,4.28]],["title/components/TimelineItemComponent.html",[0,0.085,200,0.859]],["body/components/TimelineItemComponent.html",[0,0.143,1,0.725,2,0.701,3,0.061,4,0.054,5,1.376,6,0.805,7,0.789,8,0.756,9,0.054,11,0.71,14,1.042,16,0.695,17,1.371,18,1.331,19,0.71,20,0.599,21,0.769,23,0.769,25,0.117,26,0.438,33,0.512,37,0.694,39,0.393,40,0.008,41,0.49,42,0.167,43,0.308,50,1.158,51,0.974,53,0.152,54,0.247,56,0.725,57,1.109,60,0.142,61,0.017,62,2.158,86,2.117,93,1.866,95,0.789,96,1.02,97,0.999,98,1.401,99,1.478,100,0.789,101,1.846,102,0.71,103,0.625,104,1.005,105,1.064,106,0.725,107,0.789,108,0.725,109,0.71,110,0.789,111,0.725,112,0.789,113,0.681,114,0.695,115,0.864,116,0.71,117,0.681,118,0.841,119,1.37,120,0.695,121,0.054,122,0.71,123,0.95,124,0.725,125,0.725,126,0.652,127,0.789,128,0.695,129,0.789,130,0.725,131,0.789,132,0.725,133,0.789,134,0.71,135,0.789,136,0.71,137,0.789,138,0.501,139,0.789,140,0.71,141,0.345,142,0.789,143,0.725,144,0.789,145,0.725,146,1.37,147,0.725,148,0.789,149,0.725,150,1.37,151,0.725,152,0.789,153,0.741,154,0.789,155,0.695,156,0.789,157,0.725,158,0.789,159,0.756,160,0.667,161,0.789,162,0.725,163,1.109,164,1.157,165,0.725,166,0.789,167,0.695,168,0.403,169,0.789,170,0.71,171,0.725,172,0.789,173,0.725,174,0.789,175,0.71,176,0.71,177,0.695,178,0.789,179,0.71,180,0.789,181,0.667,182,0.561,183,0.695,184,0.789,185,0.695,186,0.999,187,0.71,188,0.725,189,0.702,190,0.681,191,0.561,192,0.725,193,0.741,194,0.789,195,0.725,196,0.978,197,0.789,198,0.725,199,0.789,200,1.387,201,1.881,202,0.725,203,1.535,204,0.789,205,0.725,206,0.512,207,1.517,208,0.681,209,0.71,210,0.789,211,0.695,212,0.789,213,0.695,214,0.789,215,1.303,216,0.789,217,1.303,218,0.789,219,1.303,220,1.086,221,0.789,222,0.005,223,0.005,226,0.317,227,2.287,234,0.859,243,2.709,246,1.133,248,0.622,267,3.249,268,1.911,276,3.091,277,2.913,279,2.53,284,1.134,293,0.681,315,0.995,317,1.556,371,0.876,389,3.529,433,3.347,457,2.53,466,2.845,474,5.517,602,0.84,611,1.439,622,1.822,637,2.061,705,2.167,726,1.428,753,1.038,766,1.911,783,3.857,788,2.093,805,3.963,806,3.917,811,1.16,812,5.709,816,1.591,819,2.845,828,2.868,830,4.542,831,2.282,842,4.394,865,3.458,872,1.651,906,1.78,908,4.394,925,3.584,944,3.515,995,3.496,1005,2.007,1050,2.747,1051,3.584,1059,3.167,1062,3.402,1063,4.004,1092,2.27,1102,2.013,1143,1.94,1166,1.911,1168,3.951,1169,2.573,1171,2.495,1172,3.711,1174,5.154,1185,2.287,1186,1.477,1187,2.552,1188,4.84,1191,4.241,1193,2.747,1266,2.654,1295,1.873,1522,1.94,1523,3.946,1526,2.013,1529,3.01,1617,2.093,1619,1.477,1640,3.465,1655,3.357,1662,2.282,1727,4.673,1781,2.573,1884,3.069,1990,3.2,2012,3.347,2096,3.2,2246,2.891,2595,3.369,2647,2.69,2649,5.49,2650,3.369,2651,3.069,2652,3.16,2653,4.04,2737,2.495,2742,2.845,2751,3.16,2752,3.16,2829,3.2,2873,2.952,2975,3.515,3007,2.657,3285,2.182,3287,3.347,3522,2.53,3526,2.53,3653,6.047,3951,3.789,4102,3.711,4715,2.53,4727,3.16,4805,3.16,5194,3.711,5337,5.49,5382,4.636,5442,4.673,5443,2.69,5446,5.147,5447,4.673,5448,3.711,5449,3.946,5450,4.673,5451,3.946,5452,4.673,5453,3.946,5454,4.673,5455,4.673,5456,2.69,5457,4.673,5458,2.69,5459,3.946,5460,2.69,5461,2.69,5462,2.69,5463,3.569,5464,5.235,5465,3.569,5466,3.569,5467,3.569,5468,3.569,5469,3.569,5470,3.569,5471,5.235,5472,3.569,5473,3.569,5474,3.569,5475,3.569,5476,3.569,5477,3.569,5478,4.636,5479,3.569,5480,3.569,5481,5.235,5482,3.569,5483,5.235,5484,3.569,5485,7.271,5486,3.569,5487,3.569,5488,3.569,5489,3.569,5490,3.569,5491,3.569,5492,3.569]],["title/directives/TimelineItemDeletedDirective.html",[98,0.756,217,0.859]],["body/directives/TimelineItemDeletedDirective.html",[0,0.149,3,0.096,4,0.086,5,1.503,9,0.086,14,1.126,16,1.103,17,1.229,18,0.794,21,0.831,23,0.831,25,0.107,26,0.601,27,1.178,33,0.813,37,0.619,39,0.624,40,0.008,41,0.365,42,0.149,43,0.488,53,0.194,54,0.391,60,0.172,61,0.021,62,2.745,98,1.522,189,0.761,200,1.504,201,1.87,207,1.568,208,1.08,215,1.37,217,1.504,219,1.37,220,1.174,222,0.006,223,0.006,226,0.502,227,2.473,234,0.929,246,1.225,248,0.673,267,3.377,293,1.08,315,1.266,317,1.683,389,4.041,433,3.618,457,4.012,466,3.902,474,5.294,622,1.97,637,2.757,705,2.343,726,1.817,753,1.646,783,4.564,788,3.318,805,4.59,806,3.759,812,6.067,819,3.076,828,3.321,830,4.677,831,3.618,842,4.012,865,3.543,872,2.618,908,4.012,925,3.768,944,3.8,1005,2.17,1050,2.97,1051,3.768,1143,3.076,1781,2.782,1990,3.46,2012,3.618,2829,3.46,2975,3.8,3007,2.873,3285,3.46,3287,3.618,3951,5.07,4102,4.012,4715,5.089,4997,4.266,5194,4.012,5442,6.252,5443,4.266,5446,5.944,5447,5.944,5448,4.012,5449,4.266,5450,4.266,5451,4.266,5452,4.266,5453,4.266,5454,4.266,5455,4.266,5456,4.266,5457,5.944,5458,4.266,5459,5.412,5460,4.266,5461,4.266,5462,4.266,5493,5.66,5494,5.66]],["title/directives/TimelineSingleItemDirective.html",[98,0.756,219,0.859]],["body/directives/TimelineSingleItemDirective.html",[0,0.149,3,0.097,4,0.086,5,1.503,9,0.086,14,1.13,16,1.106,17,1.23,18,0.797,21,0.834,23,0.834,25,0.107,26,0.602,27,1.181,33,0.815,37,0.62,39,0.626,40,0.008,41,0.366,42,0.149,43,0.489,53,0.194,54,0.392,60,0.172,61,0.021,62,2.749,98,1.523,189,0.695,200,1.372,201,1.871,207,1.568,208,1.083,215,1.372,217,1.372,219,1.507,220,1.493,222,0.006,223,0.006,226,0.504,227,2.481,234,0.932,246,1.229,248,0.675,267,3.378,293,1.083,315,1.155,317,1.688,389,4.043,433,3.63,457,4.025,466,3.91,474,5.302,622,1.977,637,2.76,705,2.35,726,1.82,753,1.652,783,4.567,788,3.329,805,4.6,806,3.764,812,6.204,819,3.086,828,3.328,830,4.682,831,3.63,842,4.025,865,3.547,872,2.627,908,4.025,925,3.776,944,3.812,1005,2.177,1050,2.98,1051,3.776,1143,3.086,1781,2.791,1990,3.471,2012,3.63,2829,3.471,2975,3.812,3007,2.882,3285,3.471,3287,3.63,3295,4.6,3951,5.076,4102,4.025,4715,4.025,4997,4.28,5194,4.025,5442,6.259,5443,4.28,5446,5.423,5447,5.423,5448,4.025,5449,4.28,5450,4.28,5451,4.28,5452,4.28,5453,4.28,5454,4.28,5455,4.28,5456,4.28,5457,5.953,5458,4.28,5459,5.423,5460,4.28,5461,4.28,5462,4.28,5495,5.678]],["title/components/TopToolbarComponent.html",[0,0.085,202,0.915]],["body/components/TopToolbarComponent.html",[0,0.153,1,0.886,2,0.809,3,0.074,4,0.066,5,0.7,6,0.984,7,0.964,8,0.924,9,0.066,11,0.868,16,0.85,17,1.38,18,1.344,19,0.868,20,1.254,21,0.887,23,0.887,25,0.114,26,0.505,27,1.432,30,0.809,33,0.626,36,3.268,37,0.718,39,0.481,40,0.008,41,0.524,42,0.163,43,0.376,45,0.683,46,0.887,50,1.128,51,0.949,53,0.205,54,0.301,55,1.325,56,1.227,57,1.721,58,2.928,59,1.96,60,0.091,61,0.011,63,0.641,69,4.385,71,3.533,95,0.964,96,1.177,97,1.152,98,0.732,99,1.618,100,0.964,101,1.928,102,0.868,103,0.764,104,1.075,105,1.227,106,0.886,107,0.964,108,0.886,109,0.868,110,0.964,111,0.886,112,0.964,113,0.832,114,0.85,115,0.933,116,0.868,117,0.832,118,0.97,119,1.531,120,0.85,121,0.066,122,0.868,123,0.978,124,0.886,125,0.886,126,0.797,127,0.964,128,1.35,129,0.964,130,0.886,131,0.964,132,0.886,133,0.964,134,0.868,135,0.964,136,0.868,137,0.964,138,0.612,139,0.964,140,0.868,141,0.421,142,0.964,143,0.886,144,0.964,145,0.886,146,1.531,147,0.886,148,0.964,149,0.886,150,1.531,151,0.886,152,0.964,153,0.905,154,0.964,155,0.85,156,0.964,157,0.886,158,0.964,159,0.924,160,0.814,161,0.964,162,0.886,163,1.28,164,1.335,165,0.886,166,0.964,167,0.85,168,0.493,169,0.964,170,0.868,171,0.886,172,0.964,173,0.886,174,0.964,175,0.868,176,0.868,177,0.85,178,0.964,179,0.868,180,0.964,181,0.814,182,0.685,183,0.85,184,0.964,185,0.85,186,1.152,187,0.868,188,0.886,189,0.583,190,0.832,191,0.685,192,0.886,193,1.629,194,0.964,195,0.886,196,0.814,197,0.964,198,0.886,199,0.964,200,0.832,201,0.886,202,1.52,203,1.646,204,0.964,205,0.886,206,0.995,207,0.748,208,0.832,209,0.868,210,0.964,211,0.85,212,0.964,213,0.85,214,0.964,215,0.832,216,0.964,217,0.832,218,0.964,219,0.832,220,0.905,221,0.964,222,0.005,223,0.005,226,0.387,246,1.307,248,0.518,259,2.568,267,1.592,274,2.794,293,0.832,318,2.969,355,3.091,376,6.877,470,3.862,525,6.622,537,1.116,540,1.805,547,2.303,549,1.672,569,2.714,572,2.568,602,1.026,615,3.406,626,3.986,657,4.893,691,1.355,705,1.805,726,1.392,745,2.666,766,2.205,816,2.386,880,4.281,901,4.281,906,1.379,1043,3.541,1059,1.759,1062,2.5,1166,1.592,1168,2.714,1169,2.144,1170,3.065,1179,2.557,1187,1.417,1193,3.636,1529,2.315,1532,3.091,1536,5.272,1619,1.805,1640,2.079,1655,2.969,1656,3.288,1662,2.788,1723,3.406,2098,2.928,2136,3.406,2191,4.123,2197,4.893,2205,5.612,2210,3.862,2211,6.123,2218,5.348,2219,4.893,2220,5.348,2221,4.893,2222,5.348,2223,5.222,2229,3.288,2245,7.193,2653,2.144,2739,3.862,2771,4.552,2776,4.911,2804,4.055,2866,3.692,3007,3.065,3077,5.348,3342,4.893,3873,5.348,4878,4.552,5299,5.348,5478,3.862,5496,7.517,5497,3.862,5498,7.478,5499,6.039,5500,6.928,5501,6.039,5502,7.478,5503,7.478,5504,6.928,5505,6.928,5506,4.361,5507,4.361,5508,4.361,5509,4.361,5510,4.361,5511,4.361,5512,4.361,5513,4.361,5514,4.361]],["title/interfaces/User.html",[121,0.068,206,0.647]],["body/interfaces/User.html",[3,0.103,4,0.092,9,0.092,11,1.617,25,0.114,26,0.626,27,1.228,40,0.008,41,0.592,42,0.155,45,0.683,46,0.887,49,0.651,53,0.218,54,0.418,60,0.125,61,0.015,63,1.099,121,0.092,160,1.397,186,1.152,189,0.583,206,1.357,222,0.006,223,0.006,233,5.638,248,0.718,260,0.889,281,1.877,293,1.152,317,1.796,382,4.282,459,2.795,499,2.205,521,5.455,529,1.648,532,1.452,535,3.651,537,1.546,540,2.501,547,2.822,548,1.442,549,2.316,575,1.835,608,0.797,615,3.407,618,5.638,626,3.067,639,5.302,641,2.375,647,4.894,648,4.554,649,7.194,650,4.894,651,5.35,652,4.572,653,7.194,654,3.171,655,5.35,656,5.35,657,4.894,660,5.35,662,6.624,664,5.35,666,5.35,667,5.759,669,5.35,670,3.284,671,4.966,672,5.194,673,5.35,674,4.894,675,3.407,676,5.638,677,4.218,678,3.693,680,4.056,681,5.35,682,5.35,684,4.386,689,4.056,690,4.554,691,1.877,692,4.056,693,5.35,694,5.35,695,4.894,696,5.35,697,5.35,698,5.35,699,5.35,700,5.35,701,5.35,702,5.35,703,4.554,704,5.35,705,2.501,706,4.894,707,5.35,708,5.35,709,5.35,710,5.35,711,5.35,712,5.35,713,5.35,714,5.35,715,5.35,716,5.35,717,4.894,718,5.35]],["title/components/UserItemComponent.html",[0,0.085,205,0.915]],["body/components/UserItemComponent.html",[0,0.16,1,1.022,2,0.891,3,0.086,4,0.076,5,0.807,6,1.135,7,1.111,8,1.065,9,0.076,11,1,16,0.98,17,1.387,18,1.352,19,1,20,0.843,21,0.977,23,0.977,25,0.095,37,0.642,40,0.008,41,0.586,42,0.155,50,1.242,51,1.045,53,0.163,54,0.348,56,1.022,57,1.409,60,0.104,61,0.013,95,1.111,96,1.296,97,1.268,98,0.843,99,1.716,100,1.111,101,1.981,102,1,103,0.881,104,1.095,105,1.351,106,1.022,107,1.111,108,1.022,109,1,110,1.111,111,1.022,112,1.111,113,0.959,114,0.98,115,0.98,116,1,117,0.959,118,1.068,119,1.646,120,0.98,121,0.076,122,1,123,0.995,124,1.022,125,1.022,126,0.919,127,1.111,128,0.98,129,1.111,130,1.022,131,1.111,132,1.022,133,1.111,134,1,135,1.111,136,1,137,1.111,138,0.706,139,1.111,140,1,141,0.485,142,1.111,143,1.022,144,1.111,145,1.022,146,1.646,147,1.022,148,1.111,149,1.022,150,1.646,151,1.022,152,1.111,153,1.043,154,1.111,155,0.98,156,1.111,157,1.022,158,1.111,159,1.065,160,0.939,161,1.111,162,1.022,163,1.409,164,1.469,165,1.022,166,1.111,167,0.98,168,0.568,169,1.111,170,1,171,1.022,172,1.111,173,1.022,174,1.111,175,1,176,1,177,0.98,178,1.111,179,1,180,1.111,181,0.939,182,0.79,183,0.98,184,1.111,185,0.98,186,1.268,187,1,188,1.022,189,0.642,190,0.959,191,0.79,192,1.022,193,1.043,194,1.111,195,1.022,196,0.939,197,1.111,198,1.022,199,1.111,200,0.959,201,1.022,202,1.022,203,0.939,204,1.111,205,1.611,206,1.33,207,1.277,208,0.959,209,1,210,1.111,211,0.98,212,1.111,213,0.98,214,1.111,215,0.959,216,1.111,217,0.959,218,1.111,219,0.959,220,1.043,221,1.111,222,0.006,223,0.006,226,0.446,246,1.716,264,5.387,541,1.431,602,1.565,677,4.202,726,1.827,766,2.428,791,1.597,1092,2.872,1619,2.753,1620,3.375,1716,5.617,1741,4.251,2379,3.269,2531,6.423,2655,3.564,2750,3.79,3007,3.375,3285,3.073,3286,6.036,3287,4.251,3293,4.073,3295,4.073,5515,7.021,5516,7.451,5517,6.65,5518,5.028,5519,6.65,5520,5.028]],["title/injectables/UserNotifyService.html",[532,1.082,985,1.727]],["body/injectables/UserNotifyService.html",[3,0.129,4,0.093,9,0.093,25,0.116,30,1.013,33,0.883,37,0.756,39,0.902,40,0.008,41,0.528,42,0.17,43,0.706,45,0.855,46,1.11,49,0.638,53,0.186,54,0.425,60,0.128,61,0.016,63,1.11,203,1.412,206,1.282,222,0.007,223,0.007,226,0.726,227,3.303,281,1.91,293,1.173,315,1.372,424,4.357,425,6.171,481,6.92,485,4.833,532,1.477,545,3.398,575,2.009,618,5.698,646,2.544,692,4.127,865,3.536,947,3.604,984,3.839,985,2.898,1003,3.358,1033,3.059,1122,2.972,1186,3.129,1229,4.109,1457,3.604,2433,5.443,2450,6.124,2452,6.124,2453,6.124,2454,6.124,2455,6.124,2468,5.84,3076,6.694,5020,4.633,5521,7.564,5522,5.443,5523,7.56,5524,7.56,5525,6.147,5526,6.147,5527,7.56,5528,6.147,5529,7.56,5530,7.56,5531,7.56,5532,7.56,5533,6.147,5534,6.147,5535,6.147,5536,6.147,5537,6.147,5538,6.147,5539,6.147,5540,6.147,5541,6.147]],["title/injectables/UsersService.html",[532,1.082,4983,3.395]],["body/injectables/UsersService.html",[3,0.11,4,0.098,9,0.098,25,0.122,30,1.044,33,1.118,37,0.721,39,0.858,40,0.008,41,0.502,42,0.18,43,0.671,45,0.881,49,0.646,53,0.206,54,0.446,60,0.134,61,0.016,63,1.144,182,1.396,222,0.007,223,0.007,281,2.006,532,1.871,538,3.495,541,1.838,555,2.821,608,0.786,639,6.157,646,2.672,677,3.64,790,2.356,791,2.051,887,3.077,1359,4.018,1385,4.866,1386,5.23,1454,3.277,1531,4.761,1702,4.127,1747,2.475,2005,4.866,2075,4.127,3822,5.521,4983,5.871,5542,5.716,5543,6.455,5544,8.686,5545,8.365,5546,8.686,5547,6.455,5548,7.789,5549,6.455,5550,7.789,5551,6.455,5552,6.455,5553,6.455,5554,6.455,5555,6.455,5556,6.455,5557,6.455,5558,6.455,5559,6.455,5560,6.455,5561,6.455,5562,5.716,5563,6.455,5564,6.455]],["title/classes/Vector.html",[61,0.011,3705,3.395]],["body/classes/Vector.html",[0,0.138,2,0.555,3,0.07,4,0.135,9,0.063,25,0.078,26,0.487,27,1.541,30,0.78,33,0.967,37,0.783,39,0.924,40,0.008,41,0.54,42,0.179,43,0.722,45,1.017,46,0.855,49,0.296,50,1.365,51,0.915,53,0.102,61,0.017,78,2.25,84,5.51,103,1.349,115,0.692,141,0.562,168,0.996,189,0.562,222,0.005,223,0.005,226,0.756,248,1.062,260,0.975,296,2.035,315,0.935,548,0.65,553,1.915,563,2.334,568,3.12,573,2.25,575,2.014,595,1.588,602,1.37,608,0.633,637,1.376,654,2.172,705,2.411,720,1.511,728,2.476,737,6.822,742,4.389,777,2.427,817,1.973,824,3.353,826,1.86,835,2.375,871,4.389,887,1.973,906,1.695,915,3.353,923,2.25,927,3.12,941,3.661,1023,2.53,1043,2.427,1055,2.606,1056,3.574,1059,2.348,1060,3.563,1061,2.934,1082,2.934,1083,1.548,1166,2.126,1232,2.897,1233,1.915,1237,2.035,1254,2.172,1277,4.555,1515,4.389,1594,2.25,1604,2.427,1762,4.344,1813,2.934,1817,4.128,1914,4.286,1933,2.934,1988,2.934,1994,4.389,2014,4.128,2017,2.334,2096,5.017,2466,4.717,2863,3.353,2864,3.353,2982,5.922,3113,3.353,3202,6.099,3214,5.078,3342,3.353,3446,3.353,3489,4.389,3521,5.457,3673,2.934,3674,7.325,3675,3.353,3686,3.665,3687,5.157,3690,4.717,3699,3.665,3703,3.91,3705,7.268,3707,3.665,3709,3.665,3710,5.157,3711,3.665,3712,3.665,3713,3.665,3715,5.157,3716,5.157,3717,5.157,3718,5.157,3719,3.665,3720,3.665,3721,7.075,3722,5.922,3723,6.473,3724,5.157,3725,5.157,3726,3.665,3727,3.665,3728,3.665,3729,3.665,3730,3.665,3731,3.665,3732,3.665,3733,3.665,3734,3.665,3735,3.665,3736,3.665,3737,3.353,3738,3.12,3739,3.665,3740,3.665,3741,3.665,3742,3.665,3743,5.965,3744,5.157,3745,3.665,3746,3.665,3747,3.665,3748,5.157,3749,3.665,3750,6.473,3751,3.665,3752,3.665,3753,3.665,3754,3.665,3755,3.665,3756,5.922,3757,3.665,3758,3.665,3759,3.665,3760,3.665,3761,3.665,3762,3.353,3763,3.665,3764,3.665,3765,3.665,3766,3.665,3767,3.665,3768,3.665,3769,3.665,3770,3.665,3771,3.665,3772,5.157,4659,3.665,5022,4.389,5304,3.665,5565,5.823,5566,5.823,5567,6.737,5568,6.737,5569,7.31,5570,6.737,5571,6.737,5572,6.737,5573,5.823,5574,4.139,5575,4.139,5576,4.139,5577,4.139,5578,4.139,5579,4.139,5580,4.139,5581,5.823,5582,4.139,5583,4.139,5584,5.823,5585,4.139,5586,4.139,5587,4.139,5588,4.139,5589,4.139,5590,4.139,5591,4.139,5592,4.139,5593,4.139,5594,4.139,5595,4.139,5596,4.139,5597,4.139,5598,4.139,5599,5.823,5600,5.823,5601,5.823,5602,4.139,5603,4.139,5604,4.139,5605,4.139,5606,4.139,5607,4.139,5608,4.139,5609,4.139,5610,4.139]],["title/coverage.html",[5611,5.468]],["body/coverage.html",[0,0.178,1,0.615,5,0.743,9,0.046,10,2.681,11,0.921,12,2.283,13,3.541,40,0.008,42,0.063,56,0.615,57,0.981,58,2.033,61,0.022,80,2.146,82,2.146,83,1.851,84,2.283,93,3.263,98,1.199,102,0.603,104,0.892,105,1.278,106,0.615,108,0.615,111,0.615,113,0.578,114,0.59,116,0.603,117,0.883,118,1.01,120,0.59,121,0.139,122,0.603,123,0.799,124,0.615,125,0.615,128,0.59,130,0.615,132,0.615,134,0.603,136,0.603,138,0.425,140,0.603,141,0.864,143,0.615,145,0.615,147,0.615,149,0.615,151,0.615,153,0.628,155,0.59,157,0.615,160,0.565,162,0.615,165,0.615,167,0.59,170,0.603,171,0.615,173,0.615,175,0.603,176,0.603,177,0.59,179,0.603,181,0.565,183,0.59,185,0.59,187,0.603,188,0.615,190,0.578,191,0.988,192,0.615,195,0.615,198,0.615,200,0.578,202,0.615,205,0.615,206,0.435,209,0.603,211,0.59,213,0.59,215,0.578,217,0.578,219,0.578,222,0.004,223,0.004,224,2.681,225,2.146,248,0.36,280,2.681,307,2.283,342,4.551,371,0.743,372,2.283,374,2.283,376,2.453,378,2.453,383,3.294,411,4.125,412,3.863,427,2.714,438,2.146,443,4.271,444,4.022,447,1.708,452,2.453,455,2.453,459,2.141,460,2.283,463,2.283,468,2.453,472,2.283,474,4.224,476,2.453,484,2.453,501,2.283,503,2.146,505,2.283,506,3.281,528,2.283,530,3.75,532,2.121,542,1.708,556,1.589,595,2.472,611,1.221,612,2.283,614,2.681,626,1.537,647,3.75,689,3.107,719,1.537,721,2.681,753,0.881,759,2.681,760,2.681,769,1.133,778,1.03,785,1.488,805,1.936,806,4.161,807,3.75,830,1.708,833,1.488,906,1.896,973,2.681,985,1.161,1003,1.19,1040,4.459,1041,4.459,1049,2.146,1059,1.221,1083,3.301,1089,2.033,1094,2.146,1177,3.489,1180,3.75,1184,4.551,1197,1.775,1198,4.049,1199,4.855,1201,1.775,1202,1.443,1203,1.443,1205,3.655,1210,1.646,1211,1.589,1212,1.775,1213,1.851,1214,1.851,1215,1.851,1216,1.851,1217,1.851,1218,1.851,1219,1.851,1220,1.851,1251,1.708,1267,1.708,1296,1.936,1297,2.681,1298,4.569,1358,2.283,1359,4.244,1360,2.681,1379,2.033,1385,2.283,1391,2.283,1394,1.775,1451,2.283,1460,1.19,1466,1.708,1525,2.681,1530,2.146,1533,1.936,1552,2.959,1635,2.681,1636,2.453,1637,2.681,1649,1.537,1650,4.804,1664,5.148,1667,2.146,1729,1.851,1730,2.714,1732,1.851,1733,1.851,1736,2.146,1737,2.146,1739,2.146,1740,2.146,1742,2.146,1809,2.283,1872,2.146,1882,2.033,1904,1.936,2043,2.681,2055,2.283,2065,2.033,2066,2.033,2093,4.235,2123,1.936,2124,3.982,2125,3.434,2126,3.982,2133,2.283,2134,2.033,2175,2.033,2176,2.146,2177,2.453,2184,2.681,2231,2.283,2243,1.936,2253,4.702,2254,4.902,2282,1.646,2287,1.936,2288,1.851,2417,5.789,2434,2.453,2441,2.453,2442,2.453,2451,2.453,2456,2.453,2461,1.936,2511,5.065,2523,4.143,2525,2.453,2529,2.453,2531,2.453,2532,2.453,2538,2.453,2546,2.453,2548,2.453,2552,2.681,2588,4.55,2589,2.681,2597,2.681,2625,2.033,2658,2.681,2754,5.491,2760,2.453,2805,2.033,2806,2.453,2874,2.283,2875,2.681,2943,2.283,2944,2.681,2945,2.453,2946,2.681,2974,2.681,3078,2.283,3079,2.681,3080,2.453,3081,2.283,3082,2.681,3103,2.283,3104,2.681,3105,2.453,3106,2.681,3142,2.681,3179,2.283,3180,4.551,3181,4.551,3210,2.146,3233,2.453,3267,2.681,3282,2.829,3285,4.545,3303,2.681,3331,5.096,3352,4.235,3354,2.283,3506,2.681,3522,5.27,3532,2.453,3533,2.681,3637,2.681,3654,3.75,3673,2.146,3674,4.551,3675,4.551,3703,3.107,3705,2.283,3750,2.453,3797,5.127,3830,2.681,3876,3.75,3877,3.489,3900,2.681,3907,2.033,3908,4.333,3912,1.936,4009,1.936,4076,3.281,4077,2.283,4202,2.681,4213,2.453,4214,4.099,4227,2.681,4292,2.033,4607,2.681,4681,2.681,4714,7.343,4726,2.681,4740,4.569,4741,2.681,4817,3.75,4847,3.75,4907,2.283,4911,2.681,4928,2.681,4964,2.283,4965,2.681,4980,2.681,4982,2.681,4983,2.283,4993,3.982,4994,3.982,5074,4.099,5084,2.681,5165,2.681,5284,2.681,5300,2.681,5301,2.681,5344,2.453,5345,2.453,5387,2.681,5404,2.681,5496,2.681,5497,2.681,5515,2.681,5521,2.681,5522,2.681,5542,2.681,5611,2.681,5612,3.028,5613,7.668,5614,9.296,5615,6.291,5616,5.618,5617,7.435,5618,3.028,5619,3.028,5620,3.028,5621,6.291,5622,7.435,5623,5.618,5624,3.028,5625,3.028,5626,6.291,5627,6.291,5628,8.54,5629,4.628,5630,3.028,5631,3.028,5632,4.628,5633,3.028,5634,5.618,5635,4.628,5636,5.618,5637,4.628,5638,4.628,5639,5.491,5640,2.453,5641,2.453,5642,3.028,5643,3.028,5644,6.778,5645,2.681,5646,3.028,5647,4.628,5648,3.028,5649,3.028,5650,3.028,5651,3.028,5652,3.028,5653,3.028,5654,4.628,5655,5.618,5656,5.618,5657,2.681,5658,3.028,5659,3.028,5660,3.028,5661,3.028,5662,4.628,5663,3.028,5664,4.628,5665,3.028,5666,3.028,5667,3.028,5668,3.028,5669,5.618,5670,3.028,5671,4.628,5672,4.628,5673,3.028,5674,3.028,5675,3.028,5676,3.028,5677,3.028,5678,3.028,5679,3.028,5680,3.028,5681,5.618,5682,3.028,5683,3.028,5684,3.028,5685,3.028,5686,3.028,5687,3.028,5688,3.028,5689,3.028,5690,2.681,5691,3.028,5692,3.028,5693,7.146,5694,3.028,5695,3.028,5696,3.028,5697,3.028,5698,3.028,5699,3.028,5700,3.028,5701,3.028,5702,3.028,5703,3.028,5704,4.628,5705,3.028,5706,3.028,5707,3.028,5708,4.099,5709,4.099,5710,3.028,5711,3.028,5712,3.028,5713,4.099,5714,4.099,5715,4.099,5716,2.681,5717,3.028]],["title/dependencies.html",[332,3.845,5718,3.748]],["body/dependencies.html",[40,0.008,54,0.461,163,1.413,191,1.247,222,0.007,223,0.007,255,2.494,277,2.556,291,5.986,292,5.629,332,4.727,389,3.812,390,5.905,396,5.905,402,4.076,405,5.402,424,6.224,425,5.027,430,6.434,431,3.624,433,4.263,434,5.402,436,5.402,443,3.624,450,6.434,499,2.434,537,1.706,1207,3.178,1416,3.91,2157,4.477,2274,4.263,2275,4.477,2421,4.477,2429,5.905,3081,5.027,3921,4.727,3950,4.076,5719,6.668,5720,8.208,5721,6.668,5722,7.942,5723,6.668,5724,6.668,5725,6.668,5726,6.668,5727,6.668,5728,6.668,5729,6.668,5730,7.942,5731,6.668,5732,6.668,5733,6.668,5734,6.668,5735,6.668,5736,6.668,5737,6.668,5738,6.668,5739,6.668,5740,6.668,5741,6.668,5742,6.668,5743,6.668,5744,6.668,5745,6.668,5746,6.668,5747,6.668,5748,6.668,5749,6.668,5750,6.668,5751,6.668,5752,6.668]],["title/miscellaneous/enumerations.html",[5753,2.516,5754,4.804]],["body/miscellaneous/enumerations.html",[0,0.172,2,0.895,25,0.126,40,0.008,51,1.456,104,0.834,118,1.073,121,0.136,123,0.854,141,0.82,168,0.96,182,1.049,206,0.959,222,0.007,223,0.007,235,2.626,281,2.076,447,3.767,459,3.091,512,3.091,515,2.076,549,2.561,557,3.091,762,3.003,827,4.736,834,4.036,835,2.855,840,2.766,863,4.736,865,2.766,1000,4.736,1033,2.171,1083,2.499,1085,5.083,1189,2.841,1198,3.003,1199,4.787,1222,4.084,1223,4.084,1224,4.084,1225,3.284,1290,4.86,1291,4.662,1292,4.084,1293,3.767,1294,4.084,1295,3.506,1359,3.091,1565,2.766,1566,4.271,1781,3.284,2115,4.084,2117,3.391,2268,3.391,2603,4.271,2821,4.485,2822,4.485,3797,4.271,3800,5.036,3801,5.036,3802,5.036,3818,5.036,3819,5.036,3820,5.036,3821,5.036,3822,4.736,4076,4.736,4077,5.993,4993,4.736,4994,4.736,5001,5.993,5002,5.036,5753,4.485,5754,5.916,5755,6.441,5756,6.441,5757,5.916,5758,6.681]],["title/index.html",[25,0.071,2716,3.319,5759,3.748]],["body/index.html",[2,0.819,4,0.114,18,1.196,19,1.216,20,1.025,37,0.527,40,0.007,42,0.127,61,0.016,66,3.003,76,5.41,103,1.07,104,1.112,115,0.726,118,0.981,128,1.19,141,0.59,160,1.141,183,1.19,189,0.59,222,0.007,223,0.007,229,6.669,231,3.441,234,1.236,253,2.464,289,4.949,315,0.981,329,4.102,338,4.102,339,4.102,343,4.949,371,1.499,402,3.735,443,3.321,479,6.669,503,4.331,517,5.339,553,3.484,556,3.206,566,5.057,573,4.094,578,4.605,594,4.991,604,4.949,623,4.815,626,3.101,641,2.961,720,2.749,725,2.817,820,2.912,839,3.582,869,6.615,876,3.59,901,4.331,1020,4.102,1058,2.912,1102,3.445,1227,3.582,1245,3.291,1293,4.247,1302,4.991,1305,7.23,1309,4.102,1416,5.297,1417,3.906,1475,4.416,1651,5.41,1784,4.605,1882,5.877,1982,3.906,1995,4.991,2055,6.155,2082,4.949,2117,3.101,2274,4.815,2421,4.102,2483,5.41,2491,5.41,2555,6.615,2556,5.597,2557,6.155,2804,4.102,2825,5.22,2867,5.41,3040,4.949,3906,5.41,4456,5.41,4793,4.102,4821,5.677,4878,4.605,5029,6.425,5079,5.41,5085,5.41,5412,5.41,5448,4.331,5720,5.41,5760,6.11,5761,6.11,5762,6.11,5763,6.11,5764,8.165,5765,6.11,5766,7.532,5767,6.11,5768,9.034,5769,6.11,5770,6.11,5771,6.11,5772,6.11,5773,6.11,5774,6.11,5775,6.11,5776,6.11,5777,6.11,5778,6.11,5779,6.11,5780,6.11,5781,6.11,5782,6.11,5783,6.11,5784,6.11,5785,6.11,5786,6.11,5787,6.11,5788,6.11,5789,6.11,5790,6.11,5791,6.11,5792,6.11,5793,6.11,5794,6.11,5795,6.11,5796,6.11,5797,7.532,5798,6.11,5799,6.11,5800,6.11,5801,6.11,5802,6.11,5803,6.11,5804,6.11]],["title/modules.html",[331,3.774]],["body/modules.html",[40,0.007,141,0.812,222,0.007,223,0.007,292,5.961,323,6.812,330,5.544,331,4.496,337,5.213,338,4.938,339,4.938,574,4.742,5805,8.409,5806,9.059]],["title/overview.html",[4793,4.146]],["body/overview.html",[1,1.495,2,0.657,40,0.008,56,1.495,102,1.464,106,1.745,108,1.495,111,1.495,113,1.404,114,1.434,116,1.464,120,1.434,122,1.464,124,1.495,125,1.745,128,1.434,130,1.745,132,1.495,134,1.464,136,1.464,138,1.205,140,1.709,143,1.745,145,1.745,147,1.745,149,1.745,151,1.745,153,1.782,155,1.434,157,1.495,160,1.374,162,1.495,165,1.495,167,1.434,170,1.464,171,1.495,173,1.745,175,1.464,176,1.464,177,1.434,179,1.464,181,1.604,183,1.434,185,1.434,187,1.464,188,1.745,190,1.404,192,1.495,195,1.495,198,1.495,200,1.404,202,1.495,205,1.745,208,0.935,209,1.709,211,1.673,213,1.673,215,1.404,217,1.404,219,1.404,222,0.006,223,0.006,318,2.41,330,7.302,331,2.997,332,4.635,333,4.341,334,4.341,335,4.341,336,4.341,337,5.216,338,4.94,339,6.495,340,4.929,341,3.475,487,3.291,497,3.695,529,1.337,612,3.695,646,2.029,720,1.79,816,1.49,1177,3.695,2499,4.341,2500,4.341,2501,4.341,3331,3.972,4292,3.291,4793,3.291,5657,4.341,5807,4.903,5808,4.903]],["title/routes.html",[497,4.655]],["body/routes.html",[40,0.007,222,0.007,223,0.007,497,5.65]],["title/miscellaneous/typealiases.html",[5753,2.516,5809,5.425]],["body/miscellaneous/typealiases.html",[13,3.042,25,0.116,40,0.008,42,0.189,49,0.539,115,1.014,117,1.702,191,1.185,196,1.409,206,0.88,222,0.007,223,0.007,371,1.503,383,3.592,447,3.454,463,4.617,595,2.327,806,3.595,807,4.962,808,3.454,838,6.68,1021,3.123,1086,5.347,1202,2.919,1203,2.919,1205,2.919,1206,2.236,1298,4.823,1302,3.744,1359,3.947,1379,4.112,1411,3.592,1460,2.408,1486,3.916,1531,5.525,1564,6.111,1565,2.536,1664,4.112,1731,4.1,1735,5.347,1747,2.348,1774,3.916,1783,3.011,1835,3.329,1847,4.617,1978,4.617,1979,4.617,1980,3.916,1981,4.617,1982,3.916,1983,4.342,1984,5.347,2067,4.423,2124,4.342,2125,3.744,2126,5.347,2128,5.488,2136,3.454,2140,4.342,2147,5.686,2157,5.065,2174,4.342,2175,4.112,2177,4.962,2178,5.686,2181,7.239,2253,3.592,2254,5.778,2261,5.065,2276,5.488,2278,5.065,2279,5.065,2339,5.065,2340,3.744,2364,5.065,2523,4.611,2677,4.617,2699,4.112,2873,4.254,3654,4.962,3797,3.916,3877,5.686,3908,4.823,4008,5.728,4076,4.342,4077,5.686,5344,4.962,5345,6.111,5355,6.68,5639,4.962,5640,6.111,5641,6.111,5645,5.424,5690,7.239,5753,4.112,5755,6.111,5756,6.111,5757,5.424,5810,6.125,5811,7.544,5812,7.544,5813,8.921,5814,5.424,5815,7.544,5816,6.125,5817,6.125,5818,7.544,5819,7.758,5820,7.544,5821,7.544,5822,7.544,5823,6.125]],["title/interfaces/userMock.html",[121,0.068,4907,3.395]],["body/interfaces/userMock.html",[0,0.141,3,0.086,4,0.076,9,0.076,14,1.002,15,1.815,17,0.723,18,0.707,20,0.845,21,0.74,23,0.74,25,0.095,26,0.557,27,1.224,29,2.839,36,2.909,40,0.008,41,0.429,42,0.165,43,0.73,46,0.74,49,0.657,53,0.224,54,0.348,55,1.53,59,2.263,60,0.138,61,0.013,63,0.978,64,1.373,68,4.469,72,2.031,80,3.569,88,2.556,99,1.09,102,1.002,104,1.141,105,1.612,121,0.101,177,0.981,186,0.96,187,1.002,206,1.26,222,0.006,223,0.006,225,3.569,228,2.737,231,1.979,234,1.391,248,0.886,249,2.83,255,1.883,260,0.943,265,4.079,293,0.96,301,2.475,371,2.121,417,2.952,438,3.569,439,4.079,487,3.381,499,1.838,506,3.569,517,5.848,529,1.373,537,1.288,538,1.979,541,1.433,542,3.753,544,2.263,547,2.212,548,1.437,572,2.141,594,4.069,599,2.737,611,2.031,622,2.596,641,1.979,677,4.474,744,4.079,762,2.263,816,1.53,817,2.4,826,2.991,829,2.2,865,2.084,867,2.423,887,2.4,899,3.219,906,1.002,991,3.381,1001,3.219,1102,2.839,1611,3.795,1629,3.795,1641,5.017,1657,5.017,1702,4.255,1982,3.219,2122,3.381,2243,3.219,2292,3.219,2461,3.219,2506,3.795,2509,5.392,2510,3.795,2517,3.795,2556,3.219,2661,3.753,2701,3.913,2823,6.484,2825,5.274,3032,3.381,3294,3.078,3353,5.017,3354,5.621,3358,4.079,3362,4.079,3365,4.079,3371,4.079,3411,6.04,3414,5.392,3415,4.079,3419,5.392,3420,4.079,3423,5.392,3452,5.392,3455,4.079,3456,4.079,3457,4.079,3458,4.079,3461,4.079,3462,4.079,3463,4.079,3703,3.381,4292,3.381,4329,3.795,4429,4.079,4740,3.219,4752,5.017,4770,3.795,4817,4.079,4818,3.569,4819,4.459,4820,5.392,4821,3.795,4822,5.894,4823,5.894,4824,4.459,4825,4.459,4826,4.459,4827,4.459,4828,4.459,4831,4.459,4833,6.603,4834,4.459,4839,4.459,4840,5.894,4842,4.459,4843,7.447,4844,4.459,4845,4.459,4846,4.459,4847,4.079,4848,4.459,4849,4.459,4853,4.459,4854,4.459,4855,4.459,4856,4.459,4857,4.459,4858,4.459,4859,4.459,4860,4.459,4861,4.459,4862,4.459,4863,4.459,4864,4.459,4867,4.459,4869,5.392,4875,4.459,4876,4.459,4877,4.459,4878,3.795,4879,4.459,4880,4.459,4881,5.894,4882,5.894,4883,5.894,4884,4.459,4885,4.459,4886,4.459,4887,4.459,4888,4.459,4889,4.459,4890,4.459,4891,4.459,4892,4.459,4893,4.459,4894,4.459,4895,4.459,4896,5.894,4897,4.459,4898,4.459,4899,4.459,4900,4.459,4901,4.459,4902,4.459,4903,4.459,4904,4.459,4905,4.079,4906,4.459,4907,5.017]],["title/miscellaneous/variables.html",[3068,3.642,5753,2.516]],["body/miscellaneous/variables.html",[0,0.065,25,0.065,27,0.568,29,4.049,40,0.008,41,0.393,42,0.195,49,0.593,50,1.712,51,1.44,109,0.689,118,1.351,123,0.55,136,1.212,141,0.494,159,1.426,168,0.879,182,1.321,203,0.647,206,0.497,222,0.004,223,0.004,231,1.361,246,1.318,248,0.724,260,0.8,284,2.281,301,2.516,307,3.859,310,2.368,311,1.882,312,1.702,315,1.153,317,1.522,331,2.116,342,2.805,371,2.206,397,3.066,401,4.533,443,4.086,444,2.214,476,4.147,477,3.066,478,3.066,484,4.147,485,3.273,486,3.066,487,2.325,488,3.066,493,2.454,515,2.336,522,2.454,548,1.383,552,1.882,574,1.952,608,0.481,637,1.702,641,1.361,677,3.435,689,4.518,761,2.214,762,1.556,778,2.072,780,2.44,806,1.65,811,2.894,884,5.105,886,3.066,906,1.019,964,4.302,1033,1.125,1040,2.454,1041,3.629,1055,1.734,1056,1.433,1060,1.472,1083,1.295,1088,2.887,1090,2.03,1094,3.629,1095,2.61,1114,2.214,1122,1.361,1186,1.433,1198,1.556,1199,2.887,1221,1.602,1228,1.556,1229,2.782,1232,1.178,1251,2.887,1254,3.532,1295,1.817,1359,2.818,1401,2.454,1416,2.03,1460,2.394,1472,3.859,1491,3.859,1503,3.629,1529,1.327,1531,2.116,1561,3.31,1565,2.521,1572,1.757,1614,1.952,1615,1.882,1664,2.325,1691,6.373,1701,2.887,1730,2.03,1733,3.129,1735,2.454,1736,3.629,1737,3.629,1738,6.715,1739,3.629,1740,3.629,1741,2.214,1742,3.629,1743,3.629,1747,2.882,1751,2.454,1781,1.702,1783,1.702,1872,3.629,1876,3.002,1879,3.769,1904,2.214,1911,2.61,1912,2.61,1934,6.715,1940,3.629,1995,2.116,2044,2.805,2106,2.805,2231,3.859,2280,2.214,2316,2.214,2336,1.952,2337,1.952,2338,2.03,2365,2.214,2417,2.805,2421,2.325,2434,4.934,2436,2.805,2437,3.066,2438,3.066,2439,3.066,2440,3.066,2441,4.147,2442,2.805,2443,2.325,2444,3.066,2445,2.805,2446,3.066,2447,3.066,2448,3.066,2449,3.066,2450,4.147,2451,4.147,2452,2.805,2453,2.805,2454,2.805,2455,2.805,2456,4.147,2457,3.066,2458,3.066,2459,3.066,2460,3.066,2461,2.214,2496,4.533,2511,2.454,2603,2.214,2625,3.437,2627,3.066,2754,4.934,2760,4.147,2805,4.089,2806,5.451,2807,6.019,2808,5.393,2809,3.859,2810,3.066,2811,5.959,2812,3.066,2813,2.805,2814,6.359,2815,4.591,2816,4.591,2817,3.066,2818,4.591,2819,6.359,2820,3.066,2821,2.325,2822,3.437,2823,2.454,2824,4.533,2825,2.214,2826,2.325,2827,4.533,3068,2.325,3282,4.113,3431,3.066,3438,4.147,3794,3.066,3797,2.214,3816,4.591,3817,3.859,4135,3.066,5089,4.533,5562,7.45,5639,2.805,5640,4.934,5641,4.934,5708,3.066,5709,4.533,5713,3.066,5714,3.066,5715,3.066,5716,4.533,5753,2.325,5755,4.934,5756,4.147,5814,5.959,5819,5.959,5824,6.091,5825,6.091,5826,3.462,5827,5.119,5828,5.119,5829,5.119,5830,3.462,5831,3.462,5832,3.462,5833,5.119,5834,5.119,5835,5.119,5836,5.119,5837,5.119,5838,5.119,5839,5.119,5840,5.119,5841,3.462,5842,3.462,5843,3.462,5844,3.462,5845,3.462,5846,3.462,5847,3.462,5848,7.517,5849,6.091,5850,6.091,5851,6.091,5852,3.462,5853,5.119,5854,3.462,5855,3.462,5856,3.462,5857,3.462,5858,3.462,5859,3.462,5860,5.119,5861,5.119,5862,5.119,5863,3.462,5864,3.462,5865,8.294,5866,5.119,5867,5.119,5868,5.119,5869,3.462,5870,3.462,5871,3.462,5872,3.462,5873,3.462,5874,3.462,5875,3.462,5876,3.462,5877,3.462,5878,3.462,5879,3.462,5880,6.091,5881,6.091,5882,6.091,5883,3.462,5884,3.462,5885,3.462,5886,3.462,5887,3.462,5888,3.462,5889,3.462,5890,3.462,5891,3.462,5892,3.462,5893,3.462,5894,3.462,5895,3.462,5896,3.462,5897,3.462,5898,3.462,5899,3.462,5900,3.462,5901,3.462,5902,3.462,5903,3.462,5904,3.462,5905,3.462,5906,3.462,5907,3.462,5908,7.181,5909,3.462,5910,3.462,5911,3.462,5912,3.462,5913,3.462,5914,3.462,5915,3.462,5916,3.462,5917,3.462,5918,3.462,5919,6.729,5920,3.462,5921,3.462,5922,3.462,5923,3.462,5924,3.462,5925,3.462,5926,3.462,5927,3.462,5928,3.462,5929,3.462,5930,3.462,5931,3.462,5932,3.462,5933,3.462]]],"invertedIndex":[["",{"_index":40,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":906,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/QueryComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"classes/Vector.html":{},"coverage.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["0.0.12",{"_index":5746,"title":{},"body":{"dependencies.html":{}}}],["0.0.5",{"_index":5733,"title":{},"body":{"dependencies.html":{}}}],["0.06",{"_index":2596,"title":{},"body":{"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{}}}],["0.08",{"_index":5283,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["0.1",{"_index":2654,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueLocationComponent.html":{},"components/QueryComponent.html":{}}}],["0.10.2",{"_index":5752,"title":{},"body":{"dependencies.html":{}}}],["0.114",{"_index":3341,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["0.12",{"_index":2652,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/TimelineItemComponent.html":{}}}],["0.15",{"_index":2731,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["0.175",{"_index":5481,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["0.2",{"_index":3302,"title":{},"body":{"components/IssueItemComponent.html":{},"components/SetEditorDialogComponent.html":{}}}],["0.27",{"_index":5281,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["0.27.0",{"_index":5740,"title":{},"body":{"dependencies.html":{}}}],["0.299",{"_index":3339,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["0.3",{"_index":3351,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["0.3em",{"_index":3791,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["0.5",{"_index":2656,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueLocationComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{}}}],["0.54",{"_index":1660,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"components/SideNavComponent.html":{}}}],["0.587",{"_index":3340,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["0.5em",{"_index":2739,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/TopToolbarComponent.html":{}}}],["0.6",{"_index":5279,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["0.6.0",{"_index":5737,"title":{},"body":{"dependencies.html":{}}}],["0.7",{"_index":2750,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/UserItemComponent.html":{}}}],["0.8em",{"_index":3300,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["0.9",{"_index":4657,"title":{},"body":{"interfaces/Positions.html":{}}}],["0/1",{"_index":5614,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":5668,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":5665,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":5631,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":5664,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":5622,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":5613,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":5647,"title":{},"body":{"coverage.html":{}}}],["0/43",{"_index":5646,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":5705,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":5644,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":5671,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":5656,"title":{},"body":{"coverage.html":{}}}],["00",{"_index":1514,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["000000",{"_index":1462,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["005eff",{"_index":3075,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["00ba39",{"_index":2751,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/TimelineItemComponent.html":{}}}],["01",{"_index":5397,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["01t19:44:04.813z",{"_index":5394,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["02t12:27:58.192z",{"_index":5405,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["0x",{"_index":3328,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["0xff).tostring(16)).slice",{"_index":1516,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["1",{"_index":816,"title":{"interfaces/DialogData-1.html":{}},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"injectables/LabelStoreService.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"classes/TimeFormatter.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"overview.html":{},"interfaces/userMock.html":{}}}],["1)[0",{"_index":2842,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["1.14.1",{"_index":5749,"title":{},"body":{"dependencies.html":{}}}],["1.1em",{"_index":5162,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["1.2em",{"_index":3301,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["1.3.3",{"_index":5750,"title":{},"body":{"dependencies.html":{}}}],["1.4em",{"_index":3299,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["1.5",{"_index":5248,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["1/1",{"_index":5628,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":5663,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":5704,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":5667,"title":{},"body":{"coverage.html":{}}}],["1/14",{"_index":5666,"title":{},"body":{"coverage.html":{}}}],["1/16",{"_index":5661,"title":{},"body":{"coverage.html":{}}}],["1/18",{"_index":5629,"title":{},"body":{"coverage.html":{}}}],["1/27",{"_index":5643,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":5693,"title":{},"body":{"coverage.html":{}}}],["1/39",{"_index":5691,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":5623,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":5682,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":5655,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":5654,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":5669,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":5653,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1649,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/TimeFormatter.html":{},"coverage.html":{}}}],["10.1.0",{"_index":5742,"title":{},"body":{"dependencies.html":{}}}],["10/11",{"_index":5652,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":93,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/LoginComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"coverage.html":{}}}],["1000",{"_index":5427,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["10000",{"_index":5535,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["100px",{"_index":2743,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/QueryComponent.html":{}}}],["109",{"_index":3524,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["10px",{"_index":3072,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/IssueLocationComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/QueryComponent.html":{},"components/TextDisplayComponent.html":{}}}],["11",{"_index":5404,"title":{},"body":{"classes/TimeFormatter.html":{},"coverage.html":{}}}],["11/17",{"_index":5696,"title":{},"body":{"coverage.html":{}}}],["11pt",{"_index":3527,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["11px",{"_index":1173,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["12",{"_index":1184,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"classes/TimeFormatter.html":{},"coverage.html":{}}}],["12px",{"_index":1662,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["13.1.0",{"_index":5745,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":1180,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["14/15",{"_index":5674,"title":{},"body":{"coverage.html":{}}}],["14/16",{"_index":5676,"title":{},"body":{"coverage.html":{}}}],["14px",{"_index":5485,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["15.2.0",{"_index":5735,"title":{},"body":{"dependencies.html":{}}}],["15.3.0",{"_index":5739,"title":{},"body":{"dependencies.html":{}}}],["15/16",{"_index":5633,"title":{},"body":{"coverage.html":{}}}],["150px",{"_index":91,"title":{},"body":{"components/AccessTokenDialogComponent.html":{}}}],["15px",{"_index":1174,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/TimelineItemComponent.html":{}}}],["16",{"_index":3331,"title":{},"body":{"components/IssueLabelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["16/17",{"_index":5649,"title":{},"body":{"coverage.html":{}}}],["16px",{"_index":1522,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/LoginComponent.html":{},"components/ProjectListComponent.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["17",{"_index":5688,"title":{},"body":{"coverage.html":{}}}],["17.2",{"_index":4668,"title":{},"body":{"interfaces/Positions.html":{}}}],["17/17",{"_index":5694,"title":{},"body":{"coverage.html":{}}}],["17px",{"_index":3501,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["18px",{"_index":4806,"title":{},"body":{"components/ProjectListComponent.html":{},"components/QueryComponent.html":{}}}],["195",{"_index":3503,"title":{},"body":{"components/IssueListComponent.html":{}}}],["1]?.id",{"_index":5905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1fr",{"_index":2249,"title":{},"body":{"components/FrameComponent.html":{}}}],["1px",{"_index":2650,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["2",{"_index":611,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"components/IssueDetailComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["2.0.0",{"_index":5727,"title":{},"body":{"dependencies.html":{}}}],["2.0.4",{"_index":5738,"title":{},"body":{"dependencies.html":{}}}],["2.5em",{"_index":5475,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["2/12",{"_index":5686,"title":{},"body":{"coverage.html":{}}}],["2/2",{"_index":5681,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":5616,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":5662,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":5703,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":5658,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":5672,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1177,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"classes/LayoutNode.html":{},"coverage.html":{},"overview.html":{}}}],["200",{"_index":1114,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["200px",{"_index":2244,"title":{},"body":{"components/FrameComponent.html":{}}}],["201",{"_index":3504,"title":{},"body":{"components/IssueListComponent.html":{}}}],["2021",{"_index":5393,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["20px",{"_index":1188,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/SideNavComponent.html":{},"components/TimelineItemComponent.html":{}}}],["21",{"_index":5808,"title":{},"body":{"overview.html":{}}}],["217",{"_index":3525,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["21:44:04",{"_index":5398,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["23",{"_index":5679,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":5431,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["24px",{"_index":1167,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/LoginComponent.html":{}}}],["25",{"_index":1650,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"coverage.html":{}}}],["255",{"_index":2749,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueLabelComponent.html":{}}}],["26px",{"_index":5482,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["27",{"_index":5701,"title":{},"body":{"coverage.html":{}}}],["27px",{"_index":5484,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["28",{"_index":5657,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["29",{"_index":5699,"title":{},"body":{"coverage.html":{}}}],["2d",{"_index":3715,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["2px",{"_index":2651,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/ProjectListComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["3",{"_index":2243,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["3.1.1",{"_index":5732,"title":{},"body":{"dependencies.html":{}}}],["3.2.5",{"_index":5726,"title":{},"body":{"dependencies.html":{}}}],["3/10",{"_index":5685,"title":{},"body":{"coverage.html":{}}}],["3/15",{"_index":5687,"title":{},"body":{"coverage.html":{}}}],["3/17",{"_index":5689,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":5621,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":5635,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":5670,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":5627,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":5620,"title":{},"body":{"coverage.html":{}}}],["3/9",{"_index":5618,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":82,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["300",{"_index":5336,"title":{},"body":{"components/SideNavComponent.html":{}}}],["300px",{"_index":2732,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/LoginComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["31",{"_index":5434,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["33",{"_index":5617,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":3234,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["35px",{"_index":5472,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["36px",{"_index":2647,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/ProjectListComponent.html":{},"components/SetEditorComponent.html":{},"components/TimelineItemComponent.html":{}}}],["37/59",{"_index":5684,"title":{},"body":{"coverage.html":{}}}],["38px",{"_index":1178,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["3f3f3f",{"_index":4747,"title":{},"body":{"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["3px",{"_index":1179,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["4",{"_index":487,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"overview.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["4.0.4",{"_index":5730,"title":{},"body":{"dependencies.html":{}}}],["4/17",{"_index":5680,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":5626,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":4681,"title":{},"body":{"interfaces/Positions.html":{},"coverage.html":{}}}],["400",{"_index":1112,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["4000",{"_index":5537,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["400px",{"_index":269,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{}}}],["401",{"_index":2476,"title":{},"body":{"modules/GraphQLModule.html":{},"components/LoginComponent.html":{}}}],["42",{"_index":5619,"title":{},"body":{"coverage.html":{}}}],["43px",{"_index":3500,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["44px",{"_index":3070,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["45",{"_index":3233,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"coverage.html":{}}}],["46px",{"_index":1182,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["48px",{"_index":2870,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["4px",{"_index":1170,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TopToolbarComponent.html":{}}}],["5",{"_index":3703,"title":{},"body":{"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"classes/Vector.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["5/5",{"_index":5636,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":5638,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":5625,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":3522,"title":{},"body":{"components/IssueLocationComponent.html":{},"classes/LayoutNode.html":{},"components/ProjectListComponent.html":{},"components/TimelineItemComponent.html":{},"coverage.html":{}}}],["500",{"_index":1741,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueDetailComponent.html":{},"classes/NodeCache.html":{},"components/QueryComponent.html":{},"components/UserItemComponent.html":{},"miscellaneous/variables.html":{}}}],["5000",{"_index":1743,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphQLModule.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["500px",{"_index":87,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/IssueFilterComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["50px",{"_index":1191,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/NodeDetailsComponent.html":{},"components/TimelineItemComponent.html":{}}}],["51",{"_index":5807,"title":{},"body":{"overview.html":{}}}],["56px",{"_index":3793,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["57.75",{"_index":4664,"title":{},"body":{"interfaces/Positions.html":{}}}],["58",{"_index":1525,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"coverage.html":{}}}],["5em",{"_index":5381,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["5px",{"_index":1526,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueLocationComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/TimelineItemComponent.html":{}}}],["6",{"_index":4292,"title":{},"body":{"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"components/TextDisplayComponent.html":{},"coverage.html":{},"overview.html":{},"interfaces/userMock.html":{}}}],["6.5.4",{"_index":5747,"title":{},"body":{"dependencies.html":{}}}],["6/12",{"_index":5711,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":5677,"title":{},"body":{"coverage.html":{}}}],["6/9",{"_index":5692,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":83,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/TimeFormatter.html":{},"coverage.html":{}}}],["600",{"_index":1621,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"components/IssueDetailComponent.html":{}}}],["60000",{"_index":962,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["600px",{"_index":270,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["60px",{"_index":5384,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["62",{"_index":5683,"title":{},"body":{"coverage.html":{}}}],["63",{"_index":5706,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":5695,"title":{},"body":{"coverage.html":{}}}],["64px",{"_index":1663,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"components/ProjectHeaderComponent.html":{}}}],["66",{"_index":5615,"title":{},"body":{"coverage.html":{}}}],["6px",{"_index":1523,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ProjectListComponent.html":{},"components/TimelineItemComponent.html":{}}}],["7",{"_index":80,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["7/11",{"_index":5707,"title":{},"body":{"coverage.html":{}}}],["7/12",{"_index":5712,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":5678,"title":{},"body":{"coverage.html":{}}}],["700",{"_index":1124,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["71",{"_index":5624,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":5634,"title":{},"body":{"coverage.html":{}}}],["7px",{"_index":1175,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/LabelSearchComponent.html":{}}}],["8",{"_index":2461,"title":{},"body":{"modules/GraphQLModule.html":{},"components/IssueLabelComponent.html":{},"components/ProjectMembersComponent.html":{},"classes/TimeFormatter.html":{},"coverage.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["8.2.2",{"_index":5743,"title":{},"body":{"dependencies.html":{}}}],["8/27",{"_index":5700,"title":{},"body":{"coverage.html":{}}}],["8/29",{"_index":5702,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":3695,"title":{},"body":{"classes/LayoutNode.html":{}}}],["81",{"_index":5650,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":5637,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":4458,"title":{},"body":{"interfaces/Positions.html":{}}}],["85px",{"_index":4755,"title":{},"body":{"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["87",{"_index":5675,"title":{},"body":{"coverage.html":{}}}],["8em",{"_index":5380,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["8px",{"_index":1183,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{}}}],["9",{"_index":4847,"title":{},"body":{"components/ProjectMembersComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["9.0.0",{"_index":5744,"title":{},"body":{"dependencies.html":{}}}],["9.1.12",{"_index":5720,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["9.2.4",{"_index":5722,"title":{},"body":{"dependencies.html":{}}}],["9.3.0",{"_index":5741,"title":{},"body":{"dependencies.html":{}}}],["9/11",{"_index":5651,"title":{},"body":{"coverage.html":{}}}],["9/20",{"_index":5630,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":84,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{},"coverage.html":{}}}],["93",{"_index":5632,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":5648,"title":{},"body":{"coverage.html":{}}}],["99999",{"_index":891,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["999999",{"_index":5477,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["9px",{"_index":1181,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["_",{"_index":3169,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["__typename",{"_index":3801,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["ababab",{"_index":5072,"title":{},"body":{"components/QueryComponent.html":{}}}],["aborting",{"_index":1601,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["above",{"_index":2137,"title":{},"body":{"interfaces/FilterSelection.html":{},"injectables/IssueGraphStateService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{}}}],["absolute",{"_index":2649,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/TimelineItemComponent.html":{}}}],["absoluterotation",{"_index":4347,"title":{},"body":{"interfaces/Positions.html":{}}}],["abstract",{"_index":1787,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{}}}],["accept",{"_index":2459,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["accepts",{"_index":5552,"title":{},"body":{"injectables/UsersService.html":{}}}],["access",{"_index":19,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"index.html":{}}}],["accessed",{"_index":1753,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["accessible",{"_index":1784,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"index.html":{}}}],["accessors",{"_index":659,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/TextDisplayComponent.html":{}}}],["accesstokendialogcomponent",{"_index":1,"title":{"components/AccessTokenDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["according",{"_index":619,"title":{},"body":{"guards/AuthGuard.html":{}}}],["account",{"_index":5085,"title":{},"body":{"components/RegisterComponent.html":{},"index.html":{}}}],["account_circle",{"_index":5299,"title":{},"body":{"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["account_tree",{"_index":4801,"title":{},"body":{"components/ProjectListComponent.html":{},"components/SideNavComponent.html":{}}}],["acting",{"_index":3733,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["action",{"_index":1025,"title":{},"body":{"components/CommentComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["actions",{"_index":271,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/Positions.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["activated",{"_index":2297,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueListComponent.html":{}}}],["activatedroute",{"_index":2661,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["activatedroutesnapshot",{"_index":629,"title":{},"body":{"guards/AuthGuard.html":{}}}],["active",{"_index":2798,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/NodeDetailsComponent.html":{},"components/SideNavComponent.html":{}}}],["activecategories",{"_index":2296,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{}}}],["activecategories.includes(category",{"_index":2303,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["activecategories.push(key",{"_index":2927,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["activecategories}).pipe",{"_index":2931,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["activeitemcontent",{"_index":5455,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["activepredicates",{"_index":2758,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["actual",{"_index":2976,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["actual_component",{"_index":221,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["actually",{"_index":4369,"title":{},"body":{"interfaces/Positions.html":{}}}],["add",{"_index":103,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"index.html":{}}}],["add(other",{"_index":5575,"title":{},"body":{"classes/Vector.html":{}}}],["addablemembers",{"_index":4886,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addableuser.id",{"_index":4891,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addableusers",{"_index":4827,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addcoalesceitems(coalescelist",{"_index":935,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["addconsumedinterface",{"_index":2878,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{}}}],["addconsumedinterface(component",{"_index":2892,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["addconsumedinterface(componentid",{"_index":3146,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["addconsumedinterfacegql",{"_index":2885,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["addconsumedinterfacemutation",{"_index":2884,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["added",{"_index":817,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"interfaces/RelationEdge.html":{},"components/SetEditorComponent.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{}}}],["addedtocomponentevent",{"_index":849,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["addedtolocationevent",{"_index":852,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["addeduser1",{"_index":4842,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addeduser1.de",{"_index":4844,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addeduser2",{"_index":4845,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addeduser2.de",{"_index":4846,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addeduser3",{"_index":4848,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addeduser3.de",{"_index":4849,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["adding",{"_index":1757,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["addinterfacetocomponent(offeredbyid",{"_index":4372,"title":{},"body":{"interfaces/Positions.html":{}}}],["addissuecommentinput",{"_index":3589,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["addissuefoldernodes(node",{"_index":4606,"title":{},"body":{"interfaces/Positions.html":{}}}],["addissuefolders(node",{"_index":4580,"title":{},"body":{"interfaces/Positions.html":{}}}],["addissuegroupcontainer(node",{"_index":4590,"title":{},"body":{"interfaces/Positions.html":{}}}],["addissuetolocationgql",{"_index":3568,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["addissuetolocationinput",{"_index":3578,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["addissuetolocationmutation",{"_index":3567,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["additional",{"_index":5192,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["additionally",{"_index":2975,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["additionalsearchstring",{"_index":3479,"title":{},"body":{"components/IssueListComponent.html":{}}}],["additions",{"_index":1492,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["addlocationinput",{"_index":3580,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["addmemberdialogref",{"_index":4884,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addmemberdialogref.afterclosed().subscribe(data",{"_index":4888,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addpredicateafter",{"_index":2763,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["addpredicateafter(index",{"_index":2779,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["addprojectmemberdialogcomponent",{"_index":102,"title":{"components/AddProjectMemberDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{},"interfaces/userMock.html":{}}}],["adds",{"_index":899,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addself",{"_index":5565,"title":{},"body":{"classes/Vector.html":{}}}],["addself(other",{"_index":5578,"title":{},"body":{"classes/Vector.html":{}}}],["addsinglecoalesceitem",{"_index":946,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["addsubscriber(subscriber",{"_index":1854,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["addtolocation",{"_index":3539,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["addtolocation(addlocationinput",{"_index":3577,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["adjusted",{"_index":3346,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["administrator",{"_index":266,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["affect",{"_index":4158,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["affected",{"_index":2051,"title":{},"body":{"injectables/DataService.html":{},"components/NodeDetailsComponent.html":{}}}],["affected.push",{"_index":4162,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["affected.push('deleting",{"_index":4165,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["affected.push(affectedinterface",{"_index":4160,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["affectedinterface",{"_index":4155,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["affecting",{"_index":5102,"title":{},"body":{"components/RegisterComponent.html":{}}}],["afteralertclose",{"_index":1544,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["afterclosed().subscribe((close",{"_index":1583,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["afternodejoinedgroup",{"_index":3186,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["afternodejoinedgroup(group",{"_index":3192,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["afternodeleftgroup",{"_index":3187,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["afternodeleftgroup(group",{"_index":3197,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["afterviewinit",{"_index":828,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["afterwards",{"_index":3946,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["again",{"_index":4444,"title":{},"body":{"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["against",{"_index":3344,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["ago",{"_index":5406,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["aka",{"_index":875,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/Positions.html":{}}}],["alert('todo",{"_index":4736,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["aliases",{"_index":5810,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1185,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["allcomponentslist",{"_index":1441,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["allicons",{"_index":397,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["alllabelslist",{"_index":2770,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{}}}],["allnodes",{"_index":3710,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["allow",{"_index":2294,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{}}}],["allowed",{"_index":747,"title":{},"body":{"classes/CCIMSValidators.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["allowedanchors",{"_index":3251,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["allowedanchors.add('bottom",{"_index":3257,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["allowedanchors.add('left",{"_index":3256,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["allowedanchors.add('right",{"_index":3253,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["allowedanchors.add('top",{"_index":3254,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["allowedanchors.add(groupnode.position",{"_index":3252,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["allows",{"_index":576,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{}}}],["alo",{"_index":2318,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["already",{"_index":777,"title":{},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"classes/Vector.html":{}}}],["always",{"_index":1986,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["amend",{"_index":1916,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["amount",{"_index":1941,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["amounts",{"_index":2013,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["anchors",{"_index":3122,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["angular",{"_index":402,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/GraphQLModule.html":{},"components/IssueFilterComponent.html":{},"directives/ItemDirective.html":{},"components/RegisterComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":5719,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":5721,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":355,"title":{},"body":{"modules/AppModule.html":{},"components/FrameComponent.html":{},"interfaces/Positions.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["angular/cdk/overlay",{"_index":1079,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["angular/cdk/portal",{"_index":441,"title":{},"body":{"modules/AppModule.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["angular/cdk/table",{"_index":2513,"title":{},"body":{"modules/GraphsModule.html":{}}}],["angular/cdk/tree",{"_index":2515,"title":{},"body":{"modules/GraphsModule.html":{}}}],["angular/common",{"_index":405,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":382,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"modules/GraphQLModule.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["angular/common/locales/en",{"_index":407,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compiler",{"_index":5723,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":54,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"interfaces/userMock.html":{}}}],["angular/forms",{"_index":255,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"modules/AppModule.html":{},"classes/CCIMSValidators.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"modules/GraphsModule.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"dependencies.html":{},"interfaces/userMock.html":{}}}],["angular/http",{"_index":2427,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["angular/icons",{"_index":400,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material",{"_index":5724,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["angular/material/checkbox",{"_index":2528,"title":{},"body":{"modules/GraphsModule.html":{}}}],["angular/material/dialog",{"_index":55,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"modules/GraphsModule.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/userMock.html":{}}}],["angular/material/expansion",{"_index":421,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/form",{"_index":416,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/icon",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/input",{"_index":414,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/list",{"_index":364,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/menu",{"_index":2535,"title":{},"body":{"modules/GraphsModule.html":{}}}],["angular/material/paginator",{"_index":2510,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["angular/material/progress",{"_index":2545,"title":{},"body":{"modules/GraphsModule.html":{}}}],["angular/material/select",{"_index":419,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/sidenav",{"_index":361,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/slide",{"_index":366,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/sort",{"_index":2517,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["angular/material/table",{"_index":2506,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["angular/material/tabs",{"_index":370,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/theming",{"_index":3067,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/ProjectListComponent.html":{},"components/SideNavComponent.html":{}}}],["angular/material/toolbar",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/tooltip",{"_index":2542,"title":{},"body":{"modules/GraphsModule.html":{}}}],["angular/platform",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/GraphsModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":499,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/FrameComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RegisterComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"interfaces/User.html":{},"dependencies.html":{},"interfaces/userMock.html":{}}}],["animation",{"_index":3794,"title":{},"body":{"components/LinkedIssueItemComponent.html":{},"miscellaneous/variables.html":{}}}],["animations",{"_index":2232,"title":{},"body":{"components/FrameComponent.html":{}}}],["animations.ts",{"_index":5709,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["another",{"_index":2982,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["ant",{"_index":398,"title":{},"body":{"modules/AppModule.html":{}}}],["antd",{"_index":396,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["antd/i18n",{"_index":394,"title":{},"body":{"modules/AppModule.html":{}}}],["antd/icon",{"_index":391,"title":{},"body":{"modules/AppModule.html":{}}}],["antdesignicons",{"_index":476,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["antdesignicons[key",{"_index":478,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["any).__typename",{"_index":911,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueLocationComponent.html":{}}}],["anything",{"_index":2104,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["anyway",{"_index":2868,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["anywhere",{"_index":4414,"title":{},"body":{"interfaces/Positions.html":{}}}],["api",{"_index":762,"title":{},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/QueryListParams.html":{},"miscellaneous/enumerations.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["api.service",{"_index":3162,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["api.service.ts",{"_index":2875,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"coverage.html":{}}}],["api.service.ts:24",{"_index":2890,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["api.service.ts:42",{"_index":2896,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["api.service.ts:68",{"_index":2910,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["api.service.ts:80",{"_index":2893,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["api.service.ts:89",{"_index":2908,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["apiservice",{"_index":3145,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["apiurl",{"_index":5834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apollo",{"_index":2421,"title":{},"body":{"modules/GraphQLModule.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["apollo/client",{"_index":5725,"title":{},"body":{"dependencies.html":{}}}],["apollo/client/core",{"_index":2425,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apollo/client/core/apolloclient",{"_index":2435,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apollo/client/link/error",{"_index":2431,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apollo/link",{"_index":2429,"title":{},"body":{"modules/GraphQLModule.html":{},"dependencies.html":{}}}],["apollo_named_options",{"_index":2418,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apollo_options",{"_index":2419,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apolloclientoptions",{"_index":2422,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apolloclients",{"_index":2439,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["apollolink",{"_index":2423,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apollolink.from([basic",{"_index":2488,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["app",{"_index":18,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"index.html":{},"interfaces/userMock.html":{}}}],["app.component",{"_index":351,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":283,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":282,"title":{},"body":{"components/AppComponent.html":{}}}],["app/auth/authentication.service",{"_index":1532,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"injectables/ProjectStoreService.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["app/components/cache",{"_index":2536,"title":{},"body":{"modules/GraphsModule.html":{}}}],["app/components/cursor",{"_index":2520,"title":{},"body":{"modules/GraphsModule.html":{}}}],["app/components/issue",{"_index":2524,"title":{},"body":{"modules/GraphsModule.html":{}}}],["app/components/item.directive",{"_index":789,"title":{},"body":{"components/CacheNodeComponent.html":{},"modules/GraphsModule.html":{},"components/SetEditorComponent.html":{}}}],["app/components/set",{"_index":2522,"title":{},"body":{"modules/GraphsModule.html":{}}}],["app/components/user",{"_index":2530,"title":{},"body":{"modules/GraphsModule.html":{}}}],["app/data",{"_index":790,"title":{},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"injectables/ComponentsService.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CursorPaginatorComponent.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectsService.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/UsersService.html":{}}}],["app/data/component/component",{"_index":1396,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{}}}],["app/data/interface/interface",{"_index":1534,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{}}}],["app/data/issue",{"_index":1204,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["app/data/project/project",{"_index":1629,"title":{},"body":{"components/CreateProjectDialogComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["app/dialogs/add",{"_index":4875,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["app/dialogs/create",{"_index":437,"title":{},"body":{"modules/AppModule.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{}}}],["app/dialogs/remove",{"_index":1001,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["app/dialogs/settings",{"_index":470,"title":{},"body":{"modules/AppModule.html":{},"components/TopToolbarComponent.html":{}}}],["app/graphs/automatic",{"_index":4228,"title":{},"body":{"interfaces/Positions.html":{}}}],["app/graphs/component",{"_index":442,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Positions.html":{}}}],["app/graphs/issue",{"_index":1082,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["app/graphs/shared",{"_index":2923,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{}}}],["app/issue",{"_index":466,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"modules/GraphsModule.html":{},"components/IssueDetailComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["app/node",{"_index":446,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{}}}],["app/project",{"_index":2518,"title":{},"body":{"modules/GraphsModule.html":{}}}],["app/state.service",{"_index":2230,"title":{},"body":{"components/FrameComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/Positions.html":{},"components/SideNavComponent.html":{}}}],["app/text",{"_index":462,"title":{},"body":{"modules/AppModule.html":{}}}],["app/user",{"_index":1002,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{}}}],["app/utils/query",{"_index":836,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"modules/GraphsModule.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["app/utils/validators",{"_index":1397,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/NodeDetailsComponent.html":{}}}],["appcoalescedtimelineitems",{"_index":5443,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["appcoalescedtimelineitems]'},{'name",{"_index":216,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["appcomponent",{"_index":106,"title":{"components/AppComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearance",{"_index":2550,"title":{},"body":{"modules/GraphsModule.html":{}}}],["appears",{"_index":5186,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["appitem",{"_index":3641,"title":{},"body":{"directives/ItemDirective.html":{}}}],["appitem]'},{'name",{"_index":210,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["applicable",{"_index":5009,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["application",{"_index":2186,"title":{},"body":{"components/FrameComponent.html":{}}}],["applied",{"_index":2956,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"components/IssueListComponent.html":{}}}],["applies",{"_index":2963,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{}}}],["apply",{"_index":1521,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"classes/MultiSourceList.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["applychangeset",{"_index":4011,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["applycomponentchangeset",{"_index":1442,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["applyfilter",{"_index":3366,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["applyfilter(filter",{"_index":3377,"title":{},"body":{"components/IssueListComponent.html":{}}}],["applyfilter(filtervalue",{"_index":4831,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["applyidchangeset",{"_index":2764,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["applyidchangeset(id",{"_index":2782,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["applying",{"_index":5181,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["appmodule",{"_index":330,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appquerybody",{"_index":4996,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["appquerybody]'},{'name",{"_index":212,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["appquerybutton",{"_index":5004,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["appquerybutton]'},{'name",{"_index":214,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["appropriate",{"_index":736,"title":{},"body":{"classes/CCIMSValidators.html":{},"components/IssueIconComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["approutingmodule",{"_index":337,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appsingletimelineitem",{"_index":220,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["appstate",{"_index":528,"title":{"interfaces/AppState.html":{}},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{},"coverage.html":{}}}],["appstate.project",{"_index":5325,"title":{},"body":{"components/SideNavComponent.html":{}}}],["appstate.project.node",{"_index":5326,"title":{},"body":{"components/SideNavComponent.html":{}}}],["appstate.project.node.id",{"_index":5330,"title":{},"body":{"components/SideNavComponent.html":{}}}],["appstate.project.node.name",{"_index":5328,"title":{},"body":{"components/SideNavComponent.html":{}}}],["appstate.project?.node.id",{"_index":3170,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["apptimelineitemdeleted",{"_index":5447,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["apptimelineitemdeleted]'},{'name",{"_index":218,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["arbitrary",{"_index":3761,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["area",{"_index":5802,"title":{},"body":{"index.html":{}}}],["args",{"_index":1722,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["arguments",{"_index":2334,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["arial",{"_index":3529,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["around",{"_index":2864,"title":{},"body":{"components/IssueFilterComponent.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["arranged",{"_index":4221,"title":{},"body":{"interfaces/Positions.html":{}}}],["array",{"_index":826,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"classes/LayoutNode.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{}}}],["array(nodes.length",{"_index":3760,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["array.from(node.issuegroupcontainer.issuegroupnodeids).map",{"_index":4623,"title":{},"body":{"interfaces/Positions.html":{}}}],["array.from(nodes.values",{"_index":4708,"title":{},"body":{"interfaces/Positions.html":{}}}],["array.from(this.graphdata.components.values()).map(component",{"_index":4520,"title":{},"body":{"interfaces/Positions.html":{}}}],["array.from(this.graphdata.interfaces.values()).map",{"_index":4524,"title":{},"body":{"interfaces/Positions.html":{}}}],["array.includes(item",{"_index":2844,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["array.isarray(spec.sourcenodes",{"_index":3957,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["array.isarray(this.componentlist",{"_index":1494,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["array.isarray(this.data.listset",{"_index":4021,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["array.isarray(this.listset",{"_index":5211,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["array.push(item",{"_index":2845,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["array.splice(array.indexof(item",{"_index":2846,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["arrives",{"_index":2985,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/Positions.html":{}}}],["arrow",{"_index":1279,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"components/IssueDetailComponent.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["arrow_back_ios",{"_index":73,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["arrows",{"_index":1639,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["artifact",{"_index":3802,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["artifacts",{"_index":3821,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["asc",{"_index":3456,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["ask",{"_index":2295,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["aspect",{"_index":4456,"title":{},"body":{"interfaces/Positions.html":{},"index.html":{}}}],["assets/icons/issues",{"_index":321,"title":{},"body":{"components/AppComponent.html":{}}}],["assets/icons/svg",{"_index":304,"title":{},"body":{"components/AppComponent.html":{}}}],["asseturl",{"_index":320,"title":{},"body":{"components/AppComponent.html":{}}}],["assign",{"_index":1518,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["assigned",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/IssueDetailComponent.html":{}}}],["assignedevent",{"_index":965,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["assignedevent.createdby.id",{"_index":967,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["assignedevent.removedassignee?.id",{"_index":968,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["assignee",{"_index":3482,"title":{},"body":{"components/IssueListComponent.html":{}}}],["assignee.displayname",{"_index":3484,"title":{},"body":{"components/IssueListComponent.html":{}}}],["assignees",{"_index":1566,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["associated",{"_index":1991,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["assume",{"_index":4547,"title":{},"body":{"interfaces/Positions.html":{}}}],["async",{"_index":1491,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["attached",{"_index":2383,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"interfaces/Positions.html":{}}}],["attr('r",{"_index":3098,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["attr('x",{"_index":3096,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["attr('y",{"_index":3097,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["attribute",{"_index":4715,"title":{},"body":{"interfaces/Positions.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["auth",{"_index":2483,"title":{},"body":{"modules/GraphQLModule.html":{},"index.html":{}}}],["auth/auth.guard",{"_index":504,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/authentication.service",{"_index":2432,"title":{},"body":{"modules/GraphQLModule.html":{},"components/LoginComponent.html":{}}}],["authenticated",{"_index":633,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authentication",{"_index":2485,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["authentication.service",{"_index":638,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authenticationservice",{"_index":626,"title":{"injectables/AuthenticationService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"modules/GraphQLModule.html":{},"components/LoginComponent.html":{},"injectables/ProjectStoreService.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"index.html":{}}}],["authenticationsservice",{"_index":620,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authguard",{"_index":503,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{},"index.html":{}}}],["author",{"_index":3399,"title":{},"body":{"components/IssueListComponent.html":{}}}],["authorization",{"_index":2486,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["authservice",{"_index":1536,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"modules/GraphQLModule.html":{},"components/LoginComponent.html":{},"injectables/ProjectStoreService.html":{},"components/TopToolbarComponent.html":{}}}],["authservice.logout",{"_index":2477,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["auto",{"_index":1193,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/FrameComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/LoginComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["autodismiss",{"_index":488,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["automatic",{"_index":2044,"title":{},"body":{"injectables/DataService.html":{},"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["automatically",{"_index":623,"title":{},"body":{"guards/AuthGuard.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/IssueIconComponent.html":{},"classes/NodeCache.html":{},"index.html":{}}}],["automaticly",{"_index":3537,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["available",{"_index":574,"title":{},"body":{"interfaces/AppState.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"injectables/StateService.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["avoid",{"_index":1969,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["avoiding",{"_index":4550,"title":{},"body":{"interfaces/Positions.html":{}}}],["await",{"_index":1503,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"interfaces/DialogData.html":{},"miscellaneous/variables.html":{}}}],["away",{"_index":3722,"title":{},"body":{"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["b",{"_index":953,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/IssueLabelComponent.html":{},"components/ProjectListComponent.html":{}}}],["b.blur",{"_index":4789,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["back",{"_index":68,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"interfaces/userMock.html":{}}}],["backend",{"_index":231,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"interfaces/AppState.html":{},"injectables/ComponentStoreService.html":{},"injectables/DataService.html":{},"interfaces/FilterSelection.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"index.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["background",{"_index":276,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/ProjectListComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["backtologin",{"_index":5091,"title":{},"body":{"components/RegisterComponent.html":{}}}],["backtologin(e",{"_index":5100,"title":{},"body":{"components/RegisterComponent.html":{}}}],["backwards",{"_index":3823,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["badge",{"_index":5474,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["badge.closed",{"_index":5490,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["badge.reopened",{"_index":5491,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["badge.warning",{"_index":5488,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["badly",{"_index":3796,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["bar",{"_index":2136,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/TextFragment.html":{},"components/TopToolbarComponent.html":{},"miscellaneous/typealiases.html":{}}}],["based",{"_index":1237,"title":{},"body":{"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"components/FrameComponent.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{}}}],["basic",{"_index":2456,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bearer",{"_index":2487,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["before",{"_index":1884,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"components/IssueContentsComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"interfaces/QueryListParams.html":{},"components/RemoveDialogComponent.html":{},"components/TimelineItemComponent.html":{}}}],["beforenodemove",{"_index":3262,"title":{},"body":{"classes/IssueGroupContainerParentBehaviour.html":{}}}],["beforenodemove(group",{"_index":3212,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["beginediting",{"_index":2667,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/SetEditorComponent.html":{}}}],["beginning",{"_index":2107,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["begins",{"_index":2673,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["behavior",{"_index":1770,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["behaviorsubject",{"_index":684,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{},"interfaces/User.html":{}}}],["behaviorsubject(false",{"_index":2225,"title":{},"body":{"components/FrameComponent.html":{}}}],["behaviorsubject(null",{"_index":4265,"title":{},"body":{"interfaces/Positions.html":{}}}],["behaviorsubject(this.fetchuserfromstorage",{"_index":694,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["behaviorsubject({labels",{"_index":2143,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["behaviour",{"_index":4291,"title":{},"body":{"interfaces/Positions.html":{}}}],["behaviours",{"_index":4225,"title":{},"body":{"interfaces/Positions.html":{}}}],["behaviours.ts",{"_index":3181,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"coverage.html":{}}}],["behaviours.ts:164",{"_index":3196,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["behaviours.ts:169",{"_index":3198,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["behaviours.ts:18",{"_index":3265,"title":{},"body":{"classes/IssueGroupContainerParentBehaviour.html":{}}}],["behaviours.ts:19",{"_index":3264,"title":{},"body":{"classes/IssueGroupContainerParentBehaviour.html":{}}}],["behaviours.ts:24",{"_index":3266,"title":{},"body":{"classes/IssueGroupContainerParentBehaviour.html":{}}}],["behaviours.ts:92",{"_index":3189,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["behaviours.ts:93",{"_index":3191,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["behaviours.ts:94",{"_index":3190,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["behaviours.ts:96",{"_index":3200,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["being",{"_index":1810,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"components/IssueDetailComponent.html":{},"classes/NodeCache.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{}}}],["belongs",{"_index":1096,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["below",{"_index":2735,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["beneath",{"_index":5303,"title":{},"body":{"components/SideNavComponent.html":{}}}],["bespoke",{"_index":3459,"title":{},"body":{"components/IssueListComponent.html":{}}}],["best",{"_index":3218,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["bestdistance",{"_index":3221,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["beta.3",{"_index":5728,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":705,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"classes/Vector.html":{}}}],["bit",{"_index":1697,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["black",{"_index":3314,"title":{},"body":{"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/ProjectListComponent.html":{}}}],["blank",{"_index":4548,"title":{},"body":{"interfaces/Positions.html":{}}}],["block",{"_index":2737,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["blue",{"_index":3319,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["body",{"_index":995,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/NodeDetailsComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/TimelineItemComponent.html":{}}}],["body.mat",{"_index":4201,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["bold",{"_index":2871,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SideNavComponent.html":{}}}],["bool",{"_index":2811,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":602,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{}}}],["booleans",{"_index":2999,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["bootstrap",{"_index":345,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":1168,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["both",{"_index":742,"title":{},"body":{"classes/CCIMSValidators.html":{},"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["bottom",{"_index":1266,"title":{},"body":{"interfaces/ComponentNode.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"interfaces/IssueNode.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"interfaces/Position.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TimelineItemComponent.html":{}}}],["bound",{"_index":3029,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["bounding",{"_index":4270,"title":{},"body":{"interfaces/Positions.html":{}}}],["boundingbox",{"_index":4512,"title":{},"body":{"interfaces/Positions.html":{}}}],["boundingbox.height",{"_index":4565,"title":{},"body":{"interfaces/Positions.html":{}}}],["boundingbox.width",{"_index":4562,"title":{},"body":{"interfaces/Positions.html":{}}}],["boundingbox.x",{"_index":4561,"title":{},"body":{"interfaces/Positions.html":{}}}],["boundingbox.y",{"_index":4564,"title":{},"body":{"interfaces/Positions.html":{}}}],["bounds",{"_index":5223,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["box",{"_index":1171,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/DialogData-1.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["break",{"_index":3989,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/TextDisplayComponent.html":{}}}],["breakpointobserver",{"_index":2211,"title":{},"body":{"components/FrameComponent.html":{},"interfaces/Positions.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["breakpoints",{"_index":2229,"title":{},"body":{"components/FrameComponent.html":{},"interfaces/Positions.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["bridges",{"_index":2189,"title":{},"body":{"components/FrameComponent.html":{}}}],["brightness",{"_index":3335,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["browse",{"_index":5806,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":292,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/GraphsModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":353,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["browseranimationsmodule",{"_index":352,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["browsermodule",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["bug",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"miscellaneous/variables.html":{}}}],["bug_report",{"_index":3063,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/SideNavComponent.html":{}}}],["bugcount",{"_index":2329,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["bugs",{"_index":2330,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["buildfilter",{"_index":2765,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["button",{"_index":259,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData-1.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/LoginComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TopToolbarComponent.html":{}}}],["buttoncreateproject",{"_index":4816,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["buttondeleteproject",{"_index":4815,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["buttonmode",{"_index":5033,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["buttons",{"_index":2657,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/LinkedIssueItemComponent.html":{}}}],["c",{"_index":1940,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["c.name",{"_index":4168,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["c1",{"_index":3396,"title":{},"body":{"components/IssueListComponent.html":{}}}],["cache",{"_index":109,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"miscellaneous/variables.html":{}}}],["cache_fast_debounce_time_ms",{"_index":1739,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cache_interactive_debounce_time_ms",{"_index":1740,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cache_stale_time_ms",{"_index":1742,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cacheable",{"_index":1665,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["cached",{"_index":776,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["cachenodecomponent",{"_index":108,"title":{"components/CacheNodeComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["caching",{"_index":2045,"title":{},"body":{"injectables/DataService.html":{}}}],["calc(100",{"_index":1190,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["calc(36px",{"_index":5476,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["calculaiton",{"_index":3127,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["calculate",{"_index":3214,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["calculateboundingbox",{"_index":4677,"title":{},"body":{"interfaces/Positions.html":{}}}],["calculated",{"_index":4675,"title":{},"body":{"interfaces/Positions.html":{}}}],["calculatemovement",{"_index":3684,"title":{},"body":{"classes/LayoutNode.html":{}}}],["calculatemovement(allnodes",{"_index":3707,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["calculates",{"_index":3113,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["calculatesourcehandles",{"_index":3107,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["calculatesourcehandles(source",{"_index":3110,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["calculatetargethandles",{"_index":3108,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["calculatetargethandles(target",{"_index":3114,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["calculation",{"_index":3119,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{}}}],["calculations",{"_index":4650,"title":{},"body":{"interfaces/Positions.html":{}}}],["call",{"_index":1838,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["callback",{"_index":1411,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{},"miscellaneous/typealiases.html":{}}}],["called",{"_index":1835,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/IssueGraphClassSettersService.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/TextDisplayComponent.html":{},"miscellaneous/typealiases.html":{}}}],["caller",{"_index":3157,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["calling",{"_index":1748,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["calls",{"_index":1246,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["canactivate",{"_index":509,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":628,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cancel",{"_index":85,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/CommentComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{}}}],["cancelled",{"_index":5370,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["cancels",{"_index":4281,"title":{},"body":{"interfaces/Positions.html":{}}}],["cancreatenewissue",{"_index":3357,"title":{},"body":{"components/IssueListComponent.html":{}}}],["capturechildmovement",{"_index":3183,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["care",{"_index":4508,"title":{},"body":{"interfaces/Positions.html":{}}}],["carries",{"_index":5108,"title":{},"body":{"components/RegisterComponent.html":{}}}],["carry",{"_index":2902,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["case",{"_index":902,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{}}}],["catch((error",{"_index":1509,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["catch(err",{"_index":1610,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["catch(error",{"_index":1483,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["catcherror",{"_index":2130,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["categiry",{"_index":3385,"title":{},"body":{"components/IssueListComponent.html":{}}}],["categories",{"_index":2291,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["categories[key",{"_index":2926,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["category",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueCategoryComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"miscellaneous/variables.html":{}}}],["category'},{'name",{"_index":131,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["category.component",{"_index":2549,"title":{},"body":{"modules/GraphsModule.html":{}}}],["category.component.html",{"_index":2591,"title":{},"body":{"components/IssueCategoryComponent.html":{}}}],["category.component.scss",{"_index":2590,"title":{},"body":{"components/IssueCategoryComponent.html":{}}}],["category.component.ts",{"_index":2589,"title":{},"body":{"components/IssueCategoryComponent.html":{},"coverage.html":{}}}],["category.component.ts:10",{"_index":2592,"title":{},"body":{"components/IssueCategoryComponent.html":{}}}],["category/issue",{"_index":2548,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"coverage.html":{}}}],["cause",{"_index":1602,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"classes/NodeCache.html":{}}}],["caused",{"_index":3284,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["causes",{"_index":2081,"title":{},"body":{"injectables/DataService.html":{}}}],["caution",{"_index":593,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["ccc",{"_index":5483,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["ccims",{"_index":723,"title":{},"body":{"classes/CCIMSValidators.html":{},"interfaces/Positions.html":{}}}],["ccimsicons",{"_index":294,"title":{},"body":{"components/AppComponent.html":{}}}],["ccimsvalidators",{"_index":719,"title":{"classes/CCIMSValidators.html":{}},"body":{"classes/CCIMSValidators.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/NodeDetailsComponent.html":{},"coverage.html":{}}}],["ccimsvalidators.contentvalidator",{"_index":1410,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["ccimsvalidators.nameformatvalidator",{"_index":1404,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["ccimsvalidators.namevalidator",{"_index":739,"title":{},"body":{"classes/CCIMSValidators.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["ccimsvalidators.urlvalidator",{"_index":1406,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["cdktablemodule",{"_index":2512,"title":{},"body":{"modules/GraphsModule.html":{}}}],["cdktreemodule",{"_index":2514,"title":{},"body":{"modules/GraphsModule.html":{}}}],["center",{"_index":1186,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"modules/GraphQLModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["center_focus_strong",{"_index":3065,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["centered",{"_index":4809,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["certain",{"_index":4620,"title":{},"body":{"interfaces/Positions.html":{}}}],["change",{"_index":594,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/StateService.html":{},"classes/TimeFormatter.html":{},"index.html":{},"interfaces/userMock.html":{}}}],["changecolour",{"_index":4764,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["changed",{"_index":2674,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["changedetector",{"_index":1050,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["changedetectorref",{"_index":1051,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["changeissuecategory",{"_index":3540,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["changeissuecategory(changeissuecategoryinput",{"_index":3581,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["changeissuecategorygql",{"_index":3566,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["changeissuecategoryinput",{"_index":3582,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["changeissuecategorymutation",{"_index":3565,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["changepassword",{"_index":4729,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["changes",{"_index":553,"title":{},"body":{"interfaces/AppState.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"components/IssueDetailComponent.html":{},"classes/LayoutNode.html":{},"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"classes/Vector.html":{},"index.html":{}}}],["changes.listset",{"_index":5219,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["changes.listset.currentvalue",{"_index":5221,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["changeset",{"_index":5175,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["changing",{"_index":1795,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["charset=utf",{"_index":2460,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["check",{"_index":1762,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueLabelComponent.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"classes/Vector.html":{}}}],["checkbox",{"_index":5273,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["checked",{"_index":1618,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"components/IssueDetailComponent.html":{}}}],["checkimstype",{"_index":1424,"title":{},"body":{"components/CreateComponentDialogComponent.html":{}}}],["checkimstype(returnfromselect",{"_index":1421,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["checking",{"_index":5041,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{}}}],["checks",{"_index":963,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/FrameComponent.html":{},"components/RegisterComponent.html":{}}}],["checkusernamegql",{"_index":5098,"title":{},"body":{"components/RegisterComponent.html":{}}}],["chevron_left",{"_index":1653,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["chevron_right",{"_index":1654,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"components/LinkedIssueItemComponent.html":{}}}],["child",{"_index":2648,"title":{},"body":{"components/IssueContentsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/NodeDetailsComponent.html":{},"components/SetEditorDialogComponent.html":{}}}],["child(2",{"_index":5278,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["child(3",{"_index":5280,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["child(4",{"_index":5282,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["child.x",{"_index":3249,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["child.y",{"_index":3250,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["child::after",{"_index":3792,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["childgroup",{"_index":3193,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["childnode",{"_index":3195,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["childnode.allowedanchors",{"_index":3258,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["childnodepositions",{"_index":3184,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["children",{"_index":510,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["children.has(childid",{"_index":3240,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["circumstance",{"_index":3693,"title":{},"body":{"classes/LayoutNode.html":{}}}],["class",{"_index":61,"title":{"classes/CCIMSValidators.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"classes/LayoutNode.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"classes/TimeFormatter.html":{},"classes/Vector.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"coverage.html":{},"index.html":{},"interfaces/userMock.html":{}}}],["class=\"timeline",{"_index":2642,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["classes",{"_index":720,"title":{},"body":{"classes/CCIMSValidators.html":{},"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"classes/TimeFormatter.html":{},"classes/Vector.html":{},"index.html":{},"overview.html":{}}}],["classname",{"_index":2961,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["clean",{"_index":4515,"title":{},"body":{"interfaces/Positions.html":{}}}],["clear",{"_index":2641,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["cleartimeout(this.loadtimeout",{"_index":1831,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["cli",{"_index":5762,"title":{},"body":{"index.html":{}}}],["click",{"_index":2101,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Positions.html":{},"components/RemoveDialogComponent.html":{}}}],["clicked",{"_index":1630,"title":{},"body":{"components/CreateProjectDialogComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/TextDisplayComponent.html":{}}}],["clickedonrow",{"_index":3367,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["clickedonrow(row",{"_index":3379,"title":{},"body":{"components/IssueListComponent.html":{}}}],["clickedonrow(rowdata",{"_index":4834,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["clicking",{"_index":4413,"title":{},"body":{"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{}}}],["clicks",{"_index":2190,"title":{},"body":{"components/FrameComponent.html":{}}}],["client",{"_index":2491,"title":{},"body":{"modules/GraphQLModule.html":{},"index.html":{}}}],["clientmutationid",{"_index":1587,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["clockwise",{"_index":5600,"title":{},"body":{"classes/Vector.html":{}}}],["close",{"_index":814,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"injectables/IssueStoreService.html":{},"interfaces/Positions.html":{}}}],["close(closeinput",{"_index":3584,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["closebutton",{"_index":2453,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["closecomponentactions(reload",{"_index":4496,"title":{},"body":{"interfaces/Positions.html":{}}}],["closed",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{}}}],["closeinput",{"_index":3587,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["closeissue",{"_index":2606,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["closeissuegql",{"_index":3560,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["closeissueinput",{"_index":3585,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["closeissuemutation",{"_index":3559,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["closes",{"_index":2614,"title":{},"body":{"components/IssueContentsComponent.html":{},"interfaces/Positions.html":{}}}],["closing",{"_index":4261,"title":{},"body":{"interfaces/Positions.html":{},"components/SetEditorComponent.html":{}}}],["clr/ui",{"_index":5729,"title":{},"body":{"dependencies.html":{}}}],["cluster_appmodule",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":335,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":336,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_graphsmodule",{"_index":2499,"title":{},"body":{"modules/GraphsModule.html":{},"overview.html":{}}}],["cluster_graphsmodule_declarations",{"_index":2500,"title":{},"body":{"modules/GraphsModule.html":{},"overview.html":{}}}],["cluster_graphsmodule_exports",{"_index":2501,"title":{},"body":{"modules/GraphsModule.html":{},"overview.html":{}}}],["coalescable_events",{"_index":844,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalesce",{"_index":900,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalesced",{"_index":812,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["coalesced.push",{"_index":942,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalescedtimelineitem",{"_index":805,"title":{"interfaces/CoalescedTimelineItem.html":{}},"body":{"interfaces/CoalescedTimelineItem.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"coverage.html":{}}}],["coalescelist",{"_index":898,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalescelist.length",{"_index":905,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalescelist.push(timelineitem",{"_index":921,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalescelist[0",{"_index":937,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalescelist[0].createdat",{"_index":943,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalescing",{"_index":916,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalescingtype",{"_index":897,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["code",{"_index":2556,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"injectables/IssueStoreService.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/ProjectMembersComponent.html":{},"index.html":{},"interfaces/userMock.html":{}}}],["codechange",{"_index":3884,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["codedidchange",{"_index":3883,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["codegen",{"_index":5788,"title":{},"body":{"index.html":{}}}],["codegeneration",{"_index":5776,"title":{},"body":{"index.html":{}}}],["codegenerator",{"_index":1305,"title":{},"body":{"injectables/ComponentStoreService.html":{},"index.html":{}}}],["collect",{"_index":4152,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["collection",{"_index":1993,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["collections",{"_index":2275,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"dependencies.html":{}}}],["collects",{"_index":2978,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["color",{"_index":277,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"modules/AppModule.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CursorPaginatorComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/LabelStoreService.html":{},"components/MarkdownEditorComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"dependencies.html":{}}}],["color($accent",{"_index":5335,"title":{},"body":{"components/SideNavComponent.html":{}}}],["color.length",{"_index":3330,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["color.match(/^rgb",{"_index":3321,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["color.match(/^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d",{"_index":3323,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["color.slice(1).replace",{"_index":3329,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["color[1",{"_index":3324,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["color[2",{"_index":3325,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["color[3",{"_index":3326,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["colorpickermodule",{"_index":435,"title":{},"body":{"modules/AppModule.html":{}}}],["column",{"_index":2241,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["columns",{"_index":2248,"title":{},"body":{"components/FrameComponent.html":{}}}],["columnstodisplay",{"_index":3358,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["combination",{"_index":5006,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["combined",{"_index":3031,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["combinelatest",{"_index":3025,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{}}}],["combinelatest([this.selectedcategories",{"_index":3043,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["combinelatest([this.ss.state",{"_index":3165,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["combines",{"_index":2979,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["comes",{"_index":4283,"title":{},"body":{"interfaces/Positions.html":{}}}],["coming",{"_index":3665,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["comment",{"_index":974,"title":{},"body":{"components/CommentComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{}}}],["comment'},{'name",{"_index":112,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["comment.component.html",{"_index":976,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment.component.scss",{"_index":975,"title":{},"body":{"components/CommentComponent.html":{}}}],["commentcomponent",{"_index":111,"title":{"components/CommentComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["commentcontainer",{"_index":5486,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["commented",{"_index":1035,"title":{},"body":{"components/CommentComponent.html":{}}}],["commenteditor",{"_index":2601,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["commentid",{"_index":982,"title":{},"body":{"components/CommentComponent.html":{}}}],["commentissue",{"_index":2607,"title":{},"body":{"components/IssueContentsComponent.html":{},"injectables/IssueStoreService.html":{}}}],["commentissue(commentissueinput",{"_index":3588,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["commentissuegql",{"_index":3554,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["commentissueinput",{"_index":3590,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["commentissuemutation",{"_index":3553,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["commentsub",{"_index":977,"title":{},"body":{"components/CommentComponent.html":{}}}],["commonly",{"_index":722,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["commonmodule",{"_index":403,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["communicate",{"_index":5778,"title":{},"body":{"index.html":{}}}],["communicated",{"_index":2193,"title":{},"body":{"components/FrameComponent.html":{}}}],["communicating",{"_index":3888,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["communication",{"_index":2440,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["compare",{"_index":3343,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["compatibility",{"_index":2005,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"injectables/UsersService.html":{}}}],["complete",{"_index":4502,"title":{},"body":{"interfaces/Positions.html":{}}}],["completely",{"_index":4500,"title":{},"body":{"interfaces/Positions.html":{}}}],["complex",{"_index":4551,"title":{},"body":{"interfaces/Positions.html":{}}}],["compodoc",{"_index":3906,"title":{},"body":{"components/MarkdownPreviewComponent.html":{},"index.html":{}}}],["compodocfor",{"_index":5772,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["component'},{'name",{"_index":119,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["component(s",{"_index":4159,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["component.component",{"_index":439,"title":{},"body":{"modules/AppModule.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["component.component.html",{"_index":5167,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{}}}],["component.component.scss",{"_index":5166,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{}}}],["component.component.ts",{"_index":5165,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{},"coverage.html":{}}}],["component.component.ts:10",{"_index":5168,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{}}}],["component.component.ts:13",{"_index":5171,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{}}}],["component.component.ts:16",{"_index":5172,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{}}}],["component.component.ts:21",{"_index":5170,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{}}}],["component.component.ts:25",{"_index":5169,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{}}}],["component.graphql",{"_index":1308,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["component.id",{"_index":1252,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["component.name",{"_index":1253,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueItemComponent.html":{},"interfaces/IssueNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["component.node",{"_index":4139,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["component/:componentid",{"_index":518,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component/:componentid/issue/:issueid",{"_index":520,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component/project",{"_index":372,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ProjectListComponent.html":{},"coverage.html":{}}}],["component/query.component",{"_index":837,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"modules/GraphsModule.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["component/query.component.ts",{"_index":4994,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["component/query.component.ts:134",{"_index":5063,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:135",{"_index":5068,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:136",{"_index":5069,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:141",{"_index":5070,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:142",{"_index":5071,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:144",{"_index":5062,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:163",{"_index":5065,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:173",{"_index":5064,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:206",{"_index":5066,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:212",{"_index":5067,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:34",{"_index":4998,"title":{},"body":{"directives/QueryBodyDirective.html":{}}}],["component/query.component.ts:35",{"_index":4999,"title":{},"body":{"directives/QueryBodyDirective.html":{}}}],["component/query.component.ts:46",{"_index":5058,"title":{},"body":{"directives/QueryButtonDirective.html":{}}}],["component/query.component.ts:47",{"_index":5059,"title":{},"body":{"directives/QueryButtonDirective.html":{}}}],["component/remove",{"_index":438,"title":{},"body":{"modules/AppModule.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["component_context_menu_data",{"_index":1094,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["component_template",{"_index":100,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["componentcontextmenu",{"_index":4250,"title":{},"body":{"interfaces/Positions.html":{}}}],["componentcontextmenucomponent",{"_index":113,"title":{"components/ComponentContextMenuComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["componentcontextmenucomponent.componentcontextmenucomponent",{"_index":4251,"title":{},"body":{"interfaces/Positions.html":{}}}],["componentcontextmenucomponent.componentcontextmenuservice",{"_index":4243,"title":{},"body":{"interfaces/Positions.html":{}}}],["componentcontextmenucomponent.last_height",{"_index":1067,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["componentcontextmenucomponent.last_width",{"_index":1070,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["componentcontextmenucomponent.min_height",{"_index":1129,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["componentcontextmenucomponent.min_width",{"_index":1127,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["componentcontextmenudata",{"_index":1049,"title":{"interfaces/ComponentContextMenuData.html":{}},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"coverage.html":{}}}],["componentcontextmenunodeid",{"_index":4252,"title":{},"body":{"interfaces/Positions.html":{}}}],["componentcontextmenuservice",{"_index":1089,"title":{"injectables/ComponentContextMenuService.html":{}},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["componentdetails",{"_index":5933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["componentfilter",{"_index":1383,"title":{},"body":{"injectables/ComponentsService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["componentid",{"_index":1284,"title":{},"body":{"interfaces/ComponentNode.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["componentinterface",{"_index":2268,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["componentinterfacefilter",{"_index":1384,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["componentinterfaceprovider",{"_index":3359,"title":{},"body":{"components/IssueListComponent.html":{}}}],["componentinterfaces",{"_index":3818,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["componentinterfacesub",{"_index":3360,"title":{},"body":{"components/IssueListComponent.html":{}}}],["componentlist",{"_index":1443,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["componentnode",{"_index":1197,"title":{"interfaces/ComponentNode.html":{}},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["componentnodes",{"_index":4519,"title":{},"body":{"interfaces/Positions.html":{}}}],["componentportal",{"_index":1080,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["componentportal(componentcontextmenucomponent",{"_index":1120,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentStoreService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/QueriesService.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"overview.html":{}}}],["components.node.component.name",{"_index":4166,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["components.node.consumedby.nodes",{"_index":4167,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["components.service",{"_index":4991,"title":{},"body":{"injectables/QueriesService.html":{}}}],["componentsize",{"_index":4678,"title":{},"body":{"interfaces/Positions.html":{}}}],["componentsservice",{"_index":1358,"title":{"injectables/ComponentsService.html":{}},"body":{"injectables/ComponentsService.html":{},"injectables/QueriesService.html":{},"coverage.html":{}}}],["componentstore",{"_index":1400,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["componentstoreservice",{"_index":1296,"title":{"injectables/ComponentStoreService.html":{}},"body":{"injectables/ComponentStoreService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["componentsub",{"_index":3361,"title":{},"body":{"components/IssueListComponent.html":{}}}],["compute",{"_index":2321,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["computerelatedfolders",{"_index":5659,"title":{},"body":{"coverage.html":{}}}],["computerelatedfolders(linkissues",{"_index":2313,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["computes",{"_index":2381,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["concat",{"_index":2129,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["condition",{"_index":5791,"title":{},"body":{"index.html":{}}}],["configuration",{"_index":479,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["configurations",{"_index":2438,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["configured",{"_index":482,"title":{},"body":{"modules/AppModule.html":{}}}],["confirm",{"_index":1582,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["confirmation",{"_index":2103,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["confirmbuttontext",{"_index":1581,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["confirmdeletedialogref",{"_index":1018,"title":{},"body":{"components/CommentComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["confirmdeletedialogref.afterclosed().subscribe(del",{"_index":1027,"title":{},"body":{"components/CommentComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["confirmdeletedialogref.afterclosed().subscribe(deletedata",{"_index":4171,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["confirmed",{"_index":1029,"title":{},"body":{"components/CommentComponent.html":{}}}],["confirmvalidator",{"_index":5088,"title":{},"body":{"components/RegisterComponent.html":{}}}],["congiuration",{"_index":2448,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["conjunction",{"_index":5442,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["connect",{"_index":1223,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{}}}],["connectconsumingcomponents(interfacenode",{"_index":4572,"title":{},"body":{"interfaces/Positions.html":{}}}],["connected",{"_index":3690,"title":{},"body":{"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["connectedposition",{"_index":1076,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["connectedto",{"_index":3676,"title":{},"body":{"classes/LayoutNode.html":{}}}],["connecting",{"_index":4535,"title":{},"body":{"interfaces/Positions.html":{}}}],["connection",{"_index":871,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/LayoutNode.html":{},"components/ProjectIssueListComponent.html":{},"classes/Vector.html":{}}}],["connections",{"_index":4509,"title":{},"body":{"interfaces/Positions.html":{}}}],["connector",{"_index":1286,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["connectto",{"_index":3685,"title":{},"body":{"classes/LayoutNode.html":{}}}],["connectto(other",{"_index":3713,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["connecttoofferingcomponent(node",{"_index":4566,"title":{},"body":{"interfaces/Positions.html":{}}}],["consists",{"_index":4237,"title":{},"body":{"interfaces/Positions.html":{}}}],["console",{"_index":5531,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["console.error('oh",{"_index":1707,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["console.log('dark",{"_index":5298,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["console.log('deleted",{"_index":2110,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["console.log('error",{"_index":5020,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"injectables/UserNotifyService.html":{}}}],["console.log('node",{"_index":1706,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["console.log('not",{"_index":2111,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["console.log('register",{"_index":303,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('result",{"_index":5019,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["console.log('setting",{"_index":4312,"title":{},"body":{"interfaces/Positions.html":{}}}],["console.log(`[graphql",{"_index":2471,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["console.log(`[network",{"_index":2473,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["const",{"_index":260,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"interfaces/User.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":1768,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueFilterComponent.html":{},"classes/NodeCache.html":{}}}],["constructed",{"_index":2444,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["constructing",{"_index":1978,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/typealiases.html":{}}}],["construction",{"_index":2901,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["constructor",{"_index":33,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{}}}],["constructor(@inject(component_context_menu_data",{"_index":1138,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["constructor(activatedroute",{"_index":3373,"title":{},"body":{"components/IssueListComponent.html":{}}}],["constructor(apiservice",{"_index":3143,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["constructor(authservice",{"_index":4936,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["constructor(breakpointobserver",{"_index":2210,"title":{},"body":{"components/FrameComponent.html":{},"components/TopToolbarComponent.html":{}}}],["constructor(changedetector",{"_index":5463,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["constructor(components",{"_index":4981,"title":{},"body":{"injectables/QueriesService.html":{}}}],["constructor(createinterfacemutation",{"_index":2561,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["constructor(createissue",{"_index":3547,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["constructor(data",{"_index":1048,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["constructor(dataservice",{"_index":768,"title":{},"body":{"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{}}}],["constructor(dialog",{"_index":1450,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["constructor(dialogref",{"_index":34,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["constructor(element",{"_index":5057,"title":{},"body":{"directives/QueryButtonDirective.html":{}}}],["constructor(fb",{"_index":5094,"title":{},"body":{"components/RegisterComponent.html":{}}}],["constructor(getfullissuegraphdataquery",{"_index":2882,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["constructor(getlabelsgql",{"_index":3657,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["constructor(http",{"_index":661,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["constructor(id",{"_index":1813,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"classes/Vector.html":{}}}],["constructor(initialposition",{"_index":3263,"title":{},"body":{"classes/IssueGroupContainerParentBehaviour.html":{}}}],["constructor(labelstore",{"_index":3643,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["constructor(maticonregistry",{"_index":285,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(notify",{"_index":5061,"title":{},"body":{"components/QueryComponent.html":{}}}],["constructor(overlay",{"_index":1194,"title":{},"body":{"injectables/ComponentContextMenuService.html":{}}}],["constructor(private",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"interfaces/userMock.html":{}}}],["constructor(projectstore",{"_index":4768,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["constructor(public",{"_index":62,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/IssueGraphControlsComponent.html":{},"classes/MultiSourceList.html":{},"components/ProfileSettingsDialogComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["constructor(qlistprojectcomponents",{"_index":1365,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["constructor(qlistprojects",{"_index":4968,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["constructor(qsearchusers",{"_index":5543,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(queries",{"_index":1873,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/NodeCache.html":{}}}],["constructor(route",{"_index":3841,"title":{},"body":{"components/LoginComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProjectIssueListComponent.html":{}}}],["constructor(router",{"_index":625,"title":{},"body":{"guards/AuthGuard.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"components/NodeDetailsComponent.html":{},"injectables/StateService.html":{}}}],["constructor(spec",{"_index":3924,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["constructor(ss",{"_index":5313,"title":{},"body":{"components/SideNavComponent.html":{}}}],["constructor(template",{"_index":4997,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["constructor(toastr",{"_index":5525,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["constructor(updatecomponentmutation",{"_index":1317,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["constructor(x",{"_index":3718,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["constructors",{"_index":1231,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["consumed",{"_index":2894,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{}}}],["consumedby",{"_index":2342,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["consumer",{"_index":4330,"title":{},"body":{"interfaces/Positions.html":{}}}],["consumerid",{"_index":4573,"title":{},"body":{"interfaces/Positions.html":{}}}],["consuming",{"_index":4536,"title":{},"body":{"interfaces/Positions.html":{}}}],["contain",{"_index":808,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/FilterSelection.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"miscellaneous/typealiases.html":{}}}],["contained",{"_index":1247,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/RelationEdge.html":{}}}],["container",{"_index":1189,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentNode.html":{},"components/FrameComponent.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"interfaces/Position.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"interfaces/RelationEdge.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{},"miscellaneous/enumerations.html":{}}}],["containers",{"_index":4683,"title":{},"body":{"interfaces/Positions.html":{}}}],["containing",{"_index":901,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/FrameComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/TopToolbarComponent.html":{},"index.html":{}}}],["contains",{"_index":1005,"title":{},"body":{"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"injectables/LabelStoreService.html":{},"components/MarkdownEditorComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["content",{"_index":267,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"classes/CCIMSValidators.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{}}}],["content.nativeelement.addeventlistener('mousedown",{"_index":1134,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["contentchild",{"_index":788,"title":{},"body":{"components/CacheNodeComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["contentchild(itemdirective",{"_index":781,"title":{},"body":{"components/CacheNodeComponent.html":{},"components/SetEditorComponent.html":{}}}],["contentchild(querybodydirective",{"_index":5030,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["contentchild(querybuttondirective",{"_index":5031,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["contentchild(timelinecoalesceditemsdirective",{"_index":5451,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["contentchild(timelineitemdeleteddirective",{"_index":5453,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["contentchild(timelinesingleitemdirective",{"_index":5449,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["contents",{"_index":2598,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["contents'},{'name",{"_index":133,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["contents.component",{"_index":467,"title":{},"body":{"modules/AppModule.html":{},"components/CommentComponent.html":{}}}],["contents.component.html",{"_index":2600,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.scss",{"_index":2599,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts",{"_index":2597,"title":{},"body":{"components/IssueContentsComponent.html":{},"coverage.html":{}}}],["contents.component.ts:15",{"_index":2610,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts:16",{"_index":2611,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts:17",{"_index":2612,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts:19",{"_index":2622,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts:20",{"_index":2623,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts:21",{"_index":2619,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts:22",{"_index":2620,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts:24",{"_index":2621,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts:25",{"_index":2624,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts:26",{"_index":2609,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts:49",{"_index":2613,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts:57",{"_index":2616,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts:64",{"_index":2615,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contentvalidator",{"_index":729,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["context",{"_index":443,"title":{},"body":{"modules/AppModule.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"modules/GraphQLModule.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"interfaces/Positions.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["contextmenutype",{"_index":4435,"title":{},"body":{"interfaces/Positions.html":{}}}],["contextmenutypefornodetype(node",{"_index":4439,"title":{},"body":{"interfaces/Positions.html":{}}}],["continue",{"_index":923,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/Vector.html":{}}}],["contrast",{"_index":809,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"modules/GraphQLModule.html":{}}}],["control",{"_index":1661,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"interfaces/DialogData-1.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["control.value",{"_index":2113,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["control.value}).subscribe(({data",{"_index":5133,"title":{},"body":{"components/RegisterComponent.html":{}}}],["controlled",{"_index":1646,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["controls",{"_index":1093,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"components/IssueGraphControlsComponent.html":{},"components/RegisterComponent.html":{}}}],["controls'},{'name",{"_index":142,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["controls.component",{"_index":502,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GraphsModule.html":{}}}],["controls.component.html",{"_index":2988,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.scss",{"_index":2987,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts",{"_index":2974,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"coverage.html":{}}}],["controls.component.ts:108",{"_index":3005,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:26",{"_index":3017,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:27",{"_index":3019,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:29",{"_index":3020,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:32",{"_index":3014,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:33",{"_index":3012,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:34",{"_index":3024,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:36",{"_index":3023,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:38",{"_index":3015,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:39",{"_index":2996,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:41",{"_index":3013,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:50",{"_index":3022,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:57",{"_index":3009,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:66",{"_index":2997,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:74",{"_index":3004,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls/issue",{"_index":501,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GraphsModule.html":{},"components/IssueGraphControlsComponent.html":{},"coverage.html":{}}}],["conversion",{"_index":2877,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["convert",{"_index":2263,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueLabelComponent.html":{}}}],["converts",{"_index":2304,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"classes/TimeFormatter.html":{}}}],["convertvalueforfilter",{"_index":5697,"title":{},"body":{"coverage.html":{}}}],["convertvalueforfilter(predicates[id].type",{"_index":2853,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["convertvalueforfilter(type",{"_index":2831,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["coordinate",{"_index":3133,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["coordinates",{"_index":4441,"title":{},"body":{"interfaces/Positions.html":{}}}],["coressponding",{"_index":3002,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["corner",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["corner.svg",{"_index":300,"title":{},"body":{"components/AppComponent.html":{}}}],["correct",{"_index":751,"title":{},"body":{"classes/CCIMSValidators.html":{},"interfaces/CoalescedTimelineItem.html":{},"interfaces/Positions.html":{},"classes/TimeFormatter.html":{}}}],["correctly",{"_index":1913,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["correspond",{"_index":2158,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"components/SetEditorComponent.html":{},"interfaces/TextFragment.html":{}}}],["corresponding",{"_index":864,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{}}}],["corresponds",{"_index":4585,"title":{},"body":{"interfaces/Positions.html":{}}}],["count",{"_index":889,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["count(c",{"_index":1942,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["count.tostring",{"_index":4614,"title":{},"body":{"interfaces/Positions.html":{}}}],["counter",{"_index":5603,"title":{},"body":{"classes/Vector.html":{}}}],["counts",{"_index":2290,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{}}}],["cover",{"_index":4037,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["coverage",{"_index":5611,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":115,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["create(issueinput",{"_index":3591,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["create(name",{"_index":2572,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"injectables/ProjectStoreService.html":{}}}],["createcomponent",{"_index":1311,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["createcomponent(input",{"_index":1332,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["createcomponentdata",{"_index":1391,"title":{"interfaces/CreateComponentData.html":{}},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"coverage.html":{}}}],["createcomponentdialogcomponent",{"_index":114,"title":{"components/CreateComponentDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createcomponentdialogref",{"_index":4723,"title":{},"body":{"interfaces/Positions.html":{}}}],["createcomponentdialogref.afterclosed().subscribe(componentinformation",{"_index":4725,"title":{},"body":{"interfaces/Positions.html":{}}}],["createcomponentgql",{"_index":1324,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["createcomponentinput",{"_index":1333,"title":{},"body":{"injectables/ComponentStoreService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["createcomponentinterfacegql",{"_index":2562,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["createcomponentinterfaceinput",{"_index":2580,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["createcomponentmutation",{"_index":1323,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["createcomponentnode",{"_index":1213,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["createcomponentnode(component",{"_index":1250,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["createconsumptionedge",{"_index":1218,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["createconsumptionedge(componentid",{"_index":1282,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["created",{"_index":924,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"injectables/ComponentStoreService.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{}}}],["createdby",{"_index":939,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["createeditlabeldialogcomponent",{"_index":116,"title":{"components/CreateEditLabelDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createerrorlink",{"_index":5673,"title":{},"body":{"coverage.html":{}}}],["createerrorlink(authservice",{"_index":2462,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["createinterfacedata",{"_index":1530,"title":{"interfaces/CreateInterfaceData.html":{}},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["createinterfacedialogcomponent",{"_index":120,"title":{"components/CreateInterfaceDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createinterfacedialogref",{"_index":4374,"title":{},"body":{"interfaces/Positions.html":{}}}],["createinterfacedialogref.afterclosed().subscribe((interfaceid",{"_index":4376,"title":{},"body":{"interfaces/Positions.html":{}}}],["createinterfacemutation",{"_index":2571,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["createinterfacenode",{"_index":1214,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["createinterfacenode(intrface",{"_index":1256,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["createinterfaceprovisionedge",{"_index":1219,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["createinterfaceprovisionedge(componentid",{"_index":1287,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["createissue",{"_index":3576,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["createissuedialogcomponent",{"_index":122,"title":{"components/CreateIssueDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createissuefoldernode",{"_index":1216,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["createissuefoldernode(node",{"_index":1269,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["createissuegql",{"_index":3548,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["createissuegroupcontainernode",{"_index":1215,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["createissuegroupcontainernode(node",{"_index":1262,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["createissueinput",{"_index":1569,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"injectables/IssueStoreService.html":{}}}],["createitem",{"_index":4014,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["createlabeldialogdata",{"_index":1451,"title":{"interfaces/CreateLabelDialogData.html":{}},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"coverage.html":{}}}],["createnode",{"_index":4070,"title":{},"body":{"classes/NodeCache.html":{}}}],["createnode(id",{"_index":1996,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["createproject",{"_index":4942,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["createprojectdialogcomponent",{"_index":124,"title":{"components/CreateProjectDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createprojectdialogref",{"_index":4781,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["createprojectdialogref.afterclosed().subscribe(result",{"_index":4783,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["createprojectgql",{"_index":4943,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["createprojectinput",{"_index":4954,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["createrelationedge",{"_index":1217,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["createrelationedge(sourceid",{"_index":1272,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["creates",{"_index":1807,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphQLModule.html":{},"injectables/IssueGraphApiService.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["creating",{"_index":1468,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["creation",{"_index":1228,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"modules/GraphQLModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/variables.html":{}}}],["creator",{"_index":928,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["creator's",{"_index":931,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["credentials",{"_index":2480,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["crud",{"_index":3534,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["css",{"_index":4289,"title":{},"body":{"interfaces/Positions.html":{}}}],["current",{"_index":549,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/LabelStoreService.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"miscellaneous/enumerations.html":{}}}],["current_user_node",{"_index":2625,"title":{},"body":{"components/IssueContentsComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["current_user_node.id",{"_index":5912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentcolor",{"_index":5276,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["currentdata",{"_index":1790,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["currenthasnode(key",{"_index":1954,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["currentissueid",{"_index":4484,"title":{},"body":{"interfaces/Positions.html":{}}}],["currentitems",{"_index":1878,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["currently",{"_index":617,"title":{},"body":{"guards/AuthGuard.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueFilterComponent.html":{},"components/LabelSearchComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{}}}],["currentqueryparams",{"_index":1794,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["currentuser",{"_index":639,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/IssueContentsComponent.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{}}}],["currentusergql",{"_index":5546,"title":{},"body":{"injectables/UsersService.html":{}}}],["currentusersub",{"_index":2602,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["currentusersubject",{"_index":653,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["currentuservalue",{"_index":660,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["currentviewwindow",{"_index":4636,"title":{},"body":{"interfaces/Positions.html":{}}}],["currentvisiblearea",{"_index":4249,"title":{},"body":{"interfaces/Positions.html":{}}}],["cursor",{"_index":126,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["cursor(c",{"_index":1939,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["cursor[objkey",{"_index":3988,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["cursorpaginatorcomponent",{"_index":125,"title":{"components/CursorPaginatorComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["custom_elements_schema",{"_index":347,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["customevent",{"_index":4357,"title":{},"body":{"interfaces/Positions.html":{}}}],["d4d4d4",{"_index":5480,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["dark",{"_index":3318,"title":{},"body":{"components/IssueLabelComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["dark_mode",{"_index":5290,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["dashboard",{"_index":3066,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["dashed",{"_index":4510,"title":{},"body":{"interfaces/Positions.html":{}}}],["data",{"_index":234,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"index.html":{},"interfaces/userMock.html":{}}}],["data.checkusername",{"_index":5134,"title":{},"body":{"components/RegisterComponent.html":{}}}],["data.color",{"_index":1481,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["data.component.id",{"_index":3444,"title":{},"body":{"components/IssueListComponent.html":{}}}],["data.createproject.project.id",{"_index":1634,"title":{},"body":{"components/CreateProjectDialogComponent.html":{}}}],["data.currentuser",{"_index":5914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.emptyresultslabel",{"_index":5270,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["data.emptysuggestionslabel",{"_index":5271,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["data.length",{"_index":5900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node",{"_index":5908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.assignees.pageinfo",{"_index":5888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.assignees.totalcount",{"_index":5887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.components.pageinfo",{"_index":5850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.components.totalcount",{"_index":5849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.interfaces.pageinfo",{"_index":5857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.interfaces.totalcount",{"_index":5856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.issues.pageinfo",{"_index":5861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.issues.totalcount",{"_index":5860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.issuesonlocation.pageinfo",{"_index":5867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.issuesonlocation.totalcount",{"_index":5866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.labels.nodes",{"_index":3672,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["data.node.labels.pageinfo",{"_index":5881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.labels.totalcount",{"_index":5880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.linkedbyissues.pageinfo",{"_index":5897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.linkedbyissues.totalcount",{"_index":5896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.linkingissues.nodes.map(gqlissue",{"_index":2311,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["data.node.linkstoissues.pageinfo",{"_index":5892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.linkstoissues.totalcount",{"_index":5891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.locations.pageinfo",{"_index":5877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.locations.totalcount",{"_index":5876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.timeline.pageinfo",{"_index":5872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.timeline.totalcount",{"_index":5871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.projects.edges.map(edge",{"_index":4962,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["data.projects.pageinfo",{"_index":5845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.projects.totalcount",{"_index":5844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.searchuser",{"_index":5563,"title":{},"body":{"injectables/UsersService.html":{}}}],["data.title",{"_index":5155,"title":{},"body":{"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{}}}],["data.ts",{"_index":2254,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["data.ts:100",{"_index":2403,"title":{},"body":{"classes/GraphInterface.html":{}}}],["data.ts:101",{"_index":2405,"title":{},"body":{"classes/GraphInterface.html":{}}}],["data.ts:102",{"_index":2406,"title":{},"body":{"classes/GraphInterface.html":{}}}],["data.ts:103",{"_index":2402,"title":{},"body":{"classes/GraphInterface.html":{}}}],["data.ts:104",{"_index":2404,"title":{},"body":{"classes/GraphInterface.html":{}}}],["data.ts:106",{"_index":2407,"title":{},"body":{"classes/GraphInterface.html":{}}}],["data.ts:119",{"_index":2408,"title":{},"body":{"classes/GraphInterface.html":{}}}],["data.ts:133",{"_index":2259,"title":{},"body":{"classes/GraphComponent.html":{}}}],["data.ts:134",{"_index":2257,"title":{},"body":{"classes/GraphComponent.html":{}}}],["data.ts:135",{"_index":2258,"title":{},"body":{"classes/GraphComponent.html":{}}}],["data.ts:141",{"_index":2262,"title":{},"body":{"classes/GraphComponent.html":{}}}],["data.ts:152",{"_index":2266,"title":{},"body":{"classes/GraphComponent.html":{}}}],["data.ts:169",{"_index":2412,"title":{},"body":{"classes/GraphIssue.html":{}}}],["data.ts:170",{"_index":2411,"title":{},"body":{"classes/GraphIssue.html":{}}}],["data.ts:171",{"_index":2414,"title":{},"body":{"classes/GraphIssue.html":{}}}],["data.ts:172",{"_index":2413,"title":{},"body":{"classes/GraphIssue.html":{}}}],["data.ts:178",{"_index":2416,"title":{},"body":{"classes/GraphIssue.html":{}}}],["data.ts:190",{"_index":2415,"title":{},"body":{"classes/GraphIssue.html":{}}}],["data.ts:37",{"_index":2401,"title":{},"body":{"classes/GraphDataFactory.html":{}}}],["data.ts:48",{"_index":2400,"title":{},"body":{"classes/GraphDataFactory.html":{}}}],["data.userstoadd",{"_index":4889,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["data.userstodelete",{"_index":4898,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["data.values",{"_index":3454,"title":{},"body":{"components/IssueListComponent.html":{}}}],["data.verificationname",{"_index":5164,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["data/issue",{"_index":3027,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["data/label/label",{"_index":2135,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["data/project/project",{"_index":543,"title":{},"body":{"interfaces/AppState.html":{},"components/ProjectListComponent.html":{},"injectables/StateService.html":{}}}],["data[0]?.id",{"_index":5902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data[data.length",{"_index":5904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dataaspromise",{"_index":1686,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["database",{"_index":232,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectStoreService.html":{}}}],["datalist",{"_index":833,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/IssueContentsComponent.html":{},"components/IssueListComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["datalist(this.queries",{"_index":2089,"title":{},"body":{"injectables/DataService.html":{}}}],["datanode",{"_index":785,"title":{"classes/DataNode.html":{}},"body":{"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/NodeCache.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"coverage.html":{}}}],["datanode(this.queries",{"_index":1999,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["datanode.hasdata",{"_index":2011,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["datanode.insertresult(node",{"_index":2022,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["datanodes",{"_index":1989,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["dataquery",{"_index":1667,"title":{"classes/DataQuery.html":{}},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{}}}],["dataquery:103",{"_index":1694,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:137",{"_index":1700,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:180",{"_index":1713,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:189",{"_index":1709,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:208",{"_index":1715,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:219",{"_index":1712,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:247",{"_index":1720,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:330",{"_index":1699,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:52",{"_index":1693,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:53",{"_index":1698,"title":{},"body":{"classes/DataNode.html":{}}}],["dataservice",{"_index":769,"title":{"injectables/DataService.html":{}},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["dataservice.getlist(spec.sourcenodes",{"_index":3961,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["dataservice.getnode(somenodeid",{"_index":1705,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["datasource",{"_index":3362,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["datatype",{"_index":2814,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["date(date.parse(time)).tostring",{"_index":5413,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["date(nowms",{"_index":5417,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["date(pasttimems",{"_index":5419,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["date.now",{"_index":1834,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"classes/TimeFormatter.html":{}}}],["date.parse(datestring",{"_index":5415,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["date.parse(firstitem.createdat",{"_index":961,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["datestring",{"_index":5407,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["day",{"_index":5437,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["days",{"_index":81,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"classes/TimeFormatter.html":{}}}],["db",{"_index":1538,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{}}}],["deal",{"_index":1772,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["debounce",{"_index":1696,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["debounced",{"_index":1886,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["debouncetime",{"_index":4224,"title":{},"body":{"interfaces/Positions.html":{}}}],["debouncetime(300",{"_index":4311,"title":{},"body":{"interfaces/Positions.html":{}}}],["debugnologin",{"_index":5785,"title":{},"body":{"index.html":{}}}],["decide",{"_index":888,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["decides",{"_index":914,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["declarations",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"index.html":{}}}],["declare",{"_index":1750,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{}}}],["declared",{"_index":2503,"title":{},"body":{"modules/GraphsModule.html":{}}}],["decode",{"_index":3808,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["decodelistid",{"_index":2066,"title":{},"body":{"injectables/DataService.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["decodelistid(id",{"_index":3824,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["decodelistid(id).type",{"_index":2087,"title":{},"body":{"injectables/DataService.html":{}}}],["decodenodeid",{"_index":1729,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["decodenodeid(firstkey",{"_index":1947,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["decodenodeid(id",{"_index":3806,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"interfaces/NodeId.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["decodenodeid(keys[keys.length",{"_index":1953,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["decodenodeid(parts[0",{"_index":3825,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["decorators",{"_index":243,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CacheNodeComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TimelineItemComponent.html":{}}}],["deep",{"_index":1617,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/LabelSearchComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/TimelineItemComponent.html":{}}}],["default",{"_index":50,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["defaultdictionary",{"_index":2273,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["defaultmenutitle",{"_index":5307,"title":{},"body":{"components/SideNavComponent.html":{}}}],["defaultoptions",{"_index":2434,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":4903,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["define",{"_index":1401,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"modules/GraphQLModule.html":{},"directives/ItemDirective.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":37,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"index.html":{}}}],["defines",{"_index":1611,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["definition",{"_index":5786,"title":{},"body":{"index.html":{}}}],["definitions",{"_index":1227,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"index.html":{}}}],["degrees",{"_index":3723,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["del",{"_index":1028,"title":{},"body":{"components/CommentComponent.html":{},"classes/MultiSourceList.html":{},"components/ProjectOverviewComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["delay",{"_index":1717,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["delete",{"_index":1021,"title":{},"body":{"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/typealiases.html":{}}}],["delete(id",{"_index":2575,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"injectables/ProjectStoreService.html":{}}}],["deletecomment",{"_index":980,"title":{},"body":{"components/CommentComponent.html":{},"injectables/IssueStoreService.html":{}}}],["deletecomment(deleteissuecommentinput",{"_index":3594,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["deletecomponent",{"_index":1312,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["deletecomponent(id",{"_index":1335,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["deletecomponentgql",{"_index":1320,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["deletecomponentinput",{"_index":1348,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["deletecomponentinterfacegql",{"_index":2566,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["deletecomponentinterfaceinput",{"_index":2581,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["deletecomponentmutation",{"_index":1319,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["deleted",{"_index":925,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"interfaces/DialogData-1.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["deletedata",{"_index":4172,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["deleteinterfacemutation",{"_index":2565,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["deleteissuecommentgql",{"_index":3556,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["deleteissuecommentinput",{"_index":3595,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["deleteissuecommentmutation",{"_index":3555,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["deleteitem",{"_index":4016,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["deletememberdialogref",{"_index":4893,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["deletememberdialogref.afterclosed().subscribe(data",{"_index":4897,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["deleteproject",{"_index":4915,"title":{},"body":{"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{}}}],["deleteprojectgql",{"_index":4944,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["deleteprojectinput",{"_index":4955,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["deletequery",{"_index":4127,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["deletes",{"_index":991,"title":{},"body":{"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["deleting",{"_index":1300,"title":{},"body":{"injectables/ComponentStoreService.html":{},"interfaces/DialogData-1.html":{},"components/NodeDetailsComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["deletion",{"_index":1030,"title":{},"body":{"components/CommentComponent.html":{},"injectables/InterfaceStoreService.html":{},"interfaces/Positions.html":{}}}],["deletions",{"_index":1493,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["delivers",{"_index":2305,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["demo",{"_index":4799,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["denoting",{"_index":2913,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["dependencies",{"_index":332,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":1293,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["dependent",{"_index":4455,"title":{},"body":{"interfaces/Positions.html":{}}}],["depending",{"_index":3384,"title":{},"body":{"components/IssueListComponent.html":{}}}],["depends",{"_index":1292,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{}}}],["depicted",{"_index":4605,"title":{},"body":{"interfaces/Positions.html":{}}}],["deps",{"_index":2498,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["derived",{"_index":4717,"title":{},"body":{"interfaces/Positions.html":{}}}],["describes",{"_index":2280,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"miscellaneous/variables.html":{}}}],["describing",{"_index":3153,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["description",{"_index":226,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphIssue.html":{},"modules/GraphsModule.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"classes/Vector.html":{}}}],["description).subscribe(({data",{"_index":1541,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["descriptionvalidator",{"_index":1626,"title":{},"body":{"components/CreateProjectDialogComponent.html":{}}}],["deselect",{"_index":5196,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["design/icons",{"_index":399,"title":{},"body":{"modules/AppModule.html":{}}}],["desired",{"_index":2017,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"classes/NodeCache.html":{},"components/TextDisplayComponent.html":{},"classes/Vector.html":{}}}],["destroy",{"_index":2989,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/Positions.html":{}}}],["destroyed",{"_index":1775,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["destruction",{"_index":4282,"title":{},"body":{"interfaces/Positions.html":{}}}],["detail",{"_index":158,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["detail'},{'name",{"_index":135,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["detail.component",{"_index":384,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["detail.component.html",{"_index":2660,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.scss",{"_index":2659,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts",{"_index":2658,"title":{},"body":{"components/IssueDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:118",{"_index":2680,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:23",{"_index":2689,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:26",{"_index":2687,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:29",{"_index":2686,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:33",{"_index":2690,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:36",{"_index":2691,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:39",{"_index":2692,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:41",{"_index":2685,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:42",{"_index":2688,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:45",{"_index":2684,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:48",{"_index":2671,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:51",{"_index":2682,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:68",{"_index":2679,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:79",{"_index":2672,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:97",{"_index":2676,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail/comment/comment.component",{"_index":458,"title":{},"body":{"modules/AppModule.html":{}}}],["detail/comment/comment.component.ts",{"_index":973,"title":{},"body":{"components/CommentComponent.html":{},"coverage.html":{}}}],["detail/comment/comment.component.ts:21",{"_index":999,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:22",{"_index":997,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:23",{"_index":998,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:25",{"_index":988,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:26",{"_index":987,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:27",{"_index":989,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:28",{"_index":996,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:29",{"_index":986,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:49",{"_index":993,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:66",{"_index":990,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/issue",{"_index":383,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"modules/GraphsModule.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["detail/linked",{"_index":468,"title":{},"body":{"modules/AppModule.html":{},"components/LinkedIssueItemComponent.html":{},"coverage.html":{}}}],["detail/timeformatter",{"_index":831,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/IssueDetailComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["detail/timeformatter.ts",{"_index":5387,"title":{},"body":{"classes/TimeFormatter.html":{},"coverage.html":{}}}],["detail/timeformatter.ts:11",{"_index":5392,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["detail/timeformatter.ts:19",{"_index":5403,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["detail/timeformatter.ts:50",{"_index":5410,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["detail/timeline/coalesced/timeline",{"_index":474,"title":{},"body":{"modules/AppModule.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"coverage.html":{}}}],["detail/timeline/timeline.component",{"_index":457,"title":{},"body":{"modules/AppModule.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["detail/timeline/timeline.component.ts",{"_index":807,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["detailed",{"_index":2693,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["details",{"_index":459,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueDetailComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["details'},{'name",{"_index":169,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["details.component",{"_index":448,"title":{},"body":{"modules/AppModule.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{}}}],["details.component.html",{"_index":4079,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.scss",{"_index":4078,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts",{"_index":4077,"title":{},"body":{"components/NodeDetailsComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["details.component.ts:130",{"_index":4099,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:145",{"_index":4101,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:152",{"_index":4103,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:160",{"_index":4104,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:165",{"_index":4106,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:169",{"_index":4105,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:201",{"_index":4110,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:249",{"_index":4107,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:263",{"_index":4108,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:277",{"_index":4111,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:292",{"_index":4112,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:43",{"_index":4098,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:47",{"_index":4096,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:51",{"_index":4097,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:55",{"_index":4094,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:66",{"_index":4116,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:67",{"_index":4113,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:68",{"_index":4115,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:69",{"_index":4114,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:70",{"_index":4118,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:71",{"_index":4117,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:74",{"_index":4121,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:75",{"_index":4120,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:76",{"_index":4123,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:77",{"_index":4119,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:78",{"_index":4122,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:79",{"_index":4093,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details/node",{"_index":447,"title":{},"body":{"modules/AppModule.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["detailscallback",{"_index":1146,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["determine",{"_index":3342,"title":{},"body":{"components/IssueLabelComponent.html":{},"components/TopToolbarComponent.html":{},"classes/Vector.html":{}}}],["determines",{"_index":550,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"injectables/StateService.html":{}}}],["dev",{"_index":5765,"title":{},"body":{"index.html":{}}}],["development",{"_index":5761,"title":{},"body":{"index.html":{}}}],["dgql",{"_index":791,"title":{},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"injectables/ComponentsService.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectsService.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/UserItemComponent.html":{},"injectables/UsersService.html":{}}}],["dgql/id",{"_index":792,"title":{},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["dgql/id.ts",{"_index":3797,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dgql/index.ts",{"_index":2043,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{}}}],["dgql/index.ts:24",{"_index":2057,"title":{},"body":{"injectables/DataService.html":{}}}],["dgql/index.ts:34",{"_index":2060,"title":{},"body":{"injectables/DataService.html":{}}}],["dgql/index.ts:39",{"_index":2062,"title":{},"body":{"injectables/DataService.html":{}}}],["dgql/index.ts:67",{"_index":2059,"title":{},"body":{"injectables/DataService.html":{}}}],["dgql/load.ts",{"_index":5639,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dgql/mutate",{"_index":2068,"title":{},"body":{"injectables/DataService.html":{}}}],["dgql/mutate.ts",{"_index":5642,"title":{},"body":{"coverage.html":{}}}],["dgql/queries/components.service.ts",{"_index":1360,"title":{},"body":{"injectables/ComponentsService.html":{},"coverage.html":{}}}],["dgql/queries/components.service.ts:12",{"_index":1372,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["dgql/queries/components.service.ts:20",{"_index":1380,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["dgql/queries/components.service.ts:24",{"_index":1382,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["dgql/queries/components.service.ts:28",{"_index":1375,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["dgql/queries/components.service.ts:32",{"_index":1377,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["dgql/queries/issues.service.ts",{"_index":5645,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["dgql/queries/projects.service.ts",{"_index":4965,"title":{},"body":{"injectables/ProjectsService.html":{},"coverage.html":{}}}],["dgql/queries/projects.service.ts:12",{"_index":4972,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["dgql/queries/projects.service.ts:18",{"_index":4977,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["dgql/queries/projects.service.ts:22",{"_index":4975,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["dgql/queries/queries.service.ts",{"_index":4980,"title":{},"body":{"injectables/QueriesService.html":{},"coverage.html":{}}}],["dgql/queries/queries.service.ts:10",{"_index":4984,"title":{},"body":{"injectables/QueriesService.html":{}}}],["dgql/queries/queries.service.ts:12",{"_index":4985,"title":{},"body":{"injectables/QueriesService.html":{}}}],["dgql/queries/queries.service.ts:13",{"_index":4986,"title":{},"body":{"injectables/QueriesService.html":{}}}],["dgql/queries/queries.service.ts:14",{"_index":4987,"title":{},"body":{"injectables/QueriesService.html":{}}}],["dgql/queries/queries.service.ts:15",{"_index":4988,"title":{},"body":{"injectables/QueriesService.html":{}}}],["dgql/queries/users.service.ts",{"_index":5542,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["dgql/queries/users.service.ts:11",{"_index":5547,"title":{},"body":{"injectables/UsersService.html":{}}}],["dgql/queries/users.service.ts:17",{"_index":5551,"title":{},"body":{"injectables/UsersService.html":{}}}],["dgql/queries/users.service.ts:35",{"_index":5549,"title":{},"body":{"injectables/UsersService.html":{}}}],["dgql/queries/util",{"_index":1386,"title":{},"body":{"injectables/ComponentsService.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{}}}],["dgql/queries/util.ts",{"_index":5074,"title":{},"body":{"interfaces/QueryListParams.html":{},"coverage.html":{}}}],["dgql/query",{"_index":793,"title":{},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["dgql/query.ts",{"_index":1664,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dgql/query.ts:103",{"_index":2025,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:137",{"_index":2027,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:180",{"_index":2030,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:189",{"_index":2028,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:198",{"_index":2032,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:208",{"_index":2031,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:219",{"_index":2029,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:247",{"_index":2033,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:273",{"_index":2042,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:326",{"_index":1726,"title":{},"body":{"classes/DataNode.html":{}}}],["dgql/query.ts:52",{"_index":2024,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:53",{"_index":2026,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:579",{"_index":4072,"title":{},"body":{"classes/NodeCache.html":{}}}],["dgql/query.ts:583",{"_index":4073,"title":{},"body":{"classes/NodeCache.html":{}}}],["dgql/query.ts:589",{"_index":4074,"title":{},"body":{"classes/NodeCache.html":{}}}],["dgql/query.ts:603",{"_index":4075,"title":{},"body":{"classes/NodeCache.html":{}}}],["dgql/query.ts:62",{"_index":2035,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:67",{"_index":2037,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:77",{"_index":2039,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:80",{"_index":2040,"title":{},"body":{"classes/DataQuery.html":{}}}],["dialog",{"_index":20,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"index.html":{},"interfaces/userMock.html":{}}}],["dialog'},{'name",{"_index":101,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["dialog.component",{"_index":59,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"modules/GraphsModule.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SetEditorComponent.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/userMock.html":{}}}],["dialog.component.html",{"_index":24,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/MultiSourceList.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.scss",{"_index":22,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/MultiSourceList.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts",{"_index":13,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/MultiSourceList.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["dialog.component.ts:102",{"_index":1458,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["dialog.component.ts:105",{"_index":3939,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:106",{"_index":1456,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["dialog.component.ts:11",{"_index":38,"title":{},"body":{"components/AccessTokenDialogComponent.html":{}}}],["dialog.component.ts:12",{"_index":4734,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["dialog.component.ts:124",{"_index":3948,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:13",{"_index":48,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["dialog.component.ts:14",{"_index":247,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["dialog.component.ts:145",{"_index":1459,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["dialog.component.ts:148",{"_index":3935,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:15",{"_index":241,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{}}}],["dialog.component.ts:16",{"_index":245,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["dialog.component.ts:162",{"_index":3944,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:17",{"_index":251,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":252,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{}}}],["dialog.component.ts:19",{"_index":47,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["dialog.component.ts:192",{"_index":5264,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:193",{"_index":5268,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:194",{"_index":5266,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:195",{"_index":5265,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:196",{"_index":5267,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:197",{"_index":5261,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:198",{"_index":5263,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:199",{"_index":5253,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":1429,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["dialog.component.ts:205",{"_index":5262,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":1548,"title":{},"body":{"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":1545,"title":{},"body":{"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts:227",{"_index":5259,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:234",{"_index":5257,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:239",{"_index":5256,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:24",{"_index":44,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts:243",{"_index":5258,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:25",{"_index":1464,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{}}}],["dialog.component.ts:257",{"_index":5260,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:26",{"_index":1463,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["dialog.component.ts:268",{"_index":5254,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:27",{"_index":1431,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{}}}],["dialog.component.ts:28",{"_index":1433,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["dialog.component.ts:281",{"_index":5255,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:29",{"_index":242,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{}}}],["dialog.component.ts:30",{"_index":1432,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts:31",{"_index":1430,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["dialog.component.ts:32",{"_index":1628,"title":{},"body":{"components/CreateProjectDialogComponent.html":{}}}],["dialog.component.ts:33",{"_index":4732,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["dialog.component.ts:34",{"_index":1427,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["dialog.component.ts:36",{"_index":1568,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts:37",{"_index":1563,"title":{},"body":{"components/CreateIssueDialogComponent.html":{}}}],["dialog.component.ts:38",{"_index":1547,"title":{},"body":{"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["dialog.component.ts:39",{"_index":1428,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"classes/MultiSourceList.html":{}}}],["dialog.component.ts:40",{"_index":3930,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:41",{"_index":3932,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:42",{"_index":3931,"title":{},"body":{"classes/MultiSourceList.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts:43",{"_index":1627,"title":{},"body":{"components/CreateProjectDialogComponent.html":{},"classes/MultiSourceList.html":{},"components/RemoveDialogComponent.html":{}}}],["dialog.component.ts:45",{"_index":3927,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:46",{"_index":3928,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:47",{"_index":5152,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["dialog.component.ts:48",{"_index":3926,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:49",{"_index":3925,"title":{},"body":{"classes/MultiSourceList.html":{},"components/RemoveDialogComponent.html":{}}}],["dialog.component.ts:50",{"_index":5154,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["dialog.component.ts:51",{"_index":3929,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:52",{"_index":1425,"title":{},"body":{"components/CreateComponentDialogComponent.html":{}}}],["dialog.component.ts:54",{"_index":1546,"title":{},"body":{"components/CreateInterfaceDialogComponent.html":{}}}],["dialog.component.ts:57",{"_index":5153,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["dialog.component.ts:60",{"_index":1558,"title":{},"body":{"components/CreateIssueDialogComponent.html":{}}}],["dialog.component.ts:61",{"_index":3934,"title":{},"body":{"classes/MultiSourceList.html":{},"components/RemoveDialogComponent.html":{}}}],["dialog.component.ts:66",{"_index":3947,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:74",{"_index":1453,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["dialog.component.ts:75",{"_index":1556,"title":{},"body":{"components/CreateIssueDialogComponent.html":{}}}],["dialog.component.ts:77",{"_index":1461,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["dialog.component.ts:94",{"_index":1553,"title":{},"body":{"components/CreateIssueDialogComponent.html":{}}}],["dialog.component.ts:97",{"_index":3943,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:98",{"_index":1554,"title":{},"body":{"components/CreateIssueDialogComponent.html":{}}}],["dialog/access",{"_index":12,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"modules/AppModule.html":{},"components/SettingsDialogComponent.html":{},"coverage.html":{}}}],["dialog/add",{"_index":225,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"modules/GraphsModule.html":{},"components/ProjectMembersComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["dialog/create",{"_index":412,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"coverage.html":{}}}],["dialog/profile",{"_index":472,"title":{},"body":{"modules/AppModule.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"coverage.html":{}}}],["dialog/remove",{"_index":427,"title":{},"body":{"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{},"coverage.html":{}}}],["dialog/settings",{"_index":58,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"modules/AppModule.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["dialogdata",{"_index":1552,"title":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{}},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{},"coverage.html":{}}}],["dialogref",{"_index":28,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/MultiSourceList.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{}}}],["dialogref.afterclosed().subscribe(confirm",{"_index":2109,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["dialogs/access",{"_index":473,"title":{},"body":{"modules/AppModule.html":{}}}],["dialogs/add",{"_index":2519,"title":{},"body":{"modules/GraphsModule.html":{}}}],["dialogs/create",{"_index":428,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Positions.html":{}}}],["dialogs/profile",{"_index":471,"title":{},"body":{"modules/AppModule.html":{}}}],["dialogs/remove",{"_index":426,"title":{},"body":{"modules/AppModule.html":{}}}],["dialogservice",{"_index":5178,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["didopen",{"_index":3776,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["difference",{"_index":4659,"title":{},"body":{"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["different",{"_index":2012,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["differs",{"_index":952,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["dimensions",{"_index":3215,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["direction",{"_index":1914,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueGraphControlsComponent.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"classes/Vector.html":{}}}],["directions",{"_index":3759,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["directive",{"_index":98,"title":{"directives/ItemDirective.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{}}}],["directives",{"_index":208,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"overview.html":{}}}],["directly",{"_index":1088,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"miscellaneous/variables.html":{}}}],["directory",{"_index":2559,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["disabled",{"_index":5021,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["disables",{"_index":5010,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["disappear",{"_index":4716,"title":{},"body":{"interfaces/Positions.html":{}}}],["discard",{"_index":1580,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/NodeDetailsComponent.html":{}}}],["display",{"_index":1092,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/UserItemComponent.html":{}}}],["display'},{'name",{"_index":197,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["display.component",{"_index":464,"title":{},"body":{"modules/AppModule.html":{}}}],["display.component.html",{"_index":5348,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.scss",{"_index":5347,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts",{"_index":5345,"title":{},"body":{"components/TextDisplayComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["display.component.ts:21",{"_index":5356,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:23",{"_index":5354,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:25",{"_index":5359,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:30",{"_index":5368,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:35",{"_index":5358,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:37",{"_index":5357,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:39",{"_index":5366,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:40",{"_index":5363,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:41",{"_index":5364,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:42",{"_index":5365,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:44",{"_index":5361,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:55",{"_index":5362,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display/text",{"_index":463,"title":{},"body":{"modules/AppModule.html":{},"components/TextDisplayComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["displayed",{"_index":3294,"title":{},"body":{"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/SideNavComponent.html":{},"interfaces/userMock.html":{}}}],["displayedcode",{"_index":3904,"title":{},"body":{"components/MarkdownPreviewComponent.html":{}}}],["displaying",{"_index":4583,"title":{},"body":{"interfaces/Positions.html":{}}}],["displayname",{"_index":2823,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["displays",{"_index":2379,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueDetailComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/SetEditorComponent.html":{},"components/SideNavComponent.html":{},"components/UserItemComponent.html":{}}}],["distance",{"_index":3750,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{},"coverage.html":{}}}],["distance(newposition.x",{"_index":3222,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["distance(x",{"_index":3203,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["distancetoline",{"_index":5566,"title":{},"body":{"classes/Vector.html":{}}}],["distancetoline(sourcepoint",{"_index":5580,"title":{},"body":{"classes/Vector.html":{}}}],["distinctuntilchanged",{"_index":2131,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["distinguish",{"_index":2019,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["document",{"_index":4391,"title":{},"body":{"interfaces/Positions.html":{}}}],["document.queryselector('#buttoncreateproject",{"_index":4787,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["documentation",{"_index":1882,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/MarkdownPreviewComponent.html":{},"classes/NodeCache.html":{},"coverage.html":{},"index.html":{}}}],["doesn't",{"_index":2016,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/LinkedIssueItemComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["dographlayout",{"_index":4227,"title":{},"body":{"interfaces/Positions.html":{},"coverage.html":{}}}],["dographlayout(nodelist",{"_index":4709,"title":{},"body":{"interfaces/Positions.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["domsanitizer",{"_index":287,"title":{},"body":{"components/AppComponent.html":{}}}],["don't",{"_index":1771,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/RemoveDialogComponent.html":{}}}],["don\\'t",{"_index":2116,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["done",{"_index":1773,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["dont",{"_index":4260,"title":{},"body":{"interfaces/Positions.html":{}}}],["dot",{"_index":3521,"title":{},"body":{"components/IssueLocationComponent.html":{},"components/SetEditorDialogComponent.html":{},"classes/Vector.html":{}}}],["dot(other",{"_index":5588,"title":{},"body":{"classes/Vector.html":{}}}],["dot(target",{"_index":3724,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["dot(this",{"_index":5591,"title":{},"body":{"classes/Vector.html":{}}}],["dots",{"_index":5275,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["down",{"_index":2199,"title":{},"body":{"components/FrameComponent.html":{}}}],["drag",{"_index":4290,"title":{},"body":{"interfaces/Positions.html":{}}}],["dragged",{"_index":4319,"title":{},"body":{"interfaces/Positions.html":{}}}],["draggededge",{"_index":3120,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{}}}],["draghandles",{"_index":1281,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["draw",{"_index":2281,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{}}}],["drawer",{"_index":2195,"title":{},"body":{"components/FrameComponent.html":{}}}],["drawfolderrelations(node",{"_index":4621,"title":{},"body":{"interfaces/Positions.html":{}}}],["drawgraph",{"_index":1249,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["drawing",{"_index":2382,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{}}}],["draws",{"_index":4618,"title":{},"body":{"interfaces/Positions.html":{}}}],["dropped",{"_index":4326,"title":{},"body":{"interfaces/Positions.html":{}}}],["dropping",{"_index":4333,"title":{},"body":{"interfaces/Positions.html":{}}}],["duplicate",{"_index":1295,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"components/TimelineItemComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["duplicated",{"_index":5136,"title":{},"body":{"components/RegisterComponent.html":{}}}],["duplicates",{"_index":1294,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{}}}],["during",{"_index":5076,"title":{},"body":{"interfaces/QueryListParams.html":{}}}],["dynamic",{"_index":3081,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"interfaces/Positions.html":{},"coverage.html":{},"dependencies.html":{}}}],["dynamictemplate",{"_index":1265,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["dynamictemplate.dynamicnodetemplate",{"_index":3102,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["dynamictemplate.dynamictemplatecontext",{"_index":3094,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["e",{"_index":4388,"title":{},"body":{"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"components/RegisterComponent.html":{}}}],["e.g",{"_index":725,"title":{},"body":{"classes/CCIMSValidators.html":{},"interfaces/ComponentNode.html":{},"components/CursorPaginatorComponent.html":{},"injectables/DataService.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueItemComponent.html":{},"interfaces/IssueNode.html":{},"classes/MultiSourceList.html":{},"interfaces/Position.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/RelationEdge.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"classes/TimeFormatter.html":{},"index.html":{}}}],["e.preventdefault",{"_index":4797,"title":{},"body":{"components/ProjectListComponent.html":{},"components/RegisterComponent.html":{}}}],["e.stoppropagation",{"_index":4798,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["e6e6e6",{"_index":3897,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["each",{"_index":1241,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["early",{"_index":3769,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["east",{"_index":4218,"title":{},"body":{"interfaces/Positions.html":{}}}],["easy",{"_index":5448,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"index.html":{}}}],["edge",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{}}}],["edge.createdfrom",{"_index":4334,"title":{},"body":{"interfaces/Positions.html":{}}}],["edge.draghandles",{"_index":4343,"title":{},"body":{"interfaces/Positions.html":{}}}],["edge.markerend",{"_index":4346,"title":{},"body":{"interfaces/Positions.html":{}}}],["edge.node",{"_index":4963,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["edge.svg",{"_index":297,"title":{},"body":{"components/AppComponent.html":{}}}],["edge.type",{"_index":2970,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"interfaces/Positions.html":{}}}],["edge.validtargets.add(node.id.tostring",{"_index":4349,"title":{},"body":{"interfaces/Positions.html":{}}}],["edge.validtargets.add(original.target.tostring",{"_index":4338,"title":{},"body":{"interfaces/Positions.html":{}}}],["edge.validtargets.clear",{"_index":4337,"title":{},"body":{"interfaces/Positions.html":{}}}],["edge.validtargets.delete(existingedge.target.tostring",{"_index":4351,"title":{},"body":{"interfaces/Positions.html":{}}}],["edgeclasssetter",{"_index":2967,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["edges",{"_index":1233,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{}}}],["edgetype",{"_index":316,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueIconComponent.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["edgetype].filter(part",{"_index":3281,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["edgex",{"_index":4459,"title":{},"body":{"interfaces/Positions.html":{}}}],["edgey",{"_index":4461,"title":{},"body":{"interfaces/Positions.html":{}}}],["edit",{"_index":117,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["editable",{"_index":2695,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/SetEditorComponent.html":{}}}],["editbody",{"_index":978,"title":{},"body":{"components/CommentComponent.html":{},"components/IssueContentsComponent.html":{}}}],["editcomment",{"_index":981,"title":{},"body":{"components/CommentComponent.html":{}}}],["editcomment(body",{"_index":992,"title":{},"body":{"components/CommentComponent.html":{}}}],["edited",{"_index":1038,"title":{},"body":{"components/CommentComponent.html":{},"components/IssueContentsComponent.html":{}}}],["editexisting",{"_index":1469,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["editing",{"_index":1486,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{},"miscellaneous/typealiases.html":{}}}],["edititem",{"_index":4015,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["editmode",{"_index":4080,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/TextDisplayComponent.html":{}}}],["editor",{"_index":191,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentNode.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["editor'},{'name",{"_index":164,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["editor.component",{"_index":453,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["editor.component.html",{"_index":3881,"title":{},"body":{"components/MarkdownEditorComponent.html":{},"components/SetEditorComponent.html":{}}}],["editor.component.scss",{"_index":3880,"title":{},"body":{"components/MarkdownEditorComponent.html":{},"components/SetEditorComponent.html":{}}}],["editor.component.ts",{"_index":3877,"title":{},"body":{"components/MarkdownEditorComponent.html":{},"components/SetEditorComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["editor.component.ts:147",{"_index":5206,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:16",{"_index":3893,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["editor.component.ts:20",{"_index":3885,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["editor.component.ts:24",{"_index":3887,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["editor.component.ts:29",{"_index":3890,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["editor.component.ts:38",{"_index":5197,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:40",{"_index":5193,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:42",{"_index":5180,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:44",{"_index":5200,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:46",{"_index":5202,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:48",{"_index":5183,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:50",{"_index":5188,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:52",{"_index":5184,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:54",{"_index":5189,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:56",{"_index":5191,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:59",{"_index":5182,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:61",{"_index":5205,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:63",{"_index":5204,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:79",{"_index":5179,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor/markdown",{"_index":452,"title":{},"body":{"modules/AppModule.html":{},"components/MarkdownEditorComponent.html":{},"coverage.html":{}}}],["editor/set",{"_index":2523,"title":{},"body":{"modules/GraphsModule.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["editorcontainer",{"_index":3896,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["editoroptions",{"_index":3882,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["edits",{"_index":994,"title":{},"body":{"components/CommentComponent.html":{},"components/IssueFilterComponent.html":{},"components/SetEditorComponent.html":{}}}],["edittext",{"_index":5349,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["effect",{"_index":1839,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["effects",{"_index":4269,"title":{},"body":{"interfaces/Positions.html":{}}}],["elegant",{"_index":5555,"title":{},"body":{"injectables/UsersService.html":{}}}],["element",{"_index":97,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["element.assigneesstring",{"_index":3496,"title":{},"body":{"components/IssueListComponent.html":{}}}],["element.createdby.displayname",{"_index":3495,"title":{},"body":{"components/IssueListComponent.html":{}}}],["element.displayname",{"_index":4908,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["element.email",{"_index":4909,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["element.title",{"_index":3494,"title":{},"body":{"components/IssueListComponent.html":{}}}],["elementref",{"_index":1072,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/IssueDetailComponent.html":{},"components/SetEditorComponent.html":{}}}],["elements",{"_index":2157,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["ellipsis",{"_index":3790,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["elsewhere",{"_index":1710,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["email",{"_index":4843,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"interfaces/userMock.html":{}}}],["embedded",{"_index":4233,"title":{},"body":{"interfaces/Positions.html":{}}}],["emission",{"_index":3042,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{}}}],["emit",{"_index":1857,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/FilterSelection.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/LabelSearchComponent.html":{},"classes/NodeCache.html":{},"interfaces/TextFragment.html":{}}}],["emiterrortoallsubscribers(error",{"_index":1865,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["emits",{"_index":2980,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/RegisterComponent.html":{}}}],["emitselectedlabels",{"_index":2154,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["emitted",{"_index":2778,"title":{},"body":{"components/IssueFilterComponent.html":{},"interfaces/QueryListParams.html":{}}}],["emitting",{"_index":3059,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"injectables/LabelStoreService.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{}}}],["emitupdatetoallsubscribers",{"_index":1862,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["emoji_objects",{"_index":3062,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["empty",{"_index":903,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/FilterSelection.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"components/LabelSearchComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{}}}],["emptying",{"_index":2083,"title":{},"body":{"injectables/DataService.html":{}}}],["emptyresultslabel",{"_index":4013,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["emptysuggestionslabel",{"_index":4012,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["en",{"_index":406,"title":{},"body":{"modules/AppModule.html":{}}}],["en_us",{"_index":392,"title":{},"body":{"modules/AppModule.html":{}}}],["enable",{"_index":4795,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["enabled",{"_index":5011,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{}}}],["enablehtml",{"_index":2455,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["enables",{"_index":4546,"title":{},"body":{"interfaces/Positions.html":{}}}],["encodedid",{"_index":1997,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/NodeCache.html":{}}}],["encodelistid",{"_index":2065,"title":{},"body":{"injectables/DataService.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["encodelistid(id",{"_index":2088,"title":{},"body":{"injectables/DataService.html":{}}}],["encodelistid(ld",{"_index":3827,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["encodelistid(selector",{"_index":2076,"title":{},"body":{"injectables/DataService.html":{}}}],["encodenodeid",{"_index":1466,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["encodenodeid(id",{"_index":1497,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["encodenodeid(ld.node",{"_index":3828,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["encodenodeid(nd",{"_index":3813,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["encodenodeid(this.getnodeid(item",{"_index":4047,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["end",{"_index":1657,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["endcursor",{"_index":5903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["endpoint",{"_index":1751,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphQLModule.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["ensure",{"_index":5117,"title":{},"body":{"components/RegisterComponent.html":{}}}],["ensures",{"_index":735,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["enter",{"_index":1436,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RegisterComponent.html":{}}}],["entered",{"_index":2906,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"components/RegisterComponent.html":{}}}],["entities",{"_index":5412,"title":{},"body":{"classes/TimeFormatter.html":{},"index.html":{}}}],["entry",{"_index":2106,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["entry[1",{"_index":2858,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["enum",{"_index":1221,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/variables.html":{}}}],["enumdictionary",{"_index":2181,"title":{},"body":{"interfaces/FilterState.html":{},"miscellaneous/typealiases.html":{}}}],["enumerations",{"_index":5754,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":689,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/GraphQLModule.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":2490,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["environment.publicclientname",{"_index":5115,"title":{},"body":{"components/RegisterComponent.html":{}}}],["environment.signupurl",{"_index":2495,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["environments/environment",{"_index":690,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/GraphQLModule.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["equals",{"_index":918,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["equation",{"_index":3336,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["equivalent",{"_index":1972,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["err",{"_index":1600,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["err.message).join",{"_index":2470,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["error",{"_index":1033,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/FilterSelection.html":{},"modules/GraphQLModule.html":{},"components/LabelSearchComponent.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error('bad",{"_index":5226,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["error('could",{"_index":3807,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["error('not",{"_index":5916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error('parameters",{"_index":1877,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["error(`${nodetype[node.type",{"_index":5922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error(`${nodetype[type",{"_index":5926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error(`unknown",{"_index":2830,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["error(err",{"_index":5050,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["error.status",{"_index":3867,"title":{},"body":{"components/LoginComponent.html":{}}}],["errorconfig",{"_index":5534,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["errorlink",{"_index":2463,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["errormessage",{"_index":5028,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["errorpolicy",{"_index":2447,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":676,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/GraphQLModule.html":{},"components/IssueFilterComponent.html":{},"interfaces/User.html":{}}}],["essentially",{"_index":3716,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["etc",{"_index":5119,"title":{},"body":{"components/RegisterComponent.html":{}}}],["event",{"_index":583,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"injectables/StateService.html":{}}}],["event.detail.currentviewwindow",{"_index":4418,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.detail.dropposition",{"_index":4368,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.detail.edge",{"_index":4358,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.detail.eventsource",{"_index":4359,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.detail.node",{"_index":4394,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.detail.node.type",{"_index":4405,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.detail.rendered",{"_index":4501,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.detail.sourceevent.shiftkey",{"_index":4430,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.detail.sourceevent.stopimmediatepropagation",{"_index":4445,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.movementx",{"_index":1160,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["event.movementy",{"_index":1162,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["event.preventdefault",{"_index":4360,"title":{},"body":{"interfaces/Positions.html":{}}}],["eventemitter",{"_index":2776,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/SetEditorComponent.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["eventlisteneroreventlistenerobject",{"_index":4499,"title":{},"body":{"interfaces/Positions.html":{}}}],["events",{"_index":579,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"interfaces/CoalescedTimelineItem.html":{},"injectables/StateService.html":{}}}],["everywhere",{"_index":5080,"title":{},"body":{"interfaces/QueryListParams.html":{}}}],["ex",{"_index":3393,"title":{},"body":{"components/IssueListComponent.html":{},"interfaces/Positions.html":{}}}],["example",{"_index":88,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"injectables/IssueGraphApiService.html":{},"classes/NodeCache.html":{},"components/ProjectMembersComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"interfaces/userMock.html":{}}}],["examplecomponent",{"_index":1673,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["exclusive",{"_index":565,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["execute",{"_index":5790,"title":{},"body":{"index.html":{}}}],["executed",{"_index":3163,"title":{},"body":{"injectables/IssueGraphStateService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["execution",{"_index":4655,"title":{},"body":{"interfaces/Positions.html":{}}}],["exist",{"_index":1987,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/LabelStoreService.html":{},"classes/NodeCache.html":{},"components/SideNavComponent.html":{}}}],["existing",{"_index":1467,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"interfaces/TextFragment.html":{}}}],["exists",{"_index":927,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"modules/GraphQLModule.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["exit",{"_index":1015,"title":{},"body":{"components/CommentComponent.html":{}}}],["expects",{"_index":5007,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["expitarion",{"_index":79,"title":{},"body":{"components/AccessTokenDialogComponent.html":{}}}],["explanation",{"_index":5793,"title":{},"body":{"index.html":{}}}],["export",{"_index":60,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"interfaces/userMock.html":{}}}],["exports",{"_index":527,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{}}}],["expose",{"_index":673,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["exposes",{"_index":546,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["exposing",{"_index":651,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["expression",{"_index":2912,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["extended",{"_index":3289,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["extending",{"_index":1242,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["extends",{"_index":1200,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["extra",{"_index":2862,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["extract",{"_index":4392,"title":{},"body":{"interfaces/Positions.html":{}}}],["extractissueid(issuelist",{"_index":4491,"title":{},"body":{"interfaces/Positions.html":{}}}],["extracts",{"_index":4489,"title":{},"body":{"interfaces/Positions.html":{}}}],["f",{"_index":1885,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/QueryListParams.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["f.subscribe",{"_index":5083,"title":{},"body":{"interfaces/QueryListParams.html":{}}}],["f0ad4e",{"_index":5489,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["factor",{"_index":5606,"title":{},"body":{"classes/Vector.html":{}}}],["fade",{"_index":1658,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["fafafa",{"_index":5382,"title":{},"body":{"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["failed",{"_index":5027,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["fails",{"_index":674,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["false",{"_index":246,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/FilterSelection.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":3528,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["fb",{"_index":1398,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["feature",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"components/CreateIssueDialogComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueCategoryComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"miscellaneous/variables.html":{}}}],["feature_request",{"_index":4472,"title":{},"body":{"interfaces/Positions.html":{}}}],["featurerequestcount",{"_index":2331,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["featurerequests",{"_index":2341,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueGraphControlsComponent.html":{}}}],["feed",{"_index":2986,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["feeds",{"_index":2977,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["fetch",{"_index":775,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["fetched",{"_index":4100,"title":{},"body":{"components/NodeDetailsComponent.html":{},"injectables/ProjectStoreService.html":{}}}],["fetches",{"_index":4930,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["fetchpolicy",{"_index":2446,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["fetchuserfromstorage",{"_index":656,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["ff0036",{"_index":2752,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/TimelineItemComponent.html":{}}}],["fff",{"_index":279,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/TimelineItemComponent.html":{}}}],["field",{"_index":417,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/userMock.html":{}}}],["fields",{"_index":727,"title":{},"body":{"classes/CCIMSValidators.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueFilterComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["file.run",{"_index":5789,"title":{},"body":{"index.html":{}}}],["files",{"_index":5768,"title":{},"body":{"index.html":{}}}],["files.:warning",{"_index":5783,"title":{},"body":{"index.html":{}}}],["fill",{"_index":2551,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueDetailComponent.html":{}}}],["filter",{"_index":538,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectStoreService.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"injectables/UsersService.html":{},"interfaces/userMock.html":{}}}],["filter'},{'name",{"_index":137,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["filter(([appstate",{"_index":3168,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["filter(childid",{"_index":3239,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["filter(event",{"_index":582,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["filter(f",{"_index":1936,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["filter(part",{"_index":324,"title":{},"body":{"components/AppComponent.html":{}}}],["filter(timelineitem",{"_index":920,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["filter.component",{"_index":2540,"title":{},"body":{"modules/GraphsModule.html":{}}}],["filter.component.html",{"_index":2757,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.scss",{"_index":2756,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts",{"_index":2754,"title":{},"body":{"components/IssueFilterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filter.component.ts:107",{"_index":2774,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:109",{"_index":2773,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:111",{"_index":2777,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:114",{"_index":2801,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:115",{"_index":2800,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:118",{"_index":2797,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:120",{"_index":2802,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:122",{"_index":2803,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:128",{"_index":2786,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:138",{"_index":2794,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:148",{"_index":2789,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:158",{"_index":2780,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:165",{"_index":2792,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:175",{"_index":2783,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:187",{"_index":2784,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:198",{"_index":2796,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.fullsearch",{"_index":2850,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.username",{"_index":5557,"title":{},"body":{"injectables/UsersService.html":{}}}],["filter[id",{"_index":2852,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter_list",{"_index":2856,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filterby",{"_index":5075,"title":{},"body":{"interfaces/QueryListParams.html":{}}}],["filterchange",{"_index":2772,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filtered",{"_index":2292,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["filterelement",{"_index":2147,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"miscellaneous/typealiases.html":{}}}],["filtering",{"_index":2138,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["filterlabel",{"_index":2128,"title":{},"body":{"interfaces/FilterSelection.html":{},"injectables/IssueGraphApiService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/TextFragment.html":{},"miscellaneous/typealiases.html":{}}}],["filters",{"_index":2983,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{}}}],["filterselection",{"_index":2123,"title":{"interfaces/FilterSelection.html":{}},"body":{"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/IssueGraphControlsComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"coverage.html":{}}}],["filterstate",{"_index":2176,"title":{"interfaces/FilterState.html":{}},"body":{"interfaces/FilterState.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"coverage.html":{}}}],["filterstate.selectedcategories",{"_index":3173,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["filterstate.selectedfilter.labels",{"_index":3174,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["filterstate.selectedfilter.texts",{"_index":3175,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["filtertext",{"_index":4949,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["filtervalue",{"_index":4833,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["filtervalue.tolowercase",{"_index":4902,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["filtervalue.trim",{"_index":4901,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["finally",{"_index":1017,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{}}}],["find",{"_index":2156,"title":{},"body":{"interfaces/FilterSelection.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/LabelSearchComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/TextFragment.html":{}}}],["findidealcomponentposition(id",{"_index":4558,"title":{},"body":{"interfaces/Positions.html":{}}}],["finds",{"_index":4557,"title":{},"body":{"interfaces/Positions.html":{}}}],["finishcoalescing",{"_index":904,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["finished",{"_index":2723,"title":{},"body":{"components/IssueDetailComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["finishediting",{"_index":2668,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/TextDisplayComponent.html":{}}}],["finishediting(save",{"_index":2675,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["finishediting(saved",{"_index":5360,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["finishes",{"_index":2677,"title":{},"body":{"components/IssueDetailComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/TextDisplayComponent.html":{},"miscellaneous/typealiases.html":{}}}],["fired",{"_index":1631,"title":{},"body":{"components/CreateProjectDialogComponent.html":{}}}],["fires",{"_index":4791,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["first",{"_index":955,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"components/LoginComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"interfaces/QueryListParams.html":{},"components/SetEditorDialogComponent.html":{}}}],["first_page",{"_index":1652,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["firstcomponent",{"_index":4643,"title":{},"body":{"interfaces/Positions.html":{}}}],["firstitem",{"_index":936,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["firstitem.__typename",{"_index":938,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["firstitem.createdby.id",{"_index":958,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["firstkey",{"_index":1945,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["firstnode",{"_index":3765,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["firstnode.fixed",{"_index":3767,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["firstpage",{"_index":1958,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["firstpageitemid",{"_index":1944,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["fit",{"_index":4442,"title":{},"body":{"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/QueryComponent.html":{},"components/TextDisplayComponent.html":{}}}],["fitgraphinview",{"_index":4674,"title":{},"body":{"interfaces/Positions.html":{}}}],["fits",{"_index":4673,"title":{},"body":{"interfaces/Positions.html":{}}}],["fix",{"_index":3446,"title":{},"body":{"components/IssueListComponent.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["fixed",{"_index":3677,"title":{},"body":{"classes/LayoutNode.html":{}}}],["fixme",{"_index":887,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"interfaces/QueryListParams.html":{},"components/TextDisplayComponent.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{}}}],["flex",{"_index":1655,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["float",{"_index":1528,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/LoginComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["float:right",{"_index":272,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["floating",{"_index":4812,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["flow",{"_index":2247,"title":{},"body":{"components/FrameComponent.html":{}}}],["flying",{"_index":3764,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["focus",{"_index":4786,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["folder",{"_index":1309,"title":{},"body":{"injectables/ComponentStoreService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"injectables/IssueStoreService.html":{},"interfaces/Positions.html":{},"index.html":{}}}],["folderedgetypes",{"_index":1290,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{}}}],["folderedgetypes.relatedto",{"_index":1274,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["foldernode",{"_index":4625,"title":{},"body":{"interfaces/Positions.html":{}}}],["foldernode.type",{"_index":4627,"title":{},"body":{"interfaces/Positions.html":{}}}],["foldernodes",{"_index":4622,"title":{},"body":{"interfaces/Positions.html":{}}}],["folders",{"_index":2380,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{}}}],["following",{"_index":1881,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{}}}],["font",{"_index":1619,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"components/LoginComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["force",{"_index":3732,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["forces",{"_index":2100,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["forgot",{"_index":3874,"title":{},"body":{"components/LoginComponent.html":{}}}],["form",{"_index":89,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"interfaces/AppState.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"modules/GraphsModule.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/StateService.html":{},"classes/TimeFormatter.html":{}}}],["format",{"_index":752,"title":{},"body":{"classes/CCIMSValidators.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueLabelComponent.html":{},"classes/NodeCache.html":{}}}],["formatcategorydescription",{"_index":3368,"title":{},"body":{"components/IssueListComponent.html":{}}}],["formatcategorydescription(category",{"_index":3382,"title":{},"body":{"components/IssueListComponent.html":{}}}],["formatcategoryicon",{"_index":3369,"title":{},"body":{"components/IssueListComponent.html":{}}}],["formatcategoryicon(issue",{"_index":3386,"title":{},"body":{"components/IssueListComponent.html":{}}}],["formatissueopentime",{"_index":2669,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["formatted",{"_index":4102,"title":{},"body":{"components/NodeDetailsComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["formattime",{"_index":5388,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["formattime(time",{"_index":5391,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["formattimedifference",{"_index":5389,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["formattimedifference(datestring",{"_index":5402,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["formatting",{"_index":861,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueDetailComponent.html":{},"classes/TimeFormatter.html":{}}}],["formbuilder",{"_index":1392,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formcontrol",{"_index":249,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"interfaces/userMock.html":{}}}],["formgroup",{"_index":3855,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formsmodule",{"_index":386,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["forward",{"_index":1883,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphQLModule.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{}}}],["forward(f",{"_index":1943,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["fragment",{"_index":2159,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["fragments",{"_index":2140,"title":{},"body":{"interfaces/FilterSelection.html":{},"injectables/IssueGraphApiService.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"miscellaneous/typealiases.html":{}}}],["frame",{"_index":1131,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/FrameComponent.html":{}}}],["frame'},{'name",{"_index":129,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["frame.component.html",{"_index":2204,"title":{},"body":{"components/FrameComponent.html":{}}}],["frame.component.scss",{"_index":2203,"title":{},"body":{"components/FrameComponent.html":{}}}],["frame/frame.component",{"_index":409,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["framecomponent",{"_index":128,"title":{"components/FrameComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["fri",{"_index":5395,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["fromat",{"_index":2363,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["fromgql",{"_index":2255,"title":{},"body":{"classes/GraphComponent.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["fromgql(gqlgraphcomponent",{"_index":2260,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["fromgql(gqlinterface",{"_index":2344,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["fromgql(gqlissue",{"_index":2374,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["fromgqlnolinks",{"_index":2410,"title":{},"body":{"classes/GraphIssue.html":{}}}],["fromgqlnolinks(gqlpartialissue",{"_index":2369,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["fromsinglelist",{"_index":3920,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["fromsinglelist(list",{"_index":3933,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["frontend",{"_index":2264,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{}}}],["full",{"_index":94,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/CoalescedTimelineItem.html":{}}}],["fullissue",{"_index":3773,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["fullissuelink",{"_index":3774,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["fullissuesub",{"_index":3775,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["funcion",{"_index":3400,"title":{},"body":{"components/IssueListComponent.html":{}}}],["function",{"_index":595,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"interfaces/InterfaceNode.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"injectables/LabelStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"interfaces/RelationEdge.html":{},"components/SetEditorComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"classes/Vector.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functional",{"_index":5499,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["functionality",{"_index":860,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"classes/TimeFormatter.html":{}}}],["functions",{"_index":1229,"title":{},"body":{"interfaces/ComponentNode.html":{},"modules/GraphQLModule.html":{},"interfaces/InterfaceNode.html":{},"components/IssueDetailComponent.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["further",{"_index":596,"title":{},"body":{"interfaces/AppState.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/StateService.html":{}}}],["fut.then(data",{"_index":1841,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["g",{"_index":1517,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"components/IssueLabelComponent.html":{}}}],["g.append('circle",{"_index":3095,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["gamma",{"_index":3345,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["garbage",{"_index":1992,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["gather",{"_index":3832,"title":{},"body":{"components/LoginComponent.html":{}}}],["gathers",{"_index":2998,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["generate",{"_index":76,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"index.html":{}}}],["generated",{"_index":2555,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"injectables/IssueStoreService.html":{},"index.html":{}}}],["generated/graphql",{"_index":832,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/LabelStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["generatetoken",{"_index":31,"title":{},"body":{"components/AccessTokenDialogComponent.html":{}}}],["generation",{"_index":5771,"title":{},"body":{"index.html":{}}}],["generator",{"_index":2557,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"injectables/IssueStoreService.html":{},"components/MarkdownPreviewComponent.html":{},"index.html":{}}}],["generator.com",{"_index":5795,"title":{},"body":{"index.html":{}}}],["getall",{"_index":4931,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getall(filtertext",{"_index":4947,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getallfilter",{"_index":3655,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["getallfilter(projectid",{"_index":3660,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["getallprojectsgql",{"_index":4938,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getallquery",{"_index":4937,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getalltimelineitems",{"_index":3541,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getalltimelineitems(id",{"_index":3597,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getalltimelineitemsgql",{"_index":3574,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getalltimelineitemsquery",{"_index":3573,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getbasiccomponent",{"_index":1313,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getbasiccomponent(id",{"_index":1337,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getbasiccomponentgql",{"_index":1328,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getbasiccomponentquery",{"_index":1327,"title":{},"body":{"injectables/ComponentStoreService.html":{},"components/NodeDetailsComponent.html":{}}}],["getbasicproject",{"_index":4934,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getbasicproject(id",{"_index":4950,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getbasicprojectgql",{"_index":4939,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getbasicprojectquery",{"_index":531,"title":{},"body":{"interfaces/AppState.html":{},"injectables/ProjectStoreService.html":{},"injectables/StateService.html":{}}}],["getcomponent",{"_index":1361,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["getcomponent(id",{"_index":1374,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["getcomponentgql",{"_index":1322,"title":{},"body":{"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{}}}],["getcomponentinterfaces",{"_index":1314,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getcomponentinterfaces(id",{"_index":1339,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getcomponentinterfacesgql",{"_index":1330,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getcomponentinterfacesquery",{"_index":1329,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getcomponentlabels",{"_index":1315,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getcomponentlabels(id",{"_index":1341,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getcomponentlabelsgql",{"_index":1326,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getcomponentlabelsquery",{"_index":1349,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getcomponentquery",{"_index":1350,"title":{},"body":{"injectables/ComponentStoreService.html":{},"components/NodeDetailsComponent.html":{}}}],["getconsumingcomponents",{"_index":2560,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["getconsumingcomponents(id",{"_index":2576,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["getconsumingcomponentsgql",{"_index":2569,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["getconsumingcomponentsquery",{"_index":2568,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["getcurrent",{"_index":2036,"title":{},"body":{"classes/DataQuery.html":{}}}],["getcurrentuservalue",{"_index":687,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getdefaultfortype",{"_index":5698,"title":{},"body":{"coverage.html":{}}}],["getdefaultfortype(predicates[type].type",{"_index":2839,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["getdefaultfortype(type",{"_index":2828,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["getencodedid",{"_index":5249,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["getencodedid(item",{"_index":4046,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["getfullcomponent",{"_index":1316,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getfullcomponent(id",{"_index":1343,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getfullcomponentquery",{"_index":1321,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getfullissue",{"_index":3542,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getfullissue(id",{"_index":3599,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getfullissuegraphdataquery",{"_index":2891,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["getfullissuequery",{"_index":3551,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getfullproject",{"_index":4935,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getfullproject(id",{"_index":4952,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getfullprojectgql",{"_index":4941,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getfullprojectquery",{"_index":4869,"title":{},"body":{"components/ProjectMembersComponent.html":{},"injectables/ProjectStoreService.html":{},"interfaces/userMock.html":{}}}],["getfullquery",{"_index":4940,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getfulproject",{"_index":4929,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["gethasdata",{"_index":2034,"title":{},"body":{"classes/DataQuery.html":{}}}],["geticonlabel",{"_index":3270,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["geticonname",{"_index":3271,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["getinterface",{"_index":1362,"title":{},"body":{"injectables/ComponentsService.html":{},"injectables/InterfaceStoreService.html":{}}}],["getinterface(id",{"_index":1376,"title":{},"body":{"injectables/ComponentsService.html":{},"injectables/InterfaceStoreService.html":{}}}],["getinterfacegql",{"_index":1371,"title":{},"body":{"injectables/ComponentsService.html":{},"injectables/InterfaceStoreService.html":{}}}],["getinterfacequery",{"_index":2567,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"components/NodeDetailsComponent.html":{}}}],["getissuefolderid",{"_index":1220,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["getissuefolderid(id",{"_index":1288,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["getissuefolderid(node.id",{"_index":1270,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["getissuegql",{"_index":3552,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getissuegraphdatadocument",{"_index":2269,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["getissuegraphdataforsearchgql",{"_index":2889,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["getissuegraphdatagql",{"_index":2883,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["getissuegraphdataquery",{"_index":2270,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["getissuelink",{"_index":3288,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["getissuequery",{"_index":3621,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getlabelsgql",{"_index":3658,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["getlabelsquery",{"_index":1325,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getlinkhandles(g",{"_index":3101,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["getlist",{"_index":2053,"title":{},"body":{"injectables/DataService.html":{}}}],["getlist(id",{"_index":2058,"title":{},"body":{"injectables/DataService.html":{}}}],["getlistsetlength",{"_index":5224,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["getmatchinglabels",{"_index":3656,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["getmatchinglabels(projectid",{"_index":3662,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["getnode",{"_index":2052,"title":{},"body":{"injectables/DataService.html":{},"classes/NodeCache.html":{}}}],["getnode(id",{"_index":2000,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/NodeCache.html":{}}}],["getnodeid",{"_index":5250,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["getnodeid(item",{"_index":4044,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["getnodename",{"_index":4085,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["getnodetypestring",{"_index":4086,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["getnodetypestring().tolowercase",{"_index":4199,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["getparams",{"_index":2038,"title":{},"body":{"classes/DataQuery.html":{}}}],["getproject",{"_index":4966,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["getproject(id",{"_index":4974,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["getprojectgql",{"_index":4971,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["getqueryparamfilter",{"_index":3370,"title":{},"body":{"components/IssueListComponent.html":{}}}],["getremainingtypes",{"_index":2766,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["getremainingtypes(index",{"_index":2785,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["gets",{"_index":880,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/TopToolbarComponent.html":{}}}],["getsearchissuegraphdataquery",{"_index":2888,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["getselectedcategories",{"_index":2992,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["getsubscribercount",{"_index":2041,"title":{},"body":{"classes/DataQuery.html":{}}}],["gettext",{"_index":5367,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["getting",{"_index":5759,"title":{"index.html":{}},"body":{}}],["github",{"_index":1438,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["github/time",{"_index":5731,"title":{},"body":{"dependencies.html":{}}}],["give",{"_index":1240,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["given",{"_index":840,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"components/IssueIconComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gives",{"_index":4514,"title":{},"body":{"interfaces/Positions.html":{}}}],["glitch",{"_index":3795,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["globalconfig",{"_index":422,"title":{},"body":{"modules/AppModule.html":{}}}],["gm",{"_index":4591,"title":{},"body":{"interfaces/Positions.html":{}}}],["gm.addnodetogroup(node.id",{"_index":4601,"title":{},"body":{"interfaces/Positions.html":{}}}],["gm.markastreeroot(node.id",{"_index":4593,"title":{},"body":{"interfaces/Positions.html":{}}}],["gm.setgroupbehaviourof",{"_index":4596,"title":{},"body":{"interfaces/Positions.html":{}}}],["gmt+0200",{"_index":5399,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["go",{"_index":65,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["gobacktosettings",{"_index":32,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["gotolocationdetails",{"_index":3509,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["gql",{"_index":1983,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/InterfaceStoreService.html":{},"classes/NodeCache.html":{},"miscellaneous/typealiases.html":{}}}],["gqlcomponent.id",{"_index":2361,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlgraphcomponent",{"_index":2261,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"miscellaneous/typealiases.html":{}}}],["gqlgraphcomponent.featurerequests.totalcount",{"_index":2356,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlgraphcomponent.id",{"_index":2358,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlgraphcomponent.name",{"_index":2359,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlgraphcomponent.unclassified.totalcount",{"_index":2357,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlgraphcomponents",{"_index":2267,"title":{},"body":{"classes/GraphComponent.html":{}}}],["gqlinterface",{"_index":2339,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"miscellaneous/typealiases.html":{}}}],["gqlinterface.component.id",{"_index":2350,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlinterface.consumedby.nodes.map(component",{"_index":2351,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlinterface.featurerequests.totalcount",{"_index":2346,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlinterface.id",{"_index":2348,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlinterface.name",{"_index":2349,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlinterface.unclassified.totalcount",{"_index":2347,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlinterfaces",{"_index":2409,"title":{},"body":{"classes/GraphInterface.html":{}}}],["gqlissue",{"_index":2364,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"miscellaneous/typealiases.html":{}}}],["gqlissue.linkstoissues.nodes.map(gqlpartialissue",{"_index":2377,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlpartialissue",{"_index":2368,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlpartialissue.category",{"_index":2371,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlpartialissue.id",{"_index":2370,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlpartialissue.locations.nodes.map(location",{"_index":2372,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graph",{"_index":141,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["graph'},{'name",{"_index":139,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["graph.addeventlistener('click",{"_index":4415,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('edgeadd",{"_index":4322,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('edgedrop",{"_index":4327,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('edgeremove",{"_index":4324,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('nodeadd",{"_index":4404,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('nodeclick",{"_index":4385,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('nodedragend",{"_index":4393,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('nodepositionchange",{"_index":4387,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('noderemove",{"_index":4407,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('render",{"_index":4411,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('zoomchange",{"_index":4416,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.calculatelinkhandlesforedge",{"_index":3128,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["graph.component",{"_index":1084,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"modules/GraphsModule.html":{},"components/IssueGraphControlsComponent.html":{}}}],["graph.component.css",{"_index":4242,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.component.html",{"_index":4241,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.component.ts",{"_index":4214,"title":{},"body":{"interfaces/Positions.html":{},"coverage.html":{}}}],["graph.dynamictemplateregistry.adddynamictemplate('issue",{"_index":3092,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["graph.getedge(edge.createdfrom",{"_index":4336,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.getedgesbysource(sourcenode.id).foreach((existingedge",{"_index":4350,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.getnode(edge.source",{"_index":4332,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.getnode(edge.target",{"_index":4382,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.getnode(rootid",{"_index":4476,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.groupingmanager.gettreerootof(node.id",{"_index":4474,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.nodelist.foreach((node",{"_index":4348,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.oncreatedraggededge",{"_index":4317,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.ondraggededgetargetchange",{"_index":4320,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.setedgeclass",{"_index":2972,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["graph.setnodeclass",{"_index":2965,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["graph/class",{"_index":2944,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"coverage.html":{}}}],["graph/dynamic",{"_index":3079,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"coverage.html":{}}}],["graph/graph",{"_index":1205,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["graph/group",{"_index":3180,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"coverage.html":{}}}],["graph/issue",{"_index":1083,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["graph/link",{"_index":3104,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{},"coverage.html":{}}}],["graph_structure_documentation.png",{"_index":3206,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/Positions.html":{}}}],["graphcomponent",{"_index":1202,"title":{"classes/GraphComponent.html":{}},"body":{"interfaces/ComponentNode.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["graphcomponent.fromgql(gqlcomponent",{"_index":2362,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graphcomponent.mapfromgql(data.node.components.nodes",{"_index":2308,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graphdata",{"_index":2282,"title":{"interfaces/GraphData.html":{}},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["graphdata.graphlocations.values",{"_index":2300,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graphdatafactory",{"_index":2288,"title":{"classes/GraphDataFactory.html":{}},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"coverage.html":{}}}],["graphdatafactory.graphdatafromgql",{"_index":2904,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["graphdatafactory.removefiltereddata(graphdatafactory.graphdatafromgql(result.data",{"_index":2932,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["graphdataforfilter",{"_index":3041,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{}}}],["graphdataforfilter(filter",{"_index":3148,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["graphdatafromgql",{"_index":2398,"title":{},"body":{"classes/GraphDataFactory.html":{}}}],["graphdatafromgql(data",{"_index":2307,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graphedit.zoomtobox(box",{"_index":4661,"title":{},"body":{"interfaces/Positions.html":{}}}],["grapheditor",{"_index":1243,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["grapheditor.getnode(childid",{"_index":3248,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["grapheditor.zoomtobox",{"_index":4652,"title":{},"body":{"interfaces/Positions.html":{}}}],["grapheditor.zoomtobox(box",{"_index":4651,"title":{},"body":{"interfaces/Positions.html":{}}}],["graphfirstrender",{"_index":4253,"title":{},"body":{"interfaces/Positions.html":{}}}],["graphfolder",{"_index":2278,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"miscellaneous/typealiases.html":{}}}],["graphinitialized",{"_index":4255,"title":{},"body":{"interfaces/Positions.html":{}}}],["graphinterface",{"_index":1203,"title":{"classes/GraphInterface.html":{}},"body":{"interfaces/ComponentNode.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["graphinterface.fromgql(gqlinterface",{"_index":2354,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graphinterface.mapfromgql(data.node.interfaces.nodes",{"_index":2309,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graphissue",{"_index":2287,"title":{"classes/GraphIssue.html":{}},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"coverage.html":{}}}],["graphissue.fromgql(gqlissue",{"_index":2312,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graphlink",{"_index":5308,"title":{},"body":{"components/SideNavComponent.html":{}}}],["graphlocation",{"_index":2279,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"miscellaneous/typealiases.html":{}}}],["graphlocations",{"_index":2283,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graphql",{"_index":1416,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"modules/GraphQLModule.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueStoreService.html":{},"components/RegisterComponent.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["graphql.module",{"_index":380,"title":{},"body":{"modules/AppModule.html":{}}}],["graphql.module.ts",{"_index":483,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlerrors",{"_index":2467,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["graphqlerrors.map(err",{"_index":2469,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["graphqlmodule",{"_index":338,"title":{"modules/GraphQLModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["graphs/graphs.module",{"_index":385,"title":{},"body":{"modules/AppModule.html":{}}}],["graphs/issue",{"_index":500,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["graphsmodule",{"_index":339,"title":{"modules/GraphsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["graphstateservice",{"_index":3050,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["graphwrapper",{"_index":4246,"title":{},"body":{"interfaces/Positions.html":{}}}],["gray",{"_index":4814,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TextDisplayComponent.html":{}}}],["green",{"_index":278,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/IssueLabelComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["grid",{"_index":2240,"title":{},"body":{"components/FrameComponent.html":{}}}],["gropius",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["group",{"_index":1225,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"interfaces/RelationEdge.html":{},"components/SideNavComponent.html":{},"miscellaneous/enumerations.html":{}}}],["groupbehaviour",{"_index":3182,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["grouping",{"_index":4586,"title":{},"body":{"interfaces/Positions.html":{}}}],["groupnode",{"_index":3194,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["groupnode.issuegroupnodeids.add(childgroup",{"_index":3260,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["groupnode.issuegroupnodeids.delete(childgroup",{"_index":3261,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["groupnode.position",{"_index":3231,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["groupnode.type",{"_index":3216,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["groupnode.x",{"_index":3223,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["groupnode.y",{"_index":3224,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["groups",{"_index":4220,"title":{},"body":{"interfaces/Positions.html":{}}}],["grow",{"_index":3069,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["gs",{"_index":1399,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["guard",{"_index":612,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":613,"title":{},"body":{"guards/AuthGuard.html":{}}}],["gui",{"_index":3850,"title":{},"body":{"components/LoginComponent.html":{}}}],["h2",{"_index":4813,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["hack",{"_index":3445,"title":{},"body":{"components/IssueListComponent.html":{}}}],["hand",{"_index":5498,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["handels",{"_index":2900,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["handle",{"_index":3091,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{}}}],["handleclick",{"_index":5502,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["handled",{"_index":956,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{}}}],["handles",{"_index":969,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{}}}],["handles.service",{"_index":4230,"title":{},"body":{"interfaces/Positions.html":{}}}],["handles.service.ts",{"_index":3106,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{},"coverage.html":{}}}],["handles.service.ts:101",{"_index":3116,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["handles.service.ts:22",{"_index":3118,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["handles.service.ts:65",{"_index":3112,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["handles.sourcehandles",{"_index":3131,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["handles/issue",{"_index":3105,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["handling",{"_index":868,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["handset",{"_index":2202,"title":{},"body":{"components/FrameComponent.html":{}}}],["happen",{"_index":3771,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["happens",{"_index":1766,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["hardcoded",{"_index":4820,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/userMock.html":{}}}],["hasdata",{"_index":1763,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["hasin",{"_index":3277,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["hasmore",{"_index":3913,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["hasnextpage",{"_index":1912,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["hasout",{"_index":3279,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["haspreviouspage",{"_index":1911,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["hasprevpage",{"_index":1956,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["having",{"_index":1703,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["header",{"_index":2252,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectListComponent.html":{}}}],["header'},{'name",{"_index":174,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["header.component",{"_index":2539,"title":{},"body":{"modules/GraphsModule.html":{}}}],["header.component.html",{"_index":4743,"title":{},"body":{"components/ProjectHeaderComponent.html":{}}}],["header.component.scss",{"_index":4742,"title":{},"body":{"components/ProjectHeaderComponent.html":{}}}],["header.component.ts",{"_index":4741,"title":{},"body":{"components/ProjectHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:12",{"_index":4746,"title":{},"body":{"components/ProjectHeaderComponent.html":{}}}],["header.component.ts:13",{"_index":4745,"title":{},"body":{"components/ProjectHeaderComponent.html":{}}}],["header/project",{"_index":2538,"title":{},"body":{"modules/GraphsModule.html":{},"components/ProjectHeaderComponent.html":{},"coverage.html":{}}}],["headers",{"_index":2458,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["headline",{"_index":4810,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["height",{"_index":268,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/FrameComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/QueryComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["help",{"_index":3064,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["helper",{"_index":2867,"title":{},"body":{"components/IssueFilterComponent.html":{},"index.html":{}}}],["hence",{"_index":1915,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["here",{"_index":1890,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphsModule.html":{},"classes/NodeCache.html":{}}}],["heuristic",{"_index":4036,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["hex",{"_index":3312,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["hidden",{"_index":2251,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/LinkedIssueItemComponent.html":{}}}],["hide",{"_index":4727,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{},"components/TimelineItemComponent.html":{}}}],["hides",{"_index":5517,"title":{},"body":{"components/UserItemComponent.html":{}}}],["highlight",{"_index":434,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"dependencies.html":{}}}],["highlighting",{"_index":3879,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["hold",{"_index":1310,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["holding",{"_index":681,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["holds",{"_index":2185,"title":{},"body":{"components/FrameComponent.html":{}}}],["home",{"_index":525,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TopToolbarComponent.html":{}}}],["hook",{"_index":878,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["horizontal",{"_index":4754,"title":{},"body":{"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["host",{"_index":3282,"title":{},"body":{"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/SetEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hostlistener",{"_index":1073,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["hostlistener('window:mousemove",{"_index":1156,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["hostlistener('window:mouseup",{"_index":1154,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["host}/api",{"_index":5835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host}/api/public",{"_index":5837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host}/login",{"_index":5839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hour",{"_index":5439,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["hours",{"_index":5428,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["hsp",{"_index":3320,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["html",{"_index":96,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["htmlelement",{"_index":4788,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["http",{"_index":664,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["http://alienryderflex.com/hsp.html",{"_index":3337,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["http://gist.github.com/983661",{"_index":3327,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["http://localhost:4200",{"_index":5767,"title":{},"body":{"index.html":{}}}],["http://localhost:6060",{"_index":5773,"title":{},"body":{"index.html":{}}}],["http://localhost:8080",{"_index":5840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":662,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["httpclientmodule",{"_index":381,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{}}}],["httperrorresponse",{"_index":3857,"title":{},"body":{"components/LoginComponent.html":{}}}],["httplink",{"_index":2426,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["httplink.create({uri",{"_index":2489,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["https://graphql",{"_index":5794,"title":{},"body":{"index.html":{}}}],["hue",{"_index":3332,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["hydrate",{"_index":5177,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["hydrated",{"_index":1805,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["hydrateinitial(data",{"_index":1973,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["hydratelist",{"_index":1984,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/SetEditorComponent.html":{},"miscellaneous/typealiases.html":{}}}],["hydrateraw",{"_index":1687,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{}}}],["hydrateraw(prepareddata",{"_index":1708,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["hydrates",{"_index":1966,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["hydration",{"_index":1847,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/typealiases.html":{}}}],["hyperlink",{"_index":3292,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["i.c.insertnodes(data",{"_index":5906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.assignees.nodes",{"_index":5889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.components.nodes",{"_index":5851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.interfaces.nodes",{"_index":5858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.issues.nodes",{"_index":5862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.issuesonlocation.nodes",{"_index":5868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.labels.nodes",{"_index":5882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.linkedbyissues.nodes",{"_index":5898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.linkstoissues.nodes",{"_index":5893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.locations.nodes",{"_index":5878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.timeline.nodes",{"_index":5873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.projects.nodes",{"_index":5846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.consumedby.nodes",{"_index":4161,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["i.consumedby.nodes.length",{"_index":4157,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["i.e",{"_index":774,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["i.name",{"_index":4156,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["i.q.components.getcomponent(id).then(data",{"_index":5909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.components.getinterface(id).then(data",{"_index":5910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.components.listprojectcomponents(list.node.id",{"_index":5847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.components.listprojectinterfaces(list.node.id",{"_index":5855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.getissueheader(id).then(data",{"_index":5911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.getlabel(id).then(data",{"_index":5918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listcomponentinterfaceissuesonlocation(list.node.id",{"_index":5869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listcomponentissues(list.node.id",{"_index":5863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listcomponentissuesonlocation(list.node.id",{"_index":5864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listcomponentlabels(list.node.id",{"_index":5883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listissueassignees(list.node.id",{"_index":5886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listissuecomponents(list.node.id",{"_index":5852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listissuelabels(list.node.id",{"_index":5884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listissuelinkedbyissues(list.node.id",{"_index":5895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listissuelinkstoissues(list.node.id",{"_index":5890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listissuelocations(list.node.id",{"_index":5875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listissuetimelineitems(list.node.id",{"_index":5870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listlabelcomponents(list.node.id",{"_index":5854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listprojectissues(list.node.id",{"_index":5859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listprojectlabels(list.node.id",{"_index":5879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.projects.getproject(id).then(data",{"_index":5907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.projects.listprojects(listparams(params)).then(data",{"_index":5843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.users.currentuser().then(data",{"_index":5913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.users.searchusers(params.filter",{"_index":5899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i1",{"_index":3394,"title":{},"body":{"components/IssueListComponent.html":{}}}],["icomponent",{"_index":3424,"title":{},"body":{"components/IssueListComponent.html":{}}}],["icon",{"_index":2191,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectListComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TopToolbarComponent.html":{}}}],["icon'},{'name",{"_index":144,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["icon.component",{"_index":2533,"title":{},"body":{"modules/GraphsModule.html":{}}}],["icon.component.html",{"_index":3269,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["icon.component.scss",{"_index":3268,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["icon.component.ts",{"_index":3267,"title":{},"body":{"components/IssueIconComponent.html":{},"coverage.html":{}}}],["icon.component.ts:13",{"_index":3272,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["icon.component.ts:15",{"_index":3274,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["icon.component.ts:30",{"_index":3273,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["icon/issue",{"_index":2532,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueIconComponent.html":{},"coverage.html":{}}}],["icondefinition",{"_index":401,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["iconname",{"_index":326,"title":{},"body":{"components/AppComponent.html":{}}}],["icons",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":548,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"interfaces/RelationEdge.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"interfaces/User.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["id.split",{"_index":3810,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["ideal",{"_index":4453,"title":{},"body":{"interfaces/Positions.html":{}}}],["identical",{"_index":3740,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["identifier",{"_index":1809,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{}}}],["identifies",{"_index":3799,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["identity",{"_index":1872,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ids",{"_index":1879,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["idt",{"_index":1971,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["id}).pipe",{"_index":3636,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["id}__${issuecategory",{"_index":1289,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["if(this.mode",{"_index":5293,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["if(this.modeicon",{"_index":5295,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["ifempty",{"_index":2819,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["iff",{"_index":598,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/StateService.html":{}}}],["ignore",{"_index":1122,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"components/MarkdownPreviewComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["ignored",{"_index":2006,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["ignoring",{"_index":2366,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["img",{"_index":4756,"title":{},"body":{"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["immediately",{"_index":1704,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["immutable",{"_index":3717,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["implementations",{"_index":3208,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["implemented",{"_index":5917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implements",{"_index":14,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"guards/AuthGuard.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"interfaces/userMock.html":{}}}],["import",{"_index":53,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{}}}],["important",{"_index":5337,"title":{},"body":{"components/SideNavComponent.html":{},"components/TimelineItemComponent.html":{}}}],["imported",{"_index":2504,"title":{},"body":{"modules/GraphsModule.html":{}}}],["imports",{"_index":344,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{}}}],["ims",{"_index":1413,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["imstype",{"_index":1393,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["imstype.github",{"_index":1423,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["in(black",{"_index":1659,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["inarray",{"_index":2791,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["include",{"_index":3711,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["includes",{"_index":1226,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["including",{"_index":1560,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["indented",{"_index":2099,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["index",{"_index":25,"title":{"index.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":1678,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["indicates",{"_index":2678,"title":{},"body":{"components/IssueDetailComponent.html":{},"interfaces/Positions.html":{}}}],["indicating",{"_index":3000,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/RegisterComponent.html":{}}}],["indication",{"_index":5008,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["indicator",{"_index":5015,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["indirection",{"_index":3911,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["individual",{"_index":822,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/FrameComponent.html":{}}}],["individualconfig",{"_index":2433,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/UserNotifyService.html":{}}}],["infinite",{"_index":5583,"title":{},"body":{"classes/Vector.html":{}}}],["infinitely",{"_index":5584,"title":{},"body":{"classes/Vector.html":{}}}],["infix",{"_index":2738,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{}}}],["infoconfig",{"_index":5536,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["information",{"_index":572,"title":{},"body":{"interfaces/AppState.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueGraphApiService.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/StateService.html":{},"components/TopToolbarComponent.html":{},"interfaces/userMock.html":{}}}],["inherit",{"_index":2246,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/TimelineItemComponent.html":{}}}],["inherited",{"_index":1692,"title":{},"body":{"classes/DataNode.html":{}}}],["inidcate",{"_index":5003,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["initgraph",{"_index":2950,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{}}}],["initial",{"_index":1612,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["initialized",{"_index":4254,"title":{},"body":{"interfaces/Positions.html":{}}}],["initializes",{"_index":4272,"title":{},"body":{"interfaces/Positions.html":{}}}],["initially",{"_index":3886,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["initialposition",{"_index":3211,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/Positions.html":{}}}],["initiated",{"_index":3392,"title":{},"body":{"components/IssueListComponent.html":{}}}],["inject",{"_index":253,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/MultiSourceList.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"index.html":{}}}],["inject(component_context_menu_data",{"_index":1065,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["inject(mat_dialog_data",{"_index":244,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/MultiSourceList.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["injectable",{"_index":532,"title":{"injectables/AuthenticationService.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"injectables/DataService.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"injectables/StateService.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{}},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"injectables/DataService.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"injectables/StateService.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectable({providedin",{"_index":692,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{}}}],["injectables",{"_index":646,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"injectables/DataService.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"injectables/StateService.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injected",{"_index":1304,"title":{},"body":{"injectables/ComponentStoreService.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["injection",{"_index":5797,"title":{},"body":{"index.html":{}}}],["injectiontoken",{"_index":1074,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["injectiontoken('component_context_menu_data",{"_index":1095,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":1075,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["injector)).instance",{"_index":1121,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["inline",{"_index":2742,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["inmemorycache",{"_index":2424,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["inner",{"_index":1811,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{}}}],["innermapfn",{"_index":1802,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["innerqueryfn",{"_index":1785,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["inout",{"_index":319,"title":{},"body":{"components/AppComponent.html":{}}}],["input",{"_index":726,"title":{},"body":{"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"injectables/ComponentStoreService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectStoreService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"components/SettingsDialogComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["inputs",{"_index":766,"title":{},"body":{"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["inputtitle",{"_index":2662,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["insert",{"_index":1968,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["insertnodes",{"_index":4071,"title":{},"body":{"classes/NodeCache.html":{}}}],["insertnodes(nodes",{"_index":2007,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["insertresult(result",{"_index":1868,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["inserts",{"_index":2004,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["inset",{"_index":3499,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["inside",{"_index":3401,"title":{},"body":{"components/IssueListComponent.html":{},"interfaces/Positions.html":{}}}],["instance",{"_index":2443,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{},"miscellaneous/variables.html":{}}}],["instanceof",{"_index":584,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["instances",{"_index":2955,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphLinkHandlesService.html":{}}}],["instantiated",{"_index":1244,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["instead",{"_index":820,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueListComponent.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"index.html":{}}}],["int",{"_index":4145,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["int.node",{"_index":4146,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["intended",{"_index":5005,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["interacting",{"_index":1746,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["interaction",{"_index":230,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{}}}],["interactive",{"_index":1684,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueItemComponent.html":{},"classes/NodeCache.html":{}}}],["interest",{"_index":2905,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["interested",{"_index":3158,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["interface",{"_index":121,"title":{"interfaces/AppState.html":{},"interfaces/CoalescedTimelineItem.html":{},"interfaces/ComponentContextMenuData.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"interfaces/CreateInterfaceData.html":{},"interfaces/CreateLabelDialogData.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"interfaces/GraphData.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/QueryListParams.html":{},"interfaces/RelationEdge.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{},"interfaces/User.html":{},"interfaces/userMock.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"interfaces/userMock.html":{}}}],["interface.graphql",{"_index":2558,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["interface/:interfaceid",{"_index":519,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["interfaceconsumer",{"_index":1222,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{}}}],["interfaceid",{"_index":1283,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["interfacenode",{"_index":1210,"title":{"interfaces/InterfaceNode.html":{}},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["interfacenode.dataaspromise().then(data",{"_index":3447,"title":{},"body":{"components/IssueListComponent.html":{}}}],["interfacenode.id",{"_index":4576,"title":{},"body":{"interfaces/Positions.html":{}}}],["interfacenodes",{"_index":4523,"title":{},"body":{"interfaces/Positions.html":{}}}],["interfacenodes.foreach(interfacenode",{"_index":4537,"title":{},"body":{"interfaces/Positions.html":{}}}],["interfaceofferingcomponents",{"_index":2323,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["interfaceofferingcomponents.has(id",{"_index":2328,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["interfaces",{"_index":529,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CoalescedTimelineItem.html":{},"interfaces/ComponentContextMenuData.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"interfaces/CreateInterfaceData.html":{},"interfaces/CreateLabelDialogData.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/QueryListParams.html":{},"interfaces/RelationEdge.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{},"interfaces/User.html":{},"overview.html":{},"interfaces/userMock.html":{}}}],["interfaces.get(interfaceid).offeredby",{"_index":2326,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["interfaces.has(locationid)).map(interfaceid",{"_index":2325,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["interfaces.node.interfaces.nodes",{"_index":4154,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["interfacesize",{"_index":4679,"title":{},"body":{"interfaces/Positions.html":{}}}],["interfacestore",{"_index":1537,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{}}}],["interfacestoreservice",{"_index":1533,"title":{"injectables/InterfaceStoreService.html":{}},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"injectables/InterfaceStoreService.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["internal",{"_index":1846,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["interplay",{"_index":3209,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["intrface",{"_index":4525,"title":{},"body":{"interfaces/Positions.html":{}}}],["intrface.id",{"_index":1257,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["intrface.name",{"_index":1258,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["intrface.offeredby",{"_index":1260,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["invalid",{"_index":1434,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/NodeDetailsComponent.html":{},"components/RegisterComponent.html":{}}}],["invalidate",{"_index":1688,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["invalidatelists",{"_index":2056,"title":{},"body":{"injectables/DataService.html":{}}}],["invalidatelists(selector",{"_index":2061,"title":{},"body":{"injectables/DataService.html":{}}}],["invalidates",{"_index":2063,"title":{},"body":{"injectables/DataService.html":{}}}],["invalidating",{"_index":2080,"title":{},"body":{"injectables/DataService.html":{}}}],["invalidcredentials",{"_index":3836,"title":{},"body":{"components/LoginComponent.html":{}}}],["investigate",{"_index":5081,"title":{},"body":{"interfaces/QueryListParams.html":{}}}],["invisible",{"_index":4577,"title":{},"body":{"interfaces/Positions.html":{}}}],["invoke",{"_index":5801,"title":{},"body":{"index.html":{}}}],["invoked",{"_index":624,"title":{},"body":{"guards/AuthGuard.html":{}}}],["invokes",{"_index":2903,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["involves",{"_index":2105,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["irrelevant",{"_index":3154,"title":{},"body":{"injectables/IssueGraphStateService.html":{},"interfaces/Positions.html":{}}}],["isbehind",{"_index":5567,"title":{},"body":{"classes/Vector.html":{}}}],["isbehind(source",{"_index":5592,"title":{},"body":{"classes/Vector.html":{}}}],["isclosed",{"_index":314,"title":{},"body":{"components/AppComponent.html":{}}}],["iscoalesced",{"_index":825,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["iscomponent",{"_index":3510,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["isduplicate",{"_index":2812,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["isfilterlabel",{"_index":2133,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"coverage.html":{}}}],["isfilterlabel(item)).map(item",{"_index":2162,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["isfilterlabel(label",{"_index":2165,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/TextFragment.html":{}}}],["ishandset",{"_index":2205,"title":{},"body":{"components/FrameComponent.html":{},"interfaces/Positions.html":{},"components/TopToolbarComponent.html":{}}}],["isinset",{"_index":5251,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["isinset(item",{"_index":4048,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["isissuebody",{"_index":983,"title":{},"body":{"components/CommentComponent.html":{}}}],["islinkedbyissues",{"_index":2820,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["isloading",{"_index":3837,"title":{},"body":{"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["islocalset",{"_index":4017,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["isn't",{"_index":4452,"title":{},"body":{"interfaces/Positions.html":{}}}],["isnextsublazy",{"_index":1806,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["isopen",{"_index":2810,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["isprojectset",{"_index":2206,"title":{},"body":{"components/FrameComponent.html":{}}}],["isprojecturl",{"_index":5338,"title":{},"body":{"injectables/StateService.html":{}}}],["isprojecturl(url",{"_index":601,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["isright",{"_index":5930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["issue",{"_index":123,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["issue$.current?.usercaneditissue",{"_index":2698,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["issue's",{"_index":1613,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueItemComponent.html":{}}}],["issue.assignees.nodes",{"_index":3483,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issue.assigneesstring",{"_index":3480,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issue.category",{"_index":2389,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{}}}],["issue.createdby.displayname",{"_index":3487,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issue.graphql",{"_index":3538,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["issue.id",{"_index":4492,"title":{},"body":{"interfaces/Positions.html":{}}}],["issue.isopen",{"_index":3428,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issue.labels.nodes",{"_index":3485,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issue.labelsstring",{"_index":3481,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issue.linksissues",{"_index":2376,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["issue.search",{"_index":3488,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issue.title",{"_index":2724,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueItemComponent.html":{}}}],["issuecategory",{"_index":1206,"title":{},"body":{"interfaces/ComponentNode.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/FilterState.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/typealiases.html":{}}}],["issuecategory.bug",{"_index":2336,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"miscellaneous/variables.html":{}}}],["issuecategory.featurerequest",{"_index":2337,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"miscellaneous/variables.html":{}}}],["issuecategory.unclassified",{"_index":2338,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"miscellaneous/variables.html":{}}}],["issuecategory[key",{"_index":4610,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuecategorycomponent",{"_index":130,"title":{"components/IssueCategoryComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuecomment",{"_index":1000,"title":{},"body":{"components/CommentComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["issuecontainersize",{"_index":4680,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuecontentscomponent",{"_index":132,"title":{"components/IssueContentsComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuecount",{"_index":1268,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["issuecounts",{"_index":4607,"title":{},"body":{"interfaces/Positions.html":{},"coverage.html":{}}}],["issuecounts(bugcount",{"_index":2335,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["issuecounts(gqlgraphcomponent.bugs.totalcount",{"_index":2355,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["issuecounts(gqlinterface.bugs.totalcount",{"_index":2345,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["issuecounts.get(issuecategory",{"_index":4612,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuecounts.has(issuecategory",{"_index":4611,"title":{},"body":{"interfaces/Positions.html":{}}}],["issued",{"_index":4263,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuedata",{"_index":1549,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["issuedetailcomponent",{"_index":134,"title":{"components/IssueDetailComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issueeditable",{"_index":2663,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["issuefilter",{"_index":2755,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{}}}],["issuefiltercomponent",{"_index":136,"title":{"components/IssueFilterComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["issuefoldernode",{"_index":1267,"title":{"interfaces/IssueFolderNode.html":{}},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["issuefoldernode.id",{"_index":4617,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraph",{"_index":1097,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/IssueGraphControlsComponent.html":{}}}],["issuegraphapiservice",{"_index":2874,"title":{"injectables/IssueGraphApiService.html":{}},"body":{"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"coverage.html":{}}}],["issuegraphclasssettersservice",{"_index":2943,"title":{"injectables/IssueGraphClassSettersService.html":{}},"body":{"injectables/IssueGraphClassSettersService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["issuegraphcomponent",{"_index":138,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuegraphcontrolscomponent",{"_index":140,"title":{"components/IssueGraphControlsComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuegraphcontrolscomponents",{"_index":4264,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphdynamictemplateregistryservice",{"_index":3078,"title":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["issuegraphlinkhandlesservice",{"_index":3103,"title":{"injectables/IssueGraphLinkHandlesService.html":{}},"body":{"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["issuegraphnodes",{"_index":4226,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.createcomponentnode(component",{"_index":4521,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.createinterfacenode(intrface",{"_index":4526,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.createissuefoldernode(node",{"_index":4613,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.createissuegroupcontainernode(node",{"_index":4594,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.createrelationedge(foldernode.id",{"_index":4629,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.getissuefolderid(issuenodeid",{"_index":4630,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.interfacenode",{"_index":4567,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.issuenode",{"_index":4530,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.issuenode[]).concat(interfacenodes",{"_index":4529,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.nodetype.component",{"_index":4341,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.nodetype.interface",{"_index":4342,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.nodetype.interfaceconsumer",{"_index":4355,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.nodetype.issuegroupcontainer",{"_index":4395,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.position",{"_index":4373,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphstateservice",{"_index":1394,"title":{"injectables/IssueGraphStateService.html":{}},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["issuegroupcontainer",{"_index":1224,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{}}}],["issuegroupcontainerbehaviour",{"_index":3179,"title":{"classes/IssueGroupContainerBehaviour.html":{}},"body":{"classes/IssueGroupContainerBehaviour.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["issuegroupcontainernode",{"_index":1211,"title":{"interfaces/IssueGroupContainerNode.html":{}},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["issuegroupcontainernode.id",{"_index":4602,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegroupcontainerparentbehaviour",{"_index":3210,"title":{"classes/IssueGroupContainerParentBehaviour.html":{}},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["issuegroupcontainerparentbehaviour(initialposition",{"_index":4597,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegroupnodeids",{"_index":1261,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["issuegroupparents",{"_index":4257,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegroups",{"_index":4215,"title":{},"body":{"interfaces/Positions.html":{}}}],["issueheadercomponent",{"_index":4748,"title":{},"body":{"components/ProjectIssueListComponent.html":{}}}],["issueiconcomponent",{"_index":143,"title":{"components/IssueIconComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issueid",{"_index":516,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{}}}],["issueinput",{"_index":3593,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["issueitemcomponent",{"_index":145,"title":{"components/IssueItemComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuelabelcomponent",{"_index":147,"title":{"components/IssueLabelComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuelabelcomponent.labelcolorforbackground(color",{"_index":3349,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["issuelist",{"_index":4490,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuelistcomponent",{"_index":149,"title":{"components/IssueListComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuelistid",{"_index":4081,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/ProjectIssueListComponent.html":{}}}],["issuelistparams",{"_index":5815,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["issuelocation",{"_index":3512,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["issuelocationcomponent",{"_index":151,"title":{"components/IssueLocationComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuelocations",{"_index":3820,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["issuenode",{"_index":1201,"title":{"interfaces/IssueNode.html":{}},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["issuenodeid",{"_index":2704,"title":{},"body":{"components/IssueDetailComponent.html":{},"interfaces/Positions.html":{}}}],["issuenodes",{"_index":4528,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuenodes.foreach(node",{"_index":4531,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuenodes.length",{"_index":4542,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuepage",{"_index":2271,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["issueregex",{"_index":2935,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["issueregex}).pipe",{"_index":2938,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["issues",{"_index":515,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/ComponentNode.html":{},"interfaces/FilterSelection.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"injectables/QueriesService.html":{},"interfaces/RelationEdge.html":{},"components/SideNavComponent.html":{},"interfaces/TextFragment.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["issues&quot",{"_index":2919,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["issues.service",{"_index":4989,"title":{},"body":{"injectables/QueriesService.html":{}}}],["issuesidebarcomponent",{"_index":153,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issueslink",{"_index":5309,"title":{},"body":{"components/SideNavComponent.html":{}}}],["issuesonlocation",{"_index":3819,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["issuesservice",{"_index":4982,"title":{},"body":{"injectables/QueriesService.html":{},"coverage.html":{}}}],["issuestoreservice",{"_index":3532,"title":{"injectables/IssueStoreService.html":{}},"body":{"injectables/IssueStoreService.html":{},"coverage.html":{}}}],["issuestub",{"_index":3777,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["issuestub.title",{"_index":3789,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["issuesub",{"_index":2664,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["issuetimelineitem",{"_index":827,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["issuing",{"_index":5109,"title":{},"body":{"components/RegisterComponent.html":{}}}],["iszero",{"_index":5568,"title":{},"body":{"classes/Vector.html":{}}}],["it's",{"_index":621,"title":{},"body":{"guards/AuthGuard.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["italic",{"_index":5385,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["item",{"_index":207,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["item's",{"_index":930,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item'},{'name",{"_index":146,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["item.component",{"_index":469,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CoalescedTimelineItem.html":{},"modules/GraphsModule.html":{}}}],["item.component.html",{"_index":3287,"title":{},"body":{"components/IssueItemComponent.html":{},"components/LinkedIssueItemComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/UserItemComponent.html":{}}}],["item.component.name",{"_index":2861,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["item.component.scss",{"_index":3286,"title":{},"body":{"components/IssueItemComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/UserItemComponent.html":{}}}],["item.component.ts",{"_index":3285,"title":{},"body":{"components/IssueItemComponent.html":{},"components/LinkedIssueItemComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/UserItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:11",{"_index":5518,"title":{},"body":{"components/UserItemComponent.html":{}}}],["item.component.ts:12",{"_index":5495,"title":{},"body":{"directives/TimelineSingleItemDirective.html":{}}}],["item.component.ts:13",{"_index":3295,"title":{},"body":{"components/IssueItemComponent.html":{},"directives/TimelineSingleItemDirective.html":{},"components/UserItemComponent.html":{}}}],["item.component.ts:15",{"_index":3293,"title":{},"body":{"components/IssueItemComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/UserItemComponent.html":{}}}],["item.component.ts:16",{"_index":3779,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["item.component.ts:17",{"_index":3291,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["item.component.ts:18",{"_index":3781,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["item.component.ts:19",{"_index":3290,"title":{},"body":{"components/IssueItemComponent.html":{},"components/LinkedIssueItemComponent.html":{}}}],["item.component.ts:20",{"_index":3778,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["item.component.ts:23",{"_index":3296,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["item.component.ts:24",{"_index":5444,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{}}}],["item.component.ts:25",{"_index":5445,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{}}}],["item.component.ts:30",{"_index":3780,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["item.component.ts:37",{"_index":5493,"title":{},"body":{"directives/TimelineItemDeletedDirective.html":{}}}],["item.component.ts:38",{"_index":5494,"title":{},"body":{"directives/TimelineItemDeletedDirective.html":{}}}],["item.component.ts:54",{"_index":5466,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["item.component.ts:56",{"_index":5465,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["item.component.ts:59",{"_index":5468,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["item.component.ts:61",{"_index":5470,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["item.component.ts:63",{"_index":5469,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["item.component.ts:65",{"_index":5467,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["item.component.ts:66",{"_index":5464,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["item.createdby",{"_index":933,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item.createdby.displayname",{"_index":934,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item.id",{"_index":2152,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/IssueFilterComponent.html":{},"components/LabelSearchComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{}}}],["item.label",{"_index":846,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item.linkedissue",{"_index":857,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item.location",{"_index":853,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item.name",{"_index":1519,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/FilterSelection.html":{},"components/IssueFilterComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["item.removedcomponent",{"_index":851,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item.removedlabel",{"_index":848,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item.removedlinkedissue",{"_index":859,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item.removedlocation",{"_index":855,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item/issue",{"_index":2529,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueItemComponent.html":{},"coverage.html":{}}}],["item/user",{"_index":2531,"title":{},"body":{"modules/GraphsModule.html":{},"components/UserItemComponent.html":{},"coverage.html":{}}}],["item::before",{"_index":5487,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["itemdirective",{"_index":209,"title":{"directives/ItemDirective.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["itemfilterfunction",{"_index":838,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"miscellaneous/typealiases.html":{}}}],["itemfilterfunction|undefined",{"_index":945,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["itemops",{"_index":4008,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/typealiases.html":{}}}],["items",{"_index":811,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/FilterSelection.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"miscellaneous/variables.html":{}}}],["items.filter(x",{"_index":3669,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["items.push(item",{"_index":3998,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["items.splice(this.limit",{"_index":4002,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["items.values",{"_index":909,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["items/events",{"_index":823,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["itemtemplate",{"_index":764,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["itemtype",{"_index":910,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["iterate",{"_index":3737,"title":{},"body":{"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["itself",{"_index":2197,"title":{},"body":{"components/FrameComponent.html":{},"interfaces/Positions.html":{},"components/TopToolbarComponent.html":{}}}],["join",{"_index":2940,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["json",{"_index":4637,"title":{},"body":{"interfaces/Positions.html":{}}}],["json.parse(atob(response.token.split('.')[1",{"_index":710,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["json.parse(data",{"_index":4307,"title":{},"body":{"interfaces/Positions.html":{}}}],["json.parse(localstorage.getitem(this.userstoragekey",{"_index":698,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["json.parse(previousboundingboxasstring",{"_index":4646,"title":{},"body":{"interfaces/Positions.html":{}}}],["json.parse(zoomtransformasstring",{"_index":4647,"title":{},"body":{"interfaces/Positions.html":{}}}],["json.parse(zoomtransformasstring).k",{"_index":4665,"title":{},"body":{"interfaces/Positions.html":{}}}],["json.stringify(this.graph.currentviewwindow",{"_index":4287,"title":{},"body":{"interfaces/Positions.html":{}}}],["json.stringify(this.graph.currentzoomtransform",{"_index":4285,"title":{},"body":{"interfaces/Positions.html":{}}}],["json.stringify(this.savedpositions",{"_index":4314,"title":{},"body":{"interfaces/Positions.html":{}}}],["json.stringify(user",{"_index":700,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["jump",{"_index":4906,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["jumps",{"_index":4792,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["justify",{"_index":1656,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/TopToolbarComponent.html":{}}}],["jwt",{"_index":649,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["k",{"_index":2182,"title":{},"body":{"interfaces/FilterState.html":{}}}],["keep",{"_index":704,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["keeps",{"_index":1988,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"classes/Vector.html":{}}}],["key",{"_index":301,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"classes/MultiSourceList.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["key.split",{"_index":3987,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["keyframes",{"_index":1622,"title":{},"body":{"components/CreateIssueDialogComponent.html":{}}}],["keys",{"_index":1950,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/SetEditorComponent.html":{}}}],["keys[keys.length",{"_index":1952,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["keyset",{"_index":1495,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["keyset.add(encodenodeid(item",{"_index":1500,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["keyset.delete(encodenodeid(item",{"_index":1502,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["keyset.has(encodenodeid(item",{"_index":1498,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["keyword",{"_index":3389,"title":{},"body":{"components/IssueListComponent.html":{},"components/MarkdownPreviewComponent.html":{}}}],["keywords",{"_index":3402,"title":{},"body":{"components/IssueListComponent.html":{}}}],["knowledge",{"_index":1918,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["label",{"_index":118,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["label'},{'name",{"_index":148,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["label.component",{"_index":2526,"title":{},"body":{"modules/GraphsModule.html":{}}}],["label.component.html",{"_index":3306,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["label.component.scss",{"_index":3305,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["label.component.ts",{"_index":3303,"title":{},"body":{"components/IssueLabelComponent.html":{},"coverage.html":{}}}],["label.component.ts:14",{"_index":3309,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["label.component.ts:20",{"_index":3311,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["label.component.ts:65",{"_index":3316,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["label.id",{"_index":2934,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["label.name",{"_index":3486,"title":{},"body":{"components/IssueListComponent.html":{}}}],["label/issue",{"_index":2525,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueLabelComponent.html":{},"coverage.html":{}}}],["label/label",{"_index":2924,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["label?.name",{"_index":3350,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["labelcolorforbackground",{"_index":3307,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["labelcolorforbackground(color",{"_index":3310,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["labeled",{"_index":5346,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["labelisdark",{"_index":3308,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["labelisdark(color",{"_index":3315,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["labelledevent",{"_index":845,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["labels",{"_index":1565,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/FilterSelection.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"interfaces/NodeId.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["labels.length",{"_index":2928,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["labels.map(label",{"_index":2933,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["labelsearch",{"_index":2990,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["labelsearchcomponent",{"_index":155,"title":{"components/LabelSearchComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["labelsinput",{"_index":2145,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["labelsloading",{"_index":2144,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["labelstore",{"_index":2148,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["labelstoreservice",{"_index":2134,"title":{"injectables/LabelStoreService.html":{}},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/TextFragment.html":{},"coverage.html":{}}}],["labeltext",{"_index":5352,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["landing",{"_index":4759,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["language",{"_index":2914,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"components/MarkdownEditorComponent.html":{}}}],["larger",{"_index":3875,"title":{},"body":{"components/LoginComponent.html":{}}}],["last",{"_index":1948,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/LinkedIssueItemComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"interfaces/QueryListParams.html":{}}}],["last_height",{"_index":1128,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["last_width",{"_index":1126,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["lastloadtime",{"_index":1791,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["lastpageitemid",{"_index":1949,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["lastqueriedprojectname",{"_index":4762,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["layer",{"_index":3910,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["layour",{"_index":4700,"title":{},"body":{"interfaces/Positions.html":{}}}],["layout",{"_index":2082,"title":{},"body":{"injectables/DataService.html":{},"interfaces/Positions.html":{},"index.html":{}}}],["layout.ts",{"_index":3675,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{},"coverage.html":{}}}],["layout.ts:100",{"_index":5602,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:109",{"_index":5589,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:123",{"_index":5582,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:133",{"_index":5594,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:143",{"_index":3701,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:146",{"_index":3696,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:149",{"_index":3698,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:152",{"_index":3700,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:155",{"_index":3702,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:158",{"_index":3704,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:161",{"_index":3694,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:164",{"_index":3706,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:167",{"_index":3691,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:170",{"_index":3689,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:173",{"_index":3688,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:186",{"_index":3714,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:195",{"_index":3708,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:29",{"_index":5593,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:40",{"_index":5605,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:47",{"_index":5595,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:55",{"_index":5596,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:64",{"_index":5576,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:73",{"_index":5579,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:8",{"_index":5574,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:84",{"_index":5610,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:9",{"_index":5573,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:92",{"_index":5598,"title":{},"body":{"classes/Vector.html":{}}}],["layoutgraph",{"_index":2993,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["layoutmodule",{"_index":354,"title":{},"body":{"modules/AppModule.html":{}}}],["layoutnode",{"_index":3673,"title":{"classes/LayoutNode.html":{}},"body":{"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{},"coverage.html":{}}}],["layoutnode(node.id",{"_index":4702,"title":{},"body":{"interfaces/Positions.html":{}}}],["layoutnode.padding_component",{"_index":3726,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["layoutnode.padding_interface",{"_index":3727,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["layoutnode.position.x",{"_index":4712,"title":{},"body":{"interfaces/Positions.html":{}}}],["layoutnode.position.y",{"_index":4713,"title":{},"body":{"interfaces/Positions.html":{}}}],["lazily",{"_index":773,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["lazy",{"_index":767,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["lead",{"_index":3397,"title":{},"body":{"components/IssueListComponent.html":{}}}],["leak",{"_index":1778,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["leaving",{"_index":756,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["left",{"_index":1062,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["leftdistance",{"_index":3226,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["legend",{"_index":95,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["length",{"_index":737,"title":{},"body":{"classes/CCIMSValidators.html":{},"classes/Vector.html":{}}}],["lets",{"_index":1749,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"classes/NodeCache.html":{}}}],["levels",{"_index":4589,"title":{},"body":{"interfaces/Positions.html":{}}}],["li",{"_index":5473,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["lifecycle",{"_index":877,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["light",{"_index":3317,"title":{},"body":{"components/IssueLabelComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["light_mode",{"_index":5296,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["lightgray",{"_index":5161,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["limit",{"_index":3914,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["line",{"_index":2096,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"classes/Vector.html":{}}}],["line.replace('\\n",{"_index":5379,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["line.replace(\\'\\n",{"_index":5386,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["line:component",{"_index":796,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["lines",{"_index":2095,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["link",{"_index":753,"title":{},"body":{"classes/CCIMSValidators.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"components/IssueContentsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"injectables/IssueStoreService.html":{},"components/LoginComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"coverage.html":{}}}],["link(linkissueinput",{"_index":3601,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["linked",{"_index":159,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"miscellaneous/variables.html":{}}}],["linked).catch(err",{"_index":1599,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["linkedbyissues",{"_index":2821,"title":{},"body":{"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["linkedissue",{"_index":2390,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["linkedissue.category",{"_index":2394,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["linkedissueitemcomponent",{"_index":157,"title":{"components/LinkedIssueItemComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["linkedissues",{"_index":2603,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["linkedissuesub",{"_index":2604,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["linkevent",{"_index":856,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["linkhandle",{"_index":3089,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{}}}],["linkhandle.x",{"_index":3136,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["linkhandle.y",{"_index":3139,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["linkhandlecalculation",{"_index":3121,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["linking",{"_index":3536,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["linkissue",{"_index":3549,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["linkissuegql",{"_index":3550,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["linkissueinput",{"_index":3602,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["linkissues",{"_index":2286,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["links",{"_index":2367,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["linksissues",{"_index":2365,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["linkstoissues",{"_index":1567,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["list",{"_index":371,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/CoalescedTimelineItem.html":{},"injectables/ComponentsService.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["list'},{'name",{"_index":150,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["list.component",{"_index":373,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphsModule.html":{}}}],["list.component.html",{"_index":3356,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{}}}],["list.component.scss",{"_index":3355,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{}}}],["list.component.ts",{"_index":3352,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"coverage.html":{}}}],["list.component.ts:163",{"_index":3388,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:18",{"_index":4774,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.component.ts:188",{"_index":3378,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:19",{"_index":4751,"title":{},"body":{"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{}}}],["list.component.ts:197",{"_index":3380,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:20",{"_index":4750,"title":{},"body":{"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{}}}],["list.component.ts:207",{"_index":3398,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:21",{"_index":4775,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.component.ts:22",{"_index":4769,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.component.ts:24",{"_index":4749,"title":{},"body":{"components/ProjectIssueListComponent.html":{}}}],["list.component.ts:245",{"_index":3390,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:33",{"_index":3375,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:34",{"_index":3376,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectListComponent.html":{}}}],["list.component.ts:35",{"_index":3417,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:36",{"_index":3413,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:39",{"_index":3406,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:40",{"_index":3410,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:43",{"_index":3407,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:44",{"_index":3409,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:47",{"_index":3408,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:50",{"_index":4773,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.component.ts:51",{"_index":3404,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:53",{"_index":3403,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:55",{"_index":3412,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:56",{"_index":3405,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:57",{"_index":3418,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:58",{"_index":3422,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:60",{"_index":3416,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:61",{"_index":3421,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:62",{"_index":3374,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectListComponent.html":{}}}],["list.component.ts:70",{"_index":4772,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.component.ts:77",{"_index":3387,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:93",{"_index":3383,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.interactive",{"_index":3971,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["list.invalidate",{"_index":2084,"title":{},"body":{"injectables/DataService.html":{}}}],["list.loaddebounced",{"_index":2085,"title":{},"body":{"injectables/DataService.html":{}}}],["list.subscribe",{"_index":3974,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["list.subscribercount",{"_index":2079,"title":{},"body":{"injectables/DataService.html":{}}}],["list/issue",{"_index":2511,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["list/project",{"_index":505,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GraphsModule.html":{},"components/ProjectIssueListComponent.html":{},"coverage.html":{}}}],["list]=\"linkedissues",{"_index":2643,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["listall",{"_index":2816,"title":{},"body":{"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/variables.html":{}}}],["listallissues",{"_index":2806,"title":{},"body":{"components/IssueFilterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["listed",{"_index":866,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["listen",{"_index":577,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["listeners",{"_index":4240,"title":{},"body":{"interfaces/Positions.html":{}}}],["listening",{"_index":551,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["listento",{"_index":5060,"title":{},"body":{"components/QueryComponent.html":{}}}],["listento(query",{"_index":5043,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["listfromnode",{"_index":3954,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["listid",{"_index":1460,"title":{"interfaces/ListId.html":{}},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"components/ProjectIssueListComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["listidenc",{"_index":2067,"title":{},"body":{"injectables/DataService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"interfaces/NodeId.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/typealiases.html":{}}}],["listparams",{"_index":1730,"title":{"interfaces/ListParams.html":{}},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["listparams(params",{"_index":5865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listparams(params)).then(data",{"_index":5848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listprojectcomponents",{"_index":1363,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["listprojectcomponents(project",{"_index":1378,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["listprojectcomponentsgql",{"_index":1366,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["listprojectinterfaces",{"_index":1364,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["listprojectinterfaces(project",{"_index":1381,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["listprojectinterfacesgql",{"_index":1368,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["listprojects",{"_index":4967,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["listprojects(list",{"_index":4976,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["listprojectsgql",{"_index":4969,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["listqueries",{"_index":5640,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["listqueries[type",{"_index":5920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listqueries[type][node.type",{"_index":5921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listqueries[type][node.type](i",{"_index":5924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listqueryinput",{"_index":5820,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["listresult",{"_index":1735,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lists",{"_index":2064,"title":{},"body":{"injectables/DataService.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["listset",{"_index":4010,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["listsetsub",{"_index":4019,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["listtype",{"_index":834,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"injectables/DataService.html":{},"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"components/ProjectIssueListComponent.html":{},"miscellaneous/enumerations.html":{}}}],["listtype.assignees",{"_index":5885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listtype.componentinterfaces",{"_index":2827,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["listtype.components",{"_index":1472,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["listtype.issuelocations",{"_index":5874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listtype.issues",{"_index":2809,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectIssueListComponent.html":{},"miscellaneous/variables.html":{}}}],["listtype.issuesonlocation",{"_index":4135,"title":{},"body":{"components/NodeDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["listtype.labels",{"_index":3431,"title":{},"body":{"components/IssueListComponent.html":{},"miscellaneous/variables.html":{}}}],["listtype.linkedbyissues",{"_index":5894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listtype.linkedissues",{"_index":2627,"title":{},"body":{"components/IssueContentsComponent.html":{},"miscellaneous/variables.html":{}}}],["listtype.projects",{"_index":5842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listtype.searchusers",{"_index":2824,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["listtype.timelineitems",{"_index":886,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"miscellaneous/variables.html":{}}}],["listtype[ld.type",{"_index":3829,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["listtype[parts[1",{"_index":3826,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["listtype[type",{"_index":5923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listwrapper",{"_index":4804,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["literal",{"_index":1531,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":1485,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/ProjectListComponent.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{}}}],["loaddebounced",{"_index":1689,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{}}}],["loaddebounced(interactive",{"_index":1714,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["loaded",{"_index":780,"title":{},"body":{"components/CacheNodeComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/variables.html":{}}}],["loadifneeded",{"_index":1685,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["loadimpl(fut",{"_index":1830,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["loading",{"_index":235,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"components/IssueDetailComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/ProjectListComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/enumerations.html":{}}}],["loadissuegraphdata",{"_index":2879,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{}}}],["loadissuegraphdata(projectid",{"_index":2895,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["loadlabels",{"_index":2167,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["loads",{"_index":761,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["loadsavedpositions",{"_index":4305,"title":{},"body":{"interfaces/Positions.html":{}}}],["loadtimeout",{"_index":1804,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["local",{"_index":671,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"modules/GraphQLModule.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"interfaces/User.html":{}}}],["localissuedata",{"_index":1564,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"miscellaneous/typealiases.html":{}}}],["localset",{"_index":4018,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["localstorage",{"_index":650,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Positions.html":{},"interfaces/User.html":{}}}],["localstorage.getitem('token",{"_index":2482,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["localstorage.getitem(`zoomboundingbox_${this.projectstoragekey",{"_index":4639,"title":{},"body":{"interfaces/Positions.html":{}}}],["localstorage.getitem(`zoomtransform_${this.projectstoragekey",{"_index":4642,"title":{},"body":{"interfaces/Positions.html":{}}}],["localstorage.getitem(this.projectstoragekey",{"_index":4306,"title":{},"body":{"interfaces/Positions.html":{}}}],["localstorage.removeitem('currentuser",{"_index":715,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["localstorage.removeitem('token",{"_index":716,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["localstorage.setitem('token",{"_index":707,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["localstorage.setitem(`zoomboundingbox_${this.projectstoragekey",{"_index":4286,"title":{},"body":{"interfaces/Positions.html":{}}}],["localstorage.setitem(`zoomtransform_${this.projectstoragekey",{"_index":4284,"title":{},"body":{"interfaces/Positions.html":{}}}],["localstorage.setitem(this.projectstoragekey",{"_index":4315,"title":{},"body":{"interfaces/Positions.html":{}}}],["localstorage.setitem(this.userstoragekey",{"_index":699,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["location",{"_index":1614,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"components/IssueLocationComponent.html":{},"miscellaneous/variables.html":{}}}],["location'},{'name",{"_index":152,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["location.component",{"_index":2547,"title":{},"body":{"modules/GraphsModule.html":{}}}],["location.component.html",{"_index":3508,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["location.component.scss",{"_index":3507,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["location.component.ts",{"_index":3506,"title":{},"body":{"components/IssueLocationComponent.html":{},"coverage.html":{}}}],["location.component.ts:15",{"_index":3513,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["location.component.ts:17",{"_index":3511,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["location.component.ts:22",{"_index":3515,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["location.component.ts:26",{"_index":3514,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["location.id",{"_index":2373,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["location.issues",{"_index":2301,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["location.name",{"_index":3520,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["location/issue",{"_index":2546,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueLocationComponent.html":{},"coverage.html":{}}}],["locationid",{"_index":2276,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"miscellaneous/typealiases.html":{}}}],["locationids",{"_index":2314,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["locationids.filter(id",{"_index":2327,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["locations",{"_index":1561,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"miscellaneous/variables.html":{}}}],["log",{"_index":3873,"title":{},"body":{"components/LoginComponent.html":{},"components/TopToolbarComponent.html":{}}}],["logged",{"_index":618,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{}}}],["loggin",{"_index":4760,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["logic",{"_index":3427,"title":{},"body":{"components/IssueListComponent.html":{},"interfaces/Positions.html":{}}}],["login",{"_index":521,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["login'},{'name",{"_index":161,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["login(username",{"_index":666,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["login.component.html",{"_index":3835,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":3834,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":408,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["logincomponent",{"_index":160,"title":{"components/LoginComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["loginurl",{"_index":5838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logout",{"_index":657,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{}}}],["lollipop",{"_index":4570,"title":{},"body":{"interfaces/Positions.html":{}}}],["long",{"_index":5022,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"classes/Vector.html":{}}}],["longer",{"_index":926,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"injectables/IssueGraphStateService.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["look",{"_index":566,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"injectables/StateService.html":{},"index.html":{}}}],["loop",{"_index":3768,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["lowercase",{"_index":4904,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["made",{"_index":3889,"title":{},"body":{"components/MarkdownEditorComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["main",{"_index":1780,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"classes/NodeCache.html":{}}}],["make",{"_index":573,"title":{},"body":{"interfaces/AppState.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"injectables/StateService.html":{},"classes/Vector.html":{},"index.html":{}}}],["makecommentid(node",{"_index":970,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["makecomponentfilter",{"_index":1446,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["makecomponentfilter(search",{"_index":1452,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["makefilter",{"_index":2818,"title":{},"body":{"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/variables.html":{}}}],["makes",{"_index":2201,"title":{},"body":{"components/FrameComponent.html":{},"injectables/IssueGraphApiService.html":{}}}],["making",{"_index":5201,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["manage",{"_index":4818,"title":{},"body":{"components/ProjectMembersComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/userMock.html":{}}}],["manageclasssetters",{"_index":2951,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["manageclasssetters(graph",{"_index":2952,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["managed",{"_index":5774,"title":{},"body":{"index.html":{}}}],["managedragbehaviour(graph",{"_index":4316,"title":{},"body":{"interfaces/Positions.html":{}}}],["managedynamictemplateregistry",{"_index":3084,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["managedynamictemplateregistry(graph",{"_index":3085,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["manageeventlisteners(graph",{"_index":4384,"title":{},"body":{"interfaces/Positions.html":{}}}],["managelinkhandles",{"_index":3109,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["managelinkhandles(graph",{"_index":3117,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["management",{"_index":5770,"title":{},"body":{"index.html":{}}}],["manager",{"_index":4587,"title":{},"body":{"interfaces/Positions.html":{}}}],["manages",{"_index":1042,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{},"components/SideNavComponent.html":{}}}],["managing",{"_index":2948,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{}}}],["manipulation",{"_index":3156,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["manually",{"_index":1774,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"miscellaneous/typealiases.html":{}}}],["many",{"_index":4479,"title":{},"body":{"interfaces/Positions.html":{}}}],["map",{"_index":691,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"injectables/ProjectStoreService.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{}}}],["map(([selectedcategories",{"_index":3046,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["map(({data",{"_index":2584,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"injectables/ProjectStoreService.html":{}}}],["map([...components",{"_index":2310,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["map([...location.issues].filter(([category",{"_index":2302,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["map(gqlgraphcomponents.map(gqlcomponent",{"_index":2360,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["map(gqlinterfaces.map(gqlinterface",{"_index":2353,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["map(items",{"_index":3668,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["map(key",{"_index":3237,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["map(result",{"_index":2221,"title":{},"body":{"components/FrameComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/TopToolbarComponent.html":{}}}],["map(state",{"_index":2234,"title":{},"body":{"components/FrameComponent.html":{}}}],["map.set(component_context_menu_data",{"_index":1117,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["map.set(encodenodeid(id",{"_index":2023,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["mapfromgql",{"_index":2256,"title":{},"body":{"classes/GraphComponent.html":{},"classes/GraphInterface.html":{}}}],["mapfromgql(gqlgraphcomponents",{"_index":2265,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["mapfromgql(gqlinterfaces",{"_index":2352,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["mapping",{"_index":2315,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{}}}],["maps",{"_index":1812,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["margin",{"_index":1187,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["mark",{"_index":2694,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/RegisterComponent.html":{}}}],["markdown",{"_index":163,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"dependencies.html":{}}}],["markdown/markdown",{"_index":451,"title":{},"body":{"modules/AppModule.html":{}}}],["markdowneditorcomponent",{"_index":162,"title":{"components/MarkdownEditorComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["markdownmodule",{"_index":454,"title":{},"body":{"modules/AppModule.html":{}}}],["markdownmodule.forroot",{"_index":491,"title":{},"body":{"modules/AppModule.html":{}}}],["markdownpreviewcomponent",{"_index":165,"title":{"components/MarkdownPreviewComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["marker",{"_index":4345,"title":{},"body":{"interfaces/Positions.html":{}}}],["markerend",{"_index":1278,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["marks",{"_index":2712,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/RegisterComponent.html":{}}}],["mat",{"_index":274,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SideNavComponent.html":{},"components/TopToolbarComponent.html":{}}}],["mat_dialog_data",{"_index":256,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/MultiSourceList.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{}}}],["mat_form_field_default_options",{"_index":2508,"title":{},"body":{"modules/GraphsModule.html":{}}}],["matbutton",{"_index":5000,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["matbuttonmodule",{"_index":358,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["matbuttontogglemodule",{"_index":465,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["match",{"_index":2117,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"interfaces/TextFragment.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["matcheckboxmodule",{"_index":2527,"title":{},"body":{"modules/GraphsModule.html":{}}}],["matches",{"_index":4905,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"interfaces/userMock.html":{}}}],["matching",{"_index":223,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["matchstrings",{"_index":3984,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["matchstrings.push(cursor",{"_index":3990,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["matchvalidator",{"_index":2112,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["matdialog",{"_index":36,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/userMock.html":{}}}],["matdialogmodule",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["matdialogref",{"_index":35,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/MultiSourceList.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{}}}],["matdialogref,@inject(mat_dialog_data",{"_index":257,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{}}}],["matexpansionmodule",{"_index":420,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodule",{"_index":415,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["math.abs(date.parse(timelineitem.createdat",{"_index":960,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["math.abs(linkhandle.x",{"_index":3134,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["math.abs(linkhandle.y",{"_index":3135,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["math.max(0",{"_index":4464,"title":{},"body":{"interfaces/Positions.html":{}}}],["math.max(1",{"_index":3751,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["math.max(nodex",{"_index":4697,"title":{},"body":{"interfaces/Positions.html":{}}}],["math.max(nodey",{"_index":4699,"title":{},"body":{"interfaces/Positions.html":{}}}],["math.max(this.height",{"_index":1161,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["math.max(this.width",{"_index":1159,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["math.max(y",{"_index":4423,"title":{},"body":{"interfaces/Positions.html":{}}}],["math.min(nodex",{"_index":4693,"title":{},"body":{"interfaces/Positions.html":{}}}],["math.min(nodey",{"_index":4695,"title":{},"body":{"interfaces/Positions.html":{}}}],["math.random",{"_index":1515,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["math.random().tostring",{"_index":1013,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{}}}],["math.random().tostring(36",{"_index":1588,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["math.round((nowms",{"_index":5426,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["math.round(hours",{"_index":5430,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["math.round(minutes",{"_index":5429,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["math.sqrt",{"_index":3338,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["math.sqrt(0.5",{"_index":3348,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["maticonmodule",{"_index":362,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["maticonregistry",{"_index":286,"title":{},"body":{"components/AppComponent.html":{}}}],["matinputmodule",{"_index":413,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["matlistmodule",{"_index":363,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["matmenumodule",{"_index":2534,"title":{},"body":{"modules/GraphsModule.html":{}}}],["matpaginator",{"_index":3414,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["matpaginatormodule",{"_index":2509,"title":{},"body":{"modules/GraphsModule.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["matprogressspinnermodule",{"_index":2543,"title":{},"body":{"modules/GraphsModule.html":{}}}],["matselectmodule",{"_index":418,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["matsidenavmodule",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["matslidetogglemodule",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["matsort",{"_index":3419,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["matsortable",{"_index":3423,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["matsortmodule",{"_index":2516,"title":{},"body":{"modules/GraphsModule.html":{}}}],["matspinner",{"_index":2544,"title":{},"body":{"modules/GraphsModule.html":{}}}],["mattabledatasource",{"_index":3411,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["mattabledatasource(data",{"_index":3453,"title":{},"body":{"components/IssueListComponent.html":{}}}],["mattabledatasource(this.mockusers",{"_index":4881,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["mattablemodule",{"_index":2505,"title":{},"body":{"modules/GraphsModule.html":{}}}],["mattabsmodule",{"_index":369,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["mattoolbarmodule",{"_index":356,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["mattooltipmodule",{"_index":2541,"title":{},"body":{"modules/GraphsModule.html":{}}}],["max",{"_index":92,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["max_distance_connected",{"_index":3678,"title":{},"body":{"classes/LayoutNode.html":{}}}],["maximum",{"_index":3697,"title":{},"body":{"classes/LayoutNode.html":{}}}],["maxopened",{"_index":486,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["maybe",{"_index":1788,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"classes/NodeCache.html":{}}}],["maybelocallist",{"_index":5821,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["media",{"_index":2733,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{}}}],["member",{"_index":105,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["members",{"_index":517,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ProjectMembersComponent.html":{},"components/SideNavComponent.html":{},"index.html":{},"interfaces/userMock.html":{}}}],["members'},{'name",{"_index":178,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["members.component",{"_index":507,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GraphsModule.html":{}}}],["members.component.html",{"_index":4826,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["members.component.scss",{"_index":4825,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["members.component.ts",{"_index":4817,"title":{},"body":{"components/ProjectMembersComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["members.component.ts:115",{"_index":4841,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:119",{"_index":4832,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:125",{"_index":4835,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:26",{"_index":4866,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:27",{"_index":4868,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:28",{"_index":4873,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:29",{"_index":4872,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:30",{"_index":4871,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:31",{"_index":4870,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:32",{"_index":4874,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:34",{"_index":4851,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:35",{"_index":4852,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:38",{"_index":4865,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:47",{"_index":4850,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:51",{"_index":4830,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:77",{"_index":4837,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:97",{"_index":4838,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members/project",{"_index":506,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GraphsModule.html":{},"components/ProjectMembersComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["memberslink",{"_index":5310,"title":{},"body":{"components/SideNavComponent.html":{}}}],["memory",{"_index":1779,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["menu",{"_index":69,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/FrameComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TopToolbarComponent.html":{}}}],["menu.component",{"_index":445,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Positions.html":{}}}],["menu.component.html",{"_index":1045,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["menu.component.scss",{"_index":1044,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["menu.component.ts",{"_index":1041,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["menu.component.ts:117",{"_index":1071,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["menu.component.ts:119",{"_index":1068,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["menu.component.ts:121",{"_index":1069,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["menu.component.ts:134",{"_index":1052,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["menu.component.ts:136",{"_index":1066,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["menu.component.ts:166",{"_index":1057,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["menu.component.ts:175",{"_index":1053,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["menu.component.ts:45",{"_index":1195,"title":{},"body":{"injectables/ComponentContextMenuService.html":{}}}],["menu.component.ts:60",{"_index":1196,"title":{},"body":{"injectables/ComponentContextMenuService.html":{}}}],["menu/component",{"_index":444,"title":{},"body":{"modules/AppModule.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/Positions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["menuclick",{"_index":5505,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["menutitle",{"_index":5311,"title":{},"body":{"components/SideNavComponent.html":{}}}],["merge",{"_index":2021,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["message",{"_index":2468,"title":{},"body":{"modules/GraphQLModule.html":{},"components/LoginComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"injectables/UserNotifyService.html":{}}}],["message.startswith",{"_index":5157,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["message.substring(1",{"_index":5158,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["messages",{"_index":1022,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["met",{"_index":5792,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":16,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["method",{"_index":622,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectStoreService.html":{},"interfaces/RelationEdge.html":{},"components/SetEditorComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"interfaces/userMock.html":{}}}],["methods",{"_index":30,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"classes/TimeFormatter.html":{},"components/TopToolbarComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{}}}],["mgmt",{"_index":2872,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["mico",{"_index":4234,"title":{},"body":{"interfaces/Positions.html":{}}}],["middle",{"_index":2594,"title":{},"body":{"components/IssueCategoryComponent.html":{},"components/IssueItemComponent.html":{},"components/RemoveDialogComponent.html":{},"components/TextDisplayComponent.html":{}}}],["min",{"_index":90,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/IssueFilterComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/NodeDetailsComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{}}}],["min_distance_connected",{"_index":3679,"title":{},"body":{"classes/LayoutNode.html":{}}}],["min_distance_edge",{"_index":3680,"title":{},"body":{"classes/LayoutNode.html":{}}}],["min_distance_not_connected",{"_index":3681,"title":{},"body":{"classes/LayoutNode.html":{}}}],["min_height",{"_index":1125,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["min_width",{"_index":1123,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["minheight",{"_index":1113,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["minimap",{"_index":2953,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{}}}],["minimap.addedge(event.detail.edge",{"_index":4409,"title":{},"body":{"interfaces/Positions.html":{}}}],["minimap.addnode(node",{"_index":4406,"title":{},"body":{"interfaces/Positions.html":{}}}],["minimap.calculatelinkhandlesforedge",{"_index":3129,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["minimap.completerender",{"_index":4503,"title":{},"body":{"interfaces/Positions.html":{}}}],["minimap.removeedge(event.detail.edge",{"_index":4410,"title":{},"body":{"interfaces/Positions.html":{}}}],["minimap.removenode(node",{"_index":4408,"title":{},"body":{"interfaces/Positions.html":{}}}],["minimap.setedgeclass",{"_index":2973,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["minimap.setnodeclass",{"_index":2966,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["minimap.updategraphpositions",{"_index":4506,"title":{},"body":{"interfaces/Positions.html":{}}}],["minimap.updatenodeclasses",{"_index":4505,"title":{},"body":{"interfaces/Positions.html":{}}}],["minimap.zoomtoboundingbox",{"_index":4504,"title":{},"body":{"interfaces/Positions.html":{}}}],["minimum",{"_index":3699,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["minute",{"_index":5441,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["minutes",{"_index":5425,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["minwidth",{"_index":1111,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["mirrors",{"_index":1981,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/typealiases.html":{}}}],["miscellaneous",{"_index":5753,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mitteleuropäische",{"_index":5400,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["mock",{"_index":4878,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/TopToolbarComponent.html":{},"index.html":{},"interfaces/userMock.html":{}}}],["mocked",{"_index":229,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"index.html":{}}}],["mockmembers",{"_index":4895,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["mockusers",{"_index":4822,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["mode",{"_index":5285,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["modeicon",{"_index":5286,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["module",{"_index":329,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{}},"body":{"modules/GraphsModule.html":{},"index.html":{}}}],["modules",{"_index":331,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["monaco",{"_index":450,"title":{},"body":{"modules/AppModule.html":{},"components/MarkdownEditorComponent.html":{},"dependencies.html":{}}}],["monacoeditormodule",{"_index":449,"title":{},"body":{"modules/AppModule.html":{}}}],["monacoeditormodule.forroot",{"_index":490,"title":{},"body":{"modules/AppModule.html":{}}}],["month",{"_index":5435,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["months",{"_index":5420,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["more",{"_index":941,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/Vector.html":{}}}],["more_vert",{"_index":5269,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["mouseevent",{"_index":1158,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/RegisterComponent.html":{}}}],["move",{"_index":3489,"title":{},"body":{"components/IssueListComponent.html":{},"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["movechildrenalonggoup",{"_index":3185,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["moved",{"_index":4352,"title":{},"body":{"interfaces/Positions.html":{}}}],["movement",{"_index":3709,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["moves",{"_index":1957,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["movex",{"_index":4463,"title":{},"body":{"interfaces/Positions.html":{}}}],["movey",{"_index":4466,"title":{},"body":{"interfaces/Positions.html":{}}}],["moz",{"_index":4808,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["multiple",{"_index":2139,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{}}}],["multisourcelist",{"_index":3907,"title":{"classes/MultiSourceList.html":{}},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["multisourcelist(this.data.listall",{"_index":4029,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["multisourcelist.fromsinglelist(this.data.listall",{"_index":4032,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["mutate",{"_index":2054,"title":{},"body":{"injectables/DataService.html":{}}}],["mutation",{"_index":1306,"title":{},"body":{"injectables/ComponentStoreService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"injectables/DataService.html":{},"components/RegisterComponent.html":{}}}],["mutationinputdata",{"_index":4196,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["mutations",{"_index":2055,"title":{},"body":{"injectables/DataService.html":{},"injectables/IssueStoreService.html":{},"coverage.html":{},"index.html":{}}}],["mutations(queries",{"_index":2072,"title":{},"body":{"injectables/DataService.html":{}}}],["mutually",{"_index":564,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["n",{"_index":3956,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/TimeFormatter.html":{}}}],["name",{"_index":41,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["namedoptions",{"_index":2420,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["nameformatvalidator",{"_index":730,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["names",{"_index":2115,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphClassSettersService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"components/RemoveDialogComponent.html":{},"miscellaneous/enumerations.html":{}}}],["namevalidator",{"_index":731,"title":{},"body":{"classes/CCIMSValidators.html":{},"components/CreateProjectDialogComponent.html":{}}}],["narrow",{"_index":2736,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueLocationComponent.html":{}}}],["nativeelement",{"_index":4247,"title":{},"body":{"interfaces/Positions.html":{}}}],["nav",{"_index":4811,"title":{},"body":{"components/ProjectListComponent.html":{},"components/SideNavComponent.html":{}}}],["nav'},{'name",{"_index":194,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["nav.component",{"_index":379,"title":{},"body":{"modules/AppModule.html":{}}}],["nav.component.html",{"_index":5306,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.scss",{"_index":5305,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts",{"_index":5301,"title":{},"body":{"components/SideNavComponent.html":{},"coverage.html":{}}}],["nav.component.ts:17",{"_index":5315,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:18",{"_index":5319,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:19",{"_index":5321,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:20",{"_index":5316,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:21",{"_index":5317,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:22",{"_index":5314,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:24",{"_index":5323,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:25",{"_index":5322,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:26",{"_index":5320,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav/side",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"components/SideNavComponent.html":{},"coverage.html":{}}}],["navigate",{"_index":5766,"title":{},"body":{"index.html":{}}}],["navigates",{"_index":3381,"title":{},"body":{"components/IssueListComponent.html":{}}}],["navigating",{"_index":616,"title":{},"body":{"guards/AuthGuard.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["navigation",{"_index":2194,"title":{},"body":{"components/FrameComponent.html":{},"components/SideNavComponent.html":{}}}],["navigationend",{"_index":533,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["nbsp",{"_index":2725,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["nbsp;&nbsp;&nbsp;&nbsp",{"_index":5156,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["nbsp;&sdot",{"_index":2728,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["nd.id",{"_index":3815,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["nearest",{"_index":3217,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["necessary",{"_index":1980,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/MarkdownEditorComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"classes/TimeFormatter.html":{},"miscellaneous/typealiases.html":{}}}],["need",{"_index":843,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueGraphControlsComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["needed",{"_index":1752,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"classes/TimeFormatter.html":{}}}],["network",{"_index":2449,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["networkerror",{"_index":2465,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["networkerror.name}\\n${networkerror.message}\\n${networkerror.stack",{"_index":2474,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["networkerror.status",{"_index":2475,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["networkerrortoast",{"_index":2451,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["never",{"_index":1808,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["new",{"_index":248,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"interfaces/InterfaceNode.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"classes/Vector.html":{},"coverage.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["newdata",{"_index":4313,"title":{},"body":{"interfaces/Positions.html":{}}}],["newest",{"_index":1837,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/IssueGraphApiService.html":{},"classes/NodeCache.html":{}}}],["newly",{"_index":3010,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["newposition",{"_index":3213,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["newposition.x",{"_index":3219,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["newposition.y",{"_index":3220,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["newsourceset",{"_index":3964,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["newsourceset.add(encodelistid(source",{"_index":3968,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["newsourceset.add(encodelistid(this.spec.listfromnode(nodeid",{"_index":3966,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["newsourceset.has(source",{"_index":3977,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["newvalue",{"_index":5220,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["next",{"_index":795,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"classes/NodeCache.html":{},"components/RemoveDialogComponent.html":{}}}],["nextpage",{"_index":1964,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["ng",{"_index":389,"title":{},"body":{"modules/AppModule.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/FilterSelection.html":{},"modules/GraphsModule.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/LabelSearchComponent.html":{},"components/NodeDetailsComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":872,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["ngmodel",{"_index":3030,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["ngmodule",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{}}}],["ngonchanges(changes",{"_index":5218,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["ngondestroy",{"_index":803,"title":{},"body":{"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["ngoninit",{"_index":64,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"interfaces/TextFragment.html":{},"interfaces/userMock.html":{}}}],["ngoptionhighlightmodule",{"_index":432,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["ngselectmodule",{"_index":429,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["ngx",{"_index":424,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"components/MarkdownEditorComponent.html":{},"injectables/UserNotifyService.html":{},"dependencies.html":{}}}],["ngzorroantdmodule",{"_index":395,"title":{},"body":{"modules/AppModule.html":{}}}],["nice",{"_index":5769,"title":{},"body":{"index.html":{}}}],["noce",{"_index":2964,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["node",{"_index":168,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["node.component",{"_index":2537,"title":{},"body":{"modules/GraphsModule.html":{}}}],["node.component.ts",{"_index":760,"title":{},"body":{"components/CacheNodeComponent.html":{},"coverage.html":{}}}],["node.component.ts:18",{"_index":779,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["node.component.ts:20",{"_index":771,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["node.component.ts:21",{"_index":784,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["node.component.ts:23",{"_index":786,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["node.component.ts:24",{"_index":770,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["node.dataaspromise().then(data",{"_index":1478,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["node.id",{"_index":972,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["node.id.tostring",{"_index":4447,"title":{},"body":{"interfaces/Positions.html":{}}}],["node.id}__issue",{"_index":1263,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["node.invalidate",{"_index":1476,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["node.issuecount",{"_index":4477,"title":{},"body":{"interfaces/Positions.html":{}}}],["node.issuegroupcontainer",{"_index":4599,"title":{},"body":{"interfaces/Positions.html":{}}}],["node.issuegroupnodeids.size",{"_index":4682,"title":{},"body":{"interfaces/Positions.html":{}}}],["node.load",{"_index":1477,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["node.position",{"_index":4397,"title":{},"body":{"interfaces/Positions.html":{}}}],["node.type",{"_index":2962,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"interfaces/Positions.html":{}}}],["node.x",{"_index":4400,"title":{},"body":{"interfaces/Positions.html":{}}}],["node.y",{"_index":4401,"title":{},"body":{"interfaces/Positions.html":{}}}],["node?.id",{"_index":2008,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["node]'},{'name",{"_index":110,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["nodecache",{"_index":1904,"title":{"classes/NodeCache.html":{}},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/NodeCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nodecache(queries",{"_index":2070,"title":{},"body":{"injectables/DataService.html":{}}}],["nodeclasssetter",{"_index":2960,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["nodeclickcontextmenuhastype(node",{"_index":4440,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodeclickissuefolder(node",{"_index":4471,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodeclickmanyissues(rootnode",{"_index":4493,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodeclickoneissue(rootid",{"_index":4481,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodedeleted",{"_index":1147,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsComponent.html":{}}}],["nodedetails",{"_index":1137,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["nodedetailscomponent",{"_index":167,"title":{"components/NodeDetailsComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nodedetailspagecomponent",{"_index":170,"title":{"components/NodeDetailsPageComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nodedetailsready",{"_index":1046,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["nodedetailstype",{"_index":1085,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"miscellaneous/enumerations.html":{}}}],["nodedetailstype.component",{"_index":4132,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{}}}],["nodedetailstype.interface",{"_index":4143,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{}}}],["nodeid",{"_index":778,"title":{"interfaces/NodeId.html":{}},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nodeid[]).length",{"_index":5225,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["nodeidenc",{"_index":1731,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/typealiases.html":{}}}],["nodelist",{"_index":4707,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodequeries",{"_index":5641,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["nodequeries[type",{"_index":5925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nodequeries[type](i",{"_index":5927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nodequery",{"_index":4125,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["nodequeryinput",{"_index":5822,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["nodes",{"_index":1232,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["nodes.get(edge.source).connectto(nodes.get(edge.target",{"_index":4705,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodes.get(edge.target).connectto(nodes.get(edge.source",{"_index":4706,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodes.get(node.id",{"_index":4710,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodes.has(edge.source",{"_index":4703,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodes.has(edge.target",{"_index":4704,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodes.length",{"_index":3758,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["nodes.set(node.id",{"_index":4701,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodes.ts",{"_index":1199,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["nodes[0",{"_index":3766,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["nodesub",{"_index":765,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["nodetype",{"_index":835,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/InterfaceNode.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{},"miscellaneous/enumerations.html":{}}}],["nodetype.component",{"_index":1254,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["nodetype.componentinterface",{"_index":3438,"title":{},"body":{"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["nodetype.interface",{"_index":1259,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["nodetype.interfaceconsumer",{"_index":1285,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["nodetype.issue",{"_index":884,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/LinkedIssueItemComponent.html":{},"miscellaneous/variables.html":{}}}],["nodetype.issuecomment",{"_index":971,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["nodetype.issuegroupcontainer",{"_index":1264,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["nodetype.label",{"_index":5853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nodetype.project",{"_index":2807,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"miscellaneous/variables.html":{}}}],["nodetype.root",{"_index":3816,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/variables.html":{}}}],["nodetype.user",{"_index":3817,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/variables.html":{}}}],["nodetype[nd.type",{"_index":3814,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["nodetype[parts[0",{"_index":3811,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["nodetype[typename",{"_index":3805,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["nodetypefromtypename",{"_index":1732,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["nodetypefromtypename(item.__typename",{"_index":4045,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["nodetypefromtypename(node.__typename",{"_index":2009,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["nodetypefromtypename(typename",{"_index":3804,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["nodeupdatedcallbackfn",{"_index":1086,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsComponent.html":{},"miscellaneous/typealiases.html":{}}}],["nodex",{"_index":4684,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodey",{"_index":4686,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodisplay",{"_index":5516,"title":{},"body":{"components/UserItemComponent.html":{}}}],["non",{"_index":1604,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["none",{"_index":2873,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/TimelineItemComponent.html":{},"miscellaneous/typealiases.html":{}}}],["normal",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/IssueItemComponent.html":{}}}],["normalize",{"_index":5569,"title":{},"body":{"classes/Vector.html":{}}}],["normalized",{"_index":5597,"title":{},"body":{"classes/Vector.html":{}}}],["north",{"_index":4216,"title":{},"body":{"interfaces/Positions.html":{}}}],["not(.has",{"_index":5520,"title":{},"body":{"components/UserItemComponent.html":{}}}],["notation",{"_index":4571,"title":{},"body":{"interfaces/Positions.html":{}}}],["note",{"_index":78,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"classes/Vector.html":{}}}],["nothing",{"_index":4765,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["nothing(e",{"_index":4771,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["notification",{"_index":3076,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/UserNotifyService.html":{}}}],["notify",{"_index":984,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/SideNavComponent.html":{},"injectables/UserNotifyService.html":{}}}],["notify.notifyerror('the",{"_index":5334,"title":{},"body":{"components/SideNavComponent.html":{}}}],["notify.service",{"_index":1004,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{}}}],["notify.service.ts",{"_index":5522,"title":{},"body":{"injectables/UserNotifyService.html":{},"coverage.html":{}}}],["notify.service.ts:23",{"_index":5526,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["notify.service.ts:33",{"_index":5528,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["notify.service.ts:45",{"_index":5533,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["notify/user",{"_index":1003,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"injectables/UserNotifyService.html":{},"coverage.html":{}}}],["notifyerror",{"_index":5523,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["notifyerror(message",{"_index":5527,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["notifyinfo",{"_index":5524,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["notifyinfo(message",{"_index":5532,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["notifyservice",{"_index":4020,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["now",{"_index":757,"title":{},"body":{"classes/CCIMSValidators.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"classes/TimeFormatter.html":{}}}],["now.getfullyear",{"_index":5423,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["now.getmonth",{"_index":5421,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["nowms",{"_index":5416,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["nowrap",{"_index":5163,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["npm",{"_index":5764,"title":{},"body":{"index.html":{}}}],["nth",{"_index":5277,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["null",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"components/FrameComponent.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"injectables/StateService.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["nullable",{"_index":1938,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueLabelComponent.html":{},"classes/NodeCache.html":{}}}],["number",{"_index":1055,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/QueryListParams.html":{},"interfaces/RelationEdge.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/TimeFormatter.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["nz",{"_index":4803,"title":{},"body":{"components/ProjectListComponent.html":{},"components/RegisterComponent.html":{}}}],["nz_i18n",{"_index":393,"title":{},"body":{"modules/AppModule.html":{}}}],["nz_icons",{"_index":388,"title":{},"body":{"modules/AppModule.html":{}}}],["obervable",{"_index":3049,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["object",{"_index":1747,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["object.entries(ccimsicons",{"_index":302,"title":{},"body":{"components/AppComponent.html":{}}}],["object.keys(antdesignicons).map(key",{"_index":477,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["object.keys(issuecategory",{"_index":3236,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["object.keys(issuecategory).foreach(key",{"_index":4609,"title":{},"body":{"interfaces/Positions.html":{}}}],["object.keys(predicates).filter(id",{"_index":2835,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["object.keys(predicates).length",{"_index":2799,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["object.keys(this.savedpositions.nodes).length",{"_index":4518,"title":{},"body":{"interfaces/Positions.html":{}}}],["object.keys(this.validateform.controls",{"_index":5141,"title":{},"body":{"components/RegisterComponent.html":{}}}],["object.keys(this.validateform.controls).foreach(controlkey",{"_index":3858,"title":{},"body":{"components/LoginComponent.html":{}}}],["object.values(issuecategory",{"_index":2925,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["objects",{"_index":1302,"title":{},"body":{"injectables/ComponentStoreService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/LabelStoreService.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["objkey",{"_index":3986,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["observable",{"_index":547,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"injectables/ComponentStoreService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/NodeCache.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectStoreService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"components/SettingsDialogComponent.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"interfaces/userMock.html":{}}}],["observable#subscribe",{"_index":1759,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["observable((observer",{"_index":5131,"title":{},"body":{"components/RegisterComponent.html":{}}}],["observables",{"_index":3151,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["observe",{"_index":5078,"title":{},"body":{"interfaces/QueryListParams.html":{}}}],["observed",{"_index":3425,"title":{},"body":{"components/IssueListComponent.html":{}}}],["observer",{"_index":5122,"title":{},"body":{"components/RegisterComponent.html":{}}}],["observer.complete",{"_index":5138,"title":{},"body":{"components/RegisterComponent.html":{}}}],["observer.next(null",{"_index":5137,"title":{},"body":{"components/RegisterComponent.html":{}}}],["observer.next({error",{"_index":5135,"title":{},"body":{"components/RegisterComponent.html":{}}}],["observers",{"_index":2050,"title":{},"body":{"injectables/DataService.html":{}}}],["obtain",{"_index":1668,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["occurred",{"_index":5529,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["oct",{"_index":5396,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["offer",{"_index":2322,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["offered",{"_index":2554,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["offeredby",{"_index":2343,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["offeredbyid",{"_index":1255,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["offering",{"_index":2316,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{},"miscellaneous/variables.html":{}}}],["offeringcomponentid",{"_index":2573,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["offers",{"_index":4821,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"index.html":{},"interfaces/userMock.html":{}}}],["offset",{"_index":1061,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["offsetx",{"_index":1106,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["offsety",{"_index":1107,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["old",{"_index":4737,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["onaddclick",{"_index":3371,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["oncancelclick",{"_index":4087,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["once",{"_index":2699,"title":{},"body":{"components/IssueDetailComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/TextDisplayComponent.html":{},"miscellaneous/typealiases.html":{}}}],["onchanges",{"_index":5176,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["onclick",{"_index":5023,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["onconfirmclick",{"_index":1447,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["onconfirmclick(name",{"_index":1455,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["oncreate",{"_index":1550,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["oncreateedge",{"_index":4331,"title":{},"body":{"interfaces/Positions.html":{}}}],["ondeleteclick",{"_index":2122,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"interfaces/userMock.html":{}}}],["ondestroy",{"_index":763,"title":{},"body":{"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["ondialogapplychangeset",{"_index":5227,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["ondialogcreateitem",{"_index":5229,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["ondialogdeleteitem",{"_index":5233,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["ondialogedititem",{"_index":5231,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["ondraggededgetargetchanged",{"_index":4353,"title":{},"body":{"interfaces/Positions.html":{}}}],["one",{"_index":66,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueListComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"injectables/ProjectStoreService.html":{},"interfaces/QueryListParams.html":{},"index.html":{}}}],["onedgeadd",{"_index":4356,"title":{},"body":{"interfaces/Positions.html":{}}}],["onedgedrop",{"_index":4366,"title":{},"body":{"interfaces/Positions.html":{}}}],["onedgeremove",{"_index":4381,"title":{},"body":{"interfaces/Positions.html":{}}}],["oneditclick",{"_index":4088,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["oneditfinished",{"_index":5353,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["onerror",{"_index":2430,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["onerror(({graphqlerrors",{"_index":2464,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["oninit",{"_index":15,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"interfaces/TextFragment.html":{},"interfaces/userMock.html":{}}}],["onlabelcancelclick",{"_index":1448,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["onminimaprender(minimap",{"_index":4498,"title":{},"body":{"interfaces/Positions.html":{}}}],["onmousemove(event",{"_index":1157,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["onmouseup",{"_index":1155,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["onnoclick",{"_index":239,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["onnoclick(showconfirmdialog",{"_index":1555,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["onnodeclick",{"_index":4424,"title":{},"body":{"interfaces/Positions.html":{}}}],["onnodeupdate",{"_index":4205,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["onnodeupdate(deleted",{"_index":4207,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["onokclick",{"_index":240,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["onokclick(name",{"_index":1412,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["onpagechange",{"_index":4829,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["onpagechange(event",{"_index":4839,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["onsaveclick",{"_index":4089,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["onto",{"_index":3150,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["opacity",{"_index":2655,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/UserItemComponent.html":{}}}],["open",{"_index":1090,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueIconComponent.html":{},"interfaces/Positions.html":{},"components/SettingsDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["open(parent",{"_index":1098,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["openaccesstokensettings",{"_index":5287,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["opencreatecomponentdialog",{"_index":4722,"title":{},"body":{"interfaces/Positions.html":{}}}],["opencreateprojectdialog",{"_index":4766,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["opened",{"_index":2726,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["opening",{"_index":4371,"title":{},"body":{"interfaces/Positions.html":{}}}],["openprofilesettings",{"_index":5288,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["opens",{"_index":1571,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{}}}],["opensettingsdialog",{"_index":5503,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["operation",{"_index":2466,"title":{},"body":{"modules/GraphQLModule.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["operations",{"_index":3535,"title":{},"body":{"injectables/IssueStoreService.html":{},"injectables/ProjectStoreService.html":{},"components/SetEditorComponent.html":{}}}],["optimized",{"_index":4634,"title":{},"body":{"interfaces/Positions.html":{}}}],["option",{"_index":433,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"dependencies.html":{}}}],["option2",{"_index":52,"title":{},"body":{"components/AccessTokenDialogComponent.html":{}}}],["optional",{"_index":43,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData-1.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{}}}],["optionally",{"_index":5530,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["options",{"_index":2813,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/MarkdownEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["order",{"_index":1234,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{}}}],["ordered",{"_index":1880,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["original",{"_index":4335,"title":{},"body":{"interfaces/Positions.html":{}}}],["originally",{"_index":3847,"title":{},"body":{"components/LoginComponent.html":{}}}],["originates",{"_index":4339,"title":{},"body":{"interfaces/Positions.html":{}}}],["originating",{"_index":4619,"title":{},"body":{"interfaces/Positions.html":{}}}],["originx",{"_index":1101,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["originy",{"_index":1103,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["othernode",{"_index":3736,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["othernode.id",{"_index":3739,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["othernode.padding",{"_index":3749,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["othernode.position.subtract(this.position",{"_index":3744,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["othernodesvisited",{"_index":3735,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["otherwise",{"_index":523,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueListComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{}}}],["out",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CCIMSValidators.html":{},"interfaces/FilterSelection.html":{},"modules/GraphsModule.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueIconComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TextFragment.html":{},"components/TopToolbarComponent.html":{},"overview.html":{}}}],["outlet",{"_index":2216,"title":{},"body":{"components/FrameComponent.html":{}}}],["outlet.activatedroutedata",{"_index":2237,"title":{},"body":{"components/FrameComponent.html":{}}}],["outlet.activatedroutedata.animation",{"_index":2238,"title":{},"body":{"components/FrameComponent.html":{}}}],["output",{"_index":2804,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/SetEditorComponent.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{},"index.html":{}}}],["outputs",{"_index":2771,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/SetEditorComponent.html":{},"components/TopToolbarComponent.html":{}}}],["outside",{"_index":5585,"title":{},"body":{"classes/Vector.html":{}}}],["over",{"_index":3738,"title":{},"body":{"classes/LayoutNode.html":{},"components/MarkdownEditorComponent.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["overflow",{"_index":1192,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["overlay",{"_index":1077,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/FrameComponent.html":{},"interfaces/Positions.html":{}}}],["overlayref",{"_index":1078,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["overlayx",{"_index":1104,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["overlayy",{"_index":1105,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["override",{"_index":5185,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["overview",{"_index":4793,"title":{"overview.html":{}},"body":{"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SideNavComponent.html":{},"index.html":{},"overview.html":{}}}],["overview'},{'name",{"_index":180,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["overview.component",{"_index":375,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["overview.component.html",{"_index":4914,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.scss",{"_index":4913,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.ts",{"_index":4911,"title":{},"body":{"components/ProjectOverviewComponent.html":{},"coverage.html":{}}}],["overview.component.ts:23",{"_index":4921,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.ts:25",{"_index":4920,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.ts:26",{"_index":4919,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.ts:27",{"_index":4916,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.ts:47",{"_index":4918,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.ts:55",{"_index":4917,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview/project",{"_index":374,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ProjectOverviewComponent.html":{},"coverage.html":{}}}],["overviewlink",{"_index":5312,"title":{},"body":{"components/SideNavComponent.html":{}}}],["overwriting",{"_index":2015,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["owner",{"_index":4912,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["p",{"_index":1727,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/TimelineItemComponent.html":{}}}],["package",{"_index":5718,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":3748,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["padding",{"_index":1166,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"classes/Vector.html":{}}}],["padding.these",{"_index":4654,"title":{},"body":{"interfaces/Positions.html":{}}}],["padding_component",{"_index":3682,"title":{},"body":{"classes/LayoutNode.html":{}}}],["padding_interface",{"_index":3683,"title":{},"body":{"classes/LayoutNode.html":{}}}],["paddingx",{"_index":4663,"title":{},"body":{"interfaces/Positions.html":{}}}],["paddingy",{"_index":4667,"title":{},"body":{"interfaces/Positions.html":{}}}],["page",{"_index":641,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"modules/GraphQLModule.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"index.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["page.component",{"_index":461,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.html",{"_index":4204,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["page.component.scss",{"_index":4203,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["page.component.ts",{"_index":4202,"title":{},"body":{"components/NodeDetailsPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:10",{"_index":4210,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["page.component.ts:11",{"_index":4209,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["page.component.ts:12",{"_index":4206,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["page.component.ts:34",{"_index":4208,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["page/node",{"_index":460,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/NodeDetailsPageComponent.html":{},"coverage.html":{}}}],["pageevent",{"_index":4840,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["pagefill",{"_index":4758,"title":{},"body":{"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["pageinfo",{"_index":1738,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["pages",{"_index":4899,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["pagesizes",{"_index":1644,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["pagesizes]=\"[10",{"_index":2644,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["paginated",{"_index":4819,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["pagination",{"_index":1937,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["pagination/sorting/filtering",{"_index":3460,"title":{},"body":{"components/IssueListComponent.html":{}}}],["paginator",{"_index":1641,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["paginator'},{'name",{"_index":127,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["paginator.component",{"_index":2521,"title":{},"body":{"modules/GraphsModule.html":{}}}],["paginator.component.html",{"_index":1643,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["paginator.component.scss",{"_index":1642,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["paginator.component.ts",{"_index":1637,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"coverage.html":{}}}],["paginator.component.ts:14",{"_index":1645,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["paginator.component.ts:16",{"_index":1647,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["paginator/cursor",{"_index":1636,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"modules/GraphsModule.html":{},"coverage.html":{}}}],["paginatormodule",{"_index":4828,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["pairs",{"_index":2957,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["panel",{"_index":5479,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["param",{"_index":575,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"classes/TimeFormatter.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"classes/Vector.html":{}}}],["parameter",{"_index":1786,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["parameterize",{"_index":5800,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":39,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{}}}],["params",{"_index":1691,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueListComponent.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["params(p",{"_index":1798,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["params.filter",{"_index":3471,"title":{},"body":{"components/IssueListComponent.html":{}}}],["parent",{"_index":1064,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/MarkdownEditorComponent.html":{},"interfaces/NodeId.html":{}}}],["parent}__${issuecategory[key",{"_index":3238,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["parent}__bug",{"_index":3244,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["parent}__feature",{"_index":3245,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["parent}__undecided",{"_index":3243,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["parsed",{"_index":4304,"title":{},"body":{"interfaces/Positions.html":{}}}],["parsing",{"_index":554,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["part",{"_index":5198,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["part).join",{"_index":325,"title":{},"body":{"components/AppComponent.html":{},"components/IssueIconComponent.html":{}}}],["partial",{"_index":485,"title":{},"body":{"modules/AppModule.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphQLModule.html":{},"classes/NodeCache.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["participants",{"_index":2822,"title":{},"body":{"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["parts",{"_index":3809,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["parts[1",{"_index":3812,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["pass",{"_index":3053,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/SetEditorComponent.html":{}}}],["passed",{"_index":1723,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/TopToolbarComponent.html":{}}}],["passes",{"_index":2198,"title":{},"body":{"components/FrameComponent.html":{}}}],["password",{"_index":667,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["passwords",{"_index":5151,"title":{},"body":{"components/RegisterComponent.html":{}}}],["pasttime",{"_index":5418,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["pasttime.getfullyear",{"_index":5424,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["pasttime.getmonth",{"_index":5422,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["pasttimems",{"_index":5414,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["path",{"_index":508,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":513,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pattern",{"_index":755,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["pcount",{"_index":1898,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["pcursor",{"_index":1897,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["pendingcreate",{"_index":4763,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["per",{"_index":1651,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"index.html":{}}}],["perceived",{"_index":3334,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["perform",{"_index":4796,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["performed",{"_index":813,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["perpendicularclockwise",{"_index":5570,"title":{},"body":{"classes/Vector.html":{}}}],["perpendicularcounterclockwise",{"_index":5571,"title":{},"body":{"classes/Vector.html":{}}}],["persisted",{"_index":5804,"title":{},"body":{"index.html":{}}}],["personal",{"_index":74,"title":{},"body":{"components/AccessTokenDialogComponent.html":{}}}],["pertain",{"_index":5780,"title":{},"body":{"index.html":{}}}],["pertaining",{"_index":600,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["pfilter",{"_index":1899,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["pforward",{"_index":1900,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["phone",{"_index":4427,"title":{},"body":{"interfaces/Positions.html":{}}}],["pick",{"_index":2340,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/LabelStoreService.html":{},"components/ProjectListComponent.html":{},"miscellaneous/typealiases.html":{}}}],["picker",{"_index":436,"title":{},"body":{"modules/AppModule.html":{},"components/IssueFilterComponent.html":{},"dependencies.html":{}}}],["piece",{"_index":1744,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["pipe",{"_index":2220,"title":{},"body":{"components/FrameComponent.html":{},"components/TopToolbarComponent.html":{}}}],["pipe(first",{"_index":3864,"title":{},"body":{"components/LoginComponent.html":{}}}],["pipe(map(response",{"_index":702,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["pipe(takeuntil(this.destroy",{"_index":4310,"title":{},"body":{"interfaces/Positions.html":{}}}],["place",{"_index":3762,"title":{},"body":{"classes/LayoutNode.html":{},"components/RemoveDialogComponent.html":{},"classes/Vector.html":{}}}],["placeholder",{"_index":4082,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/TextDisplayComponent.html":{}}}],["places",{"_index":3228,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["please",{"_index":5150,"title":{},"body":{"components/RegisterComponent.html":{}}}],["pluralize",{"_index":5390,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["pluralize(n",{"_index":5408,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["pluralized",{"_index":5411,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["pnodes",{"_index":1903,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["point",{"_index":3202,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueLabelComponent.html":{},"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["point.x",{"_index":4560,"title":{},"body":{"interfaces/Positions.html":{}}}],["point.y",{"_index":4563,"title":{},"body":{"interfaces/Positions.html":{}}}],["pointer",{"_index":3505,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["pointing",{"_index":3721,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["points",{"_index":5304,"title":{},"body":{"components/SideNavComponent.html":{},"classes/Vector.html":{}}}],["portalinjector",{"_index":1081,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["portalinjector(this.injector",{"_index":1118,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["portalmodule",{"_index":440,"title":{},"body":{"modules/AppModule.html":{}}}],["pos",{"_index":1100,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["position",{"_index":1059,"title":{"interfaces/Position.html":{}},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"interfaces/InterfaceNode.html":{},"components/IssueContentsComponent.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"classes/Vector.html":{},"coverage.html":{}}}],["position.withpositions([pos",{"_index":1108,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["position.x",{"_index":4378,"title":{},"body":{"interfaces/Positions.html":{}}}],["position.y",{"_index":4379,"title":{},"body":{"interfaces/Positions.html":{}}}],["positionclass",{"_index":2454,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["positioning",{"_index":4398,"title":{},"body":{"interfaces/Positions.html":{}}}],["positions",{"_index":4213,"title":{"interfaces/Positions.html":{}},"body":{"interfaces/Positions.html":{},"coverage.html":{}}}],["positionstrategy",{"_index":1115,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["positionx",{"_index":3686,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["positiony",{"_index":3687,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["possible",{"_index":5194,"title":{},"body":{"components/SetEditorComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["practice",{"_index":1985,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["pre",{"_index":3241,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/MarkdownEditorComponent.html":{}}}],["pred",{"_index":2869,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["predicate",{"_index":2781,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["predicatecount",{"_index":2759,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["predicates",{"_index":2760,"title":{},"body":{"components/IssueFilterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["predicates[id].ifempty",{"_index":2860,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["predicates[id].label",{"_index":2859,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["predicates[type].label",{"_index":2857,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["predicatevalues",{"_index":2761,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["prepare",{"_index":895,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["prepareddata",{"_index":1711,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{}}}],["prepareissuearray",{"_index":3372,"title":{},"body":{"components/IssueListComponent.html":{}}}],["prepareroute",{"_index":2208,"title":{},"body":{"components/FrameComponent.html":{}}}],["prepareroute(outlet",{"_index":2213,"title":{},"body":{"components/FrameComponent.html":{}}}],["prepares",{"_index":894,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueListComponent.html":{}}}],["preparetimelineitems(items",{"_index":896,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["present",{"_index":1850,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["preservewhitespaces",{"_index":3901,"title":{},"body":{"components/MarkdownPreviewComponent.html":{}}}],["pressed",{"_index":4429,"title":{},"body":{"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["presumes",{"_index":4604,"title":{},"body":{"interfaces/Positions.html":{}}}],["prevent",{"_index":3763,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["prevents",{"_index":4794,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["preview",{"_index":3898,"title":{},"body":{"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["preview'},{'name",{"_index":166,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["preview.component",{"_index":456,"title":{},"body":{"modules/AppModule.html":{}}}],["preview.component.html",{"_index":3903,"title":{},"body":{"components/MarkdownPreviewComponent.html":{}}}],["preview.component.scss",{"_index":3902,"title":{},"body":{"components/MarkdownPreviewComponent.html":{}}}],["preview.component.ts",{"_index":3900,"title":{},"body":{"components/MarkdownPreviewComponent.html":{},"coverage.html":{}}}],["preview.component.ts:17",{"_index":3905,"title":{},"body":{"components/MarkdownPreviewComponent.html":{}}}],["preview/markdown",{"_index":455,"title":{},"body":{"modules/AppModule.html":{},"components/MarkdownPreviewComponent.html":{},"coverage.html":{}}}],["previous",{"_index":1961,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueFilterComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["previousboundingbox",{"_index":4649,"title":{},"body":{"interfaces/Positions.html":{}}}],["previousboundingbox.height",{"_index":4658,"title":{},"body":{"interfaces/Positions.html":{}}}],["previousboundingbox.width",{"_index":4656,"title":{},"body":{"interfaces/Positions.html":{}}}],["previousboundingbox.x",{"_index":4669,"title":{},"body":{"interfaces/Positions.html":{}}}],["previousboundingbox.y",{"_index":4670,"title":{},"body":{"interfaces/Positions.html":{}}}],["previousboundingboxasstring",{"_index":4638,"title":{},"body":{"interfaces/Positions.html":{}}}],["previousitems",{"_index":2833,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["previousitems.includes(id",{"_index":2836,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["previouslyhadpagecontents",{"_index":1902,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["prevpage",{"_index":1962,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["primary",{"_index":604,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{},"index.html":{}}}],["primary.segments",{"_index":607,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["primary.segments.length",{"_index":610,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["primary_outlet",{"_index":534,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["primarysegments",{"_index":606,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["primarysegments[0].path",{"_index":609,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["primer/css",{"_index":5734,"title":{},"body":{"dependencies.html":{}}}],["prior",{"_index":1917,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["pristine",{"_index":5105,"title":{},"body":{"components/RegisterComponent.html":{}}}],["private",{"_index":63,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/FilterSelection.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueListComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"interfaces/userMock.html":{}}}],["process",{"_index":951,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueDetailComponent.html":{}}}],["processing",{"_index":4882,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["product",{"_index":5590,"title":{},"body":{"classes/Vector.html":{}}}],["production",{"_index":5833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":172,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["profilesettingsdialogcomponent",{"_index":171,"title":{"components/ProfileSettingsDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["project",{"_index":104,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentsService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"interfaces/userMock.html":{}}}],["project's",{"_index":4238,"title":{},"body":{"interfaces/Positions.html":{}}}],["project.description",{"_index":4925,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["project.name",{"_index":4800,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["project.node.users.nodes.foreach(u",{"_index":4879,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["project_${this.projectid",{"_index":4277,"title":{},"body":{"interfaces/Positions.html":{}}}],["projectfilter",{"_index":4956,"title":{},"body":{"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{}}}],["projectheadercomponent",{"_index":173,"title":{"components/ProjectHeaderComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projectid",{"_index":867,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/LabelStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["projectissuelistcomponent",{"_index":175,"title":{"components/ProjectIssueListComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projectlistcomponent",{"_index":176,"title":{"components/ProjectListComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projectmemberscomponent",{"_index":177,"title":{"components/ProjectMembersComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{},"interfaces/userMock.html":{}}}],["projectname",{"_index":4744,"title":{},"body":{"components/ProjectHeaderComponent.html":{},"components/ProjectListComponent.html":{}}}],["projectnameedited",{"_index":4730,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["projectnameedited(saved",{"_index":4733,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["projectoverviewcomponent",{"_index":179,"title":{"components/ProjectOverviewComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projects",{"_index":512,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/IssueItemComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/QueriesService.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"miscellaneous/enumerations.html":{}}}],["projects.service",{"_index":4990,"title":{},"body":{"injectables/QueriesService.html":{}}}],["projects/:id",{"_index":514,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["projectsservice",{"_index":4964,"title":{"injectables/ProjectsService.html":{}},"body":{"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"coverage.html":{}}}],["projectstoragekey",{"_index":4258,"title":{},"body":{"interfaces/Positions.html":{}}}],["projectstore",{"_index":4770,"title":{},"body":{"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["projectstoreservice",{"_index":542,"title":{"injectables/ProjectStoreService.html":{}},"body":{"interfaces/AppState.html":{},"components/CreateProjectDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/StateService.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["prolong",{"_index":1695,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["promise",{"_index":1701,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/QueryListParams.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/variables.html":{}}}],["promise((resolve",{"_index":1823,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/QueryListParams.html":{}}}],["promise.all(promises",{"_index":1608,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["promise.reject(new",{"_index":5915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise.resolve",{"_index":5560,"title":{},"body":{"injectables/UsersService.html":{}}}],["promise.resolve(this.current",{"_index":1822,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["promises",{"_index":1596,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["promises.push(this.dataservice.mutations.linkissue(math.random().tostring",{"_index":1598,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["promisifyapollofetch",{"_index":1385,"title":{},"body":{"injectables/ComponentsService.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["promisifyapollofetch(f",{"_index":5082,"title":{},"body":{"interfaces/QueryListParams.html":{}}}],["promisifyapollofetch(this.qcurrentuser.fetch",{"_index":5564,"title":{},"body":{"injectables/UsersService.html":{}}}],["promisifyapollofetch(this.qgetcomponent.fetch",{"_index":1389,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["promisifyapollofetch(this.qgetinterface.fetch",{"_index":1390,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["promisifyapollofetch(this.qgetproject.fetch",{"_index":4979,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["promisifyapollofetch(this.qlistprojectcomponents.fetch",{"_index":1387,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["promisifyapollofetch(this.qlistprojectinterfaces.fetch",{"_index":1388,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["promisifyapollofetch(this.qlistprojects.fetch",{"_index":4978,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["promisifyapollofetch(this.qsearchusers.fetch",{"_index":5561,"title":{},"body":{"injectables/UsersService.html":{}}}],["prop",{"_index":4232,"title":{},"body":{"interfaces/Positions.html":{}}}],["propagates",{"_index":2049,"title":{},"body":{"injectables/DataService.html":{}}}],["proper",{"_index":3426,"title":{},"body":{"components/IssueListComponent.html":{}}}],["properly",{"_index":4578,"title":{},"body":{"interfaces/Positions.html":{}}}],["properties",{"_index":26,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{}}}],["property",{"_index":1755,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["protected",{"_index":1789,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["provide",{"_index":493,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/Positions.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":233,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"interfaces/User.html":{}}}],["providedefaultapollo",{"_index":2442,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["providedefaultapollo(httplink",{"_index":2481,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["providedin",{"_index":555,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"injectables/DataService.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"injectables/StateService.html":{},"injectables/UsersService.html":{}}}],["providepublicapollo",{"_index":2441,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["providepublicapollo(httplink",{"_index":2494,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["provider",{"_index":1414,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{}}}],["providers",{"_index":492,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{}}}],["provides",{"_index":227,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"classes/CCIMSValidators.html":{},"interfaces/CoalescedTimelineItem.html":{},"injectables/ComponentStoreService.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueStoreService.html":{},"classes/NodeCache.html":{},"injectables/ProjectStoreService.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"injectables/UserNotifyService.html":{}}}],["providing",{"_index":4370,"title":{},"body":{"interfaces/Positions.html":{}}}],["prvider",{"_index":3395,"title":{},"body":{"components/IssueListComponent.html":{}}}],["ps",{"_index":559,"title":{},"body":{"interfaces/AppState.html":{},"components/CreateProjectDialogComponent.html":{},"injectables/StateService.html":{}}}],["ps.getbasicproject(this.router.parseurl(event.url).root?.children[primary_outlet].segments[1].path",{"_index":587,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["psetparamsnoupdate",{"_index":1792,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["ptotalcount",{"_index":1901,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["public",{"_index":27,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["publicclient",{"_index":2496,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["publicclientname",{"_index":5089,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["purely",{"_index":5803,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":2436,"title":{},"body":{"modules/GraphQLModule.html":{},"interfaces/Positions.html":{},"miscellaneous/variables.html":{}}}],["put",{"_index":2734,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["px",{"_index":1140,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["q",{"_index":5919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["qcurrentuser",{"_index":5545,"title":{},"body":{"injectables/UsersService.html":{}}}],["qgetcomponent",{"_index":1369,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["qgetinterface",{"_index":1370,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["qgetproject",{"_index":4970,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["qlistprojectcomponents",{"_index":1373,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["qlistprojectinterfaces",{"_index":1367,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["qlistprojects",{"_index":4973,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["qsearchusers",{"_index":5548,"title":{},"body":{"injectables/UsersService.html":{}}}],["queries",{"_index":1995,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"classes/NodeCache.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["queries/queries.service",{"_index":1734,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/NodeCache.html":{}}}],["queriesservice",{"_index":1733,"title":{"injectables/QueriesService.html":{}},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/NodeCache.html":{},"injectables/QueriesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["query",{"_index":182,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentStoreService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["query.component.html",{"_index":5025,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["query.component.scss",{"_index":5026,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["query.subscribe((value",{"_index":5046,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["query/mutation",{"_index":5796,"title":{},"body":{"index.html":{}}}],["querybodydirective",{"_index":211,"title":{"directives/QueryBodyDirective.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["querybuttondirective",{"_index":213,"title":{"directives/QueryButtonDirective.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["querycomponent",{"_index":181,"title":{"components/QueryComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["querycomponentstate",{"_index":5001,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"miscellaneous/enumerations.html":{}}}],["querycomponentstate.error",{"_index":5049,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["querycomponentstate.loading",{"_index":5032,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["querycomponentstate.ready",{"_index":5038,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["querylist",{"_index":1736,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["querylist(queries",{"_index":1905,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["querylistparams",{"_index":1379,"title":{"interfaces/QueryListParams.html":{}},"body":{"injectables/ComponentsService.html":{},"injectables/ProjectsService.html":{},"interfaces/QueryListParams.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["querynode",{"_index":1737,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["querynode(queries",{"_index":1875,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["queryparamfilter",{"_index":3363,"title":{},"body":{"components/IssueListComponent.html":{}}}],["queryparams",{"_index":643,"title":{},"body":{"guards/AuthGuard.html":{}}}],["querystate",{"_index":5014,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["quick",{"_index":3950,"title":{},"body":{"classes/MultiSourceList.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"dependencies.html":{}}}],["quicker",{"_index":77,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"classes/CCIMSValidators.html":{}}}],["quickscore",{"_index":3949,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["quickscore(matchstrings.join",{"_index":3991,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["quot;(newest",{"_index":2921,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["quot;test&quot",{"_index":2920,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["quot;{{data.verificationname}}&quot",{"_index":5159,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["r",{"_index":1513,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueLabelComponent.html":{},"classes/NodeCache.html":{}}}],["r.matches",{"_index":4280,"title":{},"body":{"interfaces/Positions.html":{}}}],["radius",{"_index":1169,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["ran",{"_index":5054,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["randomize",{"_index":1527,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["randomizecolor",{"_index":1449,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["randomized",{"_index":3742,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["ranking",{"_index":3941,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["ratio",{"_index":4457,"title":{},"body":{"interfaces/Positions.html":{}}}],["raw",{"_index":2775,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{}}}],["re",{"_index":1765,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["reactiveformsmodule",{"_index":387,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["read",{"_index":782,"title":{},"body":{"components/CacheNodeComponent.html":{},"modules/GraphQLModule.html":{},"components/SetEditorComponent.html":{}}}],["readonly",{"_index":654,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"interfaces/CoalescedTimelineItem.html":{},"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/User.html":{},"classes/Vector.html":{}}}],["ready",{"_index":5002,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"miscellaneous/enumerations.html":{}}}],["really",{"_index":1020,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{},"index.html":{}}}],["reasonable",{"_index":4035,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["recalculates",{"_index":5112,"title":{},"body":{"components/RegisterComponent.html":{}}}],["recoverable",{"_index":1605,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["rect",{"_index":4222,"title":{},"body":{"interfaces/Positions.html":{}}}],["rect.x",{"_index":4660,"title":{},"body":{"interfaces/Positions.html":{}}}],["rect.xmax",{"_index":4696,"title":{},"body":{"interfaces/Positions.html":{}}}],["rect.xmin",{"_index":4692,"title":{},"body":{"interfaces/Positions.html":{}}}],["rect.y",{"_index":4666,"title":{},"body":{"interfaces/Positions.html":{}}}],["rect.ymax",{"_index":4698,"title":{},"body":{"interfaces/Positions.html":{}}}],["rect.ymin",{"_index":4694,"title":{},"body":{"interfaces/Positions.html":{}}}],["red",{"_index":3074,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/IssueLabelComponent.html":{},"components/QueryComponent.html":{}}}],["redirect",{"_index":524,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["redirected",{"_index":5110,"title":{},"body":{"components/RegisterComponent.html":{}}}],["redirects",{"_index":632,"title":{},"body":{"guards/AuthGuard.html":{}}}],["redirectto",{"_index":511,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirecturl",{"_index":3846,"title":{},"body":{"components/LoginComponent.html":{}}}],["redraw",{"_index":3054,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["redrawbycloseofcomponentdetails",{"_index":4262,"title":{},"body":{"interfaces/Positions.html":{}}}],["reduce",{"_index":4932,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["reduces",{"_index":4900,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["reducing",{"_index":2046,"title":{},"body":{"injectables/DataService.html":{}}}],["redundant",{"_index":1970,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["ref",{"_index":1109,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["ref.attach(new",{"_index":1119,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["reference",{"_index":1091,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{}}}],["references",{"_index":4244,"title":{},"body":{"interfaces/Positions.html":{}}}],["referring",{"_index":570,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["reflect",{"_index":4236,"title":{},"body":{"interfaces/Positions.html":{}}}],["refresh",{"_index":1520,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["refreshes",{"_index":706,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/IssueContentsComponent.html":{},"interfaces/User.html":{}}}],["regardless",{"_index":3755,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["register",{"_index":522,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["register'},{'name",{"_index":184,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["register.component.css",{"_index":5086,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":5087,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register/register.component",{"_index":410,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registercomponent",{"_index":183,"title":{"components/RegisterComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["registering",{"_index":2445,"title":{},"body":{"modules/GraphQLModule.html":{},"interfaces/Positions.html":{},"miscellaneous/variables.html":{}}}],["registerlocaledata",{"_index":404,"title":{},"body":{"modules/AppModule.html":{}}}],["registerlocaledata(en",{"_index":475,"title":{},"body":{"modules/AppModule.html":{}}}],["registerusergql",{"_index":5096,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registeruserinput",{"_index":5123,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerusermutation",{"_index":5095,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registration",{"_index":2492,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["registry",{"_index":3083,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"interfaces/Positions.html":{}}}],["registry.service",{"_index":4231,"title":{},"body":{"interfaces/Positions.html":{}}}],["registry.service.ts",{"_index":3082,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"coverage.html":{}}}],["registry.service.ts:21",{"_index":3086,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["registry/issue",{"_index":3080,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["regular",{"_index":2911,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["reject",{"_index":1824,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/QueryListParams.html":{}}}],["reject(error",{"_index":1829,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/QueryListParams.html":{}}}],["related",{"_index":2971,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["relatedfolder",{"_index":4628,"title":{},"body":{"interfaces/Positions.html":{}}}],["relatedfolders",{"_index":2285,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{}}}],["relatedfolders.getvalue(folder).concat(targetfolders",{"_index":2397,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["relatedfolders.setvalue(folder",{"_index":2396,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["relatedto",{"_index":1291,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{}}}],["relation",{"_index":295,"title":{},"body":{"components/AppComponent.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["relationedge",{"_index":1212,"title":{"interfaces/RelationEdge.html":{}},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["relations",{"_index":3008,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["relative",{"_index":1063,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"classes/NodeCache.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["relativepositionchanged",{"_index":3188,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["relativepositionchanged(group",{"_index":3199,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["relativerotation",{"_index":1280,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["relativeto",{"_index":4432,"title":{},"body":{"interfaces/Positions.html":{}}}],["reload",{"_index":1475,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"index.html":{}}}],["reload$]).pipe",{"_index":3166,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["reloadlistset",{"_index":5210,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["reloadonmouseup",{"_index":4266,"title":{},"body":{"interfaces/Positions.html":{}}}],["reloadprojects",{"_index":4767,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["reloads",{"_index":4495,"title":{},"body":{"interfaces/Positions.html":{}}}],["remaining",{"_index":919,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["remember",{"_index":1681,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["remove",{"_index":186,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData-1.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"interfaces/userMock.html":{}}}],["removeconsumedinterface",{"_index":2880,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{}}}],["removeconsumedinterface(component",{"_index":2907,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["removeconsumedinterface(componentid",{"_index":3160,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["removeconsumedinterfacegql",{"_index":2887,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["removeconsumedinterfacemutation",{"_index":2886,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["removed",{"_index":2319,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{}}}],["removedfromcomponentevent",{"_index":850,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["removedfromlocationevent",{"_index":854,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["removedialogcomponent",{"_index":185,"title":{"components/RemoveDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["removefiltereddata",{"_index":2399,"title":{},"body":{"classes/GraphDataFactory.html":{}}}],["removefiltereddata(graphdata",{"_index":2299,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["removefromlocation",{"_index":3543,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["removefromlocation(removelocationinput",{"_index":3604,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["removeissuefromlocationgql",{"_index":3570,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["removeissuefromlocationinput",{"_index":3605,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["removeissuefromlocationmutation",{"_index":3569,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["removelocationinput",{"_index":3607,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["removeofferingcomponents",{"_index":5660,"title":{},"body":{"coverage.html":{}}}],["removeofferingcomponents(issue.locations",{"_index":2386,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["removeofferingcomponents(linkedissue.locations",{"_index":2392,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["removeofferingcomponents(locationids",{"_index":2320,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["removepredicateat",{"_index":2767,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["removepredicateat(index",{"_index":2788,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["removeprojectmembercomponentcomponent",{"_index":187,"title":{"components/RemoveProjectMemberComponentComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{},"interfaces/userMock.html":{}}}],["removes",{"_index":2289,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"interfaces/Positions.html":{}}}],["rename",{"_index":3544,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["rename(renameinput",{"_index":3608,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["renameinput",{"_index":3611,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["renameissuemutation",{"_index":3563,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["renameissuetitlegql",{"_index":3564,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["renameissuetitleinput",{"_index":3609,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["render",{"_index":2897,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"interfaces/Positions.html":{}}}],["rendered",{"_index":2188,"title":{},"body":{"components/FrameComponent.html":{},"components/MarkdownPreviewComponent.html":{},"interfaces/Positions.html":{}}}],["rendering",{"_index":2306,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["renderinitialtemplate",{"_index":3093,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["renders",{"_index":3304,"title":{},"body":{"components/IssueLabelComponent.html":{},"components/MarkdownPreviewComponent.html":{},"interfaces/Positions.html":{}}}],["reopen",{"_index":2645,"title":{},"body":{"components/IssueContentsComponent.html":{},"injectables/IssueStoreService.html":{}}}],["reopen(reopeninput",{"_index":3612,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["reopeninput",{"_index":3615,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["reopenissue",{"_index":2608,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["reopenissuegql",{"_index":3562,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["reopenissueinput",{"_index":3613,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["reopenissuemutation",{"_index":3561,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["reopens",{"_index":2617,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["replace",{"_index":2697,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["replaced",{"_index":4824,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["replaysubject",{"_index":536,"title":{},"body":{"interfaces/AppState.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/Positions.html":{},"injectables/StateService.html":{}}}],["replaysubject(1",{"_index":558,"title":{},"body":{"interfaces/AppState.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{},"injectables/StateService.html":{}}}],["report",{"_index":3073,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["reports",{"_index":1910,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["repository",{"_index":1435,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["repositoryurl",{"_index":1419,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["represent",{"_index":1238,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["representation",{"_index":862,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/TimeFormatter.html":{}}}],["represented",{"_index":824,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["representing",{"_index":821,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/FilterSelection.html":{},"components/IssueGraphControlsComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{}}}],["represents",{"_index":4584,"title":{},"body":{"interfaces/Positions.html":{}}}],["reqeusts",{"_index":2493,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["request",{"_index":1615,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueCategoryComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"classes/NodeCache.html":{},"components/SetEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["requested",{"_index":2899,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["requests",{"_index":2048,"title":{},"body":{"injectables/DataService.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{}}}],["requesttimelineitems",{"_index":879,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["require",{"_index":5716,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":5831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":635,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphStateService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{}}}],["rerun",{"_index":5781,"title":{},"body":{"index.html":{}}}],["reset",{"_index":341,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"overview.html":{}}}],["resetform",{"_index":5092,"title":{},"body":{"components/RegisterComponent.html":{}}}],["resetform(e",{"_index":5103,"title":{},"body":{"components/RegisterComponent.html":{}}}],["resetgraph",{"_index":4552,"title":{},"body":{"interfaces/Positions.html":{}}}],["resets",{"_index":4545,"title":{},"body":{"interfaces/Positions.html":{},"components/RegisterComponent.html":{}}}],["resetvalues",{"_index":4090,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["resize",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["resizecorner(content",{"_index":1133,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["resolve(data",{"_index":1827,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/QueryListParams.html":{}}}],["respective",{"_index":3800,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["response.token",{"_index":708,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["responsible",{"_index":615,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/FilterSelection.html":{},"injectables/IssueGraphApiService.html":{},"components/LabelSearchComponent.html":{},"components/LoginComponent.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{}}}],["respoonsible",{"_index":2947,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{}}}],["rest",{"_index":5777,"title":{},"body":{"index.html":{}}}],["restricting",{"_index":2898,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["result",{"_index":1594,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"classes/Vector.html":{}}}],["result.id",{"_index":1595,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["result.items",{"_index":1924,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["result.items.size",{"_index":1923,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["result.matches",{"_index":2222,"title":{},"body":{"components/FrameComponent.html":{},"components/TopToolbarComponent.html":{}}}],["result.pageinfo",{"_index":1907,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["result.totalcount",{"_index":1909,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["result?.createdprojectid",{"_index":4785,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["resulting",{"_index":4662,"title":{},"body":{"interfaces/Positions.html":{}}}],["results",{"_index":222,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["rethrow",{"_index":1607,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["retrieval",{"_index":2876,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["retrieve",{"_index":571,"title":{},"body":{"interfaces/AppState.html":{},"injectables/LabelStoreService.html":{},"injectables/StateService.html":{}}}],["retrieved",{"_index":932,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{}}}],["retrievel",{"_index":2553,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["retrieves",{"_index":874,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["retrieving",{"_index":1301,"title":{},"body":{"injectables/ComponentStoreService.html":{},"components/ProjectIssueListComponent.html":{}}}],["return",{"_index":608,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":675,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/User.html":{}}}],["returnedfilter",{"_index":3469,"title":{},"body":{"components/IssueListComponent.html":{}}}],["returnfromselect",{"_index":1426,"title":{},"body":{"components/CreateComponentDialogComponent.html":{}}}],["returnfromselect.localecompare(imstype.github",{"_index":1422,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["returning",{"_index":2437,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":45,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"classes/TimeFormatter.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{}}}],["returnurl",{"_index":644,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["reusable",{"_index":3490,"title":{},"body":{"components/IssueListComponent.html":{}}}],["rgb",{"_index":3313,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["rgb(0",{"_index":1176,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/IssueLocationComponent.html":{}}}],["rgb(204",{"_index":1524,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["rgb(9",{"_index":3523,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["rgba(0",{"_index":2595,"title":{},"body":{"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["rgba(0,0,0,0.75",{"_index":4807,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["rgba(201",{"_index":3502,"title":{},"body":{"components/IssueListComponent.html":{}}}],["rgba(201,195,201,1",{"_index":4910,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["rgba(255",{"_index":2748,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueLabelComponent.html":{},"components/QueryComponent.html":{}}}],["rid",{"_index":3283,"title":{},"body":{"components/IssueIconComponent.html":{},"interfaces/Positions.html":{}}}],["right",{"_index":1529,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/SideNavComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["right/bottom",{"_index":4449,"title":{},"body":{"interfaces/Positions.html":{}}}],["rightdistance",{"_index":3225,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["role",{"_index":265,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["root",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"injectables/StateService.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["root'},{'name",{"_index":107,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["root_node",{"_index":2805,"title":{},"body":{"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rootid",{"_index":4473,"title":{},"body":{"interfaces/Positions.html":{}}}],["rootnode",{"_index":4475,"title":{},"body":{"interfaces/Positions.html":{}}}],["rootnode.id",{"_index":4494,"title":{},"body":{"interfaces/Positions.html":{}}}],["rootnode.type",{"_index":4482,"title":{},"body":{"interfaces/Positions.html":{}}}],["rotate",{"_index":5599,"title":{},"body":{"classes/Vector.html":{}}}],["rotate(360deg",{"_index":1625,"title":{},"body":{"components/CreateIssueDialogComponent.html":{}}}],["rotated",{"_index":5601,"title":{},"body":{"classes/Vector.html":{}}}],["route",{"_index":599,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/FrameComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/StateService.html":{},"interfaces/userMock.html":{}}}],["router",{"_index":535,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProjectOverviewComponent.html":{},"components/RegisterComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"interfaces/User.html":{}}}],["router.events.pipe",{"_index":581,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["routermodule",{"_index":498,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":526,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routeroutlet",{"_index":2214,"title":{},"body":{"components/FrameComponent.html":{}}}],["routerstatesnapshot",{"_index":630,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":497,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":578,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/StateService.html":{},"index.html":{}}}],["routing.module",{"_index":350,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":496,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":2242,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["row.id",{"_index":3475,"title":{},"body":{"components/IssueListComponent.html":{}}}],["row:hover",{"_index":3498,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["rowdata",{"_index":4836,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["rows",{"_index":2250,"title":{},"body":{"components/FrameComponent.html":{}}}],["run",{"_index":5029,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"index.html":{}}}],["running",{"_index":5784,"title":{},"body":{"index.html":{}}}],["runtime",{"_index":5077,"title":{},"body":{"interfaces/QueryListParams.html":{}}}],["rxjs",{"_index":537,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"injectables/ComponentStoreService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueListComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectStoreService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"dependencies.html":{},"interfaces/userMock.html":{}}}],["rxjs/operators",{"_index":540,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"injectables/ComponentStoreService.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"components/LoginComponent.html":{},"interfaces/Positions.html":{},"injectables/ProjectStoreService.html":{},"components/SettingsDialogComponent.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{}}}],["s",{"_index":5139,"title":{},"body":{"components/RegisterComponent.html":{},"classes/TimeFormatter.html":{}}}],["s${sourceid}t${targetid}r${edgetype",{"_index":1275,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["s1",{"_index":2018,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["s2",{"_index":2020,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["same",{"_index":818,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"injectables/ComponentStoreService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{}}}],["sandwich",{"_index":2218,"title":{},"body":{"components/FrameComponent.html":{},"components/TopToolbarComponent.html":{}}}],["sans",{"_index":3530,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["sat",{"_index":3333,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["satisfy",{"_index":5222,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["save",{"_index":670,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/IssueDetailComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/User.html":{}}}],["savechanges",{"_index":2670,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["saved",{"_index":2696,"title":{},"body":{"components/IssueDetailComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/TextDisplayComponent.html":{}}}],["savedpositions",{"_index":4267,"title":{},"body":{"interfaces/Positions.html":{}}}],["savefailed",{"_index":1535,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["savepositionssubject",{"_index":4268,"title":{},"body":{"interfaces/Positions.html":{}}}],["saves",{"_index":2681,"title":{},"body":{"components/IssueDetailComponent.html":{},"interfaces/Positions.html":{}}}],["saveusertostorage",{"_index":658,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["saveusertostorage(user",{"_index":682,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["saving",{"_index":648,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/IssueDetailComponent.html":{},"interfaces/Positions.html":{},"interfaces/User.html":{}}}],["savingbody",{"_index":979,"title":{},"body":{"components/CommentComponent.html":{}}}],["savingchanges",{"_index":2665,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["savingcomment",{"_index":2605,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["scalar",{"_index":5607,"title":{},"body":{"classes/Vector.html":{}}}],["scalars",{"_index":2272,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["scalars['id",{"_index":2277,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["scale",{"_index":3756,"title":{},"body":{"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["scale(factor",{"_index":5604,"title":{},"body":{"classes/Vector.html":{}}}],["scaled",{"_index":5608,"title":{},"body":{"classes/Vector.html":{}}}],["schema",{"_index":1417,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/IssueStoreService.html":{},"classes/NodeCache.html":{},"index.html":{}}}],["schemas",{"_index":346,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["schould",{"_index":4823,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["score",{"_index":3921,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"dependencies.html":{}}}],["score(item",{"_index":3938,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["scorekeys",{"_index":2815,"title":{},"body":{"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/variables.html":{}}}],["scores",{"_index":3940,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["scoring",{"_index":5203,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["screen",{"_index":3831,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Positions.html":{}}}],["sdot",{"_index":1037,"title":{},"body":{"components/CommentComponent.html":{}}}],["search",{"_index":1454,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"interfaces/FilterSelection.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/TextFragment.html":{},"injectables/UsersService.html":{}}}],["search'},{'name",{"_index":156,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["search.component",{"_index":2180,"title":{},"body":{"interfaces/FilterState.html":{},"modules/GraphsModule.html":{},"components/IssueGraphControlsComponent.html":{}}}],["search.component.html",{"_index":2141,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["search.component.scss",{"_index":2142,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["search.component.ts",{"_index":2126,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["search.component.ts:17",{"_index":3648,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["search.component.ts:19",{"_index":3649,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["search.component.ts:20",{"_index":3651,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["search.component.ts:21",{"_index":3650,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["search.component.ts:22",{"_index":3644,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["search.component.ts:31",{"_index":3647,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["search.component.ts:38",{"_index":3645,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["search.component.ts:49",{"_index":3646,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["search/label",{"_index":2125,"title":{},"body":{"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"modules/GraphsModule.html":{},"components/IssueGraphControlsComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["searched",{"_index":5174,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["searchissuesdataarray",{"_index":3364,"title":{},"body":{"components/IssueListComponent.html":{}}}],["searchquery",{"_index":2762,"title":{},"body":{"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["searchquerydidchange",{"_index":4040,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["searchuser",{"_index":5558,"title":{},"body":{"injectables/UsersService.html":{}}}],["searchusers",{"_index":3822,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["searchusers(filter",{"_index":5550,"title":{},"body":{"injectables/UsersService.html":{}}}],["searchusersgql",{"_index":5544,"title":{},"body":{"injectables/UsersService.html":{}}}],["second",{"_index":4579,"title":{},"body":{"interfaces/Positions.html":{}}}],["seconds",{"_index":954,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["see",{"_index":1666,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["seenitems",{"_index":3992,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["seenitems.add(id",{"_index":3997,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["seenitems.has(id",{"_index":3996,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["segment",{"_index":5586,"title":{},"body":{"classes/Vector.html":{}}}],["select",{"_index":431,"title":{},"body":{"modules/AppModule.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/FilterSelection.html":{},"modules/GraphsModule.html":{},"components/LabelSearchComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/TextFragment.html":{},"dependencies.html":{}}}],["select.label",{"_index":3652,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["select/ng",{"_index":430,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"dependencies.html":{}}}],["selectable",{"_index":5272,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["selected",{"_index":29,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["selectedcategories",{"_index":2178,"title":{},"body":{"interfaces/FilterState.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"miscellaneous/typealiases.html":{}}}],["selectedfilter",{"_index":2179,"title":{},"body":{"interfaces/FilterState.html":{},"components/IssueGraphControlsComponent.html":{}}}],["selectedlabels",{"_index":2146,"title":{},"body":{"interfaces/FilterSelection.html":{},"injectables/IssueGraphApiService.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["selectedusers",{"_index":236,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["selection",{"_index":2155,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{}}}],["selection.labels",{"_index":2163,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["selection.texts",{"_index":2160,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"interfaces/userMock.html":{}}}],["selects",{"_index":3391,"title":{},"body":{"components/IssueListComponent.html":{}}}],["self",{"_index":964,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"components/RemoveDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["self.alllabelslist",{"_index":2817,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["self.projectid",{"_index":2808,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["selfassigned(assignedevent",{"_index":966,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["send",{"_index":3891,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["sending",{"_index":5190,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["separate",{"_index":3322,"title":{},"body":{"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{}}}],["sequence",{"_index":3152,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["serif",{"_index":3531,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["server",{"_index":869,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/SetEditorComponent.html":{},"index.html":{}}}],["server/connection",{"_index":2479,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["service",{"_index":545,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueStoreService.html":{},"classes/NodeCache.html":{},"injectables/ProjectStoreService.html":{},"injectables/StateService.html":{},"injectables/UserNotifyService.html":{}}}],["services",{"_index":5799,"title":{},"body":{"index.html":{}}}],["session",{"_index":4633,"title":{},"body":{"interfaces/Positions.html":{}}}],["set",{"_index":189,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData-1.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"index.html":{}}}],["set(locationids.filter(locationid",{"_index":2324,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["set(this.componentlist.map(id",{"_index":1496,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["setcontext",{"_index":2428,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["setcontext((_",{"_index":2484,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["setcontext((operation",{"_index":2457,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["seteditorcomponent",{"_index":188,"title":{"components/SetEditorComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["seteditordialogcomponent",{"_index":190,"title":{"components/SetEditorDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["seteditordialogdata",{"_index":4009,"title":{"interfaces/SetEditorDialogData.html":{}},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["seterror",{"_index":5048,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["setfilter",{"_index":3922,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["setfilter(query",{"_index":3942,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["setgraphtolastview",{"_index":4635,"title":{},"body":{"interfaces/Positions.html":{}}}],["setinenumarray",{"_index":2768,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["setinenumarray(array",{"_index":2790,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["setmultisource",{"_index":3912,"title":{"interfaces/SetMultiSource.html":{}},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["setparams",{"_index":1927,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["setparams(p",{"_index":1725,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{}}}],["setpredicatetype",{"_index":2769,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["setpredicatetype(index",{"_index":2793,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["setrelationvisibility",{"_index":2994,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["setrelationvisibility(showrelations",{"_index":4719,"title":{},"body":{"interfaces/Positions.html":{}}}],["sets",{"_index":561,"title":{},"body":{"interfaces/AppState.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/MultiSourceList.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{}}}],["setter",{"_index":2959,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["setters",{"_index":2949,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"interfaces/Positions.html":{}}}],["setters.service",{"_index":4229,"title":{},"body":{"interfaces/Positions.html":{}}}],["setters.service.ts",{"_index":2946,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"coverage.html":{}}}],["setters.service.ts:24",{"_index":2954,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["setters/issue",{"_index":2945,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["settext(value",{"_index":5369,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["settimeout",{"_index":1852,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/RegisterComponent.html":{}}}],["setting",{"_index":4718,"title":{},"body":{"interfaces/Positions.html":{}}}],["settings",{"_index":57,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{}}}],["settingsdialogcomponent",{"_index":56,"title":{"components/SettingsDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["setup",{"_index":3040,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{},"index.html":{}}}],["several",{"_index":810,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["shadow",{"_index":1172,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/IssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/TimelineItemComponent.html":{}}}],["shared",{"_index":3026,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["sharereplay",{"_index":2223,"title":{},"body":{"components/FrameComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["sharereplay(1",{"_index":3176,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["sheet",{"_index":4549,"title":{},"body":{"interfaces/Positions.html":{}}}],["shift",{"_index":4428,"title":{},"body":{"interfaces/Positions.html":{}}}],["short",{"_index":1716,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/UserItemComponent.html":{}}}],["shortcut",{"_index":4790,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["shouldn't",{"_index":1979,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/typealiases.html":{}}}],["show",{"_index":3007,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["showconfirmdialog",{"_index":1557,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["showdeleted",{"_index":5446,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["showdeletedialog",{"_index":4091,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["showdeletedialog(affected",{"_index":4109,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["showdrawer",{"_index":2207,"title":{},"body":{"components/FrameComponent.html":{}}}],["showing",{"_index":2866,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SideNavComponent.html":{},"components/TopToolbarComponent.html":{}}}],["showmenubutton",{"_index":5504,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["shown",{"_index":865,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/DialogData-1.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/enumerations.html":{},"interfaces/userMock.html":{}}}],["showname",{"_index":4083,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["showplaceholder",{"_index":5350,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["showrelations",{"_index":2991,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["shows",{"_index":839,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/DialogData-1.html":{},"components/IssueListComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectListComponent.html":{},"components/RemoveDialogComponent.html":{},"components/TextDisplayComponent.html":{},"index.html":{}}}],["side",{"_index":193,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["sidebar",{"_index":2200,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueDetailComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/SetEditorComponent.html":{}}}],["sidebar'},{'name",{"_index":154,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["sidebar.component",{"_index":1570,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"modules/GraphsModule.html":{}}}],["sidebar.component.ts",{"_index":5690,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["sidemenu",{"_index":5302,"title":{},"body":{"components/SideNavComponent.html":{}}}],["sidenav",{"_index":2239,"title":{},"body":{"components/FrameComponent.html":{}}}],["sidenavcomponent",{"_index":192,"title":{"components/SideNavComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signal",{"_index":3155,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["signals",{"_index":3051,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["signature",{"_index":636,"title":{},"body":{"guards/AuthGuard.html":{}}}],["significant",{"_index":3770,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["signup",{"_index":5841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signupurl",{"_index":5836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["simple",{"_index":2014,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"classes/Vector.html":{}}}],["simplechanges",{"_index":5207,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["single",{"_index":944,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/Positions.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["singular",{"_index":5409,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["size",{"_index":1640,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"components/LoginComponent.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["size.height",{"_index":4687,"title":{},"body":{"interfaces/Positions.html":{}}}],["size.width",{"_index":4685,"title":{},"body":{"interfaces/Positions.html":{}}}],["sizes",{"_index":1648,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["slate",{"_index":4516,"title":{},"body":{"interfaces/Positions.html":{}}}],["slide",{"_index":3071,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["slider",{"_index":2231,"title":{},"body":{"components/FrameComponent.html":{},"interfaces/Positions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["slideto",{"_index":5710,"title":{},"body":{"coverage.html":{}}}],["slideto('right",{"_index":5931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sliding",{"_index":5932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["small",{"_index":3741,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["smaller",{"_index":5274,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["solid",{"_index":2653,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["solution",{"_index":5556,"title":{},"body":{"injectables/UsersService.html":{}}}],["something",{"_index":3936,"title":{},"body":{"classes/MultiSourceList.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sometimes",{"_index":4259,"title":{},"body":{"interfaces/Positions.html":{}}}],["somewhat",{"_index":4454,"title":{},"body":{"interfaces/Positions.html":{}}}],["somewhere",{"_index":3937,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sommerzeit",{"_index":5401,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["soon",{"_index":5016,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["sort",{"_index":3353,"title":{},"body":{"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["sorted",{"_index":3242,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["sortedchildids",{"_index":3235,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["sortedchildids.foreach((childid",{"_index":3246,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["sortedchildids.length",{"_index":3255,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"index.html":{},"interfaces/userMock.html":{}}}],["source.allowedanchors.has('bottom",{"_index":3138,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["source.allowedanchors.has('right",{"_index":3137,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["source.current.entries",{"_index":3995,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["source.current.size",{"_index":3999,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["source.filter",{"_index":3983,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["source.hasdata",{"_index":3994,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["source.loading",{"_index":4005,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["source?.allowedanchors",{"_index":3123,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["sourced",{"_index":3955,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sourcefolders",{"_index":2387,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["sourcefolders.foreach(folder",{"_index":2395,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["sourcehandles",{"_index":3111,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["sourcehandles.filter((linkhandle",{"_index":3132,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["sourcehandles:linkhandle[];targethandles:linkhandle",{"_index":3130,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["sourceid",{"_index":1276,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["sourceissues",{"_index":1271,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["sourcelocationids",{"_index":2385,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["sourcelocationids.map(locationid",{"_index":2388,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["sourcenode",{"_index":2968,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"interfaces/Positions.html":{}}}],["sourcenode.type",{"_index":4340,"title":{},"body":{"interfaces/Positions.html":{}}}],["sourcenodelist",{"_index":3915,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sourcenodelistsub",{"_index":3916,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sourcenodes",{"_index":3953,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sourcepoint",{"_index":5587,"title":{},"body":{"classes/Vector.html":{}}}],["sources",{"_index":3909,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sourcesubs",{"_index":3917,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["south",{"_index":4217,"title":{},"body":{"interfaces/Positions.html":{}}}],["space",{"_index":2098,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/IssueIconComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/TopToolbarComponent.html":{}}}],["spacer",{"_index":3077,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/TopToolbarComponent.html":{}}}],["spaces",{"_index":746,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["spacing",{"_index":2863,"title":{},"body":{"components/IssueFilterComponent.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["span[matline",{"_index":4802,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["spec",{"_index":3918,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["spec.sourcenodes",{"_index":3959,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["spec\\.ts",{"_index":5832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":591,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["specified",{"_index":1415,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/DialogData-1.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/ProjectStoreService.html":{},"components/RemoveDialogComponent.html":{},"components/SideNavComponent.html":{}}}],["specifies",{"_index":3951,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["specifying",{"_index":1087,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/Positions.html":{}}}],["spinner",{"_index":1623,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"modules/GraphsModule.html":{},"components/IssueDetailComponent.html":{}}}],["src/.../app.module.ts",{"_index":5824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../component",{"_index":5826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":5828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":5829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../graph",{"_index":5813,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../graphql.module.ts",{"_index":5825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../id.ts",{"_index":5756,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../issue",{"_index":5755,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../issues.service.ts",{"_index":5816,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../label",{"_index":5812,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../load.ts",{"_index":5819,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../node",{"_index":5757,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../query.component.ts",{"_index":5758,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../query.ts",{"_index":5814,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../route",{"_index":5830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../set",{"_index":5818,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../shared.ts",{"_index":5811,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../test.ts",{"_index":5827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../text",{"_index":5823,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../timeline.component.ts",{"_index":5817,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/app",{"_index":495,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":288,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/auth.guard.ts",{"_index":614,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth/auth.guard.ts:10",{"_index":627,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.guard.ts:22",{"_index":631,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/authentication.service.ts",{"_index":647,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["src/app/auth/authentication.service.ts:15",{"_index":686,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/auth/authentication.service.ts:16",{"_index":685,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/auth/authentication.service.ts:17",{"_index":663,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/auth/authentication.service.ts:24",{"_index":688,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/auth/authentication.service.ts:28",{"_index":665,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/auth/authentication.service.ts:32",{"_index":683,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/auth/authentication.service.ts:43",{"_index":668,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/auth/authentication.service.ts:59",{"_index":679,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/components/cache",{"_index":759,"title":{},"body":{"components/CacheNodeComponent.html":{},"coverage.html":{}}}],["src/app/components/cursor",{"_index":1635,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"coverage.html":{}}}],["src/app/components/issue",{"_index":2588,"title":{},"body":{"components/IssueCategoryComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"coverage.html":{}}}],["src/app/components/item.directive.ts",{"_index":3637,"title":{},"body":{"directives/ItemDirective.html":{},"coverage.html":{}}}],["src/app/components/set",{"_index":3908,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/components/user",{"_index":5515,"title":{},"body":{"components/UserItemComponent.html":{},"coverage.html":{}}}],["src/app/data",{"_index":1359,"title":{},"body":{"injectables/ComponentsService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"interfaces/QueryListParams.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/data/component/component",{"_index":1297,"title":{},"body":{"injectables/ComponentStoreService.html":{},"coverage.html":{}}}],["src/app/data/interface/interface",{"_index":2552,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"coverage.html":{}}}],["src/app/data/issue",{"_index":2253,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/data/issue/issue",{"_index":3533,"title":{},"body":{"injectables/IssueStoreService.html":{},"coverage.html":{}}}],["src/app/data/label/label",{"_index":3654,"title":{},"body":{"injectables/LabelStoreService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/data/project/project",{"_index":4928,"title":{},"body":{"injectables/ProjectStoreService.html":{},"coverage.html":{}}}],["src/app/dialogs/access",{"_index":10,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"coverage.html":{}}}],["src/app/dialogs/add",{"_index":224,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"coverage.html":{}}}],["src/app/dialogs/create",{"_index":411,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/ProjectListComponent.html":{},"coverage.html":{}}}],["src/app/dialogs/profile",{"_index":4726,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{},"coverage.html":{}}}],["src/app/dialogs/remove",{"_index":2093,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"coverage.html":{}}}],["src/app/dialogs/settings",{"_index":5284,"title":{},"body":{"components/SettingsDialogComponent.html":{},"coverage.html":{}}}],["src/app/frame/frame.component.ts",{"_index":2184,"title":{},"body":{"components/FrameComponent.html":{},"coverage.html":{}}}],["src/app/frame/frame.component.ts:27",{"_index":2226,"title":{},"body":{"components/FrameComponent.html":{}}}],["src/app/frame/frame.component.ts:28",{"_index":2227,"title":{},"body":{"components/FrameComponent.html":{}}}],["src/app/frame/frame.component.ts:30",{"_index":2224,"title":{},"body":{"components/FrameComponent.html":{}}}],["src/app/frame/frame.component.ts:34",{"_index":2212,"title":{},"body":{"components/FrameComponent.html":{}}}],["src/app/frame/frame.component.ts:36",{"_index":2228,"title":{},"body":{"components/FrameComponent.html":{}}}],["src/app/frame/frame.component.ts:45",{"_index":2217,"title":{},"body":{"components/FrameComponent.html":{}}}],["src/app/frame/frame.component.ts:49",{"_index":2215,"title":{},"body":{"components/FrameComponent.html":{}}}],["src/app/graphql.module.ts",{"_index":2417,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/graphs",{"_index":3207,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["src/app/graphs/automatic",{"_index":3674,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{},"coverage.html":{}}}],["src/app/graphs/component",{"_index":1040,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/graphs/graphs.module.ts",{"_index":2502,"title":{},"body":{"modules/GraphsModule.html":{}}}],["src/app/graphs/issue",{"_index":1198,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/graphs/label",{"_index":2124,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/graphs/shared.ts",{"_index":2177,"title":{},"body":{"interfaces/FilterState.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/issue",{"_index":806,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/login/login.component.ts",{"_index":3830,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:18",{"_index":3856,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:19",{"_index":3853,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:20",{"_index":3852,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:21",{"_index":3851,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:22",{"_index":3854,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:29",{"_index":3843,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:49",{"_index":3842,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/markdown/markdown",{"_index":3876,"title":{},"body":{"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"coverage.html":{}}}],["src/app/node",{"_index":4076,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/project",{"_index":4740,"title":{},"body":{"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["src/app/register/register.component.ts",{"_index":5084,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/register/register.component.ts:118",{"_index":5104,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:131",{"_index":5101,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:20",{"_index":5120,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:21",{"_index":5114,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:22",{"_index":5099,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:44",{"_index":5116,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:67",{"_index":5113,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:85",{"_index":5111,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:95",{"_index":5107,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/route",{"_index":5708,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/side",{"_index":5300,"title":{},"body":{"components/SideNavComponent.html":{},"coverage.html":{}}}],["src/app/state.service.ts",{"_index":530,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{},"coverage.html":{}}}],["src/app/state.service.ts:16",{"_index":5343,"title":{},"body":{"injectables/StateService.html":{}}}],["src/app/state.service.ts:17",{"_index":5340,"title":{},"body":{"injectables/StateService.html":{}}}],["src/app/state.service.ts:31",{"_index":5342,"title":{},"body":{"injectables/StateService.html":{}}}],["src/app/state.service.ts:57",{"_index":5341,"title":{},"body":{"injectables/StateService.html":{}}}],["src/app/text",{"_index":5344,"title":{},"body":{"components/TextDisplayComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/top",{"_index":5496,"title":{},"body":{"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["src/app/user",{"_index":5521,"title":{},"body":{"injectables/UserNotifyService.html":{},"coverage.html":{}}}],["src/app/utils/query",{"_index":4993,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/utils/validators.ts",{"_index":721,"title":{},"body":{"classes/CCIMSValidators.html":{},"coverage.html":{}}}],["src/app/utils/validators.ts:10",{"_index":749,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["src/app/utils/validators.ts:16",{"_index":741,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["src/app/utils/validators.ts:25",{"_index":750,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["src/app/utils/validators.ts:30",{"_index":734,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["src/environments/environment.prod.ts",{"_index":5713,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":5714,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/generated",{"_index":5782,"title":{},"body":{"index.html":{}}}],["src/generated/graphql",{"_index":541,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/FilterState.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"components/IssueDetailComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"interfaces/RelationEdge.html":{},"injectables/StateService.html":{},"components/UserItemComponent.html":{},"injectables/UsersService.html":{},"interfaces/userMock.html":{}}}],["src/generated/public",{"_index":5124,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/styles/dialog",{"_index":1439,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["src/styles/spinner",{"_index":2646,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/ProjectListComponent.html":{}}}],["src/styles/variables",{"_index":1165,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/TextDisplayComponent.html":{}}}],["src/styles/variables.scss",{"_index":2730,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["src/test.ts",{"_index":5715,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ss",{"_index":2149,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"components/SideNavComponent.html":{},"interfaces/TextFragment.html":{}}}],["ss.state$.pipe",{"_index":2233,"title":{},"body":{"components/FrameComponent.html":{}}}],["ss.state$.subscribe(appstate",{"_index":5324,"title":{},"body":{"components/SideNavComponent.html":{}}}],["stale",{"_index":1849,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["standing",{"_index":2174,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/TextFragment.html":{},"miscellaneous/typealiases.html":{}}}],["star",{"_index":2747,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["start",{"_index":1102,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"components/TimelineItemComponent.html":{},"index.html":{},"interfaces/userMock.html":{}}}],["start/end",{"_index":743,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["startcursor",{"_index":5901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["started",{"_index":2716,"title":{"index.html":{}},"body":{"components/IssueDetailComponent.html":{}}}],["startediting",{"_index":5351,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["startoffset",{"_index":3232,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["starts",{"_index":2097,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["state",{"_index":557,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"injectables/StateService.html":{},"miscellaneous/enumerations.html":{}}}],["state.project",{"_index":2235,"title":{},"body":{"components/FrameComponent.html":{}}}],["state.service",{"_index":1395,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"interfaces/FilterSelection.html":{},"components/IssueGraphControlsComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{}}}],["state.service.ts",{"_index":3142,"title":{},"body":{"injectables/IssueGraphStateService.html":{},"coverage.html":{}}}],["state.service.ts:14",{"_index":3144,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["state.service.ts:28",{"_index":3149,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["state.service.ts:44",{"_index":3147,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["state.service.ts:51",{"_index":3161,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["state.url",{"_index":645,"title":{},"body":{"guards/AuthGuard.html":{}}}],["state[fill",{"_index":2744,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["state[stroke",{"_index":2745,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["stateful",{"_index":1745,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["statelock",{"_index":1803,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["statements",{"_index":5612,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":3159,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["stateservice",{"_index":556,"title":{"injectables/StateService.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"coverage.html":{},"index.html":{}}}],["static",{"_index":728,"title":{},"body":{"classes/CCIMSValidators.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueLabelComponent.html":{},"classes/LayoutNode.html":{},"classes/MultiSourceList.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/Vector.html":{}}}],["staticsourcenodelist",{"_index":3919,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["staticsources",{"_index":2826,"title":{},"body":{"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/variables.html":{}}}],["stats",{"_index":2753,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["status",{"_index":2741,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/RegisterComponent.html":{}}}],["step",{"_index":67,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["sticky",{"_index":5514,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["still",{"_index":1764,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["stop",{"_index":915,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["stopcoalescing",{"_index":913,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["stopcoalescing(coalescingtype",{"_index":957,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["stops",{"_index":950,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["storage",{"_index":672,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"modules/GraphQLModule.html":{},"interfaces/Positions.html":{},"interfaces/User.html":{}}}],["store",{"_index":703,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/IssueLabelComponent.html":{},"interfaces/Positions.html":{},"interfaces/User.html":{}}}],["store.service",{"_index":544,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/FilterSelection.html":{},"injectables/IssueGraphApiService.html":{},"components/LabelSearchComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"interfaces/userMock.html":{}}}],["store.service.ts",{"_index":1298,"title":{},"body":{"injectables/ComponentStoreService.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"injectables/ProjectStoreService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["store.service.ts:100",{"_index":3620,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:104",{"_index":3600,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:110",{"_index":3598,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:12",{"_index":3659,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["store.service.ts:23",{"_index":3664,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["store.service.ts:25",{"_index":2570,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["store.service.ts:29",{"_index":4945,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["store.service.ts:30",{"_index":1331,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["store.service.ts:34",{"_index":2574,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["store.service.ts:36",{"_index":3661,"title":{},"body":{"injectables/LabelStoreService.html":{},"injectables/ProjectStoreService.html":{}}}],["store.service.ts:41",{"_index":1342,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["store.service.ts:42",{"_index":3575,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:43",{"_index":2577,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["store.service.ts:44",{"_index":4946,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["store.service.ts:45",{"_index":1338,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["store.service.ts:49",{"_index":1344,"title":{},"body":{"injectables/ComponentStoreService.html":{},"injectables/InterfaceStoreService.html":{}}}],["store.service.ts:51",{"_index":4951,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["store.service.ts:53",{"_index":1340,"title":{},"body":{"injectables/ComponentStoreService.html":{},"injectables/InterfaceStoreService.html":{}}}],["store.service.ts:55",{"_index":4953,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["store.service.ts:56",{"_index":3592,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:57",{"_index":1336,"title":{},"body":{"injectables/ComponentStoreService.html":{},"injectables/InterfaceStoreService.html":{}}}],["store.service.ts:59",{"_index":4948,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["store.service.ts:60",{"_index":3603,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:64",{"_index":1334,"title":{},"body":{"injectables/ComponentStoreService.html":{},"injectables/IssueStoreService.html":{}}}],["store.service.ts:68",{"_index":1347,"title":{},"body":{"injectables/ComponentStoreService.html":{},"injectables/IssueStoreService.html":{}}}],["store.service.ts:72",{"_index":3596,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:76",{"_index":3586,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:80",{"_index":3614,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:84",{"_index":3610,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:88",{"_index":3583,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:92",{"_index":3579,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:96",{"_index":3606,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["stored",{"_index":1236,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["stretch",{"_index":273,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["string",{"_index":49,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":2915,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["stroke",{"_index":2746,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["structural",{"_index":3639,"title":{},"body":{"directives/ItemDirective.html":{}}}],["structure",{"_index":1982,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/ProjectMembersComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{}}}],["stuff",{"_index":597,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["style",{"_index":3526,"title":{},"body":{"components/IssueLocationComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/RemoveDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["style('opacity",{"_index":3099,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["styleurls",{"_index":21,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"interfaces/userMock.html":{}}}],["sub",{"_index":1825,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sub.error(error",{"_index":1867,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["sub.next(this.current",{"_index":1864,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["sub.unsubscribe",{"_index":1828,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sub.unsubscribe()`]{@link",{"_index":1776,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subdivided",{"_index":5779,"title":{},"body":{"index.html":{}}}],["subheading",{"_index":2740,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["subject",{"_index":680,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{},"interfaces/User.html":{}}}],["submitform",{"_index":3840,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["submitform(value",{"_index":5106,"title":{},"body":{"components/RegisterComponent.html":{}}}],["subscribe",{"_index":772,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueGraphControlsComponent.html":{},"components/LoginComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["subscribe(_",{"_index":592,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["subscribe(filterstate",{"_index":3047,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["subscribe(project",{"_index":588,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["subscribe(r",{"_index":4278,"title":{},"body":{"interfaces/Positions.html":{}}}],["subscribe(this.isprojectset",{"_index":2236,"title":{},"body":{"components/FrameComponent.html":{}}}],["subscribe]{@link",{"_index":1758,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subscribelazy",{"_index":1690,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subscribelazy(...args",{"_index":1719,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subscriber",{"_index":1728,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subscriber.next(this.current",{"_index":1858,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subscribercount",{"_index":1870,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subscribers",{"_index":1801,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subscribes",{"_index":4296,"title":{},"body":{"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["subscribetosubject",{"_index":4308,"title":{},"body":{"interfaces/Positions.html":{}}}],["subscription",{"_index":787,"title":{},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["subscription#unsubscribe",{"_index":1777,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subscriptions",{"_index":567,"title":{},"body":{"interfaces/AppState.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueGraphControlsComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{}}}],["subsequent",{"_index":1760,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subtract",{"_index":5572,"title":{},"body":{"classes/Vector.html":{}}}],["subtract(other",{"_index":5609,"title":{},"body":{"classes/Vector.html":{}}}],["success",{"_index":275,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["success(value",{"_index":5047,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["successful",{"_index":678,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CommentComponent.html":{},"components/IssueContentsComponent.html":{},"components/NodeDetailsComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/User.html":{}}}],["successfull",{"_index":3845,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["successfully",{"_index":4995,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["succession",{"_index":815,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["sucessfull",{"_index":669,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["such",{"_index":1990,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueItemComponent.html":{},"classes/NodeCache.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["sufficient",{"_index":1767,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["suggestions",{"_index":5187,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["sum",{"_index":5577,"title":{},"body":{"classes/Vector.html":{}}}],["super(id",{"_index":1874,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["super(subscriber",{"_index":1814,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["superset",{"_index":5195,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["support",{"_index":5805,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":1023,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/LayoutNode.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectOverviewComponent.html":{},"classes/Vector.html":{}}}],["svg",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"components/IssueDetailComponent.html":{},"modules.html":{}}}],["switch",{"_index":2829,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/SettingsDialogComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["switches",{"_index":3001,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["switchmap",{"_index":539,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/FilterSelection.html":{},"injectables/IssueGraphStateService.html":{},"components/LabelSearchComponent.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{}}}],["switchmap(([appstate",{"_index":3171,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["switchmap((event",{"_index":586,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["switchmap(term",{"_index":2171,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["switchtheme",{"_index":5289,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["symbols",{"_index":5118,"title":{},"body":{"components/RegisterComponent.html":{}}}],["synchronously",{"_index":1754,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["syncstatewithurl",{"_index":5339,"title":{},"body":{"injectables/StateService.html":{}}}],["syncstatewithurl(router",{"_index":580,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["syntax",{"_index":3878,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["system",{"_index":4761,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["t",{"_index":1783,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/FilterState.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tab",{"_index":4200,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["table",{"_index":3354,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":5717,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":4235,"title":{},"body":{"interfaces/Positions.html":{}}}],["taken",{"_index":2787,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/RegisterComponent.html":{}}}],["takes",{"_index":4507,"title":{},"body":{"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["takeuntil",{"_index":3028,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/Positions.html":{}}}],["takeuntil(destroy",{"_index":3167,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["takeuntil(this.destroy",{"_index":3045,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["tap",{"_index":2132,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["target",{"_index":1277,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{}}}],["target.allowedanchors.has('bottom",{"_index":3141,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["target.allowedanchors.has('right",{"_index":3140,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["target?.allowedanchors",{"_index":3125,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["targetfolders",{"_index":2384,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["targetfolders.concat(targetlocationids.map(locationid",{"_index":2393,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["targethandles",{"_index":3115,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["targetid",{"_index":1273,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["targetlocationids",{"_index":2391,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["targetnode",{"_index":2969,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"interfaces/Positions.html":{}}}],["targetnode.id.tostring()).subscribe",{"_index":4364,"title":{},"body":{"interfaces/Positions.html":{}}}],["targetnode?.type",{"_index":4354,"title":{},"body":{"interfaces/Positions.html":{}}}],["targetpoint",{"_index":5581,"title":{},"body":{"classes/Vector.html":{}}}],["targets",{"_index":4344,"title":{},"body":{"interfaces/Positions.html":{}}}],["task",{"_index":4883,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["tell",{"_index":3006,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentNode.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{}}}],["templateref",{"_index":783,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/MultiSourceList.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["templates",{"_index":3640,"title":{},"body":{"directives/ItemDirective.html":{}}}],["templates/dynamic",{"_index":3088,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["templateurl",{"_index":23,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"interfaces/userMock.html":{}}}],["term",{"_index":3663,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["term).pipe",{"_index":2173,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["test",{"_index":2917,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["test)&quot;&quot",{"_index":2922,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["testing",{"_index":758,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["text",{"_index":196,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"miscellaneous/typealiases.html":{}}}],["text(value",{"_index":5371,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["textdisplaycomponent",{"_index":195,"title":{"components/TextDisplayComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["textdisplayeditcallbackfn",{"_index":5355,"title":{},"body":{"components/TextDisplayComponent.html":{},"miscellaneous/typealiases.html":{}}}],["textfragment",{"_index":2175,"title":{"interfaces/TextFragment.html":{}},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["texts",{"_index":2127,"title":{},"body":{"interfaces/FilterSelection.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{}}}],["texts.length",{"_index":2929,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["texts.map(text",{"_index":2939,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["textstoregex",{"_index":2881,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["textstoregex([\"newest",{"_index":2916,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["textstoregex([&quot;newest",{"_index":2918,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["textstoregex(texts",{"_index":2909,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["thecurrent",{"_index":881,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["theme",{"_index":3892,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["then(created",{"_index":1511,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["then(data",{"_index":5562,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["theres",{"_index":4632,"title":{},"body":{"interfaces/Positions.html":{}}}],["theses",{"_index":5798,"title":{},"body":{"index.html":{}}}],["thing",{"_index":1670,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["thing$.hasdata",{"_index":1671,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["thing$.loading",{"_index":1669,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["thing.something",{"_index":1672,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["thingid",{"_index":1674,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["things",{"_index":1888,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["thingslistid",{"_index":1887,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["thingssub",{"_index":1891,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["thingsub",{"_index":1675,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["think",{"_index":1230,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["this.activatedroute.parent",{"_index":4433,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.activatedroute.queryparams.subscribe",{"_index":3470,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.activatedroute.snapshot.parammap.get('id",{"_index":2702,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.activatedroute.snapshot.parammap.get('issueid",{"_index":2703,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.activeitemcontent",{"_index":5457,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["this.activepredicates",{"_index":2851,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.activepredicates.slice(0",{"_index":2834,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.activepredicates.splice(index",{"_index":2841,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.activepredicates[index",{"_index":2837,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.addableusers",{"_index":4887,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.addableusers.foreach(addableuser",{"_index":4890,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.addcoalesceitems(coalescelist",{"_index":907,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.addconsumedinterfacemutation.mutate({input",{"_index":2941,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["this.addinterfacetocomponent(event.detail.sourcenode.id",{"_index":4367,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.addissuefoldernodes(node",{"_index":4582,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.addissuefolders(node",{"_index":4533,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.addissuegroupcontainer(node",{"_index":4581,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.addissuetolocationmutation.mutate({input",{"_index":3631,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.additions.add(encodenodeid(node",{"_index":4067,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.additions.add(id",{"_index":4059,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.additions.delete(id",{"_index":4056,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.additions.has(id",{"_index":4050,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.additions.size",{"_index":4060,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.addsinglecoalesceitem(timelineitem",{"_index":922,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.addsubscriber(subscriber",{"_index":1815,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.allcomponentslist",{"_index":1490,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["this.alllabelslist",{"_index":3429,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.apiservice.addconsumedinterface(componentid",{"_index":3177,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["this.apiservice.loadissuegraphdata(appstate.project.node.id",{"_index":3172,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["this.apiservice.removeconsumedinterface(componentid",{"_index":3178,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["this.applychangeset(additions",{"_index":5228,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.authenticationservice.currentuservalue",{"_index":640,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.login(this.validateform.controls.username.value",{"_index":3862,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.body",{"_index":5035,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.body.code",{"_index":1585,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.breakpointobserver.observe(breakpoints.handset",{"_index":2219,"title":{},"body":{"components/FrameComponent.html":{},"interfaces/Positions.html":{},"components/TopToolbarComponent.html":{}}}],["this.bug",{"_index":3034,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.button",{"_index":5036,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.button.element.disabled",{"_index":5056,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.buttonmode",{"_index":5034,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.calculateboundingbox",{"_index":4513,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.calculatesourcehandles(source",{"_index":3124,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["this.calculatetargethandles(target",{"_index":3126,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["this.callback",{"_index":4174,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.callback(false",{"_index":4195,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.callback(true",{"_index":4175,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.cancreatenewissue",{"_index":3433,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.category.setvalue(data.category",{"_index":2715,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.category.setvalue(issuecategory.unclassified",{"_index":1573,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.category.value",{"_index":1586,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueDetailComponent.html":{}}}],["this.changecolour",{"_index":4784,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.changedetector.detectchanges",{"_index":1143,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsPageComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["this.changeissuecategorymutation.mutate({input",{"_index":3630,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.childnodepositions.set(childid",{"_index":3247,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["this.close",{"_index":1149,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.closecomponentactions",{"_index":4288,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.closecomponentactions(false",{"_index":4389,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.closeissuemutation.mutate({input",{"_index":3627,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.codechange.emit(this.code",{"_index":3895,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["this.color",{"_index":1480,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["this.comment",{"_index":1006,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comment$.subscribelazy",{"_index":1009,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commenteditor.code",{"_index":2640,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.commentid",{"_index":1014,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commentissuemutation.mutate({input",{"_index":3625,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.commentsub",{"_index":1008,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commentsub?.unsubscribe",{"_index":1010,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.component",{"_index":3434,"title":{},"body":{"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["this.component$.id",{"_index":3492,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.component$.subscribe",{"_index":3437,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.component.node.description",{"_index":4181,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.component.node.id",{"_index":4193,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.component.node.ims.imstype",{"_index":4179,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.component.node.name",{"_index":4169,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.componentcontextmenu",{"_index":4419,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentcontextmenu.close",{"_index":4497,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentcontextmenu.data.nodeid",{"_index":4425,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentcontextmenu.height",{"_index":4467,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentcontextmenu.updateposition(math.max(x",{"_index":4422,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentcontextmenu.width",{"_index":4465,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentcontextmenunodeid",{"_index":4443,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentcontextmenuservice.open",{"_index":4446,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentinterface",{"_index":3439,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.componentinterface$.dataaspromise().then(data",{"_index":3442,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.componentinterface$.id",{"_index":3493,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.componentinterface$.subscribe",{"_index":3441,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.componentinterfaceprovider",{"_index":3443,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.componentinterfacesub",{"_index":3440,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.componentinterfacesub?.unsubscribe",{"_index":3468,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.componentlist",{"_index":1471,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["this.componentlist.push(item",{"_index":1499,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["this.componentlist.splice(this.componentlist.indexof(item",{"_index":1501,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["this.componentstoreservice.getfullcomponent(rootid).subscribe(component",{"_index":4483,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentsub",{"_index":3436,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.componentsub?.unsubscribe",{"_index":3467,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.confirmvalidator",{"_index":5130,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.connectconsumingcomponents(interfacenode",{"_index":4539,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.connectedto.add(other",{"_index":3730,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.connectedto.has(othernode",{"_index":3757,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.connecttoofferingcomponent(interfacenode",{"_index":4538,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.contextmenutypefornodetype(node",{"_index":4436,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.createcomponentmutation.mutate({input",{"_index":1356,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["this.createinterfacemutation.mutate({input",{"_index":2582,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["this.createissue.mutate({input",{"_index":3622,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.createitem",{"_index":5230,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.createnode(id",{"_index":2002,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.createproject.mutate({input",{"_index":4957,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["this.current",{"_index":1856,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.current.keys",{"_index":1951,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.current.keys().next()?.value",{"_index":1946,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.current.values",{"_index":1935,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.current?.has(encodenodeid(key",{"_index":1955,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.currentdata",{"_index":1793,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.currentqueryparams",{"_index":1797,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.currentuser",{"_index":695,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/IssueContentsComponent.html":{},"interfaces/User.html":{}}}],["this.currentuser$.subscribe",{"_index":2632,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.currentusersub",{"_index":2631,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.currentusersub.unsubscribe",{"_index":2634,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.currentusersubject",{"_index":693,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["this.currentusersubject.asobservable",{"_index":696,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["this.currentusersubject.next(null",{"_index":718,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["this.currentusersubject.next(user",{"_index":714,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["this.currentusersubject.value",{"_index":697,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["this.currentvisiblearea",{"_index":4417,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.cursor",{"_index":1959,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.data",{"_index":5017,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.data.applychangeset([...this.additions].map(decodenodeid",{"_index":4063,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.data.components",{"_index":1576,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.data.confirmbuttontext",{"_index":5160,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["this.data.createitem().then(node",{"_index":4066,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.data.editexisting",{"_index":1470,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["this.data.editexisting.id",{"_index":1508,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["this.data.graph.reload",{"_index":1148,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.data.issueid",{"_index":1489,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["this.data.listall",{"_index":4028,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.data.listset].map(id",{"_index":4024,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.data.locations",{"_index":1579,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.data.makefilter(this.searchquery",{"_index":4042,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.data.nodeid",{"_index":1164,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["this.data.offeredbyid",{"_index":1540,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{}}}],["this.data.overlayref.dispose",{"_index":1153,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.data.overlayref.getconfig().positionstrategy.apply",{"_index":1152,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.data.position.offsetx",{"_index":1150,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.data.position.offsety",{"_index":1151,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.data.projectid",{"_index":1418,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["this.data.scorekeys",{"_index":4030,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.data.verificationname",{"_index":2114,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["this.dataservice",{"_index":4031,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.dataservice.getlist",{"_index":883,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueContentsComponent.html":{}}}],["this.dataservice.getlist(decodelistid(source",{"_index":3970,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.dataservice.getlist(this.data.listset",{"_index":4026,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.dataservice.getlist(this.listid",{"_index":3449,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.dataservice.getlist(this.listset",{"_index":5213,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.dataservice.getlist(this.thingslistid",{"_index":1893,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.dataservice.getnode",{"_index":3785,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["this.dataservice.getnode(current_user_node",{"_index":2630,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.dataservice.getnode(issuenodeid",{"_index":2706,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.dataservice.getnode(node",{"_index":4753,"title":{},"body":{"components/ProjectIssueListComponent.html":{}}}],["this.dataservice.getnode(this.commentid",{"_index":1007,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.dataservice.getnode(this.data.editexisting",{"_index":1474,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["this.dataservice.getnode(this.listid.node",{"_index":3435,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.dataservice.getnode(this.node",{"_index":798,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["this.dataservice.getnode(this.thingid",{"_index":1677,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.dataservice.getnode({type",{"_index":4922,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["this.dataservice.mutations.addissuecomment",{"_index":2639,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.dataservice.mutations.addlabeltocomponent(math.random().tostring",{"_index":1504,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["this.dataservice.mutations.changeissuecategory",{"_index":2721,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.dataservice.mutations.closeissue(math.random().tostring",{"_index":2635,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.dataservice.mutations.createissue(issuedata).then(async",{"_index":1593,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.dataservice.mutations.createlabel",{"_index":1510,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["this.dataservice.mutations.deleteissuecomment",{"_index":1031,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.dataservice.mutations.removelabelfromcomponent(math.random().tostring",{"_index":1505,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["this.dataservice.mutations.renameissuetitle",{"_index":2719,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.dataservice.mutations.reopenissue(math.random().tostring",{"_index":2637,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.dataservice.mutations.updateissuecomment",{"_index":1012,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.dataservice.mutations.updatelabel",{"_index":1506,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["this.datasource",{"_index":3452,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.datasource.filter",{"_index":3463,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.datasource.paginator",{"_index":3461,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.datasource.sort",{"_index":3457,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.defaultmenutitle",{"_index":5318,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.deletecomponentmutation.mutate({input",{"_index":1355,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["this.deleteinterfacemutation.mutate({input",{"_index":2587,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["this.deleteissuecommentmutation.mutate({input",{"_index":3626,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.deleteitem.emit(item",{"_index":5234,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.deleteproject.mutate({input",{"_index":4958,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["this.deletequery.listento(this.componentstoreservice.deletecomponent(this.nodeid",{"_index":4173,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.deletequery.listento(this.componentstoreservice.getcomponentinterfaces(this.nodeid",{"_index":4153,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.deletequery.listento(this.interfacestoreservice.delete(this.nodeid",{"_index":4177,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.deletequery.listento(this.interfacestoreservice.getconsumingcomponents(this.nodeid",{"_index":4164,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.deletions.add(id",{"_index":4057,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.deletions.delete(id",{"_index":4058,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.deletions.has(id",{"_index":4051,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.deletions.size",{"_index":4061,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.deletions].map(decodenodeid)).then",{"_index":4064,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.description",{"_index":4924,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["this.destroy",{"_index":3060,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.destroy$).pipe",{"_index":3056,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.destroy$.next",{"_index":3061,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["this.dialog.close",{"_index":1507,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["this.dialog.close(created",{"_index":1512,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["this.dialog.close(null",{"_index":1487,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["this.dialog.open(accesstokendialogcomponent",{"_index":5292,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["this.dialog.open(addprojectmemberdialogcomponent",{"_index":4885,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.dialog.open(createcomponentdialogcomponent",{"_index":4724,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.dialog.open(createinterfacedialogcomponent",{"_index":4375,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.dialog.open(createissuedialogcomponent",{"_index":3491,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.dialog.open(createprojectdialogcomponent",{"_index":4782,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.dialog.open(profilesettingsdialogcomponent",{"_index":5291,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["this.dialog.open(removedialogcomponent",{"_index":1019,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["this.dialog.open(removeprojectmembercomponentcomponent",{"_index":4894,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.dialog.open(settingsdialogcomponent",{"_index":71,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["this.dialogref.close",{"_index":70,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["this.dialogref.close(data",{"_index":263,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["this.dialogref.close(data.createcomponentinterface.componentinterface.id",{"_index":1542,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{}}}],["this.dialogref.close(false",{"_index":2121,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["this.dialogref.close(null",{"_index":4062,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.dialogref.close(true",{"_index":1609,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["this.dialogref.close({createdprojectid",{"_index":1633,"title":{},"body":{"components/CreateProjectDialogComponent.html":{}}}],["this.dialogref.disableclose",{"_index":1574,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.dialogservice.open>(seteditordialogcomponent",{"_index":5235,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl('../assets/icons/svg",{"_index":306,"title":{},"body":{"components/AppComponent.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl(asseturl",{"_index":328,"title":{},"body":{"components/AppComponent.html":{}}}],["this.drawfolderrelations(node",{"_index":4534,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.drawgraph",{"_index":4544,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.editbody",{"_index":1016,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.edititem.emit(item",{"_index":5232,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.editmode",{"_index":4130,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/TextDisplayComponent.html":{}}}],["this.edittext",{"_index":5376,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["this.emiterrortoallsubscribers(error",{"_index":1844,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.emitupdatetoallsubscribers",{"_index":1853,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.emptyresultslabel",{"_index":5241,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.emptysuggestionslabel",{"_index":5240,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.errorconfig",{"_index":5539,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["this.extractissueid(component.node.issues.nodes",{"_index":4485,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.extractissueid(interfacecomponent.node.issuesonlocation.nodes",{"_index":4488,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.fb.group",{"_index":3870,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.featurerequests",{"_index":3035,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.filter",{"_index":2981,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.filter$.next(filterstate",{"_index":3048,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.filterchange.emit(this.buildfilter",{"_index":2855,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.filterselection",{"_index":2153,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.filterselection$.next(selection",{"_index":2166,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.findidealcomponentposition(component.id",{"_index":4522,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.firstpageitemid",{"_index":1963,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.fitgraphinview",{"_index":4672,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.fixed",{"_index":3731,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.formatcategorydescription(element.category",{"_index":3497,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.formatissueopentime",{"_index":2727,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.forward",{"_index":1919,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.frame.nativeelement.style.minheight",{"_index":1141,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.frame.nativeelement.style.minwidth",{"_index":1139,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.fromgqlnolinks(gqlissue",{"_index":2375,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["this.fromgqlnolinks(gqlpartialissue",{"_index":2378,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["this.fullissue",{"_index":3784,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["this.fullissue.subscribe",{"_index":3787,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["this.fullissuelink",{"_index":3782,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["this.fullissuesub",{"_index":3786,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["this.fullissuesub?.unsubscribe",{"_index":3788,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["this.getallfilter(projectid",{"_index":3666,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["this.getallfilter(projectid).pipe",{"_index":3667,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["this.getallquery.fetch({filter}).pipe",{"_index":4961,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["this.getalltimelineitemsquery.fetch({input",{"_index":3635,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.getbasiccomponentquery.fetch({id}).pipe(map(({data",{"_index":1352,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["this.getbasicprojectquery.fetch({id}).pipe(map(({data",{"_index":4959,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["this.getcomponentinterfacesquery.fetch({id}).pipe(map(({data",{"_index":1354,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["this.getconsumingcomponentsquery.fetch({id}).pipe(map(({data",{"_index":2585,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["this.getencodedid(item",{"_index":4049,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.getfullcomponentquery.fetch({id}).pipe(map(({data",{"_index":1353,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["this.getfullissuegraphdataquery.fetch({projectid",{"_index":2930,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["this.getfullissuequery.fetch({id}).pipe",{"_index":3634,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.getfullquery.fetch({id}).pipe(map(({data",{"_index":4960,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["this.getinterfacequery.fetch({id}).pipe",{"_index":2583,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["this.getlabelsgql.fetch({projectid}).pipe",{"_index":3671,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["this.getlabelsquery.fetch({id}).pipe(map(({data",{"_index":1351,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["this.getnode(id",{"_index":2010,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.getqueryparamfilter",{"_index":3464,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.getremainingtypes(index",{"_index":2843,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.getsearchissuegraphdataquery.fetch({projectid",{"_index":2937,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["this.getselectedcategories",{"_index":3021,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.graph",{"_index":4273,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.addedge(edge",{"_index":4631,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.addedge(issuegraphnodes.createconsumptionedge(consumerid",{"_index":4575,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.addedge(issuegraphnodes.createinterfaceprovisionedge(node.offeredbyid",{"_index":4568,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.addnode(issuefoldernode",{"_index":4615,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.addnode(issuegroupcontainernode",{"_index":4600,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.addnode(node",{"_index":4532,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.completerender",{"_index":4540,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.currentviewwindow",{"_index":4450,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.currentzoomtransform.apply([node.x",{"_index":4421,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.currentzoomtransform.k",{"_index":4451,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.edgelist",{"_index":4553,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.getnode(edge.source",{"_index":4361,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.getnode(edge.target",{"_index":4362,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.getnode(id",{"_index":4624,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.getnode(this.componentcontextmenunodeid",{"_index":4420,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.getsvg().style",{"_index":4720,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.groupingmanager",{"_index":4592,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.groupingmanager.addnodetogroup(node.issuegroupcontainer.id",{"_index":4616,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.groupingmanager.clearallgroups",{"_index":4556,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.nodelist",{"_index":4554,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.zoomtobox",{"_index":4468,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.zoomtobox(previousboundingbox",{"_index":4671,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.zoomtobox(rect",{"_index":4676,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphdata",{"_index":4239,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphdata.components.size",{"_index":4644,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphdata.graphlocations.get(node.id).issues",{"_index":4608,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphdata.interfaces.get(interfacenode.id).consumedby",{"_index":4574,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphdata.relatedfolders",{"_index":4511,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphdata.relatedfolders.getvalue([node.id.tostring",{"_index":4626,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphfirstrender",{"_index":4648,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphinitialized",{"_index":4293,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphlink",{"_index":5331,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.graphwrapper.nativeelement",{"_index":4274,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.gs.addconsumedinterface(sourcenode.id.tostring",{"_index":4363,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.gs.graphdataforfilter(this.filter",{"_index":3055,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.gs.removeconsumedinterface(sourcenode.id.tostring",{"_index":4383,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.hasdata",{"_index":1821,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.hasmore",{"_index":3993,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.height",{"_index":1145,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.http.post(environment.loginurl",{"_index":701,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["this.hydrate",{"_index":5216,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.hydrated",{"_index":1843,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.hydrateraw(data.then(value",{"_index":1974,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.id",{"_index":1817,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"classes/Vector.html":{}}}],["this.infoconfig",{"_index":5541,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["this.initgraph",{"_index":4275,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.innermapfn",{"_index":1819,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.innermapfn(result",{"_index":1869,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.innerqueryfn",{"_index":1818,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.inputtitle.nativeelement.value",{"_index":2720,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.insertresult(data",{"_index":1842,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.interactive",{"_index":1718,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.interface",{"_index":4147,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.interface.node.description",{"_index":4184,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.interface.node.id",{"_index":4197,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.interface.node.name",{"_index":4176,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.interfacestore.create(name",{"_index":1539,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{}}}],["this.interfacestoreservice.getinterface(rootid).subscribe(interfacecomponent",{"_index":4487,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.invalidate",{"_index":1960,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.invalidatelists.bind(this",{"_index":2073,"title":{},"body":{"injectables/DataService.html":{}}}],["this.invalidcredentials",{"_index":3849,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.iscomponent",{"_index":3517,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["this.ishandset",{"_index":4279,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.isinset(item",{"_index":4055,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.isloading",{"_index":3861,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.islocalset",{"_index":4022,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.isnextsublazy",{"_index":1816,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.isprojecturl(event.url",{"_index":585,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["this.issue",{"_index":2705,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.issue$.dataaspromise().then(data",{"_index":2714,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.issue$.hasdata",{"_index":2710,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.issue$.id",{"_index":2636,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{}}}],["this.issue$.subscribe",{"_index":2708,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.issue.category",{"_index":3275,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["this.issue.id",{"_index":3298,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["this.issue.isopen",{"_index":3276,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["this.issue.linkedbyissues?.totalcount",{"_index":3278,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["this.issue.linkstoissues?.totalcount",{"_index":3280,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["this.issuedata.assignees.map(node",{"_index":1592,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.issuedata.components.map(node",{"_index":1589,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.issuedata.components.push(componentid",{"_index":1577,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.issuedata.labels.map(node",{"_index":1591,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.issuedata.linkstoissues",{"_index":1597,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.issuedata.locations.map(node",{"_index":1590,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.issuedata.locations.push(componentid",{"_index":1578,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.issueeditable",{"_index":2713,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.issuegraph.drawgraph",{"_index":3038,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.issuegraph.fitgraphinview",{"_index":3039,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.issuegraph.graphdata",{"_index":3057,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.issuegraph.layoutgraph",{"_index":3037,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.issuegraph.reload",{"_index":3052,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.issuegraph.setrelationvisibility(this.showrelations",{"_index":3058,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.issuegraphclasssettersservice.manageclasssetters(graph",{"_index":4299,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.issuegraphdynamictemplateregistryservice.managedynamictemplateregistry(graph",{"_index":4302,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.issuegraphlinkhandlesservice.managelinkhandles(graph",{"_index":4300,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.issuegroupparents",{"_index":4555,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.issuegroupparents.push(node",{"_index":4603,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.issueid",{"_index":885,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{}}}],["this.issuelistid",{"_index":4133,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/ProjectIssueListComponent.html":{}}}],["this.issueslink",{"_index":5332,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.issuestub.id",{"_index":3783,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["this.issuesub",{"_index":2707,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.issuesub.unsubscribe",{"_index":2709,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.itemops.includes('create",{"_index":5242,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.itemops.includes('delete",{"_index":5246,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.itemops.includes('edit",{"_index":5244,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.itemtemplate",{"_index":5237,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.labels",{"_index":2168,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.labelsearch.filterselection$]).pipe",{"_index":3044,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.labelsinput$.pipe",{"_index":2169,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.labelsloading",{"_index":2170,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.labelstore.getmatchinglabels(this.ss.state.project.node.id",{"_index":2172,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.lastloadtime",{"_index":1833,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.lastpageitemid",{"_index":1965,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.lastqueriedprojectname",{"_index":4777,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.layoutgraph",{"_index":4543,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.lazy",{"_index":800,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["this.linkedissues",{"_index":2626,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.linkedissues$.subscribe",{"_index":2629,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.linkedissuesub",{"_index":2628,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.linkedissuesub.unsubscribe",{"_index":2633,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.linkissue.mutate({input",{"_index":3623,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.list",{"_index":3448,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.list$.count",{"_index":3450,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.list$.current.values",{"_index":3478,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.list$.filter",{"_index":3473,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.list$.hasdata",{"_index":3476,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.listall",{"_index":4027,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listall.setfilter(this.searchquery",{"_index":4043,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listall.unsubscribe",{"_index":4069,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listid.node",{"_index":3430,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.listid.node.type",{"_index":3432,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.lists",{"_index":2086,"title":{},"body":{"injectables/DataService.html":{}}}],["this.lists.get(encodedid).add(list",{"_index":2092,"title":{},"body":{"injectables/DataService.html":{}}}],["this.lists.get(id",{"_index":2078,"title":{},"body":{"injectables/DataService.html":{}}}],["this.lists.has(encodedid",{"_index":2090,"title":{},"body":{"injectables/DataService.html":{}}}],["this.lists.has(id",{"_index":2077,"title":{},"body":{"injectables/DataService.html":{}}}],["this.lists.set(encodedid",{"_index":2091,"title":{},"body":{"injectables/DataService.html":{}}}],["this.listset",{"_index":4025,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listset$.count",{"_index":4038,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listset$.current?.has(id",{"_index":4053,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listset$.filter",{"_index":4041,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listset$.hydrateinitial(this.hydrate",{"_index":5217,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.listset$.interactive",{"_index":4039,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listset$.subscribe",{"_index":5214,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.listset$?.subscribe",{"_index":4034,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listsetsub",{"_index":4033,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listsetsub.unsubscribe",{"_index":5212,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.listsetsub?.unsubscribe",{"_index":4068,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.load",{"_index":1851,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.loaddebounced",{"_index":1800,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.loadifneeded",{"_index":1859,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.loadimpl(prepareddata",{"_index":1848,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.loadimpl(this.innerqueryfn(this.id",{"_index":1845,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.loading",{"_index":1473,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"classes/NodeCache.html":{},"components/ProjectListComponent.html":{}}}],["this.loadlabels",{"_index":2150,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.loadsavedpositions",{"_index":4295,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.loadtimeout",{"_index":1832,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.localset",{"_index":4023,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.localset.includes(id",{"_index":4052,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.location",{"_index":3516,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["this.location.id",{"_index":3519,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["this.makefilter",{"_index":5239,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.managedragbehaviour(graph",{"_index":4301,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.manageeventlisteners(graph",{"_index":4303,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.matchvalidator",{"_index":2119,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["this.maticonregistry.addsvgicon(iconname",{"_index":327,"title":{},"body":{"components/AppComponent.html":{}}}],["this.maticonregistry.addsvgicon(key",{"_index":305,"title":{},"body":{"components/AppComponent.html":{}}}],["this.memberslink",{"_index":5333,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.menuclick.emit",{"_index":5513,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["this.menutitle",{"_index":5327,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.minimap.nativeelement",{"_index":4298,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.mockusers",{"_index":4896,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.mockusers.push(addableuser",{"_index":4892,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.mockusers.push(u",{"_index":4880,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.mode",{"_index":5294,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["this.modeicon",{"_index":5297,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["this.mutations",{"_index":2071,"title":{},"body":{"injectables/DataService.html":{}}}],["this.node",{"_index":797,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["this.node$.subscribe",{"_index":802,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["this.node$.subscribelazy",{"_index":801,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["this.node().node.name",{"_index":4150,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.nodeclickcontextmenuhastype(node",{"_index":4437,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.nodeclickissuefolder(node",{"_index":4438,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.nodeclickmanyissues(rootnode",{"_index":4480,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.nodeclickoneissue(rootid",{"_index":4478,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.nodedetails.getnodename",{"_index":1163,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["this.nodedetailsready",{"_index":1142,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.nodeid",{"_index":4134,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{}}}],["this.nodequery",{"_index":4148,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.nodequery.listento(this.componentstoreservice.getbasiccomponent(this.nodeid",{"_index":4138,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.nodequery.listento(this.interfacestoreservice.getinterface(this.nodeid",{"_index":4144,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.nodequery.ready",{"_index":4149,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.nodequery.seterror",{"_index":4142,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.nodes",{"_index":2069,"title":{},"body":{"injectables/DataService.html":{}}}],["this.nodes.get(encodedid",{"_index":2003,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.nodes.getnode(id",{"_index":2074,"title":{},"body":{"injectables/DataService.html":{}}}],["this.nodes.has(encodedid",{"_index":2001,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.nodes.set(encodedid",{"_index":1998,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.nodesub",{"_index":799,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["this.nodesub.unsubscribe",{"_index":804,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["this.nodetype",{"_index":4131,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{}}}],["this.notify.notifyerror('could",{"_index":1484,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["this.notify.notifyerror('failed",{"_index":1034,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RegisterComponent.html":{}}}],["this.notify.notifyerror(this.errormessage",{"_index":5052,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.notify.notifyinfo('successfully",{"_index":1032,"title":{},"body":{"components/CommentComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["this.notifyservice.notifyerror('failed",{"_index":4065,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.oncreateedge",{"_index":4318,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.ondialogapplychangeset",{"_index":5238,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.ondialogcreateitem",{"_index":5243,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.ondialogdeleteitem",{"_index":5247,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.ondialogedititem",{"_index":5245,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.ondraggededgetargetchanged",{"_index":4321,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.onedgeadd",{"_index":4323,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.onedgedrop",{"_index":4328,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.onedgeremove",{"_index":4325,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.oneditfinished",{"_index":5377,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["this.oneditfinished(saved",{"_index":5378,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["this.onminimaprender(minimap",{"_index":4412,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.onnodeclick",{"_index":4386,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.overlay.create",{"_index":1110,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.overlay.position().flexibleconnectedto(parent",{"_index":1099,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.overviewlink",{"_index":5329,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.padding",{"_index":3725,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.pageinfo",{"_index":1906,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.pageinfo.hasnextpage",{"_index":1922,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.pageinfo.haspreviouspage",{"_index":1920,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.paginator",{"_index":3462,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.params",{"_index":1928,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.pcount",{"_index":1930,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.pcursor",{"_index":1929,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.pfilter",{"_index":1932,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.pforward",{"_index":1931,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.pluralize(days",{"_index":5436,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["this.pluralize(hours",{"_index":5438,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["this.pluralize(minutes",{"_index":5440,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["this.pluralize(months",{"_index":5432,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["this.pnodes",{"_index":1925,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.pnodes.insertnodes(value.nodes",{"_index":1977,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.position",{"_index":3728,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.position.x",{"_index":3746,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.position.y",{"_index":3747,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.predicatevalues[id",{"_index":2854,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.predicatevalues[id].push(item",{"_index":2847,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.predicatevalues[id].splice(this.predicatevalues[id].indexof(item",{"_index":2848,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.predicatevalues[type",{"_index":2838,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.prepareissuearray",{"_index":3466,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.preparetimelineitems(value",{"_index":893,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.previouslyhadpagecontents",{"_index":1921,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.project",{"_index":4752,"title":{},"body":{"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["this.project$.subscribe(project",{"_index":4877,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.project.current.name",{"_index":4926,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["this.projectid",{"_index":2701,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["this.projectname",{"_index":4778,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.projects",{"_index":4780,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.projectstoragekey",{"_index":4276,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.projectstore.delete(this.projectid).subscribe",{"_index":4927,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["this.projectstore.getall(this.projectname).subscribe(projects",{"_index":4779,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.projectstore.getfullproject(this.projectid",{"_index":4876,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.ps.create(name",{"_index":1632,"title":{},"body":{"components/CreateProjectDialogComponent.html":{}}}],["this.psetparamsnoupdate",{"_index":1799,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.ptotalcount",{"_index":1908,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.publicclientname",{"_index":5126,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.query",{"_index":3981,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.query.listento(this.list",{"_index":3451,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.query.listento(this.someobservable",{"_index":5018,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.query.listento(this.somethingthattakesawhile",{"_index":5024,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.query.listento(this.timelineitems",{"_index":892,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.query.querystate",{"_index":5042,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.querycomponent.listento(this.componentstore.createcomponent(input",{"_index":1420,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["this.querycomponent.listento(this.project",{"_index":4923,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["this.queryparamfilter",{"_index":3472,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.querystate",{"_index":5037,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.randomizecolor",{"_index":1488,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["this.redrawbycloseofcomponentdetails",{"_index":4426,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.registerusermutation.client",{"_index":5125,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerusermutation.mutate({input}).subscribe(({data",{"_index":5147,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.relativepositionchanged(group",{"_index":3259,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["this.reload",{"_index":4403,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.reload$.next(null",{"_index":4365,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.reloadlistset",{"_index":5215,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.reloadonmouseup",{"_index":4390,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.reloadprojects",{"_index":4776,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.removeconsumedinterfacemutation.mutate({input",{"_index":2942,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["this.removeissuefromlocationmutation.mutate({input",{"_index":3632,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.renameissuemutation.mutate({input",{"_index":3629,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.reopenissuemutation.mutate({input",{"_index":3628,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.requesttimelineitems",{"_index":873,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.resetgraph",{"_index":4517,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.resetvalues",{"_index":4151,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.resize",{"_index":1135,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.results",{"_index":4003,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.returnurl",{"_index":3871,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.route.snapshot.parammap.get('componentid",{"_index":4211,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["this.route.snapshot.parammap.get('id",{"_index":3032,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["this.route.snapshot.parammap.get('interfaceid",{"_index":4212,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["this.route.snapshot.queryparams.returnurl",{"_index":3872,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate",{"_index":4486,"title":{},"body":{"interfaces/Positions.html":{},"components/ProjectOverviewComponent.html":{},"components/SideNavComponent.html":{}}}],["this.router.navigate(['./component",{"_index":4431,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.router.navigate(['./interface",{"_index":4434,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.router.navigate(['/login",{"_index":642,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigate(['/projects",{"_index":3474,"title":{},"body":{"components/IssueListComponent.html":{},"components/NodeDetailsPageComponent.html":{}}}],["this.router.navigate(['login",{"_index":717,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["this.router.navigate(['projects",{"_index":3518,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["this.router.navigate([this.returnurl",{"_index":3866,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.parseurl(url",{"_index":603,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["this.router.serializeurl(this.router.createurltree",{"_index":3297,"title":{},"body":{"components/IssueItemComponent.html":{},"components/LinkedIssueItemComponent.html":{}}}],["this.savechanges",{"_index":2718,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.savedpositions",{"_index":4294,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savedpositions.issuegroups[issuegroupcontainernode.id",{"_index":4595,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savedpositions.issuegroups[node.id",{"_index":4396,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savedpositions.nodes[id",{"_index":4559,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savedpositions.nodes[interfaceid",{"_index":4377,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savedpositions.nodes[intrface.id",{"_index":4527,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savedpositions.nodes[layoutnode.id",{"_index":4711,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savedpositions.nodes[node.id",{"_index":4399,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savefailed",{"_index":1543,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.savepositionssubject",{"_index":4309,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savepositionssubject.next",{"_index":4380,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.saveusertostorage(user",{"_index":713,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["this.savingbody",{"_index":1011,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.savingchanges",{"_index":2717,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.savingcomment",{"_index":2638,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.score(a",{"_index":4000,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.score(b",{"_index":4001,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.scorekeys",{"_index":3985,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.searchissuesdataarray",{"_index":3477,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.searchquery.trim",{"_index":2849,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.selectedcategories",{"_index":3011,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.selectedcategories$.next",{"_index":3033,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.selectedlabels.filter(item",{"_index":2161,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.selectedlabels.filter(label",{"_index":2164,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.selectedusers",{"_index":262,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["this.seterror",{"_index":5051,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.setgraphtolastview",{"_index":4541,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.setparams",{"_index":1926,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.showdeleted",{"_index":5456,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["this.showdeletedialog(affected",{"_index":4163,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.showdrawer",{"_index":2196,"title":{},"body":{"components/FrameComponent.html":{}}}],["this.showplaceholder",{"_index":5373,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["this.sort",{"_index":3458,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.sort.sort(({id",{"_index":3455,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.sourcenodelist",{"_index":3960,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcenodelist.subscribe",{"_index":3963,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcenodelist?.current?.entries",{"_index":3965,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcenodelist?.loading",{"_index":4004,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcenodelistsub",{"_index":3962,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcenodelistsub?.unsubscribe",{"_index":4006,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sources.delete(source",{"_index":3980,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sources.has(source",{"_index":3969,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sources.keys",{"_index":3976,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sources.set(source",{"_index":3972,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sources.values",{"_index":3982,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcesubs.delete(source",{"_index":3979,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcesubs.foreach(sub",{"_index":4007,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcesubs.get(source).unsubscribe",{"_index":3978,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcesubs.set(source",{"_index":3973,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.spec.staticsources",{"_index":3967,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.state",{"_index":3164,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["this.state$.next(this.state",{"_index":590,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["this.state.project",{"_index":589,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["this.statelock",{"_index":1840,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.staticsourcenodelist",{"_index":3958,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.stopcoalescing(coalescingtype",{"_index":917,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.subscribe(...args",{"_index":1861,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.subscribe(data",{"_index":1826,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.subscribers",{"_index":1863,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.subscribers.add(subscriber",{"_index":1855,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.subscribers.delete(subscriber",{"_index":1860,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.subscribers.size",{"_index":1871,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.subscribetosubject",{"_index":4297,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.subscription",{"_index":5045,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.subscription?.unsubscribe",{"_index":5039,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.syncstatewithurl(router",{"_index":560,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["this.text",{"_index":5375,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["this.textstoregex(texts",{"_index":2936,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["this.thing",{"_index":1676,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.thing$.subscribe",{"_index":1680,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.things",{"_index":1892,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.things$.subscribe",{"_index":1895,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.thingssub",{"_index":1894,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.thingssub.unsubscribe",{"_index":1896,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.thingsub",{"_index":1679,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.thingsub.unsubscribe",{"_index":1683,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.timeformatter.formattimedifference(comment.createdat",{"_index":1036,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.timeformatter.formattimedifference(comment.lasteditedat",{"_index":1039,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.timeformatter.formattimedifference(this.issue$.current.createdat",{"_index":2711,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.timeformatter.formattimedifference(timelineitem.time",{"_index":5471,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["this.timeformatter.pluralize(issue.issuecomments?.totalcount",{"_index":2729,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.timelineitem.iscoalesced",{"_index":5459,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["this.timelineitemcontent.template",{"_index":5462,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["this.timelineitemdeletedcontent.template",{"_index":5458,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["this.timelineitems",{"_index":882,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.timelineitems$.count",{"_index":890,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.timelineitemscontent",{"_index":5460,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["this.timelineitemscontent.template",{"_index":5461,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["this.title.value",{"_index":1584,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.titletext?.nativeelement.textcontent",{"_index":5236,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.toastr.error(message",{"_index":5538,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["this.toastr.info(message",{"_index":5540,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["this.unclassified",{"_index":3036,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.unknownerror",{"_index":3868,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.unlinkissuemutation.mutate({input",{"_index":3624,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.update",{"_index":2840,"title":{},"body":{"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.updatebutton",{"_index":5044,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.updatecommentmutation.mutate({input",{"_index":3633,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.updatecomponent",{"_index":4183,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.updatecomponentmutation.mutate({input",{"_index":1357,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["this.updateinterface",{"_index":4185,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.updateinterfacemutation.mutate({input",{"_index":2586,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["this.updatepasswordfieldsshown",{"_index":4735,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["this.updatequery.listento(this.componentstoreservice.updatecomponent(input",{"_index":4194,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.updatequery.listento(this.interfacestoreservice.update(mutationinputdata",{"_index":4198,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.updateresults",{"_index":3975,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.updateselecteditems",{"_index":1575,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.useravailablyquery.client",{"_index":5127,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.useravailablyquery.fetch({username",{"_index":5132,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.username(firstitem",{"_index":940,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.username(timelineitem",{"_index":948,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.usernameasyncvalidator",{"_index":5128,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.validateform",{"_index":3869,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.validateform.controls.confirm.updatevalueandvalidity",{"_index":5140,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.validateform.controls.password.reset",{"_index":3865,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.validateform.controls.password.value",{"_index":3863,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.validateform.controls[controlkey].markasdirty",{"_index":3859,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.validateform.controls[controlkey].updatevalueandvalidity",{"_index":3860,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.validateform.controls[key].markasdirty",{"_index":5142,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.validateform.controls[key].markaspristine",{"_index":5149,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.validateform.controls[key].updatevalueandvalidity",{"_index":5143,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.validateform.reset",{"_index":5148,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.validationdescription.setvalue(this.component.node.description",{"_index":4190,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationdescription.setvalue(this.interface.node.description",{"_index":4192,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationdescription.value",{"_index":4182,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationfilter.setvalue(this.getqueryparamfilter",{"_index":3465,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.validationims.setvalue",{"_index":4136,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationims.setvalue('http://example.ims.com",{"_index":4187,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationims.setvalue('this",{"_index":4140,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationlabeldescription.setvalue(data.description",{"_index":1482,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["this.validationlabelname.setvalue(data.name",{"_index":1479,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["this.validationname.setvalue(this.component.node.name",{"_index":4186,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationname.setvalue(this.interface.node.name",{"_index":4191,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationname.value",{"_index":4178,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationprovider.setvalue(this.component.node.ims.imstype",{"_index":4188,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationprovider.value",{"_index":4180,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationrole.setvalue('administrator",{"_index":258,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{}}}],["this.validationurl.setvalue",{"_index":4137,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationurl.setvalue('http://example.repo.com",{"_index":4189,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationurl.setvalue(component.node.repositoryurl",{"_index":4141,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.value",{"_index":5372,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["this.verificationnameinput.markastouched",{"_index":2120,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["this.width",{"_index":1144,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.x",{"_index":3719,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.y",{"_index":3720,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.zoomonredraw",{"_index":4402,"title":{},"body":{"interfaces/Positions.html":{}}}],["through",{"_index":652,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/IssueListComponent.html":{},"classes/MultiSourceList.html":{},"components/ProjectIssueListComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/User.html":{}}}],["throw",{"_index":1876,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/SetEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":819,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"classes/NodeCache.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["timeformatter",{"_index":830,"title":{"classes/TimeFormatter.html":{}},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/IssueDetailComponent.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"coverage.html":{}}}],["timeline",{"_index":201,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["timeline'},{'name",{"_index":199,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["timeline.component.html",{"_index":841,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["timeline.component.scss",{"_index":842,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["timelinecoalesceditemsdirective",{"_index":215,"title":{"directives/TimelineCoalescedItemsDirective.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timelinecomponent",{"_index":198,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timelinecomponent.coalescable_events.get(itemtype",{"_index":912,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["timelineitem",{"_index":908,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["timelineitem.createdat",{"_index":949,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["timelineitem.createdby.id",{"_index":959,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["timelineitemcomponent",{"_index":200,"title":{"components/TimelineItemComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timelineitemcontent",{"_index":5450,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["timelineitemdeletedcontent",{"_index":5454,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["timelineitemdeleteddirective",{"_index":217,"title":{"directives/TimelineItemDeletedDirective.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timelineitems",{"_index":863,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["timelineitemscontent",{"_index":5452,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["timelinesingleitemdirective",{"_index":219,"title":{"directives/TimelineSingleItemDirective.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timeout",{"_index":2452,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["tipping",{"_index":3347,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["title",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentNode.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/InterfaceNode.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Position.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"miscellaneous/variables.html":{}}}],["title.value.length",{"_index":1616,"title":{},"body":{"components/CreateIssueDialogComponent.html":{}}}],["titletext",{"_index":5209,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["toast",{"_index":2450,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["toasterconfig",{"_index":484,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["toastr",{"_index":425,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"injectables/UserNotifyService.html":{},"dependencies.html":{}}}],["toastr.error(message",{"_index":2472,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["toastr.error(networkerror.message",{"_index":2478,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["toastrmodule",{"_index":423,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{}}}],["toastrmodule.forroot(toasterconfig",{"_index":489,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrservice",{"_index":481,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"injectables/UserNotifyService.html":{}}}],["toasts",{"_index":480,"title":{},"body":{"modules/AppModule.html":{}}}],["todo",{"_index":72,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"classes/CCIMSValidators.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/QueryListParams.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"interfaces/userMock.html":{}}}],["toggle",{"_index":367,"title":{},"body":{"modules/AppModule.html":{},"components/CreateIssueDialogComponent.html":{},"modules/GraphsModule.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{}}}],["toggleinset",{"_index":5252,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["toggleinset(item",{"_index":4054,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["togglemenu",{"_index":2209,"title":{},"body":{"components/FrameComponent.html":{}}}],["toggles",{"_index":2298,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{}}}],["token",{"_index":11,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"coverage.html":{}}}],["tokenpayload",{"_index":709,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["tokenpayload.name",{"_index":711,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["tokenpayload.sub",{"_index":712,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["tokens",{"_index":75,"title":{},"body":{"components/AccessTokenDialogComponent.html":{}}}],["toolbar",{"_index":2245,"title":{},"body":{"components/FrameComponent.html":{},"components/TopToolbarComponent.html":{}}}],["toolbar'},{'name",{"_index":204,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["toolbar.component",{"_index":377,"title":{},"body":{"modules/AppModule.html":{}}}],["toolbar.component.html",{"_index":5501,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.scss",{"_index":5500,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts",{"_index":5497,"title":{},"body":{"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["toolbar.component.ts:22",{"_index":5507,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts:25",{"_index":5508,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts:27",{"_index":5512,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts:31",{"_index":5506,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts:33",{"_index":5511,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts:35",{"_index":5509,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts:39",{"_index":5510,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar/top",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["top",{"_index":203,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["topbar",{"_index":2192,"title":{},"body":{"components/FrameComponent.html":{}}}],["topdistance",{"_index":3227,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["toptoolbarcomponent",{"_index":202,"title":{"components/TopToolbarComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["total",{"_index":1933,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"classes/Vector.html":{}}}],["totalcount",{"_index":1934,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["towards",{"_index":3754,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["towardsother",{"_index":3743,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["towardsother.iszero",{"_index":3745,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["towardsother.length",{"_index":3752,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["towardsother.scale(1",{"_index":3753,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["track",{"_index":568,"title":{},"body":{"interfaces/AppState.html":{},"classes/LayoutNode.html":{},"injectables/StateService.html":{},"classes/Vector.html":{}}}],["trackbyfn",{"_index":3642,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["trackbyfn(item",{"_index":2151,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["transfered",{"_index":4933,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["transform",{"_index":1624,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/Positions.html":{}}}],["transition",{"_index":5929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transparent",{"_index":3653,"title":{},"body":{"components/LabelSearchComponent.html":{},"components/TimelineItemComponent.html":{}}}],["travel",{"_index":3712,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["treated",{"_index":5199,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["tree.root.children[primary_outlet",{"_index":605,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["tries",{"_index":3833,"title":{},"body":{"components/LoginComponent.html":{}}}],["trigger",{"_index":1796,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["trigger('routeanimations",{"_index":5928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["triggered",{"_index":4329,"title":{},"body":{"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"interfaces/userMock.html":{}}}],["triggering",{"_index":1769,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["triggers",{"_index":4721,"title":{},"body":{"interfaces/Positions.html":{}}}],["true",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LoginComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"injectables/UserNotifyService.html":{},"classes/Vector.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":3844,"title":{},"body":{"components/LoginComponent.html":{}}}],["ts",{"_index":1820,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["tsconfig.doc.json",{"_index":5775,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":5748,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":794,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["turned",{"_index":3003,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["twice",{"_index":1836,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["two",{"_index":563,"title":{},"body":{"interfaces/AppState.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"injectables/StateService.html":{},"classes/Vector.html":{}}}],["type",{"_index":42,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":5809,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":2108,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"components/RemoveDialogComponent.html":{},"interfaces/TextFragment.html":{}}}],["typename",{"_index":3803,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["typeof",{"_index":2075,"title":{},"body":{"injectables/DataService.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/UsersService.html":{}}}],["typeparam",{"_index":1782,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["types",{"_index":1781,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":2274,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"dependencies.html":{},"index.html":{}}}],["u",{"_index":2183,"title":{},"body":{"interfaces/FilterState.html":{}}}],["ul",{"_index":5492,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["uncategorized",{"_index":313,"title":{},"body":{"components/AppComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{}}}],["unclassified",{"_index":1572,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"miscellaneous/variables.html":{}}}],["unclassifiedcount",{"_index":2332,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["undefined",{"_index":947,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/IssueGraphApiService.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"injectables/UserNotifyService.html":{}}}],["under",{"_index":3692,"title":{},"body":{"classes/LayoutNode.html":{}}}],["undone",{"_index":1026,"title":{},"body":{"components/CommentComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["undone!'].concat(affected",{"_index":4170,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["uneditable",{"_index":2722,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["union",{"_index":2284,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{}}}],["unique",{"_index":2795,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["uniquely",{"_index":3798,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["unknown",{"_index":1866,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["unknownerror",{"_index":3838,"title":{},"body":{"components/LoginComponent.html":{}}}],["unlabelledevent",{"_index":847,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["unless",{"_index":1721,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["unlink",{"_index":3545,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["unlink(unlinkissueinput",{"_index":3616,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["unlinkevent",{"_index":858,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["unlinkissuegql",{"_index":3558,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["unlinkissueinput",{"_index":3617,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["unlinkissuemutation",{"_index":3557,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["unnecessary",{"_index":2047,"title":{},"body":{"injectables/DataService.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["unsubscribe",{"_index":1682,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["unsubscribes",{"_index":3945,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["unused",{"_index":634,"title":{},"body":{"guards/AuthGuard.html":{}}}],["up",{"_index":562,"title":{},"body":{"interfaces/AppState.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{},"injectables/StateService.html":{}}}],["update",{"_index":1058,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"interfaces/QueryListParams.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"index.html":{}}}],["update(input",{"_index":2578,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["updatebutton",{"_index":5055,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["updatecomment",{"_index":3546,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["updatecomment(updatecommentinput",{"_index":3618,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["updatecommentgql",{"_index":3572,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["updatecommentinput",{"_index":3619,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["updatecommentmutation",{"_index":3571,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["updatecomponent",{"_index":1307,"title":{},"body":{"injectables/ComponentStoreService.html":{},"components/NodeDetailsComponent.html":{}}}],["updatecomponent(input",{"_index":1345,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["updatecomponentgql",{"_index":1318,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["updatecomponentinput",{"_index":1346,"title":{},"body":{"injectables/ComponentStoreService.html":{},"components/NodeDetailsComponent.html":{}}}],["updatecomponentinterfacegql",{"_index":2564,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["updatecomponentinterfaceinput",{"_index":2579,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"components/NodeDetailsComponent.html":{}}}],["updatecomponentmutation",{"_index":1303,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["updated",{"_index":4095,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["updateinterface",{"_index":4092,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["updateinterfacemutation",{"_index":2563,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["updatepassword",{"_index":4731,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["updatepasswordfieldsshown",{"_index":4728,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["updateposition",{"_index":1047,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["updateposition(x",{"_index":1054,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["updatequery",{"_index":4129,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["updateresults",{"_index":3923,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["updates",{"_index":1559,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["updateselectedcategories",{"_index":2995,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["updateselecteditems",{"_index":1551,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["updatetemplate",{"_index":3100,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["updating",{"_index":1299,"title":{},"body":{"injectables/ComponentStoreService.html":{},"interfaces/Positions.html":{}}}],["upon",{"_index":1756,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/SetEditorComponent.html":{}}}],["upper",{"_index":4588,"title":{},"body":{"interfaces/Positions.html":{}}}],["url",{"_index":552,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"classes/CCIMSValidators.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/FrameComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectIssueListComponent.html":{},"injectables/StateService.html":{},"miscellaneous/variables.html":{}}}],["urls",{"_index":5787,"title":{},"body":{"index.html":{}}}],["urlvalidator",{"_index":732,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["usable",{"_index":724,"title":{},"body":{"classes/CCIMSValidators.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["usage",{"_index":3894,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["use",{"_index":876,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"index.html":{}}}],["used",{"_index":637,"title":{},"body":{"guards/AuthGuard.html":{},"classes/CCIMSValidators.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"modules/GraphQLModule.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"directives/ItemDirective.html":{},"classes/MultiSourceList.html":{},"interfaces/Positions.html":{},"injectables/ProjectStoreService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":2497,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["useful",{"_index":5053,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["user",{"_index":206,"title":{"interfaces/User.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData-1.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["user.displayname",{"_index":264,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/UserItemComponent.html":{}}}],["user.username",{"_index":5519,"title":{},"body":{"components/UserItemComponent.html":{}}}],["user1",{"_index":4853,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user1.de",{"_index":4854,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user2",{"_index":4855,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user2.de",{"_index":4856,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user3",{"_index":4857,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user3.de",{"_index":4858,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user4",{"_index":4859,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user4.de",{"_index":4860,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user5",{"_index":4861,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user5.de",{"_index":4862,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user6",{"_index":4863,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user6.de",{"_index":4864,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["useravailablyquery",{"_index":5097,"title":{},"body":{"components/RegisterComponent.html":{}}}],["usercaneditissue",{"_index":2666,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["userfilter",{"_index":5553,"title":{},"body":{"injectables/UsersService.html":{}}}],["useritemcomponent",{"_index":205,"title":{"components/UserItemComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["usermock",{"_index":4907,"title":{"interfaces/userMock.html":{}},"body":{"components/ProjectMembersComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["username",{"_index":677,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/IssueFilterComponent.html":{},"components/LoginComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UsersService.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["username(item",{"_index":929,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["usernameasyncvalidator",{"_index":5090,"title":{},"body":{"components/RegisterComponent.html":{}}}],["usernotifyservice",{"_index":985,"title":{"injectables/UserNotifyService.html":{}},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"injectables/UserNotifyService.html":{},"coverage.html":{}}}],["users",{"_index":2825,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/QueriesService.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"index.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["users.service",{"_index":4992,"title":{},"body":{"injectables/QueriesService.html":{}}}],["usersservice",{"_index":4983,"title":{"injectables/UsersService.html":{}},"body":{"injectables/QueriesService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["userstoadd",{"_index":261,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{}}}],["userstodelete",{"_index":5173,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{}}}],["userstoragekey",{"_index":655,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["uses",{"_index":5079,"title":{},"body":{"interfaces/QueryListParams.html":{},"index.html":{}}}],["usevalue",{"_index":494,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["using",{"_index":1638,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueLabelComponent.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{}}}],["ustutt/grapheditor",{"_index":1207,"title":{},"body":{"interfaces/ComponentNode.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"dependencies.html":{}}}],["utilize",{"_index":4256,"title":{},"body":{"interfaces/Positions.html":{}}}],["v",{"_index":3772,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["valid",{"_index":1437,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{}}}],["validateconfirmpassword",{"_index":5093,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validateform",{"_index":3839,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validation",{"_index":237,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/RegisterComponent.html":{}}}],["validationdescription",{"_index":1409,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["validationerrors",{"_index":5121,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validationfilter",{"_index":3365,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["validationims",{"_index":1407,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["validationlabeldescription",{"_index":1444,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["validationlabelname",{"_index":1445,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["validationname",{"_index":1403,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["validationprovider",{"_index":1408,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["validationrole",{"_index":238,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{}}}],["validations",{"_index":1402,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["validationtype",{"_index":4084,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["validationurl",{"_index":1405,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["validatorfn",{"_index":2102,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["validators",{"_index":254,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"classes/CCIMSValidators.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueDetailComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["validators.compose",{"_index":738,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["validators.email",{"_index":5129,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.maxlength(256",{"_index":748,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["validators.maxlength(30",{"_index":1465,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{}}}],["validators.maxlength(655536",{"_index":733,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["validators.pattern",{"_index":740,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["validators.required",{"_index":250,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueDetailComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsComponent.html":{},"components/RegisterComponent.html":{}}}],["value",{"_index":51,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.email",{"_index":5146,"title":{},"body":{"components/RegisterComponent.html":{}}}],["value.length",{"_index":5374,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["value.map(item",{"_index":2832,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["value.pageinfo",{"_index":1976,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["value.password",{"_index":5145,"title":{},"body":{"components/RegisterComponent.html":{}}}],["value.totalcount",{"_index":1975,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["value.username",{"_index":5144,"title":{},"body":{"components/RegisterComponent.html":{}}}],["values",{"_index":2333,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueLabelComponent.html":{},"components/RegisterComponent.html":{}}}],["var",{"_index":99,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"interfaces/userMock.html":{}}}],["variable",{"_index":4714,"title":{},"body":{"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"coverage.html":{}}}],["variables",{"_index":3068,"title":{"miscellaneous/variables.html":{}},"body":{"components/IssueGraphControlsComponent.html":{},"components/IssueLabelComponent.html":{},"components/ProjectListComponent.html":{},"components/SideNavComponent.html":{},"miscellaneous/variables.html":{}}}],["various",{"_index":3638,"title":{},"body":{"directives/ItemDirective.html":{},"interfaces/Positions.html":{}}}],["vector",{"_index":3705,"title":{"classes/Vector.html":{}},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{},"coverage.html":{}}}],["vector(positionx",{"_index":3729,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["verbatim",{"_index":1724,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["verification",{"_index":5013,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["verificationname",{"_index":2094,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["verificationnameinput",{"_index":2118,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["verify",{"_index":754,"title":{},"body":{"classes/CCIMSValidators.html":{},"components/RegisterComponent.html":{}}}],["version",{"_index":5763,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":2593,"title":{},"body":{"components/IssueCategoryComponent.html":{},"components/IssueItemComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/TextDisplayComponent.html":{}}}],["very",{"_index":5554,"title":{},"body":{"injectables/UsersService.html":{}}}],["via",{"_index":1245,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"components/LoginComponent.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"interfaces/TextFragment.html":{},"index.html":{}}}],["view",{"_index":228,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["viewchild",{"_index":829,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SetEditorComponent.html":{},"interfaces/userMock.html":{}}}],["viewchild('body",{"_index":1562,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["viewchild('comment",{"_index":2618,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["viewchild('deletequery",{"_index":4126,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["viewchild('frame",{"_index":1130,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["viewchild('graph",{"_index":4245,"title":{},"body":{"interfaces/Positions.html":{}}}],["viewchild('minimap",{"_index":4248,"title":{},"body":{"interfaces/Positions.html":{}}}],["viewchild('nodequery",{"_index":4124,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["viewchild('resizecorner",{"_index":1132,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["viewchild('titleinput",{"_index":2683,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["viewchild('titletext",{"_index":5208,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["viewchild('updatequery",{"_index":4128,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["viewchild(issuegraphcomponent",{"_index":3016,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["viewchild(labelsearchcomponent",{"_index":3018,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["viewchild(matpaginator",{"_index":3415,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["viewchild(matpaginatormodule",{"_index":4867,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["viewchild(matsort",{"_index":3420,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["viewchild(nodedetailscomponent",{"_index":1136,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["viewchild(querycomponent",{"_index":870,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/IssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["viewers",{"_index":1761,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["views",{"_index":2187,"title":{},"body":{"components/FrameComponent.html":{}}}],["visibility",{"_index":4739,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["visibility_off",{"_index":4738,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["visible",{"_index":4448,"title":{},"body":{"interfaces/Positions.html":{}}}],["visible.height",{"_index":4462,"title":{},"body":{"interfaces/Positions.html":{}}}],["visible.width",{"_index":4460,"title":{},"body":{"interfaces/Positions.html":{}}}],["visible.x",{"_index":4469,"title":{},"body":{"interfaces/Positions.html":{}}}],["visible.y",{"_index":4470,"title":{},"body":{"interfaces/Positions.html":{}}}],["visited",{"_index":3734,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["visual",{"_index":4598,"title":{},"body":{"interfaces/Positions.html":{}}}],["visualize",{"_index":1235,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["visualized",{"_index":4569,"title":{},"body":{"interfaces/Positions.html":{}}}],["void",{"_index":46,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/CreateLabelDialogData.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{}}}],["vs",{"_index":1239,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"components/MarkdownEditorComponent.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["want",{"_index":1024,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"components/IssueFilterComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["wanted",{"_index":3848,"title":{},"body":{"components/LoginComponent.html":{}}}],["wasnt",{"_index":4645,"title":{},"body":{"interfaces/Positions.html":{}}}],["way",{"_index":5040,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["we're",{"_index":1889,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["weakmap",{"_index":1116,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["webcomponent",{"_index":5736,"title":{},"body":{"dependencies.html":{}}}],["webcomponent/lib/dynamic",{"_index":3087,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["webcomponent/lib/edge",{"_index":1209,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["webcomponent/lib/grapheditor",{"_index":2958,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/Positions.html":{}}}],["webcomponent/lib/grouping",{"_index":3201,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["webcomponent/lib/index",{"_index":2507,"title":{},"body":{"modules/GraphsModule.html":{}}}],["webcomponent/lib/link",{"_index":3090,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{}}}],["webcomponent/lib/node",{"_index":1208,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["webcomponent/lib/util",{"_index":4223,"title":{},"body":{"interfaces/Positions.html":{}}}],["webfrontend",{"_index":5760,"title":{},"body":{"index.html":{}}}],["webkit",{"_index":4805,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TimelineItemComponent.html":{}}}],["weight",{"_index":1620,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SideNavComponent.html":{},"components/UserItemComponent.html":{}}}],["weird",{"_index":1603,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["well",{"_index":1043,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"components/TopToolbarComponent.html":{},"classes/Vector.html":{}}}],["west",{"_index":4219,"title":{},"body":{"interfaces/Positions.html":{}}}],["whenever",{"_index":2984,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/RegisterComponent.html":{}}}],["whether",{"_index":569,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"injectables/StateService.html":{},"components/TopToolbarComponent.html":{}}}],["white",{"_index":745,"title":{},"body":{"classes/CCIMSValidators.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueLabelComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/RemoveDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["whitesmoke",{"_index":5073,"title":{},"body":{"components/QueryComponent.html":{}}}],["whitespace",{"_index":744,"title":{},"body":{"classes/CCIMSValidators.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["whoose",{"_index":2317,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/LabelStoreService.html":{}}}],["whose",{"_index":3952,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["width",{"_index":86,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["width:100",{"_index":4757,"title":{},"body":{"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["within",{"_index":1248,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["without",{"_index":1702,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/ProjectMembersComponent.html":{},"components/SetEditorComponent.html":{},"injectables/UsersService.html":{},"interfaces/userMock.html":{}}}],["won't",{"_index":1606,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["wont",{"_index":2865,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["word",{"_index":5383,"title":{},"body":{"components/TextDisplayComponent.html":{},"classes/TimeFormatter.html":{}}}],["work",{"_index":5559,"title":{},"body":{"injectables/UsersService.html":{}}}],["workaround",{"_index":2293,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["works",{"_index":2700,"title":{},"body":{"components/IssueDetailComponent.html":{},"interfaces/Positions.html":{}}}],["wrap",{"_index":3899,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["wrapper",{"_index":1440,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["x",{"_index":1060,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["x.name.tolocalelowercase().indexof(term.tolocalelowercase",{"_index":3670,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["x2",{"_index":3204,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["xmax",{"_index":4690,"title":{},"body":{"interfaces/Positions.html":{}}}],["xmin",{"_index":4688,"title":{},"body":{"interfaces/Positions.html":{}}}],["xoffset",{"_index":3229,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["y",{"_index":1056,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/FrameComponent.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["y2",{"_index":3205,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["year",{"_index":5433,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["yes",{"_index":1457,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"classes/NodeCache.html":{},"components/QueryComponent.html":{},"injectables/UserNotifyService.html":{}}}],["yielded",{"_index":5012,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["ymax",{"_index":4691,"title":{},"body":{"interfaces/Positions.html":{}}}],["ymin",{"_index":4689,"title":{},"body":{"interfaces/Positions.html":{}}}],["yoffset",{"_index":3230,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["you've",{"_index":1967,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["z",{"_index":5478,"title":{},"body":{"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["zero",{"_index":1994,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"classes/Vector.html":{}}}],["zeroposition",{"_index":1251,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["zone.js",{"_index":5751,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":340,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"interfaces/Positions.html":{},"overview.html":{}}}],["zoomonredraw",{"_index":4271,"title":{},"body":{"interfaces/Positions.html":{}}}],["zooms",{"_index":4653,"title":{},"body":{"interfaces/Positions.html":{}}}],["zoomtransform",{"_index":4640,"title":{},"body":{"interfaces/Positions.html":{}}}],["zoomtransformasstring",{"_index":4641,"title":{},"body":{"interfaces/Positions.html":{}}}],["zorro",{"_index":390,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AccessTokenDialogComponent.html":{"url":"components/AccessTokenDialogComponent.html","title":"component - AccessTokenDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AccessTokenDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/access-token-dialog/access-token-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-access-token-dialog\n            \n\n            \n                styleUrls\n                ./access-token-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./access-token-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                generateToken\n                            \n                            \n                                    Public\n                                goBackToSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/access-token-dialog/access-token-dialog.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        generateToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/access-token-dialog/access-token-dialog.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        goBackToSettings\n                        \n                    \n                \n            \n            \n                \n                    \n                    goBackToSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/access-token-dialog/access-token-dialog.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/access-token-dialog/access-token-dialog.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'option2'\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/access-token-dialog/access-token-dialog.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { SettingsDialogComponent } from '../settings-dialog/settings-dialog.component';\n\n@Component({\n  selector: 'app-access-token-dialog',\n  templateUrl: './access-token-dialog.component.html',\n  styleUrls: ['./access-token-dialog.component.scss']\n})\nexport class AccessTokenDialogComponent implements OnInit {\n  selected = 'option2';\n\n  constructor(public dialogRef: MatDialogRef, private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n\n  //go one step back (to the settings menu)\n  public goBackToSettings() {\n    this.dialogRef.close();\n    this.dialog.open(SettingsDialogComponent);\n  }\n\n  public generateToken() {\n    //TODO\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        arrow_back_ios\n        Back\n    \n\n    Personal access tokens\n    Generate a personal access token for quicker access ...\n\n    \n        \n          Note\n          \n        \n      \n\n      \n        Expitarion\n        \n          7 days\n          30 days\n          60 days\n          90 days\n        \n      \n\n      \n\n      \n    \n        Generate Token\n    \n\n      \n        Cancel\n    \n\n\n    \n\n    \n                \n                    ./access-token-dialog.component.scss\n                \n                .dialog{\n    width: 500px;\n}\n\n.example-form {\n    min-width: 150px;\n    max-width: 500px;\n    width: 100%;\n  }\n  \n.example-full-width {\n    width: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            arrow_back_ios        Back        Personal access tokens    Generate a personal access token for quicker access ...                      Note                                      Expitarion                  7 days          30 days          60 days          90 days                                      Generate Token                  Cancel    '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccessTokenDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddProjectMemberDialogComponent.html":{"url":"components/AddProjectMemberDialogComponent.html","title":"component - AddProjectMemberDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddProjectMemberDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component provides a view to add a member to a project\nThe view is just mocked, so no interaction with the backend or database is provided yet\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-project-member-dialog\n            \n\n            \n                styleUrls\n                ./add-project-member-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-project-member-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                loading\n                            \n                            \n                                selectedUsers\n                            \n                            \n                                validation\n                            \n                            \n                                validationRole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNoClick\n                            \n                            \n                                onOkClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onOkClick\n                        \n                    \n                \n            \n            \n                \nonOkClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationRole\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n/**\n * This component provides a view to add a member to a project\n * The view is just mocked, so no interaction with the backend or database is provided yet\n */\n@Component({\n  selector: 'app-add-project-member-dialog',\n  templateUrl: './add-project-member-dialog.component.html',\n  styleUrls: ['./add-project-member-dialog.component.scss']\n})\nexport class AddProjectMemberDialogComponent implements OnInit {\n  loading = false;\n  selectedUsers = [];\n  constructor(public dialogRef: MatDialogRef,@Inject(MAT_DIALOG_DATA) public data) { }\n  validation = new FormControl('', [Validators.required]);\n  validationRole = new FormControl('', [Validators.required]);\n  ngOnInit(): void {\n    this.validationRole.setValue('administrator')\n  }\n\n  //cancel button\n  onNoClick(){\n    this.dialogRef.close();\n  }\n\n  //add member button\n  onOkClick(){\n    const data = {usersToAdd: this.selectedUsers};\n    this.dialogRef.close(data);\n  }\n}\n\n    \n\n    \n        Add Project Member\n\n\n  \n  \n\n    \n\n      {{user.displayName}}\n    \n  \n\n  \n  \n    Role\n    \n      Administrator\n    \n  \n\n\n\n\n  Cancel\n  Add\n\n\n    \n\n    \n                \n                    ./add-project-member-dialog.component.scss\n                \n                .dialog-content {\n  min-height: 400px;\n  min-width: 400px;\n  max-width: 600px;\n}\n.actions {\n  float:right\n}\n.stretch {\n  width: 100%;\n}\n\n.mat-success {\n  background-color: green;\n  color: #fff;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Add Project Member              {{user.displayName}}              Role          Administrator        Cancel  Add'\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'AddProjectMemberDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matIconRegistry\n                                                  \n                                                        \n                                                                    MatIconRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        domSanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Gropius'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {MatIconRegistry} from '@angular/material/icon';\nimport {DomSanitizer} from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Gropius';\n\n  constructor(private matIconRegistry: MatIconRegistry,\n              private domSanitizer: DomSanitizer) {\n    const ccimsIcons = {\n      'relation-edge': 'relation-edge.svg',\n      'resize-corner': 'resize-corner.svg'\n    };\n\n    for (const [key, value] of Object.entries(ccimsIcons)) {\n      console.log('register', key, 'as', '../assets/icons/svg/' + value );\n      this.matIconRegistry.addSvgIcon(key, this.domSanitizer.bypassSecurityTrustResourceUrl('../assets/icons/svg/' + value));\n    }\n\n    // add all issue icons\n    for (const type of ['normal', 'assigned']) {\n      for (const category of ['bug', 'feature', 'uncategorized']) {\n        for (const isClosed of [false, true]) {\n          for (const edgeType of [null, 'in', 'out', 'inout']) {\n            const assetUrl = [\n              '../assets/icons/issues/', type, '/', category, isClosed ? '-closed' : null, edgeType && '-', edgeType, '.svg'\n            ].filter(part => !!part).join('');\n            const iconName = [\n              'issue', type === 'assigned' ? 'assigned' : null, category, isClosed ? 'closed' : null, edgeType\n            ].filter(part => !!part).join('-');\n            this.matIconRegistry.addSvgIcon(iconName, this.domSanitizer.bypassSecurityTrustResourceUrl(assetUrl));\n          }\n        }\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAccessTokenDialogComponent\n\nAccessTokenDialogComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccessTokenDialogComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommentComponent\n\nCommentComponent\n\nAppModule -->\n\nCommentComponent->AppModule\n\n\n\n\n\nComponentContextMenuComponent\n\nComponentContextMenuComponent\n\nAppModule -->\n\nComponentContextMenuComponent->AppModule\n\n\n\n\n\nCreateComponentDialogComponent\n\nCreateComponentDialogComponent\n\nAppModule -->\n\nCreateComponentDialogComponent->AppModule\n\n\n\n\n\nCreateEditLabelDialogComponent\n\nCreateEditLabelDialogComponent\n\nAppModule -->\n\nCreateEditLabelDialogComponent->AppModule\n\n\n\n\n\nCreateInterfaceDialogComponent\n\nCreateInterfaceDialogComponent\n\nAppModule -->\n\nCreateInterfaceDialogComponent->AppModule\n\n\n\n\n\nCreateIssueDialogComponent\n\nCreateIssueDialogComponent\n\nAppModule -->\n\nCreateIssueDialogComponent->AppModule\n\n\n\n\n\nCreateProjectDialogComponent\n\nCreateProjectDialogComponent\n\nAppModule -->\n\nCreateProjectDialogComponent->AppModule\n\n\n\n\n\nFrameComponent\n\nFrameComponent\n\nAppModule -->\n\nFrameComponent->AppModule\n\n\n\n\n\nIssueContentsComponent\n\nIssueContentsComponent\n\nAppModule -->\n\nIssueContentsComponent->AppModule\n\n\n\n\n\nIssueDetailComponent\n\nIssueDetailComponent\n\nAppModule -->\n\nIssueDetailComponent->AppModule\n\n\n\n\n\nLinkedIssueItemComponent\n\nLinkedIssueItemComponent\n\nAppModule -->\n\nLinkedIssueItemComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMarkdownEditorComponent\n\nMarkdownEditorComponent\n\nAppModule -->\n\nMarkdownEditorComponent->AppModule\n\n\n\n\n\nMarkdownPreviewComponent\n\nMarkdownPreviewComponent\n\nAppModule -->\n\nMarkdownPreviewComponent->AppModule\n\n\n\n\n\nNodeDetailsComponent\n\nNodeDetailsComponent\n\nAppModule -->\n\nNodeDetailsComponent->AppModule\n\n\n\n\n\nNodeDetailsPageComponent\n\nNodeDetailsPageComponent\n\nAppModule -->\n\nNodeDetailsPageComponent->AppModule\n\n\n\n\n\nProfileSettingsDialogComponent\n\nProfileSettingsDialogComponent\n\nAppModule -->\n\nProfileSettingsDialogComponent->AppModule\n\n\n\n\n\nProjectListComponent\n\nProjectListComponent\n\nAppModule -->\n\nProjectListComponent->AppModule\n\n\n\n\n\nProjectOverviewComponent\n\nProjectOverviewComponent\n\nAppModule -->\n\nProjectOverviewComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nRemoveDialogComponent\n\nRemoveDialogComponent\n\nAppModule -->\n\nRemoveDialogComponent->AppModule\n\n\n\n\n\nRemoveProjectMemberComponentComponent\n\nRemoveProjectMemberComponentComponent\n\nAppModule -->\n\nRemoveProjectMemberComponentComponent->AppModule\n\n\n\n\n\nSettingsDialogComponent\n\nSettingsDialogComponent\n\nAppModule -->\n\nSettingsDialogComponent->AppModule\n\n\n\n\n\nSideNavComponent\n\nSideNavComponent\n\nAppModule -->\n\nSideNavComponent->AppModule\n\n\n\n\n\nTextDisplayComponent\n\nTextDisplayComponent\n\nAppModule -->\n\nTextDisplayComponent->AppModule\n\n\n\n\n\nTimelineCoalescedItemsDirective\n\nTimelineCoalescedItemsDirective\n\nAppModule -->\n\nTimelineCoalescedItemsDirective->AppModule\n\n\n\n\n\nTimelineComponent\n\nTimelineComponent\n\nAppModule -->\n\nTimelineComponent->AppModule\n\n\n\n\n\nTimelineItemComponent\n\nTimelineItemComponent\n\nAppModule -->\n\nTimelineItemComponent->AppModule\n\n\n\n\n\nTimelineItemDeletedDirective\n\nTimelineItemDeletedDirective\n\nAppModule -->\n\nTimelineItemDeletedDirective->AppModule\n\n\n\n\n\nTimelineSingleItemDirective\n\nTimelineSingleItemDirective\n\nAppModule -->\n\nTimelineSingleItemDirective->AppModule\n\n\n\n\n\nTopToolbarComponent\n\nTopToolbarComponent\n\nAppModule -->\n\nTopToolbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGraphQLModule\n\nGraphQLModule\n\nAppModule -->\n\nGraphQLModule->AppModule\n\n\n\n\n\nGraphsModule\n\nGraphsModule\n\nAppModule -->\n\nGraphsModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccessTokenDialogComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            CommentComponent\n                        \n                        \n                            ComponentContextMenuComponent\n                        \n                        \n                            CreateComponentDialogComponent\n                        \n                        \n                            CreateEditLabelDialogComponent\n                        \n                        \n                            CreateInterfaceDialogComponent\n                        \n                        \n                            CreateIssueDialogComponent\n                        \n                        \n                            CreateProjectDialogComponent\n                        \n                        \n                            FrameComponent\n                        \n                        \n                            IssueContentsComponent\n                        \n                        \n                            IssueDetailComponent\n                        \n                        \n                            LinkedIssueItemComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            MarkdownEditorComponent\n                        \n                        \n                            MarkdownPreviewComponent\n                        \n                        \n                            NodeDetailsComponent\n                        \n                        \n                            NodeDetailsPageComponent\n                        \n                        \n                            ProfileSettingsDialogComponent\n                        \n                        \n                            ProjectListComponent\n                        \n                        \n                            ProjectOverviewComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            RemoveDialogComponent\n                        \n                        \n                            RemoveProjectMemberComponentComponent\n                        \n                        \n                            SettingsDialogComponent\n                        \n                        \n                            SideNavComponent\n                        \n                        \n                            TextDisplayComponent\n                        \n                        \n                            TimelineCoalescedItemsDirective\n                        \n                        \n                            TimelineComponent\n                        \n                        \n                            TimelineItemComponent\n                        \n                        \n                            TimelineItemDeletedDirective\n                        \n                        \n                            TimelineSingleItemDirective\n                        \n                        \n                            TopToolbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            GraphQLModule\n                        \n                        \n                            GraphsModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {BrowserModule} from '@angular/platform-browser';\nimport {CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {LayoutModule} from '@angular/cdk/layout';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatListModule} from '@angular/material/list';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {ProjectListComponent} from './project-list-component/project-list.component';\nimport {ProjectOverviewComponent} from './project-overview/project-overview.component';\nimport {TopToolbarComponent} from './top-toolbar/top-toolbar.component';\nimport {SideNavComponent} from './side-nav/side-nav.component';\nimport {GraphQLModule} from './graphql.module';\nimport {HttpClientModule} from '@angular/common/http';\nimport {IssueDetailComponent} from './issue-detail/issue-detail.component';\nimport {GraphsModule} from './graphs/graphs.module';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NZ_ICONS} from 'ng-zorro-antd/icon';\nimport {en_US, NZ_I18N} from 'ng-zorro-antd/i18n';\nimport {NgZorroAntdModule} from 'ng-zorro-antd';\nimport * as AllIcons from '@ant-design/icons-angular/icons';\nimport {IconDefinition} from '@ant-design/icons-angular';\nimport {CommonModule, registerLocaleData} from '@angular/common';\nimport en from '@angular/common/locales/en';\nimport {LoginComponent} from './login/login.component';\nimport {FrameComponent} from './frame/frame.component';\nimport {RegisterComponent} from './register/register.component';\nimport {CreateProjectDialogComponent} from 'src/app/dialogs/create-project-dialog/create-project-dialog.component';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {GlobalConfig, ToastrModule} from 'ngx-toastr';\nimport {RemoveDialogComponent} from './dialogs/remove-dialog/remove-dialog.component';\nimport {CreateComponentDialogComponent} from './dialogs/create-component-dialog/create-component-dialog.component';\nimport {CreateInterfaceDialogComponent} from './dialogs/create-interface-dialog/create-interface-dialog.component';\nimport {CreateIssueDialogComponent} from './dialogs/create-issue-dialog/create-issue-dialog.component';\nimport {NgSelectModule} from '@ng-select/ng-select';\nimport {NgOptionHighlightModule} from '@ng-select/ng-option-highlight';\nimport {ColorPickerModule} from 'ngx-color-picker';\nimport {CreateEditLabelDialogComponent} from '@app/dialogs/create-label-dialog/create-edit-label-dialog.component';\nimport {RemoveProjectMemberComponentComponent} from './dialogs/remove-project-member-component/remove-project-member-component.component';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ComponentContextMenuComponent} from '@app/graphs/component-context-menu/component-context-menu.component';\nimport {NodeDetailsComponent} from '@app/node-details/node-details.component';\nimport {MonacoEditorModule} from 'ngx-monaco-editor';\nimport {MarkdownEditorComponent} from './markdown/markdown-editor/markdown-editor.component';\nimport {MarkdownModule} from 'ngx-markdown';\nimport {MarkdownPreviewComponent} from './markdown/markdown-preview/markdown-preview.component';\nimport {TimelineComponent} from './issue-detail/timeline/timeline.component';\nimport {CommentComponent} from './issue-detail/comment/comment.component';\nimport {NodeDetailsPageComponent} from '@app/node-details-page/node-details-page.component';\nimport {TextDisplayComponent} from '@app/text-display/text-display.component';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {IssueContentsComponent} from '@app/issue-detail/issue-contents.component';\nimport {LinkedIssueItemComponent} from '@app/issue-detail/linked-issue-item.component';\nimport {SettingsDialogComponent} from '@app/dialogs/settings-dialog/settings-dialog.component';\nimport {ProfileSettingsDialogComponent} from './dialogs/profile-settings-dialog/profile-settings-dialog.component';\nimport {AccessTokenDialogComponent} from './dialogs/access-token-dialog/access-token-dialog.component';\nimport {\n  TimelineCoalescedItemsDirective,\n  TimelineItemComponent,\n  TimelineItemDeletedDirective,\n  TimelineSingleItemDirective\n} from '@app/issue-detail/timeline/coalesced/timeline-item.component';\n\nregisterLocaleData(en);\nconst antDesignIcons = AllIcons as {\n  [key: string]: IconDefinition;\n};\nconst icons: IconDefinition[] = Object.keys(antDesignIcons).map(key => antDesignIcons[key]);\n\n// configuration for toasts, the toastrservice is configured in graphql.module.ts\nconst toasterConfig: Partial = {\n  maxOpened: 4,\n  autoDismiss: true\n};\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProjectListComponent,\n    ProjectOverviewComponent,\n    TopToolbarComponent,\n    SideNavComponent,\n    IssueDetailComponent,\n    LoginComponent,\n    FrameComponent,\n    RegisterComponent,\n    CreateProjectDialogComponent,\n    RemoveDialogComponent,\n    CreateComponentDialogComponent,\n    CreateInterfaceDialogComponent,\n    CreateIssueDialogComponent,\n    CreateEditLabelDialogComponent,\n    RemoveProjectMemberComponentComponent,\n    ComponentContextMenuComponent,\n    NodeDetailsComponent,\n    NodeDetailsPageComponent,\n    MarkdownEditorComponent,\n    MarkdownPreviewComponent,\n    TimelineComponent,\n    CommentComponent,\n    TextDisplayComponent,\n    IssueContentsComponent,\n    LinkedIssueItemComponent,\n    SettingsDialogComponent,\n    ProfileSettingsDialogComponent,\n    AccessTokenDialogComponent,\n    TimelineItemComponent,\n    TimelineSingleItemDirective,\n    TimelineCoalescedItemsDirective,\n    TimelineItemDeletedDirective\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(toasterConfig),\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatInputModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    MatTabsModule,\n    MatSlideToggleModule,\n    GraphQLModule,\n    HttpClientModule,\n    GraphsModule,\n    MatDialogModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgZorroAntdModule,\n    NgSelectModule,\n    CommonModule,\n    NgOptionHighlightModule,\n    ColorPickerModule,\n    MatExpansionModule,\n    PortalModule,\n    MonacoEditorModule.forRoot(),\n    MarkdownModule.forRoot(),\n    MatButtonToggleModule\n  ],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n  ],\n  providers: [{provide: NZ_I18N, useValue: en_US}, {provide: NZ_ICONS, useValue: icons}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProjectListComponent } from './project-list-component/project-list.component';\nimport { ProjectOverviewComponent } from './project-overview/project-overview.component';\nimport { IssueDetailComponent } from './issue-detail/issue-detail.component';\nimport { IssueGraphControlsComponent } from './graphs/issue-graph-controls/issue-graph-controls.component';\nimport { LoginComponent } from './login/login.component';\nimport { FrameComponent } from './frame/frame.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { RegisterComponent } from './register/register.component';\nimport { ProjectIssueListComponent } from './project-issue-list/project-issue-list.component';\nimport { ProjectMembersComponent } from './project-members/project-members.component';\nimport {NodeDetailsPageComponent} from '@app/node-details-page/node-details-page.component';\n\n\nconst routes: Routes = [\n  {\n    path: '', component: FrameComponent, canActivate: [AuthGuard],\n    children: [\n      { path: '', redirectTo: 'projects', pathMatch: 'full' },\n      { path: 'projects', component: ProjectListComponent },\n      {\n        path: 'projects/:id',\n        children: [\n          { path: '', pathMatch: 'full', component: ProjectOverviewComponent },\n          { path: 'graph', component: IssueGraphControlsComponent },\n          {\n            path: 'issues',\n            children: [\n              { path: '', pathMatch: 'full', component: ProjectIssueListComponent },\n              { path: ':issueId', pathMatch: 'full', component: IssueDetailComponent },\n            ]\n          },\n          { path: 'members', component: ProjectMembersComponent },\n          {\n            path: 'component/:componentId',\n            children: [\n              { path: '', pathMatch: 'full', component: NodeDetailsPageComponent},\n              {\n                path: 'interface/:interfaceId',\n                children: [\n                  { path: '', pathMatch: 'full', component: NodeDetailsPageComponent},\n                  { path: 'component/:componentId/issue/:issueId', pathMatch: 'full', component: IssueDetailComponent }\n                ]\n              },\n            ]\n          },\n          {\n            path: 'interface/:interfaceId',\n            children: [\n              { path: '', pathMatch: 'full', component: NodeDetailsPageComponent},\n            ]\n          }\n        ]\n      },\n      { path: 'issue', component: IssueDetailComponent },\n    ],\n  },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  // otherwise redirect to home\n  { path: '**', redirectTo: '' }\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            project\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        project\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        project:     GetBasicProjectQuery\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     GetBasicProjectQuery\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {NavigationEnd, PRIMARY_OUTLET, Router} from '@angular/router';\nimport {ReplaySubject} from 'rxjs';\nimport {filter, switchMap} from 'rxjs/operators';\nimport {GetBasicProjectQuery} from 'src/generated/graphql';\nimport {ProjectStoreService} from './data/project/project-store.service';\n\n/**\n * This service exposes an observable of the name and id of the current project.\n * It determines the current project by listening for url changes and parsing the url.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateService {\n  state: AppState = {};\n  state$ = new ReplaySubject(1);\n\n  constructor(private router: Router, private ps: ProjectStoreService) {\n    this.syncStateWithUrl(router, ps);\n  }\n\n  /**\n   * Sets up two mutually exclusive (look at filter) subscriptions to track whether we are at a\n   * url referring to a project or not. If we are at a project we retrieve information about it\n   * from the backend and make it available in the state observable\n   *\n   * @param router allows to listen for routing events\n   * @param ps\n   */\n  syncStateWithUrl(router: Router, ps: ProjectStoreService) {\n    router.events.pipe(\n      filter(event => (event instanceof NavigationEnd && this.isProjectURL(event.url))),\n      switchMap((event: NavigationEnd) =>\n        ps.getBasicProject(this.router.parseUrl(event.url).root?.children[PRIMARY_OUTLET].segments[1].path)\n      )\n    ).subscribe(project => {\n      this.state.project = project;\n      this.state$.next(this.state);\n    });\n    // set project to null if new url is not specific to a project\n    router.events.pipe(\n      filter(event => (event instanceof NavigationEnd && !this.isProjectURL(event.url))),\n    ).subscribe(_ => {\n      this.state.project = null;\n      this.state$.next(this.state);\n    });\n  }\n\n  /**\n   * Caution:\n   * If you change the routing you might have to change this function too.\n   * That is if it has the form 'projects/:id' + further stuff.\n   * @param url\n   * @returns true iff url is a route pertaining to a project\n   */\n  private isProjectURL(url: string): boolean {\n    const tree = this.router.parseUrl(url);\n    const primary = tree.root.children[PRIMARY_OUTLET];\n    if (primary) {\n      const primarySegments = primary.segments;\n      return (primarySegments[0].path === 'projects' && primary.segments.length >= 2);\n    }\n    return false;\n  }\n}\n\nexport interface AppState {\n  project?: GetBasicProjectQuery;\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/auth.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    AuthGuard is responsible for navigating the user to /login when he is not\ncurrently logged in according to the AuthenticationsService. It's canActivate\nmethod is automatically invoked by angular on routing events.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.guard.ts:22\n                \n            \n\n\n            \n                \n                    Redirects user to login if he is not authenticated.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        unused but required for CanActivate signature\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        router state when guard was invoked, used to redirect the user after login\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true iff the user is logged in according to the AuthenticationService\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\n\n/** AuthGuard is responsible for navigating the user to /login when he is not\n * currently logged in according to the AuthenticationsService. It's canActivate\n * method is automatically invoked by angular on routing events.\n */\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) { }\n\n    /**\n     * Redirects user to login if he is not authenticated.\n     * @param route unused but required for CanActivate signature\n     * @param state router state when guard was invoked, used to redirect the user after login\n     * @returns true iff the user is logged in according to the AuthenticationService\n     */\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const currentUser = this.authenticationService.currentUserValue;\n        if (currentUser) {\n            // logged in so return true\n            return true;\n        }\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n        return false;\n    }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/authentication.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Responsible for saving user name, id and jwt token in localstorage\nand exposing the name and id through currentUserSubject\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentUser\n                            \n                            \n                                    Private\n                                currentUserSubject\n                            \n                            \n                                    Readonly\n                                userStorageKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchUserFromStorage\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                saveUserToStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    currentUserValue\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/authentication.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchUserFromStorage\n                        \n                    \n                \n            \n            \n                \nfetchUserFromStorage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/authentication.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         User\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/authentication.service.ts:43\n                \n            \n\n\n            \n                \n                    If login is sucessfull save the user name, id and jwt token to local storage and expose the name and id\nthrough currentUserSubject. If the login fails the returned observable errors.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        provided by user to LoginComponent\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        provided by user to LoginComponent\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        the logged in user, errors if login is not successful\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/authentication.service.ts:59\n                \n            \n\n\n            \n                \n                    remove user from local storage and set subject holding the current user to null\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveUserToStorage\n                        \n                    \n                \n            \n            \n                \nsaveUserToStorage(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/authentication.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/authentication.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentUserSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/authentication.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        userStorageKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'currentUser'\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/authentication.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentUserValue\n                    \n                \n\n                \n                    \n                        getcurrentUserValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/authentication.service.ts:24\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {environment} from '@environments/environment';\nimport {Router} from '@angular/router';\nimport {map} from 'rxjs/operators';\n\n/**\n * Responsible for saving user name, id and jwt token in localstorage\n * and exposing the name and id through currentUserSubject\n */\n@Injectable({providedIn: 'root'})\nexport class AuthenticationService {\n\n  readonly userStorageKey = 'currentUser';\n  private currentUserSubject: BehaviorSubject;\n  public currentUser: Observable;\n\n  constructor(private http: HttpClient, private router: Router) {\n    this.currentUserSubject = new BehaviorSubject(this.fetchUserFromStorage());\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): User {\n    return this.currentUserSubject.value;\n  }\n\n  fetchUserFromStorage(): User {\n    return JSON.parse(localStorage.getItem(this.userStorageKey));\n  }\n\n  saveUserToStorage(user: User): void {\n    localStorage.setItem(this.userStorageKey, JSON.stringify(user));\n  }\n\n  /**\n   * If login is sucessfull save the user name, id and jwt token to local storage and expose the name and id\n   * through currentUserSubject. If the login fails the returned observable errors.\n   * @param username provided by user to LoginComponent\n   * @param password provided by user to LoginComponent\n   * @returns the logged in user, errors if login is not successful\n   */\n  login(username: string, password: string): Observable {\n    return this.http.post(environment.loginUrl, {username, password})\n      .pipe(map(response => {\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        localStorage.setItem('token', response.token);\n        const tokenPayload = JSON.parse(atob(response.token.split('.')[1]));\n        const user = {name: tokenPayload.name, id: tokenPayload.sub};\n        this.saveUserToStorage(user);\n        this.currentUserSubject.next(user);\n        return user;\n      }));\n  }\n\n  /**\n   * remove user from local storage and set subject holding the current user to null\n   */\n  logout() {\n    localStorage.removeItem('currentUser');\n    localStorage.removeItem('token');\n    this.router.navigate(['login']);\n    this.currentUserSubject.next(null);\n  }\n}\n\ninterface User {\n  name: string;\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CCIMSValidators.html":{"url":"classes/CCIMSValidators.html","title":"class - CCIMSValidators","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CCIMSValidators\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/validators.ts\n        \n\n\n            \n                Description\n            \n            \n                This class provides commonly used validators in CCIMS usable for e.g. input fields\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                contentValidator\n                            \n                            \n                                    Static\n                                    Readonly\n                                nameFormatValidator\n                            \n                            \n                                    Static\n                                    Readonly\n                                nameValidator\n                            \n                            \n                                    Static\n                                    Readonly\n                                urlValidator\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        contentValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Validators.maxLength(655536)\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/validators.ts:30\n                        \n                    \n\n            \n                \n                    Ensures that the text has the appropriate length for content\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        nameFormatValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Validators.compose([\n    CCIMSValidators.nameValidator,\n    Validators.pattern('([^ ]+ )*([^ ]+)+')\n  ])\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/validators.ts:16\n                        \n                    \n\n            \n                \n                    Ensures that the text is both usable as a name (#nameValidator) and that the text does not start/end with\na whitespace (white-spaces in the name are allowed)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        nameValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Validators.maxLength(256)\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/validators.ts:10\n                        \n                    \n\n            \n                \n                    Ensures that text has the appropriate length to be used as a name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        urlValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Validators.maxLength(655536)\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/validators.ts:25\n                        \n                    \n\n            \n                \n                    Ensures that the provided text has the correct length and the correct format for an URL\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Validators} from '@angular/forms';\n\n/**\n * This class provides commonly used validators in CCIMS usable for e.g. input fields\n */\nexport class CCIMSValidators {\n  /**\n   * Ensures that text has the appropriate length to be used as a name\n   */\n  static readonly nameValidator = Validators.maxLength(256);\n\n  /**\n   * Ensures that the text is both usable as a name ({@link #nameValidator}) and that the text does not start/end with\n   * a whitespace (white-spaces in the name are allowed)\n   */\n  static readonly nameFormatValidator = Validators.compose([\n    CCIMSValidators.nameValidator,\n    Validators.pattern('([^ ]+ )*([^ ]+)+')\n  ]);\n\n  /**\n   * Ensures that the provided text has the correct length and the correct format for an URL\n   */\n  // TODO: Verify URL pattern, leaving this out for now for quicker testing\n  static readonly urlValidator = Validators.maxLength(655536);\n\n  /**\n   * Ensures that the text has the appropriate length for content\n   */\n  static readonly contentValidator = Validators.maxLength(655536);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CacheNodeComponent.html":{"url":"components/CacheNodeComponent.html","title":"component - CacheNodeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CacheNodeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/cache-node.component.ts\n\n\n\n    \n        Description\n    \n    \n        Loads data for a node from the cache or from the API.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                [cache-node]\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                itemTemplate\n                            \n                            \n                                node$\n                            \n                            \n                                nodeSub\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lazy\n                            \n                            \n                                node\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/cache-node.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        lazy\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/cache-node.component.ts:20\n                            \n                        \n                \n                    \n                        If true, this component will subscribe to the node lazily (i.e. it will not fetch new data if data is cached already)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        node\n                    \n                \n                \n                    \n                        Type :         NodeId\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/cache-node.component.ts:18\n                            \n                        \n                \n                    \n                        The node that will be loaded.\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        itemTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(ItemDirective, {read: TemplateRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/cache-node.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        node$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataNode<>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/cache-node.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nodeSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/cache-node.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ContentChild, Input, OnDestroy, OnInit, TemplateRef } from '@angular/core';\nimport { ItemDirective } from '@app/components/item.directive';\nimport DataService from '@app/data-dgql';\nimport { NodeId } from '@app/data-dgql/id';\nimport { DataNode } from '@app/data-dgql/query';\nimport { Subscription } from 'rxjs';\n\n/**\n * Loads data for a node from the cache or from the API.\n */\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: '[cache-node]',\n  template: ''\n})\nexport class CacheNodeComponent implements OnInit, OnDestroy {\n  /** The node that will be loaded. */\n  @Input() node: NodeId;\n  /** If true, this component will subscribe to the node lazily (i.e. it will not fetch new data if data is cached already) */\n  @Input() lazy = true;\n  @ContentChild(ItemDirective, { read: TemplateRef }) itemTemplate;\n\n  node$: DataNode;\n  nodeSub: Subscription;\n\n  constructor(private dataService: DataService) {}\n\n  ngOnInit() {\n    this.node$ = this.dataService.getNode(this.node);\n    this.nodeSub = this.lazy ? this.node$.subscribeLazy() : this.node$.subscribe();\n  }\n  ngOnDestroy() {\n    this.nodeSub.unsubscribe();\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'CacheNodeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoalescedTimelineItem.html":{"url":"interfaces/CoalescedTimelineItem.html","title":"interface - CoalescedTimelineItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoalescedTimelineItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/issue-detail/timeline/timeline.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This interface may contain in contrast to a normal timeline item several events in one item.\nTimeline items are coalesced because they are performed in close succession.\nlabel 1 and label 2 are added to an issue at the same time.\nInstead of representing them as to individual items/events, they will be represented as one item in the timeline.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isCoalesced\n                                        \n                                \n                                \n                                        \n                                            item\n                                        \n                                \n                                \n                                        \n                                            time\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isCoalesced\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isCoalesced:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        item:     Array | IssueTimelineItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array | IssueTimelineItem\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {AfterViewInit, Component, Input, ViewChild} from '@angular/core';\nimport {TimeFormatter} from '@app/issue-detail/TimeFormatter';\nimport {Router} from '@angular/router';\nimport {IssueTimelineItem} from '../../../generated/graphql-dgql';\nimport {DataList} from '@app/data-dgql/query';\nimport DataService from '@app/data-dgql';\nimport {ListType, NodeId, NodeType} from '@app/data-dgql/id';\nimport {QueryComponent} from '@app/utils/query-component/query.component';\n\n/**\n * This interface may contain in contrast to a normal timeline item several events in one item.\n * Timeline items are coalesced because they are performed in close succession.\n * @example\n * label 1 and label 2 are added to an issue at the same time.\n * Instead of representing them as to individual items/events, they will be represented as one item in the timeline.\n */\nexport interface CoalescedTimelineItem {\n  user: string;\n  type: string;\n  isCoalesced: boolean;\n  item: Array | IssueTimelineItem;\n  time: string;\n}\n\n\ntype ItemFilterFunction = (IssueTimelineItem) => boolean;\n\n/**\n * This component shows the full timeline\n * with all its timeline events for a given issue.\n */\n@Component({\n  selector: 'app-timeline',\n  templateUrl: './timeline.component.html',\n  styleUrls: ['./timeline.component.scss']\n})\nexport class TimelineComponent implements AfterViewInit {\n  /**\n   * Events which need to be coalesced\n   */\n  static readonly COALESCABLE_EVENTS: Map = new Map([\n      ['LabelledEvent', (item) => {\n        return !!item.label;\n      }],\n      ['UnlabelledEvent', (item) => {\n        return !!item.removedLabel;\n      }],\n      ['AddedToComponentEvent', (item) => {\n        return !!item.component;\n      }],\n      ['RemovedFromComponentEvent', (item) => {\n        return !!item.removedComponent;\n      }],\n      ['AddedToLocationEvent', (item) => {\n        return !!item.location;\n      }],\n      ['RemovedFromLocationEvent', (item) => {\n        return !!item.removedLocation;\n      }],\n      ['LinkEvent', (item) => {\n        return !!item.linkedIssue;\n      }],\n      ['UnlinkEvent', (item) => {\n        return !!item.removedLinkedIssue;\n      }]\n    ]\n  );\n\n  /**\n   * provides functionality for time formatting for correct representation\n   */\n  public timeFormatter = new TimeFormatter();\n  /**\n   * Already coalesced items for timeline representation\n   */\n  timelineItems: Array = [];\n  /**\n   * Subscription for timelineitems\n   */\n  public timelineItems$: DataList;\n  /**\n   * The id of the corresponding issue for which the timeline is shown\n   */\n  @Input() issueId: string;\n  /**\n   * The id of the project in which the issue is listed\n   */\n  @Input() projectID: string;\n  /**\n   * Component which is handling the query to the server\n   */\n  @ViewChild(QueryComponent) query: QueryComponent;\n\n  /**\n   * Service for handling API connection is required\n   * @param {DataService} dataService handling api connection\n   */\n  constructor(private dataService: DataService) {\n  }\n\n  ngAfterViewInit(): void {\n    this.requestTimelineItems();\n  }\n\n  /**\n   * Retrieves all timeline items (aka. timeline events) for the current issue.\n   * Use in ngAfterViewInit() lifecycle hook\n   */\n  requestTimelineItems(): void {\n\n    // gets an observable with all timeline items for thecurrent issue\n    this.timelineItems$ = this.dataService.getList({\n      node: {type: NodeType.Issue, id: this.issueId},\n      type: ListType.TimelineItems\n    });\n\n    //FIXME: decide on the count\n    this.timelineItems$.count = 99999;\n\n    this.query.listenTo(this.timelineItems$, value => {\n      this.prepareTimelineItems(value);\n    });\n  }\n\n  /**\n   * Prepares the timeline items (aka. the timeline events).\n   * @param  {Map} items - Timeline items to prepare.\n   */\n  prepareTimelineItems(items: Map): void {\n\n    let coalescingType = null;\n    let coalesceList = new Array();\n    let coalesced: Array = [];\n\n    /**\n     * Adds items from the coalesce list {@link coalesceList}\n     * to a list containing all coalesced timeline items {@link coalesced}\n     * in case the coalesce list is not empty.\n     */\n    const finishCoalescing = () => {\n\n      // case: the coalesce list is empty\n      if (coalesceList.length === 0) {\n        return;\n      }\n\n      // case: the coalesce list is not empty\n      else {\n        coalesced = this.addCoalesceItems(coalesceList, coalesced);\n        coalesceList = [];\n      }\n    };\n\n    for (const timelineItem of items.values()) {\n      const itemType = (timelineItem as any).__typename;\n      const filter = TimelineComponent.COALESCABLE_EVENTS.get(itemType);\n      let stopCoalescing = false;\n\n      // decides whether to stop coalescing\n      stopCoalescing = this.stopCoalescing(coalescingType, coalesceList, stopCoalescing, timelineItem);\n\n      // case: the coalescing type equals the current item type\n      // or coalescing should stop\n      if (coalescingType !== itemType || stopCoalescing) {\n\n        // adds remaining items\n        finishCoalescing();\n\n        if (filter && filter(timelineItem)) {\n          coalescingType = itemType;\n          coalesceList.push(timelineItem);\n        } else {\n          coalescingType = null;\n          coalesced = this.addSingleCoalesceItem(timelineItem, filter, coalesced);\n        }\n\n        continue;\n      }\n\n      // case: the coalescing type is null\n      else if (coalescingType == null) {\n        coalesced = this.addSingleCoalesceItem(timelineItem, filter, coalesced);\n        continue;\n      }\n\n      if (filter(timelineItem)) {\n        coalesceList.push(timelineItem);\n      }\n    }\n\n    // adds remaining items\n    finishCoalescing();\n    this.timelineItems = coalesced;\n  }\n\n  /**\n   * Returns the name of the user\n   * that created a given timeline item (aka. timeline event)\n   * or just \"Deleted User\" in case the user no longer exists.\n   * @param  {IssueTimelineItem} item - The given timeline item.\n   * @returns - Name of the timeline item creator.\n   */\n  private userName(item: IssueTimelineItem) {\n\n    // case: the timeline item's creator's name can be retrieved\n    if (item.createdBy) {\n      return item.createdBy.displayName;\n    }\n\n    return 'Deleted User';\n  }\n\n  /**\n   * Adds items from a given coalesce list\n   * to a given list containing all coalesced timeline items.\n   * @param  {IssueTimelineItem[]} coalesceList  The given coalesce list.\n   * @param  {CoalescedTimelineItem[]} coalesced  The given list containing all coalesced timeline items.\n   * @returns The given list containing all coalesced timeline items.\n   */\n   private addCoalesceItems(coalesceList: IssueTimelineItem[], coalesced: CoalescedTimelineItem[]): CoalescedTimelineItem[] {\n\n    const firstItem: any = coalesceList[0];\n    const itemType = firstItem.__typename;\n    const createdBy = this.userName(firstItem);\n\n    // case: the coalesce list has more than one item\n    if (coalesceList.length > 1) {\n      coalesced.push({\n        type: itemType,\n        isCoalesced: true,\n        item: coalesceList,\n        user: createdBy,\n        time: coalesceList[0].createdAt\n      });\n    }\n\n    // case: the coalesce list has only one item\n    else if (coalesceList.length === 1) {\n      coalesced.push({\n        type: itemType,\n        isCoalesced: false,\n        item: coalesceList[0],\n        user: createdBy,\n        time: coalesceList[0].createdAt\n      });\n    }\n\n    // returns the list containing all coalesced timeline items\n    return coalesced;\n  }\n\n  /**\n   * Adds a single item to a list containing all coalesced timeline items.\n   * @param  {IssueTimelineItem} timelineItem - The given item.\n   * @param  {ItemFilterFunction|undefined} filter - Filter used on the given item.\n   * @returns The given list containing all coalesced timeline items.\n   */\n   private addSingleCoalesceItem(\n    timelineItem: IssueTimelineItem,\n    filter: ItemFilterFunction | undefined,\n    coalesced: CoalescedTimelineItem[]): CoalescedTimelineItem[] {\n\n      if (!filter || filter(timelineItem)) {\n        coalesced.push({\n          type: (timelineItem as any).__typename,\n          isCoalesced: false,\n          item: timelineItem,\n          user: this.userName(timelineItem),\n          time: timelineItem.createdAt\n        });\n      }\n\n      // returns the list containing all coalesced timeline items\n      return coalesced;\n  }\n\n  /**\n   * Stops the coalescing process in case\n   * a) the user differs or\n   * b) the current item was already added\n   * 60 seconds after the first one added.\n   * @param  {any} coalescingType - Coalescing type handled.\n   * @param  {IssueTimelineItem[]} coalesceList - Coalesce list handled.\n   * @param  {boolean} stopCoalescing - Value that determines whether the coalescing should stop.\n   * @param  {IssueTimelineItem} timelineItem - Timeline item handled.\n   * @returns The value that determines whether the coalescing should stop.\n   */\n   private stopCoalescing(coalescingType: any, coalesceList: IssueTimelineItem[], stopCoalescing: boolean, timelineItem: IssueTimelineItem) {\n\n    if (coalescingType) {\n      const firstItem = coalesceList[0];\n      stopCoalescing = firstItem.createdBy.id !== timelineItem.createdBy.id ||\n        Math.abs(Date.parse(timelineItem.createdAt) - Date.parse(firstItem.createdAt)) > 60000;\n    }\n\n    return stopCoalescing;\n  }\n\n  /**\n   * Checks if the user self-assigned this issue for text representation.\n   * @param assignedEvent - Assigned event handled.\n   */\n  selfAssigned(assignedEvent): boolean {\n\n    if (assignedEvent.createdBy.id === assignedEvent.removedAssignee?.id) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Handles the id for a given node...\n   */\n  makeCommentId(node): NodeId {\n    return {type: NodeType.IssueComment, id: node.id};\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CommentComponent.html":{"url":"components/CommentComponent.html","title":"component - CommentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CommentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-detail/comment/comment.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comment\n            \n\n            \n                styleUrls\n                ./comment.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./comment.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                comment$\n                            \n                            \n                                commentSub\n                            \n                            \n                                    Public\n                                editBody\n                            \n                            \n                                    Public\n                                savingBody\n                            \n                            \n                                    Public\n                                timeFormatter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deleteComment\n                            \n                            \n                                    Public\n                                editComment\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                commentId\n                            \n                            \n                                isIssueBody\n                            \n                            \n                                issueId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, dialog: MatDialog, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-detail/comment/comment.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        commentId\n                    \n                \n                \n                    \n                        Type :         NodeId\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/comment/comment.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isIssueBody\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/comment/comment.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        issueId\n                    \n                \n                \n                    \n                        Type :         NodeId\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/comment/comment.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteComment\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteComment()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/comment/comment.component.ts:66\n                \n            \n\n\n            \n                \n                    Deletes the current comment.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        editComment\n                        \n                    \n                \n            \n            \n                \n                    \n                    editComment(body: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/comment/comment.component.ts:49\n                \n            \n\n\n            \n                \n                    Edits the description of the current comment.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe new description of the current issue.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        comment$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataNode\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/comment/comment.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        commentSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/comment/comment.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        editBody\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/comment/comment.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        savingBody\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/comment/comment.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        timeFormatter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new TimeFormatter()\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/comment/comment.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { IssueComment } from '../../../generated/graphql-dgql';\nimport { TimeFormatter } from '@app/issue-detail/TimeFormatter';\nimport DataService from '@app/data-dgql';\nimport { NodeId } from '@app/data-dgql/id';\nimport { DataNode } from '@app/data-dgql/query';\nimport { Subscription } from 'rxjs';\nimport {RemoveDialogComponent} from '@app/dialogs/remove-dialog/remove-dialog.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\n\n@Component({\n  selector: 'app-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.scss']\n})\n/**\n * This Component contains one comment\n */\nexport class CommentComponent implements OnInit, OnDestroy {\n  public timeFormatter = new TimeFormatter();\n  public editBody = false;\n  public savingBody = false;\n\n  @Input() isIssueBody: boolean;\n  @Input() commentId: NodeId;\n  @Input() issueId: NodeId;\n  comment$: DataNode;\n  commentSub: Subscription;\n\n  constructor(private dataService: DataService,\n              private dialog: MatDialog,\n              private notify: UserNotifyService) {}\n\n  ngOnInit() {\n    this.comment$ = this.dataService.getNode(this.commentId);\n    this.commentSub = this.comment$.subscribeLazy();\n  }\n\n  ngOnDestroy() {\n    this.commentSub?.unsubscribe();\n  }\n\n  /**\n   * Edits the description of the current comment.\n   *\n   * @param body - The new description of the current issue.\n   */\n  public editComment(body: string): void {\n    this.savingBody = true;\n    this.dataService.mutations.updateIssueComment(\n      Math.random().toString(),\n      this.commentId,\n      body\n    ).then(() => {\n      // only exit if successful\n      this.editBody = false;\n    }).finally(() => {\n      this.savingBody = false;\n    });\n  }\n\n  /**\n   * Deletes the current comment.\n   */\n  public deleteComment(): void {\n\n    const confirmDeleteDialogRef = this.dialog.open(RemoveDialogComponent,\n      {\n        data: {\n          title: 'Really delete comment ?',\n          messages: ['Are you sure you want to delete this comment ?',\n            'This action cannot be undone!']\n        }\n      });\n\n    confirmDeleteDialogRef.afterClosed().subscribe(del => {\n      if (del) {\n        // User confirmed deletion\n        this.dataService.mutations.deleteIssueComment(\n          Math.random().toString(),\n          this.issueId,\n          this.commentId\n        ).then(() => {\n          this.notify.notifyInfo('Successfully deleted comment');\n        });\n      }\n    },\n      error => this.notify.notifyError('Failed to delete project!', error));\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n      \n         commented\n        \n          {{this.timeFormatter.formatTimeDifference(comment.createdAt)}}\n        \n        \n          &sdot; edited\n          \n            {{this.timeFormatter.formatTimeDifference(comment.lastEditedAt)}}\n          \n        \n      \n\n      \n      \n      \n        Delete\n      \n      \n        Edit\n      \n    \n\n    \n    \n      \n    \n\n    \n    \n      \n      \n\n      \n        \n        Cancel\n        \n        \n          Save\n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./comment.component.scss\n                \n                @import '../issue-contents.component';\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                               commented                  {{this.timeFormatter.formatTimeDifference(comment.createdAt)}}                          ⋅ edited                      {{this.timeFormatter.formatTimeDifference(comment.lastEditedAt)}}                                                  Delete                    Edit                                                                      Cancel                          Save                    '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'CommentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ComponentContextMenuComponent.html":{"url":"components/ComponentContextMenuComponent.html","title":"component - ComponentContextMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ComponentContextMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/graphs/component-context-menu/component-context-menu.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component manages the component context menu as well as its content\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                component-context-menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./component-context-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                height\n                            \n                            \n                                nodeDetailsReady\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                updatePosition\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: ComponentContextMenuData, changeDetector: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:134\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ComponentContextMenuData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:175\n                \n            \n\n\n            \n                \n                    Close the context menu\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePosition\n                        \n                    \n                \n            \n            \n                \nupdatePosition(x: number, y: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:166\n                \n            \n\n\n            \n                \n                    Update the position of the context menu\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The X offset of the top left menu corner relative to the top left corner of the parent\n\n                                    \n                                \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Y offset of the top left menu corner relative to the top left corner of the parent\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ComponentContextMenuData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(COMPONENT_CONTEXT_MENU_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:136\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ComponentContextMenuComponent.LAST_HEIGHT\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:119\n                        \n                    \n\n            \n                \n                    Current height of the dialog\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nodeDetailsReady\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:121\n                        \n                    \n\n            \n                \n                    True if the node details component is loaded\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ComponentContextMenuComponent.LAST_WIDTH\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:117\n                        \n                    \n\n            \n                \n                    Current width of the dialog\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Inject,\n  Injectable,\n  InjectionToken,\n  Injector,\n  OnDestroy,\n  ViewChild\n} from '@angular/core';\nimport {ConnectedPosition, Overlay, OverlayRef} from '@angular/cdk/overlay';\nimport {ComponentPortal, PortalInjector} from '@angular/cdk/portal';\nimport {IssueGraphComponent} from '@app/graphs/issue-graph/issue-graph.component';\nimport {NodeDetailsComponent, NodeDetailsType, NodeUpdatedCallbackFn} from '@app/node-details/node-details.component';\n\n/**\n * Interface specifying the data required for the component context menu.\n * Note that this should not be used directly, instead the ComponentContextMenuService should be used to open a context\n * menu.\n */\ninterface ComponentContextMenuData {\n  /** Reference to the overlay used to display the context menu */\n  overlayRef: OverlayRef;\n  /** The position of the overlay */\n  position: ConnectedPosition;\n  /** The project id string */\n  projectId: string;\n  /** The node id string */\n  nodeId: string;\n  /** The type of node, either interface or component. Controls the content shown in the context menu */\n  type: NodeDetailsType;\n  /** A reference to the issue graph */\n  graph: IssueGraphComponent;\n}\n\nconst COMPONENT_CONTEXT_MENU_DATA = new InjectionToken('COMPONENT_CONTEXT_MENU_DATA');\n\n/**\n * Use this service to create a {@link ComponentContextMenuComponent}.\n */\n@Injectable({providedIn: 'root'})\nexport class ComponentContextMenuService {\n  constructor(private overlay: Overlay, private injector: Injector) {\n  }\n\n  /**\n   * Open a new component context menu\n   * @param parent The parent of the context menu\n   * @param x The X position relative to the top left corner of the parent\n   * @param y The Y position relative to the top left corner of the parent\n   * @param projectID The id of the project the node belongs to\n   * @param nodeID The id of the node\n   * @param nodeType The type of the node\n   * @param issueGraph A reference to the issue graph\n   * @return A reference to the context menu\n   */\n  open(parent: Element,\n       x: number, y: number,\n       projectID: string,\n       nodeID: string,\n       nodeType: NodeDetailsType,\n       issueGraph: IssueGraphComponent): ComponentContextMenuComponent {\n    const position = this.overlay.position().flexibleConnectedTo(parent);\n    const pos: ConnectedPosition = {\n      originX: 'start',\n      originY: 'top',\n      overlayX: 'start',\n      overlayY: 'top',\n      offsetX: x,\n      offsetY: y\n    };\n    position.withPositions([pos]);\n\n    const ref = this.overlay.create({\n      minWidth: 400,\n      minHeight: 200,\n      positionStrategy: position\n    });\n\n    const map = new WeakMap();\n    map.set(COMPONENT_CONTEXT_MENU_DATA, {\n      overlayRef: ref,\n      position: pos,\n      projectId: projectID,\n      nodeId: nodeID,\n      type: nodeType,\n      graph: issueGraph\n    });\n    const injector = new PortalInjector(this.injector, map);\n    return ref.attach(new ComponentPortal(ComponentContextMenuComponent, null, injector)).instance;\n  }\n}\n\n/**\n * This component manages the component context menu as well as its content\n */\n@Component({\n  styleUrls: ['component-context-menu.component.scss'],\n  templateUrl: './component-context-menu.component.html'\n})\nexport class ComponentContextMenuComponent implements AfterViewInit, OnDestroy {\n  /** @ignore */\n  private static MIN_WIDTH = 700;\n  /** @ignore */\n  private static MIN_HEIGHT = 400;\n  /** @ignore */\n  private static LAST_WIDTH = ComponentContextMenuComponent.MIN_WIDTH;\n  /** @ignore */\n  private static LAST_HEIGHT = ComponentContextMenuComponent.MIN_HEIGHT;\n  /** @ignore */\n  private resize = false;\n\n  /** Current width of the dialog */\n  width = ComponentContextMenuComponent.LAST_WIDTH;\n  /** Current height of the dialog */\n  height = ComponentContextMenuComponent.LAST_HEIGHT;\n  /** True if the node details component is loaded */\n  nodeDetailsReady: boolean;\n\n  /** @ignore */\n  @ViewChild('frame') frame: ElementRef;\n\n  /** @ignore */\n  @ViewChild('resizeCorner') set resizeCorner(content: ElementRef) {\n    if (content) {\n      content.nativeElement.addEventListener('mousedown', () => this.resize = true);\n    }\n  }\n\n  /** @ignore */\n  @ViewChild(NodeDetailsComponent) nodeDetails: NodeDetailsComponent;\n\n  constructor(@Inject(COMPONENT_CONTEXT_MENU_DATA) public data: ComponentContextMenuData,\n              private changeDetector: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit() {\n    this.frame.nativeElement.style.minWidth = ComponentContextMenuComponent.MIN_WIDTH + 'px';\n    this.frame.nativeElement.style.minHeight = ComponentContextMenuComponent.MIN_HEIGHT + 'px';\n    this.nodeDetailsReady = true;\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy(): void {\n    // TODO: Save in local storage?\n    ComponentContextMenuComponent.LAST_WIDTH = this.width;\n    ComponentContextMenuComponent.LAST_HEIGHT = this.height;\n  }\n\n  /** @ignore */\n  detailsCallback: NodeUpdatedCallbackFn = (nodeDeleted: boolean): void => {\n    this.data.graph.reload();\n    if (nodeDeleted) {\n      this.close();\n    }\n  }\n\n  /**\n   * Update the position of the context menu\n   * @param x The X offset of the top left menu corner relative to the top left corner of the parent\n   * @param y The Y offset of the top left menu corner relative to the top left corner of the parent\n   */\n  updatePosition(x: number, y: number): void {\n    this.data.position.offsetX = x;\n    this.data.position.offsetY = y;\n    this.data.overlayRef.getConfig().positionStrategy.apply();\n  }\n\n  /**\n   * Close the context menu\n   */\n  close(): void {\n    this.data.overlayRef.dispose();\n  }\n\n  /** @ignore */\n  @HostListener('window:mouseup')\n  private onMouseUp() {\n    this.resize = false;\n  }\n  \n  /** @ignore */\n  @HostListener('window:mousemove', ['$event'])\n  private onMouseMove(event: MouseEvent) {\n    if (!this.resize) {\n      return;\n    }\n\n    this.width = Math.max(this.width + event.movementX, ComponentContextMenuComponent.MIN_WIDTH);\n    this.height = Math.max(this.height + event.movementY, ComponentContextMenuComponent.MIN_HEIGHT);\n  }\n}\n\n    \n\n    \n        \n    \n        \n            {{this.nodeDetails.getNodeName()}}\n        \n        \n            \n        \n    \n\n    \n        {{this.data.nodeId}}\n        \n            \n        \n    \n\n\n\n\n    \n\n    \n                \n                    component-context-menu.component.scss\n                \n                @import \"src/styles/variables\";\n\n.frame {\n  padding: 24px;\n  background-color: $background-controls;\n  border-radius: 4px;\n  box-shadow: 0 11px 15px -7px rgb(0 0 0 / 20%), 0 24px 38px 3px rgb(0 0 0 / 14%), 0 9px 46px 8px rgb(0 0 0 / 12%);\n}\n\n.node-title {\n  width: 100%;\n  text-align: center;\n  margin: 0 0 20px;\n}\n\n.container{\n  height: calc(100% - 50px);\n  overflow: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{this.nodeDetails.getNodeName()}}                                                    {{this.data.nodeId}}                                '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'ComponentContextMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentContextMenuData.html":{"url":"interfaces/ComponentContextMenuData.html","title":"interface - ComponentContextMenuData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ComponentContextMenuData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/component-context-menu/component-context-menu.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface specifying the data required for the component context menu.\nNote that this should not be used directly, instead the ComponentContextMenuService should be used to open a context\nmenu.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            graph\n                                        \n                                \n                                \n                                        \n                                            nodeId\n                                        \n                                \n                                \n                                        \n                                            overlayRef\n                                        \n                                \n                                \n                                        \n                                            position\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        graph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        graph:         IssueGraphComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IssueGraphComponent\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A reference to the issue graph\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodeId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nodeId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The node id string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overlayRef\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overlayRef:     OverlayRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OverlayRef\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Reference to the overlay used to display the context menu\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:         ConnectedPosition\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ConnectedPosition\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The position of the overlay\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The project id string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         NodeDetailsType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeDetailsType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of node, either interface or component. Controls the content shown in the context menu\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Inject,\n  Injectable,\n  InjectionToken,\n  Injector,\n  OnDestroy,\n  ViewChild\n} from '@angular/core';\nimport {ConnectedPosition, Overlay, OverlayRef} from '@angular/cdk/overlay';\nimport {ComponentPortal, PortalInjector} from '@angular/cdk/portal';\nimport {IssueGraphComponent} from '@app/graphs/issue-graph/issue-graph.component';\nimport {NodeDetailsComponent, NodeDetailsType, NodeUpdatedCallbackFn} from '@app/node-details/node-details.component';\n\n/**\n * Interface specifying the data required for the component context menu.\n * Note that this should not be used directly, instead the ComponentContextMenuService should be used to open a context\n * menu.\n */\ninterface ComponentContextMenuData {\n  /** Reference to the overlay used to display the context menu */\n  overlayRef: OverlayRef;\n  /** The position of the overlay */\n  position: ConnectedPosition;\n  /** The project id string */\n  projectId: string;\n  /** The node id string */\n  nodeId: string;\n  /** The type of node, either interface or component. Controls the content shown in the context menu */\n  type: NodeDetailsType;\n  /** A reference to the issue graph */\n  graph: IssueGraphComponent;\n}\n\nconst COMPONENT_CONTEXT_MENU_DATA = new InjectionToken('COMPONENT_CONTEXT_MENU_DATA');\n\n/**\n * Use this service to create a {@link ComponentContextMenuComponent}.\n */\n@Injectable({providedIn: 'root'})\nexport class ComponentContextMenuService {\n  constructor(private overlay: Overlay, private injector: Injector) {\n  }\n\n  /**\n   * Open a new component context menu\n   * @param parent The parent of the context menu\n   * @param x The X position relative to the top left corner of the parent\n   * @param y The Y position relative to the top left corner of the parent\n   * @param projectID The id of the project the node belongs to\n   * @param nodeID The id of the node\n   * @param nodeType The type of the node\n   * @param issueGraph A reference to the issue graph\n   * @return A reference to the context menu\n   */\n  open(parent: Element,\n       x: number, y: number,\n       projectID: string,\n       nodeID: string,\n       nodeType: NodeDetailsType,\n       issueGraph: IssueGraphComponent): ComponentContextMenuComponent {\n    const position = this.overlay.position().flexibleConnectedTo(parent);\n    const pos: ConnectedPosition = {\n      originX: 'start',\n      originY: 'top',\n      overlayX: 'start',\n      overlayY: 'top',\n      offsetX: x,\n      offsetY: y\n    };\n    position.withPositions([pos]);\n\n    const ref = this.overlay.create({\n      minWidth: 400,\n      minHeight: 200,\n      positionStrategy: position\n    });\n\n    const map = new WeakMap();\n    map.set(COMPONENT_CONTEXT_MENU_DATA, {\n      overlayRef: ref,\n      position: pos,\n      projectId: projectID,\n      nodeId: nodeID,\n      type: nodeType,\n      graph: issueGraph\n    });\n    const injector = new PortalInjector(this.injector, map);\n    return ref.attach(new ComponentPortal(ComponentContextMenuComponent, null, injector)).instance;\n  }\n}\n\n/**\n * This component manages the component context menu as well as its content\n */\n@Component({\n  styleUrls: ['component-context-menu.component.scss'],\n  templateUrl: './component-context-menu.component.html'\n})\nexport class ComponentContextMenuComponent implements AfterViewInit, OnDestroy {\n  /** @ignore */\n  private static MIN_WIDTH = 700;\n  /** @ignore */\n  private static MIN_HEIGHT = 400;\n  /** @ignore */\n  private static LAST_WIDTH = ComponentContextMenuComponent.MIN_WIDTH;\n  /** @ignore */\n  private static LAST_HEIGHT = ComponentContextMenuComponent.MIN_HEIGHT;\n  /** @ignore */\n  private resize = false;\n\n  /** Current width of the dialog */\n  width = ComponentContextMenuComponent.LAST_WIDTH;\n  /** Current height of the dialog */\n  height = ComponentContextMenuComponent.LAST_HEIGHT;\n  /** True if the node details component is loaded */\n  nodeDetailsReady: boolean;\n\n  /** @ignore */\n  @ViewChild('frame') frame: ElementRef;\n\n  /** @ignore */\n  @ViewChild('resizeCorner') set resizeCorner(content: ElementRef) {\n    if (content) {\n      content.nativeElement.addEventListener('mousedown', () => this.resize = true);\n    }\n  }\n\n  /** @ignore */\n  @ViewChild(NodeDetailsComponent) nodeDetails: NodeDetailsComponent;\n\n  constructor(@Inject(COMPONENT_CONTEXT_MENU_DATA) public data: ComponentContextMenuData,\n              private changeDetector: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit() {\n    this.frame.nativeElement.style.minWidth = ComponentContextMenuComponent.MIN_WIDTH + 'px';\n    this.frame.nativeElement.style.minHeight = ComponentContextMenuComponent.MIN_HEIGHT + 'px';\n    this.nodeDetailsReady = true;\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy(): void {\n    // TODO: Save in local storage?\n    ComponentContextMenuComponent.LAST_WIDTH = this.width;\n    ComponentContextMenuComponent.LAST_HEIGHT = this.height;\n  }\n\n  /** @ignore */\n  detailsCallback: NodeUpdatedCallbackFn = (nodeDeleted: boolean): void => {\n    this.data.graph.reload();\n    if (nodeDeleted) {\n      this.close();\n    }\n  }\n\n  /**\n   * Update the position of the context menu\n   * @param x The X offset of the top left menu corner relative to the top left corner of the parent\n   * @param y The Y offset of the top left menu corner relative to the top left corner of the parent\n   */\n  updatePosition(x: number, y: number): void {\n    this.data.position.offsetX = x;\n    this.data.position.offsetY = y;\n    this.data.overlayRef.getConfig().positionStrategy.apply();\n  }\n\n  /**\n   * Close the context menu\n   */\n  close(): void {\n    this.data.overlayRef.dispose();\n  }\n\n  /** @ignore */\n  @HostListener('window:mouseup')\n  private onMouseUp() {\n    this.resize = false;\n  }\n  \n  /** @ignore */\n  @HostListener('window:mousemove', ['$event'])\n  private onMouseMove(event: MouseEvent) {\n    if (!this.resize) {\n      return;\n    }\n\n    this.width = Math.max(this.width + event.movementX, ComponentContextMenuComponent.MIN_WIDTH);\n    this.height = Math.max(this.height + event.movementY, ComponentContextMenuComponent.MIN_HEIGHT);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ComponentContextMenuService.html":{"url":"injectables/ComponentContextMenuService.html","title":"injectable - ComponentContextMenuService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ComponentContextMenuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/component-context-menu/component-context-menu.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Use this service to create a ComponentContextMenuComponent.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(overlay: Overlay, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        overlay\n                                                  \n                                                        \n                                                                    Overlay\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        open\n                        \n                    \n                \n            \n            \n                \nopen(parent: Element, x: number, y: number, projectID: string, nodeID: string, nodeType: NodeDetailsType, issueGraph: IssueGraphComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:60\n                \n            \n\n\n            \n                \n                    Open a new component context menu\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    parent\n                                    \n                                            Element\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The parent of the context menu\n\n                                    \n                                \n                                \n                                    x\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The X position relative to the top left corner of the parent\n\n                                    \n                                \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Y position relative to the top left corner of the parent\n\n                                    \n                                \n                                \n                                    projectID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id of the project the node belongs to\n\n                                    \n                                \n                                \n                                    nodeID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id of the node\n\n                                    \n                                \n                                \n                                    nodeType\n                                    \n                                                NodeDetailsType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The type of the node\n\n                                    \n                                \n                                \n                                    issueGraph\n                                    \n                                                IssueGraphComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A reference to the issue graph\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ComponentContextMenuComponent\n\n                    \n                    \n                        A reference to the context menu\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Inject,\n  Injectable,\n  InjectionToken,\n  Injector,\n  OnDestroy,\n  ViewChild\n} from '@angular/core';\nimport {ConnectedPosition, Overlay, OverlayRef} from '@angular/cdk/overlay';\nimport {ComponentPortal, PortalInjector} from '@angular/cdk/portal';\nimport {IssueGraphComponent} from '@app/graphs/issue-graph/issue-graph.component';\nimport {NodeDetailsComponent, NodeDetailsType, NodeUpdatedCallbackFn} from '@app/node-details/node-details.component';\n\n/**\n * Interface specifying the data required for the component context menu.\n * Note that this should not be used directly, instead the ComponentContextMenuService should be used to open a context\n * menu.\n */\ninterface ComponentContextMenuData {\n  /** Reference to the overlay used to display the context menu */\n  overlayRef: OverlayRef;\n  /** The position of the overlay */\n  position: ConnectedPosition;\n  /** The project id string */\n  projectId: string;\n  /** The node id string */\n  nodeId: string;\n  /** The type of node, either interface or component. Controls the content shown in the context menu */\n  type: NodeDetailsType;\n  /** A reference to the issue graph */\n  graph: IssueGraphComponent;\n}\n\nconst COMPONENT_CONTEXT_MENU_DATA = new InjectionToken('COMPONENT_CONTEXT_MENU_DATA');\n\n/**\n * Use this service to create a {@link ComponentContextMenuComponent}.\n */\n@Injectable({providedIn: 'root'})\nexport class ComponentContextMenuService {\n  constructor(private overlay: Overlay, private injector: Injector) {\n  }\n\n  /**\n   * Open a new component context menu\n   * @param parent The parent of the context menu\n   * @param x The X position relative to the top left corner of the parent\n   * @param y The Y position relative to the top left corner of the parent\n   * @param projectID The id of the project the node belongs to\n   * @param nodeID The id of the node\n   * @param nodeType The type of the node\n   * @param issueGraph A reference to the issue graph\n   * @return A reference to the context menu\n   */\n  open(parent: Element,\n       x: number, y: number,\n       projectID: string,\n       nodeID: string,\n       nodeType: NodeDetailsType,\n       issueGraph: IssueGraphComponent): ComponentContextMenuComponent {\n    const position = this.overlay.position().flexibleConnectedTo(parent);\n    const pos: ConnectedPosition = {\n      originX: 'start',\n      originY: 'top',\n      overlayX: 'start',\n      overlayY: 'top',\n      offsetX: x,\n      offsetY: y\n    };\n    position.withPositions([pos]);\n\n    const ref = this.overlay.create({\n      minWidth: 400,\n      minHeight: 200,\n      positionStrategy: position\n    });\n\n    const map = new WeakMap();\n    map.set(COMPONENT_CONTEXT_MENU_DATA, {\n      overlayRef: ref,\n      position: pos,\n      projectId: projectID,\n      nodeId: nodeID,\n      type: nodeType,\n      graph: issueGraph\n    });\n    const injector = new PortalInjector(this.injector, map);\n    return ref.attach(new ComponentPortal(ComponentContextMenuComponent, null, injector)).instance;\n  }\n}\n\n/**\n * This component manages the component context menu as well as its content\n */\n@Component({\n  styleUrls: ['component-context-menu.component.scss'],\n  templateUrl: './component-context-menu.component.html'\n})\nexport class ComponentContextMenuComponent implements AfterViewInit, OnDestroy {\n  /** @ignore */\n  private static MIN_WIDTH = 700;\n  /** @ignore */\n  private static MIN_HEIGHT = 400;\n  /** @ignore */\n  private static LAST_WIDTH = ComponentContextMenuComponent.MIN_WIDTH;\n  /** @ignore */\n  private static LAST_HEIGHT = ComponentContextMenuComponent.MIN_HEIGHT;\n  /** @ignore */\n  private resize = false;\n\n  /** Current width of the dialog */\n  width = ComponentContextMenuComponent.LAST_WIDTH;\n  /** Current height of the dialog */\n  height = ComponentContextMenuComponent.LAST_HEIGHT;\n  /** True if the node details component is loaded */\n  nodeDetailsReady: boolean;\n\n  /** @ignore */\n  @ViewChild('frame') frame: ElementRef;\n\n  /** @ignore */\n  @ViewChild('resizeCorner') set resizeCorner(content: ElementRef) {\n    if (content) {\n      content.nativeElement.addEventListener('mousedown', () => this.resize = true);\n    }\n  }\n\n  /** @ignore */\n  @ViewChild(NodeDetailsComponent) nodeDetails: NodeDetailsComponent;\n\n  constructor(@Inject(COMPONENT_CONTEXT_MENU_DATA) public data: ComponentContextMenuData,\n              private changeDetector: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit() {\n    this.frame.nativeElement.style.minWidth = ComponentContextMenuComponent.MIN_WIDTH + 'px';\n    this.frame.nativeElement.style.minHeight = ComponentContextMenuComponent.MIN_HEIGHT + 'px';\n    this.nodeDetailsReady = true;\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy(): void {\n    // TODO: Save in local storage?\n    ComponentContextMenuComponent.LAST_WIDTH = this.width;\n    ComponentContextMenuComponent.LAST_HEIGHT = this.height;\n  }\n\n  /** @ignore */\n  detailsCallback: NodeUpdatedCallbackFn = (nodeDeleted: boolean): void => {\n    this.data.graph.reload();\n    if (nodeDeleted) {\n      this.close();\n    }\n  }\n\n  /**\n   * Update the position of the context menu\n   * @param x The X offset of the top left menu corner relative to the top left corner of the parent\n   * @param y The Y offset of the top left menu corner relative to the top left corner of the parent\n   */\n  updatePosition(x: number, y: number): void {\n    this.data.position.offsetX = x;\n    this.data.position.offsetY = y;\n    this.data.overlayRef.getConfig().positionStrategy.apply();\n  }\n\n  /**\n   * Close the context menu\n   */\n  close(): void {\n    this.data.overlayRef.dispose();\n  }\n\n  /** @ignore */\n  @HostListener('window:mouseup')\n  private onMouseUp() {\n    this.resize = false;\n  }\n  \n  /** @ignore */\n  @HostListener('window:mousemove', ['$event'])\n  private onMouseMove(event: MouseEvent) {\n    if (!this.resize) {\n      return;\n    }\n\n    this.width = Math.max(this.width + event.movementX, ComponentContextMenuComponent.MIN_WIDTH);\n    this.height = Math.max(this.height + event.movementY, ComponentContextMenuComponent.MIN_HEIGHT);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentNode.html":{"url":"interfaces/ComponentNode.html","title":"interface - ComponentNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ComponentNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/issue-graph-nodes.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IssueNode\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         GraphComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GraphComponent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {GraphComponent, GraphInterface} from '@app/data/issue-graph/graph-data';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\n\nexport {\n  IssueNode, ComponentNode, InterfaceNode, IssueGroupContainerNode, RelationEdge,\n  createComponentNode, createInterfaceNode, createIssueGroupContainerNode, createIssueFolderNode,\n  createRelationEdge, createConsumptionEdge, createInterfaceProvisionEdge,\n  Position,\n  getIssueFolderId\n};\n\nexport enum NodeType {\n  Component = 'component',\n  Interface = 'interface',\n  InterfaceConsumer = 'interface-connect',\n  IssueGroupContainer = 'issue-group-container'\n}\n\n/**\n * This file includes type definitions and creation functions (think constructors)\n * for nodes and edges that are added to the graph editor in order to visualize the project.\n * Since the data that is stored with these differs based on what they represent (e.g.\n * interface vs component node) we give each their own type. We do this by extending\n * the Node class or the Edge class of the grapheditor. These classes are instantiated\n * via calls to the contained create* functions within the drawGraph method of the IssueGraphComponent.\n */\n\ninterface IssueNode extends Node {\n  id: string;\n  title: string;\n  issueGroupContainer?: IssueGroupContainerNode;\n}\n\ninterface ComponentNode extends IssueNode {\n  data: GraphComponent;\n}\n\nfunction createComponentNode(component: GraphComponent, position: Position): ComponentNode {\n  return {\n    ...(position || zeroPosition),\n    id: component.id,\n    title: component.name,\n    type: NodeType.Component,\n    data: component\n  };\n}\n\ninterface InterfaceNode extends IssueNode {\n  offeredById: string;\n}\n\nfunction createInterfaceNode(intrface: GraphInterface, position: Position): InterfaceNode {\n  return {\n    ...(position || zeroPosition),\n    id: intrface.id,\n    title: intrface.name,\n    type: NodeType.Interface,\n    offeredById: intrface.offeredBy,\n  };\n}\n\ninterface IssueGroupContainerNode extends Node {\n  position: string;\n  issueGroupNodeIds: Set;\n}\n\nfunction createIssueGroupContainerNode(node: IssueNode): IssueGroupContainerNode {\n  return {\n    id: `${node.id}__issue-group-container`,\n    type: NodeType.IssueGroupContainer,\n    dynamicTemplate: 'issue-group-container',\n    x: 0,\n    y: 0,\n    position: 'bottom',\n    issueGroupNodeIds: new Set(),\n  };\n}\n\ninterface IssueFolderNode extends Node {\n  type: IssueCategory;\n  issueCount: string;\n}\n\nfunction createIssueFolderNode(node: IssueNode, issueCategory: IssueCategory, issueCount: string): IssueFolderNode {\n  return {\n    id: getIssueFolderId(node.id, issueCategory),\n    type: issueCategory,\n    x: 0,\n    y: 0,\n    issues: new Set(),\n    issueCount\n  };\n}\n\ninterface RelationEdge extends Edge {\n  sourceIssues: Set;\n}\n\nfunction createRelationEdge(sourceId: string, targetId: string, edgeType = folderEdgeTypes.RelatedTo): RelationEdge {\n  return {\n    id: `s${sourceId}t${targetId}r${edgeType}`,\n    source: sourceId,\n    target: targetId,\n    type: folderEdgeTypes.RelatedTo,\n    markerEnd: {\n      template: 'arrow',\n      relativeRotation: 0,\n    },\n    dragHandles: [],\n    sourceIssues: new Set()\n  };\n}\n\nfunction createConsumptionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.InterfaceConsumer,\n    markerEnd: {\n      template: 'interface-connector',\n      relativeRotation: 0,\n    },\n  };\n}\n\nfunction createInterfaceProvisionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.Interface,\n    dragHandles: [],\n  };\n}\n\nfunction getIssueFolderId(id: string, issueCategory: IssueCategory): string {\n  return `${id}__${issueCategory}`;\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst zeroPosition = {x: 0, y: 0};\n\nenum folderEdgeTypes {\n  RelatedTo = 'relatedTo',\n  Depends = 'dependency',\n  Duplicates = 'duplicate'\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ComponentStoreService.html":{"url":"injectables/ComponentStoreService.html","title":"injectable - ComponentStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ComponentStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/component/component-store.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Provides updating, deleting and retrieving components from the backend.\nObjects like updateComponentMutation are injected and were created by a codegenerator based on\nthe mutation UpdateComponent in the component.graphql file in this folder. The same hold for the\nother mutation and query objects.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createComponent\n                            \n                            \n                                deleteComponent\n                            \n                            \n                                getBasicComponent\n                            \n                            \n                                getComponentInterfaces\n                            \n                            \n                                getComponentLabels\n                            \n                            \n                                getFullComponent\n                            \n                            \n                                updateComponent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(updateComponentMutation: UpdateComponentGQL, deleteComponentMutation: DeleteComponentGQL, getFullComponentQuery: GetComponentGQL, createComponentMutation: CreateComponentGQL, getLabelsQuery: GetComponentLabelsGQL, getBasicComponentQuery: GetBasicComponentGQL, getComponentInterfacesQuery: GetComponentInterfacesGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/component/component-store.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        updateComponentMutation\n                                                  \n                                                        \n                                                                    UpdateComponentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deleteComponentMutation\n                                                  \n                                                        \n                                                                    DeleteComponentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getFullComponentQuery\n                                                  \n                                                        \n                                                                    GetComponentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createComponentMutation\n                                                  \n                                                        \n                                                                    CreateComponentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getLabelsQuery\n                                                  \n                                                        \n                                                                    GetComponentLabelsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getBasicComponentQuery\n                                                  \n                                                        \n                                                                    GetBasicComponentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getComponentInterfacesQuery\n                                                  \n                                                        \n                                                                    GetComponentInterfacesGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createComponent\n                        \n                    \n                \n            \n            \n                \ncreateComponent(input: CreateComponentInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/component/component-store.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            CreateComponentInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteComponent\n                        \n                    \n                \n            \n            \n                \ndeleteComponent(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/component/component-store.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBasicComponent\n                        \n                    \n                \n            \n            \n                \ngetBasicComponent(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/component/component-store.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getComponentInterfaces\n                        \n                    \n                \n            \n            \n                \ngetComponentInterfaces(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/component/component-store.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getComponentLabels\n                        \n                    \n                \n            \n            \n                \ngetComponentLabels(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/component/component-store.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFullComponent\n                        \n                    \n                \n            \n            \n                \ngetFullComponent(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/component/component-store.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateComponent\n                        \n                    \n                \n            \n            \n                \nupdateComponent(input: UpdateComponentInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/component/component-store.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            UpdateComponentInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {\n  CreateComponentGQL,\n  CreateComponentInput,\n  DeleteComponentGQL,\n  DeleteComponentInput,\n  GetBasicComponentGQL,\n  GetBasicComponentQuery,\n  GetComponentGQL,\n  GetComponentInterfacesGQL,\n  GetComponentInterfacesQuery,\n  GetComponentLabelsGQL,\n  GetComponentLabelsQuery,\n  GetComponentQuery,\n  UpdateComponentGQL,\n  UpdateComponentInput\n} from 'src/generated/graphql';\nimport {map} from 'rxjs/operators';\n\n/**\n * Provides updating, deleting and retrieving components from the backend.\n * Objects like updateComponentMutation are injected and were created by a codegenerator based on\n * the mutation UpdateComponent in the component.graphql file in this folder. The same hold for the\n * other mutation and query objects.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComponentStoreService {\n\n  constructor(private updateComponentMutation: UpdateComponentGQL,\n              private deleteComponentMutation: DeleteComponentGQL,\n              private getFullComponentQuery: GetComponentGQL,\n              private createComponentMutation: CreateComponentGQL,\n              private getLabelsQuery: GetComponentLabelsGQL,\n              private getBasicComponentQuery: GetBasicComponentGQL,\n              private getComponentInterfacesQuery: GetComponentInterfacesGQL) {\n  }\n\n  getComponentLabels(id: string): Observable {\n    return this.getLabelsQuery.fetch({id}).pipe(map(({data}) => data));\n  }\n\n  getBasicComponent(id: string): Observable {\n    return this.getBasicComponentQuery.fetch({id}).pipe(map(({data}) => data));\n  }\n\n  getFullComponent(id: string): Observable {\n    return this.getFullComponentQuery.fetch({id}).pipe(map(({data}) => data));\n  }\n\n  getComponentInterfaces(id: string): Observable {\n    return this.getComponentInterfacesQuery.fetch({id}).pipe(map(({data}) => data));\n  }\n\n  deleteComponent(id: string) {\n    const input: DeleteComponentInput = {\n      component: id\n    };\n    return this.deleteComponentMutation.mutate({input});\n  }\n\n  createComponent(input: CreateComponentInput) {\n    return this.createComponentMutation.mutate({input});\n  }\n\n  updateComponent(input: UpdateComponentInput) {\n    return this.updateComponentMutation.mutate({input});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ComponentsService.html":{"url":"injectables/ComponentsService.html","title":"injectable - ComponentsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ComponentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/queries/components.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getComponent\n                            \n                            \n                                getInterface\n                            \n                            \n                                listProjectComponents\n                            \n                            \n                                listProjectInterfaces\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(qListProjectComponents: ListProjectComponentsGQL, qListProjectInterfaces: ListProjectInterfacesGQL, qGetComponent: GetComponentGQL, qGetInterface: GetInterfaceGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data-dgql/queries/components.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        qListProjectComponents\n                                                  \n                                                        \n                                                                    ListProjectComponentsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qListProjectInterfaces\n                                                  \n                                                        \n                                                                    ListProjectInterfacesGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qGetComponent\n                                                  \n                                                        \n                                                                    GetComponentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qGetInterface\n                                                  \n                                                        \n                                                                    GetInterfaceGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getComponent\n                        \n                    \n                \n            \n            \n                \ngetComponent(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/queries/components.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInterface\n                        \n                    \n                \n            \n            \n                \ngetInterface(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/queries/components.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listProjectComponents\n                        \n                    \n                \n            \n            \n                \nlistProjectComponents(project: string, list: QueryListParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/queries/components.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    list\n                                    \n                                            QueryListParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listProjectInterfaces\n                        \n                    \n                \n            \n            \n                \nlistProjectInterfaces(project: string, list: QueryListParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/queries/components.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    list\n                                    \n                                            QueryListParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  ComponentFilter, ComponentInterfaceFilter,\n  GetComponentGQL, GetInterfaceGQL,\n  ListProjectComponentsGQL, ListProjectInterfacesGQL,\n} from 'src/generated/graphql-dgql';\nimport { promisifyApolloFetch, QueryListParams } from '@app/data-dgql/queries/util';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComponentsService {\n  constructor(\n    private qListProjectComponents: ListProjectComponentsGQL,\n    private qListProjectInterfaces: ListProjectInterfacesGQL,\n    private qGetComponent: GetComponentGQL,\n    private qGetInterface: GetInterfaceGQL,\n  ) {}\n\n  listProjectComponents(project: string, list: QueryListParams) {\n    return promisifyApolloFetch(this.qListProjectComponents.fetch({ project, ...list }));\n  }\n\n  listProjectInterfaces(project: string, list: QueryListParams) {\n    return promisifyApolloFetch(this.qListProjectInterfaces.fetch({ project, ...list }));\n  }\n\n  getComponent(id: string) {\n    return promisifyApolloFetch(this.qGetComponent.fetch({ id }));\n  }\n\n  getInterface(id: string) {\n    return promisifyApolloFetch(this.qGetInterface.fetch({ id }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateComponentData.html":{"url":"interfaces/CreateComponentData.html","title":"interface - CreateComponentData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateComponentData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dialogs/create-component-dialog/create-component-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            projectId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, Inject, Input, ViewChild} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {CreateComponentInput, ImsType} from 'src/generated/graphql';\nimport {IssueGraphStateService} from '@app/data/issue-graph/issue-graph-state.service';\nimport {ComponentStoreService} from '@app/data/component/component-store.service';\nimport {CCIMSValidators} from '@app/utils/validators';\nimport {QueryComponent} from '@app/utils/query-component/query.component';\n\n@Component({\n  selector: 'app-create-component-dialog',\n  templateUrl: './create-component-dialog.component.html',\n  styleUrls: ['./create-component-dialog.component.scss']\n})\nexport class CreateComponentDialogComponent {\n  @Input() projectId: string;\n  @ViewChild(QueryComponent) queryComponent: QueryComponent;\n\n  constructor(public dialogRef: MatDialogRef,\n              @Inject(MAT_DIALOG_DATA) public data: CreateComponentData,\n              private fb: FormBuilder,\n              private gs: IssueGraphStateService,\n              private componentStore: ComponentStoreService) {\n  }\n\n  // define validations\n  validationName = new FormControl('', [CCIMSValidators.nameFormatValidator, Validators.required]);\n  validationUrl = new FormControl('', [CCIMSValidators.urlValidator, Validators.required]);\n  validationIMS = new FormControl('', [CCIMSValidators.urlValidator, Validators.required]);\n  validationProvider = new FormControl('', Validators.required);\n  validationDescription = new FormControl('', CCIMSValidators.contentValidator);\n\n  // close dialog on cancel\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  // callback method for component creation\n  onOkClick(name: string, url: string, description: string, ims: string, provider: string): void {\n    // define the input for the database mutation - required fields are specified by the graphQL schema\n    // TODO: Add component to IMS?\n    const input: CreateComponentInput = {\n      name,\n      projects: [this.data.projectId],\n      description,\n      repositoryURL: url\n    };\n\n    this.queryComponent.listenTo(this.componentStore.createComponent(input), () => this.dialogRef.close());\n  }\n\n  checkImsType(returnFromSelect: string): ImsType {\n    if (returnFromSelect.localeCompare(ImsType.Github) === 0) {\n      return ImsType.Github;\n    }\n  }\n}\n\ninterface CreateComponentData {\n  projectId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateComponentDialogComponent.html":{"url":"components/CreateComponentDialogComponent.html","title":"component - CreateComponentDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateComponentDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/create-component-dialog/create-component-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-component-dialog\n            \n\n            \n                styleUrls\n                ./create-component-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-component-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                queryComponent\n                            \n                            \n                                validationDescription\n                            \n                            \n                                validationIMS\n                            \n                            \n                                validationName\n                            \n                            \n                                validationProvider\n                            \n                            \n                                validationUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkImsType\n                            \n                            \n                                onNoClick\n                            \n                            \n                                onOkClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: CreateComponentData, fb: FormBuilder, gs: IssueGraphStateService, componentStore: ComponentStoreService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        CreateComponentData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gs\n                                                  \n                                                        \n                                                                        IssueGraphStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        componentStore\n                                                  \n                                                        \n                                                                        ComponentStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkImsType\n                        \n                    \n                \n            \n            \n                \ncheckImsType(returnFromSelect: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    returnFromSelect\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ImsType\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onOkClick\n                        \n                    \n                \n            \n            \n                \nonOkClick(name: string, url: string, description: string, ims: string, provider: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ims\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    provider\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateComponentData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(QueryComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', CCIMSValidators.contentValidator)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationIMS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [CCIMSValidators.urlValidator, Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [CCIMSValidators.nameFormatValidator, Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationProvider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', Validators.required)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [CCIMSValidators.urlValidator, Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Inject, Input, ViewChild} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {CreateComponentInput, ImsType} from 'src/generated/graphql';\nimport {IssueGraphStateService} from '@app/data/issue-graph/issue-graph-state.service';\nimport {ComponentStoreService} from '@app/data/component/component-store.service';\nimport {CCIMSValidators} from '@app/utils/validators';\nimport {QueryComponent} from '@app/utils/query-component/query.component';\n\n@Component({\n  selector: 'app-create-component-dialog',\n  templateUrl: './create-component-dialog.component.html',\n  styleUrls: ['./create-component-dialog.component.scss']\n})\nexport class CreateComponentDialogComponent {\n  @Input() projectId: string;\n  @ViewChild(QueryComponent) queryComponent: QueryComponent;\n\n  constructor(public dialogRef: MatDialogRef,\n              @Inject(MAT_DIALOG_DATA) public data: CreateComponentData,\n              private fb: FormBuilder,\n              private gs: IssueGraphStateService,\n              private componentStore: ComponentStoreService) {\n  }\n\n  // define validations\n  validationName = new FormControl('', [CCIMSValidators.nameFormatValidator, Validators.required]);\n  validationUrl = new FormControl('', [CCIMSValidators.urlValidator, Validators.required]);\n  validationIMS = new FormControl('', [CCIMSValidators.urlValidator, Validators.required]);\n  validationProvider = new FormControl('', Validators.required);\n  validationDescription = new FormControl('', CCIMSValidators.contentValidator);\n\n  // close dialog on cancel\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  // callback method for component creation\n  onOkClick(name: string, url: string, description: string, ims: string, provider: string): void {\n    // define the input for the database mutation - required fields are specified by the graphQL schema\n    // TODO: Add component to IMS?\n    const input: CreateComponentInput = {\n      name,\n      projects: [this.data.projectId],\n      description,\n      repositoryURL: url\n    };\n\n    this.queryComponent.listenTo(this.componentStore.createComponent(input), () => this.dialogRef.close());\n  }\n\n  checkImsType(returnFromSelect: string): ImsType {\n    if (returnFromSelect.localeCompare(ImsType.Github) === 0) {\n      return ImsType.Github;\n    }\n  }\n}\n\ninterface CreateComponentData {\n  projectId: string;\n}\n\n    \n\n    \n        \n    Create Component\n    \n        \n            \n                Name\n                \n                Invalid component name\n            \n\n            \n                Repository-URL\n                \n                Enter a valid URL\n            \n\n            \n                Provider Type (IMS)\n                \n                    GitHub\n                \n                Select the Provider\n            \n\n            \n                IMS-URL\n                \n                Enter a valid URL\n            \n\n            \n                Description\n                \n            \n        \n    \n    \n        Cancel\n        \n            \n                Create\n            \n        \n    \n\n\n    \n\n    \n                \n                    ./create-component-dialog.component.scss\n                \n                @import 'src/styles/dialog';\n\n.dialog-wrapper {\n  max-width: 600px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Create Component                                        Name                                Invalid component name                                        Repository-URL                                Enter a valid URL                                        Provider Type (IMS)                                    GitHub                                Select the Provider                                        IMS-URL                                Enter a valid URL                                        Description                                                    Cancel                                    Create                        '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateComponentDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateEditLabelDialogComponent.html":{"url":"components/CreateEditLabelDialogComponent.html","title":"component - CreateEditLabelDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateEditLabelDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-edit-label-dialog-component\n            \n\n            \n                styleUrls\n                ./create-edit-label-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-edit-label-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allComponentsList\n                            \n                            \n                                applyComponentChangeset\n                            \n                            \n                                color\n                            \n                            \n                                componentList\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                loading\n                            \n                            \n                                validationLabelDescription\n                            \n                            \n                                validationLabelName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                makeComponentFilter\n                            \n                            \n                                onConfirmClick\n                            \n                            \n                                onLabelCancelClick\n                            \n                            \n                                randomizeColor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialogRef, dataService: DataService, data: CreateLabelDialogData, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        CreateLabelDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        makeComponentFilter\n                        \n                    \n                \n            \n            \n                \nmakeComponentFilter(search)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    search\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ComponentFilter\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onConfirmClick\n                        \n                    \n                \n            \n            \n                \nonConfirmClick(name: string, description?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLabelCancelClick\n                        \n                    \n                \n            \n            \n                \nonLabelCancelClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        randomizeColor\n                        \n                    \n                \n            \n            \n                \nrandomizeColor()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allComponentsList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ListId\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        applyComponentChangeset\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#000000'\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        componentList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NodeId[] | ListId\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateLabelDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationLabelDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', CCIMSValidators.contentValidator)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationLabelName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required, Validators.maxLength(30)])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {CCIMSValidators} from '@app/utils/validators';\nimport {encodeNodeId, ListId, ListType, NodeId} from '@app/data-dgql/id';\nimport DataService from '@app/data-dgql';\nimport { ComponentFilter, Label } from '../../../generated/graphql-dgql';\n\nexport interface CreateLabelDialogData {\n  projectId: NodeId;\n  /** If set, will edit an existing label instead of creating a new one. */\n  editExisting?: NodeId;\n  /** If set, will select all components of this issue */\n  issueId?: NodeId[];\n}\n\n@Component({\n  selector: 'app-create-edit-label-dialog-component',\n  templateUrl: './create-edit-label-dialog.component.html',\n  styleUrls: ['./create-edit-label-dialog.component.scss']\n})\nexport class CreateEditLabelDialogComponent implements OnInit {\n  validationLabelName = new FormControl('', [Validators.required, Validators.maxLength(30)]);\n  validationLabelDescription = new FormControl('', CCIMSValidators.contentValidator);\n  color = '#000000';\n  loading = false;\n\n  componentList: NodeId[] | ListId = [];\n  allComponentsList: ListId;\n\n  constructor(private dialog: MatDialogRef,\n              private dataService: DataService,\n              @Inject(MAT_DIALOG_DATA) public data: CreateLabelDialogData,\n              private notify: UserNotifyService) {\n  }\n\n  ngOnInit() {\n    if (this.data.editExisting) {\n      this.componentList = {\n        node: this.data.editExisting,\n        type: ListType.Components\n      };\n\n      this.loading = true;\n      const node = this.dataService.getNode(this.data.editExisting);\n      // reload data from source\n      node.invalidate();\n      node.load();\n      node.dataAsPromise().then(data => {\n        this.validationLabelName.setValue(data.name);\n        this.color = data.color;\n        this.validationLabelDescription.setValue(data.description);\n      }).catch(error => {\n        this.notify.notifyError('Could not load label data for editing');\n        this.dialog.close(null);\n      }).finally(() => {\n        this.loading = false;\n      });\n    } else {\n      this.randomizeColor();\n\n      if (this.data.issueId) {\n        this.componentList = this.data.issueId;\n      }\n    }\n\n    this.allComponentsList = {\n      node: this.data.projectId,\n      type: ListType.Components\n    };\n  }\n\n  makeComponentFilter(search): ComponentFilter {\n    return { name: search };\n  }\n  applyComponentChangeset = async (additions: NodeId[], deletions: NodeId[]) => {\n    if (Array.isArray(this.componentList)) {\n      const keySet = new Set(this.componentList.map(id => encodeNodeId(id)));\n      for (const item of additions) {\n        if (!keySet.has(encodeNodeId(item))) {\n          this.componentList.push(item);\n          keySet.add(encodeNodeId(item));\n        }\n      }\n      for (const item of deletions) {\n        if (keySet.has(encodeNodeId(item))) {\n          this.componentList.splice(this.componentList.indexOf(item), 1);\n          keySet.delete(encodeNodeId(item));\n        }\n      }\n    } else {\n      for (const item of additions) {\n        await this.dataService.mutations.addLabelToComponent(Math.random().toString(), this.data.editExisting, item);\n      }\n      for (const item of deletions) {\n        await this.dataService.mutations.removeLabelFromComponent(Math.random().toString(), this.data.editExisting, item);\n      }\n    }\n  }\n\n  onLabelCancelClick(): void {\n    this.dialog.close(null);\n  }\n\n  onConfirmClick(name: string, description?: string) {\n    this.loading = true;\n\n    if (this.data.editExisting) {\n      this.dataService.mutations.updateLabel(\n        Math.random().toString(),\n        this.data.editExisting,\n        name,\n        this.color,\n        description\n      ).then(() => {\n        this.dialog.close({\n          id: this.data.editExisting.id,\n          name,\n          color: this.color,\n          description\n        } as Label);\n      }).catch((error) => {\n        this.notify.notifyError('Failed to update label!', error);\n      }).finally(() => {\n        this.loading = false;\n      });\n    } else {\n      this.dataService.mutations.createLabel(\n        Math.random().toString(),\n        this.componentList as NodeId[],\n        name,\n        this.color,\n        description\n      ).then(created => {\n        this.dialog.close(created as Label);\n      }).catch((error) => {\n        this.notify.notifyError('Failed to create label!', error);\n      }).finally(() => {\n        this.loading = false;\n      });\n    }\n  }\n\n  randomizeColor(): void {\n    const r = ('00' + (Math.random() * 0xFF).toString(16)).slice(-2);\n    const g = ('00' + (Math.random() * 0xFF).toString(16)).slice(-2);\n    const b = ('00' + (Math.random() * 0xFF).toString(16)).slice(-2);\n\n    this.color = '#' + r + g + b;\n  }\n}\n\n    \n\n    \n        \n  \n    Update label\n  \n  \n    Create a new label\n  \n\n\n  \n    Components\n    Assign the label to a component\n    \n      {{item.name}}\n    \n  \n\n  \n    Label Name\n    \n    Invalid name\n  \n\n  \n    Description\n    \n  \n\n  \n    Color\n    \n    \n      refresh\n    \n  \n\n\n\n  Cancel\n  \n    \n      Apply\n    \n    \n      Create\n    \n  \n\n\n    \n\n    \n                \n                    ./create-edit-label-dialog.component.scss\n                \n                .component-selector {\n  margin-bottom: 16px;\n}\n\n.new-label-input {\n  padding: 6px;\n  width: 100%;\n}\n\n.error-label-create {\n  background-color: rgb(204, 58, 58);\n  color: white;\n  margin-top: 5px;\n}\n\n.color-randomize-button {\n  margin-left: 4px;\n}\n\n.mat-success {\n  background-color: green;\n  color: #fff;\n}\n\n.actions {\n  float: right;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Update label        Create a new label        Components    Assign the label to a component          {{item.name}}            Label Name        Invalid name        Description            Color              refresh        Cancel            Apply              Create      '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateEditLabelDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateInterfaceData.html":{"url":"interfaces/CreateInterfaceData.html","title":"interface - CreateInterfaceData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateInterfaceData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            offeredById\n                                        \n                                \n                                \n                                        \n                                            position\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        offeredById\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        offeredById:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, Inject, Input} from '@angular/core';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {AuthenticationService} from '@app/auth/authentication.service';\nimport {IssueGraphStateService} from '@app/data/issue-graph/issue-graph-state.service';\nimport {InterfaceStoreService} from '@app/data/interface/interface-store.service';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {CCIMSValidators} from '@app/utils/validators';\n\n@Component({\n  selector: 'app-create-interface-dialog',\n  templateUrl: './create-interface-dialog.component.html',\n  styleUrls: ['./create-interface-dialog.component.scss']\n})\nexport class CreateInterfaceDialogComponent {\n  @Input()\n  projectId: string;\n\n  public loading: boolean;\n  public saveFailed: boolean;\n  validationName = new FormControl('', [CCIMSValidators.nameFormatValidator, Validators.required]);\n  validationDescription = new FormControl('', CCIMSValidators.contentValidator);\n\n  constructor(public dialogRef: MatDialogRef,\n              @Inject(MAT_DIALOG_DATA) public data: CreateInterfaceData,\n              private fb: FormBuilder,\n              private gs: IssueGraphStateService,\n              private authService: AuthenticationService,\n              private interfaceStore: InterfaceStoreService,\n              private notify: UserNotifyService) {\n    this.loading = false;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onOkClick(name: string, description: string, type: string): void {\n    this.loading = true;\n\n    // db mutation to create an interface\n    this.interfaceStore.create(name, this.data.offeredById, description).subscribe(({data}) => {\n      this.loading = false;\n\n      // close dialog and return the interface id of the created dialog\n      this.dialogRef.close(data.createComponentInterface.componentInterface.id);\n    }, (error) => {\n      this.notify.notifyError('Failed to create interface!', error);\n      this.loading = false;\n      this.saveFailed = true;\n    });\n  }\n\n  afterAlertClose(): void {\n    this.saveFailed = false;\n  }\n}\n\nexport interface CreateInterfaceData {\n  position: { x: number, y: number };\n  offeredById: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateInterfaceDialogComponent.html":{"url":"components/CreateInterfaceDialogComponent.html","title":"component - CreateInterfaceDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateInterfaceDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-interface-dialog\n            \n\n            \n                styleUrls\n                ./create-interface-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-interface-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Public\n                                saveFailed\n                            \n                            \n                                validationDescription\n                            \n                            \n                                validationName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterAlertClose\n                            \n                            \n                                onNoClick\n                            \n                            \n                                onOkClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: CreateInterfaceData, fb: FormBuilder, gs: IssueGraphStateService, authService: AuthenticationService, interfaceStore: InterfaceStoreService, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        CreateInterfaceData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gs\n                                                  \n                                                        \n                                                                        IssueGraphStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        interfaceStore\n                                                  \n                                                        \n                                                                        InterfaceStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterAlertClose\n                        \n                    \n                \n            \n            \n                \nafterAlertClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onOkClick\n                        \n                    \n                \n            \n            \n                \nonOkClick(name: string, description: string, type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateInterfaceData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveFailed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', CCIMSValidators.contentValidator)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [CCIMSValidators.nameFormatValidator, Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Inject, Input} from '@angular/core';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {AuthenticationService} from '@app/auth/authentication.service';\nimport {IssueGraphStateService} from '@app/data/issue-graph/issue-graph-state.service';\nimport {InterfaceStoreService} from '@app/data/interface/interface-store.service';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {CCIMSValidators} from '@app/utils/validators';\n\n@Component({\n  selector: 'app-create-interface-dialog',\n  templateUrl: './create-interface-dialog.component.html',\n  styleUrls: ['./create-interface-dialog.component.scss']\n})\nexport class CreateInterfaceDialogComponent {\n  @Input()\n  projectId: string;\n\n  public loading: boolean;\n  public saveFailed: boolean;\n  validationName = new FormControl('', [CCIMSValidators.nameFormatValidator, Validators.required]);\n  validationDescription = new FormControl('', CCIMSValidators.contentValidator);\n\n  constructor(public dialogRef: MatDialogRef,\n              @Inject(MAT_DIALOG_DATA) public data: CreateInterfaceData,\n              private fb: FormBuilder,\n              private gs: IssueGraphStateService,\n              private authService: AuthenticationService,\n              private interfaceStore: InterfaceStoreService,\n              private notify: UserNotifyService) {\n    this.loading = false;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onOkClick(name: string, description: string, type: string): void {\n    this.loading = true;\n\n    // db mutation to create an interface\n    this.interfaceStore.create(name, this.data.offeredById, description).subscribe(({data}) => {\n      this.loading = false;\n\n      // close dialog and return the interface id of the created dialog\n      this.dialogRef.close(data.createComponentInterface.componentInterface.id);\n    }, (error) => {\n      this.notify.notifyError('Failed to create interface!', error);\n      this.loading = false;\n      this.saveFailed = true;\n    });\n  }\n\n  afterAlertClose(): void {\n    this.saveFailed = false;\n  }\n}\n\nexport interface CreateInterfaceData {\n  position: { x: number, y: number };\n  offeredById: string;\n}\n\n    \n\n    \n        \n  Create Interface\n  \n    \n      \n        Name\n        \n        Invalid interface name\n      \n\n      \n        Interface-Type\n        \n      \n\n      \n        Description\n        \n      \n\n      \n    \n  \n  \n    Cancel\n    Create\n    \n  \n\n\n    \n\n    \n                \n                    ./create-interface-dialog.component.scss\n                \n                @import 'src/styles/dialog';\n\n.dialog-wrapper {\n  max-width: 600px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Create Interface                    Name                Invalid interface name                    Interface-Type                            Description                                Cancel    Create      '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateInterfaceDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateIssueDialogComponent.html":{"url":"components/CreateIssueDialogComponent.html","title":"component - CreateIssueDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateIssueDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-issue-dialog\n            \n\n            \n                styleUrls\n                ./create-issue-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-issue-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                category\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                issueData\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Public\n                                saveFailed\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterAlertClose\n                            \n                            \n                                onCreate\n                            \n                            \n                                onNoClick\n                            \n                            \n                                    Private\n                                updateSelectedItems\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, dialog: MatDialog, dataService: DataService, data: DialogData, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterAlertClose\n                        \n                    \n                \n            \n            \n                \nafterAlertClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCreate\n                        \n                    \n                \n            \n            \n                \nonCreate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick(showConfirmDialog: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    showConfirmDialog\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateSelectedItems\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSelectedItems()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:60\n                \n            \n\n\n            \n                \n                    Updates items to be selected in the Create Issue page,\nincluding 1) components and 2) locations.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('body')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issueData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalIssueData\n\n                    \n                \n                \n                    \n                        Default value : {\n    components: [],\n    locations: [],\n    labels: [],\n    assignees: [],\n    linksToIssues: [],\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveFailed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [CCIMSValidators.nameValidator, Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport { FormControl, Validators } from '@angular/forms';\nimport { IssueCategory } from '../../../generated/graphql';\nimport { UserNotifyService } from '@app/user-notify/user-notify.service';\nimport { CCIMSValidators } from '@app/utils/validators';\nimport { CreateIssueInput } from '../../../generated/graphql-dgql';\nimport { NodeId, NodeType } from '@app/data-dgql/id';\nimport DataService from '@app/data-dgql';\nimport {LocalIssueData} from '@app/issue-detail/issue-sidebar.component';\nimport {RemoveDialogComponent} from '@app/dialogs/remove-dialog/remove-dialog.component';\n\n@Component({\n  selector: 'app-create-issue-dialog',\n  templateUrl: './create-issue-dialog.component.html',\n  styleUrls: ['./create-issue-dialog.component.scss']\n})\n/**\n * This component opens a dialog for the issue creation.\n */\nexport class CreateIssueDialogComponent implements OnInit {\n  @ViewChild('body') body;\n\n  public loading = false;\n  public saveFailed = false;\n\n  constructor(public dialogRef: MatDialogRef,\n              private dialog: MatDialog,\n              private dataService: DataService,\n              @Inject(MAT_DIALOG_DATA) public data: DialogData,\n              private notify: UserNotifyService\n  ) {\n  }\n\n  // form controls for the form fields\n  title = new FormControl('', [CCIMSValidators.nameValidator, Validators.required]);\n  category = new FormControl('', [Validators.required]);\n\n  public issueData: LocalIssueData = {\n    components: [],\n    locations: [],\n    labels: [],\n    assignees: [],\n    linksToIssues: [],\n  };\n\n  ngOnInit(): void {\n    // sets up the issue category as Unclassified\n    this.category.setValue(IssueCategory.Unclassified);\n    this.dialogRef.disableClose = true;\n\n    // updates items to be selected\n    this.updateSelectedItems();\n  }\n\n  /**\n   * Updates items to be selected in the Create Issue page,\n   * including 1) components and 2) locations.\n   */\n  private updateSelectedItems() {\n    // updates components\n    for (const componentId of this.data.components) {\n      this.issueData.components.push(componentId);\n      this.issueData.locations.push(componentId);\n    }\n\n    if (this.data.locations) {\n      // updates locations\n      for (const componentId of this.data.locations) {\n        this.issueData.locations.push(componentId);\n      }\n    }\n  }\n\n  onNoClick(showConfirmDialog: boolean): void {\n    if (showConfirmDialog) {\n      this.dialog.open(RemoveDialogComponent,\n        {\n          data: {\n            title: 'Really discard issue?',\n            messages: ['Are you sure you want to discard this issue?'],\n            confirmButtonText: 'Confirm'\n          }\n        }).afterClosed().subscribe((close) => {\n        if (close) {\n          this.dialogRef.close();\n        }\n      });\n    } else {\n      this.dialogRef.close();\n    }\n  }\n\n  afterAlertClose(): void {\n    this.saveFailed = false;\n  }\n\n  onCreate() {\n    const issueData: CreateIssueInput = {\n      title: this.title.value,\n      body: this.body.code,\n      category: this.category.value,\n      clientMutationID: Math.random().toString(36),\n      components: this.issueData.components.map(node => node.id),\n      locations: this.issueData.locations.map(node => node.id),\n      labels: this.issueData.labels.map(node => node.id),\n      assignees: this.issueData.assignees.map(node => node.id),\n    };\n    this.loading = true;\n    this.saveFailed = false;\n    this.dataService.mutations.createIssue(issueData).then(async result => {\n      const issueId = { type: NodeType.Issue, id: result.id };\n      const promises = [];\n      for (const linked of this.issueData.linksToIssues) {\n        promises.push(this.dataService.mutations.linkIssue(Math.random().toString(), issueId, linked).catch(err => {\n          this.notify.notifyError('Failed to link issue!', err);\n          // aborting on this error would cause weird non-recoverable state so we won't rethrow it\n        }));\n      }\n      await Promise.all(promises);\n\n      this.dialogRef.close(true);\n    }).catch(err => {\n      this.notify.notifyError('Failed to create issue!', err);\n      this.saveFailed = true;\n    }).finally(() => {\n      this.loading = false;\n    });\n  }\n}\n\n/**\n * Interface that defines what data is injected to the dialog.\n */\nexport interface DialogData {\n  projectId: string;\n  // initial state of the issue's component list\n  components: NodeId[];\n  // initial state of the issue's location list\n  locations: NodeId[];\n}\n\n    \n\n    \n        \nCreate Issue\n\n\n\n  \n\n    \n    \n      Title\n      \n      Invalid issue title\n    \n\n    \n    \n\n    \n    \n      \n        \n        Unclassified\n      \n      \n        \n        Bug\n      \n      \n        \n        Feature Request\n      \n    \n\n    \n    \n\n    \n    \n  \n\n\n\n\n\n\n  \n   0 || title.value.length > 0)\">\n    Cancel\n  \n\n  \n  Create\n  \n\n\n    \n\n    \n                \n                    ./create-issue-dialog.component.scss\n                \n                @import 'src/styles/dialog';\n\n.category-selector {\n  width: 100%;\n  margin-bottom: 8px;\n\n  mat-button-toggle {\n    width: 100%;\n\n    ::ng-deep &.mat-button-toggle-checked {\n      font-weight: 600;\n    }\n  }\n}\n\n@keyframes spinner {\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Create Issue                Title            Invalid issue title                                          Unclassified                            Bug                            Feature Request                                 0 || title.value.length > 0)\">    Cancel      Create  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateIssueDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateLabelDialogData.html":{"url":"interfaces/CreateLabelDialogData.html","title":"interface - CreateLabelDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateLabelDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            editExisting\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            issueId\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        editExisting\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        editExisting:         NodeId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeId\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If set, will edit an existing label instead of creating a new one.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issueId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issueId:         NodeId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeId[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If set, will select all components of this issue\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         NodeId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {CCIMSValidators} from '@app/utils/validators';\nimport {encodeNodeId, ListId, ListType, NodeId} from '@app/data-dgql/id';\nimport DataService from '@app/data-dgql';\nimport { ComponentFilter, Label } from '../../../generated/graphql-dgql';\n\nexport interface CreateLabelDialogData {\n  projectId: NodeId;\n  /** If set, will edit an existing label instead of creating a new one. */\n  editExisting?: NodeId;\n  /** If set, will select all components of this issue */\n  issueId?: NodeId[];\n}\n\n@Component({\n  selector: 'app-create-edit-label-dialog-component',\n  templateUrl: './create-edit-label-dialog.component.html',\n  styleUrls: ['./create-edit-label-dialog.component.scss']\n})\nexport class CreateEditLabelDialogComponent implements OnInit {\n  validationLabelName = new FormControl('', [Validators.required, Validators.maxLength(30)]);\n  validationLabelDescription = new FormControl('', CCIMSValidators.contentValidator);\n  color = '#000000';\n  loading = false;\n\n  componentList: NodeId[] | ListId = [];\n  allComponentsList: ListId;\n\n  constructor(private dialog: MatDialogRef,\n              private dataService: DataService,\n              @Inject(MAT_DIALOG_DATA) public data: CreateLabelDialogData,\n              private notify: UserNotifyService) {\n  }\n\n  ngOnInit() {\n    if (this.data.editExisting) {\n      this.componentList = {\n        node: this.data.editExisting,\n        type: ListType.Components\n      };\n\n      this.loading = true;\n      const node = this.dataService.getNode(this.data.editExisting);\n      // reload data from source\n      node.invalidate();\n      node.load();\n      node.dataAsPromise().then(data => {\n        this.validationLabelName.setValue(data.name);\n        this.color = data.color;\n        this.validationLabelDescription.setValue(data.description);\n      }).catch(error => {\n        this.notify.notifyError('Could not load label data for editing');\n        this.dialog.close(null);\n      }).finally(() => {\n        this.loading = false;\n      });\n    } else {\n      this.randomizeColor();\n\n      if (this.data.issueId) {\n        this.componentList = this.data.issueId;\n      }\n    }\n\n    this.allComponentsList = {\n      node: this.data.projectId,\n      type: ListType.Components\n    };\n  }\n\n  makeComponentFilter(search): ComponentFilter {\n    return { name: search };\n  }\n  applyComponentChangeset = async (additions: NodeId[], deletions: NodeId[]) => {\n    if (Array.isArray(this.componentList)) {\n      const keySet = new Set(this.componentList.map(id => encodeNodeId(id)));\n      for (const item of additions) {\n        if (!keySet.has(encodeNodeId(item))) {\n          this.componentList.push(item);\n          keySet.add(encodeNodeId(item));\n        }\n      }\n      for (const item of deletions) {\n        if (keySet.has(encodeNodeId(item))) {\n          this.componentList.splice(this.componentList.indexOf(item), 1);\n          keySet.delete(encodeNodeId(item));\n        }\n      }\n    } else {\n      for (const item of additions) {\n        await this.dataService.mutations.addLabelToComponent(Math.random().toString(), this.data.editExisting, item);\n      }\n      for (const item of deletions) {\n        await this.dataService.mutations.removeLabelFromComponent(Math.random().toString(), this.data.editExisting, item);\n      }\n    }\n  }\n\n  onLabelCancelClick(): void {\n    this.dialog.close(null);\n  }\n\n  onConfirmClick(name: string, description?: string) {\n    this.loading = true;\n\n    if (this.data.editExisting) {\n      this.dataService.mutations.updateLabel(\n        Math.random().toString(),\n        this.data.editExisting,\n        name,\n        this.color,\n        description\n      ).then(() => {\n        this.dialog.close({\n          id: this.data.editExisting.id,\n          name,\n          color: this.color,\n          description\n        } as Label);\n      }).catch((error) => {\n        this.notify.notifyError('Failed to update label!', error);\n      }).finally(() => {\n        this.loading = false;\n      });\n    } else {\n      this.dataService.mutations.createLabel(\n        Math.random().toString(),\n        this.componentList as NodeId[],\n        name,\n        this.color,\n        description\n      ).then(created => {\n        this.dialog.close(created as Label);\n      }).catch((error) => {\n        this.notify.notifyError('Failed to create label!', error);\n      }).finally(() => {\n        this.loading = false;\n      });\n    }\n  }\n\n  randomizeColor(): void {\n    const r = ('00' + (Math.random() * 0xFF).toString(16)).slice(-2);\n    const g = ('00' + (Math.random() * 0xFF).toString(16)).slice(-2);\n    const b = ('00' + (Math.random() * 0xFF).toString(16)).slice(-2);\n\n    this.color = '#' + r + g + b;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateProjectDialogComponent.html":{"url":"components/CreateProjectDialogComponent.html","title":"component - CreateProjectDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateProjectDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/create-project-dialog/create-project-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component provides a dialog for the project creation\nThe user can set a name and description\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-project-dialog\n            \n\n            \n                styleUrls\n                ./create-project-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-project-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                descriptionValidator\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                nameValidator\n                            \n                            \n                                    Public\n                                saveFailed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterAlertClose\n                            \n                            \n                                onNoClick\n                            \n                            \n                                onOkClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, ps: ProjectStoreService, fb: FormBuilder, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ps\n                                                  \n                                                        \n                                                                        ProjectStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterAlertClose\n                        \n                    \n                \n            \n            \n                \nafterAlertClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onOkClick\n                        \n                    \n                \n            \n            \n                \nonOkClick(name: string, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        descriptionValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', CCIMSValidators.contentValidator)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nameValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [CCIMSValidators.nameFormatValidator, Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveFailed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {ProjectStoreService} from '@app/data/project/project-store.service';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {CCIMSValidators} from \"@app/utils/validators\";\n\n/**\n * This component provides a dialog for the project creation\n * The user can set a name and description\n *\n */\n@Component({\n  selector: 'app-create-project-dialog',\n  templateUrl: './create-project-dialog.component.html',\n  styleUrls: ['./create-project-dialog.component.scss']\n})\nexport class CreateProjectDialogComponent {\n  @Input() name: string;\n  @Input() description: string;\n  public loading: boolean;\n  public saveFailed: boolean;\n\n  constructor(public dialogRef: MatDialogRef,\n              private ps: ProjectStoreService,\n              private fb: FormBuilder,\n              private notify: UserNotifyService) {\n    this.loading = false;\n  }\n\n  nameValidator = new FormControl('', [CCIMSValidators.nameFormatValidator, Validators.required]);\n  descriptionValidator = new FormControl('', CCIMSValidators.contentValidator);\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  afterAlertClose(): void {\n    this.saveFailed = false;\n  }\n\n  // after the user clicked on the create button the project creation mutation is fired\n  onOkClick(name: string, description: string): void {\n    this.loading = true;\n    this.ps.create(name, description).subscribe(({data}) => {\n      this.loading = false;\n      this.dialogRef.close({createdProjectId: data.createProject.project.id});\n    }, (error) => {\n      this.notify.notifyError('Failed to create project!', error);\n      this.loading = false;\n      this.saveFailed = true;\n    });\n  }\n}\n\n    \n\n    \n        \nCreate Project\n\n\n\n\n  \n\n    \n    \n      Name\n      \n      \n        Invalid project name\n      \n    \n\n    \n    \n      Description\n      \n      Invalid project description\n    \n\n    \n    \n  \n\n\n\n\n\n  \n  \n    Cancel\n  \n  \n  \n  \n    Create\n  \n\n\n\n    \n\n    \n                \n                    ./create-project-dialog.component.scss\n                \n                @import 'src/styles/dialog';\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Create Project                Name                    Invalid project name                        Description            Invalid project description                      Cancel            Create  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateProjectDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CursorPaginatorComponent.html":{"url":"components/CursorPaginatorComponent.html","title":"component - CursorPaginatorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CursorPaginatorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/cursor-paginator/cursor-paginator.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component controls the cursor in a DataList using arrows and a page size selector.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cursor-paginator\n            \n\n            \n                styleUrls\n                ./cursor-paginator.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./cursor-paginator.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                list\n                            \n                            \n                                pageSizes\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        list\n                    \n                \n                \n                    \n                        Type :         DataList\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/cursor-paginator/cursor-paginator.component.ts:14\n                            \n                        \n                \n                    \n                        The DataList that will be controlled.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        pageSizes\n                    \n                \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/cursor-paginator/cursor-paginator.component.ts:16\n                            \n                        \n                \n                    \n                        Available page sizes; e.g. [10, 25, 100]\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { DataList } from '@app/data-dgql/query';\n\n/**\n * This component controls the cursor in a {@link DataList} using arrows and a page size selector.\n */\n@Component({\n  selector: 'app-cursor-paginator',\n  templateUrl: './cursor-paginator.component.html',\n  styleUrls: ['./cursor-paginator.component.scss']\n})\nexport class CursorPaginatorComponent {\n  /** The DataList that will be controlled. */\n  @Input() list: DataList;\n  /** Available page sizes; e.g. [10, 25, 100] */\n  @Input() pageSizes: number[];\n}\n\n    \n\n    \n        \n     1\">\n        Items per page:\n        \n            \n                \n                    {{size}}\n                \n            \n        \n    \n    \n        \n            first_page\n        \n        \n            chevron_left\n        \n        \n            chevron_right\n        \n    \n\n\n    \n\n    \n                \n                    ./cursor-paginator.component.scss\n                \n                .cursor-paginator {\n  display: flex;\n  justify-content: flex-end;\n  color: fade-in(black, 0.54);\n  padding: 8px 16px;\n\n  .page-size-control {\n    margin-right: 16px;\n\n    .page-size-label {\n      margin-right: 8px;\n      font-size: 12px;\n    }\n\n    .page-size-select {\n      width: 64px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     1\">        Items per page:                                                        {{size}}                                                                first_page                            chevron_left                            chevron_right            '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'CursorPaginatorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataNode.html":{"url":"classes/DataNode.html","title":"class - DataNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/query.ts\n        \n\n\n            \n                Description\n            \n            \n                A cacheable node with no parameters.\nSee DataQuery for more information, and DataService to obtain a DataNode.\nExample\n\n  Is it loading? {{thing$.loading ? 'yes' : 'no'}}\n  Is the thing loaded? {{thing$.hasData ? 'yes' : 'no'}}\n  \n    Thing data: {{thing.something}}\n  \nclass ExampleComponent implements OnInit, OnDestroy {\n  @Input() thingId: NodeId;\n\n  public thing$: DataNode;\n  public thingSub: Subscription; // subscription to thing$\n\n  constructor(private dataService: DataService) {}}\n\n  ngOnInit() {\n    // obtain the DataNode from the data service\n    this.thing$ = this.dataService.getNode(this.thingId);\n\n    // subscribe to indicate that we want some data\n    this.thingSub = this.thing$.subscribe();\n  }\n\n  ngOnDestroy() {\n    // remember to unsubscribe!!\n    this.thingSub.unsubscribe();\n  }\n}\n            \n\n            \n                Extends\n            \n            \n                        DataQuery\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                interactive\n                            \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadIfNeeded\n                            \n                            \n                                dataAsPromise\n                            \n                            \n                                hydrateRaw\n                            \n                            \n                                invalidate\n                            \n                            \n                                load\n                            \n                            \n                                loadDebounced\n                            \n                            \n                                subscribeLazy\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    params\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     I\n\n                    \n                \n                        \n                            \n                                Inherited from         DataQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         DataQuery:52\n\n                        \n                    \n\n            \n                \n                    The ID of this data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interactive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         DataQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         DataQuery:103\n\n                        \n                    \n\n            \n                \n                    If true, will prolong debounce time a bit.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         DataQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         DataQuery:53\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadIfNeeded\n                        \n                    \n                \n            \n            \n                \nloadIfNeeded()\n                \n            \n\n\n            \n                \n                    Inherited from         DataQuery\n\n                \n            \n            \n                \n                        Defined in         DataQuery:330\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataAsPromise\n                        \n                    \n                \n            \n            \n                \ndataAsPromise()\n                \n            \n\n\n            \n                \n                    Inherited from         DataQuery\n\n                \n            \n            \n                \n                        Defined in         DataQuery:137\n\n                \n            \n\n\n            \n                \n                    Returns the data as a promise, without having to create a subscription.\nIf cached data is available, this will return the data immediately; otherwise, this will\nload the data with an API request.\nExample\nconst node = dataService.getNode(someNodeId);\nnode.dataAsPromise().then(data => {\n  console.log('node data:', data);\n}).catch(error => console.error('oh no'));\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hydrateRaw\n                        \n                    \n                \n            \n            \n                \nhydrateRaw(preparedData: Promise)\n                \n            \n\n\n            \n                \n                    Inherited from         DataQuery\n\n                \n            \n            \n                \n                        Defined in         DataQuery:189\n\n                \n            \n\n\n            \n                \n                    Use when data has not yet been loaded but is available from elsewhere.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    preparedData\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invalidate\n                        \n                    \n                \n            \n            \n                \ninvalidate()\n                \n            \n\n\n            \n                \n                    Inherited from         DataQuery\n\n                \n            \n            \n                \n                        Defined in         DataQuery:219\n\n                \n            \n\n\n            \n                \n                    Deletes current data.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload()\n                \n            \n\n\n            \n                \n                    Inherited from         DataQuery\n\n                \n            \n            \n                \n                        Defined in         DataQuery:180\n\n                \n            \n\n\n            \n                \n                    Loads data.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadDebounced\n                        \n                    \n                \n            \n            \n                \nloadDebounced(interactive)\n                \n            \n\n\n            \n                \n                    Inherited from         DataQuery\n\n                \n            \n            \n                \n                        Defined in         DataQuery:208\n\n                \n            \n\n\n            \n                \n                    Loads data after a short delay. Will debounce.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    interactive\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.interactive\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribeLazy\n                        \n                    \n                \n            \n            \n                \nsubscribeLazy(...args: any[])\n                \n            \n\n\n            \n                \n                    Inherited from         DataQuery\n\n                \n            \n            \n                \n                        Defined in         DataQuery:247\n\n                \n            \n\n\n            \n                \n                    Will subscribe to the data, but not cause a reload unless there is no data.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        passed verbatim to #subscribe\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        params\n                    \n                \n\n\n                \n                    \n                        setparams(p)\n                    \n                \n                            \n                                \n                                    Defined in src/app/data-dgql/query.ts:326\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            p\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Observable, Subscriber } from 'rxjs';\nimport {\n  decodeNodeId,\n  encodeNodeId,\n  ListId,\n  ListParams,\n  NodeId,\n  NodeIdEnc,\n  nodeTypeFromTypename,\n} from './id';\nimport { QueriesService } from './queries/queries.service';\nimport { ListResult, queryList, queryNode } from './load';\nimport { PageInfo } from '../../generated/graphql-dgql';\n\nconst CACHE_FAST_DEBOUNCE_TIME_MS = 200;\nconst CACHE_INTERACTIVE_DEBOUNCE_TIME_MS = 500;\nconst CACHE_STALE_TIME_MS = 5000;\n\n/**\n * A piece of observable data.\n *\n * DataQuery is a stateful interface for interacting with an API object.\n * Instead of calling a function to make an API request, DataQuery lets you declare the ID (like an endpoint) and\n * request parameters (in {@link #params}) of the data you want, and will automatically load the data when needed.\n * Data can then be accessed synchronously with the {@link #current} property.\n *\n * Upon adding a subscriber with [#subscribe]{@link Observable#subscribe}, data will loaded from the API and stored in the\n * cache. Subsequent viewers can then immediately access the cached data.\n *\n * - To check if data is loaded, use {@link #hasData},\n *   and to check if data is still loading, use {@link #loading}.\n * - To (re-)load the data from the API, use {@link #load}.\n *   This happens automatically upon subscription after a sufficient delay (see debounce time constants).\n * - To add a subscriber without triggering this behavior, use {@link #subscribeLazy}, which will\n *   only make an API request if the data is not cached.\n * - To invalidate (i.e. delete) the cached data, use {@link #invalidate}.\n * - If you only need the data right now and don't want to deal with subscriptions, use {@link #dataAsPromise}\n *   to access it as a promise that will either return cached data or load new data.\n *\n * When done using a DataQuery subscription, it *must* be manually destroyed by calling\n * [`sub.unsubscribe()`]{@link Subscription#unsubscribe} on the Subscription object returned by\n * [subscribe]{@link Observable#subscribe}, as it may leak memory otherwise.\n *\n * See {@link DataNode} and {@link DataList} for the two main types of data that use DataQuery.\n *\n * @typeParam T - type of data accessible via .current\n * @typeParam R - type returned by innerQueryFn\n * @typeParam P - parameter type for innerQueryFn\n */\nexport abstract class DataQuery extends Observable {\n  /** The ID of this data. */\n  id: I;\n  loading = false; // TODO: maybe make this value observable too?\n  /** @ignore */\n  protected currentData?: T;\n  /** @ignore */\n  protected lastLoadTime = 0;\n  /** @ignore */\n  protected pSetParamsNoUpdate = false;\n\n  /** Returns true if data is currently available. */\n  get hasData(): boolean {\n    return this.currentData !== undefined;\n  }\n\n  /** The currently loaded data. */\n  get current(): T {\n    return this.currentData;\n  }\n\n  /** @ignore */\n  protected currentQueryParams?: P;\n  /**\n   * Parameters that will be passed to the request.\n   * Changing this property will automatically trigger a load.\n   */\n  get params(): P | undefined {\n    return this.currentQueryParams;\n  }\n  set params(p: P) {\n    this.currentQueryParams = p;\n    if (!this.pSetParamsNoUpdate) {\n      this.loadDebounced();\n    }\n  }\n\n  /** @ignore */\n  protected subscribers: Set> = new Set();\n  /** @ignore */\n  protected innerQueryFn: (id: I, p: P) => Promise;\n  /** @ignore */\n  protected innerMapFn: (r: R) => T;\n  /** @ignore */\n  protected stateLock = 0;\n  /** @ignore */\n  protected loadTimeout = null;\n  /** @ignore */\n  protected hydrated = false;\n  /** @ignore */\n  protected isNextSubLazy = false;\n\n  /** If true, will prolong debounce time a bit. */\n  interactive = false;\n\n  /**\n   * @ignore\n   * Creates a new DataQuery (you should never need to use this directly)\n   *\n   * @param id an identifier for the data being loaded\n   * @param query the inner query function\n   * @param map maps returned data from the query R to usable data T\n   */\n  constructor(id: I, query: (id: I, p: P) => Promise, map: (r: R) => T) {\n    super(subscriber => {\n      this.addSubscriber(subscriber, this.isNextSubLazy);\n      this.isNextSubLazy = false;\n    });\n    this.id = id;\n    this.innerQueryFn = query;\n    this.innerMapFn = map;\n  }\n\n  /**\n   * Returns the data as a promise, without having to create a subscription.\n   *\n   * If cached data is available, this will return the data immediately; otherwise, this will\n   * load the data with an API request.\n   *\n   * #### Example\n   * ```ts\n   * const node = dataService.getNode(someNodeId);\n   * node.dataAsPromise().then(data => {\n   *   console.log('node data:', data);\n   * }).catch(error => console.error('oh no'));\n   * ```\n   */\n  dataAsPromise(): Promise {\n    if (this.hasData) {\n      return Promise.resolve(this.current);\n    }\n    return new Promise((resolve, reject) => {\n      const sub = this.subscribe(data => {\n        resolve(data);\n        sub.unsubscribe();\n      }, error => {\n        reject(error);\n        sub.unsubscribe();\n      });\n    });\n  }\n\n  /** @ignore */\n  private loadImpl(fut: Promise) {\n    clearTimeout(this.loadTimeout);\n    this.loadTimeout = null;\n    this.lastLoadTime = Date.now();\n    this.loading = true;\n\n    // if load is called twice; only the newest load call will have an effect\n    const stateLock = ++this.stateLock;\n\n    fut.then(data => {\n      if (stateLock !== this.stateLock) {\n        return;\n      }\n      this.insertResult(data);\n      this.loading = false;\n      this.hydrated = false;\n    }).catch(error => {\n      if (stateLock !== this.stateLock) {\n        return;\n      }\n      this.emitErrorToAllSubscribers(error);\n      this.loading = false;\n      this.hydrated = false;\n    });\n  }\n\n  /** Loads data. */\n  load() {\n    this.hydrated = false;\n    this.loadImpl(this.innerQueryFn(this.id, this.currentQueryParams));\n  }\n\n  /**\n   * @internal\n   * Use when data has not yet been loaded but is available from elsewhere.\n   */\n  hydrateRaw(preparedData: Promise) {\n    if (this.hasData) {\n      return; // don't need hydration\n    }\n    this.hydrated = true;\n    this.loadImpl(preparedData);\n  }\n\n  /** Will load data if it's stale or not present. */\n  loadIfNeeded() {\n    if (this.loading) {\n      return;\n    }\n    if (!this.hasData || Date.now() - this.lastLoadTime > CACHE_STALE_TIME_MS) {\n      this.load();\n    }\n  }\n\n  /** Loads data after a short delay. Will debounce. */\n  loadDebounced(interactive = this.interactive) {\n    if (this.loadTimeout) {\n      return;\n    }\n    this.loadTimeout = setTimeout(() => {\n      this.loadTimeout = null;\n      this.load();\n    }, interactive ? CACHE_INTERACTIVE_DEBOUNCE_TIME_MS : CACHE_FAST_DEBOUNCE_TIME_MS);\n  }\n\n  /** Deletes current data. */\n  invalidate() {\n    this.currentData = undefined;\n    this.emitUpdateToAllSubscribers();\n  }\n\n  /** @ignore */\n  protected addSubscriber(subscriber: Subscriber, lazy: boolean) {\n    this.subscribers.add(subscriber);\n    if (this.current !== undefined) {\n      // data is available right now! emit current state\n      subscriber.next(this.current);\n    }\n\n    if (!this.hydrated && (!lazy || !this.hasData)) {\n      this.loadIfNeeded();\n    }\n\n    return {\n      unsubscribe: () => {\n        this.subscribers.delete(subscriber);\n      },\n    };\n  }\n\n  /**\n   * Will subscribe to the data, but not cause a reload unless there is no data.\n   * @param args passed verbatim to [#subscribe]{@link Observable#subscribe}\n   */\n  subscribeLazy(...args) {\n    this.isNextSubLazy = true;\n    return this.subscribe(...args);\n  }\n\n  /** @ignore */\n  emitUpdateToAllSubscribers() {\n    for (const sub of this.subscribers) {\n      sub.next(this.current);\n    }\n  }\n\n  /** @ignore */\n  emitErrorToAllSubscribers(error: unknown) {\n    for (const sub of this.subscribers) {\n      sub.error(error);\n    }\n  }\n\n  /** @ignore */\n  insertResult(result: R) {\n    this.currentData = this.innerMapFn(result);\n    this.emitUpdateToAllSubscribers();\n  }\n\n  /** Returns the number of subscribers for this data. */\n  get subscriberCount(): number {\n    return this.subscribers.size;\n  }\n}\n\n/** ignore */\nconst identity = id => id;\n\n/**\n * A cacheable node with no parameters.\n *\n * See {@link DataQuery} for more information, and {@link DataService} to obtain a DataNode.\n *\n * #### Example\n * ```html\n * \n *   Is it loading? {{thing$.loading ? 'yes' : 'no'}}\n *   Is the thing loaded? {{thing$.hasData ? 'yes' : 'no'}}\n *   \n *     Thing data: {{thing.something}}\n *   \n * \n * ```\n * ```ts\n * class ExampleComponent implements OnInit, OnDestroy {\n *   @Input() thingId: NodeId;\n *\n *   public thing$: DataNode;\n *   public thingSub: Subscription; // subscription to thing$\n *\n *   constructor(private dataService: DataService) {}}\n *\n *   ngOnInit() {\n *     // obtain the DataNode from the data service\n *     this.thing$ = this.dataService.getNode(this.thingId);\n *\n *     // subscribe to indicate that we want some data\n *     this.thingSub = this.thing$.subscribe();\n *   }\n *\n *   ngOnDestroy() {\n *     // remember to unsubscribe!!\n *     this.thingSub.unsubscribe();\n *   }\n * }\n * ```\n */\nexport class DataNode extends DataQuery {\n  /** @ignore */\n  constructor(queries: QueriesService, id: NodeId) {\n    super(id, queryNode(queries), identity);\n  }\n\n  set params(p) {\n    throw new Error('parameters not available on nodes');\n  }\n\n  loadIfNeeded() {\n    if (!this.loading && Date.now() - this.lastLoadTime > CACHE_STALE_TIME_MS) {\n      this.load();\n    }\n  }\n}\n\n/**\n * Provides a view into list of items.\n *\n * See {@link DataQuery} for more information, and {@link DataService} to obtain a DataList.\n *\n * - To access list items, use {@link #currentItems}.\n * - If you need the IDs as well, use {@link #current} (note that the Map is ordered).\n *\n * The current view is defined by following properties:\n *\n * - {@link #cursor}: the current NodeId cursor (see API documentation for details)\n * - {@link #count}: number of items to load\n * - {@link #forward}: if true, will load items after the cursor. If false, will load items before.\n * - {@link #filter}: filter object (type parameter F)\n *\n * Changing any of these properties will reload the list (debounced).\n *\n * @typeParam T - list item type\n * @typeParam F - list filter type\n *\n * #### Example\n * ```html\n * \n *   \n *     a thing! {{thing.something}}\n *   \n * \n * ```\n * ```ts\n * class ExampleComponent implements OnInit, OnDestroy {\n *   @Input() thingsListId: ListId;\n *\n *   things$: DataList; // filter type unknown because we're not using here\n *   thingsSub: Subscription;\n *\n *   constructor(private dataService: DataService) {}}\n *\n *   ngOnInit() {\n *     // obtain a list view from the data service\n *     this.things$ = this.dataService.getList(this.thingsListId);\n *\n *     // subscribe to the list to indicate that we want some data\n *     this.thingsSub = this.things$.subscribe();\n *   }\n *\n *   ngOnDestroy() {\n *     // remember to unsubscribe!!\n *     this.thingsSub.unsubscribe();\n *   }\n * }\n * ```\n */\nexport class DataList extends DataQuery, ListResult, ListParams> {\n  /** @ignore */\n  private pCursor?: NodeId;\n  /** @ignore */\n  private pCount = 10;\n  /** @ignore */\n  private pFilter?: F;\n  /** @ignore */\n  private pForward = true;\n  /** @ignore */\n  private pageInfo?: PageInfo;\n  /** @ignore */\n  private pTotalCount?: number;\n  /** @ignore */\n  private previouslyHadPageContents = false;\n  /** @ignore */\n  private pNodes: NodeCache;\n\n  /** @ignore */\n  constructor(queries: QueriesService, nodes: NodeCache, id: ListId) {\n    super(id, queryList(queries, nodes), result => {\n      this.pageInfo = result.pageInfo;\n      this.pTotalCount = result.totalCount;\n\n      // API *only* reports hasPreviousPage or hasNextPage correctly if we are navigating in that\n      // same direction. Hence, we need to amend pageInfo with prior knowledge.\n      if (this.forward) {\n        this.pageInfo.hasPreviousPage = this.previouslyHadPageContents;\n      } else {\n        this.pageInfo.hasNextPage = this.previouslyHadPageContents;\n      }\n      this.previouslyHadPageContents = !!result.items.size;\n\n      return result.items;\n    });\n    this.pNodes = nodes;\n    this.pSetParamsNoUpdate = true;\n    this.setParams();\n    this.pSetParamsNoUpdate = false;\n  }\n\n  /**\n   * @internal\n   * Updates the `params` value from list parameters\n   */\n  setParams() {\n    this.params = {\n      cursor: this.pCursor,\n      count: this.pCount,\n      forward: this.pForward,\n      filter: this.pFilter,\n    };\n  }\n\n  /** Returns the total number of items. Null if not loaded. */\n  get totalCount() {\n    return this.pTotalCount;\n  }\n\n  /** Returns the currently loaded items in an array. */\n  get currentItems(): T[] {\n    if (!this.hasData) {\n      return [];\n    }\n    return [...this.current.values()];\n  }\n\n  /** Current list filter object. */\n  get filter(): F | undefined {\n    return this.pFilter;\n  }\n  set filter(f: F) {\n    this.pFilter = f;\n    this.setParams();\n  }\n\n  /** The current pagination cursor (a node relative to which items will be loaded). Nullable. */\n  get cursor(): NodeId {\n    return this.pCursor;\n  }\n  set cursor(c: NodeId) {\n    this.pCursor = c;\n    this.setParams();\n  }\n\n  /** The max amount of items to be loaded. */\n  get count(): number {\n    return this.pCount;\n  }\n  set count(c: number) {\n    this.pCount = c;\n    this.setParams();\n  }\n\n  /** Whether to load items after the cursor (true), or items before the cursor (false). */\n  get forward(): boolean {\n    return this.pForward;\n  }\n  set forward(f: boolean) {\n    this.pForward = f;\n    this.setParams();\n  }\n\n  /** Returns the node ID of the first item on the current page. */\n  get firstPageItemId(): NodeId | null {\n    const firstKey = this.current ? this.current.keys().next()?.value || null : null;\n    return firstKey ? decodeNodeId(firstKey) : null;\n  }\n\n  /** Returns the node ID of the last item on the current page. */\n  get lastPageItemId(): NodeId | null {\n    if (!this.current) {\n      return;\n    }\n    const keys = [...this.current.keys()];\n    return keys[keys.length - 1] ? decodeNodeId(keys[keys.length - 1]) : null;\n  }\n\n  /** Returns true if the current result contains the given node. */\n  currentHasNode(key: NodeId): boolean {\n    return this.current?.has(encodeNodeId(key));\n  }\n\n  get hasPrevPage() {\n    return !this.pageInfo || this.pageInfo.hasPreviousPage;\n  }\n  get hasNextPage() {\n    return !this.pageInfo || this.pageInfo.hasNextPage;\n  }\n\n  /** Moves the view to the first page. */\n  firstPage() {\n    this.cursor = null;\n    this.forward = true;\n    this.previouslyHadPageContents = false;\n    this.invalidate();\n    return true;\n  }\n\n  /** Moves the view to the previous page. */\n  prevPage() {\n    if (this.pageInfo && !this.pageInfo.hasPreviousPage) {\n      return false;\n    }\n    this.cursor = this.firstPageItemId;\n    this.forward = false;\n    this.invalidate();\n    return true;\n  }\n\n  /** Moves the view to the next page. */\n  nextPage() {\n    if (this.pageInfo && !this.pageInfo.hasNextPage) {\n      return false;\n    }\n    this.cursor = this.lastPageItemId;\n    this.forward = true;\n    this.invalidate();\n    return true;\n  }\n\n  /**\n   * Hydrates this list with initial data in the API format\n   *\n   * If you've already got data from the API that contains the first page of this list, you can use\n   * this method to insert that data directly and avoid triggering a redundant API request.\n   *\n   * @param data a promise that returns the API data\n   * @typeParam IdT - equivalent to T\n   */\n  hydrateInitial(data: Promise>) {\n    this.hydrateRaw(data.then(value => ({\n      totalCount: value.totalCount,\n      pageInfo: value.pageInfo,\n      items: this.pNodes.insertNodes(value.nodes || [])\n    })));\n  }\n}\n\n/** List hydration object (constructing this manually shouldn't be necessary as it mirrors the structure of GQL objects) */\nexport type HydrateList = {\n  totalCount: number,\n  pageInfo: PageInfo,\n  /** This is nullable because it's nullable in the GQL schema. In practice it should always exist */\n  nodes?: (T | null)[]\n};\n\n/** Keeps a cache of DataNodes such that each NodeId has at most one associated DataNode. */\nexport class NodeCache {\n  // TODO: garbage collection? (nodes with zero subscribers)\n  nodes: Map> = new Map();\n\n  constructor(private queries: QueriesService) {}\n\n  private createNode(id: NodeId) {\n    const encodedId = encodeNodeId(id);\n    this.nodes.set(encodedId, new DataNode(this.queries, id));\n  }\n\n  /** Returns the DataNode for the given NodeId. */\n  getNode(id: NodeId): DataNode {\n    const encodedId = encodeNodeId(id);\n    if (!this.nodes.has(encodedId)) {\n      this.createNode(id);\n    }\n    return this.nodes.get(encodedId) as DataNode;\n  }\n\n  /**\n   * Inserts nodes into the cache and returns them as a map (in the same order).\n   *\n   * Note: the ID parameter of the node is only optional for type compatibility with the GQL schema.\n   * Nodes without an ID will be ignored.\n   */\n  insertNodes(nodes: T[]): Map {\n    const map = new Map();\n\n    for (const node of nodes) {\n      if (!node?.id) {\n        continue;\n      }\n      const type = nodeTypeFromTypename(node.__typename);\n      const id = { type, id: node.id };\n      const dataNode: DataNode = this.getNode(id);\n      if (!dataNode.hasData) {\n        // FIXME: different queries load different amounts of data, simple overwriting doesn't always have the desired effect\n        //  S1: distinguish between nodes and \"partial nodes\"?\n        //  S2: deep merge data?\n        dataNode.insertResult(node);\n      }\n      map.set(encodeNodeId(id), node);\n    }\n\n    return map;\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataQuery.html":{"url":"classes/DataQuery.html","title":"class - DataQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/query.ts\n        \n\n\n            \n                Description\n            \n            \n                A piece of observable data.\nDataQuery is a stateful interface for interacting with an API object.\nInstead of calling a function to make an API request, DataQuery lets you declare the ID (like an endpoint) and\nrequest parameters (in #params) of the data you want, and will automatically load the data when needed.\nData can then be accessed synchronously with the #current property.\nUpon adding a subscriber with #subscribe, data will loaded from the API and stored in the\ncache. Subsequent viewers can then immediately access the cached data.\n\nTo check if data is loaded, use #hasData,\nand to check if data is still loading, use #loading.\nTo (re-)load the data from the API, use #load.\nThis happens automatically upon subscription after a sufficient delay (see debounce time constants).\nTo add a subscriber without triggering this behavior, use #subscribeLazy, which will\nonly make an API request if the data is not cached.\nTo invalidate (i.e. delete) the cached data, use #invalidate.\nIf you only need the data right now and don't want to deal with subscriptions, use #dataAsPromise\nto access it as a promise that will either return cached data or load new data.\n\nWhen done using a DataQuery subscription, it must be manually destroyed by calling\nsub.unsubscribe() on the Subscription object returned by\nsubscribe, as it may leak memory otherwise.\nSee DataNode and DataList for the two main types of data that use DataQuery.\n\n            \n\n            \n                Extends\n            \n            \n                    Observable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                interactive\n                            \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dataAsPromise\n                            \n                            \n                                hydrateRaw\n                            \n                            \n                                invalidate\n                            \n                            \n                                load\n                            \n                            \n                                loadDebounced\n                            \n                            \n                                loadIfNeeded\n                            \n                            \n                                subscribeLazy\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasData\n                                \n                                \n                                    current\n                                \n                                \n                                    params\n                                \n                                \n                                    subscriberCount\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     I\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/query.ts:52\n                        \n                    \n\n            \n                \n                    The ID of this data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interactive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/query.ts:103\n                        \n                    \n\n            \n                \n                    If true, will prolong debounce time a bit.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/query.ts:53\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dataAsPromise\n                        \n                    \n                \n            \n            \n                \ndataAsPromise()\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:137\n                \n            \n\n\n            \n                \n                    Returns the data as a promise, without having to create a subscription.\nIf cached data is available, this will return the data immediately; otherwise, this will\nload the data with an API request.\nExample\nconst node = dataService.getNode(someNodeId);\nnode.dataAsPromise().then(data => {\n  console.log('node data:', data);\n}).catch(error => console.error('oh no'));\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hydrateRaw\n                        \n                    \n                \n            \n            \n                \nhydrateRaw(preparedData: Promise)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:189\n                \n            \n\n\n            \n                \n                    Use when data has not yet been loaded but is available from elsewhere.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    preparedData\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invalidate\n                        \n                    \n                \n            \n            \n                \ninvalidate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:219\n                \n            \n\n\n            \n                \n                    Deletes current data.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload()\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:180\n                \n            \n\n\n            \n                \n                    Loads data.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadDebounced\n                        \n                    \n                \n            \n            \n                \nloadDebounced(interactive)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:208\n                \n            \n\n\n            \n                \n                    Loads data after a short delay. Will debounce.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    interactive\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.interactive\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadIfNeeded\n                        \n                    \n                \n            \n            \n                \nloadIfNeeded()\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:198\n                \n            \n\n\n            \n                \n                    Will load data if it's stale or not present.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribeLazy\n                        \n                    \n                \n            \n            \n                \nsubscribeLazy(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:247\n                \n            \n\n\n            \n                \n                    Will subscribe to the data, but not cause a reload unless there is no data.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        passed verbatim to #subscribe\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasData\n                    \n                \n\n                \n                    \n                        gethasData()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data-dgql/query.ts:62\n                                \n                            \n                    \n                        \n                                Returns true if data is currently available.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        current\n                    \n                \n\n                \n                    \n                        getcurrent()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data-dgql/query.ts:67\n                                \n                            \n                    \n                        \n                                The currently loaded data.\n\n\n                                \n                                    Returns :     T\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        params\n                    \n                \n\n                \n                    \n                        getparams()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data-dgql/query.ts:77\n                                \n                            \n                    \n                        \n                                Parameters that will be passed to the request.\nChanging this property will automatically trigger a load.\n\n\n                                \n                                    Returns :     P | undefined\n\n                                \n                        \n                    \n\n                \n                    \n                        setparams(p: P)\n                    \n                \n                            \n                                \n                                    Defined in src/app/data-dgql/query.ts:80\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            p\n                                                    \n                                                            \n                                                                        P\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        subscriberCount\n                    \n                \n\n                \n                    \n                        getsubscriberCount()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data-dgql/query.ts:273\n                                \n                            \n                    \n                        \n                                Returns the number of subscribers for this data.\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Observable, Subscriber } from 'rxjs';\nimport {\n  decodeNodeId,\n  encodeNodeId,\n  ListId,\n  ListParams,\n  NodeId,\n  NodeIdEnc,\n  nodeTypeFromTypename,\n} from './id';\nimport { QueriesService } from './queries/queries.service';\nimport { ListResult, queryList, queryNode } from './load';\nimport { PageInfo } from '../../generated/graphql-dgql';\n\nconst CACHE_FAST_DEBOUNCE_TIME_MS = 200;\nconst CACHE_INTERACTIVE_DEBOUNCE_TIME_MS = 500;\nconst CACHE_STALE_TIME_MS = 5000;\n\n/**\n * A piece of observable data.\n *\n * DataQuery is a stateful interface for interacting with an API object.\n * Instead of calling a function to make an API request, DataQuery lets you declare the ID (like an endpoint) and\n * request parameters (in {@link #params}) of the data you want, and will automatically load the data when needed.\n * Data can then be accessed synchronously with the {@link #current} property.\n *\n * Upon adding a subscriber with [#subscribe]{@link Observable#subscribe}, data will loaded from the API and stored in the\n * cache. Subsequent viewers can then immediately access the cached data.\n *\n * - To check if data is loaded, use {@link #hasData},\n *   and to check if data is still loading, use {@link #loading}.\n * - To (re-)load the data from the API, use {@link #load}.\n *   This happens automatically upon subscription after a sufficient delay (see debounce time constants).\n * - To add a subscriber without triggering this behavior, use {@link #subscribeLazy}, which will\n *   only make an API request if the data is not cached.\n * - To invalidate (i.e. delete) the cached data, use {@link #invalidate}.\n * - If you only need the data right now and don't want to deal with subscriptions, use {@link #dataAsPromise}\n *   to access it as a promise that will either return cached data or load new data.\n *\n * When done using a DataQuery subscription, it *must* be manually destroyed by calling\n * [`sub.unsubscribe()`]{@link Subscription#unsubscribe} on the Subscription object returned by\n * [subscribe]{@link Observable#subscribe}, as it may leak memory otherwise.\n *\n * See {@link DataNode} and {@link DataList} for the two main types of data that use DataQuery.\n *\n * @typeParam T - type of data accessible via .current\n * @typeParam R - type returned by innerQueryFn\n * @typeParam P - parameter type for innerQueryFn\n */\nexport abstract class DataQuery extends Observable {\n  /** The ID of this data. */\n  id: I;\n  loading = false; // TODO: maybe make this value observable too?\n  /** @ignore */\n  protected currentData?: T;\n  /** @ignore */\n  protected lastLoadTime = 0;\n  /** @ignore */\n  protected pSetParamsNoUpdate = false;\n\n  /** Returns true if data is currently available. */\n  get hasData(): boolean {\n    return this.currentData !== undefined;\n  }\n\n  /** The currently loaded data. */\n  get current(): T {\n    return this.currentData;\n  }\n\n  /** @ignore */\n  protected currentQueryParams?: P;\n  /**\n   * Parameters that will be passed to the request.\n   * Changing this property will automatically trigger a load.\n   */\n  get params(): P | undefined {\n    return this.currentQueryParams;\n  }\n  set params(p: P) {\n    this.currentQueryParams = p;\n    if (!this.pSetParamsNoUpdate) {\n      this.loadDebounced();\n    }\n  }\n\n  /** @ignore */\n  protected subscribers: Set> = new Set();\n  /** @ignore */\n  protected innerQueryFn: (id: I, p: P) => Promise;\n  /** @ignore */\n  protected innerMapFn: (r: R) => T;\n  /** @ignore */\n  protected stateLock = 0;\n  /** @ignore */\n  protected loadTimeout = null;\n  /** @ignore */\n  protected hydrated = false;\n  /** @ignore */\n  protected isNextSubLazy = false;\n\n  /** If true, will prolong debounce time a bit. */\n  interactive = false;\n\n  /**\n   * @ignore\n   * Creates a new DataQuery (you should never need to use this directly)\n   *\n   * @param id an identifier for the data being loaded\n   * @param query the inner query function\n   * @param map maps returned data from the query R to usable data T\n   */\n  constructor(id: I, query: (id: I, p: P) => Promise, map: (r: R) => T) {\n    super(subscriber => {\n      this.addSubscriber(subscriber, this.isNextSubLazy);\n      this.isNextSubLazy = false;\n    });\n    this.id = id;\n    this.innerQueryFn = query;\n    this.innerMapFn = map;\n  }\n\n  /**\n   * Returns the data as a promise, without having to create a subscription.\n   *\n   * If cached data is available, this will return the data immediately; otherwise, this will\n   * load the data with an API request.\n   *\n   * #### Example\n   * ```ts\n   * const node = dataService.getNode(someNodeId);\n   * node.dataAsPromise().then(data => {\n   *   console.log('node data:', data);\n   * }).catch(error => console.error('oh no'));\n   * ```\n   */\n  dataAsPromise(): Promise {\n    if (this.hasData) {\n      return Promise.resolve(this.current);\n    }\n    return new Promise((resolve, reject) => {\n      const sub = this.subscribe(data => {\n        resolve(data);\n        sub.unsubscribe();\n      }, error => {\n        reject(error);\n        sub.unsubscribe();\n      });\n    });\n  }\n\n  /** @ignore */\n  private loadImpl(fut: Promise) {\n    clearTimeout(this.loadTimeout);\n    this.loadTimeout = null;\n    this.lastLoadTime = Date.now();\n    this.loading = true;\n\n    // if load is called twice; only the newest load call will have an effect\n    const stateLock = ++this.stateLock;\n\n    fut.then(data => {\n      if (stateLock !== this.stateLock) {\n        return;\n      }\n      this.insertResult(data);\n      this.loading = false;\n      this.hydrated = false;\n    }).catch(error => {\n      if (stateLock !== this.stateLock) {\n        return;\n      }\n      this.emitErrorToAllSubscribers(error);\n      this.loading = false;\n      this.hydrated = false;\n    });\n  }\n\n  /** Loads data. */\n  load() {\n    this.hydrated = false;\n    this.loadImpl(this.innerQueryFn(this.id, this.currentQueryParams));\n  }\n\n  /**\n   * @internal\n   * Use when data has not yet been loaded but is available from elsewhere.\n   */\n  hydrateRaw(preparedData: Promise) {\n    if (this.hasData) {\n      return; // don't need hydration\n    }\n    this.hydrated = true;\n    this.loadImpl(preparedData);\n  }\n\n  /** Will load data if it's stale or not present. */\n  loadIfNeeded() {\n    if (this.loading) {\n      return;\n    }\n    if (!this.hasData || Date.now() - this.lastLoadTime > CACHE_STALE_TIME_MS) {\n      this.load();\n    }\n  }\n\n  /** Loads data after a short delay. Will debounce. */\n  loadDebounced(interactive = this.interactive) {\n    if (this.loadTimeout) {\n      return;\n    }\n    this.loadTimeout = setTimeout(() => {\n      this.loadTimeout = null;\n      this.load();\n    }, interactive ? CACHE_INTERACTIVE_DEBOUNCE_TIME_MS : CACHE_FAST_DEBOUNCE_TIME_MS);\n  }\n\n  /** Deletes current data. */\n  invalidate() {\n    this.currentData = undefined;\n    this.emitUpdateToAllSubscribers();\n  }\n\n  /** @ignore */\n  protected addSubscriber(subscriber: Subscriber, lazy: boolean) {\n    this.subscribers.add(subscriber);\n    if (this.current !== undefined) {\n      // data is available right now! emit current state\n      subscriber.next(this.current);\n    }\n\n    if (!this.hydrated && (!lazy || !this.hasData)) {\n      this.loadIfNeeded();\n    }\n\n    return {\n      unsubscribe: () => {\n        this.subscribers.delete(subscriber);\n      },\n    };\n  }\n\n  /**\n   * Will subscribe to the data, but not cause a reload unless there is no data.\n   * @param args passed verbatim to [#subscribe]{@link Observable#subscribe}\n   */\n  subscribeLazy(...args) {\n    this.isNextSubLazy = true;\n    return this.subscribe(...args);\n  }\n\n  /** @ignore */\n  emitUpdateToAllSubscribers() {\n    for (const sub of this.subscribers) {\n      sub.next(this.current);\n    }\n  }\n\n  /** @ignore */\n  emitErrorToAllSubscribers(error: unknown) {\n    for (const sub of this.subscribers) {\n      sub.error(error);\n    }\n  }\n\n  /** @ignore */\n  insertResult(result: R) {\n    this.currentData = this.innerMapFn(result);\n    this.emitUpdateToAllSubscribers();\n  }\n\n  /** Returns the number of subscribers for this data. */\n  get subscriberCount(): number {\n    return this.subscribers.size;\n  }\n}\n\n/** ignore */\nconst identity = id => id;\n\n/**\n * A cacheable node with no parameters.\n *\n * See {@link DataQuery} for more information, and {@link DataService} to obtain a DataNode.\n *\n * #### Example\n * ```html\n * \n *   Is it loading? {{thing$.loading ? 'yes' : 'no'}}\n *   Is the thing loaded? {{thing$.hasData ? 'yes' : 'no'}}\n *   \n *     Thing data: {{thing.something}}\n *   \n * \n * ```\n * ```ts\n * class ExampleComponent implements OnInit, OnDestroy {\n *   @Input() thingId: NodeId;\n *\n *   public thing$: DataNode;\n *   public thingSub: Subscription; // subscription to thing$\n *\n *   constructor(private dataService: DataService) {}}\n *\n *   ngOnInit() {\n *     // obtain the DataNode from the data service\n *     this.thing$ = this.dataService.getNode(this.thingId);\n *\n *     // subscribe to indicate that we want some data\n *     this.thingSub = this.thing$.subscribe();\n *   }\n *\n *   ngOnDestroy() {\n *     // remember to unsubscribe!!\n *     this.thingSub.unsubscribe();\n *   }\n * }\n * ```\n */\nexport class DataNode extends DataQuery {\n  /** @ignore */\n  constructor(queries: QueriesService, id: NodeId) {\n    super(id, queryNode(queries), identity);\n  }\n\n  set params(p) {\n    throw new Error('parameters not available on nodes');\n  }\n\n  loadIfNeeded() {\n    if (!this.loading && Date.now() - this.lastLoadTime > CACHE_STALE_TIME_MS) {\n      this.load();\n    }\n  }\n}\n\n/**\n * Provides a view into list of items.\n *\n * See {@link DataQuery} for more information, and {@link DataService} to obtain a DataList.\n *\n * - To access list items, use {@link #currentItems}.\n * - If you need the IDs as well, use {@link #current} (note that the Map is ordered).\n *\n * The current view is defined by following properties:\n *\n * - {@link #cursor}: the current NodeId cursor (see API documentation for details)\n * - {@link #count}: number of items to load\n * - {@link #forward}: if true, will load items after the cursor. If false, will load items before.\n * - {@link #filter}: filter object (type parameter F)\n *\n * Changing any of these properties will reload the list (debounced).\n *\n * @typeParam T - list item type\n * @typeParam F - list filter type\n *\n * #### Example\n * ```html\n * \n *   \n *     a thing! {{thing.something}}\n *   \n * \n * ```\n * ```ts\n * class ExampleComponent implements OnInit, OnDestroy {\n *   @Input() thingsListId: ListId;\n *\n *   things$: DataList; // filter type unknown because we're not using here\n *   thingsSub: Subscription;\n *\n *   constructor(private dataService: DataService) {}}\n *\n *   ngOnInit() {\n *     // obtain a list view from the data service\n *     this.things$ = this.dataService.getList(this.thingsListId);\n *\n *     // subscribe to the list to indicate that we want some data\n *     this.thingsSub = this.things$.subscribe();\n *   }\n *\n *   ngOnDestroy() {\n *     // remember to unsubscribe!!\n *     this.thingsSub.unsubscribe();\n *   }\n * }\n * ```\n */\nexport class DataList extends DataQuery, ListResult, ListParams> {\n  /** @ignore */\n  private pCursor?: NodeId;\n  /** @ignore */\n  private pCount = 10;\n  /** @ignore */\n  private pFilter?: F;\n  /** @ignore */\n  private pForward = true;\n  /** @ignore */\n  private pageInfo?: PageInfo;\n  /** @ignore */\n  private pTotalCount?: number;\n  /** @ignore */\n  private previouslyHadPageContents = false;\n  /** @ignore */\n  private pNodes: NodeCache;\n\n  /** @ignore */\n  constructor(queries: QueriesService, nodes: NodeCache, id: ListId) {\n    super(id, queryList(queries, nodes), result => {\n      this.pageInfo = result.pageInfo;\n      this.pTotalCount = result.totalCount;\n\n      // API *only* reports hasPreviousPage or hasNextPage correctly if we are navigating in that\n      // same direction. Hence, we need to amend pageInfo with prior knowledge.\n      if (this.forward) {\n        this.pageInfo.hasPreviousPage = this.previouslyHadPageContents;\n      } else {\n        this.pageInfo.hasNextPage = this.previouslyHadPageContents;\n      }\n      this.previouslyHadPageContents = !!result.items.size;\n\n      return result.items;\n    });\n    this.pNodes = nodes;\n    this.pSetParamsNoUpdate = true;\n    this.setParams();\n    this.pSetParamsNoUpdate = false;\n  }\n\n  /**\n   * @internal\n   * Updates the `params` value from list parameters\n   */\n  setParams() {\n    this.params = {\n      cursor: this.pCursor,\n      count: this.pCount,\n      forward: this.pForward,\n      filter: this.pFilter,\n    };\n  }\n\n  /** Returns the total number of items. Null if not loaded. */\n  get totalCount() {\n    return this.pTotalCount;\n  }\n\n  /** Returns the currently loaded items in an array. */\n  get currentItems(): T[] {\n    if (!this.hasData) {\n      return [];\n    }\n    return [...this.current.values()];\n  }\n\n  /** Current list filter object. */\n  get filter(): F | undefined {\n    return this.pFilter;\n  }\n  set filter(f: F) {\n    this.pFilter = f;\n    this.setParams();\n  }\n\n  /** The current pagination cursor (a node relative to which items will be loaded). Nullable. */\n  get cursor(): NodeId {\n    return this.pCursor;\n  }\n  set cursor(c: NodeId) {\n    this.pCursor = c;\n    this.setParams();\n  }\n\n  /** The max amount of items to be loaded. */\n  get count(): number {\n    return this.pCount;\n  }\n  set count(c: number) {\n    this.pCount = c;\n    this.setParams();\n  }\n\n  /** Whether to load items after the cursor (true), or items before the cursor (false). */\n  get forward(): boolean {\n    return this.pForward;\n  }\n  set forward(f: boolean) {\n    this.pForward = f;\n    this.setParams();\n  }\n\n  /** Returns the node ID of the first item on the current page. */\n  get firstPageItemId(): NodeId | null {\n    const firstKey = this.current ? this.current.keys().next()?.value || null : null;\n    return firstKey ? decodeNodeId(firstKey) : null;\n  }\n\n  /** Returns the node ID of the last item on the current page. */\n  get lastPageItemId(): NodeId | null {\n    if (!this.current) {\n      return;\n    }\n    const keys = [...this.current.keys()];\n    return keys[keys.length - 1] ? decodeNodeId(keys[keys.length - 1]) : null;\n  }\n\n  /** Returns true if the current result contains the given node. */\n  currentHasNode(key: NodeId): boolean {\n    return this.current?.has(encodeNodeId(key));\n  }\n\n  get hasPrevPage() {\n    return !this.pageInfo || this.pageInfo.hasPreviousPage;\n  }\n  get hasNextPage() {\n    return !this.pageInfo || this.pageInfo.hasNextPage;\n  }\n\n  /** Moves the view to the first page. */\n  firstPage() {\n    this.cursor = null;\n    this.forward = true;\n    this.previouslyHadPageContents = false;\n    this.invalidate();\n    return true;\n  }\n\n  /** Moves the view to the previous page. */\n  prevPage() {\n    if (this.pageInfo && !this.pageInfo.hasPreviousPage) {\n      return false;\n    }\n    this.cursor = this.firstPageItemId;\n    this.forward = false;\n    this.invalidate();\n    return true;\n  }\n\n  /** Moves the view to the next page. */\n  nextPage() {\n    if (this.pageInfo && !this.pageInfo.hasNextPage) {\n      return false;\n    }\n    this.cursor = this.lastPageItemId;\n    this.forward = true;\n    this.invalidate();\n    return true;\n  }\n\n  /**\n   * Hydrates this list with initial data in the API format\n   *\n   * If you've already got data from the API that contains the first page of this list, you can use\n   * this method to insert that data directly and avoid triggering a redundant API request.\n   *\n   * @param data a promise that returns the API data\n   * @typeParam IdT - equivalent to T\n   */\n  hydrateInitial(data: Promise>) {\n    this.hydrateRaw(data.then(value => ({\n      totalCount: value.totalCount,\n      pageInfo: value.pageInfo,\n      items: this.pNodes.insertNodes(value.nodes || [])\n    })));\n  }\n}\n\n/** List hydration object (constructing this manually shouldn't be necessary as it mirrors the structure of GQL objects) */\nexport type HydrateList = {\n  totalCount: number,\n  pageInfo: PageInfo,\n  /** This is nullable because it's nullable in the GQL schema. In practice it should always exist */\n  nodes?: (T | null)[]\n};\n\n/** Keeps a cache of DataNodes such that each NodeId has at most one associated DataNode. */\nexport class NodeCache {\n  // TODO: garbage collection? (nodes with zero subscribers)\n  nodes: Map> = new Map();\n\n  constructor(private queries: QueriesService) {}\n\n  private createNode(id: NodeId) {\n    const encodedId = encodeNodeId(id);\n    this.nodes.set(encodedId, new DataNode(this.queries, id));\n  }\n\n  /** Returns the DataNode for the given NodeId. */\n  getNode(id: NodeId): DataNode {\n    const encodedId = encodeNodeId(id);\n    if (!this.nodes.has(encodedId)) {\n      this.createNode(id);\n    }\n    return this.nodes.get(encodedId) as DataNode;\n  }\n\n  /**\n   * Inserts nodes into the cache and returns them as a map (in the same order).\n   *\n   * Note: the ID parameter of the node is only optional for type compatibility with the GQL schema.\n   * Nodes without an ID will be ignored.\n   */\n  insertNodes(nodes: T[]): Map {\n    const map = new Map();\n\n    for (const node of nodes) {\n      if (!node?.id) {\n        continue;\n      }\n      const type = nodeTypeFromTypename(node.__typename);\n      const id = { type, id: node.id };\n      const dataNode: DataNode = this.getNode(id);\n      if (!dataNode.hasData) {\n        // FIXME: different queries load different amounts of data, simple overwriting doesn't always have the desired effect\n        //  S1: distinguish between nodes and \"partial nodes\"?\n        //  S2: deep merge data?\n        dataNode.insertResult(node);\n      }\n      map.set(encodeNodeId(id), node);\n    }\n\n    return map;\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/index.ts\n        \n\n\n            \n                Description\n            \n            \n                The data service provides access to the backend API.\nIt provides automatic caching of data to reducing unnecessary requests, and a mutation API that\nautomatically propagates updates to all observers of affected data.\nTo get data, use #getNode and #getList. To mutate data, use #mutations.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mutations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getList\n                            \n                            \n                                getNode\n                            \n                            \n                                invalidateLists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(queries: QueriesService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data-dgql/index.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queries\n                                                  \n                                                        \n                                                                        QueriesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getList\n                        \n                    \n                \n            \n            \n                \ngetList(id: ListId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/index.ts:67\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        F\n                    \n                \n            \n\n            \n                \n                    Returns a new DataList for the given ListId.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                ListId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DataList\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNode\n                        \n                    \n                \n            \n            \n                \ngetNode(id: NodeId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/index.ts:34\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Returns the DataNode for the given NodeId.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                NodeId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DataNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invalidateLists\n                        \n                    \n                \n            \n            \n                \ninvalidateLists(selector: ListId | ListType)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/index.ts:39\n                \n            \n\n\n            \n                \n                    Invalidates all lists with the given id or type.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                                ListId | ListType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        mutations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Mutations\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/index.ts:24\n                        \n                    \n\n            \n                \n                    Data mutations.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { NodeId, ListId, ListType, encodeListId, decodeListId, ListIdEnc } from './id';\nimport { Injectable } from '@angular/core';\nimport { QueriesService } from './queries/queries.service';\nimport { DataNode, DataList, NodeCache } from './query';\nimport { Mutations } from '@app/data-dgql/mutate';\n\n/**\n * The data service provides access to the backend API.\n * It provides automatic caching of data to reducing unnecessary requests, and a mutation API that\n * automatically propagates updates to all observers of affected data.\n *\n * To get data, use {@link #getNode} and {@link #getList}. To mutate data, use {@link #mutations}.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport default class DataService {\n  /** @ignore */\n  nodes: NodeCache;\n  /** @ignore */\n  lists: Map>> = new Map();\n\n  /** Data mutations. */\n  mutations: Mutations;\n\n  constructor(\n    private queries: QueriesService\n  ) {\n    this.nodes = new NodeCache(queries);\n    this.mutations = new Mutations(queries, this.nodes, this.invalidateLists.bind(this));\n  }\n\n  /** Returns the {@link DataNode} for the given {@link NodeId}. */\n  getNode(id: NodeId): DataNode {\n    return this.nodes.getNode(id);\n  }\n\n  /** Invalidates all lists with the given id or type. */\n  invalidateLists(selector: ListId | ListType) {\n    if (typeof selector === 'object') {\n      const id = encodeListId(selector);\n      if (!this.lists.has(id)) {\n        return;\n      }\n      const lists = this.lists.get(id);\n      for (const list of lists) {\n        if (list.subscriberCount) {\n          // invalidating the list causes layout changes we might not want (e.g. emptying a list)\n          // list.invalidate();\n          list.loadDebounced();\n        }\n      }\n    } else {\n      for (const [id, lists] of this.lists) {\n        if (decodeListId(id).type === selector) {\n          for (const list of lists) {\n            if (list.subscriberCount) {\n              list.loadDebounced();\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /** Returns a new {@link DataList} for the given {@link ListId}. */\n  getList(id: ListId): DataList {\n    const encodedId = encodeListId(id);\n    const list = new DataList(this.queries, this.nodes, id);\n    if (!this.lists.has(encodedId)) {\n      this.lists.set(encodedId, new Set());\n    }\n    this.lists.get(encodedId).add(list);\n    return list;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData.html":{"url":"interfaces/DialogData.html","title":"interface - DialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface that defines what data is injected to the dialog.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            components\n                                        \n                                \n                                \n                                        \n                                            locations\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        components\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        components:         NodeId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        locations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        locations:         NodeId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport { FormControl, Validators } from '@angular/forms';\nimport { IssueCategory } from '../../../generated/graphql';\nimport { UserNotifyService } from '@app/user-notify/user-notify.service';\nimport { CCIMSValidators } from '@app/utils/validators';\nimport { CreateIssueInput } from '../../../generated/graphql-dgql';\nimport { NodeId, NodeType } from '@app/data-dgql/id';\nimport DataService from '@app/data-dgql';\nimport {LocalIssueData} from '@app/issue-detail/issue-sidebar.component';\nimport {RemoveDialogComponent} from '@app/dialogs/remove-dialog/remove-dialog.component';\n\n@Component({\n  selector: 'app-create-issue-dialog',\n  templateUrl: './create-issue-dialog.component.html',\n  styleUrls: ['./create-issue-dialog.component.scss']\n})\n/**\n * This component opens a dialog for the issue creation.\n */\nexport class CreateIssueDialogComponent implements OnInit {\n  @ViewChild('body') body;\n\n  public loading = false;\n  public saveFailed = false;\n\n  constructor(public dialogRef: MatDialogRef,\n              private dialog: MatDialog,\n              private dataService: DataService,\n              @Inject(MAT_DIALOG_DATA) public data: DialogData,\n              private notify: UserNotifyService\n  ) {\n  }\n\n  // form controls for the form fields\n  title = new FormControl('', [CCIMSValidators.nameValidator, Validators.required]);\n  category = new FormControl('', [Validators.required]);\n\n  public issueData: LocalIssueData = {\n    components: [],\n    locations: [],\n    labels: [],\n    assignees: [],\n    linksToIssues: [],\n  };\n\n  ngOnInit(): void {\n    // sets up the issue category as Unclassified\n    this.category.setValue(IssueCategory.Unclassified);\n    this.dialogRef.disableClose = true;\n\n    // updates items to be selected\n    this.updateSelectedItems();\n  }\n\n  /**\n   * Updates items to be selected in the Create Issue page,\n   * including 1) components and 2) locations.\n   */\n  private updateSelectedItems() {\n    // updates components\n    for (const componentId of this.data.components) {\n      this.issueData.components.push(componentId);\n      this.issueData.locations.push(componentId);\n    }\n\n    if (this.data.locations) {\n      // updates locations\n      for (const componentId of this.data.locations) {\n        this.issueData.locations.push(componentId);\n      }\n    }\n  }\n\n  onNoClick(showConfirmDialog: boolean): void {\n    if (showConfirmDialog) {\n      this.dialog.open(RemoveDialogComponent,\n        {\n          data: {\n            title: 'Really discard issue?',\n            messages: ['Are you sure you want to discard this issue?'],\n            confirmButtonText: 'Confirm'\n          }\n        }).afterClosed().subscribe((close) => {\n        if (close) {\n          this.dialogRef.close();\n        }\n      });\n    } else {\n      this.dialogRef.close();\n    }\n  }\n\n  afterAlertClose(): void {\n    this.saveFailed = false;\n  }\n\n  onCreate() {\n    const issueData: CreateIssueInput = {\n      title: this.title.value,\n      body: this.body.code,\n      category: this.category.value,\n      clientMutationID: Math.random().toString(36),\n      components: this.issueData.components.map(node => node.id),\n      locations: this.issueData.locations.map(node => node.id),\n      labels: this.issueData.labels.map(node => node.id),\n      assignees: this.issueData.assignees.map(node => node.id),\n    };\n    this.loading = true;\n    this.saveFailed = false;\n    this.dataService.mutations.createIssue(issueData).then(async result => {\n      const issueId = { type: NodeType.Issue, id: result.id };\n      const promises = [];\n      for (const linked of this.issueData.linksToIssues) {\n        promises.push(this.dataService.mutations.linkIssue(Math.random().toString(), issueId, linked).catch(err => {\n          this.notify.notifyError('Failed to link issue!', err);\n          // aborting on this error would cause weird non-recoverable state so we won't rethrow it\n        }));\n      }\n      await Promise.all(promises);\n\n      this.dialogRef.close(true);\n    }).catch(err => {\n      this.notify.notifyError('Failed to create issue!', err);\n      this.saveFailed = true;\n    }).finally(() => {\n      this.loading = false;\n    });\n  }\n}\n\n/**\n * Interface that defines what data is injected to the dialog.\n */\nexport interface DialogData {\n  projectId: string;\n  // initial state of the issue's component list\n  components: NodeId[];\n  // initial state of the issue's location list\n  locations: NodeId[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData-1.html":{"url":"interfaces/DialogData-1.html","title":"interface - DialogData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dialogs/remove-dialog/remove-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            confirmButtonText\n                                        \n                                \n                                \n                                        \n                                            messages\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            verificationName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        confirmButtonText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmButtonText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If set, shows this text as the text in the confirm button. If not set, button shows 'Delete'\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        messages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        messages:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The list of lines shown in the dialog. If a line starts with a space, the line will be indented\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        verificationName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        verificationName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If set, shows a text box that forces the user to type the specified text before being able to click the confirm button\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormControl, ValidatorFn} from '@angular/forms';\n\n/**\n * This component is a confirmation dialog for anything that involves deleting\n *\n * #### Example\n * ```ts\n * // ...\n *\n * constructor(private dialog: MatDialog, ...)\n *\n * // ...\n *\n * const dialogRef = this.dialog.open(RemoveDialogComponent,\n * {\n *   data: {\n *     title: 'This is the title of the dialog',\n *     messages: ['Every entry is a new line',\n *                'This is the next line',\n *                ' Lines beginning with a space will be indented'],\n *     verificationName: 'In order for the user to be able to click the confirm button, this text has to be typed',\n *     confirmButtonText: 'This is the text of the confirm button'\n *   }\n * });\n *\n * dialogRef.afterClosed().subscribe(confirm => {\n *   if (confirm) {\n *     console.log('Deleted!');\n *   } else {\n *     console.log('Not deleted!');\n *   }\n * });\n * ```\n */\n@Component({\n  selector: 'app-remove-dialog',\n  templateUrl: './remove-dialog.component.html',\n  styleUrls: ['./remove-dialog.component.scss']\n})\nexport class RemoveDialogComponent implements OnInit {\n  matchValidator: ValidatorFn = control => {\n    return control.value === this.data.verificationName ? null : {'Names don\\'t match': true};\n  }\n\n  verificationNameInput = new FormControl('', this.matchValidator);\n\n  constructor(public dialogRef: MatDialogRef,\n              @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n  }\n\n  ngOnInit(): void {\n    this.verificationNameInput.markAsTouched();\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close(false);\n  }\n\n  onDeleteClick(): void {\n    this.dialogRef.close(true);\n  }\n}\n\nexport interface DialogData {\n  title: string;\n  /** The list of lines shown in the dialog. If a line starts with a space, the line will be indented */\n  messages: Array;\n  /** If set, shows a text box that forces the user to type the specified text before being able to click the confirm button */\n  verificationName?: string;\n  /** If set, shows this text as the text in the confirm button. If not set, button shows 'Delete' */\n  confirmButtonText?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterSelection.html":{"url":"interfaces/FilterSelection.html","title":"interface - FilterSelection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FilterSelection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/label-search/label-search.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            labels\n                                        \n                                \n                                \n                                        \n                                            texts\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        labels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        labels:         FilterLabel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FilterLabel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        texts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        texts:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { concat, of, Subject, Observable, BehaviorSubject } from 'rxjs';\nimport { catchError, distinctUntilChanged, switchMap, tap } from 'rxjs/operators';\nimport { FilterLabel, isFilterLabel, LabelStoreService } from '../../data/label/label-store.service';\nimport { StateService } from '../../state.service';\n\n/**\n * This component is responsible for the display of the search bar above the graph.\n * It allows for filtering issues by multiple labels and text fragments.\n */\n@Component({\n  selector: 'app-label-search',\n  templateUrl: './label-search.component.html',\n  styleUrls: ['./label-search.component.scss']\n})\nexport class LabelSearchComponent implements OnInit {\n  public filterSelection$ = new BehaviorSubject({labels: [], texts: []});\n\n  labels$: Observable;\n  labelsLoading = false;\n  labelsInput$ = new Subject();\n  selectedLabels: FilterElement[] = [];\n\n  constructor(private labelStore: LabelStoreService, private ss: StateService) {\n  }\n\n  ngOnInit() {\n      this.loadLabels();\n  }\n\n  trackByFn(item: FilterLabel) {\n      return item.id;\n  }\n\n  /**\n   * Emit value representing label and text fragments in the search bar via this.filterSelection$\n   */\n  emitSelectedLabels() {\n    const selection: FilterSelection = {texts: [], labels: []};\n    // find out which elements in search bar correspond to an existing label on the backend and which to a text fragment\n    selection.texts = this.selectedLabels.filter(item => !isFilterLabel(item)).map(item => item.name);\n    selection.labels = this.selectedLabels.filter(label => isFilterLabel(label)) as FilterLabel[];\n    this.filterSelection$.next(selection);\n  }\n\n  /**\n   * Load all labels from backend that match the currently typed in ng-select element\n   */\n  private loadLabels() {\n      this.labels$ = concat(\n          of([]), // default items\n          this.labelsInput$.pipe(\n              distinctUntilChanged(),\n              tap(() => this.labelsLoading = true),\n              switchMap(term => this.labelStore.getMatchingLabels(this.ss.state.project.node.id, term).pipe(\n                  catchError(() => of([])), // empty list on error\n                  tap(() => this.labelsLoading = false)\n              ))\n          )\n      );\n  }\n\n}\n\n\n/**\n * The bar can contain elements standing for labels and elements for text fragments.\n */\ntype FilterElement = TextFragment | FilterLabel;\n\ninterface TextFragment {\n  name: string;\n}\n\nexport interface FilterSelection {\n  texts: string[];\n  labels: FilterLabel[];\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterState.html":{"url":"interfaces/FilterState.html","title":"interface - FilterState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FilterState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/shared.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            selectedCategories\n                                        \n                                \n                                \n                                        \n                                            selectedFilter\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        selectedCategories\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedCategories:         SelectedCategories\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SelectedCategories\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedFilter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedFilter:         FilterSelection\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FilterSelection\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IssueCategory } from 'src/generated/graphql';\nimport { FilterSelection } from './label-search/label-search.component';\n\ntype EnumDictionary = {\n  [K in T]: U;\n};\n\nexport type SelectedCategories = EnumDictionary;\n\nexport interface FilterState {\n  selectedCategories: SelectedCategories;\n  selectedFilter: FilterSelection;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FrameComponent.html":{"url":"components/FrameComponent.html","title":"component - FrameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FrameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/frame/frame.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component holds the 'frame' of the application\ncontaining the top bar, the side bar and the main container\ninto which individual views are rendered based on the url.\nIt also bridges between top bar and side menu:\n When the user clicks the menu icon in the topbar, this is communicated to\nthe navigation drawer via this.showDrawer\nThe component itself checks whether the user is currently in a project\nand passes this information down to the sidebar and topbar. It also checks the\ndisplay size and makes the side menu an overlay when on handset size.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-frame\n            \n\n            \n                styleUrls\n                ./frame.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./frame.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isHandset$\n                            \n                            \n                                    Public\n                                isProjectSet$\n                            \n                            \n                                    Public\n                                showDrawer\n                            \n                            \n                                    Public\n                                ss\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                prepareRoute\n                            \n                            \n                                toggleMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver, ss: StateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/frame/frame.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ss\n                                                  \n                                                        \n                                                                        StateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        prepareRoute\n                        \n                    \n                \n            \n            \n                \nprepareRoute(outlet: RouterOutlet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/frame/frame.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    outlet\n                                    \n                                                RouterOutlet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenu\n                        \n                    \n                \n            \n            \n                \ntoggleMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/frame/frame.component.ts:45\n                \n            \n\n\n            \n                \n                    When user clicks sandwich this.showDrawer boolean changes value.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isHandset$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.breakpointObserver.observe(Breakpoints.Handset)\n  .pipe(\n    map(result => result.matches),\n    shareReplay()\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/frame/frame.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isProjectSet$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/frame/frame.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        showDrawer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/frame/frame.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ss\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StateService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/frame/frame.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { StateService } from '@app/state.service';\nimport { RouterOutlet } from '@angular/router';\nimport { slider } from '../route-animations';\n\n/**\n * This component holds the 'frame' of the application\n * containing the top bar, the side bar and the main container\n * into which individual views are rendered based on the url.\n * It also bridges between top bar and side menu:\n *  When the user clicks the menu icon in the topbar, this is communicated to\n * the navigation drawer via this.showDrawer\n * The component itself checks whether the user is currently in a project\n * and passes this information down to the sidebar and topbar. It also checks the\n * display size and makes the side menu an overlay when on handset size.\n */\n@Component({\n  selector: 'app-frame',\n  templateUrl: './frame.component.html',\n  styleUrls: ['./frame.component.scss'],\n  animations: [slider]\n})\nexport class FrameComponent {\n  public isProjectSet$ = new BehaviorSubject(false);\n  public showDrawer = true;\n\n  isHandset$: Observable = this.breakpointObserver.observe(Breakpoints.Handset)\n  .pipe(\n    map(result => result.matches),\n    shareReplay()\n  );\n\n  constructor(private breakpointObserver: BreakpointObserver, public ss: StateService) {\n    ss.state$.pipe(\n      map(state => (state.project != null))\n    ).subscribe(this.isProjectSet$);\n  }\n\n  /**\n   * When user clicks sandwich this.showDrawer boolean changes value.\n   */\n  toggleMenu(): void {\n    this.showDrawer = !this.showDrawer;\n  }\n\n  prepareRoute(outlet: RouterOutlet) {\n    return outlet && outlet.activatedRouteData && outlet.activatedRouteData.animation;\n  }\n}\n\n    \n\n    \n        \n\n\n  \n  \n    \n  \n  \n    \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./frame.component.scss\n                \n                .sidenav-container {\n  height: 100%;\n  grid-column: 1 / 2;\n  grid-row: 2 / 3;\n}\n\n.sidenav {\n  width: 200px;\n}\n\n.sidenav .mat-toolbar {\n  background: inherit;\n}\n\n.sidenav-content {\n  display: flex;\n  flex-flow: column;\n  height: 100%;\n}\n\n.container {\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  flex: 1 1 auto;\n  overflow-y: auto;\n}\n\n.root {\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: auto 1fr;\n  height: 100%;\n  overflow-y: hidden;\n}\n\n.header {\n  grid-column: 1 / 2;\n  grid-row: 1 / 2;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'FrameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GraphComponent.html":{"url":"classes/GraphComponent.html","title":"class - GraphComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GraphComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/issue-graph/graph-data.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                issues\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromGQL\n                            \n                            \n                                    Static\n                                mapFromGQL\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:134\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:135\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:133\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        fromGQL\n                        \n                    \n                \n            \n            \n                \n                    \n                    fromGQL(gqlGraphComponent: GQLGraphComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/graph-data.ts:141\n                \n            \n\n\n            \n                \n                    Convert backend representation of graph component to frontend representation.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    gqlGraphComponent\n                                    \n                                                GQLGraphComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        backend representation of component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GraphComponent\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapFromGQL\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapFromGQL(gqlGraphComponents: GQLGraphComponent[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/graph-data.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gqlGraphComponents\n                                    \n                                                GQLGraphComponent[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Map\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Component,\n  ComponentInterface, GetIssueGraphDataDocument,\n  GetIssueGraphDataQuery,\n  Issue,\n  IssueCategory,\n  IssuePage,\n  Maybe,\n  Scalars\n} from 'src/generated/graphql';\nimport {DefaultDictionary} from 'typescript-collections';\n\n\ntype LocationId = Scalars['ID'];\ntype GraphFolder = [LocationId, IssueCategory];\ntype GraphLocation = GraphInterface | GraphComponent;\n\n/**\n * Describes data needed by IssueGraphComponent to draw the graph.\n */\nexport interface GraphData {\n  components: Map;\n  interfaces: Map;\n  // graphLocations is the union of all components and interfaces\n  graphLocations: Map;\n  relatedFolders: DefaultDictionary;\n  linkIssues: GraphIssue[];\n}\n\nexport class GraphDataFactory {\n  /**\n   * Removes the counts for issue categories which are filtered. This is a workaround\n   * needed because the backend doesn't allow us to only ask for the counts of non-filtered categories.\n   * @param graphData the data with the unnecessary counts\n   * @param activeCategories the categories corresponding to the activated toggles of the graph component\n   */\n  static removeFilteredData(graphData: GraphData, activeCategories: IssueCategory[]) {\n    for (const location of graphData.graphLocations.values()) {\n      location.issues = new Map([...location.issues].filter(([category, count]) => activeCategories.includes(category)));\n    }\n    return graphData;\n  }\n\n  /**\n   * Converts the data required for the graph from the format the backend delivers into a\n   * GraphData object as needed by the IssueGraphComponent for rendering.\n   */\n  static graphDataFromGQL(data: GetIssueGraphDataQuery): GraphData {\n    const components = GraphComponent.mapFromGQL(data.node.components.nodes);\n    const interfaces = GraphInterface.mapFromGQL(data.node.interfaces.nodes);\n    const graphLocations: Map = new Map([...components, ...interfaces]);\n    const linkIssues = data.node.linkingIssues.nodes.map(gqlIssue => GraphIssue.fromGQL(gqlIssue));\n    const relatedFolders = computeRelatedFolders(linkIssues, interfaces);\n    return {\n      components, interfaces, graphLocations, relatedFolders, linkIssues\n    };\n  }\n}\n\n/**\n * @param locationIds ids of components and interfaces\n * @param interfaces mapping from\n * @returns locationIds with ids of components offering interfaces whoose id is alo in locationIds removed\n */\nfunction removeOfferingComponents(locationIds: string[], interfaces: Map) {\n  // compute components that offer an interface whoose id is in locationIds\n  const interfaceOfferingComponents: Set = new Set(locationIds.filter(locationId => interfaces.has(locationId)).map(interfaceId =>\n    interfaces.get(interfaceId).offeredBy\n  ));\n  // return location ids with the components offering an interface with id in locationIds removed\n  return locationIds.filter(id => !interfaceOfferingComponents.has(id));\n}\n\n/**\n * Issues counts\n * @param bugCount number of bugs\n * @param featureRequestCount number of feature requests\n * @param unclassifiedCount number of unclassified issues\n * @returns counts mapping IssueCategory values to the count specified by arguments\n */\nfunction issueCounts(bugCount: number, featureRequestCount: number, unclassifiedCount: number): Map {\n  return new Map([\n    [IssueCategory.Bug, bugCount],\n    [IssueCategory.FeatureRequest, featureRequestCount],\n    [IssueCategory.Unclassified, unclassifiedCount]\n  ]);\n}\n\n// backend data format for interface\ntype GQLInterface = Pick & {\n  component?: Maybe>;\n  bugs?: Maybe>;\n  featureRequests?: Maybe>;\n  unclassified?: Maybe>;\n  consumedBy?: Maybe>>> }>\n};\n\n// desired frontend data format for interface\nexport class GraphInterface {\n  id: Scalars['ID'];\n  name: string;\n  offeredBy: Scalars['ID'];\n  consumedBy: Scalars['ID'][];\n  issues: Map;\n\n  static fromGQL(gqlInterface: GQLInterface): GraphInterface {\n    const issues = issueCounts(gqlInterface.bugs.totalCount,\n      gqlInterface.featureRequests.totalCount,\n      gqlInterface.unclassified.totalCount);\n    return {\n      id: gqlInterface.id,\n      name: gqlInterface.name,\n      offeredBy: gqlInterface.component.id,\n      consumedBy: gqlInterface.consumedBy.nodes.map(component => component.id),\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlInterfaces: GQLInterface[]): Map {\n    return new Map(gqlInterfaces.map(gqlInterface => [gqlInterface.id, GraphInterface.fromGQL(gqlInterface)]));\n  }\n}\n\n// backend data format for component\ntype GQLGraphComponent = Pick & {\n  bugs?: Pick;\n  featureRequests?: Pick;\n  unclassified?: Pick;\n};\n\n// desired frontend data format for component\nexport class GraphComponent {\n  name: string;\n  id: Scalars['ID'];\n  issues: Map;\n\n  /**\n   * Convert backend representation of graph component to frontend representation.\n   * @param gqlGraphComponent backend representation of component\n   */\n  static fromGQL(gqlGraphComponent: GQLGraphComponent): GraphComponent {\n    const issues = issueCounts(gqlGraphComponent.bugs.totalCount,\n      gqlGraphComponent.featureRequests.totalCount,\n      gqlGraphComponent.unclassified.totalCount);\n    return {\n      id: gqlGraphComponent.id,\n      name: gqlGraphComponent.name,\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlGraphComponents: GQLGraphComponent[]): Map {\n    return new Map(gqlGraphComponents.map(gqlComponent => [gqlComponent.id, GraphComponent.fromGQL(gqlComponent)]));\n  }\n}\n\n// backend data fromat for issue\ntype GQLIssue = Pick & {\n  locations?: {\n    nodes?: (Pick | Pick)[];\n  };\n  linksToIssues?: {\n    nodes?: (Pick & { locations?: { nodes?: (Pick | Pick)[]; }; })[];\n  };\n};\n\n// desired frontend data format for issue\nclass GraphIssue {\n  id: Scalars['ID'];\n  category: IssueCategory;\n  locations: LocationId[];\n  linksIssues?: GraphIssue[];\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlPartialIssue backend representation of issue\n   */\n  static fromGQLNoLinks(gqlPartialIssue: Pick) {\n    return {\n      id: gqlPartialIssue.id,\n      category: gqlPartialIssue.category,\n      locations: gqlPartialIssue.locations.nodes.map(location => location.id)\n    };\n  }\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlIssue backend representation of Issues\n   */\n  static fromGQL(gqlIssue: GQLIssue): GraphIssue {\n    const issue: GraphIssue = this.fromGQLNoLinks(gqlIssue);\n    issue.linksIssues = gqlIssue.linksToIssues.nodes.map(gqlPartialIssue => this.fromGQLNoLinks(gqlPartialIssue));\n    return issue;\n  }\n}\n\n/**\n * The graph displays edges between issue folders that contain issues which link\n * to each other. This function computes this information. Drawing is handled in\n * IssueGraphComponent.\n * @param linkIssues contains only issues that link to other issues\n * @param interfaces mapping from ids of locations to interfaces attached to locations\n */\nfunction computeRelatedFolders(linkIssues: GraphIssue[], interfaces: Map):\n  DefaultDictionary {\n  let targetFolders: GraphFolder[];\n  const relatedFolders: DefaultDictionary = new DefaultDictionary(() => []);\n  for (const issue of linkIssues) {\n    const sourceLocationIds = removeOfferingComponents(issue.locations, interfaces);\n    const sourceFolders: GraphFolder[] = sourceLocationIds.map(locationId => [locationId, issue.category]);\n    targetFolders = [];\n    for (const linkedIssue of issue.linksIssues) {\n      const targetLocationIds = removeOfferingComponents(linkedIssue.locations, interfaces);\n      // @ts-ignore\n      targetFolders = targetFolders.concat(targetLocationIds.map(locationId => [locationId, linkedIssue.category]));\n    }\n    sourceFolders.forEach(folder =>\n      relatedFolders.setValue(folder,\n        (relatedFolders.getValue(folder).concat(targetFolders))));\n  }\n  return relatedFolders;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphData.html":{"url":"interfaces/GraphData.html","title":"interface - GraphData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GraphData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/issue-graph/graph-data.ts\n        \n\n\n            \n                Description\n            \n            \n                Describes data needed by IssueGraphComponent to draw the graph.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            components\n                                        \n                                \n                                \n                                        \n                                            graphLocations\n                                        \n                                \n                                \n                                        \n                                            interfaces\n                                        \n                                \n                                \n                                        \n                                            linkIssues\n                                        \n                                \n                                \n                                        \n                                            relatedFolders\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        components\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        components:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        graphLocations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        graphLocations:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interfaces\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interfaces:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        linkIssues\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        linkIssues:         GraphIssue[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GraphIssue[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        relatedFolders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        relatedFolders:         DefaultDictionary\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DefaultDictionary\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  ComponentInterface, GetIssueGraphDataDocument,\n  GetIssueGraphDataQuery,\n  Issue,\n  IssueCategory,\n  IssuePage,\n  Maybe,\n  Scalars\n} from 'src/generated/graphql';\nimport {DefaultDictionary} from 'typescript-collections';\n\n\ntype LocationId = Scalars['ID'];\ntype GraphFolder = [LocationId, IssueCategory];\ntype GraphLocation = GraphInterface | GraphComponent;\n\n/**\n * Describes data needed by IssueGraphComponent to draw the graph.\n */\nexport interface GraphData {\n  components: Map;\n  interfaces: Map;\n  // graphLocations is the union of all components and interfaces\n  graphLocations: Map;\n  relatedFolders: DefaultDictionary;\n  linkIssues: GraphIssue[];\n}\n\nexport class GraphDataFactory {\n  /**\n   * Removes the counts for issue categories which are filtered. This is a workaround\n   * needed because the backend doesn't allow us to only ask for the counts of non-filtered categories.\n   * @param graphData the data with the unnecessary counts\n   * @param activeCategories the categories corresponding to the activated toggles of the graph component\n   */\n  static removeFilteredData(graphData: GraphData, activeCategories: IssueCategory[]) {\n    for (const location of graphData.graphLocations.values()) {\n      location.issues = new Map([...location.issues].filter(([category, count]) => activeCategories.includes(category)));\n    }\n    return graphData;\n  }\n\n  /**\n   * Converts the data required for the graph from the format the backend delivers into a\n   * GraphData object as needed by the IssueGraphComponent for rendering.\n   */\n  static graphDataFromGQL(data: GetIssueGraphDataQuery): GraphData {\n    const components = GraphComponent.mapFromGQL(data.node.components.nodes);\n    const interfaces = GraphInterface.mapFromGQL(data.node.interfaces.nodes);\n    const graphLocations: Map = new Map([...components, ...interfaces]);\n    const linkIssues = data.node.linkingIssues.nodes.map(gqlIssue => GraphIssue.fromGQL(gqlIssue));\n    const relatedFolders = computeRelatedFolders(linkIssues, interfaces);\n    return {\n      components, interfaces, graphLocations, relatedFolders, linkIssues\n    };\n  }\n}\n\n/**\n * @param locationIds ids of components and interfaces\n * @param interfaces mapping from\n * @returns locationIds with ids of components offering interfaces whoose id is alo in locationIds removed\n */\nfunction removeOfferingComponents(locationIds: string[], interfaces: Map) {\n  // compute components that offer an interface whoose id is in locationIds\n  const interfaceOfferingComponents: Set = new Set(locationIds.filter(locationId => interfaces.has(locationId)).map(interfaceId =>\n    interfaces.get(interfaceId).offeredBy\n  ));\n  // return location ids with the components offering an interface with id in locationIds removed\n  return locationIds.filter(id => !interfaceOfferingComponents.has(id));\n}\n\n/**\n * Issues counts\n * @param bugCount number of bugs\n * @param featureRequestCount number of feature requests\n * @param unclassifiedCount number of unclassified issues\n * @returns counts mapping IssueCategory values to the count specified by arguments\n */\nfunction issueCounts(bugCount: number, featureRequestCount: number, unclassifiedCount: number): Map {\n  return new Map([\n    [IssueCategory.Bug, bugCount],\n    [IssueCategory.FeatureRequest, featureRequestCount],\n    [IssueCategory.Unclassified, unclassifiedCount]\n  ]);\n}\n\n// backend data format for interface\ntype GQLInterface = Pick & {\n  component?: Maybe>;\n  bugs?: Maybe>;\n  featureRequests?: Maybe>;\n  unclassified?: Maybe>;\n  consumedBy?: Maybe>>> }>\n};\n\n// desired frontend data format for interface\nexport class GraphInterface {\n  id: Scalars['ID'];\n  name: string;\n  offeredBy: Scalars['ID'];\n  consumedBy: Scalars['ID'][];\n  issues: Map;\n\n  static fromGQL(gqlInterface: GQLInterface): GraphInterface {\n    const issues = issueCounts(gqlInterface.bugs.totalCount,\n      gqlInterface.featureRequests.totalCount,\n      gqlInterface.unclassified.totalCount);\n    return {\n      id: gqlInterface.id,\n      name: gqlInterface.name,\n      offeredBy: gqlInterface.component.id,\n      consumedBy: gqlInterface.consumedBy.nodes.map(component => component.id),\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlInterfaces: GQLInterface[]): Map {\n    return new Map(gqlInterfaces.map(gqlInterface => [gqlInterface.id, GraphInterface.fromGQL(gqlInterface)]));\n  }\n}\n\n// backend data format for component\ntype GQLGraphComponent = Pick & {\n  bugs?: Pick;\n  featureRequests?: Pick;\n  unclassified?: Pick;\n};\n\n// desired frontend data format for component\nexport class GraphComponent {\n  name: string;\n  id: Scalars['ID'];\n  issues: Map;\n\n  /**\n   * Convert backend representation of graph component to frontend representation.\n   * @param gqlGraphComponent backend representation of component\n   */\n  static fromGQL(gqlGraphComponent: GQLGraphComponent): GraphComponent {\n    const issues = issueCounts(gqlGraphComponent.bugs.totalCount,\n      gqlGraphComponent.featureRequests.totalCount,\n      gqlGraphComponent.unclassified.totalCount);\n    return {\n      id: gqlGraphComponent.id,\n      name: gqlGraphComponent.name,\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlGraphComponents: GQLGraphComponent[]): Map {\n    return new Map(gqlGraphComponents.map(gqlComponent => [gqlComponent.id, GraphComponent.fromGQL(gqlComponent)]));\n  }\n}\n\n// backend data fromat for issue\ntype GQLIssue = Pick & {\n  locations?: {\n    nodes?: (Pick | Pick)[];\n  };\n  linksToIssues?: {\n    nodes?: (Pick & { locations?: { nodes?: (Pick | Pick)[]; }; })[];\n  };\n};\n\n// desired frontend data format for issue\nclass GraphIssue {\n  id: Scalars['ID'];\n  category: IssueCategory;\n  locations: LocationId[];\n  linksIssues?: GraphIssue[];\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlPartialIssue backend representation of issue\n   */\n  static fromGQLNoLinks(gqlPartialIssue: Pick) {\n    return {\n      id: gqlPartialIssue.id,\n      category: gqlPartialIssue.category,\n      locations: gqlPartialIssue.locations.nodes.map(location => location.id)\n    };\n  }\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlIssue backend representation of Issues\n   */\n  static fromGQL(gqlIssue: GQLIssue): GraphIssue {\n    const issue: GraphIssue = this.fromGQLNoLinks(gqlIssue);\n    issue.linksIssues = gqlIssue.linksToIssues.nodes.map(gqlPartialIssue => this.fromGQLNoLinks(gqlPartialIssue));\n    return issue;\n  }\n}\n\n/**\n * The graph displays edges between issue folders that contain issues which link\n * to each other. This function computes this information. Drawing is handled in\n * IssueGraphComponent.\n * @param linkIssues contains only issues that link to other issues\n * @param interfaces mapping from ids of locations to interfaces attached to locations\n */\nfunction computeRelatedFolders(linkIssues: GraphIssue[], interfaces: Map):\n  DefaultDictionary {\n  let targetFolders: GraphFolder[];\n  const relatedFolders: DefaultDictionary = new DefaultDictionary(() => []);\n  for (const issue of linkIssues) {\n    const sourceLocationIds = removeOfferingComponents(issue.locations, interfaces);\n    const sourceFolders: GraphFolder[] = sourceLocationIds.map(locationId => [locationId, issue.category]);\n    targetFolders = [];\n    for (const linkedIssue of issue.linksIssues) {\n      const targetLocationIds = removeOfferingComponents(linkedIssue.locations, interfaces);\n      // @ts-ignore\n      targetFolders = targetFolders.concat(targetLocationIds.map(locationId => [locationId, linkedIssue.category]));\n    }\n    sourceFolders.forEach(folder =>\n      relatedFolders.setValue(folder,\n        (relatedFolders.getValue(folder).concat(targetFolders))));\n  }\n  return relatedFolders;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GraphDataFactory.html":{"url":"classes/GraphDataFactory.html","title":"class - GraphDataFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GraphDataFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/issue-graph/graph-data.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                graphDataFromGQL\n                            \n                            \n                                    Static\n                                removeFilteredData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        graphDataFromGQL\n                        \n                    \n                \n            \n            \n                \n                    \n                    graphDataFromGQL(data: GetIssueGraphDataQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/graph-data.ts:48\n                \n            \n\n\n            \n                \n                    Converts the data required for the graph from the format the backend delivers into a\nGraphData object as needed by the IssueGraphComponent for rendering.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetIssueGraphDataQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GraphData\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        removeFilteredData\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeFilteredData(graphData: GraphData, activeCategories: IssueCategory[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/graph-data.ts:37\n                \n            \n\n\n            \n                \n                    Removes the counts for issue categories which are filtered. This is a workaround\nneeded because the backend doesn't allow us to only ask for the counts of non-filtered categories.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    graphData\n                                    \n                                                GraphData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the data with the unnecessary counts\n\n                                    \n                                \n                                \n                                    activeCategories\n                                    \n                                            IssueCategory[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the categories corresponding to the activated toggles of the graph component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GraphData\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Component,\n  ComponentInterface, GetIssueGraphDataDocument,\n  GetIssueGraphDataQuery,\n  Issue,\n  IssueCategory,\n  IssuePage,\n  Maybe,\n  Scalars\n} from 'src/generated/graphql';\nimport {DefaultDictionary} from 'typescript-collections';\n\n\ntype LocationId = Scalars['ID'];\ntype GraphFolder = [LocationId, IssueCategory];\ntype GraphLocation = GraphInterface | GraphComponent;\n\n/**\n * Describes data needed by IssueGraphComponent to draw the graph.\n */\nexport interface GraphData {\n  components: Map;\n  interfaces: Map;\n  // graphLocations is the union of all components and interfaces\n  graphLocations: Map;\n  relatedFolders: DefaultDictionary;\n  linkIssues: GraphIssue[];\n}\n\nexport class GraphDataFactory {\n  /**\n   * Removes the counts for issue categories which are filtered. This is a workaround\n   * needed because the backend doesn't allow us to only ask for the counts of non-filtered categories.\n   * @param graphData the data with the unnecessary counts\n   * @param activeCategories the categories corresponding to the activated toggles of the graph component\n   */\n  static removeFilteredData(graphData: GraphData, activeCategories: IssueCategory[]) {\n    for (const location of graphData.graphLocations.values()) {\n      location.issues = new Map([...location.issues].filter(([category, count]) => activeCategories.includes(category)));\n    }\n    return graphData;\n  }\n\n  /**\n   * Converts the data required for the graph from the format the backend delivers into a\n   * GraphData object as needed by the IssueGraphComponent for rendering.\n   */\n  static graphDataFromGQL(data: GetIssueGraphDataQuery): GraphData {\n    const components = GraphComponent.mapFromGQL(data.node.components.nodes);\n    const interfaces = GraphInterface.mapFromGQL(data.node.interfaces.nodes);\n    const graphLocations: Map = new Map([...components, ...interfaces]);\n    const linkIssues = data.node.linkingIssues.nodes.map(gqlIssue => GraphIssue.fromGQL(gqlIssue));\n    const relatedFolders = computeRelatedFolders(linkIssues, interfaces);\n    return {\n      components, interfaces, graphLocations, relatedFolders, linkIssues\n    };\n  }\n}\n\n/**\n * @param locationIds ids of components and interfaces\n * @param interfaces mapping from\n * @returns locationIds with ids of components offering interfaces whoose id is alo in locationIds removed\n */\nfunction removeOfferingComponents(locationIds: string[], interfaces: Map) {\n  // compute components that offer an interface whoose id is in locationIds\n  const interfaceOfferingComponents: Set = new Set(locationIds.filter(locationId => interfaces.has(locationId)).map(interfaceId =>\n    interfaces.get(interfaceId).offeredBy\n  ));\n  // return location ids with the components offering an interface with id in locationIds removed\n  return locationIds.filter(id => !interfaceOfferingComponents.has(id));\n}\n\n/**\n * Issues counts\n * @param bugCount number of bugs\n * @param featureRequestCount number of feature requests\n * @param unclassifiedCount number of unclassified issues\n * @returns counts mapping IssueCategory values to the count specified by arguments\n */\nfunction issueCounts(bugCount: number, featureRequestCount: number, unclassifiedCount: number): Map {\n  return new Map([\n    [IssueCategory.Bug, bugCount],\n    [IssueCategory.FeatureRequest, featureRequestCount],\n    [IssueCategory.Unclassified, unclassifiedCount]\n  ]);\n}\n\n// backend data format for interface\ntype GQLInterface = Pick & {\n  component?: Maybe>;\n  bugs?: Maybe>;\n  featureRequests?: Maybe>;\n  unclassified?: Maybe>;\n  consumedBy?: Maybe>>> }>\n};\n\n// desired frontend data format for interface\nexport class GraphInterface {\n  id: Scalars['ID'];\n  name: string;\n  offeredBy: Scalars['ID'];\n  consumedBy: Scalars['ID'][];\n  issues: Map;\n\n  static fromGQL(gqlInterface: GQLInterface): GraphInterface {\n    const issues = issueCounts(gqlInterface.bugs.totalCount,\n      gqlInterface.featureRequests.totalCount,\n      gqlInterface.unclassified.totalCount);\n    return {\n      id: gqlInterface.id,\n      name: gqlInterface.name,\n      offeredBy: gqlInterface.component.id,\n      consumedBy: gqlInterface.consumedBy.nodes.map(component => component.id),\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlInterfaces: GQLInterface[]): Map {\n    return new Map(gqlInterfaces.map(gqlInterface => [gqlInterface.id, GraphInterface.fromGQL(gqlInterface)]));\n  }\n}\n\n// backend data format for component\ntype GQLGraphComponent = Pick & {\n  bugs?: Pick;\n  featureRequests?: Pick;\n  unclassified?: Pick;\n};\n\n// desired frontend data format for component\nexport class GraphComponent {\n  name: string;\n  id: Scalars['ID'];\n  issues: Map;\n\n  /**\n   * Convert backend representation of graph component to frontend representation.\n   * @param gqlGraphComponent backend representation of component\n   */\n  static fromGQL(gqlGraphComponent: GQLGraphComponent): GraphComponent {\n    const issues = issueCounts(gqlGraphComponent.bugs.totalCount,\n      gqlGraphComponent.featureRequests.totalCount,\n      gqlGraphComponent.unclassified.totalCount);\n    return {\n      id: gqlGraphComponent.id,\n      name: gqlGraphComponent.name,\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlGraphComponents: GQLGraphComponent[]): Map {\n    return new Map(gqlGraphComponents.map(gqlComponent => [gqlComponent.id, GraphComponent.fromGQL(gqlComponent)]));\n  }\n}\n\n// backend data fromat for issue\ntype GQLIssue = Pick & {\n  locations?: {\n    nodes?: (Pick | Pick)[];\n  };\n  linksToIssues?: {\n    nodes?: (Pick & { locations?: { nodes?: (Pick | Pick)[]; }; })[];\n  };\n};\n\n// desired frontend data format for issue\nclass GraphIssue {\n  id: Scalars['ID'];\n  category: IssueCategory;\n  locations: LocationId[];\n  linksIssues?: GraphIssue[];\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlPartialIssue backend representation of issue\n   */\n  static fromGQLNoLinks(gqlPartialIssue: Pick) {\n    return {\n      id: gqlPartialIssue.id,\n      category: gqlPartialIssue.category,\n      locations: gqlPartialIssue.locations.nodes.map(location => location.id)\n    };\n  }\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlIssue backend representation of Issues\n   */\n  static fromGQL(gqlIssue: GQLIssue): GraphIssue {\n    const issue: GraphIssue = this.fromGQLNoLinks(gqlIssue);\n    issue.linksIssues = gqlIssue.linksToIssues.nodes.map(gqlPartialIssue => this.fromGQLNoLinks(gqlPartialIssue));\n    return issue;\n  }\n}\n\n/**\n * The graph displays edges between issue folders that contain issues which link\n * to each other. This function computes this information. Drawing is handled in\n * IssueGraphComponent.\n * @param linkIssues contains only issues that link to other issues\n * @param interfaces mapping from ids of locations to interfaces attached to locations\n */\nfunction computeRelatedFolders(linkIssues: GraphIssue[], interfaces: Map):\n  DefaultDictionary {\n  let targetFolders: GraphFolder[];\n  const relatedFolders: DefaultDictionary = new DefaultDictionary(() => []);\n  for (const issue of linkIssues) {\n    const sourceLocationIds = removeOfferingComponents(issue.locations, interfaces);\n    const sourceFolders: GraphFolder[] = sourceLocationIds.map(locationId => [locationId, issue.category]);\n    targetFolders = [];\n    for (const linkedIssue of issue.linksIssues) {\n      const targetLocationIds = removeOfferingComponents(linkedIssue.locations, interfaces);\n      // @ts-ignore\n      targetFolders = targetFolders.concat(targetLocationIds.map(locationId => [locationId, linkedIssue.category]));\n    }\n    sourceFolders.forEach(folder =>\n      relatedFolders.setValue(folder,\n        (relatedFolders.getValue(folder).concat(targetFolders))));\n  }\n  return relatedFolders;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GraphInterface.html":{"url":"classes/GraphInterface.html","title":"class - GraphInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GraphInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/issue-graph/graph-data.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                consumedBy\n                            \n                            \n                                id\n                            \n                            \n                                issues\n                            \n                            \n                                name\n                            \n                            \n                                offeredBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromGQL\n                            \n                            \n                                    Static\n                                mapFromGQL\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        consumedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        offeredBy\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:102\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        fromGQL\n                        \n                    \n                \n            \n            \n                \n                    \n                    fromGQL(gqlInterface: GQLInterface)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/graph-data.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gqlInterface\n                                    \n                                                GQLInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GraphInterface\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapFromGQL\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapFromGQL(gqlInterfaces: GQLInterface[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/graph-data.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gqlInterfaces\n                                    \n                                                GQLInterface[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Map\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Component,\n  ComponentInterface, GetIssueGraphDataDocument,\n  GetIssueGraphDataQuery,\n  Issue,\n  IssueCategory,\n  IssuePage,\n  Maybe,\n  Scalars\n} from 'src/generated/graphql';\nimport {DefaultDictionary} from 'typescript-collections';\n\n\ntype LocationId = Scalars['ID'];\ntype GraphFolder = [LocationId, IssueCategory];\ntype GraphLocation = GraphInterface | GraphComponent;\n\n/**\n * Describes data needed by IssueGraphComponent to draw the graph.\n */\nexport interface GraphData {\n  components: Map;\n  interfaces: Map;\n  // graphLocations is the union of all components and interfaces\n  graphLocations: Map;\n  relatedFolders: DefaultDictionary;\n  linkIssues: GraphIssue[];\n}\n\nexport class GraphDataFactory {\n  /**\n   * Removes the counts for issue categories which are filtered. This is a workaround\n   * needed because the backend doesn't allow us to only ask for the counts of non-filtered categories.\n   * @param graphData the data with the unnecessary counts\n   * @param activeCategories the categories corresponding to the activated toggles of the graph component\n   */\n  static removeFilteredData(graphData: GraphData, activeCategories: IssueCategory[]) {\n    for (const location of graphData.graphLocations.values()) {\n      location.issues = new Map([...location.issues].filter(([category, count]) => activeCategories.includes(category)));\n    }\n    return graphData;\n  }\n\n  /**\n   * Converts the data required for the graph from the format the backend delivers into a\n   * GraphData object as needed by the IssueGraphComponent for rendering.\n   */\n  static graphDataFromGQL(data: GetIssueGraphDataQuery): GraphData {\n    const components = GraphComponent.mapFromGQL(data.node.components.nodes);\n    const interfaces = GraphInterface.mapFromGQL(data.node.interfaces.nodes);\n    const graphLocations: Map = new Map([...components, ...interfaces]);\n    const linkIssues = data.node.linkingIssues.nodes.map(gqlIssue => GraphIssue.fromGQL(gqlIssue));\n    const relatedFolders = computeRelatedFolders(linkIssues, interfaces);\n    return {\n      components, interfaces, graphLocations, relatedFolders, linkIssues\n    };\n  }\n}\n\n/**\n * @param locationIds ids of components and interfaces\n * @param interfaces mapping from\n * @returns locationIds with ids of components offering interfaces whoose id is alo in locationIds removed\n */\nfunction removeOfferingComponents(locationIds: string[], interfaces: Map) {\n  // compute components that offer an interface whoose id is in locationIds\n  const interfaceOfferingComponents: Set = new Set(locationIds.filter(locationId => interfaces.has(locationId)).map(interfaceId =>\n    interfaces.get(interfaceId).offeredBy\n  ));\n  // return location ids with the components offering an interface with id in locationIds removed\n  return locationIds.filter(id => !interfaceOfferingComponents.has(id));\n}\n\n/**\n * Issues counts\n * @param bugCount number of bugs\n * @param featureRequestCount number of feature requests\n * @param unclassifiedCount number of unclassified issues\n * @returns counts mapping IssueCategory values to the count specified by arguments\n */\nfunction issueCounts(bugCount: number, featureRequestCount: number, unclassifiedCount: number): Map {\n  return new Map([\n    [IssueCategory.Bug, bugCount],\n    [IssueCategory.FeatureRequest, featureRequestCount],\n    [IssueCategory.Unclassified, unclassifiedCount]\n  ]);\n}\n\n// backend data format for interface\ntype GQLInterface = Pick & {\n  component?: Maybe>;\n  bugs?: Maybe>;\n  featureRequests?: Maybe>;\n  unclassified?: Maybe>;\n  consumedBy?: Maybe>>> }>\n};\n\n// desired frontend data format for interface\nexport class GraphInterface {\n  id: Scalars['ID'];\n  name: string;\n  offeredBy: Scalars['ID'];\n  consumedBy: Scalars['ID'][];\n  issues: Map;\n\n  static fromGQL(gqlInterface: GQLInterface): GraphInterface {\n    const issues = issueCounts(gqlInterface.bugs.totalCount,\n      gqlInterface.featureRequests.totalCount,\n      gqlInterface.unclassified.totalCount);\n    return {\n      id: gqlInterface.id,\n      name: gqlInterface.name,\n      offeredBy: gqlInterface.component.id,\n      consumedBy: gqlInterface.consumedBy.nodes.map(component => component.id),\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlInterfaces: GQLInterface[]): Map {\n    return new Map(gqlInterfaces.map(gqlInterface => [gqlInterface.id, GraphInterface.fromGQL(gqlInterface)]));\n  }\n}\n\n// backend data format for component\ntype GQLGraphComponent = Pick & {\n  bugs?: Pick;\n  featureRequests?: Pick;\n  unclassified?: Pick;\n};\n\n// desired frontend data format for component\nexport class GraphComponent {\n  name: string;\n  id: Scalars['ID'];\n  issues: Map;\n\n  /**\n   * Convert backend representation of graph component to frontend representation.\n   * @param gqlGraphComponent backend representation of component\n   */\n  static fromGQL(gqlGraphComponent: GQLGraphComponent): GraphComponent {\n    const issues = issueCounts(gqlGraphComponent.bugs.totalCount,\n      gqlGraphComponent.featureRequests.totalCount,\n      gqlGraphComponent.unclassified.totalCount);\n    return {\n      id: gqlGraphComponent.id,\n      name: gqlGraphComponent.name,\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlGraphComponents: GQLGraphComponent[]): Map {\n    return new Map(gqlGraphComponents.map(gqlComponent => [gqlComponent.id, GraphComponent.fromGQL(gqlComponent)]));\n  }\n}\n\n// backend data fromat for issue\ntype GQLIssue = Pick & {\n  locations?: {\n    nodes?: (Pick | Pick)[];\n  };\n  linksToIssues?: {\n    nodes?: (Pick & { locations?: { nodes?: (Pick | Pick)[]; }; })[];\n  };\n};\n\n// desired frontend data format for issue\nclass GraphIssue {\n  id: Scalars['ID'];\n  category: IssueCategory;\n  locations: LocationId[];\n  linksIssues?: GraphIssue[];\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlPartialIssue backend representation of issue\n   */\n  static fromGQLNoLinks(gqlPartialIssue: Pick) {\n    return {\n      id: gqlPartialIssue.id,\n      category: gqlPartialIssue.category,\n      locations: gqlPartialIssue.locations.nodes.map(location => location.id)\n    };\n  }\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlIssue backend representation of Issues\n   */\n  static fromGQL(gqlIssue: GQLIssue): GraphIssue {\n    const issue: GraphIssue = this.fromGQLNoLinks(gqlIssue);\n    issue.linksIssues = gqlIssue.linksToIssues.nodes.map(gqlPartialIssue => this.fromGQLNoLinks(gqlPartialIssue));\n    return issue;\n  }\n}\n\n/**\n * The graph displays edges between issue folders that contain issues which link\n * to each other. This function computes this information. Drawing is handled in\n * IssueGraphComponent.\n * @param linkIssues contains only issues that link to other issues\n * @param interfaces mapping from ids of locations to interfaces attached to locations\n */\nfunction computeRelatedFolders(linkIssues: GraphIssue[], interfaces: Map):\n  DefaultDictionary {\n  let targetFolders: GraphFolder[];\n  const relatedFolders: DefaultDictionary = new DefaultDictionary(() => []);\n  for (const issue of linkIssues) {\n    const sourceLocationIds = removeOfferingComponents(issue.locations, interfaces);\n    const sourceFolders: GraphFolder[] = sourceLocationIds.map(locationId => [locationId, issue.category]);\n    targetFolders = [];\n    for (const linkedIssue of issue.linksIssues) {\n      const targetLocationIds = removeOfferingComponents(linkedIssue.locations, interfaces);\n      // @ts-ignore\n      targetFolders = targetFolders.concat(targetLocationIds.map(locationId => [locationId, linkedIssue.category]));\n    }\n    sourceFolders.forEach(folder =>\n      relatedFolders.setValue(folder,\n        (relatedFolders.getValue(folder).concat(targetFolders))));\n  }\n  return relatedFolders;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GraphIssue.html":{"url":"classes/GraphIssue.html","title":"class - GraphIssue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GraphIssue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/issue-graph/graph-data.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                linksIssues\n                            \n                            \n                                locations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromGQL\n                            \n                            \n                                    Static\n                                fromGQLNoLinks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IssueCategory\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:170\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:169\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        linksIssues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GraphIssue[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:172\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        locations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocationId[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:171\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        fromGQL\n                        \n                    \n                \n            \n            \n                \n                    \n                    fromGQL(gqlIssue: GQLIssue)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/graph-data.ts:190\n                \n            \n\n\n            \n                \n                    Convert issue from backend to frontend format ignoring links between issues\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    gqlIssue\n                                    \n                                                GQLIssue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        backend representation of Issues\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GraphIssue\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        fromGQLNoLinks\n                        \n                    \n                \n            \n            \n                \n                    \n                    fromGQLNoLinks(gqlPartialIssue: Pick)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/graph-data.ts:178\n                \n            \n\n\n            \n                \n                    Convert issue from backend to frontend format ignoring links between issues\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    gqlPartialIssue\n                                    \n                                                Pick\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        backend representation of issue\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { id: any; category: any; locations: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Component,\n  ComponentInterface, GetIssueGraphDataDocument,\n  GetIssueGraphDataQuery,\n  Issue,\n  IssueCategory,\n  IssuePage,\n  Maybe,\n  Scalars\n} from 'src/generated/graphql';\nimport {DefaultDictionary} from 'typescript-collections';\n\n\ntype LocationId = Scalars['ID'];\ntype GraphFolder = [LocationId, IssueCategory];\ntype GraphLocation = GraphInterface | GraphComponent;\n\n/**\n * Describes data needed by IssueGraphComponent to draw the graph.\n */\nexport interface GraphData {\n  components: Map;\n  interfaces: Map;\n  // graphLocations is the union of all components and interfaces\n  graphLocations: Map;\n  relatedFolders: DefaultDictionary;\n  linkIssues: GraphIssue[];\n}\n\nexport class GraphDataFactory {\n  /**\n   * Removes the counts for issue categories which are filtered. This is a workaround\n   * needed because the backend doesn't allow us to only ask for the counts of non-filtered categories.\n   * @param graphData the data with the unnecessary counts\n   * @param activeCategories the categories corresponding to the activated toggles of the graph component\n   */\n  static removeFilteredData(graphData: GraphData, activeCategories: IssueCategory[]) {\n    for (const location of graphData.graphLocations.values()) {\n      location.issues = new Map([...location.issues].filter(([category, count]) => activeCategories.includes(category)));\n    }\n    return graphData;\n  }\n\n  /**\n   * Converts the data required for the graph from the format the backend delivers into a\n   * GraphData object as needed by the IssueGraphComponent for rendering.\n   */\n  static graphDataFromGQL(data: GetIssueGraphDataQuery): GraphData {\n    const components = GraphComponent.mapFromGQL(data.node.components.nodes);\n    const interfaces = GraphInterface.mapFromGQL(data.node.interfaces.nodes);\n    const graphLocations: Map = new Map([...components, ...interfaces]);\n    const linkIssues = data.node.linkingIssues.nodes.map(gqlIssue => GraphIssue.fromGQL(gqlIssue));\n    const relatedFolders = computeRelatedFolders(linkIssues, interfaces);\n    return {\n      components, interfaces, graphLocations, relatedFolders, linkIssues\n    };\n  }\n}\n\n/**\n * @param locationIds ids of components and interfaces\n * @param interfaces mapping from\n * @returns locationIds with ids of components offering interfaces whoose id is alo in locationIds removed\n */\nfunction removeOfferingComponents(locationIds: string[], interfaces: Map) {\n  // compute components that offer an interface whoose id is in locationIds\n  const interfaceOfferingComponents: Set = new Set(locationIds.filter(locationId => interfaces.has(locationId)).map(interfaceId =>\n    interfaces.get(interfaceId).offeredBy\n  ));\n  // return location ids with the components offering an interface with id in locationIds removed\n  return locationIds.filter(id => !interfaceOfferingComponents.has(id));\n}\n\n/**\n * Issues counts\n * @param bugCount number of bugs\n * @param featureRequestCount number of feature requests\n * @param unclassifiedCount number of unclassified issues\n * @returns counts mapping IssueCategory values to the count specified by arguments\n */\nfunction issueCounts(bugCount: number, featureRequestCount: number, unclassifiedCount: number): Map {\n  return new Map([\n    [IssueCategory.Bug, bugCount],\n    [IssueCategory.FeatureRequest, featureRequestCount],\n    [IssueCategory.Unclassified, unclassifiedCount]\n  ]);\n}\n\n// backend data format for interface\ntype GQLInterface = Pick & {\n  component?: Maybe>;\n  bugs?: Maybe>;\n  featureRequests?: Maybe>;\n  unclassified?: Maybe>;\n  consumedBy?: Maybe>>> }>\n};\n\n// desired frontend data format for interface\nexport class GraphInterface {\n  id: Scalars['ID'];\n  name: string;\n  offeredBy: Scalars['ID'];\n  consumedBy: Scalars['ID'][];\n  issues: Map;\n\n  static fromGQL(gqlInterface: GQLInterface): GraphInterface {\n    const issues = issueCounts(gqlInterface.bugs.totalCount,\n      gqlInterface.featureRequests.totalCount,\n      gqlInterface.unclassified.totalCount);\n    return {\n      id: gqlInterface.id,\n      name: gqlInterface.name,\n      offeredBy: gqlInterface.component.id,\n      consumedBy: gqlInterface.consumedBy.nodes.map(component => component.id),\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlInterfaces: GQLInterface[]): Map {\n    return new Map(gqlInterfaces.map(gqlInterface => [gqlInterface.id, GraphInterface.fromGQL(gqlInterface)]));\n  }\n}\n\n// backend data format for component\ntype GQLGraphComponent = Pick & {\n  bugs?: Pick;\n  featureRequests?: Pick;\n  unclassified?: Pick;\n};\n\n// desired frontend data format for component\nexport class GraphComponent {\n  name: string;\n  id: Scalars['ID'];\n  issues: Map;\n\n  /**\n   * Convert backend representation of graph component to frontend representation.\n   * @param gqlGraphComponent backend representation of component\n   */\n  static fromGQL(gqlGraphComponent: GQLGraphComponent): GraphComponent {\n    const issues = issueCounts(gqlGraphComponent.bugs.totalCount,\n      gqlGraphComponent.featureRequests.totalCount,\n      gqlGraphComponent.unclassified.totalCount);\n    return {\n      id: gqlGraphComponent.id,\n      name: gqlGraphComponent.name,\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlGraphComponents: GQLGraphComponent[]): Map {\n    return new Map(gqlGraphComponents.map(gqlComponent => [gqlComponent.id, GraphComponent.fromGQL(gqlComponent)]));\n  }\n}\n\n// backend data fromat for issue\ntype GQLIssue = Pick & {\n  locations?: {\n    nodes?: (Pick | Pick)[];\n  };\n  linksToIssues?: {\n    nodes?: (Pick & { locations?: { nodes?: (Pick | Pick)[]; }; })[];\n  };\n};\n\n// desired frontend data format for issue\nclass GraphIssue {\n  id: Scalars['ID'];\n  category: IssueCategory;\n  locations: LocationId[];\n  linksIssues?: GraphIssue[];\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlPartialIssue backend representation of issue\n   */\n  static fromGQLNoLinks(gqlPartialIssue: Pick) {\n    return {\n      id: gqlPartialIssue.id,\n      category: gqlPartialIssue.category,\n      locations: gqlPartialIssue.locations.nodes.map(location => location.id)\n    };\n  }\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlIssue backend representation of Issues\n   */\n  static fromGQL(gqlIssue: GQLIssue): GraphIssue {\n    const issue: GraphIssue = this.fromGQLNoLinks(gqlIssue);\n    issue.linksIssues = gqlIssue.linksToIssues.nodes.map(gqlPartialIssue => this.fromGQLNoLinks(gqlPartialIssue));\n    return issue;\n  }\n}\n\n/**\n * The graph displays edges between issue folders that contain issues which link\n * to each other. This function computes this information. Drawing is handled in\n * IssueGraphComponent.\n * @param linkIssues contains only issues that link to other issues\n * @param interfaces mapping from ids of locations to interfaces attached to locations\n */\nfunction computeRelatedFolders(linkIssues: GraphIssue[], interfaces: Map):\n  DefaultDictionary {\n  let targetFolders: GraphFolder[];\n  const relatedFolders: DefaultDictionary = new DefaultDictionary(() => []);\n  for (const issue of linkIssues) {\n    const sourceLocationIds = removeOfferingComponents(issue.locations, interfaces);\n    const sourceFolders: GraphFolder[] = sourceLocationIds.map(locationId => [locationId, issue.category]);\n    targetFolders = [];\n    for (const linkedIssue of issue.linksIssues) {\n      const targetLocationIds = removeOfferingComponents(linkedIssue.locations, interfaces);\n      // @ts-ignore\n      targetFolders = targetFolders.concat(targetLocationIds.map(locationId => [locationId, linkedIssue.category]));\n    }\n    sourceFolders.forEach(folder =>\n      relatedFolders.setValue(folder,\n        (relatedFolders.getValue(folder).concat(targetFolders))));\n  }\n  return relatedFolders;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphQLModule.html":{"url":"modules/GraphQLModule.html","title":"module - GraphQLModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphQLModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/graphql.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {APOLLO_NAMED_OPTIONS, APOLLO_OPTIONS, NamedOptions} from 'apollo-angular';\nimport {ApolloClientOptions, ApolloLink, InMemoryCache} from '@apollo/client/core';\nimport {HttpLink} from 'apollo-angular/http';\nimport {setContext} from '@apollo/link-context';\nimport {onError} from '@apollo/client/link/error';\nimport {HttpClientModule} from '@angular/common/http';\nimport {AuthenticationService} from './auth/authentication.service';\nimport {environment} from '@environments/environment';\nimport {IndividualConfig, ToastrModule, ToastrService} from 'ngx-toastr';\nimport {DefaultOptions} from '@apollo/client/core/ApolloClient';\n\n/**\n * This modules purpose is to provide define functions returning configurations\n * for the automatic creation of ApolloClients for graphql communication with the backend.\n * The key functions are providePublicApollo and provideDefaultApollo. The apollo instance\n * constructed from providePublicApollo is only used for registering.\n */\n\nconst defaultOptions: DefaultOptions = {\n  query: {\n    fetchPolicy: 'no-cache',\n    errorPolicy: 'all',\n  }\n};\n\n/**\n * Congiuration for network error toast on register page.\n */\nconst networkErrorToast: Partial = {\n  timeOut: 5000,\n  closeButton: true,\n  positionClass: 'toast-top-center',\n  enableHtml: true\n};\n\nconst basic = setContext((operation, context) => ({\n  headers: {\n    Accept: 'charset=utf-8'\n  }\n}));\n\nexport function createErrorLink(authService: AuthenticationService, toastr: ToastrService): ApolloLink {\n  const errorLink = onError(({graphQLErrors, networkError, operation, forward}) => {\n      if (graphQLErrors) {\n        const message = graphQLErrors.map(err => err.message).join('');\n        console.log(`[Graphql errors]: ${message}`);\n        toastr.error(message, 'GraphQL error', networkErrorToast);\n      }\n\n      if (networkError) {\n        console.log(`[Network error]: ${networkError.name}\\n${networkError.message}\\n${networkError.stack}`);\n        // @ts-ignore\n        if (networkError.status === 401) {\n          authService.logout();\n        } else {\n          toastr.error(networkError.message, 'Server/Connection error', networkErrorToast);\n        }\n      }\n    }\n  );\n  return errorLink;\n}\n\n/**\n * Create Apollo instance where credentials from local storage are attached to requests\n * @param httpLink\n * @param authService\n * @param toastr\n */\nexport function provideDefaultApollo(httpLink: HttpLink, authService: AuthenticationService,\n                                     toastr: ToastrService): ApolloClientOptions {\n  const token = localStorage.getItem('token');\n  const auth = setContext((_, {headers}) => {\n    // get the authentication token from local storage if it exists\n    // return the headers to the context so httpLink can read them\n    return {\n      headers: {\n        ...headers,\n        Authorization: localStorage.getItem('token') ? `Bearer ${localStorage.getItem('token')}` : ''\n      }\n    };\n  });\n  const errorLink = createErrorLink(authService, toastr);\n  const link = ApolloLink.from([basic, errorLink, auth, httpLink.create({uri: environment.apiUrl})]);\n  const cache = new InMemoryCache();\n  return {link, cache, defaultOptions};\n}\n\n/**\n * Creates Apollo Client used for user registration with public endpoint. In contrast to\n * provideDefaultApollo no token is attached to reqeusts.\n * @param httpLink\n * @param authService\n * @param toastr\n */\nexport function providePublicApollo(httpLink: HttpLink, authService: AuthenticationService, toastr: ToastrService): NamedOptions {\n  const errorLink = createErrorLink(authService, toastr);\n  const link = ApolloLink.from([basic, errorLink, httpLink.create({uri: environment.signUpUrl})]);\n  const cache = new InMemoryCache();\n  return {\n    publicClient: {\n      link,\n      cache,\n      defaultOptions\n    }\n  };\n}\n\n@NgModule({\n  imports: [\n    ToastrModule,\n  ],\n  exports: [\n    HttpClientModule\n  ],\n  providers: [\n    {\n      provide: APOLLO_OPTIONS,\n      useFactory: provideDefaultApollo,\n      deps: [HttpLink, AuthenticationService, ToastrService],\n    },\n    {\n      provide: APOLLO_NAMED_OPTIONS,\n      useFactory: providePublicApollo,\n      deps: [HttpLink, AuthenticationService, ToastrService],\n    }\n  ],\n})\nexport class GraphQLModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphsModule.html":{"url":"modules/GraphsModule.html","title":"module - GraphsModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GraphsModule\n\n\n\ncluster_GraphsModule_declarations\n\n\n\ncluster_GraphsModule_exports\n\n\n\n\nAddProjectMemberDialogComponent\n\nAddProjectMemberDialogComponent\n\n\n\nGraphsModule\n\nGraphsModule\n\nGraphsModule -->\n\nAddProjectMemberDialogComponent->GraphsModule\n\n\n\n\n\nCacheNodeComponent\n\nCacheNodeComponent\n\nGraphsModule -->\n\nCacheNodeComponent->GraphsModule\n\n\n\n\n\nCursorPaginatorComponent\n\nCursorPaginatorComponent\n\nGraphsModule -->\n\nCursorPaginatorComponent->GraphsModule\n\n\n\n\n\nIssueCategoryComponent\n\nIssueCategoryComponent\n\nGraphsModule -->\n\nIssueCategoryComponent->GraphsModule\n\n\n\n\n\nIssueFilterComponent\n\nIssueFilterComponent\n\nGraphsModule -->\n\nIssueFilterComponent->GraphsModule\n\n\n\n\n\nIssueGraphComponent\n\nIssueGraphComponent\n\nGraphsModule -->\n\nIssueGraphComponent->GraphsModule\n\n\n\n\n\nIssueGraphControlsComponent\n\nIssueGraphControlsComponent\n\nGraphsModule -->\n\nIssueGraphControlsComponent->GraphsModule\n\n\n\n\n\nIssueIconComponent\n\nIssueIconComponent\n\nGraphsModule -->\n\nIssueIconComponent->GraphsModule\n\n\n\n\n\nIssueItemComponent\n\nIssueItemComponent\n\nGraphsModule -->\n\nIssueItemComponent->GraphsModule\n\n\n\n\n\nIssueLabelComponent\n\nIssueLabelComponent\n\nGraphsModule -->\n\nIssueLabelComponent->GraphsModule\n\n\n\n\n\nIssueListComponent\n\nIssueListComponent\n\nGraphsModule -->\n\nIssueListComponent->GraphsModule\n\n\n\n\n\nIssueLocationComponent\n\nIssueLocationComponent\n\nGraphsModule -->\n\nIssueLocationComponent->GraphsModule\n\n\n\n\n\nIssueSidebarComponent\n\nIssueSidebarComponent\n\nGraphsModule -->\n\nIssueSidebarComponent->GraphsModule\n\n\n\n\n\nItemDirective\n\nItemDirective\n\nGraphsModule -->\n\nItemDirective->GraphsModule\n\n\n\n\n\nLabelSearchComponent\n\nLabelSearchComponent\n\nGraphsModule -->\n\nLabelSearchComponent->GraphsModule\n\n\n\n\n\nProjectHeaderComponent\n\nProjectHeaderComponent\n\nGraphsModule -->\n\nProjectHeaderComponent->GraphsModule\n\n\n\n\n\nProjectIssueListComponent\n\nProjectIssueListComponent\n\nGraphsModule -->\n\nProjectIssueListComponent->GraphsModule\n\n\n\n\n\nProjectMembersComponent\n\nProjectMembersComponent\n\nGraphsModule -->\n\nProjectMembersComponent->GraphsModule\n\n\n\n\n\nQueryBodyDirective\n\nQueryBodyDirective\n\nGraphsModule -->\n\nQueryBodyDirective->GraphsModule\n\n\n\n\n\nQueryButtonDirective\n\nQueryButtonDirective\n\nGraphsModule -->\n\nQueryButtonDirective->GraphsModule\n\n\n\n\n\nQueryComponent\n\nQueryComponent\n\nGraphsModule -->\n\nQueryComponent->GraphsModule\n\n\n\n\n\nSetEditorComponent\n\nSetEditorComponent\n\nGraphsModule -->\n\nSetEditorComponent->GraphsModule\n\n\n\n\n\nSetEditorDialogComponent\n\nSetEditorDialogComponent\n\nGraphsModule -->\n\nSetEditorDialogComponent->GraphsModule\n\n\n\n\n\nUserItemComponent\n\nUserItemComponent\n\nGraphsModule -->\n\nUserItemComponent->GraphsModule\n\n\n\n\n\nCursorPaginatorComponent \n\nCursorPaginatorComponent \n\nCursorPaginatorComponent  -->\n\nGraphsModule->CursorPaginatorComponent \n\n\n\n\n\nIssueCategoryComponent \n\nIssueCategoryComponent \n\nIssueCategoryComponent  -->\n\nGraphsModule->IssueCategoryComponent \n\n\n\n\n\nIssueGraphComponent \n\nIssueGraphComponent \n\nIssueGraphComponent  -->\n\nGraphsModule->IssueGraphComponent \n\n\n\n\n\nIssueGraphControlsComponent \n\nIssueGraphControlsComponent \n\nIssueGraphControlsComponent  -->\n\nGraphsModule->IssueGraphControlsComponent \n\n\n\n\n\nIssueIconComponent \n\nIssueIconComponent \n\nIssueIconComponent  -->\n\nGraphsModule->IssueIconComponent \n\n\n\n\n\nIssueItemComponent \n\nIssueItemComponent \n\nIssueItemComponent  -->\n\nGraphsModule->IssueItemComponent \n\n\n\n\n\nIssueLabelComponent \n\nIssueLabelComponent \n\nIssueLabelComponent  -->\n\nGraphsModule->IssueLabelComponent \n\n\n\n\n\nIssueListComponent \n\nIssueListComponent \n\nIssueListComponent  -->\n\nGraphsModule->IssueListComponent \n\n\n\n\n\nIssueLocationComponent \n\nIssueLocationComponent \n\nIssueLocationComponent  -->\n\nGraphsModule->IssueLocationComponent \n\n\n\n\n\nIssueSidebarComponent \n\nIssueSidebarComponent \n\nIssueSidebarComponent  -->\n\nGraphsModule->IssueSidebarComponent \n\n\n\n\n\nItemDirective \n\nItemDirective \n\nItemDirective  -->\n\nGraphsModule->ItemDirective \n\n\n\n\n\nProjectHeaderComponent \n\nProjectHeaderComponent \n\nProjectHeaderComponent  -->\n\nGraphsModule->ProjectHeaderComponent \n\n\n\n\n\nQueryBodyDirective \n\nQueryBodyDirective \n\nQueryBodyDirective  -->\n\nGraphsModule->QueryBodyDirective \n\n\n\n\n\nQueryButtonDirective \n\nQueryButtonDirective \n\nQueryButtonDirective  -->\n\nGraphsModule->QueryButtonDirective \n\n\n\n\n\nQueryComponent \n\nQueryComponent \n\nQueryComponent  -->\n\nGraphsModule->QueryComponent \n\n\n\n\n\nSetEditorComponent \n\nSetEditorComponent \n\nSetEditorComponent  -->\n\nGraphsModule->SetEditorComponent \n\n\n\n\n\nUserItemComponent \n\nUserItemComponent \n\nUserItemComponent  -->\n\nGraphsModule->UserItemComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/graphs/graphs.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            The IssueGraphComponent and IssueGraphControlsComponent form their own module declared here\nand imported into the main app.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddProjectMemberDialogComponent\n                        \n                        \n                            CacheNodeComponent\n                        \n                        \n                            CursorPaginatorComponent\n                        \n                        \n                            IssueCategoryComponent\n                        \n                        \n                            IssueFilterComponent\n                        \n                        \n                            IssueGraphComponent\n                        \n                        \n                            IssueGraphControlsComponent\n                        \n                        \n                            IssueIconComponent\n                        \n                        \n                            IssueItemComponent\n                        \n                        \n                            IssueLabelComponent\n                        \n                        \n                            IssueListComponent\n                        \n                        \n                            IssueLocationComponent\n                        \n                        \n                            IssueSidebarComponent\n                        \n                        \n                            ItemDirective\n                        \n                        \n                            LabelSearchComponent\n                        \n                        \n                            ProjectHeaderComponent\n                        \n                        \n                            ProjectIssueListComponent\n                        \n                        \n                            ProjectMembersComponent\n                        \n                        \n                            QueryBodyDirective\n                        \n                        \n                            QueryButtonDirective\n                        \n                        \n                            QueryComponent\n                        \n                        \n                            SetEditorComponent\n                        \n                        \n                            SetEditorDialogComponent\n                        \n                        \n                            UserItemComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CursorPaginatorComponent\n                        \n                        \n                            IssueCategoryComponent\n                        \n                        \n                            IssueGraphComponent\n                        \n                        \n                            IssueGraphControlsComponent\n                        \n                        \n                            IssueIconComponent\n                        \n                        \n                            IssueItemComponent\n                        \n                        \n                            IssueLabelComponent\n                        \n                        \n                            IssueListComponent\n                        \n                        \n                            IssueLocationComponent\n                        \n                        \n                            IssueSidebarComponent\n                        \n                        \n                            ItemDirective\n                        \n                        \n                            ProjectHeaderComponent\n                        \n                        \n                            QueryBodyDirective\n                        \n                        \n                            QueryButtonDirective\n                        \n                        \n                            QueryComponent\n                        \n                        \n                            SetEditorComponent\n                        \n                        \n                            UserItemComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IssueGraphComponent } from './issue-graph/issue-graph.component';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTableModule } from '@angular/material/table';\nimport '@ustutt/grapheditor-webcomponent/lib/index';\nimport { IssueGraphControlsComponent } from './issue-graph-controls/issue-graph-controls.component';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { IssueListComponent } from '@app/issue-list/issue-list.component';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { MatSortModule } from '@angular/material/sort';\nimport { LabelSearchComponent } from './label-search/label-search.component';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { NgOptionHighlightModule } from '@ng-select/ng-option-highlight';\nimport { ProjectIssueListComponent } from '@app/project-issue-list/project-issue-list.component';\nimport { ProjectMembersComponent } from '@app/project-members/project-members.component';\nimport { AddProjectMemberDialogComponent } from '../dialogs/add-project-member-dialog/add-project-member-dialog.component';\nimport { CursorPaginatorComponent } from '@app/components/cursor-paginator/cursor-paginator.component';\nimport { SetEditorComponent } from '@app/components/set-editor/set-editor.component';\nimport { ItemDirective } from '@app/components/item.directive';\nimport { IssueLabelComponent } from '@app/components/issue-label/issue-label.component';\nimport { SetEditorDialogComponent } from '@app/components/set-editor/set-editor-dialog.component';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { IssueItemComponent } from '@app/components/issue-item/issue-item.component';\nimport { UserItemComponent } from '@app/components/user-item/user-item.component';\nimport { IssueIconComponent } from '@app/components/issue-icon/issue-icon.component';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { IssueSidebarComponent } from '@app/issue-detail/issue-sidebar.component';\nimport { CacheNodeComponent } from '@app/components/cache-node.component';\nimport { ProjectHeaderComponent } from '@app/project-header/project-header.component';\nimport { IssueFilterComponent } from '@app/issue-list/issue-filter.component';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport {QueryBodyDirective, QueryButtonDirective, QueryComponent} from '@app/utils/query-component/query.component';\nimport {MatProgressSpinnerModule, MatSpinner} from '@angular/material/progress-spinner';\nimport {IssueLocationComponent} from '@app/components/issue-location/issue-location.component';\nimport {IssueCategoryComponent} from '@app/components/issue-category/issue-category.component';\n\n/**\n * The IssueGraphComponent and IssueGraphControlsComponent form their own module declared here\n * and imported into the main app.\n * @export\n * @class GraphsModule\n */\n@NgModule({\n  declarations: [\n    IssueGraphComponent,\n    IssueGraphControlsComponent,\n    IssueListComponent,\n    LabelSearchComponent,\n    ProjectIssueListComponent,\n    ProjectMembersComponent,\n    AddProjectMemberDialogComponent,\n    CursorPaginatorComponent,\n    SetEditorComponent,\n    ItemDirective,\n    IssueLabelComponent,\n    SetEditorDialogComponent,\n    IssueItemComponent,\n    UserItemComponent,\n    IssueIconComponent,\n    IssueSidebarComponent,\n    CacheNodeComponent,\n    ProjectHeaderComponent,\n    IssueFilterComponent,\n    QueryComponent,\n    QueryBodyDirective,\n    QueryButtonDirective,\n    IssueLocationComponent,\n    IssueCategoryComponent\n  ],\n  imports: [\n    CommonModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatSlideToggleModule,\n    MatDialogModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatInputModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    MatSlideToggleModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatTabsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    NgSelectModule,\n    NgOptionHighlightModule,\n    MatCheckboxModule,\n    MatMenuModule,\n    MatButtonToggleModule,\n    MatTooltipModule,\n    MatProgressSpinnerModule\n  ],\n  exports: [\n    CdkTableModule,\n    CdkTreeModule,\n    IssueGraphComponent,\n    IssueGraphControlsComponent,\n    IssueListComponent,\n    SetEditorComponent,\n    ItemDirective,\n    IssueLabelComponent,\n    IssueItemComponent,\n    UserItemComponent,\n    IssueIconComponent,\n    IssueSidebarComponent,\n    CursorPaginatorComponent,\n    ProjectHeaderComponent,\n    QueryComponent,\n    QueryBodyDirective,\n    QueryButtonDirective,\n    IssueLocationComponent,\n    IssueCategoryComponent\n  ],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n  ],\n  providers: [\n    {provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: {appearance: 'fill'}},\n  ]\n})\nexport class GraphsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InterfaceNode.html":{"url":"interfaces/InterfaceNode.html","title":"interface - InterfaceNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InterfaceNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/issue-graph-nodes.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IssueNode\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            offeredById\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        offeredById\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        offeredById:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {GraphComponent, GraphInterface} from '@app/data/issue-graph/graph-data';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\n\nexport {\n  IssueNode, ComponentNode, InterfaceNode, IssueGroupContainerNode, RelationEdge,\n  createComponentNode, createInterfaceNode, createIssueGroupContainerNode, createIssueFolderNode,\n  createRelationEdge, createConsumptionEdge, createInterfaceProvisionEdge,\n  Position,\n  getIssueFolderId\n};\n\nexport enum NodeType {\n  Component = 'component',\n  Interface = 'interface',\n  InterfaceConsumer = 'interface-connect',\n  IssueGroupContainer = 'issue-group-container'\n}\n\n/**\n * This file includes type definitions and creation functions (think constructors)\n * for nodes and edges that are added to the graph editor in order to visualize the project.\n * Since the data that is stored with these differs based on what they represent (e.g.\n * interface vs component node) we give each their own type. We do this by extending\n * the Node class or the Edge class of the grapheditor. These classes are instantiated\n * via calls to the contained create* functions within the drawGraph method of the IssueGraphComponent.\n */\n\ninterface IssueNode extends Node {\n  id: string;\n  title: string;\n  issueGroupContainer?: IssueGroupContainerNode;\n}\n\ninterface ComponentNode extends IssueNode {\n  data: GraphComponent;\n}\n\nfunction createComponentNode(component: GraphComponent, position: Position): ComponentNode {\n  return {\n    ...(position || zeroPosition),\n    id: component.id,\n    title: component.name,\n    type: NodeType.Component,\n    data: component\n  };\n}\n\ninterface InterfaceNode extends IssueNode {\n  offeredById: string;\n}\n\nfunction createInterfaceNode(intrface: GraphInterface, position: Position): InterfaceNode {\n  return {\n    ...(position || zeroPosition),\n    id: intrface.id,\n    title: intrface.name,\n    type: NodeType.Interface,\n    offeredById: intrface.offeredBy,\n  };\n}\n\ninterface IssueGroupContainerNode extends Node {\n  position: string;\n  issueGroupNodeIds: Set;\n}\n\nfunction createIssueGroupContainerNode(node: IssueNode): IssueGroupContainerNode {\n  return {\n    id: `${node.id}__issue-group-container`,\n    type: NodeType.IssueGroupContainer,\n    dynamicTemplate: 'issue-group-container',\n    x: 0,\n    y: 0,\n    position: 'bottom',\n    issueGroupNodeIds: new Set(),\n  };\n}\n\ninterface IssueFolderNode extends Node {\n  type: IssueCategory;\n  issueCount: string;\n}\n\nfunction createIssueFolderNode(node: IssueNode, issueCategory: IssueCategory, issueCount: string): IssueFolderNode {\n  return {\n    id: getIssueFolderId(node.id, issueCategory),\n    type: issueCategory,\n    x: 0,\n    y: 0,\n    issues: new Set(),\n    issueCount\n  };\n}\n\ninterface RelationEdge extends Edge {\n  sourceIssues: Set;\n}\n\nfunction createRelationEdge(sourceId: string, targetId: string, edgeType = folderEdgeTypes.RelatedTo): RelationEdge {\n  return {\n    id: `s${sourceId}t${targetId}r${edgeType}`,\n    source: sourceId,\n    target: targetId,\n    type: folderEdgeTypes.RelatedTo,\n    markerEnd: {\n      template: 'arrow',\n      relativeRotation: 0,\n    },\n    dragHandles: [],\n    sourceIssues: new Set()\n  };\n}\n\nfunction createConsumptionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.InterfaceConsumer,\n    markerEnd: {\n      template: 'interface-connector',\n      relativeRotation: 0,\n    },\n  };\n}\n\nfunction createInterfaceProvisionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.Interface,\n    dragHandles: [],\n  };\n}\n\nfunction getIssueFolderId(id: string, issueCategory: IssueCategory): string {\n  return `${id}__${issueCategory}`;\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst zeroPosition = {x: 0, y: 0};\n\nenum folderEdgeTypes {\n  RelatedTo = 'relatedTo',\n  Depends = 'dependency',\n  Duplicates = 'duplicate'\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InterfaceStoreService.html":{"url":"injectables/InterfaceStoreService.html","title":"injectable - InterfaceStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InterfaceStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/interface/interface-store.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service provides creation, retrievel, update and deletion of interfaces offered by components.\nThe GQL object are generated by the code generator based on interface.graphql in the same directory\nas this file.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                getConsumingComponents\n                            \n                            \n                                    Public\n                                getInterface\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createInterfaceMutation: CreateComponentInterfaceGQL, updateInterfaceMutation: UpdateComponentInterfaceGQL, deleteInterfaceMutation: DeleteComponentInterfaceGQL, getInterfaceQuery: GetInterfaceGQL, getConsumingComponentsQuery: GetConsumingComponentsGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/interface/interface-store.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createInterfaceMutation\n                                                  \n                                                        \n                                                                    CreateComponentInterfaceGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateInterfaceMutation\n                                                  \n                                                        \n                                                                    UpdateComponentInterfaceGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deleteInterfaceMutation\n                                                  \n                                                        \n                                                                    DeleteComponentInterfaceGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getInterfaceQuery\n                                                  \n                                                        \n                                                                    GetInterfaceGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getConsumingComponentsQuery\n                                                  \n                                                        \n                                                                    GetConsumingComponentsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(name: string, offeringComponentId: string, description?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/interface/interface-store.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    offeringComponentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/interface/interface-store.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getConsumingComponents\n                        \n                    \n                \n            \n            \n                \n                    \n                    getConsumingComponents(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/interface/interface-store.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getInterface\n                        \n                    \n                \n            \n            \n                \n                    \n                    getInterface(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/interface/interface-store.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(input: UpdateComponentInterfaceInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/interface/interface-store.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            UpdateComponentInterfaceInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {\n  CreateComponentInterfaceGQL,\n  CreateComponentInterfaceInput,\n  DeleteComponentInterfaceGQL,\n  DeleteComponentInterfaceInput,\n  GetConsumingComponentsGQL,\n  GetConsumingComponentsQuery,\n  GetInterfaceGQL,\n  GetInterfaceQuery,\n  UpdateComponentInterfaceGQL,\n  UpdateComponentInterfaceInput\n} from '../../../generated/graphql';\nimport {map} from 'rxjs/operators';\nimport {Observable} from 'rxjs';\n\n/**\n * This service provides creation, retrievel, update and deletion of interfaces offered by components.\n * The GQL object are generated by the code generator based on interface.graphql in the same directory\n * as this file.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class InterfaceStoreService {\n\n  constructor(private createInterfaceMutation: CreateComponentInterfaceGQL,\n              private updateInterfaceMutation: UpdateComponentInterfaceGQL,\n              private deleteInterfaceMutation: DeleteComponentInterfaceGQL,\n              private getInterfaceQuery: GetInterfaceGQL,\n              private getConsumingComponentsQuery: GetConsumingComponentsGQL) {\n  }\n\n  public create(name: string, offeringComponentId: string, description?: string) {\n    const input: CreateComponentInterfaceInput = {\n      name,\n      description,\n      component: offeringComponentId\n    };\n    return this.createInterfaceMutation.mutate({input});\n  }\n\n  public getInterface(id: string): Observable {\n    return this.getInterfaceQuery.fetch({id}).pipe(\n      map(({data}) => data)\n    );\n  }\n\n  public getConsumingComponents(id: string): Observable {\n    return this.getConsumingComponentsQuery.fetch({id}).pipe(map(({data}) => data));\n  }\n\n  public update(input: UpdateComponentInterfaceInput) {\n    return this.updateInterfaceMutation.mutate({input});\n  }\n\n  public delete(id: string) {\n    const input: DeleteComponentInterfaceInput = {\n      componentInterface: id\n    };\n    return this.deleteInterfaceMutation.mutate({input});\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueCategoryComponent.html":{"url":"components/IssueCategoryComponent.html","title":"component - IssueCategoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueCategoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/issue-category/issue-category.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-category\n            \n\n            \n                styleUrls\n                ./issue-category.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-category.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n                \n                    \n                        Type :     IssueCategory\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-category/issue-category.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {IssueCategory} from '../../../generated/graphql-dgql';\n\n@Component({\n  selector: 'app-issue-category',\n  templateUrl: './issue-category.component.html',\n  styleUrls: ['./issue-category.component.scss']\n})\nexport class IssueCategoryComponent {\n  @Input() category: IssueCategory;\n}\n\n    \n\n    \n        \n  \n    \n    Uncategorized\n  \n\n  \n    \n    Bug\n  \n\n  \n    \n    Feature Request\n  \n\n\n    \n\n    \n                \n                    ./issue-category.component.scss\n                \n                .category-icon {\n  vertical-align: middle;\n  margin-bottom: 3px;\n}\n\n.category-box {\n  background: rgba(0, 0, 0, 0.06);\n  border-radius: 8px;\n  align-items: center;\n  padding: 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Uncategorized            Bug            Feature Request  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueCategoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueContentsComponent.html":{"url":"components/IssueContentsComponent.html","title":"component - IssueContentsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueContentsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-detail/issue-contents.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-contents\n            \n\n            \n                styleUrls\n                issue-contents.component.scss\n            \n\n\n\n            \n                templateUrl\n                issue-contents.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                commentEditor\n                            \n                            \n                                    Public\n                                currentUser$\n                            \n                            \n                                    Public\n                                currentUserSub\n                            \n                            \n                                    Public\n                                editBody\n                            \n                            \n                                    Public\n                                linkedIssues$\n                            \n                            \n                                    Public\n                                linkedIssueSub\n                            \n                            \n                                    Public\n                                savingComment\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeIssue\n                            \n                            \n                                    Public\n                                commentIssue\n                            \n                            \n                                    Public\n                                reopenIssue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                issue$\n                            \n                            \n                                issueId\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-detail/issue-contents.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        issue$\n                    \n                \n                \n                    \n                        Type :         DataNode\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/issue-contents.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        issueId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/issue-contents.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/issue-contents.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        closeIssue\n                        \n                    \n                \n            \n            \n                \n                    \n                    closeIssue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/issue-contents.component.ts:49\n                \n            \n\n\n            \n                \n                    Closes the current issue and refreshes its information.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        commentIssue\n                        \n                    \n                \n            \n            \n                \n                    \n                    commentIssue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/issue-contents.component.ts:64\n                \n            \n\n\n            \n                \n                    Adds a comment to the current issue.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        reopenIssue\n                        \n                    \n                \n            \n            \n                \n                    \n                    reopenIssue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/issue-contents.component.ts:57\n                \n            \n\n\n            \n                \n                    Reopens the closed current issue.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        commentEditor\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('comment')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-contents.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentUser$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataNode\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-contents.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentUserSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-contents.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        editBody\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-contents.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        linkedIssues$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataList\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-contents.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        linkedIssueSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-contents.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        savingComment\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-contents.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { DataList, DataNode } from '@app/data-dgql/query';\nimport { Issue } from '../../generated/graphql';\nimport { Subscription } from 'rxjs';\nimport DataService from '@app/data-dgql';\nimport { CURRENT_USER_NODE, ListType, NodeType } from '@app/data-dgql/id';\nimport { User } from '../../generated/graphql-dgql';\n\n@Component({\n  selector: 'app-issue-contents',\n  templateUrl: 'issue-contents.component.html',\n  styleUrls: ['issue-contents.component.scss']\n})\nexport class IssueContentsComponent implements OnInit, OnDestroy {\n  @Input() issue$: DataNode;\n  @Input() issueId: string;\n  @Input() projectId: string;\n\n  public linkedIssues$: DataList;\n  public linkedIssueSub: Subscription;\n  public currentUser$: DataNode;\n  public currentUserSub: Subscription;\n\n  public editBody = false;\n  public savingComment = false;\n  @ViewChild('comment') commentEditor;\n\n  constructor(private dataService: DataService) {}\n\n  ngOnInit() {\n    this.linkedIssues$ = this.dataService.getList({\n      node: { type: NodeType.Issue, id: this.issueId },\n      type: ListType.LinkedIssues\n    });\n    this.linkedIssueSub = this.linkedIssues$.subscribe();\n\n    this.currentUser$ = this.dataService.getNode(CURRENT_USER_NODE);\n    this.currentUserSub = this.currentUser$.subscribe();\n  }\n\n  ngOnDestroy() {\n    this.linkedIssueSub.unsubscribe();\n    this.currentUserSub.unsubscribe();\n  }\n\n  /**\n   * Closes the current issue and refreshes its information.\n   */\n  public closeIssue(): void {\n    this.dataService.mutations.closeIssue(Math.random().toString(), this.issue$.id);\n  }\n\n\n  /**\n   * Reopens the closed current issue.\n   */\n  public reopenIssue(): void {\n    this.dataService.mutations.reopenIssue(Math.random().toString(), this.issue$.id);\n  }\n\n  /**\n   * Adds a comment to the current issue.\n   */\n  public commentIssue(): void {\n    this.savingComment = true;\n    this.dataService.mutations.addIssueComment(\n      Math.random().toString(),\n      this.issue$.id,\n      this.commentEditor.code\n    ).then(() => {\n      // only clear if successful\n      this.commentEditor.code = '';\n    }).finally(() => {\n      this.savingComment = false;\n    });\n  }\n}\n\n    \n\n    \n        \n    \n    \n\n    \n     0\" class=\"timeline-item\">\n        \n            \n                link\n                \n                    Linked Issues\n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                        \n                    \n                \n                 10\"\n                    [list]=\"linkedIssues$\"\n                    [pageSizes]=\"[10]\">\n            \n        \n    \n\n    \n\n    \n\n    \n    \n        \n            \n                \n                    Comment this issue as \n                \n            \n            \n                \n                \n                    Close Issue\n                    \n                    Reopen\n                        Issue\n                    \n                    Comment\n                    \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    issue-contents.component.scss\n                \n                @import 'src/styles/spinner';\n\n.timeline-item {\n  position: relative;\n  margin-left: 36px;\n  padding: 12px 0;\n\n  &:first-child {\n    padding-top: 0;\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -1px;\n    bottom: 0;\n    width: 2px;\n    background: rgba(0, 0, 0, 0.12);\n  }\n\n  .item-box {\n    position: relative;\n    background: white;\n    border-radius: 4px;\n    border: 1px solid rgba(0, 0, 0, 0.1);\n    margin-left: -36px;\n\n    .item-header {\n      background: rgba(0, 0, 0, 0.06);\n      border-bottom: rgba(0, 0, 0, 0.1);\n      border-radius: 4px 4px 0 0;\n      padding: 8px 16px;\n      display: flex;\n      align-items: center;\n\n      mat-icon {\n        margin-right: 8px;\n        margin-left: -8px;\n      }\n\n      .item-title {\n        flex: 1;\n        margin: 0 16px 0 0;\n        overflow: hidden;\n        font-size: inherit;\n        font-weight: inherit;\n\n        .item-edited {\n          opacity: 0.5;\n        }\n      }\n    }\n\n    .item-body {\n      padding: 16px;\n\n      &.is-editing {\n        padding: 8px;\n      }\n\n      .edit-body-buttons {\n        text-align: right;\n        margin-top: 5px;\n        margin-bottom: 3px;\n      }\n    }\n  }\n}\n\n.comment-form {\n  padding-bottom: 0;\n\n  .comment-buttons {\n    text-align: right;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                 0\" class=\"timeline-item\">                                    link                                    Linked Issues                                                                                                                                                                                                                                         10\"                    [list]=\"linkedIssues$\"                    [pageSizes]=\"[10]\">                                                                                                Comment this issue as                                                                                             Close Issue                                        Reopen                        Issue                                        Comment                                                            '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueContentsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueDetailComponent.html":{"url":"components/IssueDetailComponent.html","title":"component - IssueDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-detail/issue-detail.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-detail\n            \n\n            \n                styleUrls\n                ./issue-detail.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activatedRoute\n                            \n                            \n                                category\n                            \n                            \n                                inputTitle\n                            \n                            \n                                    Public\n                                issue$\n                            \n                            \n                                    Public\n                                issueEditable\n                            \n                            \n                                    Public\n                                issueId\n                            \n                            \n                                    Public\n                                issueSub\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                    Public\n                                savingChanges\n                            \n                            \n                                    Public\n                                timeFormatter\n                            \n                            \n                                    Public\n                                userCanEditIssue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                beginEditing\n                            \n                            \n                                    Public\n                                finishEditing\n                            \n                            \n                                formatIssueOpenTime\n                            \n                            \n                                    Private\n                                saveChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-detail/issue-detail.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        beginEditing\n                        \n                    \n                \n            \n            \n                \nbeginEditing()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/issue-detail.component.ts:79\n                \n            \n\n\n            \n                \n                    Begins the editing process in which:\n\nthe issue title and\nthe issue category can be changed.\n\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        finishEditing\n                        \n                    \n                \n            \n            \n                \n                    \n                    finishEditing(save?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/issue-detail.component.ts:97\n                \n            \n\n\n            \n                \n                    Finishes the editing process in which:\n\nthe issue title and\nthe issue category can be changed.\n\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    save\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nBoolean that indicates whether to save the new title.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatIssueOpenTime\n                        \n                    \n                \n            \n            \n                \nformatIssueOpenTime()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/issue-detail.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        saveChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/issue-detail.component.ts:118\n                \n            \n\n\n            \n                \n                    Saves all changes to the current issue.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activatedRoute\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActivatedRoute\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inputTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('titleInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issue$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataNode\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issueEditable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issueId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issueSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        savingChanges\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        timeFormatter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new TimeFormatter()\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userCanEditIssue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Issue } from 'src/generated/graphql-dgql';\nimport { Subscription } from 'rxjs';\nimport { NodeType } from '@app/data-dgql/id';\nimport { DataNode } from '@app/data-dgql/query';\nimport DataService from '@app/data-dgql';\nimport { TimeFormatter } from '@app/issue-detail/TimeFormatter';\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-issue-detail',\n  templateUrl: './issue-detail.component.html',\n  styleUrls: ['./issue-detail.component.scss']\n})\n/**\n * This component provides detailed information about an issue.\n * It also lets the user edit properties of an issue.\n */\nexport class IssueDetailComponent implements OnInit, OnDestroy {\n\n  // current project id\n  public projectId: string;\n\n  // current issue id\n  public issueId: string;\n\n  // mark whether the current issue is editable\n  public issueEditable = false;\n\n  // mark whether changes to the current issue are being saved,\n  // used for the loading spinner of the Save button\n  public savingChanges = false;\n\n  // provides functions for time formatting\n  public timeFormatter = new TimeFormatter();\n\n  // FIXME: replace with issue$.current?.userCanEditIssue in HTML once that works\n  public userCanEditIssue = true;\n\n  public issue$: DataNode;\n  public issueSub: Subscription;\n\n  // new title of the current issue\n  @ViewChild('titleInput') inputTitle: ElementRef;\n\n  // new category of the current issue\n  category = new FormControl('', [Validators.required]);\n\n  constructor(private dataService: DataService, \n              public activatedRoute: ActivatedRoute\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.projectId = this.activatedRoute.snapshot.paramMap.get('id');\n    this.issueId = this.activatedRoute.snapshot.paramMap.get('issueId');\n    const issueNodeId = { type: NodeType.Issue, id: this.issueId };\n\n    this.issue$ = this.dataService.getNode(issueNodeId);\n    this.issueSub = this.issue$.subscribe();\n  }\n\n  ngOnDestroy() {\n    this.issueSub.unsubscribe();\n  }\n\n  formatIssueOpenTime(): string {\n    if (this.issue$.hasData) {\n      return this.timeFormatter.formatTimeDifference(this.issue$.current.createdAt);\n    }\n  }\n  \n  /**\n   * Begins the editing process in which:\n   * 1) the issue title and \n   * 2) the issue category can be changed.\n   */\n  beginEditing() {\n\n    // marks the issue as editable\n    this.issueEditable = true;\n\n    // sets up the issue category\n    this.issue$.dataAsPromise().then(data =>\n      {\n        this.category.setValue(data.category);\n      });\n  }\n\n  /**\n   * Finishes the editing process in which:\n   * 1) the issue title and \n   * 2) the issue category can be changed.\n   * @param save - Boolean that indicates whether to save the new title.\n   */\n  public finishEditing(save?: boolean): void {\n\n    // case: the new changes are to be saved\n    if (save) {\n\n      // marks the saving process as started\n      this.savingChanges = true;\n\n      // saves all changes\n      this.saveChanges();\n    }\n    \n    // case: the new changes are not to be saved\n    else {\n      this.issueEditable = false;\n    }\n  }\n\n  /**\n   * Saves all changes to the current issue.\n   */\n  private saveChanges() {\n\n    // 1) saves the new title\n    this.dataService.mutations.renameIssueTitle(\n      Math.random().toString(),\n      this.issue$.id,\n      this.inputTitle.nativeElement.value\n    );\n\n    // 2) saves the new category\n    this.dataService.mutations.changeIssueCategory(\n      Math.random().toString(),\n      this.issue$.id,\n      this.category.value\n    ).then(() => {\n      // marks the issue as uneditable\n      this.issueEditable = false;\n    }).finally(() => {\n      // marks the saving process as finished\n      this.savingChanges = false;\n    });\n  } \n}\n\n    \n\n    \n        \n\n\n  \n  \n\n    \n    \n\n      \n      \n        {{issue.title}}\n      \n\n      \n      \n        \n      \n\n      \n\n        \n        \n          Edit\n        \n\n        \n\n          \n          \n            Cancel\n          \n          \n          &nbsp;\n\n          \n          \n            Save\n          \n        \n      \n    \n\n    \n    \n\n      \n      \n        \n          \n          Unclassified\n        \n        \n          \n          Bug\n        \n        \n          \n          Feature Request\n        \n      \n    \n\n    \n    \n\n      \n      \n        \n        \n          Open\n          Closed\n        \n      \n\n      \n      \n        \n        opened this issue\n        \n          {{this.formatIssueOpenTime()}}\n        \n      \n\n      \n      \n        &nbsp;&sdot; {{this.timeFormatter.pluralize(issue.issueComments?.totalCount + 1, 'comment')}}\n      \n    \n  \n\n  \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./issue-detail.component.scss\n                \n                @import 'src/styles/variables.scss';\n@import 'src/styles/spinner';\n\n.category-selector {\n  width: 100%;\n  margin-bottom: 8px;\n\n  mat-button-toggle {\n    width: 100%;\n\n    ::ng-deep &.mat-button-toggle-checked {\n      font-weight: 600;\n    }\n  }\n}\n\n.issue-details {\n  padding: 16px;\n\n  .issue-header {\n    padding-bottom: 16px;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.15);\n    margin-bottom: 16px;\n  }\n\n  .issue-page {\n    display: flex;\n\n    .issue-contents {\n      flex: 2;\n    }\n\n    .issue-sidebar {\n      flex: 1;\n      max-width: 300px;\n      margin-left: 16px;\n    }\n  }\n}\n\n@media (max-width: 600px) {\n  // put issue sidebar below on narrow displays\n  .issue-details .issue-page {\n    display: block;\n  }\n}\n\n.issue-header {\n  .issue-title {\n    display: flex;\n    align-items: center;\n    margin-bottom: 8px;\n\n    .title-text {\n      margin: 0;\n      margin-right: 16px;\n      flex: 1;\n    }\n\n    .title-input {\n      flex: 1;\n      margin-right: 16px;\n\n      ::ng-deep .mat-form-field-wrapper {\n        padding-bottom: 0;\n\n        .mat-form-field-infix {\n          border-top-width: 0.5em;\n        }\n      }\n    }\n  }\n\n  .issue-category {\n    display: flex;\n    align-items: center;\n    margin-bottom: 8px;\n  }\n\n  .issue-subheading {\n    display: flex;\n    align-items: center;\n\n    .issue-status {\n      display: inline-flex;\n      padding: 2px 8px 2px 4px;\n      border-radius: 100px;\n      border: 1px solid rgba(0, 0, 0, 0.1);\n      align-items: center;\n      font-weight: 500;\n      margin-right: 8px;\n\n      .status-icon {\n        margin-right: 2px;\n      }\n      .status-label {\n        display: block;\n      }\n\n      .status-icon ::ng-deep svg {\n        .state[fill] {\n          fill: white;\n        }\n        .state[stroke] {\n          stroke: white;\n        }\n        .arrow-in, .arrow-out, .assigned-star {\n          fill: rgba(255, 255, 255, 0.7);\n        }\n      }\n\n      &.is-open {\n        color: white;\n        background: #00ba39;\n      }\n      &.is-closed {\n        color: white;\n        background: #ff0036;\n      }\n    }\n\n    .issue-opened, .issue-stats {\n      display: inline-block;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{issue.title}}                                                                Edit                                                Cancel                                                               Save                                                                            Unclassified                                    Bug                                    Feature Request                                                                Open          Closed                                          opened this issue                  {{this.formatIssueOpenTime()}}                                   ⋅ {{this.timeFormatter.pluralize(issue.issueComments?.totalCount + 1, \\'comment\\')}}                          '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueFilterComponent.html":{"url":"components/IssueFilterComponent.html","title":"component - IssueFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-list/issue-filter.component.ts\n\n\n\n    \n        Description\n    \n    \n        Edits an IssueFilter object.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-filter\n            \n\n            \n                styleUrls\n                ./issue-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activePredicates\n                            \n                            \n                                predicateCount\n                            \n                            \n                                predicates\n                            \n                            \n                                predicateValues\n                            \n                            \n                                searchQuery\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPredicateAfter\n                            \n                            \n                                applyIdChangeset\n                            \n                            \n                                buildFilter\n                            \n                            \n                                getRemainingTypes\n                            \n                            \n                                removePredicateAt\n                            \n                            \n                                setInEnumArray\n                            \n                            \n                                setPredicateType\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                allLabelsList\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                filterChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        allLabelsList\n                    \n                \n                \n                    \n                        Type :         ListId\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-list/issue-filter.component.ts:109\n                            \n                        \n                \n                    \n                        The list from which to source labels in the label picker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-list/issue-filter.component.ts:107\n                            \n                        \n                \n                    \n                        Raw project ID.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        filterChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-list/issue-filter.component.ts:111\n                            \n                        \n                \n                    \n                        Emitted every time the filter is changed.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addPredicateAfter\n                        \n                    \n                \n            \n            \n                \naddPredicateAfter(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-filter.component.ts:158\n                \n            \n\n\n            \n                \n                    Adds a new predicate after the given index in activePredicates.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        index in activePredicates\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        applyIdChangeset\n                        \n                    \n                \n            \n            \n                \napplyIdChangeset(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-filter.component.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     (added: any, removed: any) => any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildFilter\n                        \n                    \n                \n            \n            \n                \nbuildFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-filter.component.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     IssueFilter\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRemainingTypes\n                        \n                    \n                \n            \n            \n                \ngetRemainingTypes(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-filter.component.ts:128\n                \n            \n\n\n            \n                \n                    Returns all types of predicates that were not taken in previous items.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        index in activePredicates\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removePredicateAt\n                        \n                    \n                \n            \n            \n                \nremovePredicateAt(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-filter.component.ts:148\n                \n            \n\n\n            \n                \n                    Removes the predicate at the given index in activePredicates.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        index in activePredicates\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setInEnumArray\n                        \n                    \n                \n            \n            \n                \nsetInEnumArray(array, item, inArray)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-filter.component.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    array\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    inArray\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPredicateType\n                        \n                    \n                \n            \n            \n                \nsetPredicateType(index: number, type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-filter.component.ts:138\n                \n            \n\n\n            \n                \n                    Sets the type of the predicate at index in activePredicates.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        index in activePredicates\n\n                                    \n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        new type (must be unique!)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-filter.component.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activePredicates\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-filter.component.ts:118\n                        \n                    \n\n            \n                \n                    The names of currently active predicates.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        predicateCount\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.keys(PREDICATES).length\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-filter.component.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        predicates\n                        \n                    \n                \n            \n                \n                    \n                        Default value : PREDICATES\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-filter.component.ts:114\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        predicateValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-filter.component.ts:120\n                        \n                    \n\n            \n                \n                    The values of currently active predicates.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-filter.component.ts:122\n                        \n                    \n\n            \n                \n                    Current search query.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { IssueCategory, IssueFilter } from '../../generated/graphql-dgql';\nimport { ListId, ListType, NodeType, ROOT_NODE } from '@app/data-dgql/id';\n\nconst listAllIssues = (self: IssueFilterComponent) => ({\n  node: { type: NodeType.Project, id: self.projectId },\n  type: ListType.Issues\n});\n\nconst PREDICATES = {\n  isOpen: { type: 'bool', label: 'Is open' },\n  isDuplicate: { type: 'bool', label: 'Is duplicate' },\n  category: {\n    type: 'enum',\n    label: 'Category',\n    options: [\n      [IssueCategory.Unclassified, 'Unclassified'],\n      [IssueCategory.Bug, 'Bug'],\n      [IssueCategory.FeatureRequest, 'Feature Request']\n    ]\n  },\n  labels: {\n    type: 'ids',\n    label: 'Labels',\n    dataType: 'label',\n    scoreKeys: ['name'],\n    listAll: (self: IssueFilterComponent) => self.allLabelsList,\n    makeFilter: (query: string) => ({ name: query }),\n    ifEmpty: 'No labels selected',\n  },\n  linksIssues: { type: 'bool', label: 'Has linked issues' },\n  linkedIssues: {\n    type: 'ids',\n    label: 'Linked issues',\n    dataType: 'issue',\n    scoreKeys: ['title'],\n    listAll: listAllIssues,\n    makeFilter: (query: string) => ({ title: query }),\n    ifEmpty: 'No issues selected',\n  },\n  isLinkedByIssues: { type: 'bool', label: 'Is linked by issues' },\n  linkedByIssues: {\n    type: 'ids',\n    label: 'Linked by issues',\n    dataType: 'issue',\n    scoreKeys: ['title'],\n    listAll: listAllIssues,\n    makeFilter: (query: string) => ({ title: query }),\n    ifEmpty: 'No issues selected',\n  },\n  participants: {\n    type: 'ids',\n    label: 'Participants',\n    dataType: 'user',\n    scoreKeys: ['username', 'displayName'],\n    listAll: () => ({ node: ROOT_NODE, type: ListType.SearchUsers }),\n    makeFilter: (query: string) => ({ username: query }),\n    ifEmpty: 'No users selected',\n  },\n  locations: {\n    type: 'ids',\n    label: 'Locations',\n    dataType: 'location',\n    scoreKeys: ['name'],\n    listAll: (self: IssueFilterComponent) => ({\n      staticSources: [\n        { node: { type: NodeType.Project, id: self.projectId }, type: ListType.Components },\n        { node: { type: NodeType.Project, id: self.projectId }, type: ListType.ComponentInterfaces },\n      ]\n    }),\n    makeFilter: (query: string) => ({ title: query }),\n    ifEmpty: 'No locations selected',\n  },\n};\n\nfunction getDefaultForType(type: string) {\n  switch (type) {\n    case 'bool':\n      return true;\n    case 'enum':\n    case 'ids':\n      return [];\n    default:\n      throw new Error(`unknown type ${type}`);\n  }\n}\n\nfunction convertValueForFilter(type: string, value: any) {\n  switch (type) {\n    case 'ids':\n      return value.map(item => item.id);\n    default:\n      return value;\n  }\n}\n\n/**\n * Edits an IssueFilter object.\n */\n@Component({\n  selector: 'app-issue-filter',\n  templateUrl: './issue-filter.component.html',\n  styleUrls: ['./issue-filter.component.scss']\n})\nexport class IssueFilterComponent {\n  /** Raw project ID. */\n  @Input() projectId: string;\n  /** The list from which to source labels in the label picker. */\n  @Input() allLabelsList: ListId;\n  /** Emitted every time the filter is changed. */\n  @Output() filterChange = new EventEmitter();\n\n  // constants as class properties because angular\n  predicates = PREDICATES;\n  predicateCount = Object.keys(PREDICATES).length;\n\n  /** The names of currently active predicates. */\n  activePredicates: string[] = [];\n  /** The values of currently active predicates. */\n  predicateValues: { [key: string]: any } = {};\n  /** Current search query. */\n  searchQuery = '';\n\n  /**\n   * Returns all types of predicates that were not taken in previous items.\n   * @param index index in activePredicates\n   */\n  getRemainingTypes(index: number): string[] {\n    const previousItems = this.activePredicates.slice(0, index);\n    return Object.keys(PREDICATES).filter(id => !previousItems.includes(id));\n  }\n\n  /**\n   * Sets the type of the predicate at index in activePredicates.\n   * @param index index in activePredicates\n   * @param type new type (must be unique!)\n   */\n  setPredicateType(index: number, type: string) {\n    this.activePredicates[index] = type;\n    this.predicateValues[type] = getDefaultForType(PREDICATES[type].type);\n    this.update();\n  }\n\n  /**\n   * Removes the predicate at the given index in activePredicates.\n   * @param index index in activePredicates\n   */\n  removePredicateAt(index: number) {\n    const type = this.activePredicates.splice(index, 1)[0];\n    delete this.predicateValues[type];\n    this.update();\n  }\n\n  /**\n   * Adds a new predicate after the given index in activePredicates.\n   * @param index index in activePredicates\n   */\n  addPredicateAfter(index: number) {\n    const type = this.getRemainingTypes(index + 1)[0];\n    this.activePredicates.splice(index + 1, 0, type);\n    this.predicateValues[type] = getDefaultForType(PREDICATES[type].type);\n    this.update();\n  }\n\n  setInEnumArray(array, item, inArray) {\n    if (inArray && !array.includes(item)) {\n      array.push(item);\n    }\n    if (!inArray && array.includes(item)) {\n      array.splice(array.indexOf(item), 1);\n    }\n    this.update();\n  }\n\n  applyIdChangeset(id) {\n    return async (added, removed) => {\n      for (const item of added) {\n        this.predicateValues[id].push(item);\n      }\n      for (const item of removed) {\n        this.predicateValues[id].splice(this.predicateValues[id].indexOf(item), 1);\n      }\n      this.update();\n    };\n  }\n\n  buildFilter(): IssueFilter {\n    const filter: IssueFilter = {};\n    if (this.searchQuery.trim()) {\n      filter.fullSearch = { text: this.searchQuery.trim() };\n    }\n    for (const id of this.activePredicates) {\n      filter[id] = convertValueForFilter(PREDICATES[id].type, this.predicateValues[id]);\n    }\n    return filter;\n  }\n\n  update() {\n    this.filterChange.emit(this.buildFilter());\n  }\n}\n\n    \n\n    \n        \n    \n        \n            Search\n            \n        \n        \n            filter_list\n        \n    \n\n    \n        \n            Filter\n        \n        \n            \n                \n                    \n                        \n                            {{predicates[type].label}}\n                        \n                    \n                \n            \n            \n\n                \n\n                \n                    \n                        \n                            Yes\n                        \n                        \n                            No\n                        \n                    \n                \n                \n                    \n                        \n                            {{entry[1]}}\n                        \n                    \n                \n                \n                    \n                        {{predicates[id].label}}\n                        {{predicates[id].ifEmpty}}\n                        \n                            \n                            \n                            \n                            \n                                \n                                    {{item.name}}\n                                \n                                \n                                    \n                                        {{item.component.name}} ›\n                                    \n                                    {{item.name}}\n                                \n                            \n                        \n                    \n                \n\n                \n\n            \n            \n                \n                    remove\n                \n                \n                    add\n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./issue-filter.component.scss\n                \n                .filter-box {\n  padding: 8px;\n\n  // we do not want the extra spacing around form fields\n  // (we wont be showing any helper text or errors anyway)\n  ::ng-deep .mat-form-field-wrapper {\n    padding-bottom: 0;\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  .pred-add, .pred-remove {\n    min-width: 48px;\n    width: 48px;\n    padding: 0 8px;\n  }\n\n  .search-box {\n    display: flex;\n    align-items: center;\n\n    .search-field {\n      flex: 1;\n    }\n\n    .pred-add {\n      margin-left: 16px;\n    }\n  }\n\n  .filter-predicates {\n    margin-top: 8px;\n\n    .filter-title {\n      font-weight: bold;\n      padding-left: 8px;\n    }\n\n    .filter-predicate {\n      display: flex;\n      align-items: flex-start;\n\n      .predicate-type {\n        margin-right: 16px;\n      }\n      .predicate-value {\n        flex: 1;\n      }\n\n      .predicate-mgmt {\n        margin-left: 16px;\n        border: 1px solid rgba(0, 0, 0, 0.1);\n        border-radius: 4px;\n\n        .pred-add {\n          margin-left: 4px;\n        }\n      }\n\n      @media (max-width: 500px) {\n        display: block;\n        border-top: 1px solid rgba(0, 0, 0, 0.1);\n        padding: 8px 0;\n\n        .predicate-type {\n          margin-right: 0;\n          margin-bottom: 8px;\n\n          .predicate-type-selector {\n            width: 100%;\n          }\n        }\n        .predicate-value {\n          .bool-value {\n            width: 100%;\n            mat-button-toggle {\n              width: 100%;\n            }\n          }\n        }\n        .predicate-mgmt {\n          border: none;\n          margin-left: 0;\n          text-align: right;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Search                                        filter_list                                    Filter                                                                                                                    {{predicates[type].label}}                                                                                                                                                                                            Yes                                                                            No                                                                                                                                                    {{entry[1]}}                                                                                                                        {{predicates[id].label}}                        {{predicates[id].ifEmpty}}                                                                                                                                                                                                            {{item.name}}                                                                                                                                            {{item.component.name}} ›                                                                        {{item.name}}                                                                                                                                                                                                    remove                                                    add                                        '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IssueFolderNode.html":{"url":"interfaces/IssueFolderNode.html","title":"interface - IssueFolderNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IssueFolderNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/issue-graph-nodes.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Node\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            issueCount\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        issueCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issueCount:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     IssueCategory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IssueCategory\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {GraphComponent, GraphInterface} from '@app/data/issue-graph/graph-data';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\n\nexport {\n  IssueNode, ComponentNode, InterfaceNode, IssueGroupContainerNode, RelationEdge,\n  createComponentNode, createInterfaceNode, createIssueGroupContainerNode, createIssueFolderNode,\n  createRelationEdge, createConsumptionEdge, createInterfaceProvisionEdge,\n  Position,\n  getIssueFolderId\n};\n\nexport enum NodeType {\n  Component = 'component',\n  Interface = 'interface',\n  InterfaceConsumer = 'interface-connect',\n  IssueGroupContainer = 'issue-group-container'\n}\n\n/**\n * This file includes type definitions and creation functions (think constructors)\n * for nodes and edges that are added to the graph editor in order to visualize the project.\n * Since the data that is stored with these differs based on what they represent (e.g.\n * interface vs component node) we give each their own type. We do this by extending\n * the Node class or the Edge class of the grapheditor. These classes are instantiated\n * via calls to the contained create* functions within the drawGraph method of the IssueGraphComponent.\n */\n\ninterface IssueNode extends Node {\n  id: string;\n  title: string;\n  issueGroupContainer?: IssueGroupContainerNode;\n}\n\ninterface ComponentNode extends IssueNode {\n  data: GraphComponent;\n}\n\nfunction createComponentNode(component: GraphComponent, position: Position): ComponentNode {\n  return {\n    ...(position || zeroPosition),\n    id: component.id,\n    title: component.name,\n    type: NodeType.Component,\n    data: component\n  };\n}\n\ninterface InterfaceNode extends IssueNode {\n  offeredById: string;\n}\n\nfunction createInterfaceNode(intrface: GraphInterface, position: Position): InterfaceNode {\n  return {\n    ...(position || zeroPosition),\n    id: intrface.id,\n    title: intrface.name,\n    type: NodeType.Interface,\n    offeredById: intrface.offeredBy,\n  };\n}\n\ninterface IssueGroupContainerNode extends Node {\n  position: string;\n  issueGroupNodeIds: Set;\n}\n\nfunction createIssueGroupContainerNode(node: IssueNode): IssueGroupContainerNode {\n  return {\n    id: `${node.id}__issue-group-container`,\n    type: NodeType.IssueGroupContainer,\n    dynamicTemplate: 'issue-group-container',\n    x: 0,\n    y: 0,\n    position: 'bottom',\n    issueGroupNodeIds: new Set(),\n  };\n}\n\ninterface IssueFolderNode extends Node {\n  type: IssueCategory;\n  issueCount: string;\n}\n\nfunction createIssueFolderNode(node: IssueNode, issueCategory: IssueCategory, issueCount: string): IssueFolderNode {\n  return {\n    id: getIssueFolderId(node.id, issueCategory),\n    type: issueCategory,\n    x: 0,\n    y: 0,\n    issues: new Set(),\n    issueCount\n  };\n}\n\ninterface RelationEdge extends Edge {\n  sourceIssues: Set;\n}\n\nfunction createRelationEdge(sourceId: string, targetId: string, edgeType = folderEdgeTypes.RelatedTo): RelationEdge {\n  return {\n    id: `s${sourceId}t${targetId}r${edgeType}`,\n    source: sourceId,\n    target: targetId,\n    type: folderEdgeTypes.RelatedTo,\n    markerEnd: {\n      template: 'arrow',\n      relativeRotation: 0,\n    },\n    dragHandles: [],\n    sourceIssues: new Set()\n  };\n}\n\nfunction createConsumptionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.InterfaceConsumer,\n    markerEnd: {\n      template: 'interface-connector',\n      relativeRotation: 0,\n    },\n  };\n}\n\nfunction createInterfaceProvisionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.Interface,\n    dragHandles: [],\n  };\n}\n\nfunction getIssueFolderId(id: string, issueCategory: IssueCategory): string {\n  return `${id}__${issueCategory}`;\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst zeroPosition = {x: 0, y: 0};\n\nenum folderEdgeTypes {\n  RelatedTo = 'relatedTo',\n  Depends = 'dependency',\n  Duplicates = 'duplicate'\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IssueGraphApiService.html":{"url":"injectables/IssueGraphApiService.html","title":"injectable - IssueGraphApiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IssueGraphApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/issue-graph/issue-graph-api.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Responsible for retrieval and conversion of data needed for graph rendering from backend.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addConsumedInterface\n                            \n                            \n                                loadIssueGraphData\n                            \n                            \n                                removeConsumedInterface\n                            \n                            \n                                textsToRegex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(getFullIssueGraphDataQuery: GetIssueGraphDataGQL, addConsumedInterfaceMutation: AddConsumedInterfaceGQL, removeConsumedInterfaceMutation: RemoveConsumedInterfaceGQL, getSearchIssueGraphDataQuery: GetIssueGraphDataForSearchGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/issue-graph/issue-graph-api.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        getFullIssueGraphDataQuery\n                                                  \n                                                        \n                                                                        GetIssueGraphDataGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addConsumedInterfaceMutation\n                                                  \n                                                        \n                                                                    AddConsumedInterfaceGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        removeConsumedInterfaceMutation\n                                                  \n                                                        \n                                                                    RemoveConsumedInterfaceGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getSearchIssueGraphDataQuery\n                                                  \n                                                        \n                                                                        GetIssueGraphDataForSearchGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addConsumedInterface\n                        \n                    \n                \n            \n            \n                \naddConsumedInterface(component: string, componentInterface: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/issue-graph-api.service.ts:80\n                \n            \n\n\n            \n                \n                    Make the interface with interfaceId a consumed interface of the component with id componentId\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    componentInterface\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadIssueGraphData\n                        \n                    \n                \n            \n            \n                \nloadIssueGraphData(projectId: string, categories: SelectedCategories, labels: FilterLabel[], texts: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/issue-graph-api.service.ts:42\n                \n            \n\n\n            \n                \n                    Queries backend for data needed to render graph when given parameters restricting what information is requested.\nThis method handels the construction of the parameters to the graphql query,\nand makes the query. To carry out the conversion from backend to frontend format,\nit invokes GraphDataFactory.graphDataFromGQL\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    categories\n                                    \n                                                SelectedCategories\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        describes which issue categories (e.g. BUG) are of interest\n\n                                    \n                                \n                                \n                                    labels\n                                    \n                                                FilterLabel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a list of issue labels the user has entered into the query bar\n\n                                    \n                                \n                                \n                                    texts\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a list of text fragments the user has entered into the query bar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeConsumedInterface\n                        \n                    \n                \n            \n            \n                \nremoveConsumedInterface(component: string, componentInterface: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/issue-graph-api.service.ts:89\n                \n            \n\n\n            \n                \n                    Remove the interface with interfaceId from consumed interfaces of the component with id componentId\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    componentInterface\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        textsToRegex\n                        \n                    \n                \n            \n            \n                \ntextsToRegex(texts: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/issue-graph-api.service.ts:68\n                \n            \n\n\n            \n                \n                    Creates a regular expression denoting a language of the union of the strings in texts\ntextsToRegex([\"newest issues\", \"test\"]) == \"(newest issues | test)\"\"\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    texts\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            textsToRegex([&quot;newest issues&quot;, &quot;test&quot;]) == &quot;(newest issues | test)&quot;&quot;\n                        \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {map} from 'rxjs/operators';\nimport {\n  AddConsumedInterfaceGQL,\n  GetIssueGraphDataForSearchGQL,\n  GetIssueGraphDataGQL,\n  IssueCategory,\n  RemoveConsumedInterfaceGQL\n} from 'src/generated/graphql';\nimport {GraphData, GraphDataFactory} from './graph-data';\nimport {Observable} from 'rxjs';\nimport {SelectedCategories} from '@app/graphs/shared';\nimport {FilterLabel} from '../label/label-store.service';\n\n/**\n * Responsible for retrieval and conversion of data needed for graph rendering from backend.\n *\n * @export\n * @class IssueGraphApiService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class IssueGraphApiService {\n\n  constructor(private getFullIssueGraphDataQuery: GetIssueGraphDataGQL,\n              private addConsumedInterfaceMutation: AddConsumedInterfaceGQL,\n              private removeConsumedInterfaceMutation: RemoveConsumedInterfaceGQL,\n              private getSearchIssueGraphDataQuery: GetIssueGraphDataForSearchGQL) {\n  }\n\n  /**\n   * Queries backend for data needed to render graph when given parameters restricting what information is requested.\n   * This method handels the construction of the parameters to the graphql query,\n   * and makes the query. To carry out the conversion from backend to frontend format,\n   * it invokes GraphDataFactory.graphDataFromGQL\n   * @param projectId\n   * @param categories describes which issue categories (e.g. BUG) are of interest\n   * @param labels a list of issue labels the user has entered into the query bar\n   * @param texts a list of text fragments the user has entered into the query bar\n   */\n  loadIssueGraphData(projectId: string, categories: SelectedCategories, labels: FilterLabel[], texts: string[]): Observable {\n    const activeCategories: IssueCategory[] = [];\n    for (const key of Object.values(IssueCategory)) {\n      if (categories[key]) {\n        activeCategories.push(key as IssueCategory);\n      }\n    }\n    if (labels.length === 0 && texts.length === 0) {\n      return this.getFullIssueGraphDataQuery.fetch({projectId, activeCategories}).pipe(\n        map(result => GraphDataFactory.removeFilteredData(GraphDataFactory.graphDataFromGQL(result.data), activeCategories)\n        ));\n    } else {\n      const selectedLabels: string[] = labels.map(label => label.id);\n      const issueRegex = this.textsToRegex(texts);\n      return this.getSearchIssueGraphDataQuery.fetch({projectId, activeCategories, selectedLabels, issueRegex}).pipe(\n        map(result => GraphDataFactory.removeFilteredData(GraphDataFactory.graphDataFromGQL(result.data), activeCategories)\n        ));\n    }\n  }\n\n  /**\n   * Creates a regular expression denoting a language of the union of the strings in texts\n   * @param texts\n   * @example\n   * textsToRegex([\"newest issues\", \"test\"]) == \"(newest issues | test)\"\"\n   */\n  textsToRegex(texts: string[]): string {\n    if (texts.length === 0) {\n      return undefined;\n    }\n    return texts.map(text => '(' + text + ')').join('|');\n  }\n\n  /**\n   * Make the interface with interfaceId a consumed interface of the component with id componentId\n   * @param component\n   * @param componentInterface\n   */\n  addConsumedInterface(component: string, componentInterface: string) {\n    return this.addConsumedInterfaceMutation.mutate({input: {component, componentInterface}});\n  }\n\n  /**\n   * Remove the interface with interfaceId from consumed interfaces of the component with id componentId\n   * @param component\n   * @param componentInterface\n   */\n  removeConsumedInterface(component: string, componentInterface: string) {\n    return this.removeConsumedInterfaceMutation.mutate({input: {component, componentInterface}});\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IssueGraphClassSettersService.html":{"url":"injectables/IssueGraphClassSettersService.html","title":"injectable - IssueGraphClassSettersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IssueGraphClassSettersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/class-setters/issue-graph-class-setters.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service is respoonsible for managing the class setters\nof a given GraphEditor instance.\nUsed in method initGraph of IssueGraphComponent.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                manageClassSetters\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        manageClassSetters\n                        \n                    \n                \n            \n            \n                \nmanageClassSetters(graph: GraphEditor, minimap: GraphEditor)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/class-setters/issue-graph-class-setters.service.ts:24\n                \n            \n\n\n            \n                \n                    Manages node / edge class setters so that node / edge classes\nof given GraphEditor instances match their corresponding class names.\nThe setters return true if the class name is applied to the corresponding node / edge.\nThey are called on all nodes, pairs of edges and class names.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    graph\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nReference to the GraphEditor instance of the graph that is handled.\n\n\n                                    \n                                \n                                \n                                    minimap\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nReference to the GraphEditor instance of the minimap that is handled.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\nimport GraphEditor from '@ustutt/grapheditor-webcomponent/lib/grapheditor';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\n\n/**\n * This service is respoonsible for managing the class setters \n * of a given GraphEditor instance.\n * Used in method initGraph of IssueGraphComponent.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class IssueGraphClassSettersService {\n\n  /**\n   * Manages node / edge class setters so that node / edge classes \n   * of given GraphEditor instances match their corresponding class names.\n   * The setters return true if the class name is applied to the corresponding node / edge.\n   * They are called on all nodes, pairs of edges and class names.\n   * @param  {GraphEditor} graph - Reference to the GraphEditor instance of the graph that is handled.\n   * @param  {GraphEditor} minimap - Reference to the GraphEditor instance of the minimap that is handled.\n   */\n  manageClassSetters(graph: GraphEditor, minimap: GraphEditor) {\n\n    // node class setter\n    const nodeClassSetter = (className: string, node: Node) => {\n      if (className === node.type) {\n        return true;\n      }\n      return false;\n    };\n\n    // applies noce class setter\n    graph.setNodeClass = nodeClassSetter;\n    minimap.setNodeClass = nodeClassSetter;\n\n    // edge class setter\n    const edgeClassSetter = (\n      className: string,\n      edge: Edge,\n      sourceNode: Node,\n      targetNode: Node\n    ) => {\n      if (className === edge.type) {\n        return true;\n      }\n      if (className === 'related-to' && edge.type === 'relatedTo') {\n        return true;\n      }\n      if (className === 'issue-relation' &&\n        (edge.type === 'relatedTo' ||\n          edge.type === 'duplicate' ||\n          edge.type === 'dependency')) {\n        return true;\n      }\n      return false;\n    };\n\n    // applies edge class setter\n    graph.setEdgeClass = edgeClassSetter;\n    minimap.setEdgeClass = edgeClassSetter;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueGraphControlsComponent.html":{"url":"components/IssueGraphControlsComponent.html","title":"component - IssueGraphControlsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueGraphControlsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component contains the graph toggles, the search bar and the button\nfor creating new components. Additionally it contains the actual graph component and feeds\ndata to it. This component collects the state of the search bar and graph toggles, combines it and emits it via this.filter$.\nAnother observable retrieved from the IssueGraphStateService maps these values into the graph\ndata matching the filters. Whenever new graph data arrives it is feed to the actual graph component. (see ngAfterViewInit)\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-graph-controls\n            \n\n            \n                styleUrls\n                ./issue-graph-controls.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-graph-controls.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bug\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                featureRequests\n                            \n                            \n                                filter$\n                            \n                            \n                                issueGraph\n                            \n                            \n                                labelSearch\n                            \n                            \n                                projectId\n                            \n                            \n                                    Public\n                                selectedCategories$\n                            \n                            \n                                showRelations\n                            \n                            \n                                unclassified\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getSelectedCategories\n                            \n                            \n                                layoutGraph\n                            \n                            \n                                setRelationVisibility\n                            \n                            \n                                    Public\n                                updateSelectedCategories\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, gs: IssueGraphStateService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gs\n                                                  \n                                                        \n                                                                        IssueGraphStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getSelectedCategories\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSelectedCategories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:66\n                \n            \n\n\n            \n                \n                    Gathers booleans indicating whether the toggle switches\ncoressponding to values in IssueCategory are turned on or off\n\n\n                    \n                        Returns :         SelectedCategories\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        layoutGraph\n                        \n                    \n                \n            \n            \n                \nlayoutGraph()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRelationVisibility\n                        \n                    \n                \n            \n            \n                \nsetRelationVisibility()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:108\n                \n            \n\n\n            \n                \n                    Tell the graph component whether to show issue relations or not.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateSelectedCategories\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSelectedCategories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:57\n                \n            \n\n\n            \n                \n                    Emit newly selected categories via this.selectedCategories$\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bug\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        featureRequests\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filter$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issueGraph\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IssueGraphComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(IssueGraphComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelSearch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LabelSearchComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(LabelSearchComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectedCategories$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(\n    this.getSelectedCategories()\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showRelations\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unclassified\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnDestroy, ViewChild} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {ActivatedRoute} from '@angular/router';\nimport {IssueGraphComponent} from '../issue-graph/issue-graph.component';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {BehaviorSubject, combineLatest, ReplaySubject} from 'rxjs';\nimport {SelectedCategories} from '../shared';\nimport {IssueGraphStateService} from '../../data/issue-graph/issue-graph-state.service';\nimport {LabelSearchComponent} from '../label-search/label-search.component';\nimport {map, takeUntil} from 'rxjs/operators';\nimport {FilterState} from '@app/graphs/shared';\n\n/**\n * This component contains the graph toggles, the search bar and the button\n * for creating new components. Additionally it contains the actual graph component and feeds\n * data to it. This component collects the state of the search bar and graph toggles, combines it and emits it via this.filter$.\n * Another observable retrieved from the IssueGraphStateService maps these values into the graph\n * data matching the filters. Whenever new graph data arrives it is feed to the actual graph component. (see ngAfterViewInit)\n */\n@Component({\n  selector: 'app-issue-graph-controls',\n  templateUrl: './issue-graph-controls.component.html',\n  styleUrls: ['./issue-graph-controls.component.scss']\n})\nexport class IssueGraphControlsComponent implements AfterViewInit, OnDestroy {\n  @ViewChild(IssueGraphComponent) issueGraph: IssueGraphComponent;\n  @ViewChild(LabelSearchComponent) labelSearch: LabelSearchComponent;\n\n  projectId: string;\n\n  // these 3 booleans are bound to the issue category toggles via ngModel\n  featureRequests = true;\n  bug = true;\n  unclassified = true;\n\n  showRelations = true;\n  // emits state of toggles and search bar combined\n  filter$: BehaviorSubject;\n  private destroy$ = new ReplaySubject(1);\n\n  constructor(public dialog: MatDialog, private gs: IssueGraphStateService, private route: ActivatedRoute) {\n    this.projectId = this.route.snapshot.paramMap.get('id');\n    this.filter$ = new BehaviorSubject({\n      selectedCategories: this.getSelectedCategories(), selectedFilter: {\n        labels: [], texts: []\n      }\n    });\n  }\n\n  public selectedCategories$ = new BehaviorSubject(\n    this.getSelectedCategories()\n  );\n\n  /**\n   * Emit newly selected categories via this.selectedCategories$\n   */\n  public updateSelectedCategories() {\n    this.selectedCategories$.next(\n      this.getSelectedCategories());\n  }\n\n  /**\n   * Gathers booleans indicating whether the toggle switches\n   * coressponding to values in IssueCategory are turned on or off\n   */\n  private getSelectedCategories(): SelectedCategories {\n    return {\n      [IssueCategory.Bug]: this.bug,\n      [IssueCategory.FeatureRequest]: this.featureRequests,\n      [IssueCategory.Unclassified]: this.unclassified,\n    };\n  }\n\n  layoutGraph(): void {\n    this.issueGraph.layoutGraph();\n    this.issueGraph.drawGraph();\n    this.issueGraph.fitGraphInView();\n  }\n\n  /**\n   * Setup this.filter$ and create subscription for observable returned from graphDataForFilter\n   */\n  ngAfterViewInit(): void {\n    // sets up emission of values representing the state of the graph toggles and the search bar via this.filter$\n    combineLatest([this.selectedCategories$, this.labelSearch.filterSelection$]).pipe(\n      takeUntil(this.destroy$),\n      map(([selectedCategories, filterSelection]) => ({selectedCategories, selectedFilter: filterSelection}))\n    ).subscribe(filterState => this.filter$.next(filterState));\n\n    // gets an obervable from GraphStateService that emits the matching graph state\n    // after this component emits values on this.filter$ or the IssueGraphComponent\n    // signals the need for a reload via this.issueGraph.reload$. Whenever new graph state\n    // arrives we pass it to the graph and issue a redraw on it.\n    this.gs.graphDataForFilter(this.filter$, this.issueGraph.reload$, this.destroy$).pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      graphData => {\n        this.issueGraph.graphData = graphData;\n        this.issueGraph.drawGraph();\n      }\n    );\n  }\n\n  /**\n   * Tell the graph component whether to show issue relations or not.\n   *\n   */\n  setRelationVisibility(): void {\n    this.issueGraph.setRelationVisibility(this.showRelations);\n  }\n\n  /**\n   * Cancel subscriptions by emitting a value on this.destroy$\n   */\n  ngOnDestroy() {\n    this.destroy$.next();\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n  \n\n    \n    \n      emoji_objects\n    \n\n    \n    \n      bug_report\n    \n\n      \n    \n      help\n    \n\n    \n    \n      \n    \n\n    \n    \n      center_focus_strong\n    \n\n    \n    \n      dashboard\n    \n\n    \n    \n\n    \n    \n      add\n    \n  \n\n  \n  \n\n\n    \n\n    \n                \n                    ./issue-graph-controls.component.scss\n                \n                @import '~@angular/material/theming';\n@import 'variables';\n\n.container {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n  margin: 0;\n}\n.container app-issue-graph {\n  flex-grow: 1;\n}\n\n.controls {\n  display: flex;\n  flex-direction: row;\n  background-color: $background-controls;\n  border-bottom: 1px solid $border-color-controls;\n}\n\n.controls app-label-search {\n  display: inline-block;\n    height: 44px;\n    flex-grow: 1;\n    margin-left: 20px;\n}\n\n.slide-toggle {\n  margin-left: 20px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n\n.bug-report-icon {\n  color: red;\n}\n\n.feature-request-icon {\n  color: #005eff;\n}\n\n.feature-request-icon, .bug-report-icon, .notification-icon, .unclassified-icon {\n  margin-top: 7px;\n}\n\n.relation-edge-icon {\n  margin-top: 12px;\n}\n.create-component-button {\n  margin: 10px;\n  margin-left: 20px;\n  right: 10px;\n}\n\n.spacer {\n  flex: 1 1 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  emoji_objects                  bug_report                    help                                    center_focus_strong                  dashboard                          add          '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueGraphControlsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IssueGraphDynamicTemplateRegistryService.html":{"url":"injectables/IssueGraphDynamicTemplateRegistryService.html","title":"injectable - IssueGraphDynamicTemplateRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IssueGraphDynamicTemplateRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/dynamic-template-registry/issue-graph-dynamic-template-registry.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service is respoonsible for managing the dynamic template registry\nof a given GraphEditor instance.\nUsed in method initGraph of IssueGraphComponent.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                manageDynamicTemplateRegistry\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        manageDynamicTemplateRegistry\n                        \n                    \n                \n            \n            \n                \nmanageDynamicTemplateRegistry(graph: GraphEditor)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/dynamic-template-registry/issue-graph-dynamic-template-registry.service.ts:21\n                \n            \n\n\n            \n                \n                    Manages the dynamic template registry of given GraphEditor instance.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    graph\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nReference to the GraphEditor instance of the graph that is handled.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as dynamicTemplate from '@ustutt/grapheditor-webcomponent/lib/dynamic-templates/dynamic-template';\nimport GraphEditor from '@ustutt/grapheditor-webcomponent/lib/grapheditor';\nimport {LinkHandle} from '@ustutt/grapheditor-webcomponent/lib/link-handle';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\n\n/**\n * This service is respoonsible for managing the dynamic template registry \n * of a given GraphEditor instance.\n * Used in method initGraph of IssueGraphComponent.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class IssueGraphDynamicTemplateRegistryService {\n\n  /**\n   * Manages the dynamic template registry of given GraphEditor instance.\n   * @param  {GraphEditor} graph - Reference to the GraphEditor instance of the graph that is handled.\n   */\n  manageDynamicTemplateRegistry(graph: GraphEditor) {\n    graph.dynamicTemplateRegistry.addDynamicTemplate('issue-group-container', {\n      renderInitialTemplate(\n        g,\n        grapheditor: GraphEditor,\n        context: dynamicTemplate.DynamicTemplateContext\n      ): void {\n        // template is empty\n        g.append('circle')\n          .attr('x', 0)\n          .attr('y', 0)\n          .attr('r', 1)\n          .style('opacity', 0);\n      },\n      updateTemplate(\n        g,\n        grapheditor: GraphEditor,\n        context: dynamicTemplate.DynamicTemplateContext\n      ): void {\n        // template is empty\n      },\n      getLinkHandles(g, grapheditor: GraphEditor): LinkHandle[] {\n        // template has no link handles\n        return [];\n      },\n    } as dynamicTemplate.DynamicNodeTemplate);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IssueGraphLinkHandlesService.html":{"url":"injectables/IssueGraphLinkHandlesService.html","title":"injectable - IssueGraphLinkHandlesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IssueGraphLinkHandlesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/link-handles/issue-graph-link-handles.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service is respoonsible for managing the link handles\nof a given GraphEditor instance.\nUsed in method initGraph of IssueGraphComponent.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calculateSourceHandles\n                            \n                            \n                                    Private\n                                calculateTargetHandles\n                            \n                            \n                                manageLinkHandles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        calculateSourceHandles\n                        \n                    \n                \n            \n            \n                \n                    \n                    calculateSourceHandles(source: Node, handles: literal type, sourceHandles: LinkHandle[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/link-handles/issue-graph-link-handles.service.ts:65\n                \n            \n\n\n            \n                \n                    Calculates the source handles of a given edge.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nSource of the edge that is handled.\n\n\n                                    \n                                \n                                \n                                    handles\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nHandles of the edge.\n\n\n                                    \n                                \n                                \n                                    sourceHandles\n                                    \n                                            LinkHandle[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nSource handles of the edge.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        calculateTargetHandles\n                        \n                    \n                \n            \n            \n                \n                    \n                    calculateTargetHandles(target: Node, handles: literal type, targetHandles: LinkHandle[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/link-handles/issue-graph-link-handles.service.ts:101\n                \n            \n\n\n            \n                \n                    Calculates the target handles of a given edge.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nTarget of the edge that is handled.\n\n\n                                    \n                                \n                                \n                                    handles\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nHandles of the edge.\n\n\n                                    \n                                \n                                \n                                    targetHandles\n                                    \n                                            LinkHandle[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nTarget handles of the edge.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        manageLinkHandles\n                        \n                    \n                \n            \n            \n                \nmanageLinkHandles(graph: GraphEditor, minimap: GraphEditor)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/link-handles/issue-graph-link-handles.service.ts:22\n                \n            \n\n\n            \n                \n                    Manages calculation of the link handles of given GraphEditor instances.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    graph\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nReference to the GraphEditor instance of the graph that is handled.\n\n\n                                    \n                                \n                                \n                                    minimap\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nReference to the GraphEditor instance of the minimap that is handled.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {DraggedEdge, Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\nimport GraphEditor from '@ustutt/grapheditor-webcomponent/lib/grapheditor';\nimport { LinkHandle } from '@ustutt/grapheditor-webcomponent/lib/link-handle';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\n\n/**\n * This service is respoonsible for managing the link handles\n * of a given GraphEditor instance.\n * Used in method initGraph of IssueGraphComponent.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class IssueGraphLinkHandlesService {\n\n  /**\n   * Manages calculation of the link handles of given GraphEditor instances.\n   * @param  {GraphEditor} graph - Reference to the GraphEditor instance of the graph that is handled.\n   * @param  {GraphEditor} minimap - Reference to the GraphEditor instance of the minimap that is handled.\n   */\n  manageLinkHandles(graph: GraphEditor, minimap: GraphEditor) {\n\n    // calculation for link handles\n    const linkHandleCalculation = (\n      edge: Edge | DraggedEdge,\n      sourceHandles: LinkHandle[],\n      source: Node,\n      targetHandles: LinkHandle[],\n      target: Node\n    ) => {\n\n      // handles at the source / target of a given edge\n      const handles = {\n        sourceHandles,\n        targetHandles,\n      };\n\n      // case: source of edge has allowed anchors\n      // => calculates source handles\n      if (source?.allowedAnchors != null) {\n        this.calculateSourceHandles(source, handles, sourceHandles);\n      }\n\n      // case: target of edge has allowed anchors\n      // => calculates target handles\n      if (target?.allowedAnchors != null) {\n        this.calculateTargetHandles(target, handles, targetHandles);\n      }\n\n      return handles;\n    };\n\n    // applies calculaiton for link handles\n    graph.calculateLinkHandlesForEdge = linkHandleCalculation;\n    minimap.calculateLinkHandlesForEdge = linkHandleCalculation;\n  }\n\n  /**\n   * Calculates the source handles of a given edge.\n   * @param  {Node} source - Source of the edge that is handled.\n   * @param  {{sourceHandles:LinkHandle[];targetHandles:LinkHandle[];}} handles - Handles of the edge.\n   * @param  {LinkHandle[]} sourceHandles - Source handles of the edge.\n   */\n  private calculateSourceHandles(source: Node, \n    handles: { sourceHandles: LinkHandle[]; targetHandles: LinkHandle[]; }, \n    sourceHandles: LinkHandle[]) {\n\n    handles.sourceHandles = sourceHandles.filter((linkHandle) => {\n\n      // case: X coordinate of link handle further than the Y coordinate\n      if (Math.abs(linkHandle.x) > Math.abs(linkHandle.y)) {\n        if (linkHandle.x > 0 && source.allowedAnchors.has('right')) {\n          return true;\n        }\n        if (linkHandle.x  0 && source.allowedAnchors.has('bottom')) {\n          return true;\n        }\n        if (linkHandle.y  {\n\n      // case: X coordinate of link handle further than the Y coordinate\n      if (Math.abs(linkHandle.x) > Math.abs(linkHandle.y)) {\n        if (linkHandle.x > 0 && target.allowedAnchors.has('right')) {\n          return true;\n        }\n        if (linkHandle.x  0 && target.allowedAnchors.has('bottom')) {\n          return true;\n        }\n        if (linkHandle.y \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IssueGraphStateService.html":{"url":"injectables/IssueGraphStateService.html","title":"injectable - IssueGraphStateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IssueGraphStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/issue-graph/issue-graph-state.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                state$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addConsumedInterface\n                            \n                            \n                                graphDataForFilter\n                            \n                            \n                                removeConsumedInterface\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: IssueGraphApiService, ss: StateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/issue-graph/issue-graph-state.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        IssueGraphApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ss\n                                                  \n                                                        \n                                                                        StateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addConsumedInterface\n                        \n                    \n                \n            \n            \n                \naddConsumedInterface(componentId: string, interfaceId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/issue-graph-state.service.ts:44\n                \n            \n\n\n            \n                \n                    Make the interface with interfaceId a consumed interface of the component with id componentId\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    componentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    interfaceId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        graphDataForFilter\n                        \n                    \n                \n            \n            \n                \ngraphDataForFilter(filter$: BehaviorSubject, reload$: BehaviorSubject, destroy$: ReplaySubject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/issue-graph-state.service.ts:28\n                \n            \n\n\n            \n                \n                    Maps an observable of the state of the graph filters (toggles and queries in search bar) onto an observable\nemitting graph state for these filters retrieved from the backend.\nthe filter$ or reload$ observables emit a value.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter$\n                                    \n                                                BehaviorSubject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        an observable emitting a sequence of values describing the state of the filter bar above the graph\n\n                                    \n                                \n                                \n                                    reload$\n                                    \n                                            BehaviorSubject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        an observable emitting irrelevant values to signal a reload is required, after a manipulation of graph data\n\n                                    \n                                \n                                \n                                    destroy$\n                                    \n                                            ReplaySubject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        used to signal that the caller is no longer interested. On emission the returned observable finishes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable emitting sequence of graph states containing e.g. components and interfaces. It will emit new values when\nthe filter$ or reload$ observables emit a value.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeConsumedInterface\n                        \n                    \n                \n            \n            \n                \nremoveConsumedInterface(componentId: string, interfaceId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/issue-graph-state.service.ts:51\n                \n            \n\n\n            \n                \n                    Remove the interface with interfaceId from consumed interfaces of the component with id componentId\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    componentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    interfaceId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/issue-graph-state.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, ReplaySubject} from 'rxjs';\nimport {StateService} from '@app/state.service';\nimport {GraphData} from './graph-data';\nimport {filter, shareReplay, switchMap, takeUntil} from 'rxjs/operators';\nimport {IssueGraphApiService} from './issue-graph-api.service';\nimport {FilterState} from '@app/graphs/shared';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IssueGraphStateService {\n\n  state$: Observable;\n\n  constructor(private apiService: IssueGraphApiService, private ss: StateService) {\n  }\n\n  /**\n   * Maps an observable of the state of the graph filters (toggles and queries in search bar) onto an observable\n   * emitting graph state for these filters retrieved from the backend.\n   * @param filter$ an observable emitting a sequence of values describing the state of the filter bar above the graph\n   * @param reload$ an observable emitting irrelevant values to signal a reload is required, after a manipulation of graph data\n   * @param destroy$ used to signal that the caller is no longer interested. On emission the returned observable finishes.\n   * @returns observable emitting sequence of graph states containing e.g. components and interfaces. It will emit new values when\n   * the filter$ or reload$ observables emit a value.\n   */\n  graphDataForFilter(filter$: BehaviorSubject, reload$: BehaviorSubject,\n                     destroy$: ReplaySubject): Observable {\n    // Whenever a new value arrives from reload$, loadIssueGraphData is executed\n    this.state$ = combineLatest([this.ss.state$, filter$, reload$]).pipe(\n      takeUntil(destroy$),\n      filter(([appState, _]) => appState.project?.node.id != null),\n      switchMap(([appState, filterState]) => this.apiService.loadIssueGraphData(appState.project.node.id,\n        filterState.selectedCategories, filterState.selectedFilter.labels, filterState.selectedFilter.texts)),\n      shareReplay(1)\n    );\n    return this.state$;\n  }\n\n  /**\n   * Make the interface with interfaceId a consumed interface of the component with id componentId\n   */\n  addConsumedInterface(componentId: string, interfaceId: string) {\n    return this.apiService.addConsumedInterface(componentId, interfaceId);\n  }\n\n  /**\n   * Remove the interface with interfaceId from consumed interfaces of the component with id componentId\n   */\n  removeConsumedInterface(componentId: string, interfaceId: string) {\n    return this.apiService.removeConsumedInterface(componentId, interfaceId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IssueGroupContainerBehaviour.html":{"url":"classes/IssueGroupContainerBehaviour.html","title":"class - IssueGroupContainerBehaviour","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IssueGroupContainerBehaviour\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/group-behaviours.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        GroupBehaviour\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                captureChildMovement\n                            \n                            \n                                childNodePositions\n                            \n                            \n                                moveChildrenAlongGoup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterNodeJoinedGroup\n                            \n                            \n                                afterNodeLeftGroup\n                            \n                            \n                                relativePositionChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        captureChildMovement\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph/group-behaviours.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        childNodePositions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph/group-behaviours.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moveChildrenAlongGoup\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph/group-behaviours.ts:93\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterNodeJoinedGroup\n                        \n                    \n                \n            \n            \n                \nafterNodeJoinedGroup(group: string, childGroup: string, groupNode: IssueGroupContainerNode, childNode: Node, graphEditor: GraphEditor)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/group-behaviours.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    childGroup\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    groupNode\n                                    \n                                                IssueGroupContainerNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    childNode\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    graphEditor\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        afterNodeLeftGroup\n                        \n                    \n                \n            \n            \n                \nafterNodeLeftGroup(group: string, childGroup: string, groupNode: IssueGroupContainerNode, childNode: Node, graphEditor: GraphEditor)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/group-behaviours.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    childGroup\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    groupNode\n                                    \n                                                IssueGroupContainerNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    childNode\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    graphEditor\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        relativePositionChanged\n                        \n                    \n                \n            \n            \n                \nrelativePositionChanged(group: string, groupNode: Node, graphEditor: GraphEditor)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/group-behaviours.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    groupNode\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    graphEditor\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {GroupBehaviour} from '@ustutt/grapheditor-webcomponent/lib/grouping';\nimport {Point} from '@ustutt/grapheditor-webcomponent/lib/edge';\nimport GraphEditor from '@ustutt/grapheditor-webcomponent/lib/grapheditor';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {IssueGroupContainerNode, NodeType} from './issue-graph-nodes';\n\nfunction distance(x, y, x2, y2) {\n  return ((x - x2) ** 2) + ((y - y2) ** 2);\n}\n\n/**\n * See the graph_structure_documentation.png in the src/app/graphs folder for how\n * the two GroupBehaviour implementations interplay with the graph.\n */\n\nexport class IssueGroupContainerParentBehaviour implements GroupBehaviour {\n  moveChildrenAlongGoup = true;\n  childNodePositions = new Map();\n\n  constructor(private initialPosition: string) {\n  }\n\n  beforeNodeMove(group: string, childGroup: string, groupNode: Node, childNode: Node, newPosition: Point, graphEditor: GraphEditor) {\n    // calculate groupNode (the parent node) dimensions\n    const width = groupNode.type === NodeType.Interface ? 10 : 100;\n    const height = groupNode.type === NodeType.Interface ? 10 : 60;\n    // find nearest side\n    let best = 'bottom';\n    if (newPosition != null && (newPosition.x !== 0 || newPosition.y !== 0)) {\n      let bestDistance = distance(newPosition.x, newPosition.y, groupNode.x, groupNode.y + (height / 2) + 25);\n      const rightDistance = distance(newPosition.x, newPosition.y, groupNode.x + (width / 2) + 30, groupNode.y);\n      const leftDistance = distance(newPosition.x, newPosition.y, groupNode.x - (width / 2) - 30, groupNode.y);\n      const topDistance = distance(newPosition.x, newPosition.y, groupNode.x, groupNode.y - (height / 2) - 25);\n      if (rightDistance  0 ? (places / 2) : 0;\n    let xOffset = 0;\n    let yOffset = 0;\n\n    if (groupNode.position === 'bottom' || groupNode.position === 'top') {\n      xOffset = startOffset * 45;\n    }\n    if (groupNode.position === 'right' || groupNode.position === 'left') {\n      yOffset = -startOffset * 35;\n    }\n\n    // order of sortedChildIds decides order of rendering\n    const sortedChildIds = Object.keys(IssueCategory)\n      .map(key => `${parent}__${IssueCategory[key]}`)\n      .filter(childId => children.has(childId));\n\n    // pre sorted list\n    /*\n    const sortedChildIds = [\n        `${parent}__undecided`,\n        `${parent}__bug`,\n        `${parent}__feature`,\n    ].filter(childId => children.has(childId));\n    */\n    sortedChildIds.forEach((childId, index) => {\n      this.childNodePositions.set(childId, {x: xOffset, y: yOffset});\n      const child = graphEditor.getNode(childId);\n      if (child != null) {\n        child.x = groupNode.x + xOffset;\n        child.y = groupNode.y + yOffset;\n      }\n      if (groupNode.position === 'bottom' || groupNode.position === 'top') {\n        xOffset -= 45;\n      }\n      if (groupNode.position === 'right' || groupNode.position === 'left') {\n        yOffset += 35;\n      }\n      // set allowed link anchors\n      const allowedAnchors = new Set();\n      allowedAnchors.add(groupNode.position);\n      if (index === 0) {\n        if (groupNode.position === 'bottom' || groupNode.position === 'top') {\n          allowedAnchors.add('right');\n        }\n        if (groupNode.position === 'right' || groupNode.position === 'left') {\n          allowedAnchors.add('top');\n        }\n      }\n      if (index === (sortedChildIds.length - 1)) {\n        if (groupNode.position === 'bottom' || groupNode.position === 'top') {\n          allowedAnchors.add('left');\n        }\n        if (groupNode.position === 'right' || groupNode.position === 'left') {\n          allowedAnchors.add('bottom');\n        }\n      }\n      const childNode = graphEditor.getNode(childId);\n      if (childNode != null) {\n        childNode.allowedAnchors = allowedAnchors;\n      }\n    });\n  }\n\n  afterNodeJoinedGroup(group: string, childGroup: string, groupNode: IssueGroupContainerNode, childNode: Node, graphEditor: GraphEditor) {\n    this.relativePositionChanged(group, groupNode, graphEditor);\n    groupNode.issueGroupNodeIds.add(childGroup);\n  }\n\n  afterNodeLeftGroup(group: string, childGroup: string, groupNode: IssueGroupContainerNode, childNode: Node, graphEditor: GraphEditor) {\n    this.relativePositionChanged(group, groupNode, graphEditor);\n    groupNode.issueGroupNodeIds.delete(childGroup);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IssueGroupContainerNode.html":{"url":"interfaces/IssueGroupContainerNode.html","title":"interface - IssueGroupContainerNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IssueGroupContainerNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/issue-graph-nodes.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Node\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            issueGroupNodeIds\n                                        \n                                \n                                \n                                        \n                                            position\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        issueGroupNodeIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issueGroupNodeIds:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {GraphComponent, GraphInterface} from '@app/data/issue-graph/graph-data';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\n\nexport {\n  IssueNode, ComponentNode, InterfaceNode, IssueGroupContainerNode, RelationEdge,\n  createComponentNode, createInterfaceNode, createIssueGroupContainerNode, createIssueFolderNode,\n  createRelationEdge, createConsumptionEdge, createInterfaceProvisionEdge,\n  Position,\n  getIssueFolderId\n};\n\nexport enum NodeType {\n  Component = 'component',\n  Interface = 'interface',\n  InterfaceConsumer = 'interface-connect',\n  IssueGroupContainer = 'issue-group-container'\n}\n\n/**\n * This file includes type definitions and creation functions (think constructors)\n * for nodes and edges that are added to the graph editor in order to visualize the project.\n * Since the data that is stored with these differs based on what they represent (e.g.\n * interface vs component node) we give each their own type. We do this by extending\n * the Node class or the Edge class of the grapheditor. These classes are instantiated\n * via calls to the contained create* functions within the drawGraph method of the IssueGraphComponent.\n */\n\ninterface IssueNode extends Node {\n  id: string;\n  title: string;\n  issueGroupContainer?: IssueGroupContainerNode;\n}\n\ninterface ComponentNode extends IssueNode {\n  data: GraphComponent;\n}\n\nfunction createComponentNode(component: GraphComponent, position: Position): ComponentNode {\n  return {\n    ...(position || zeroPosition),\n    id: component.id,\n    title: component.name,\n    type: NodeType.Component,\n    data: component\n  };\n}\n\ninterface InterfaceNode extends IssueNode {\n  offeredById: string;\n}\n\nfunction createInterfaceNode(intrface: GraphInterface, position: Position): InterfaceNode {\n  return {\n    ...(position || zeroPosition),\n    id: intrface.id,\n    title: intrface.name,\n    type: NodeType.Interface,\n    offeredById: intrface.offeredBy,\n  };\n}\n\ninterface IssueGroupContainerNode extends Node {\n  position: string;\n  issueGroupNodeIds: Set;\n}\n\nfunction createIssueGroupContainerNode(node: IssueNode): IssueGroupContainerNode {\n  return {\n    id: `${node.id}__issue-group-container`,\n    type: NodeType.IssueGroupContainer,\n    dynamicTemplate: 'issue-group-container',\n    x: 0,\n    y: 0,\n    position: 'bottom',\n    issueGroupNodeIds: new Set(),\n  };\n}\n\ninterface IssueFolderNode extends Node {\n  type: IssueCategory;\n  issueCount: string;\n}\n\nfunction createIssueFolderNode(node: IssueNode, issueCategory: IssueCategory, issueCount: string): IssueFolderNode {\n  return {\n    id: getIssueFolderId(node.id, issueCategory),\n    type: issueCategory,\n    x: 0,\n    y: 0,\n    issues: new Set(),\n    issueCount\n  };\n}\n\ninterface RelationEdge extends Edge {\n  sourceIssues: Set;\n}\n\nfunction createRelationEdge(sourceId: string, targetId: string, edgeType = folderEdgeTypes.RelatedTo): RelationEdge {\n  return {\n    id: `s${sourceId}t${targetId}r${edgeType}`,\n    source: sourceId,\n    target: targetId,\n    type: folderEdgeTypes.RelatedTo,\n    markerEnd: {\n      template: 'arrow',\n      relativeRotation: 0,\n    },\n    dragHandles: [],\n    sourceIssues: new Set()\n  };\n}\n\nfunction createConsumptionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.InterfaceConsumer,\n    markerEnd: {\n      template: 'interface-connector',\n      relativeRotation: 0,\n    },\n  };\n}\n\nfunction createInterfaceProvisionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.Interface,\n    dragHandles: [],\n  };\n}\n\nfunction getIssueFolderId(id: string, issueCategory: IssueCategory): string {\n  return `${id}__${issueCategory}`;\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst zeroPosition = {x: 0, y: 0};\n\nenum folderEdgeTypes {\n  RelatedTo = 'relatedTo',\n  Depends = 'dependency',\n  Duplicates = 'duplicate'\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IssueGroupContainerParentBehaviour.html":{"url":"classes/IssueGroupContainerParentBehaviour.html","title":"class - IssueGroupContainerParentBehaviour","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IssueGroupContainerParentBehaviour\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/group-behaviours.ts\n        \n\n\n            \n                Description\n            \n            \n                See the graph_structure_documentation.png in the src/app/graphs folder for how\nthe two GroupBehaviour implementations interplay with the graph.\n\n            \n\n\n            \n                Implements\n            \n            \n                        GroupBehaviour\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                childNodePositions\n                            \n                            \n                                moveChildrenAlongGoup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                beforeNodeMove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(initialPosition: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/graphs/issue-graph/group-behaviours.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        initialPosition\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        childNodePositions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph/group-behaviours.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moveChildrenAlongGoup\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph/group-behaviours.ts:18\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        beforeNodeMove\n                        \n                    \n                \n            \n            \n                \nbeforeNodeMove(group: string, childGroup: string, groupNode: Node, childNode: Node, newPosition: Point, graphEditor: GraphEditor)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/group-behaviours.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    childGroup\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    groupNode\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    childNode\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newPosition\n                                    \n                                            Point\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    graphEditor\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {GroupBehaviour} from '@ustutt/grapheditor-webcomponent/lib/grouping';\nimport {Point} from '@ustutt/grapheditor-webcomponent/lib/edge';\nimport GraphEditor from '@ustutt/grapheditor-webcomponent/lib/grapheditor';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {IssueGroupContainerNode, NodeType} from './issue-graph-nodes';\n\nfunction distance(x, y, x2, y2) {\n  return ((x - x2) ** 2) + ((y - y2) ** 2);\n}\n\n/**\n * See the graph_structure_documentation.png in the src/app/graphs folder for how\n * the two GroupBehaviour implementations interplay with the graph.\n */\n\nexport class IssueGroupContainerParentBehaviour implements GroupBehaviour {\n  moveChildrenAlongGoup = true;\n  childNodePositions = new Map();\n\n  constructor(private initialPosition: string) {\n  }\n\n  beforeNodeMove(group: string, childGroup: string, groupNode: Node, childNode: Node, newPosition: Point, graphEditor: GraphEditor) {\n    // calculate groupNode (the parent node) dimensions\n    const width = groupNode.type === NodeType.Interface ? 10 : 100;\n    const height = groupNode.type === NodeType.Interface ? 10 : 60;\n    // find nearest side\n    let best = 'bottom';\n    if (newPosition != null && (newPosition.x !== 0 || newPosition.y !== 0)) {\n      let bestDistance = distance(newPosition.x, newPosition.y, groupNode.x, groupNode.y + (height / 2) + 25);\n      const rightDistance = distance(newPosition.x, newPosition.y, groupNode.x + (width / 2) + 30, groupNode.y);\n      const leftDistance = distance(newPosition.x, newPosition.y, groupNode.x - (width / 2) - 30, groupNode.y);\n      const topDistance = distance(newPosition.x, newPosition.y, groupNode.x, groupNode.y - (height / 2) - 25);\n      if (rightDistance  0 ? (places / 2) : 0;\n    let xOffset = 0;\n    let yOffset = 0;\n\n    if (groupNode.position === 'bottom' || groupNode.position === 'top') {\n      xOffset = startOffset * 45;\n    }\n    if (groupNode.position === 'right' || groupNode.position === 'left') {\n      yOffset = -startOffset * 35;\n    }\n\n    // order of sortedChildIds decides order of rendering\n    const sortedChildIds = Object.keys(IssueCategory)\n      .map(key => `${parent}__${IssueCategory[key]}`)\n      .filter(childId => children.has(childId));\n\n    // pre sorted list\n    /*\n    const sortedChildIds = [\n        `${parent}__undecided`,\n        `${parent}__bug`,\n        `${parent}__feature`,\n    ].filter(childId => children.has(childId));\n    */\n    sortedChildIds.forEach((childId, index) => {\n      this.childNodePositions.set(childId, {x: xOffset, y: yOffset});\n      const child = graphEditor.getNode(childId);\n      if (child != null) {\n        child.x = groupNode.x + xOffset;\n        child.y = groupNode.y + yOffset;\n      }\n      if (groupNode.position === 'bottom' || groupNode.position === 'top') {\n        xOffset -= 45;\n      }\n      if (groupNode.position === 'right' || groupNode.position === 'left') {\n        yOffset += 35;\n      }\n      // set allowed link anchors\n      const allowedAnchors = new Set();\n      allowedAnchors.add(groupNode.position);\n      if (index === 0) {\n        if (groupNode.position === 'bottom' || groupNode.position === 'top') {\n          allowedAnchors.add('right');\n        }\n        if (groupNode.position === 'right' || groupNode.position === 'left') {\n          allowedAnchors.add('top');\n        }\n      }\n      if (index === (sortedChildIds.length - 1)) {\n        if (groupNode.position === 'bottom' || groupNode.position === 'top') {\n          allowedAnchors.add('left');\n        }\n        if (groupNode.position === 'right' || groupNode.position === 'left') {\n          allowedAnchors.add('bottom');\n        }\n      }\n      const childNode = graphEditor.getNode(childId);\n      if (childNode != null) {\n        childNode.allowedAnchors = allowedAnchors;\n      }\n    });\n  }\n\n  afterNodeJoinedGroup(group: string, childGroup: string, groupNode: IssueGroupContainerNode, childNode: Node, graphEditor: GraphEditor) {\n    this.relativePositionChanged(group, groupNode, graphEditor);\n    groupNode.issueGroupNodeIds.add(childGroup);\n  }\n\n  afterNodeLeftGroup(group: string, childGroup: string, groupNode: IssueGroupContainerNode, childNode: Node, graphEditor: GraphEditor) {\n    this.relativePositionChanged(group, groupNode, graphEditor);\n    groupNode.issueGroupNodeIds.delete(childGroup);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueIconComponent.html":{"url":"components/IssueIconComponent.html","title":"component - IssueIconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueIconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/issue-icon/issue-icon.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component automatically displays the appropriate mat-icon for the given issue.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-icon\n            \n\n            \n                styleUrls\n                ./issue-icon.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-icon.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIconLabel\n                            \n                            \n                                getIconName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                issue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        issue\n                    \n                \n                \n                    \n                        Type :     Issue\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-icon/issue-icon.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getIconLabel\n                        \n                    \n                \n            \n            \n                \ngetIconLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/issue-icon/issue-icon.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIconName\n                        \n                    \n                \n            \n            \n                \ngetIconName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/issue-icon/issue-icon.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Issue, IssueCategory } from 'src/generated/graphql-dgql';\n\n/**\n * This component automatically displays the appropriate mat-icon for the given issue.\n */\n@Component({\n  selector: 'app-issue-icon',\n  templateUrl: './issue-icon.component.html',\n  styleUrls: ['./issue-icon.component.scss']\n})\nexport class IssueIconComponent {\n  @Input() issue: Issue;\n\n  getIconName() {\n    const category = this.issue.category === IssueCategory.Bug\n      ? 'bug'\n      : this.issue.category === IssueCategory.FeatureRequest\n      ? 'feature'\n      : 'uncategorized';\n    const closed = this.issue.isOpen ? null : '-closed';\n\n    const hasIn = this.issue.linkedByIssues?.totalCount;\n    const hasOut = this.issue.linksToIssues?.totalCount;\n    const edgeType = (hasIn ? 'in' : '') + (hasOut ? 'out' : '');\n\n    return ['issue-', category, closed, edgeType && '-', edgeType].filter(part => part).join('');\n  }\n\n  getIconLabel() {\n    const category = this.issue.category === IssueCategory.Bug ? 'bug'\n      : this.issue.category === IssueCategory.FeatureRequest ? 'feature' : 'issue';\n    return this.issue.isOpen ? `Open ${category}` : `Closed ${category}`;\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./issue-icon.component.scss\n                \n                :host {\n  display: inline-block;\n}\n\n:host > * {\n  // get rid of bottom space caused by line height\n  display: block;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueIconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueItemComponent.html":{"url":"components/IssueItemComponent.html","title":"component - IssueItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/issue-item/issue-item.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays an issue (for use in e.g. a list).\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-item\n            \n\n            \n                styleUrls\n                ./issue-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIssueLink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                extended\n                            \n                            \n                                interactive\n                            \n                            \n                                issue\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/issue-item/issue-item.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        extended\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-item/issue-item.component.ts:17\n                            \n                        \n                \n                    \n                        Whether to show extended info, such as the issue's locations.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        interactive\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-item/issue-item.component.ts:19\n                            \n                        \n                \n                    \n                        If true, this component will display a hyperlink.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        issue\n                    \n                \n                \n                    \n                        Type :     Issue\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-item/issue-item.component.ts:15\n                            \n                        \n                \n                    \n                        The issue object that will be displayed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-item/issue-item.component.ts:13\n                            \n                        \n                \n                    \n                        The raw project ID.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getIssueLink\n                        \n                    \n                \n            \n            \n                \ngetIssueLink()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/issue-item/issue-item.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Issue } from 'src/generated/graphql-dgql';\nimport { Router } from '@angular/router';\n\n/** This component displays an issue (for use in e.g. a list). */\n@Component({\n  selector: 'app-issue-item',\n  templateUrl: './issue-item.component.html',\n  styleUrls: ['./issue-item.component.scss']\n})\nexport class IssueItemComponent {\n  /** The raw project ID. */\n  @Input() projectId: string;\n  /** The issue object that will be displayed. */\n  @Input() issue: Issue;\n  /** Whether to show extended info, such as the issue's locations. */\n  @Input() extended = false;\n  /** If true, this component will display a hyperlink. */\n  @Input() interactive = false;\n\n  constructor(private router: Router) {}\n\n  getIssueLink() {\n    return this.router.serializeUrl(this.router.createUrlTree(\n      ['/projects', this.projectId, 'issues', this.issue.id]\n    ));\n  }\n}\n\n    \n\n    \n        \n  \n  {{issue.title}}\n\n\n  \n  {{issue.title}}\n\n\n  \n    {{component.name}}\n  \n\n\n    \n\n    \n                \n                    ./issue-item.component.scss\n                \n                :host {\n  line-height: 1.4em;\n\n  .issue-icon {\n    vertical-align: middle;\n  }\n\n  .linked-issue-locations {\n    font-size: 0.8em;\n    font-weight: normal;\n\n    .inner-item {\n      display: inline-block;\n      line-height: 1.2em;\n      background: rgba(0, 0, 0, 0.2);\n      border-radius: 2px;\n      padding: 1px 2px;\n      margin-right: 2px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{issue.title}}    {{issue.title}}      {{component.name}}  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueLabelComponent.html":{"url":"components/IssueLabelComponent.html","title":"component - IssueLabelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueLabelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/issue-label/issue-label.component.ts\n\n\n\n    \n        Description\n    \n    \n        Renders an issue label.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-label\n            \n\n            \n                styleUrls\n                ./issue-label.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-label.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                labelColorForBackground\n                            \n                            \n                                    Public\n                                labelIsDark\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :     Label\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-label/issue-label.component.ts:14\n                            \n                        \n                \n                    \n                        The label to display. Nullable. Should have properties name and color.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        labelColorForBackground\n                        \n                    \n                \n            \n            \n                \n                    \n                    labelColorForBackground(color)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/issue-label/issue-label.component.ts:20\n                \n            \n\n\n            \n                \n                    Determines the label color for a given background color.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    color\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the background color string in hex or rgb(...)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     \"black\" | \"white\"\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        labelIsDark\n                        \n                    \n                \n            \n            \n                \n                    \n                    labelIsDark(color)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/issue-label/issue-label.component.ts:65\n                \n            \n\n\n            \n                \n                    Determines whether the background color is light or dark.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    color\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nBackground color of a label.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Label } from 'src/generated/graphql-dgql';\n\n/**\n * Renders an issue label.\n */\n@Component({\n  selector: 'app-issue-label',\n  templateUrl: './issue-label.component.html',\n  styleUrls: ['./issue-label.component.scss']\n})\nexport class IssueLabelComponent {\n  /** The label to display. Nullable. Should have properties `name` and `color`. */\n  @Input() label: Label;\n\n  /**\n   * Determines the label color for a given background color.\n   * @param color the background color string in hex or rgb(...)\n   */\n  public static labelColorForBackground(color) {\n    // Variables for red, green, blue values\n    let r, g, b, hsp;\n\n    // Check the format of the color, HEX or RGB?\n    if (color.match(/^rgb/)) {\n\n      // If RGB --> store the red, green, blue values in separate variables\n      color = color.match(/^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/);\n\n      r = color[1];\n      g = color[2];\n      b = color[3];\n    } else {\n\n      // If hex --> Convert it to RGB: http://gist.github.com/983661\n      color = +('0x' + color.slice(1).replace(\n        color.length > 16;\n      g = color >> 8 & 255;\n      b = color & 255;\n    }\n\n    // HSP (Hue-Sat-Perceived-brightness) equation from http://alienryderflex.com/hsp.html\n    hsp = Math.sqrt(\n      0.299 * (r * r) +\n      0.587 * (g * g) +\n      0.114 * (b * b)\n    );\n\n    // Using the HSP value, determine whether the color is light or dark\n    // Compare against gamma-adjusted tipping point\n    if (hsp > Math.sqrt(0.5) * 255) {\n      return 'black';\n    } else {\n      return 'white';\n    }\n  }\n\n  /**\n   * Determines whether the background color is light or dark.\n   *\n   * @param color - Background color of a label.\n   */\n  public labelIsDark(color) {\n    if (!color) {\n      return false;\n    }\n    return IssueLabelComponent.labelColorForBackground(color) === 'black';\n  }\n}\n\n    \n\n    \n        \n    {{label?.name}}\n\n\n    \n\n    \n                \n                    ./issue-label.component.scss\n                \n                :host {\n  display: inline-block;\n}\n\n.inner-label {\n  display: inline-block;\n  color: white;\n  border-radius: 4px;\n  padding: 1px 2px;\n  margin: 1px;\n  border: 1px solid rgba(255, 255, 255, 0.3);\n\n  &.is-dark-text {\n    color: black;\n    border: 1px solid rgba(0, 0, 0, 0.3);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{label?.name}}'\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueLabelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueListComponent.html":{"url":"components/IssueListComponent.html","title":"component - IssueListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-list/issue-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component shows all issues for a given component / interface.\nIt lets the user 1) filter through all the issues,\n2) create new issues and also 3) sort all issues in a separate table view.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-list\n            \n\n            \n                styleUrls\n                ./issue-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                allLabelsList\n                            \n                            \n                                    Public\n                                canCreateNewIssue\n                            \n                            \n                                columnsToDisplay\n                            \n                            \n                                    Public\n                                    Optional\n                                component$\n                            \n                            \n                                    Public\n                                    Optional\n                                componentInterface$\n                            \n                            \n                                    Public\n                                componentInterfaceProvider\n                            \n                            \n                                    Private\n                                    Optional\n                                componentInterfaceSub\n                            \n                            \n                                    Private\n                                    Optional\n                                componentSub\n                            \n                            \n                                dataSource\n                            \n                            \n                                    Public\n                                    Optional\n                                list$\n                            \n                            \n                                paginator\n                            \n                            \n                                query\n                            \n                            \n                                    Public\n                                queryParamFilter\n                            \n                            \n                                searchIssuesDataArray\n                            \n                            \n                                sort\n                            \n                            \n                                validationFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                clickedOnRow\n                            \n                            \n                                formatCategoryDescription\n                            \n                            \n                                formatCategoryIcon\n                            \n                            \n                                    Private\n                                getQueryParamFilter\n                            \n                            \n                                onAddClick\n                            \n                            \n                                    Private\n                                prepareIssueArray\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                listId\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, dialog: MatDialog, router: Router, dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-list/issue-list.component.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        listId\n                    \n                \n                \n                    \n                        Type :         ListId\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-list/issue-list.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-list/issue-list.component.ts:34\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilter\n                        \n                    \n                \n            \n            \n                \napplyFilter(filter: IssueFilter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-list.component.ts:188\n                \n            \n\n\n            \n                \n                    Applies a given filter.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            IssueFilter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nGiven filter to be applied.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clickedOnRow\n                        \n                    \n                \n            \n            \n                \nclickedOnRow(row: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-list.component.ts:197\n                \n            \n\n\n            \n                \n                    Gets activated when an issue is clicked.\nNavigates the user to the corresponding issue page.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nIssue that is clicked.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatCategoryDescription\n                        \n                    \n                \n            \n            \n                \nformatCategoryDescription(category: IssueCategory)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-list.component.ts:93\n                \n            \n\n\n            \n                \n                    Determines issue description depending on the given categiry.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                            IssueCategory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe given issue category.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Issue description.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatCategoryIcon\n                        \n                    \n                \n            \n            \n                \nformatCategoryIcon(issue: Issue)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-list.component.ts:77\n                \n            \n\n\n            \n                \n                    Determines issue icon depending on the given category.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    issue\n                                    \n                                            Issue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe given issue.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Issue icon id.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getQueryParamFilter\n                        \n                    \n                \n            \n            \n                \n                    \n                    getQueryParamFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-list.component.ts:163\n                \n            \n\n\n            \n                \n                    Gets the query param filter.\nIf it is set, the issue list shows only issues that match the given keyword.\nOtherwise all issues are displayed.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAddClick\n                        \n                    \n                \n            \n            \n                \nonAddClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-list.component.ts:245\n                \n            \n\n\n            \n                \n                    Opens a Create Issue dialog.\nAlso selects components and locations depending from which\nComponent / Interface page the Create Issue dialog was initiated.\nex. Interface I1 with Prvider Component C1 lead to an Interface Issue\nwith components: Component C1 and locations: Component C1, Interface I1\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        prepareIssueArray\n                        \n                    \n                \n            \n            \n                \n                    \n                    prepareIssueArray()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-list.component.ts:207\n                \n            \n\n\n            \n                \n                    Prepares the issue array for the filter function.\nFor each issue a search string is defined.\nThe search string contains assignees, labels, and the author.\nThe filter funcion can search inside the string for keywords matching the given search string.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        allLabelsList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ListId\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        canCreateNewIssue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columnsToDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['title', 'author', 'assignees', 'labels', 'category']\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        component$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataNode\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        componentInterface$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataNode\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        componentInterfaceProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NodeId\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        componentInterfaceSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        componentSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatTableDataSource\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        list$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataList\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginator)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(QueryComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        queryParamFilter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchIssuesDataArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSort\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatSort)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:58\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Subscription} from 'rxjs';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort, MatSortable} from '@angular/material/sort';\nimport {CreateIssueDialogComponent} from '@app/dialogs/create-issue-dialog/create-issue-dialog.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {FormControl} from '@angular/forms';\nimport DataService from '@app/data-dgql';\nimport {ListId, ListType, NodeId, NodeType} from '@app/data-dgql/id';\nimport {DataList, DataNode} from '@app/data-dgql/query';\nimport {\n  Component as IComponent,\n  ComponentInterface,\n  Issue,\n  IssueCategory,\n  IssueFilter\n} from '../../generated/graphql-dgql';\nimport {QueryComponent} from '@app/utils/query-component/query.component';\n\n/**\n * This component shows all issues for a given component / interface.\n * It lets the user 1) filter through all the issues,\n * 2) create new issues and also 3) sort all issues in a separate table view.\n */\n@Component({\n  selector: 'app-issue-list',\n  templateUrl: './issue-list.component.html',\n  styleUrls: ['./issue-list.component.scss']\n})\nexport class IssueListComponent implements OnInit, AfterViewInit, OnDestroy {\n  @Input() listId: ListId;\n  @Input() projectId: string;\n  public queryParamFilter = '';\n  public list$?: DataList;\n\n  // component that is observed\n  public component$?: DataNode;\n  private componentSub?: Subscription;\n\n  // interface that is observed\n  public componentInterface$?: DataNode;\n  private componentInterfaceSub?: Subscription;\n\n  // provider of the interface that is observed\n  public componentInterfaceProvider: NodeId;\n\n  // determines whether one can create new issues from a given component / interface page\n  // FIXME remove and use proper logic instead\n  public canCreateNewIssue = false;\n\n  public allLabelsList: ListId;\n\n  dataSource: MatTableDataSource;\n  columnsToDisplay = ['title', 'author', 'assignees', 'labels', 'category'];\n  searchIssuesDataArray: any;\n  validationFilter = new FormControl('');\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(QueryComponent) query: QueryComponent;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private dialog: MatDialog,\n    private router: Router,\n    private dataService: DataService\n  ) {\n  }\n\n  /**\n   * Determines issue icon depending on the given category.\n   * @param issue - The given issue.\n   * @returns Issue icon id.\n   */\n  formatCategoryIcon(issue: Issue): string {\n    switch (issue.category) {\n      case IssueCategory.Bug:\n        return issue.isOpen ? 'issue-bug' : 'issue-bug-closed';\n      case IssueCategory.FeatureRequest:\n        return issue.isOpen ? 'issue-feature' : 'issue-feature-closed';\n      case IssueCategory.Unclassified:\n        return issue.isOpen ? 'issue-uncategorized' : 'issue-uncategorized-closed';\n    }\n  }\n\n  /**\n   * Determines issue description depending on the given categiry.\n   * @param category - The given issue category.\n   * @returns Issue description.\n   */\n  formatCategoryDescription(category: IssueCategory): string {\n    switch (category) {\n      case IssueCategory.Bug:\n        return 'Bug';\n      case IssueCategory.FeatureRequest:\n        return 'Feature request';\n      case IssueCategory.Unclassified:\n        return 'Unclassified';\n    }\n  }\n\n  ngOnInit(): void {\n\n    this.allLabelsList = {\n      node: this.listId.node,\n      type: ListType.Labels\n    };\n\n    if (this.listId.node.type === NodeType.Component) {\n      this.canCreateNewIssue = true;\n      this.component$ = this.dataService.getNode(this.listId.node);\n      this.componentSub = this.component$.subscribe();\n    } else if (this.listId.node.type === NodeType.ComponentInterface) {\n      this.canCreateNewIssue = true;\n      this.componentInterface$ = this.dataService.getNode(this.listId.node);\n      this.componentInterfaceSub = this.componentInterface$.subscribe();\n\n      this.componentInterface$.dataAsPromise().then(data => {\n        this.componentInterfaceProvider = {type: NodeType.Component, id: data.component.id};\n      });\n    }\n\n    // FIXME: a hack to fix the labels list on interfaces\n    if (this.listId.node.type === NodeType.ComponentInterface) {\n      const interfaceNode = this.dataService.getNode(this.listId.node);\n      interfaceNode.dataAsPromise().then(data => {\n        this.allLabelsList = {\n          node: {type: NodeType.Component, id: data.component.id},\n          type: ListType.Labels\n        };\n      });\n    }\n\n    this.list$ = this.dataService.getList(this.listId);\n    this.list$.count = 25;\n  }\n\n  ngAfterViewInit() {\n    this.query.listenTo(this.list$, data => {\n      this.dataSource = new MatTableDataSource(data ? [...data.values()] : []);\n      this.sort.sort(({id: 'category', start: 'asc'}) as MatSortable);\n      this.dataSource.sort = this.sort;\n      // FIXME use bespoke pagination/sorting/filtering\n      // this.dataSource.paginator = this.paginator;\n      this.dataSource.filter = this.getQueryParamFilter();\n      this.validationFilter.setValue(this.getQueryParamFilter());\n      this.prepareIssueArray();\n    });\n  }\n\n  ngOnDestroy() {\n    this.componentSub?.unsubscribe();\n    this.componentInterfaceSub?.unsubscribe();\n  }\n\n  /**\n   * Gets the query param filter.\n   * If it is set, the issue list shows only issues that match the given keyword.\n   * Otherwise all issues are displayed.\n   */\n  private getQueryParamFilter(): string {\n    let returnedFilter = '';\n    this.activatedRoute.queryParams.subscribe(\n      params => {\n\n        // case: query param filter is set\n        // => shows only matching issues\n        if (params.filter) {\n          this.queryParamFilter = params.filter;\n          returnedFilter = params.filter;\n        }\n\n          // case: query param filter is not set\n        // => shows all issues\n        else {\n          returnedFilter = '';\n        }\n      });\n    return returnedFilter;\n  }\n\n  /**\n   * Applies a given filter.\n   * @param filter - Given filter to be applied.\n   */\n  applyFilter(filter: IssueFilter) {\n    this.list$.filter = filter;\n  }\n\n  /**\n   * Gets activated when an issue is clicked.\n   * Navigates the user to the corresponding issue page.\n   * @param row - Issue that is clicked.\n   */\n  clickedOnRow(row: any) {\n    this.router.navigate(['/projects', this.projectId, 'issues', row.id]);\n  }\n\n  /**\n   * Prepares the issue array for the filter function.\n   * For each issue a search string is defined.\n   * The search string contains assignees, labels, and the author.\n   * The filter funcion can search inside the string for keywords matching the given search string.\n   */\n  private prepareIssueArray() {\n\n    // FIXME use API search\n    if (!this.list$.hasData) {\n      return;\n    }\n    this.searchIssuesDataArray = [...this.list$.current.values()];\n    for (const issue of this.searchIssuesDataArray) {\n      let additionalSearchString = '';\n      issue.assigneesString = '';\n      issue.labelsString = '';\n\n      // adds all assignees\n      for (const assignee of issue.assignees.nodes) {\n        additionalSearchString += ' ' + assignee.displayName;\n        issue.assigneesString += ' ' + assignee.displayName;\n      }\n\n      // adds all labels\n      for (const label of issue.labels.nodes) {\n        additionalSearchString += ' ' + label.name;\n        issue.labelsString += ' ' + label.name;\n      }\n\n      // adds the author\n      additionalSearchString += ' ' + issue.createdBy.displayName;\n\n      issue.search = additionalSearchString;\n    }\n  }\n\n  /**\n   * Opens a Create Issue dialog.\n   * Also selects components and locations depending from which\n   * Component / Interface page the Create Issue dialog was initiated.\n   * ex. Interface I1 with Prvider Component C1 lead to an Interface Issue\n   * with components: Component C1 and locations: Component C1, Interface I1\n   */\n  onAddClick() {\n\n    // FIXME move functionality so that the component can be reusable as a list\n\n    // case: node is a component\n    if (this.listId.node.type === NodeType.Component) {\n      this.dialog.open(CreateIssueDialogComponent,\n        {\n          data: {\n            projectId: this.projectId,\n            components: [this.component$.id]\n          },\n          width: '600px'\n        });\n    }\n\n    // case: node is an interface\n    else if (this.listId.node.type === NodeType.ComponentInterface) {\n      this.dialog.open(CreateIssueDialogComponent,\n        {\n          data: {\n            projectId: this.projectId,\n            components: [this.componentInterfaceProvider],\n            locations: [this.componentInterface$.id]\n          },\n          width: '600px'\n        });\n    }\n  }\n\n}\n\n\n    \n\n    \n        \n\n  \n    \n      \n      \n      \n\n      \n      \n        \n          Create issue\n        \n      \n\n      \n      \n        \n\n          \n          \n            Title\n            \n             {{element.title}} \n          \n\n          \n          \n            Author\n            \n             {{element.createdBy.displayName}} \n          \n\n          \n          \n            Assignees\n            \n             {{element.assigneesString}} \n          \n\n          \n          \n            Labels\n            \n            \n              \n                \n              \n            \n          \n\n          \n          \n            Category\n            \n            \n              \n                \n                \n                {{this.formatCategoryDescription(element.category)}}\n              \n            \n          \n          \n          \n        \n      \n      \n      \n      \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./issue-list.component.scss\n                \n                .mat-row:hover {\n  box-shadow: inset 0 0 43px -17px rgba(201, 195, 201, 1);\n  cursor: pointer;\n}\n\n.table-container {\n  overflow: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      Create issue                                                                  Title                         {{element.title}}                                           Author                         {{element.createdBy.displayName}}                                           Assignees                         {{element.assigneesString}}                                           Labels                                                                                                                          Category                                                                                      {{this.formatCategoryDescription(element.category)}}                                                                                              '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueLocationComponent.html":{"url":"components/IssueLocationComponent.html","title":"component - IssueLocationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueLocationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/issue-location/issue-location.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays an issue location.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-location\n            \n\n            \n                styleUrls\n                ./issue-location.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-location.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToLocationDetails\n                            \n                            \n                                isComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                location\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/issue-location/issue-location.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        location\n                    \n                \n                \n                    \n                        Type :     IssueLocation\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-location/issue-location.component.ts:17\n                            \n                        \n                \n                    \n                        The location object that will be displayed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-location/issue-location.component.ts:15\n                            \n                        \n                \n                    \n                        The raw project ID.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToLocationDetails\n                        \n                    \n                \n            \n            \n                \ngoToLocationDetails()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/issue-location/issue-location.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isComponent\n                        \n                    \n                \n            \n            \n                \nisComponent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/issue-location/issue-location.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {IssueLocation} from '../../../generated/graphql-dgql';\n\n/**\n * Displays an issue location.\n */\n@Component({\n  selector: 'app-issue-location',\n  styleUrls: ['./issue-location.component.scss'],\n  templateUrl: './issue-location.component.html'\n})\nexport class IssueLocationComponent {\n  /** The raw project ID. */\n  @Input() projectId: string;\n  /** The location object that will be displayed. */\n  @Input() location: IssueLocation;\n\n  constructor(private router: Router) {\n  }\n\n  isComponent(): boolean {\n    return (this.location as any).__typename === 'Component';\n  }\n\n  goToLocationDetails(): void {\n    if (this.isComponent()) {\n      this.router.navigate(['projects', this.projectId, 'component', this.location.id]);\n    } else {\n      this.router.navigate(['projects', this.projectId, 'interface', this.location.id]);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{location.name}}\n    \n  \n\n\n\n  \n    \n    \n      {{location.name}}\n    \n  \n\n\n    \n\n    \n                \n                    ./issue-location.component.scss\n                \n                .dot {\n  height: 10px;\n  width: 10px;\n  background-color: black;\n  border-radius: 50%;\n  display: inline-block;\n}\n\n.interface-box {\n  background-color: rgb(0, 0, 0, 0.1);\n  border-radius: 5px;\n  text-align: center;\n  margin: 2px;\n  padding: 2px 4px 2px 4px;\n}\n\n.component-box {\n  background-color: rgb(9, 109, 217, 0.5);\n  border-color: black;\n  border-width: 2px;\n  border-style: solid;\n  border-radius: 5px 5px 5px 5px;\n  text-align: center;\n  margin: 2px;\n}\n\n.component-text {\n  font-size: 11pt;\n  font-family: 'Arial Narrow', Arial, sans-serif;\n  color: black;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{location.name}}                      {{location.name}}      '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueLocationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IssueNode.html":{"url":"interfaces/IssueNode.html","title":"interface - IssueNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IssueNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/issue-graph-nodes.ts\n        \n\n\n            \n                Description\n            \n            \n                This file includes type definitions and creation functions (think constructors)\nfor nodes and edges that are added to the graph editor in order to visualize the project.\nSince the data that is stored with these differs based on what they represent (e.g.\ninterface vs component node) we give each their own type. We do this by extending\nthe Node class or the Edge class of the grapheditor. These classes are instantiated\nvia calls to the contained create* functions within the drawGraph method of the IssueGraphComponent.\n\n            \n\n            \n                Extends\n            \n            \n                    Node\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            issueGroupContainer\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issueGroupContainer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issueGroupContainer:         IssueGroupContainerNode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IssueGroupContainerNode\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {GraphComponent, GraphInterface} from '@app/data/issue-graph/graph-data';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\n\nexport {\n  IssueNode, ComponentNode, InterfaceNode, IssueGroupContainerNode, RelationEdge,\n  createComponentNode, createInterfaceNode, createIssueGroupContainerNode, createIssueFolderNode,\n  createRelationEdge, createConsumptionEdge, createInterfaceProvisionEdge,\n  Position,\n  getIssueFolderId\n};\n\nexport enum NodeType {\n  Component = 'component',\n  Interface = 'interface',\n  InterfaceConsumer = 'interface-connect',\n  IssueGroupContainer = 'issue-group-container'\n}\n\n/**\n * This file includes type definitions and creation functions (think constructors)\n * for nodes and edges that are added to the graph editor in order to visualize the project.\n * Since the data that is stored with these differs based on what they represent (e.g.\n * interface vs component node) we give each their own type. We do this by extending\n * the Node class or the Edge class of the grapheditor. These classes are instantiated\n * via calls to the contained create* functions within the drawGraph method of the IssueGraphComponent.\n */\n\ninterface IssueNode extends Node {\n  id: string;\n  title: string;\n  issueGroupContainer?: IssueGroupContainerNode;\n}\n\ninterface ComponentNode extends IssueNode {\n  data: GraphComponent;\n}\n\nfunction createComponentNode(component: GraphComponent, position: Position): ComponentNode {\n  return {\n    ...(position || zeroPosition),\n    id: component.id,\n    title: component.name,\n    type: NodeType.Component,\n    data: component\n  };\n}\n\ninterface InterfaceNode extends IssueNode {\n  offeredById: string;\n}\n\nfunction createInterfaceNode(intrface: GraphInterface, position: Position): InterfaceNode {\n  return {\n    ...(position || zeroPosition),\n    id: intrface.id,\n    title: intrface.name,\n    type: NodeType.Interface,\n    offeredById: intrface.offeredBy,\n  };\n}\n\ninterface IssueGroupContainerNode extends Node {\n  position: string;\n  issueGroupNodeIds: Set;\n}\n\nfunction createIssueGroupContainerNode(node: IssueNode): IssueGroupContainerNode {\n  return {\n    id: `${node.id}__issue-group-container`,\n    type: NodeType.IssueGroupContainer,\n    dynamicTemplate: 'issue-group-container',\n    x: 0,\n    y: 0,\n    position: 'bottom',\n    issueGroupNodeIds: new Set(),\n  };\n}\n\ninterface IssueFolderNode extends Node {\n  type: IssueCategory;\n  issueCount: string;\n}\n\nfunction createIssueFolderNode(node: IssueNode, issueCategory: IssueCategory, issueCount: string): IssueFolderNode {\n  return {\n    id: getIssueFolderId(node.id, issueCategory),\n    type: issueCategory,\n    x: 0,\n    y: 0,\n    issues: new Set(),\n    issueCount\n  };\n}\n\ninterface RelationEdge extends Edge {\n  sourceIssues: Set;\n}\n\nfunction createRelationEdge(sourceId: string, targetId: string, edgeType = folderEdgeTypes.RelatedTo): RelationEdge {\n  return {\n    id: `s${sourceId}t${targetId}r${edgeType}`,\n    source: sourceId,\n    target: targetId,\n    type: folderEdgeTypes.RelatedTo,\n    markerEnd: {\n      template: 'arrow',\n      relativeRotation: 0,\n    },\n    dragHandles: [],\n    sourceIssues: new Set()\n  };\n}\n\nfunction createConsumptionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.InterfaceConsumer,\n    markerEnd: {\n      template: 'interface-connector',\n      relativeRotation: 0,\n    },\n  };\n}\n\nfunction createInterfaceProvisionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.Interface,\n    dragHandles: [],\n  };\n}\n\nfunction getIssueFolderId(id: string, issueCategory: IssueCategory): string {\n  return `${id}__${issueCategory}`;\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst zeroPosition = {x: 0, y: 0};\n\nenum folderEdgeTypes {\n  RelatedTo = 'relatedTo',\n  Depends = 'dependency',\n  Duplicates = 'duplicate'\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IssueStoreService.html":{"url":"injectables/IssueStoreService.html","title":"injectable - IssueStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IssueStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/issue/issue-store.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service provides CRUD operations and linking for issues\nThe code for the mutations are automaticly generated by a code generator for the GraphQL schema\nbased on the definitions in the issue.graphql file in the same folder\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToLocation\n                            \n                            \n                                changeIssueCategory\n                            \n                            \n                                close\n                            \n                            \n                                commentIssue\n                            \n                            \n                                create\n                            \n                            \n                                deleteComment\n                            \n                            \n                                getAllTimelineItems\n                            \n                            \n                                getFullIssue\n                            \n                            \n                                link\n                            \n                            \n                                removeFromLocation\n                            \n                            \n                                rename\n                            \n                            \n                                reopen\n                            \n                            \n                                unlink\n                            \n                            \n                                updateComment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createIssue: CreateIssueGQL, linkIssue: LinkIssueGQL, getFullIssueQuery: GetIssueGQL, commentIssueMutation: CommentIssueGQL, deleteIssueCommentMutation: DeleteIssueCommentGQL, unlinkIssueMutation: UnlinkIssueGQL, closeIssueMutation: CloseIssueGQL, reopenIssueMutation: ReopenIssueGQL, renameIssueMutation: RenameIssueTitleGQL, changeIssueCategoryMutation: ChangeIssueCategoryGQL, addIssueToLocationMutation: AddIssueToLocationGQL, removeIssueFromLocationMutation: RemoveIssueFromLocationGQL, updateCommentMutation: UpdateCommentGQL, getAllTimelineItemsQuery: GetAllTimelineItemsGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/issue/issue-store.service.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createIssue\n                                                  \n                                                        \n                                                                    CreateIssueGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        linkIssue\n                                                  \n                                                        \n                                                                    LinkIssueGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getFullIssueQuery\n                                                  \n                                                        \n                                                                    GetIssueGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commentIssueMutation\n                                                  \n                                                        \n                                                                    CommentIssueGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deleteIssueCommentMutation\n                                                  \n                                                        \n                                                                    DeleteIssueCommentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        unlinkIssueMutation\n                                                  \n                                                        \n                                                                    UnlinkIssueGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        closeIssueMutation\n                                                  \n                                                        \n                                                                    CloseIssueGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reopenIssueMutation\n                                                  \n                                                        \n                                                                    ReopenIssueGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renameIssueMutation\n                                                  \n                                                        \n                                                                    RenameIssueTitleGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeIssueCategoryMutation\n                                                  \n                                                        \n                                                                    ChangeIssueCategoryGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addIssueToLocationMutation\n                                                  \n                                                        \n                                                                    AddIssueToLocationGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        removeIssueFromLocationMutation\n                                                  \n                                                        \n                                                                    RemoveIssueFromLocationGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateCommentMutation\n                                                  \n                                                        \n                                                                    UpdateCommentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getAllTimelineItemsQuery\n                                                  \n                                                        \n                                                                    GetAllTimelineItemsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToLocation\n                        \n                    \n                \n            \n            \n                \naddToLocation(addLocationInput: AddIssueToLocationInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    addLocationInput\n                                    \n                                            AddIssueToLocationInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeIssueCategory\n                        \n                    \n                \n            \n            \n                \nchangeIssueCategory(changeIssueCategoryInput: ChangeIssueCategoryInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changeIssueCategoryInput\n                                    \n                                            ChangeIssueCategoryInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose(closeInput: CloseIssueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    closeInput\n                                    \n                                            CloseIssueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        commentIssue\n                        \n                    \n                \n            \n            \n                \ncommentIssue(commentIssueInput: AddIssueCommentInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    commentIssueInput\n                                    \n                                            AddIssueCommentInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(issueInput: CreateIssueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    issueInput\n                                    \n                                            CreateIssueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteComment\n                        \n                    \n                \n            \n            \n                \ndeleteComment(deleteIssueCommentInput: DeleteIssueCommentInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deleteIssueCommentInput\n                                    \n                                            DeleteIssueCommentInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllTimelineItems\n                        \n                    \n                \n            \n            \n                \ngetAllTimelineItems(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFullIssue\n                        \n                    \n                \n            \n            \n                \ngetFullIssue(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        link\n                        \n                    \n                \n            \n            \n                \nlink(linkIssueInput: LinkIssueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    linkIssueInput\n                                    \n                                            LinkIssueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFromLocation\n                        \n                    \n                \n            \n            \n                \nremoveFromLocation(removeLocationInput: RemoveIssueFromLocationInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    removeLocationInput\n                                    \n                                            RemoveIssueFromLocationInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rename\n                        \n                    \n                \n            \n            \n                \nrename(renameInput: RenameIssueTitleInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    renameInput\n                                    \n                                            RenameIssueTitleInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reopen\n                        \n                    \n                \n            \n            \n                \nreopen(reopenInput: ReopenIssueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reopenInput\n                                    \n                                            ReopenIssueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unlink\n                        \n                    \n                \n            \n            \n                \nunlink(unlinkIssueInput: UnlinkIssueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    unlinkIssueInput\n                                    \n                                            UnlinkIssueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateComment\n                        \n                    \n                \n            \n            \n                \nupdateComment(updateCommentInput: UpdateCommentInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateCommentInput\n                                    \n                                            UpdateCommentInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport {\n  AddIssueCommentInput,\n  CloseIssueGQL,\n  CommentIssueGQL,\n  CreateIssueGQL,\n  CreateIssueInput,\n  GetIssueGQL,\n  GetIssueQuery,\n  LinkIssueGQL,\n  LinkIssueInput,\n  UnlinkIssueGQL,\n  CloseIssueInput,\n  UnlinkIssueInput,\n  ReopenIssueGQL,\n  ReopenIssueInput,\n  RenameIssueTitleInput,\n  RenameIssueTitleGQL,\n  AddIssueToLocationInput,\n  RemoveIssueFromLocationInput,\n  AddIssueToLocationGQL,\n  RemoveIssueFromLocationGQL,\n  DeleteIssueCommentInput,\n  DeleteIssueCommentGQL,\n  UpdateCommentInput,\n  UpdateCommentGQL,\n  GetAllTimelineItemsGQL,\n  GetAllTimelineItemsQuery,\n  ChangeIssueCategoryGQL,\n  ChangeIssueCategoryInput\n} from 'src/generated/graphql';\nimport { Observable } from 'rxjs';\n/**\n * This service provides CRUD operations and linking for issues\n * The code for the mutations are automaticly generated by a code generator for the GraphQL schema\n * based on the definitions in the issue.graphql file in the same folder\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class IssueStoreService {\n\n  constructor(private createIssue: CreateIssueGQL, private linkIssue: LinkIssueGQL, private getFullIssueQuery: GetIssueGQL,\n              private commentIssueMutation: CommentIssueGQL, private deleteIssueCommentMutation: DeleteIssueCommentGQL,\n              private unlinkIssueMutation: UnlinkIssueGQL,\n              private closeIssueMutation: CloseIssueGQL, private reopenIssueMutation: ReopenIssueGQL,\n              private renameIssueMutation: RenameIssueTitleGQL, \n              private changeIssueCategoryMutation: ChangeIssueCategoryGQL,\n              private addIssueToLocationMutation: AddIssueToLocationGQL,\n              private removeIssueFromLocationMutation: RemoveIssueFromLocationGQL,\n              private updateCommentMutation: UpdateCommentGQL,\n              private getAllTimelineItemsQuery: GetAllTimelineItemsGQL) {\n  }\n\n  create(issueInput: CreateIssueInput) {\n    return this.createIssue.mutate({input: issueInput});\n  }\n\n  link(linkIssueInput: LinkIssueInput) {\n    return this.linkIssue.mutate({input: linkIssueInput});\n  }\n\n  unlink(unlinkIssueInput: UnlinkIssueInput) {\n    return this.unlinkIssueMutation.mutate({input: unlinkIssueInput});\n  }\n\n  commentIssue(commentIssueInput: AddIssueCommentInput) {\n    return this.commentIssueMutation.mutate({input: commentIssueInput});\n  }\n\n  deleteComment(deleteIssueCommentInput: DeleteIssueCommentInput) {\n    return this.deleteIssueCommentMutation.mutate({input: deleteIssueCommentInput});\n  }\n\n  close(closeInput: CloseIssueInput) {\n    return this.closeIssueMutation.mutate({input: closeInput});\n  }\n\n  reopen(reopenInput: ReopenIssueInput) {\n    return this.reopenIssueMutation.mutate({input: reopenInput});\n  }\n\n  rename(renameInput: RenameIssueTitleInput) {\n    return this.renameIssueMutation.mutate({input: renameInput});\n  }\n\n  changeIssueCategory(changeIssueCategoryInput: ChangeIssueCategoryInput) {\n    return this.changeIssueCategoryMutation.mutate({input: changeIssueCategoryInput});\n  }\n\n  addToLocation(addLocationInput: AddIssueToLocationInput) {\n    return this.addIssueToLocationMutation.mutate({input: addLocationInput});\n  }\n\n  removeFromLocation(removeLocationInput: RemoveIssueFromLocationInput) {\n    return this.removeIssueFromLocationMutation.mutate({input: removeLocationInput});\n  }\n\n  updateComment(updateCommentInput: UpdateCommentInput) {\n    return this.updateCommentMutation.mutate({input: updateCommentInput});\n  }\n\n  getFullIssue(id: string): Observable {\n    return this.getFullIssueQuery.fetch({id}).pipe(\n      map(({data}) => data)\n    );\n  }\n\n  getAllTimelineItems(id: string): Observable{\n    return this.getAllTimelineItemsQuery.fetch({input: id}).pipe(\n      map(({data}) => data)\n    );\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ItemDirective.html":{"url":"directives/ItemDirective.html","title":"directive - ItemDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ItemDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/item.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Used in various components as an Angular structural directive to define item templates.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appItem]\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\n\n/** Used in various components as an Angular structural directive to define item templates. */\n@Directive({\n  selector: '[appItem]'\n})\nexport class ItemDirective {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LabelSearchComponent.html":{"url":"components/LabelSearchComponent.html","title":"component - LabelSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LabelSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/graphs/label-search/label-search.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is responsible for the display of the search bar above the graph.\nIt allows for filtering issues by multiple labels and text fragments.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-label-search\n            \n\n            \n                styleUrls\n                ./label-search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./label-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                filterSelection$\n                            \n                            \n                                labels$\n                            \n                            \n                                labelsInput$\n                            \n                            \n                                labelsLoading\n                            \n                            \n                                selectedLabels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitSelectedLabels\n                            \n                            \n                                    Private\n                                loadLabels\n                            \n                            \n                                trackByFn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(labelStore: LabelStoreService, ss: StateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/graphs/label-search/label-search.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        labelStore\n                                                  \n                                                        \n                                                                        LabelStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ss\n                                                  \n                                                        \n                                                                        StateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        emitSelectedLabels\n                        \n                    \n                \n            \n            \n                \nemitSelectedLabels()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/label-search/label-search.component.ts:38\n                \n            \n\n\n            \n                \n                    Emit value representing label and text fragments in the search bar via this.filterSelection$\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        loadLabels\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLabels()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/label-search/label-search.component.ts:49\n                \n            \n\n\n            \n                \n                    Load all labels from backend that match the currently typed in ng-select element\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByFn\n                        \n                    \n                \n            \n            \n                \ntrackByFn(item: FilterLabel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/label-search/label-search.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                FilterLabel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        filterSelection$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject({labels: [], texts: []})\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/label-search/label-search.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labels$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/label-search/label-search.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelsInput$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/label-search/label-search.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelsLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/label-search/label-search.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedLabels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterElement[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/label-search/label-search.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { concat, of, Subject, Observable, BehaviorSubject } from 'rxjs';\nimport { catchError, distinctUntilChanged, switchMap, tap } from 'rxjs/operators';\nimport { FilterLabel, isFilterLabel, LabelStoreService } from '../../data/label/label-store.service';\nimport { StateService } from '../../state.service';\n\n/**\n * This component is responsible for the display of the search bar above the graph.\n * It allows for filtering issues by multiple labels and text fragments.\n */\n@Component({\n  selector: 'app-label-search',\n  templateUrl: './label-search.component.html',\n  styleUrls: ['./label-search.component.scss']\n})\nexport class LabelSearchComponent implements OnInit {\n  public filterSelection$ = new BehaviorSubject({labels: [], texts: []});\n\n  labels$: Observable;\n  labelsLoading = false;\n  labelsInput$ = new Subject();\n  selectedLabels: FilterElement[] = [];\n\n  constructor(private labelStore: LabelStoreService, private ss: StateService) {\n  }\n\n  ngOnInit() {\n      this.loadLabels();\n  }\n\n  trackByFn(item: FilterLabel) {\n      return item.id;\n  }\n\n  /**\n   * Emit value representing label and text fragments in the search bar via this.filterSelection$\n   */\n  emitSelectedLabels() {\n    const selection: FilterSelection = {texts: [], labels: []};\n    // find out which elements in search bar correspond to an existing label on the backend and which to a text fragment\n    selection.texts = this.selectedLabels.filter(item => !isFilterLabel(item)).map(item => item.name);\n    selection.labels = this.selectedLabels.filter(label => isFilterLabel(label)) as FilterLabel[];\n    this.filterSelection$.next(selection);\n  }\n\n  /**\n   * Load all labels from backend that match the currently typed in ng-select element\n   */\n  private loadLabels() {\n      this.labels$ = concat(\n          of([]), // default items\n          this.labelsInput$.pipe(\n              distinctUntilChanged(),\n              tap(() => this.labelsLoading = true),\n              switchMap(term => this.labelStore.getMatchingLabels(this.ss.state.project.node.id, term).pipe(\n                  catchError(() => of([])), // empty list on error\n                  tap(() => this.labelsLoading = false)\n              ))\n          )\n      );\n  }\n\n}\n\n\n/**\n * The bar can contain elements standing for labels and elements for text fragments.\n */\ntype FilterElement = TextFragment | FilterLabel;\n\ninterface TextFragment {\n  name: string;\n}\n\nexport interface FilterSelection {\n  texts: string[];\n  labels: FilterLabel[];\n}\n\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./label-search.component.scss\n                \n                .ng-select.label-select ::ng-deep .ng-select-container {\n  min-height: 0;\n}\n\n.ng-select.label-select ::ng-deep .ng-value-container {\n  border-top: 7px solid transparent;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'LabelSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LabelStoreService.html":{"url":"injectables/LabelStoreService.html","title":"injectable - LabelStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LabelStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/label/label-store.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAllFilter\n                            \n                            \n                                getMatchingLabels\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(getLabelsGQL: GetLabelsGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/label/label-store.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        getLabelsGQL\n                                                  \n                                                        \n                                                                    GetLabelsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getAllFilter\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllFilter(projectId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/label/label-store.service.ts:36\n                \n            \n\n\n            \n                \n                    Retrieve all labels from backend\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id of current project\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMatchingLabels\n                        \n                    \n                \n            \n            \n                \ngetMatchingLabels(projectId: string, term: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/label/label-store.service.ts:23\n                \n            \n\n\n            \n                \n                    Retrieve labels matching term.\nwhoose name contains term\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        id of current project\n\n                                    \n                                \n                                \n                                    term\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        coming from search bar above graph\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable emitting objects standing for labels that exist on backend\nwhoose name contains term\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {map} from 'rxjs/operators';\nimport {\n  GetLabelsGQL,\n  Label,\n} from '../../../generated/graphql';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LabelStoreService {\n\n  constructor(private getLabelsGQL: GetLabelsGQL) {}\n\n  /**\n   * Retrieve labels matching term.\n   * @param projectId id of current project\n   * @param term coming from search bar above graph\n   * @returns observable emitting objects standing for labels that exist on backend\n   * whoose name contains term\n   */\n  getMatchingLabels(projectId: string, term: string = null): Observable {\n    if (!term) {\n      return this.getAllFilter(projectId);\n    }\n    return this.getAllFilter(projectId).pipe(\n      map(items => items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1))\n    );\n  }\n\n  /**\n   * Retrieve all labels from backend\n   * @param projectId id of current project\n   */\n  private getAllFilter(projectId: string): Observable {\n    return this.getLabelsGQL.fetch({projectId}).pipe(\n      map(({data}) => data.node.labels.nodes)\n    );\n  }\n}\n\nexport type FilterLabel = Pick;\n\nexport function isFilterLabel(label: any) {\n  return 'id' in label && 'name' in label && 'color' in label;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LayoutNode.html":{"url":"classes/LayoutNode.html","title":"class - LayoutNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LayoutNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/automatic-layout.ts\n        \n\n\n            \n                Description\n            \n            \n                This class is an abstract representation of a node in a graph\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                connectedTo\n                            \n                            \n                                    Public\n                                fixed\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Static\n                                    Readonly\n                                MAX_DISTANCE_CONNECTED\n                            \n                            \n                                    Static\n                                    Readonly\n                                MIN_DISTANCE_CONNECTED\n                            \n                            \n                                    Static\n                                    Readonly\n                                MIN_DISTANCE_EDGE\n                            \n                            \n                                    Static\n                                    Readonly\n                                MIN_DISTANCE_NOT_CONNECTED\n                            \n                            \n                                    Readonly\n                                padding\n                            \n                            \n                                    Static\n                                    Readonly\n                                PADDING_COMPONENT\n                            \n                            \n                                    Static\n                                    Readonly\n                                PADDING_INTERFACE\n                            \n                            \n                                    Public\n                                position\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                calculateMovement\n                            \n                            \n                                    Public\n                                connectTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string | number, positionX: number, positionY: number, nodeType: NodeType)\n                    \n                \n                        \n                            \n                                Defined in src/app/graphs/automatic-layout.ts:173\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                    string | number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        positionX\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        positionY\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nodeType\n                                                  \n                                                        \n                                                                        NodeType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        connectedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:170\n                        \n                    \n\n            \n                \n                    Set of edges this node is connected to\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fixed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:167\n                        \n                    \n\n            \n                \n                    If true, this node will not move under any circumstance\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:161\n                        \n                    \n\n            \n                \n                    Node id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        MAX_DISTANCE_CONNECTED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 80\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:146\n                        \n                    \n\n            \n                \n                    The maximum spacing between two nodes if they are connected by an edge\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        MIN_DISTANCE_CONNECTED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:149\n                        \n                    \n\n            \n                \n                    The minimum spacing between two nodes if they are connected by an edge\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        MIN_DISTANCE_EDGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 60\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:152\n                        \n                    \n\n            \n                \n                    The minimum spacing between a node and an edge\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        MIN_DISTANCE_NOT_CONNECTED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 80\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:143\n                        \n                    \n\n            \n                \n                    The minimum spacing between two nodes if they are not connected by an edge\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        padding\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:173\n                        \n                    \n\n            \n                \n                    Padding to be added to this node\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        PADDING_COMPONENT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:155\n                        \n                    \n\n            \n                \n                    The padding around a component node\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        PADDING_INTERFACE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:158\n                        \n                    \n\n            \n                \n                    The padding around an interface node\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        position\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Vector\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:164\n                        \n                    \n\n            \n                \n                    Position of this node\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        calculateMovement\n                        \n                    \n                \n            \n            \n                \n                    \n                    calculateMovement(allNodes: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:195\n                \n            \n\n\n            \n                \n                    Calculate the movement direction that this node should move in, based on all other nodes around it\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    allNodes\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        All nodes, can include this node as well\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Vector\n\n                    \n                    \n                        The direction in which this node wants to travel\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        connectTo\n                        \n                    \n                \n            \n            \n                \n                    \n                    connectTo(other: LayoutNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:186\n                \n            \n\n\n            \n                \n                    Create an edge between this node and another node.\nDoes not create a connection from the other node to this node!\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                LayoutNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The other node\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {NodeType} from '@app/graphs/issue-graph/issue-graph-nodes';\n\n/**\n * A simple 2D vector class.\n * The value of this vector is essentially immutable, every operation returns a new vector!\n */\nclass Vector {\n  public x: number;\n  public y: number;\n\n  /**\n   * Vector constructor\n   * @param x X component, 0 by default\n   * @param y Y component, 0 by default\n   */\n  constructor(x: number = 0, y: number = 0) {\n    this.x = x;\n    this.y = y;\n  }\n\n  /**\n   * Check if the vector pointing from `source` to `point` is pointing away more than 90 degrees to the vector pointing\n   * from the `source` to the `target`.\n   * @param source The source point, as a vector\n   * @param target The target point, as a vector\n   * @param point The point to check, as a vector\n   * @return dot(target - source, point - source)  = new Set();\n\n  /** Padding to be added to this node */\n  readonly padding: number;\n\n  constructor(id: string | number, positionX: number, positionY: number, nodeType: NodeType) {\n    this.id = id;\n    this.padding = nodeType === NodeType.Component ? LayoutNode.PADDING_COMPONENT : LayoutNode.PADDING_INTERFACE;\n    this.position = new Vector(positionX, positionY);\n  }\n\n  /**\n   * Create an edge between this node and another node.\n   * Does **not** create a connection from the other node to this node!\n   * @param other The other node\n   */\n  public connectTo(other: LayoutNode): void {\n    this.connectedTo.add(other);\n  }\n\n  /**\n   * Calculate the movement direction that this node should move in, based on all other nodes around it\n   * @param allNodes All nodes, can include this node as well\n   * @returns The direction in which this node wants to travel\n   */\n  public calculateMovement(allNodes: Array): Vector {\n    if (this.fixed) {\n      return new Vector();\n    }\n\n    // Total force acting on this node\n    const result = new Vector();\n\n    // Keeps track of edges already visited\n    const otherNodesVisited = new Set();\n\n    for (const otherNode of allNodes) {\n      // Iterate over all other nodes\n      if (otherNode.id === this.id) {\n        continue;\n      }\n\n      // If both nodes are at an identical position, add a small randomized offset to this nodes position\n      let towardsOther = otherNode.position.subtract(this.position);\n      if (towardsOther.isZero()) {\n        this.position.x += Math.random() - .5;\n        this.position.y += Math.random() - .5;\n        towardsOther = otherNode.position.subtract(this.position);\n      }\n\n      const pad = this.padding + otherNode.padding;\n      const distance = Math.max(1, towardsOther.length() - pad);\n      towardsOther = towardsOther.scale(1 / distance);\n\n      // Move this node towards connected nodes, and away from non-connected nodes.\n      // Also make sure that a minimum spacing between nodes exists, regardless of connection.\n      let scale = 0;\n      if (this.connectedTo.has(otherNode)) {\n        if (distance ): void {\n  if (nodes.length === 0) {\n    return;\n  }\n\n  const directions = new Array(nodes.length);\n  // Fix an arbitrary node in place to prevent the graph from flying away\n  const firstNode = nodes[0];\n  firstNode.fixed = true;\n\n  // FIXME: This loop should stop early if no more (significant) changes happen\n  for (let v = 0; v \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LinkedIssueItemComponent.html":{"url":"components/LinkedIssueItemComponent.html","title":"component - LinkedIssueItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LinkedIssueItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-detail/linked-issue-item.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-detail-linked-issue-item\n            \n\n            \n                styleUrls\n                linked-issue-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                linked-issue-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                fullIssue\n                            \n                            \n                                    Public\n                                fullIssueLink\n                            \n                            \n                                    Private\n                                fullIssueSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                didOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                issueStub\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-detail/linked-issue-item.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        issueStub\n                    \n                \n                \n                    \n                        Type :     Issue\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/linked-issue-item.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/linked-issue-item.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        didOpen\n                        \n                    \n                \n            \n            \n                \ndidOpen()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/linked-issue-item.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        fullIssue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataNode\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/linked-issue-item.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fullIssueLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/linked-issue-item.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fullIssueSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/linked-issue-item.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Issue } from '../../generated/graphql-dgql';\nimport { DataNode } from '@app/data-dgql/query';\nimport DataService from '@app/data-dgql';\nimport { NodeType } from '@app/data-dgql/id';\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-issue-detail-linked-issue-item',\n  templateUrl: 'linked-issue-item.component.html',\n  styleUrls: ['linked-issue-item.component.scss']\n})\nexport class LinkedIssueItemComponent implements OnInit, OnDestroy {\n  @Input() projectId: string;\n  @Input() issueStub: Issue;\n\n  public fullIssueLink: string;\n  public fullIssue?: DataNode;\n  private fullIssueSub: Subscription;\n\n  constructor(private dataService: DataService, private router: Router) {}\n\n  ngOnInit() {\n    this.fullIssueLink = this.router.serializeUrl(this.router.createUrlTree(\n      ['/projects', this.projectId, 'issues', this.issueStub.id]\n    ));\n  }\n\n  didOpen() {\n    if (!this.fullIssue) {\n      this.fullIssue = this.dataService.getNode({\n        type: NodeType.Issue,\n        id: this.issueStub.id\n      });\n      this.fullIssueSub = this.fullIssue.subscribe();\n    }\n  }\n\n  ngOnDestroy() {\n    this.fullIssueSub?.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n    \n        \n            {{issueStub.title}}\n        \n        \n            {{component.name}}\n        \n    \n    \n        Loading…\n    \n    \n    \n        View Issue chevron_right\n    \n\n\n    \n\n    \n                \n                    linked-issue-item.component.scss\n                \n                .linked-issue-components {\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  .linked-issue-component {\n    &::after {\n      content: ',';\n      margin-right: 0.3em;\n    }\n    &:last-child::after {\n      content: none;\n    }\n  }\n}\n\n.body-loading {\n  min-height: 56px; // some sort of body height so that the animation doesn't glitch out *too* badly\n  text-align: center;\n  opacity: 0.7;\n}\n\n.issue-buttons {\n  text-align: right;\n  margin-top: 8px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{issueStub.title}}                            {{component.name}}                        Loading…                    View Issue chevron_right    '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'LinkedIssueItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListId.html":{"url":"interfaces/ListId.html","title":"interface - ListId","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ListId\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/id.ts\n        \n\n\n            \n                Description\n            \n            \n                Uniquely identifies a list of items.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            node\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        node\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        node:         NodeId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeId\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The parent node.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         ListType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ListType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of list.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export type NodeIdEnc = string;\nexport type ListIdEnc = string;\n\n/**\n * API node types. The names should match the respective value of __typename for a given node.\n */\nexport enum NodeType {\n  Root,\n  Component,\n  ComponentInterface,\n  Issue,\n  IssueTimelineItem,\n  Label,\n  Project,\n  Artifact,\n  User,\n  IssueComment\n}\n\n/**\n * Returns the NodeType for a given __typename value.\n * @param typename the __typename value\n */\nexport function nodeTypeFromTypename(typename: string) {\n  return NodeType[typename] || null;\n}\n\n/**\n * Uniquely identifies a node.\n */\nexport interface NodeId {\n  /**\n   * The type of this node.\n   */\n  type: NodeType;\n  /**\n   * The ID of this node. This is the same as the node ID in the API.\n   */\n  id: string;\n}\n\nexport function decodeNodeId(id: NodeIdEnc): NodeId {\n  if (!id) {\n    throw new Error('Could not decode node ID: no id given');\n  }\n  const parts = id.split('/');\n  return { type: NodeType[parts[0]], id: parts[1] };\n}\n\nexport function encodeNodeId(nd: NodeId): NodeIdEnc {\n  return NodeType[nd.type] + '/' + nd.id;\n}\n\nexport const ROOT_NODE = { type: NodeType.Root, id: '' };\n\nexport const CURRENT_USER_NODE = { type: NodeType.User, id: 'self' };\n\nexport enum ListType {\n  Projects,\n  Components,\n  ComponentInterfaces,\n  Issues,\n  IssuesOnLocation,\n  IssueLocations,\n  TimelineItems,\n  Labels,\n  Artifacts,\n  Participants,\n  Assignees,\n  SearchUsers,\n  LinkedIssues,\n  LinkedByIssues\n}\n\n/**\n * Uniquely identifies a list of items.\n */\nexport interface ListId {\n  /**\n   * The parent node.\n   */\n  node: NodeId;\n  /**\n   * The type of list.\n   */\n  type: ListType;\n}\n\n/** List cursor and filter. */\nexport interface ListParams {\n  /** Cursor node. */\n  cursor?: NodeId;\n  /** Max number of items to load. */\n  count: number;\n  /** Whether to look forward from the cursor, or backwards. */\n  forward: boolean;\n  /** The filter. */\n  filter?: F;\n}\n\nexport function decodeListId(id: ListIdEnc): ListId {\n  if (!id) {\n    throw new Error('Could not decode list ID: no id given');\n  }\n  const parts = id.split('#');\n  return { node: decodeNodeId(parts[0]), type: ListType[parts[1]] };\n}\n\nexport function encodeListId(ld: ListId): ListIdEnc {\n  return encodeNodeId(ld.node) + '#' + ListType[ld.type];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListParams.html":{"url":"interfaces/ListParams.html","title":"interface - ListParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ListParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/id.ts\n        \n\n\n            \n                Description\n            \n            \n                List cursor and filter.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cursor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            filter\n                                        \n                                \n                                \n                                        \n                                            forward\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Max number of items to load.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cursor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cursor:         NodeId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeId\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Cursor node.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filter:     F\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     F\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The filter.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        forward\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        forward:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether to look forward from the cursor, or backwards.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export type NodeIdEnc = string;\nexport type ListIdEnc = string;\n\n/**\n * API node types. The names should match the respective value of __typename for a given node.\n */\nexport enum NodeType {\n  Root,\n  Component,\n  ComponentInterface,\n  Issue,\n  IssueTimelineItem,\n  Label,\n  Project,\n  Artifact,\n  User,\n  IssueComment\n}\n\n/**\n * Returns the NodeType for a given __typename value.\n * @param typename the __typename value\n */\nexport function nodeTypeFromTypename(typename: string) {\n  return NodeType[typename] || null;\n}\n\n/**\n * Uniquely identifies a node.\n */\nexport interface NodeId {\n  /**\n   * The type of this node.\n   */\n  type: NodeType;\n  /**\n   * The ID of this node. This is the same as the node ID in the API.\n   */\n  id: string;\n}\n\nexport function decodeNodeId(id: NodeIdEnc): NodeId {\n  if (!id) {\n    throw new Error('Could not decode node ID: no id given');\n  }\n  const parts = id.split('/');\n  return { type: NodeType[parts[0]], id: parts[1] };\n}\n\nexport function encodeNodeId(nd: NodeId): NodeIdEnc {\n  return NodeType[nd.type] + '/' + nd.id;\n}\n\nexport const ROOT_NODE = { type: NodeType.Root, id: '' };\n\nexport const CURRENT_USER_NODE = { type: NodeType.User, id: 'self' };\n\nexport enum ListType {\n  Projects,\n  Components,\n  ComponentInterfaces,\n  Issues,\n  IssuesOnLocation,\n  IssueLocations,\n  TimelineItems,\n  Labels,\n  Artifacts,\n  Participants,\n  Assignees,\n  SearchUsers,\n  LinkedIssues,\n  LinkedByIssues\n}\n\n/**\n * Uniquely identifies a list of items.\n */\nexport interface ListId {\n  /**\n   * The parent node.\n   */\n  node: NodeId;\n  /**\n   * The type of list.\n   */\n  type: ListType;\n}\n\n/** List cursor and filter. */\nexport interface ListParams {\n  /** Cursor node. */\n  cursor?: NodeId;\n  /** Max number of items to load. */\n  count: number;\n  /** Whether to look forward from the cursor, or backwards. */\n  forward: boolean;\n  /** The filter. */\n  filter?: F;\n}\n\nexport function decodeListId(id: ListIdEnc): ListId {\n  if (!id) {\n    throw new Error('Could not decode list ID: no id given');\n  }\n  const parts = id.split('#');\n  return { node: decodeNodeId(parts[0]), type: ListType[parts[1]] };\n}\n\nexport function encodeListId(ld: ListId): ListIdEnc {\n  return encodeNodeId(ld.node) + '#' + ListType[ld.type];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is responsible for the login screen. It gather username and password\nand tries to login the user via the AuthenticationService.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                invalidCredentials\n                            \n                            \n                                isLoading\n                            \n                            \n                                returnUrl\n                            \n                            \n                                unknownError\n                            \n                            \n                                validateForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                submitForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, authService: AuthenticationService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:29\n                \n            \n\n\n            \n                \n                    Gather username and password from form and try login via AuthenticationService.\nIf successfull redirect to root url or to the redirectUrl the user originally wanted to access.\nIf login fails, set this.invalidCredentials so that gui shows error.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        invalidCredentials\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        returnUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unknownError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {first} from 'rxjs/operators';\nimport {AuthenticationService} from '../auth/authentication.service';\nimport {HttpErrorResponse} from '@angular/common/http';\n\n/**\n * This component is responsible for the login screen. It gather username and password\n * and tries to login the user via the AuthenticationService.\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  validateForm!: FormGroup;\n  returnUrl: string;\n  isLoading = false;\n  invalidCredentials = false;\n  unknownError = false;\n\n  /**\n   * Gather username and password from form and try login via AuthenticationService.\n   * If successfull redirect to root url or to the redirectUrl the user originally wanted to access.\n   * If login fails, set this.invalidCredentials so that gui shows error.\n   */\n  submitForm(): void {\n    Object.keys(this.validateForm.controls).forEach(controlKey => {\n      this.validateForm.controls[controlKey].markAsDirty();\n      this.validateForm.controls[controlKey].updateValueAndValidity();\n    });\n    this.isLoading = true;\n    this.authService.login(this.validateForm.controls.userName.value, this.validateForm.controls.password.value)\n      .pipe(first())\n      .subscribe(\n        data => {\n          this.validateForm.controls.password.reset();\n          this.isLoading = false;\n          this.router.navigate([this.returnUrl]);\n        },\n        (error: HttpErrorResponse) => {\n          this.validateForm.controls.password.reset();\n          this.isLoading = false;\n          this.invalidCredentials = error.status === 401;\n          this.unknownError = error.status === 0;\n        });\n  }\n\n  constructor(private route: ActivatedRoute, private router: Router,\n              private authService: AuthenticationService, private fb: FormBuilder) {\n  }\n\n  ngOnInit(): void {\n    this.validateForm = this.fb.group({\n      userName: [null, [Validators.required]],\n      password: [null, [Validators.required]],\n    });\n    this.returnUrl = this.route.snapshot.queryParams.returnUrl || '/';\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      Login\n    \n    \n      \n        \n          \n            \n          \n        \n      \n      \n        \n          \n            \n          \n        \n      \n      \n      \n      Log in\n      \n      Or register!\n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                .login-form {\n  max-width: 300px;\n  margin: auto;\n}\n\n.login-form-margin {\n  margin-bottom: 16px;\n}\n\n.login-form-forgot {\n  float: right;\n}\n\n.login-form-button {\n  width: 100%;\n}\n\n.error-message {\n  margin-bottom: 24px;\n}\n\n#register-link {\n  font-size: larger;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Login                                                                                                                                                  Log in            Or register!      '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MarkdownEditorComponent.html":{"url":"components/MarkdownEditorComponent.html","title":"component - MarkdownEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MarkdownEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/markdown/markdown-editor/markdown-editor.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component contains a monaco markdown editor with syntax highlighting\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-markdown-editor\n            \n\n            \n                styleUrls\n                ./markdown-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./markdown-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editorOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                codeDidChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                codeChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        code\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/markdown/markdown-editor/markdown-editor.component.ts:20\n                            \n                        \n                \n                    \n                        This code is initially displayed in the editor\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        codeChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/markdown/markdown-editor/markdown-editor.component.ts:24\n                            \n                        \n                \n                    \n                        Necessary for communicating changes to the parent when changes have been made to the code in the editor.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        codeDidChange\n                        \n                    \n                \n            \n            \n                \ncodeDidChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/markdown/markdown-editor/markdown-editor.component.ts:29\n                \n            \n\n\n            \n                \n                    Send changes in the editor to the parent component over the EventEmitter\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        editorOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {theme: 'vs', language: 'markdown'}\n                    \n                \n                    \n                        \n                                Defined in src/app/markdown/markdown-editor/markdown-editor.component.ts:16\n                        \n                    \n\n            \n                \n                    necessary options for usage of ngx-monaco-editor\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * This component contains a monaco markdown editor with syntax highlighting\n */\n@Component({\n  selector: 'app-markdown-editor',\n  templateUrl: './markdown-editor.component.html',\n  styleUrls: ['./markdown-editor.component.scss']\n})\nexport class MarkdownEditorComponent {\n\n  /**\n   * necessary options for usage of ngx-monaco-editor\n   */\n  editorOptions = {theme: 'vs', language: 'markdown'};\n  /**\n   * This code is initially displayed in the editor\n   */\n  @Input() code: string;\n  /**\n   * Necessary for communicating changes to the parent when changes have been made to the code in the editor.\n   */\n  @Output() codeChange = new EventEmitter();\n\n  /**\n   * Send changes in the editor to the parent component over the EventEmitter\n   */\n  codeDidChange() {\n    this.codeChange.emit(this.code);\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n\n    \n\n    \n                \n                    ./markdown-editor.component.scss\n                \n                .editorContainer{\n  margin-bottom: 20px;\n  border-color: #e6e6e6;\n  border-style: solid;\n  border-width: 1px;\n  border-radius: 6px;\n\n}\n\n.preview{\n  white-space: pre-wrap;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'MarkdownEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MarkdownPreviewComponent.html":{"url":"components/MarkdownPreviewComponent.html","title":"component - MarkdownPreviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MarkdownPreviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/markdown/markdown-preview/markdown-preview.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component renders and displays markdown\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n            \n                preserveWhitespaces\n                true\n            \n\n\n\n            \n                selector\n                app-markdown-preview\n            \n\n            \n                styleUrls\n                ./markdown-preview.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./markdown-preview.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                displayedCode\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        displayedCode\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/markdown/markdown-preview/markdown-preview.component.ts:17\n                            \n                        \n                \n                    \n                        The markdown code as a string which will be rendered\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\n\n/**\n * This component renders and displays markdown\n */\n@Component({\n  selector: 'app-markdown-preview',\n  templateUrl: './markdown-preview.component.html',\n  styleUrls: ['./markdown-preview.component.scss'],\n  preserveWhitespaces: true\n})\nexport class MarkdownPreviewComponent implements OnInit {\n\n  /**\n   * The markdown code as a string which will be rendered\n   */\n  @Input() displayedCode: string;\n\n  /**\n   * @ignore (Keyword for compodoc documentation generator)\n   */\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./markdown-preview.component.scss\n                \n                :host {\n  display: block;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'MarkdownPreviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MultiSourceList.html":{"url":"classes/MultiSourceList.html","title":"class - MultiSourceList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MultiSourceList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/set-editor/set-editor-dialog.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This is an internal component used to load data from multiple sources and through a layer of indirection (also see SetMultiSource).\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hasMore\n                            \n                            \n                                    Public\n                                limit\n                            \n                            \n                                    Public\n                                query\n                            \n                            \n                                    Public\n                                    Optional\n                                results\n                            \n                            \n                                    Public\n                                scoreKeys\n                            \n                            \n                                    Public\n                                    Optional\n                                sourceNodeList\n                            \n                            \n                                    Public\n                                    Optional\n                                sourceNodeListSub\n                            \n                            \n                                    Public\n                                sources\n                            \n                            \n                                    Public\n                                sourceSubs\n                            \n                            \n                                    Public\n                                spec\n                            \n                            \n                                    Public\n                                    Optional\n                                staticSourceNodeList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromSingleList\n                            \n                            \n                                isLoading\n                            \n                            \n                                score\n                            \n                            \n                                setFilter\n                            \n                            \n                                unsubscribe\n                            \n                            \n                                update\n                            \n                            \n                                updateResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(spec: SetMultiSource, scoreKeys: string[], dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        spec\n                                                  \n                                                        \n                                                                        SetMultiSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scoreKeys\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hasMore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:48\n                        \n                    \n\n            \n                \n                    If true, there are more than limit items in the source data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:45\n                        \n                    \n\n            \n                \n                    Max number of items in results.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        results\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        scoreKeys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        sourceNodeList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataList\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        sourceNodeListSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sources\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map>\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sourceSubs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        spec\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SetMultiSource\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        staticSourceNodeList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NodeId[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:41\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        fromSingleList\n                        \n                    \n                \n            \n            \n                \n                    \n                    fromSingleList(list: ListId, scoreKeys: string[], dataService: DataService)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:61\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        F\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                                ListId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scoreKeys\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dataService\n                                    \n                                                DataService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MultiSourceList\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n            \n                \nisLoading()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:148\n                \n            \n\n\n            \n                \n                    If true, something is loading somewhere.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        score\n                        \n                    \n                \n            \n            \n                \nscore(item: T)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:105\n                \n            \n\n\n            \n                \n                    Scores an item for ranking in results.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFilter\n                        \n                    \n                \n            \n            \n                \nsetFilter(query: string, filter: F)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:97\n                \n            \n\n\n            \n                \n                    Sets a filter on all lists.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            F\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe\n                        \n                    \n                \n            \n            \n                \nunsubscribe()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:162\n                \n            \n\n\n            \n                \n                    Unsubscribes from all subscriptions. This object should no longer be used afterwards.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:66\n                \n            \n\n\n            \n                \n                    Updates lists.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateResults\n                        \n                    \n                \n            \n            \n                \nupdateResults()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:124\n                \n            \n\n\n            \n                \n                    Updates the results array from loaded data.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Inject, OnDestroy, OnInit, TemplateRef } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {\n  decodeListId,\n  decodeNodeId,\n  encodeListId,\n  encodeNodeId,\n  ListId,\n  ListIdEnc,\n  NodeId,\n  NodeIdEnc,\n  nodeTypeFromTypename\n} from '@app/data-dgql/id';\nimport { DataList } from '@app/data-dgql/query';\nimport { Subscription } from 'rxjs';\nimport DataService from '@app/data-dgql';\nimport { UserNotifyService } from '@app/user-notify/user-notify.service';\nimport { quickScore } from 'quick-score';\n\n/**\n * This interface is used to source items from multiple sources in the set editor.\n *\n * staticSources specifies lists whose items will always be loaded.\n * sourceNodes specifies a list of nodes whose the sub-items will be loaded (e.g. a list of components whose labels will be loaded).\n */\nexport interface SetMultiSource {\n  /** A static list of source lists. */\n  staticSources: ListId[];\n  /** A list of nodes that will be passed to listFromNode. */\n  sourceNodes?: ListId | NodeId[];\n  /** Maps nodes from sourceNodes to lists from which items will be sourced. */\n  listFromNode?: (n: NodeId) => ListId;\n}\n\n/**\n * This is an internal component used to load data from multiple sources and through a layer of indirection (also see SetMultiSource).\n */\nclass MultiSourceList {\n  public sourceNodeList?: DataList;\n  public sourceNodeListSub?: Subscription;\n  public staticSourceNodeList?: NodeId[];\n  public sources: Map> = new Map();\n  public sourceSubs: Map = new Map();\n  /** Max number of items in results. */\n  public limit = 10;\n  public results?: T[];\n  /** If true, there are more than `limit` items in the source data. */\n  public hasMore = false;\n  public query = '';\n\n  constructor(public spec: SetMultiSource, public scoreKeys: string[], private dataService: DataService) {\n    if (Array.isArray(spec.sourceNodes)) {\n      this.staticSourceNodeList = spec.sourceNodes;\n    } else if (typeof spec.sourceNodes === 'object') {\n      this.sourceNodeList = dataService.getList(spec.sourceNodes);\n      this.sourceNodeListSub = this.sourceNodeList.subscribe(() => this.update());\n    }\n    this.update();\n  }\n\n  static fromSingleList(list: ListId, scoreKeys: string[], dataService: DataService) {\n    return new this({ staticSources: [list] }, scoreKeys, dataService);\n  }\n\n  /** Updates lists. */\n  update() {\n    const newSourceSet = new Set();\n    for (const [id, node] of this.sourceNodeList?.current?.entries() || []) {\n      const nodeId = decodeNodeId(id);\n      newSourceSet.add(encodeListId(this.spec.listFromNode(nodeId)));\n    }\n    for (const nodeId of this.staticSourceNodeList || []) {\n      newSourceSet.add(encodeListId(this.spec.listFromNode(nodeId)));\n    }\n    for (const source of this.spec.staticSources) {\n      newSourceSet.add(encodeListId(source));\n    }\n\n    for (const source of newSourceSet) {\n      if (!this.sources.has(source)) {\n        const list = this.dataService.getList(decodeListId(source));\n        list.interactive = true;\n        this.sources.set(source, list);\n        this.sourceSubs.set(source, list.subscribe(() => this.updateResults()));\n      }\n    }\n    for (const source of [...this.sources.keys()]) {\n      if (!newSourceSet.has(source)) {\n        this.sourceSubs.get(source).unsubscribe();\n        this.sourceSubs.delete(source);\n        this.sources.delete(source);\n      }\n    }\n  }\n\n  /** Sets a filter on all lists. */\n  setFilter(query: string, filter: F) {\n    this.query = query;\n    for (const source of this.sources.values()) {\n      source.filter = filter;\n    }\n  }\n\n  /** Scores an item for ranking in results. */\n  score(item: T) {\n    const matchStrings = [];\n    for (const key of this.scoreKeys) {\n      let cursor = item;\n      for (const objKey of key.split('.')) {\n        cursor = cursor[objKey];\n        if (!cursor) {\n          break;\n        }\n      }\n      if (cursor) {\n        matchStrings.push(cursor);\n      }\n    }\n\n    return quickScore(matchStrings.join(' '), this.query);\n  }\n\n  /** Updates the results array from loaded data. */\n  updateResults() {\n    const seenItems = new Set();\n    const items = [];\n    this.hasMore = false;\n    for (const source of this.sources.values()) {\n      if (!source.hasData) {\n        continue;\n      }\n      for (const [id, item] of source.current.entries()) {\n        if (!seenItems.has(id)) {\n          seenItems.add(id);\n          items.push(item);\n        }\n      }\n      this.hasMore = this.hasMore || (source.current.size  this.score(a) - this.score(b));\n    items.splice(this.limit);\n\n    this.results = items;\n  }\n\n  /** If true, something is loading somewhere. */\n  isLoading() {\n    if (this.sourceNodeList?.loading) {\n      return true;\n    }\n    for (const source of this.sources.values()) {\n      if (source.loading) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /** Unsubscribes from all subscriptions. This object should no longer be used afterwards. */\n  unsubscribe() {\n    this.sourceNodeListSub?.unsubscribe();\n    this.sourceSubs.forEach(sub => sub.unsubscribe());\n  }\n}\n\nexport type ItemOps = 'none' | 'edit' | 'create-edit' | 'create-edit-delete';\n\nexport interface SetEditorDialogData {\n  title: string;\n  listSet: ListId | NodeId[];\n  listAll: ListId | SetMultiSource;\n  applyChangeset: (add: NodeId[], del: NodeId[]) => Promise;\n  itemTemplate: TemplateRef;\n  makeFilter: (query: string) => F;\n  scoreKeys: string[];\n  emptySuggestionsLabel: string;\n  emptyResultsLabel: string;\n  createItem?: () => Promise;\n  editItem?: ({ id: NodeId, preview: T }) => void;\n  deleteItem?: ({ id: NodeId, preview: T }) => void;\n}\n\n/** This is an internal component used in the set editor. */\n@Component({\n  selector: 'app-set-editor-dialog',\n  templateUrl: './set-editor-dialog.component.html',\n  styleUrls: ['./set-editor-dialog.component.scss']\n})\nexport class SetEditorDialogComponent implements OnInit, OnDestroy {\n  public isLocalSet = false;\n  public localSet: NodeIdEnc[] = [];\n  public listSet$: DataList;\n  public listAll: MultiSourceList;\n  private listSetSub: Subscription;\n  private additions: Set = new Set();\n  private deletions: Set = new Set();\n  public searchQuery = '';\n\n  constructor(\n    private dataService: DataService,\n    private notifyService: UserNotifyService,\n    private dialogRef: MatDialogRef>,\n    @Inject(MAT_DIALOG_DATA) public data: SetEditorDialogData\n  ) {}\n\n  ngOnInit() {\n    if (Array.isArray(this.data.listSet)) {\n      this.isLocalSet = true;\n      this.localSet = [...this.data.listSet].map(id => encodeNodeId(id));\n    } else {\n      this.listSet$ = this.dataService.getList(this.data.listSet);\n    }\n    this.listAll = ('staticSources' in this.data.listAll)\n      ? new MultiSourceList(this.data.listAll, this.data.scoreKeys, this.dataService)\n      : MultiSourceList.fromSingleList(this.data.listAll, this.data.scoreKeys, this.dataService);\n\n    if (this.listSet$) {\n      this.listSetSub = this.listSet$?.subscribe();\n      // TODO: is this a reasonable heuristic for the listSet count? we need to cover >= results from listAll\n      this.listSet$.count = 10;\n      this.listSet$.interactive = true;\n    }\n  }\n\n  searchQueryDidChange() {\n    if (this.listSet$) {\n      this.listSet$.filter = this.data.makeFilter(this.searchQuery);\n    }\n    this.listAll.setFilter(this.searchQuery, this.data.makeFilter(this.searchQuery));\n  }\n\n  getNodeId(item): NodeId {\n    const type = nodeTypeFromTypename(item.__typename);\n    return { type, id: item.id };\n  }\n\n  getEncodedId(item): NodeIdEnc {\n    return encodeNodeId(this.getNodeId(item));\n  }\n\n  isInSet(item): boolean {\n    const id = this.getEncodedId(item);\n    if (this.additions.has(id)) {\n      return true;\n    }\n    if (this.deletions.has(id)) {\n      return false;\n    }\n    if (this.isLocalSet) {\n      return this.localSet.includes(id);\n    }\n    return this.listSet$.current?.has(id) || false;\n  }\n\n  toggleInSet(item): void {\n    const id = this.getEncodedId(item);\n    if (this.isInSet(item)) {\n      this.additions.delete(id);\n      this.deletions.add(id);\n    } else {\n      this.deletions.delete(id);\n      this.additions.add(id);\n    }\n  }\n\n  apply() {\n    if (this.additions.size + this.deletions.size === 0) {\n      this.dialogRef.close(null);\n      return;\n    }\n\n    this.data.applyChangeset([...this.additions].map(decodeNodeId), [...this.deletions].map(decodeNodeId)).then(() => {\n      this.dialogRef.close(null);\n    }).catch(error => {\n      this.notifyService.notifyError('Failed to apply changes', error);\n    });\n  }\n\n  createItem() {\n    this.data.createItem().then(node => {\n      if (node) {\n        this.additions.add(encodeNodeId(node));\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.listSetSub?.unsubscribe();\n    this.listAll.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NodeCache.html":{"url":"classes/NodeCache.html","title":"class - NodeCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NodeCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/query.ts\n        \n\n\n            \n                Description\n            \n            \n                Keeps a cache of DataNodes such that each NodeId has at most one associated DataNode.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nodes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createNode\n                            \n                            \n                                getNode\n                            \n                            \n                                insertNodes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(queries: QueriesService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data-dgql/query.ts:579\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queries\n                                                  \n                                                        \n                                                                        QueriesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        nodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map>\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/query.ts:579\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createNode\n                        \n                    \n                \n            \n            \n                \n                    \n                    createNode(id: NodeId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:583\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                NodeId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNode\n                        \n                    \n                \n            \n            \n                \ngetNode(id: NodeId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:589\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Returns the DataNode for the given NodeId.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                NodeId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DataNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        insertNodes\n                        \n                    \n                \n            \n            \n                \ninsertNodes(nodes: T[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:603\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Inserts nodes into the cache and returns them as a map (in the same order).\nNote: the ID parameter of the node is only optional for type compatibility with the GQL schema.\nNodes without an ID will be ignored.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nodes\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Map\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, Subscriber } from 'rxjs';\nimport {\n  decodeNodeId,\n  encodeNodeId,\n  ListId,\n  ListParams,\n  NodeId,\n  NodeIdEnc,\n  nodeTypeFromTypename,\n} from './id';\nimport { QueriesService } from './queries/queries.service';\nimport { ListResult, queryList, queryNode } from './load';\nimport { PageInfo } from '../../generated/graphql-dgql';\n\nconst CACHE_FAST_DEBOUNCE_TIME_MS = 200;\nconst CACHE_INTERACTIVE_DEBOUNCE_TIME_MS = 500;\nconst CACHE_STALE_TIME_MS = 5000;\n\n/**\n * A piece of observable data.\n *\n * DataQuery is a stateful interface for interacting with an API object.\n * Instead of calling a function to make an API request, DataQuery lets you declare the ID (like an endpoint) and\n * request parameters (in {@link #params}) of the data you want, and will automatically load the data when needed.\n * Data can then be accessed synchronously with the {@link #current} property.\n *\n * Upon adding a subscriber with [#subscribe]{@link Observable#subscribe}, data will loaded from the API and stored in the\n * cache. Subsequent viewers can then immediately access the cached data.\n *\n * - To check if data is loaded, use {@link #hasData},\n *   and to check if data is still loading, use {@link #loading}.\n * - To (re-)load the data from the API, use {@link #load}.\n *   This happens automatically upon subscription after a sufficient delay (see debounce time constants).\n * - To add a subscriber without triggering this behavior, use {@link #subscribeLazy}, which will\n *   only make an API request if the data is not cached.\n * - To invalidate (i.e. delete) the cached data, use {@link #invalidate}.\n * - If you only need the data right now and don't want to deal with subscriptions, use {@link #dataAsPromise}\n *   to access it as a promise that will either return cached data or load new data.\n *\n * When done using a DataQuery subscription, it *must* be manually destroyed by calling\n * [`sub.unsubscribe()`]{@link Subscription#unsubscribe} on the Subscription object returned by\n * [subscribe]{@link Observable#subscribe}, as it may leak memory otherwise.\n *\n * See {@link DataNode} and {@link DataList} for the two main types of data that use DataQuery.\n *\n * @typeParam T - type of data accessible via .current\n * @typeParam R - type returned by innerQueryFn\n * @typeParam P - parameter type for innerQueryFn\n */\nexport abstract class DataQuery extends Observable {\n  /** The ID of this data. */\n  id: I;\n  loading = false; // TODO: maybe make this value observable too?\n  /** @ignore */\n  protected currentData?: T;\n  /** @ignore */\n  protected lastLoadTime = 0;\n  /** @ignore */\n  protected pSetParamsNoUpdate = false;\n\n  /** Returns true if data is currently available. */\n  get hasData(): boolean {\n    return this.currentData !== undefined;\n  }\n\n  /** The currently loaded data. */\n  get current(): T {\n    return this.currentData;\n  }\n\n  /** @ignore */\n  protected currentQueryParams?: P;\n  /**\n   * Parameters that will be passed to the request.\n   * Changing this property will automatically trigger a load.\n   */\n  get params(): P | undefined {\n    return this.currentQueryParams;\n  }\n  set params(p: P) {\n    this.currentQueryParams = p;\n    if (!this.pSetParamsNoUpdate) {\n      this.loadDebounced();\n    }\n  }\n\n  /** @ignore */\n  protected subscribers: Set> = new Set();\n  /** @ignore */\n  protected innerQueryFn: (id: I, p: P) => Promise;\n  /** @ignore */\n  protected innerMapFn: (r: R) => T;\n  /** @ignore */\n  protected stateLock = 0;\n  /** @ignore */\n  protected loadTimeout = null;\n  /** @ignore */\n  protected hydrated = false;\n  /** @ignore */\n  protected isNextSubLazy = false;\n\n  /** If true, will prolong debounce time a bit. */\n  interactive = false;\n\n  /**\n   * @ignore\n   * Creates a new DataQuery (you should never need to use this directly)\n   *\n   * @param id an identifier for the data being loaded\n   * @param query the inner query function\n   * @param map maps returned data from the query R to usable data T\n   */\n  constructor(id: I, query: (id: I, p: P) => Promise, map: (r: R) => T) {\n    super(subscriber => {\n      this.addSubscriber(subscriber, this.isNextSubLazy);\n      this.isNextSubLazy = false;\n    });\n    this.id = id;\n    this.innerQueryFn = query;\n    this.innerMapFn = map;\n  }\n\n  /**\n   * Returns the data as a promise, without having to create a subscription.\n   *\n   * If cached data is available, this will return the data immediately; otherwise, this will\n   * load the data with an API request.\n   *\n   * #### Example\n   * ```ts\n   * const node = dataService.getNode(someNodeId);\n   * node.dataAsPromise().then(data => {\n   *   console.log('node data:', data);\n   * }).catch(error => console.error('oh no'));\n   * ```\n   */\n  dataAsPromise(): Promise {\n    if (this.hasData) {\n      return Promise.resolve(this.current);\n    }\n    return new Promise((resolve, reject) => {\n      const sub = this.subscribe(data => {\n        resolve(data);\n        sub.unsubscribe();\n      }, error => {\n        reject(error);\n        sub.unsubscribe();\n      });\n    });\n  }\n\n  /** @ignore */\n  private loadImpl(fut: Promise) {\n    clearTimeout(this.loadTimeout);\n    this.loadTimeout = null;\n    this.lastLoadTime = Date.now();\n    this.loading = true;\n\n    // if load is called twice; only the newest load call will have an effect\n    const stateLock = ++this.stateLock;\n\n    fut.then(data => {\n      if (stateLock !== this.stateLock) {\n        return;\n      }\n      this.insertResult(data);\n      this.loading = false;\n      this.hydrated = false;\n    }).catch(error => {\n      if (stateLock !== this.stateLock) {\n        return;\n      }\n      this.emitErrorToAllSubscribers(error);\n      this.loading = false;\n      this.hydrated = false;\n    });\n  }\n\n  /** Loads data. */\n  load() {\n    this.hydrated = false;\n    this.loadImpl(this.innerQueryFn(this.id, this.currentQueryParams));\n  }\n\n  /**\n   * @internal\n   * Use when data has not yet been loaded but is available from elsewhere.\n   */\n  hydrateRaw(preparedData: Promise) {\n    if (this.hasData) {\n      return; // don't need hydration\n    }\n    this.hydrated = true;\n    this.loadImpl(preparedData);\n  }\n\n  /** Will load data if it's stale or not present. */\n  loadIfNeeded() {\n    if (this.loading) {\n      return;\n    }\n    if (!this.hasData || Date.now() - this.lastLoadTime > CACHE_STALE_TIME_MS) {\n      this.load();\n    }\n  }\n\n  /** Loads data after a short delay. Will debounce. */\n  loadDebounced(interactive = this.interactive) {\n    if (this.loadTimeout) {\n      return;\n    }\n    this.loadTimeout = setTimeout(() => {\n      this.loadTimeout = null;\n      this.load();\n    }, interactive ? CACHE_INTERACTIVE_DEBOUNCE_TIME_MS : CACHE_FAST_DEBOUNCE_TIME_MS);\n  }\n\n  /** Deletes current data. */\n  invalidate() {\n    this.currentData = undefined;\n    this.emitUpdateToAllSubscribers();\n  }\n\n  /** @ignore */\n  protected addSubscriber(subscriber: Subscriber, lazy: boolean) {\n    this.subscribers.add(subscriber);\n    if (this.current !== undefined) {\n      // data is available right now! emit current state\n      subscriber.next(this.current);\n    }\n\n    if (!this.hydrated && (!lazy || !this.hasData)) {\n      this.loadIfNeeded();\n    }\n\n    return {\n      unsubscribe: () => {\n        this.subscribers.delete(subscriber);\n      },\n    };\n  }\n\n  /**\n   * Will subscribe to the data, but not cause a reload unless there is no data.\n   * @param args passed verbatim to [#subscribe]{@link Observable#subscribe}\n   */\n  subscribeLazy(...args) {\n    this.isNextSubLazy = true;\n    return this.subscribe(...args);\n  }\n\n  /** @ignore */\n  emitUpdateToAllSubscribers() {\n    for (const sub of this.subscribers) {\n      sub.next(this.current);\n    }\n  }\n\n  /** @ignore */\n  emitErrorToAllSubscribers(error: unknown) {\n    for (const sub of this.subscribers) {\n      sub.error(error);\n    }\n  }\n\n  /** @ignore */\n  insertResult(result: R) {\n    this.currentData = this.innerMapFn(result);\n    this.emitUpdateToAllSubscribers();\n  }\n\n  /** Returns the number of subscribers for this data. */\n  get subscriberCount(): number {\n    return this.subscribers.size;\n  }\n}\n\n/** ignore */\nconst identity = id => id;\n\n/**\n * A cacheable node with no parameters.\n *\n * See {@link DataQuery} for more information, and {@link DataService} to obtain a DataNode.\n *\n * #### Example\n * ```html\n * \n *   Is it loading? {{thing$.loading ? 'yes' : 'no'}}\n *   Is the thing loaded? {{thing$.hasData ? 'yes' : 'no'}}\n *   \n *     Thing data: {{thing.something}}\n *   \n * \n * ```\n * ```ts\n * class ExampleComponent implements OnInit, OnDestroy {\n *   @Input() thingId: NodeId;\n *\n *   public thing$: DataNode;\n *   public thingSub: Subscription; // subscription to thing$\n *\n *   constructor(private dataService: DataService) {}}\n *\n *   ngOnInit() {\n *     // obtain the DataNode from the data service\n *     this.thing$ = this.dataService.getNode(this.thingId);\n *\n *     // subscribe to indicate that we want some data\n *     this.thingSub = this.thing$.subscribe();\n *   }\n *\n *   ngOnDestroy() {\n *     // remember to unsubscribe!!\n *     this.thingSub.unsubscribe();\n *   }\n * }\n * ```\n */\nexport class DataNode extends DataQuery {\n  /** @ignore */\n  constructor(queries: QueriesService, id: NodeId) {\n    super(id, queryNode(queries), identity);\n  }\n\n  set params(p) {\n    throw new Error('parameters not available on nodes');\n  }\n\n  loadIfNeeded() {\n    if (!this.loading && Date.now() - this.lastLoadTime > CACHE_STALE_TIME_MS) {\n      this.load();\n    }\n  }\n}\n\n/**\n * Provides a view into list of items.\n *\n * See {@link DataQuery} for more information, and {@link DataService} to obtain a DataList.\n *\n * - To access list items, use {@link #currentItems}.\n * - If you need the IDs as well, use {@link #current} (note that the Map is ordered).\n *\n * The current view is defined by following properties:\n *\n * - {@link #cursor}: the current NodeId cursor (see API documentation for details)\n * - {@link #count}: number of items to load\n * - {@link #forward}: if true, will load items after the cursor. If false, will load items before.\n * - {@link #filter}: filter object (type parameter F)\n *\n * Changing any of these properties will reload the list (debounced).\n *\n * @typeParam T - list item type\n * @typeParam F - list filter type\n *\n * #### Example\n * ```html\n * \n *   \n *     a thing! {{thing.something}}\n *   \n * \n * ```\n * ```ts\n * class ExampleComponent implements OnInit, OnDestroy {\n *   @Input() thingsListId: ListId;\n *\n *   things$: DataList; // filter type unknown because we're not using here\n *   thingsSub: Subscription;\n *\n *   constructor(private dataService: DataService) {}}\n *\n *   ngOnInit() {\n *     // obtain a list view from the data service\n *     this.things$ = this.dataService.getList(this.thingsListId);\n *\n *     // subscribe to the list to indicate that we want some data\n *     this.thingsSub = this.things$.subscribe();\n *   }\n *\n *   ngOnDestroy() {\n *     // remember to unsubscribe!!\n *     this.thingsSub.unsubscribe();\n *   }\n * }\n * ```\n */\nexport class DataList extends DataQuery, ListResult, ListParams> {\n  /** @ignore */\n  private pCursor?: NodeId;\n  /** @ignore */\n  private pCount = 10;\n  /** @ignore */\n  private pFilter?: F;\n  /** @ignore */\n  private pForward = true;\n  /** @ignore */\n  private pageInfo?: PageInfo;\n  /** @ignore */\n  private pTotalCount?: number;\n  /** @ignore */\n  private previouslyHadPageContents = false;\n  /** @ignore */\n  private pNodes: NodeCache;\n\n  /** @ignore */\n  constructor(queries: QueriesService, nodes: NodeCache, id: ListId) {\n    super(id, queryList(queries, nodes), result => {\n      this.pageInfo = result.pageInfo;\n      this.pTotalCount = result.totalCount;\n\n      // API *only* reports hasPreviousPage or hasNextPage correctly if we are navigating in that\n      // same direction. Hence, we need to amend pageInfo with prior knowledge.\n      if (this.forward) {\n        this.pageInfo.hasPreviousPage = this.previouslyHadPageContents;\n      } else {\n        this.pageInfo.hasNextPage = this.previouslyHadPageContents;\n      }\n      this.previouslyHadPageContents = !!result.items.size;\n\n      return result.items;\n    });\n    this.pNodes = nodes;\n    this.pSetParamsNoUpdate = true;\n    this.setParams();\n    this.pSetParamsNoUpdate = false;\n  }\n\n  /**\n   * @internal\n   * Updates the `params` value from list parameters\n   */\n  setParams() {\n    this.params = {\n      cursor: this.pCursor,\n      count: this.pCount,\n      forward: this.pForward,\n      filter: this.pFilter,\n    };\n  }\n\n  /** Returns the total number of items. Null if not loaded. */\n  get totalCount() {\n    return this.pTotalCount;\n  }\n\n  /** Returns the currently loaded items in an array. */\n  get currentItems(): T[] {\n    if (!this.hasData) {\n      return [];\n    }\n    return [...this.current.values()];\n  }\n\n  /** Current list filter object. */\n  get filter(): F | undefined {\n    return this.pFilter;\n  }\n  set filter(f: F) {\n    this.pFilter = f;\n    this.setParams();\n  }\n\n  /** The current pagination cursor (a node relative to which items will be loaded). Nullable. */\n  get cursor(): NodeId {\n    return this.pCursor;\n  }\n  set cursor(c: NodeId) {\n    this.pCursor = c;\n    this.setParams();\n  }\n\n  /** The max amount of items to be loaded. */\n  get count(): number {\n    return this.pCount;\n  }\n  set count(c: number) {\n    this.pCount = c;\n    this.setParams();\n  }\n\n  /** Whether to load items after the cursor (true), or items before the cursor (false). */\n  get forward(): boolean {\n    return this.pForward;\n  }\n  set forward(f: boolean) {\n    this.pForward = f;\n    this.setParams();\n  }\n\n  /** Returns the node ID of the first item on the current page. */\n  get firstPageItemId(): NodeId | null {\n    const firstKey = this.current ? this.current.keys().next()?.value || null : null;\n    return firstKey ? decodeNodeId(firstKey) : null;\n  }\n\n  /** Returns the node ID of the last item on the current page. */\n  get lastPageItemId(): NodeId | null {\n    if (!this.current) {\n      return;\n    }\n    const keys = [...this.current.keys()];\n    return keys[keys.length - 1] ? decodeNodeId(keys[keys.length - 1]) : null;\n  }\n\n  /** Returns true if the current result contains the given node. */\n  currentHasNode(key: NodeId): boolean {\n    return this.current?.has(encodeNodeId(key));\n  }\n\n  get hasPrevPage() {\n    return !this.pageInfo || this.pageInfo.hasPreviousPage;\n  }\n  get hasNextPage() {\n    return !this.pageInfo || this.pageInfo.hasNextPage;\n  }\n\n  /** Moves the view to the first page. */\n  firstPage() {\n    this.cursor = null;\n    this.forward = true;\n    this.previouslyHadPageContents = false;\n    this.invalidate();\n    return true;\n  }\n\n  /** Moves the view to the previous page. */\n  prevPage() {\n    if (this.pageInfo && !this.pageInfo.hasPreviousPage) {\n      return false;\n    }\n    this.cursor = this.firstPageItemId;\n    this.forward = false;\n    this.invalidate();\n    return true;\n  }\n\n  /** Moves the view to the next page. */\n  nextPage() {\n    if (this.pageInfo && !this.pageInfo.hasNextPage) {\n      return false;\n    }\n    this.cursor = this.lastPageItemId;\n    this.forward = true;\n    this.invalidate();\n    return true;\n  }\n\n  /**\n   * Hydrates this list with initial data in the API format\n   *\n   * If you've already got data from the API that contains the first page of this list, you can use\n   * this method to insert that data directly and avoid triggering a redundant API request.\n   *\n   * @param data a promise that returns the API data\n   * @typeParam IdT - equivalent to T\n   */\n  hydrateInitial(data: Promise>) {\n    this.hydrateRaw(data.then(value => ({\n      totalCount: value.totalCount,\n      pageInfo: value.pageInfo,\n      items: this.pNodes.insertNodes(value.nodes || [])\n    })));\n  }\n}\n\n/** List hydration object (constructing this manually shouldn't be necessary as it mirrors the structure of GQL objects) */\nexport type HydrateList = {\n  totalCount: number,\n  pageInfo: PageInfo,\n  /** This is nullable because it's nullable in the GQL schema. In practice it should always exist */\n  nodes?: (T | null)[]\n};\n\n/** Keeps a cache of DataNodes such that each NodeId has at most one associated DataNode. */\nexport class NodeCache {\n  // TODO: garbage collection? (nodes with zero subscribers)\n  nodes: Map> = new Map();\n\n  constructor(private queries: QueriesService) {}\n\n  private createNode(id: NodeId) {\n    const encodedId = encodeNodeId(id);\n    this.nodes.set(encodedId, new DataNode(this.queries, id));\n  }\n\n  /** Returns the DataNode for the given NodeId. */\n  getNode(id: NodeId): DataNode {\n    const encodedId = encodeNodeId(id);\n    if (!this.nodes.has(encodedId)) {\n      this.createNode(id);\n    }\n    return this.nodes.get(encodedId) as DataNode;\n  }\n\n  /**\n   * Inserts nodes into the cache and returns them as a map (in the same order).\n   *\n   * Note: the ID parameter of the node is only optional for type compatibility with the GQL schema.\n   * Nodes without an ID will be ignored.\n   */\n  insertNodes(nodes: T[]): Map {\n    const map = new Map();\n\n    for (const node of nodes) {\n      if (!node?.id) {\n        continue;\n      }\n      const type = nodeTypeFromTypename(node.__typename);\n      const id = { type, id: node.id };\n      const dataNode: DataNode = this.getNode(id);\n      if (!dataNode.hasData) {\n        // FIXME: different queries load different amounts of data, simple overwriting doesn't always have the desired effect\n        //  S1: distinguish between nodes and \"partial nodes\"?\n        //  S2: deep merge data?\n        dataNode.insertResult(node);\n      }\n      map.set(encodeNodeId(id), node);\n    }\n\n    return map;\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NodeDetailsComponent.html":{"url":"components/NodeDetailsComponent.html","title":"component - NodeDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NodeDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/node-details/node-details.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component shows details of components or interfaces\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-node-details\n            \n\n            \n                styleUrls\n                ./node-details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./node-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                            \n                                editMode\n                            \n                            \n                                interface\n                            \n                            \n                                issueListId\n                            \n                            \n                                placeholder\n                            \n                            \n                                showName\n                            \n                            \n                                validationDescription\n                            \n                            \n                                validationIMS\n                            \n                            \n                                validationName\n                            \n                            \n                                validationProvider\n                            \n                            \n                                validationType\n                            \n                            \n                                validationUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getNodeName\n                            \n                            \n                                    Public\n                                getNodeTypeString\n                            \n                            \n                                    Public\n                                node\n                            \n                            \n                                    Public\n                                onCancelClick\n                            \n                            \n                                    Public\n                                onDeleteClick\n                            \n                            \n                                    Public\n                                onEditClick\n                            \n                            \n                                    Public\n                                onSaveClick\n                            \n                            \n                                    Private\n                                resetValues\n                            \n                            \n                                    Private\n                                showDeleteDialog\n                            \n                            \n                                    Private\n                                updateComponent\n                            \n                            \n                                    Private\n                                updateInterface\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                callback\n                            \n                            \n                                nodeId\n                            \n                            \n                                nodeType\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, componentStoreService: ComponentStoreService, interfaceStoreService: InterfaceStoreService, dialog: MatDialog, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/node-details/node-details.component.ts:79\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        componentStoreService\n                                                  \n                                                        \n                                                                        ComponentStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        interfaceStoreService\n                                                  \n                                                        \n                                                                        InterfaceStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        callback\n                    \n                \n                \n                    \n                        Type :         NodeUpdatedCallbackFn\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/node-details/node-details.component.ts:55\n                            \n                        \n                \n                    \n                        Function to be called if a node was updated or deleted\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        nodeId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/node-details/node-details.component.ts:47\n                            \n                        \n                \n                    \n                        Id of the node\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        nodeType\n                    \n                \n                \n                    \n                        Type :         NodeDetailsType\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/node-details/node-details.component.ts:51\n                            \n                        \n                \n                    \n                        Either component or interface\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/node-details/node-details.component.ts:43\n                            \n                        \n                \n                    \n                        The project that contains the node\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getNodeName\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodeName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:130\n                \n            \n\n\n            \n                \n                    Get the name of the node, or an empty string if it has not been fetched yet\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getNodeTypeString\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodeTypeString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:145\n                \n            \n\n\n            \n                \n                    Get the type of the node as a formatted string\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        node\n                        \n                    \n                \n            \n            \n                \n                    \n                    node()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:152\n                \n            \n\n\n            \n                \n                    Access the node\n\n\n                    \n                        Returns :     GetComponentQuery | GetInterfaceQuery\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onCancelClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onCancelClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onDeleteClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeleteClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onEditClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onEditClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onSaveClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onSaveClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:249\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        resetValues\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetValues()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:263\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        showDeleteDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    showDeleteDialog(affected: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:201\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    affected\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateComponent\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateComponent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:277\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateInterface\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:292\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GetBasicComponentQuery\n\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interface\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GetInterfaceQuery\n\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issueListId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ListId\n\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        placeholder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'placeholder'\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', CCIMSValidators.contentValidator)\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationIMS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required, CCIMSValidators.urlValidator])\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required, CCIMSValidators.nameFormatValidator])\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationProvider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required, CCIMSValidators.urlValidator])\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required, CCIMSValidators.urlValidator])\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:76\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {\n  GetBasicComponentQuery,\n  GetComponentQuery,\n  GetInterfaceQuery,\n  UpdateComponentInput,\n  UpdateComponentInterfaceInput\n} from '../../generated/graphql';\nimport {FormControl, Validators} from '@angular/forms';\nimport { ListId, ListType, NodeType } from '@app/data-dgql/id';\nimport {Router} from '@angular/router';\nimport {ComponentStoreService} from '@app/data/component/component-store.service';\nimport {InterfaceStoreService} from '@app/data/interface/interface-store.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {QueryComponent} from '@app/utils/query-component/query.component';\nimport {RemoveDialogComponent} from '@app/dialogs/remove-dialog/remove-dialog.component';\nimport {CCIMSValidators} from '@app/utils/validators';\n\n/**\n * A node shown in the details component can either be a component or an interface\n */\nexport enum NodeDetailsType {\n  Component,\n  Interface\n}\n\nexport declare type NodeUpdatedCallbackFn = (nodeDeleted: boolean) => void;\n\n/**\n * This component shows details of components or interfaces\n */\n@Component({\n  selector: 'app-node-details',\n  templateUrl: './node-details.component.html',\n  styleUrls: ['./node-details.component.scss']\n})\nexport class NodeDetailsComponent implements OnInit, AfterViewInit {\n\n  /**\n   * The project that contains the node\n   */\n  @Input() projectId: string;\n  /**\n   * Id of the node\n   */\n  @Input() nodeId: string;\n  /**\n   * Either component or interface\n   */\n  @Input() nodeType: NodeDetailsType;\n  /**\n   * Function to be called if a node was updated or deleted\n   */\n  @Input() callback?: NodeUpdatedCallbackFn;\n  /** @ignore */\n  @ViewChild('nodeQuery') nodeQuery: QueryComponent;\n  /** @ignore */\n  @ViewChild('deleteQuery') deleteQuery: QueryComponent;\n  /** @ignore */\n  @ViewChild('updateQuery') updateQuery: QueryComponent;\n\n  /** @ignore */\n  Type = NodeDetailsType;\n\n  issueListId: ListId;\n  component: GetBasicComponentQuery;\n  interface: GetInterfaceQuery;\n  editMode: boolean;\n  showName = false;\n  placeholder = 'placeholder';\n\n  // TODO: Validators\n  validationProvider = new FormControl('', [Validators.required, CCIMSValidators.urlValidator]);\n  validationName = new FormControl('', [Validators.required, CCIMSValidators.nameFormatValidator]);\n  validationUrl = new FormControl('', [Validators.required, CCIMSValidators.urlValidator]);\n  validationIMS = new FormControl('', [Validators.required, CCIMSValidators.urlValidator]);\n  validationType = new FormControl('');\n  validationDescription = new FormControl('', CCIMSValidators.contentValidator);\n\n  constructor(private router: Router,\n              private componentStoreService: ComponentStoreService,\n              private interfaceStoreService: InterfaceStoreService,\n              private dialog: MatDialog,\n              private notify: UserNotifyService) {\n  }\n\n  ngOnInit(): void {\n    this.editMode = false;\n\n    if (this.nodeType === NodeDetailsType.Component) {\n      this.issueListId = {node: {type: NodeType.Component, id: this.nodeId}, type: ListType.Issues};\n    } else {\n      this.issueListId = {\n        node: {type: NodeType.ComponentInterface, id: this.nodeId},\n        type: ListType.IssuesOnLocation\n      };\n    }\n\n\n    this.validationIMS.setValue('?');\n    this.validationUrl.setValue('?');\n  }\n\n  ngAfterViewInit() {\n    if (this.nodeType === NodeDetailsType.Component) {\n      this.nodeQuery.listenTo(this.componentStoreService.getBasicComponent(this.nodeId), component => {\n        if (component.node) {\n          this.component = component;\n          this.validationIMS.setValue('This is a placeholder');\n          this.validationUrl.setValue(component.node.repositoryURL);\n        } else {\n          this.nodeQuery.setError();\n        }\n      });\n    } else if (this.nodeType === NodeDetailsType.Interface) {\n      this.nodeQuery.listenTo(this.interfaceStoreService.getInterface(this.nodeId), int => {\n        if (int.node) {\n          this.interface = int;\n        } else {\n          this.nodeQuery.setError();\n        }\n      });\n    }\n  }\n\n  /**\n   * Get the name of the node, or an empty string if it has not been fetched yet\n   */\n  public getNodeName(): string {\n    if (!this.nodeQuery) {\n      return '';\n    }\n\n    if (this.nodeQuery.ready()) {\n      return this.node().node.name;\n    }\n\n    return '';\n  }\n\n  /**\n   * Get the type of the node as a formatted string\n   */\n  public getNodeTypeString(): string {\n    return (this.nodeType === NodeDetailsType.Interface ? 'Interface' : 'Component');\n  }\n\n  /**\n   * Access the node\n   */\n  public node(): GetComponentQuery | GetInterfaceQuery {\n    if (this.nodeType === NodeDetailsType.Component) {\n      return this.component;\n    } else if (this.nodeType === NodeDetailsType.Interface) {\n      return this.interface;\n    }\n  }\n\n  public onCancelClick() {\n    this.resetValues();\n    this.editMode = false;\n  }\n\n  public onEditClick() {\n    this.editMode = true;\n  }\n\n  public onDeleteClick(): void {\n    const affected: string[] = [];\n    // Collect affected interfaces and components, then show the delete dialog\n    if (this.nodeType === NodeDetailsType.Component) {\n      this.deleteQuery.listenTo(this.componentStoreService.getComponentInterfaces(this.nodeId), interfaces => {\n        for (const i of interfaces.node.interfaces.nodes) {\n          let affectedInterface = 'Interface \"' + i.name + '\" will be deleted';\n          if (i.consumedBy.nodes.length > 0) {\n            affectedInterface += ', which will affect the following component(s):';\n          }\n\n          affected.push(affectedInterface);\n          for (const component of i.consumedBy.nodes) {\n            affected.push(' ' + component.name);\n          }\n        }\n\n        this.showDeleteDialog(affected);\n      });\n    } else if (this.nodeType === NodeDetailsType.Interface) {\n      this.deleteQuery.listenTo(this.interfaceStoreService.getConsumingComponents(this.nodeId), components => {\n        affected.push('Deleting this interface will affect the following component(s):');\n        affected.push(' ' + components.node.component.name);\n        for (const c of components.node.consumedBy.nodes) {\n          affected.push(' ' + c.name);\n        }\n\n        this.showDeleteDialog(affected);\n      });\n    }\n  }\n\n  private showDeleteDialog(affected: string[]): void {\n    if (this.nodeType === NodeDetailsType.Component) {\n      const confirmDeleteDialogRef = this.dialog.open(RemoveDialogComponent,\n        {\n          data: {\n            title: 'Really delete component \\\"' + this.component.node.name + '\\\"?',\n            messages: ['Are you sure you want to delete the component \\\"' + this.component.node.name + '\\\"?',\n              'This action cannot be undone!'].concat(affected),\n            verificationName: this.component.node.name\n          }\n        });\n\n      confirmDeleteDialogRef.afterClosed().subscribe(deleteData => {\n        if (deleteData) {\n          this.deleteQuery.listenTo(this.componentStoreService.deleteComponent(this.nodeId), () => {\n              this.notify.notifyInfo('Successfully deleted component \\\"' + this.component.node.name + '\\\"\"');\n              if (this.callback) {\n                this.callback(true);\n              }\n            }\n          );\n        }\n      });\n    } else if (this.nodeType === NodeDetailsType.Interface) {\n      const confirmDeleteDialogRef = this.dialog.open(RemoveDialogComponent,\n        {\n          data: {\n            title: 'Really delete interface \\\"' + this.interface.node.name + '\\\"?',\n            messages: ['Are you sure you want to delete the interface \\\"' + this.interface.node.name + '\\\"?',\n              'This action cannot be undone!'].concat(affected),\n            verificationName: this.interface.node.name\n          }\n        });\n\n      confirmDeleteDialogRef.afterClosed().subscribe(deleteData => {\n        // dialog returns if the deleting was successful\n        if (deleteData) {\n          this.deleteQuery.listenTo(this.interfaceStoreService.delete(this.nodeId), () => {\n            this.notify.notifyInfo('Successfully deleted interface \\\"' + this.interface.node.name + '\\\"');\n            if (this.callback) {\n              this.callback(true);\n            }\n          });\n        }\n      });\n    }\n  }\n\n  public onSaveClick(): void {\n    if (this.nodeType === NodeDetailsType.Component) {\n      this.component.node.name = this.validationName.value;\n      // FIXME\n      // this.component.node.ims.imsType = this.validationProvider.value;\n      this.component.node.description = this.validationDescription.value;\n      this.updateComponent();\n    } else if (this.nodeType === NodeDetailsType.Interface) {\n      this.interface.node.name = this.validationName.value;\n      this.interface.node.description = this.validationDescription.value;\n      this.updateInterface();\n    }\n  }\n\n  private resetValues() {\n    if (this.nodeType === NodeDetailsType.Component) {\n      this.validationName.setValue(this.component.node.name);\n      this.validationIMS.setValue('http://example.ims.com');\n      // FIXME\n      // this.validationProvider.setValue(this.component.node.ims.imsType);\n      this.validationUrl.setValue('http://example.repo.com');\n      this.validationDescription.setValue(this.component.node.description);\n    } else if (this.nodeType === NodeDetailsType.Interface) {\n      this.validationName.setValue(this.interface.node.name);\n      this.validationDescription.setValue(this.interface.node.description);\n    }\n  }\n\n  private updateComponent(): void {\n    const input: UpdateComponentInput = {\n      component: this.component.node.id,\n      name: this.component.node.name,\n      description: this.component.node.description\n    };\n\n    this.updateQuery.listenTo(this.componentStoreService.updateComponent(input), () => {\n      this.editMode = false;\n      if (this.callback) {\n        this.callback(false);\n      }\n    });\n  }\n\n  private updateInterface(): void {\n    const MutationinputData: UpdateComponentInterfaceInput = {\n      componentInterface: this.interface.node.id,\n      name: this.interface.node.name,\n      description: this.interface.node.description\n    };\n\n    this.updateQuery.listenTo(this.interfaceStoreService.update(MutationinputData), () => {\n      this.editMode = false;\n      if (this.callback) {\n        this.callback(false);\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n        \n      \n\n      \n        \n          \n            \n              \n                Name\n                \n                \n                  Invalid component name\n                \n              \n              \n                Repository-URL\n                \n                \n                  Enter a valid URL\n                \n              \n            \n\n            \n              \n                Provider Type\n                \n                \n                  Enter a valid URL\n                \n              \n              \n                Provider Type (IMS)\n                \n                  GitHub\n                \n                \n                  Select the Provider\n                \n              \n\n              \n                IMS-URL\n                \n                \n                  Enter a valid URL\n                \n              \n            \n\n            \n              \n                Description\n                \n              \n            \n          \n          \n            \n              \n                Name\n                \n                \n                  Name your Interface\n                \n              \n\n              \n                Interface Type\n                \n                \n                  Enter a valid URL\n                \n              \n            \n\n            \n              \n                Description\n                \n              \n            \n          \n\n          \n            \n              edit\n              Edit {{getNodeTypeString().toLowerCase()}}\n            \n\n            \n              \n                \n                  save\n                  Save changes\n                \n              \n            \n\n            \n              cancel\n              Discard changes\n            \n\n            \n              \n                delete\n                Delete {{getNodeTypeString().toLowerCase()}}\n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./node-details.component.scss\n                \n                .description-field {\n  min-height: 50px;\n}\n\n.row {\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n}\n\n.row > * {\n  margin-right: 4px;\n  flex-grow: 1;\n}\n\n.row > *:last-child {\n  margin-right: 0;\n  flex-grow: 1;\n}\n\n:host ::ng-deep .mat-tab-body-wrapper {\n  height: 100%;\n}\n\n:host ::ng-deep .mat-tab-body.mat-tab-body-active {\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                              Name                                                  Invalid component name                                                            Repository-URL                                                  Enter a valid URL                                                                                    Provider Type                                                  Enter a valid URL                                                            Provider Type (IMS)                                  GitHub                                                  Select the Provider                                                            IMS-URL                                                  Enter a valid URL                                                                                    Description                                                                                                        Name                                                  Name your Interface                                                            Interface Type                                                  Enter a valid URL                                                                                    Description                                                                                        edit              Edit {{getNodeTypeString().toLowerCase()}}                                                                        save                  Save changes                                                                    cancel              Discard changes                                                      delete                Delete {{getNodeTypeString().toLowerCase()}}                                                        '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'NodeDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NodeDetailsPageComponent.html":{"url":"components/NodeDetailsPageComponent.html","title":"component - NodeDetailsPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NodeDetailsPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/node-details-page/node-details-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./node-details-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./node-details-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nodeId\n                            \n                            \n                                nodeType\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNodeUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, changeDetector: ChangeDetectorRef, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/node-details-page/node-details-page.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onNodeUpdate\n                        \n                    \n                \n            \n            \n                \nonNodeUpdate(deleted: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details-page/node-details-page.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deleted\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        nodeId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details-page/node-details-page.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nodeType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NodeDetailsType\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details-page/node-details-page.component.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details-page/node-details-page.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {ChangeDetectorRef, Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {NodeDetailsType} from '@app/node-details/node-details.component';\n\n@Component({\n  templateUrl: './node-details-page.component.html',\n  styleUrls: ['./node-details-page.component.scss']\n})\nexport class NodeDetailsPageComponent implements OnInit {\n  nodeType: NodeDetailsType = null;\n  nodeId: string = null;\n  projectId: string = null;\n\n  constructor(private route: ActivatedRoute,\n              private changeDetector: ChangeDetectorRef,\n              private router: Router) {\n  }\n\n  ngOnInit() {\n    this.projectId = this.route.snapshot.paramMap.get('id');\n    const componentId = this.route.snapshot.paramMap.get('componentId');\n    const interfaceId = this.route.snapshot.paramMap.get('interfaceId');\n\n    if (componentId !== null) {\n      this.nodeId = componentId;\n      this.nodeType = NodeDetailsType.Component;\n    } else if (interfaceId !== null) {\n      this.nodeId = interfaceId;\n      this.nodeType = NodeDetailsType.Interface;\n    }\n    this.changeDetector.detectChanges();\n  }\n\n  onNodeUpdate(deleted: boolean): void {\n    if (deleted) {\n      this.router.navigate(['/projects/' + this.projectId + '/graph']);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./node-details-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'NodeDetailsPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NodeId.html":{"url":"interfaces/NodeId.html","title":"interface - NodeId","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NodeId\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/id.ts\n        \n\n\n            \n                Description\n            \n            \n                Uniquely identifies a node.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID of this node. This is the same as the node ID in the API.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         NodeType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of this node.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export type NodeIdEnc = string;\nexport type ListIdEnc = string;\n\n/**\n * API node types. The names should match the respective value of __typename for a given node.\n */\nexport enum NodeType {\n  Root,\n  Component,\n  ComponentInterface,\n  Issue,\n  IssueTimelineItem,\n  Label,\n  Project,\n  Artifact,\n  User,\n  IssueComment\n}\n\n/**\n * Returns the NodeType for a given __typename value.\n * @param typename the __typename value\n */\nexport function nodeTypeFromTypename(typename: string) {\n  return NodeType[typename] || null;\n}\n\n/**\n * Uniquely identifies a node.\n */\nexport interface NodeId {\n  /**\n   * The type of this node.\n   */\n  type: NodeType;\n  /**\n   * The ID of this node. This is the same as the node ID in the API.\n   */\n  id: string;\n}\n\nexport function decodeNodeId(id: NodeIdEnc): NodeId {\n  if (!id) {\n    throw new Error('Could not decode node ID: no id given');\n  }\n  const parts = id.split('/');\n  return { type: NodeType[parts[0]], id: parts[1] };\n}\n\nexport function encodeNodeId(nd: NodeId): NodeIdEnc {\n  return NodeType[nd.type] + '/' + nd.id;\n}\n\nexport const ROOT_NODE = { type: NodeType.Root, id: '' };\n\nexport const CURRENT_USER_NODE = { type: NodeType.User, id: 'self' };\n\nexport enum ListType {\n  Projects,\n  Components,\n  ComponentInterfaces,\n  Issues,\n  IssuesOnLocation,\n  IssueLocations,\n  TimelineItems,\n  Labels,\n  Artifacts,\n  Participants,\n  Assignees,\n  SearchUsers,\n  LinkedIssues,\n  LinkedByIssues\n}\n\n/**\n * Uniquely identifies a list of items.\n */\nexport interface ListId {\n  /**\n   * The parent node.\n   */\n  node: NodeId;\n  /**\n   * The type of list.\n   */\n  type: ListType;\n}\n\n/** List cursor and filter. */\nexport interface ListParams {\n  /** Cursor node. */\n  cursor?: NodeId;\n  /** Max number of items to load. */\n  count: number;\n  /** Whether to look forward from the cursor, or backwards. */\n  forward: boolean;\n  /** The filter. */\n  filter?: F;\n}\n\nexport function decodeListId(id: ListIdEnc): ListId {\n  if (!id) {\n    throw new Error('Could not decode list ID: no id given');\n  }\n  const parts = id.split('#');\n  return { node: decodeNodeId(parts[0]), type: ListType[parts[1]] };\n}\n\nexport function encodeListId(ld: ListId): ListIdEnc {\n  return encodeNodeId(ld.node) + '#' + ListType[ld.type];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Position.html":{"url":"interfaces/Position.html","title":"interface - Position","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Position\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/issue-graph-nodes.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {GraphComponent, GraphInterface} from '@app/data/issue-graph/graph-data';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\n\nexport {\n  IssueNode, ComponentNode, InterfaceNode, IssueGroupContainerNode, RelationEdge,\n  createComponentNode, createInterfaceNode, createIssueGroupContainerNode, createIssueFolderNode,\n  createRelationEdge, createConsumptionEdge, createInterfaceProvisionEdge,\n  Position,\n  getIssueFolderId\n};\n\nexport enum NodeType {\n  Component = 'component',\n  Interface = 'interface',\n  InterfaceConsumer = 'interface-connect',\n  IssueGroupContainer = 'issue-group-container'\n}\n\n/**\n * This file includes type definitions and creation functions (think constructors)\n * for nodes and edges that are added to the graph editor in order to visualize the project.\n * Since the data that is stored with these differs based on what they represent (e.g.\n * interface vs component node) we give each their own type. We do this by extending\n * the Node class or the Edge class of the grapheditor. These classes are instantiated\n * via calls to the contained create* functions within the drawGraph method of the IssueGraphComponent.\n */\n\ninterface IssueNode extends Node {\n  id: string;\n  title: string;\n  issueGroupContainer?: IssueGroupContainerNode;\n}\n\ninterface ComponentNode extends IssueNode {\n  data: GraphComponent;\n}\n\nfunction createComponentNode(component: GraphComponent, position: Position): ComponentNode {\n  return {\n    ...(position || zeroPosition),\n    id: component.id,\n    title: component.name,\n    type: NodeType.Component,\n    data: component\n  };\n}\n\ninterface InterfaceNode extends IssueNode {\n  offeredById: string;\n}\n\nfunction createInterfaceNode(intrface: GraphInterface, position: Position): InterfaceNode {\n  return {\n    ...(position || zeroPosition),\n    id: intrface.id,\n    title: intrface.name,\n    type: NodeType.Interface,\n    offeredById: intrface.offeredBy,\n  };\n}\n\ninterface IssueGroupContainerNode extends Node {\n  position: string;\n  issueGroupNodeIds: Set;\n}\n\nfunction createIssueGroupContainerNode(node: IssueNode): IssueGroupContainerNode {\n  return {\n    id: `${node.id}__issue-group-container`,\n    type: NodeType.IssueGroupContainer,\n    dynamicTemplate: 'issue-group-container',\n    x: 0,\n    y: 0,\n    position: 'bottom',\n    issueGroupNodeIds: new Set(),\n  };\n}\n\ninterface IssueFolderNode extends Node {\n  type: IssueCategory;\n  issueCount: string;\n}\n\nfunction createIssueFolderNode(node: IssueNode, issueCategory: IssueCategory, issueCount: string): IssueFolderNode {\n  return {\n    id: getIssueFolderId(node.id, issueCategory),\n    type: issueCategory,\n    x: 0,\n    y: 0,\n    issues: new Set(),\n    issueCount\n  };\n}\n\ninterface RelationEdge extends Edge {\n  sourceIssues: Set;\n}\n\nfunction createRelationEdge(sourceId: string, targetId: string, edgeType = folderEdgeTypes.RelatedTo): RelationEdge {\n  return {\n    id: `s${sourceId}t${targetId}r${edgeType}`,\n    source: sourceId,\n    target: targetId,\n    type: folderEdgeTypes.RelatedTo,\n    markerEnd: {\n      template: 'arrow',\n      relativeRotation: 0,\n    },\n    dragHandles: [],\n    sourceIssues: new Set()\n  };\n}\n\nfunction createConsumptionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.InterfaceConsumer,\n    markerEnd: {\n      template: 'interface-connector',\n      relativeRotation: 0,\n    },\n  };\n}\n\nfunction createInterfaceProvisionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.Interface,\n    dragHandles: [],\n  };\n}\n\nfunction getIssueFolderId(id: string, issueCategory: IssueCategory): string {\n  return `${id}__${issueCategory}`;\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst zeroPosition = {x: 0, y: 0};\n\nenum folderEdgeTypes {\n  RelatedTo = 'relatedTo',\n  Depends = 'dependency',\n  Duplicates = 'duplicate'\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Positions.html":{"url":"interfaces/Positions.html","title":"interface - Positions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Positions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/issue-graph.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface specifying the content of the graph component local storage\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            issueGroups\n                                        \n                                \n                                \n                                        \n                                            nodes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        issueGroups\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issueGroups:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Positions (north, south, east, west) of the issue groups\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nodes:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Positions of the nodes as the user arranged them\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {AfterViewInit, Component, Input, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {DraggedEdge, Edge, Point} from '@ustutt/grapheditor-webcomponent/lib/edge';\nimport GraphEditor from '@ustutt/grapheditor-webcomponent/lib/grapheditor';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {Rect} from '@ustutt/grapheditor-webcomponent/lib/util';\nimport {BehaviorSubject, ReplaySubject, Subject} from 'rxjs';\nimport {debounceTime, takeUntil} from 'rxjs/operators';\nimport {IssueGraphStateService} from '../../data/issue-graph/issue-graph-state.service';\nimport {IssueGroupContainerBehaviour, IssueGroupContainerParentBehaviour} from './group-behaviours';\nimport {CreateInterfaceDialogComponent} from '@app/dialogs/create-interface-dialog/create-interface-dialog.component';\nimport {StateService} from '@app/state.service';\nimport {CreateInterfaceData} from '../../dialogs/create-interface-dialog/create-interface-dialog.component';\nimport {GraphData} from '../../data/issue-graph/graph-data';\nimport {IssueCategory} from 'src/generated/graphql';\nimport * as issueGraphNodes from './issue-graph-nodes';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {CreateComponentDialogComponent} from '@app/dialogs/create-component-dialog/create-component-dialog.component';\nimport {ComponentStoreService} from '@app/data/component/component-store.service';\nimport {InterfaceStoreService} from '@app/data/interface/interface-store.service';\nimport * as componentContextMenuComponent from '@app/graphs/component-context-menu/component-context-menu.component';\nimport {NodeDetailsType} from '@app/node-details/node-details.component';\nimport {doGraphLayout, LayoutNode} from '@app/graphs/automatic-layout';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport { IssueGraphClassSettersService } from './class-setters/issue-graph-class-setters.service';\nimport { IssueGraphLinkHandlesService } from './link-handles/issue-graph-link-handles.service';\nimport { IssueGraphDynamicTemplateRegistryService } from './dynamic-template-registry/issue-graph-dynamic-template-registry.service';\n\n/**\n * Interface specifying the content of the graph component local storage\n */\ninterface Positions {\n  /** Positions of the nodes as the user arranged them */\n  nodes: { [prop: string]: Point; };\n  /** Positions (north, south, east, west) of the issue groups */\n  issueGroups: { [node: string]: string };\n}\n\n/**\n * This component creates nodes and edges in the embedded MICO GraphEditor\n * (html tag: ) to reflect the data for the current project.\n * This data consists of the project's interfaces, components, issues and their relations and\n * is stored in this.graphData. The key method for this purpose is drawGraph().\n * This component is also responsible for registering event listeners with the GraphEditor.\n */\n@Component({\n  selector: 'app-issue-graph',\n  templateUrl: './issue-graph.component.html',\n  styleUrls: ['./issue-graph.component.css'],\n})\nexport class IssueGraphComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  constructor(private dialog: MatDialog,\n              private gs: IssueGraphStateService,\n              private ss: StateService,\n              private router: Router,\n              private activatedRoute: ActivatedRoute,\n              private componentStoreService: ComponentStoreService,\n              private interfaceStoreService: InterfaceStoreService,\n              private componentContextMenuService: componentContextMenuComponent.ComponentContextMenuService,\n              private breakPointObserver: BreakpointObserver,\n              private issueGraphClassSettersService: IssueGraphClassSettersService,\n              private issueGraphLinkHandlesService: IssueGraphLinkHandlesService,\n              private issueGraphDynamicTemplateRegistryService: IssueGraphDynamicTemplateRegistryService) {\n  }\n\n  // references the graph template\n  @ViewChild('graph', {static: true}) graphWrapper: { nativeElement: GraphEditor; };\n\n  // references the minimap template\n  @ViewChild('minimap', {static: true}) minimap: { nativeElement: GraphEditor; };\n\n  currentVisibleArea: Rect = {x: 0, y: 0, width: 1, height: 1};\n  @Input() projectId: string;\n\n  readonly zeroPosition = {x: 0, y: 0};\n\n  private componentContextMenu: componentContextMenuComponent.ComponentContextMenuComponent;\n  private componentContextMenuNodeId: number | string;\n  private destroy$ = new ReplaySubject(1);\n\n  // reference to the GraphEditor instance of the graph\n  private graph: GraphEditor;\n\n  // contains all data about the projects interfaces, components, issues and their relations\n  // that is needed in order to create nodes and edges in the grapheditor to visualize the project\n  public graphData: GraphData;\n  private graphFirstRender = true;\n\n  // indicates whether graph is initialized\n  private graphInitialized = false;\n  private isHandset = false;\n\n  // contains nodes representing interfaces and components which utilize node groups for display of issue folders\n  private issueGroupParents: Node[] = [];\n\n  // local storage key for positions of graph elements\n  private projectStorageKey: string;\n\n  // The component details page moves the graph sometimes a bit,\n  // so dont move back when closing the component details page\n  private redrawByCloseOfComponentDetails = false;\n\n  // when a new graph state arrives it is passed to the graph\n  // and a graph redraw is issued\n  // (check IssueGraphControlsComponents ngAfterViewInit for more information)\n  public reload$: BehaviorSubject = new BehaviorSubject(null);\n  private reloadOnMouseUp = false;\n\n  // Saved positions of the nodes and the issue groups\n  private savedPositions: Positions = {nodes: {}, issueGroups: {}};\n  // Responsible for saving the node positions to local storage\n  private savePositionsSubject = new Subject();\n\n  // used in the drawGraph method true on first draw and after component creation, effects a zoom to bounding box\n  private zoomOnRedraw = true;\n\n  /**\n   * Gets reference to the MICO GraphEditor instance of the graph and initializes it.\n   */\n  ngAfterViewInit(): void {\n    this.graph = this.graphWrapper.nativeElement;\n    this.initGraph();\n  }\n\n  /**\n   * Sets up a local storage key for graph element positions.\n   */\n  ngOnInit() {\n    this.projectStorageKey = `CCIMS-Project_${this.projectId}`;\n    this.breakPointObserver.observe(Breakpoints.Handset)\n      .subscribe(r => this.isHandset = r.matches);\n  }\n\n  /**\n   * Cancels all subscriptions on component destruction.\n   */\n  ngOnDestroy() {\n    // saves the current zoom details of the graph for when the user comes back to the graph\n    localStorage.setItem(`zoomTransform_${this.projectStorageKey}`,\n      JSON.stringify(this.graph.currentZoomTransform));\n\n    // saves the current bounding box of the graph for when the user comes back to the graph\n    localStorage.setItem(`zoomBoundingBox_${this.projectStorageKey}`,\n      JSON.stringify(this.graph.currentViewWindow));\n\n    this.destroy$.next();\n    this.closeComponentActions();\n  }\n\n  /**\n   * 1) Sets up a subscription for node positions\n   * 2) and initializes the graph.\n   * Also manages:\n   * 3) class setters with the graph editor\n   * that apply css classes based on the edge and node types,\n   * 4) the link handle calculation,\n   * 5) the edge drag behaviour,\n   * 6) the dynamic template registry.\n   * 7) and various event listeners on the graph.\n   */\n  initGraph() {\n    // case: graph already initialized\n    if (this.graphInitialized) {\n      return;\n    }\n\n    // loads saved positions\n    this.savedPositions = this.loadSavedPositions();\n\n    // 1) subscribes to the subject emitting node positions\n    this.subscribeToSubject();\n\n    // 2) initializes the graph\n    this.graphInitialized = true;\n\n    // references to the GraphEditor instance of the graph / minimap\n    const graph: GraphEditor = this.graphWrapper.nativeElement;\n    const minimap: GraphEditor = this.minimap.nativeElement;\n\n    // 3) manages the node / edge class setters\n    this.issueGraphClassSettersService.manageClassSetters(graph, minimap);\n\n    // 4) manages the edge link handles\n    this.issueGraphLinkHandlesService.manageLinkHandles(graph, minimap);\n\n    // 5) manages the edge drag behaviour\n    this.manageDragBehaviour(graph);\n\n    // 6) manages the dynamic template registry\n    this.issueGraphDynamicTemplateRegistryService.manageDynamicTemplateRegistry(graph);\n\n    // 7) manages the event listeners\n    this.manageEventListeners(graph, minimap);\n  }\n\n  /**\n   * Loads positions of graph elements from the local storage.\n   * @returns Parsed positions\n   */\n  private loadSavedPositions(): Positions {\n    // gets data from the local storage\n    const data = localStorage.getItem(this.projectStorageKey);\n\n    // case: there is no data\n    if (data == null) {\n      return {nodes: {}, issueGroups: {}};\n    }\n\n    return JSON.parse(data);\n  }\n\n  /**\n   * Subscribes to the subject emitting node positions.\n   */\n  private subscribeToSubject() {\n    this.savePositionsSubject\n      .pipe(takeUntil(this.destroy$), debounceTime(300))\n      .subscribe(() => {\n        console.log('Setting: ', this.projectStorageKey);\n\n        // case: there are saved positions\n        if (this.savedPositions != null) {\n          const newData = JSON.stringify(this.savedPositions);\n          localStorage.setItem(this.projectStorageKey, newData);\n        }\n      });\n  }\n\n  /**\n   * Manages the edge drag behaviour of given GraphEditor instance.\n   * @param graph Reference to the GraphEditor instance of the graph that is handled.\n   */\n  private manageDragBehaviour(graph: GraphEditor) {\n    // applies functionality for when an edge is created\n    graph.onCreateDraggedEdge = this.onCreateEdge;\n\n    // applies functionality for when an edge is dragged (and its target is changed)\n    graph.onDraggedEdgeTargetChange = this.onDraggedEdgeTargetChanged;\n\n    // applies functionality for when an edge is added\n    graph.addEventListener('edgeadd', this.onEdgeAdd);\n\n    // applies functionality for when an edge is removed\n    graph.addEventListener('edgeremove', this.onEdgeRemove);\n\n    // applies functionality for when an edge is dropped\n    graph.addEventListener('edgedrop', this.onEdgeDrop);\n  }\n\n  /**\n   * Method gets triggered after an edge gets created,\n   * it can either be of type provider or consumer.\n   * @param edge Edge that is handled.\n   */\n  private onCreateEdge = (edge: DraggedEdge) => {\n    const graph: GraphEditor = this.graphWrapper.nativeElement;\n    const sourceNode = graph.getNode(edge.source);\n\n    // case: edge created from an existing edge\n    // => allows deletion or dropping at the same node\n    if (edge.createdFrom != null) {\n      const original = graph.getEdge(edge.createdFrom);\n      edge.validTargets.clear();\n      edge.validTargets.add(original.target.toString());\n      return edge;\n    }\n\n    // case: edge originates from a component\n    if (sourceNode.type === issueGraphNodes.NodeType.Component) {\n      // updates edge properties (no drag handles)\n      edge.type = issueGraphNodes.NodeType.Interface;\n      edge.dragHandles = [];\n\n      // updates valid targets\n      edge.validTargets.clear();\n\n      // updates marker at the end of the edge\n      edge.markerEnd = {\n        template: 'interface-connector-initial',\n        relativeRotation: 0,\n        absoluteRotation: 0\n      };\n\n      // allows only interfaces as targets\n      graph.nodeList.forEach((node) => {\n        if (node.type === issueGraphNodes.NodeType.Interface) {\n          edge.validTargets.add(node.id.toString());\n        }\n      });\n\n      // allows only new targets\n      graph.getEdgesBySource(sourceNode.id).forEach((existingEdge) => {\n        edge.validTargets.delete(existingEdge.target.toString());\n      });\n    }\n\n    return edge;\n  }\n\n  /**\n   * Method gets triggered after an edge gets dragged\n   * and its target is changed:\n   * ex. consumer edge gets moved away from the provider edge.\n   * @param edge Edge that is handled.\n   * @param sourceNode Source of the handled edge.\n   * @param targetNode Target of the handled edge.\n   * @returns Edge that is handled.\n   */\n  private onDraggedEdgeTargetChanged = (\n    edge: DraggedEdge,\n    sourceNode: Node,\n    targetNode: Node\n  ) => {\n    // case: edge originates from a component\n    if (sourceNode.type === issueGraphNodes.NodeType.Component) {\n      // case: target of edge is an interface\n      // => handles edge as of type consumer\n      if (targetNode?.type === issueGraphNodes.NodeType.Interface) {\n\n        // updates edge properties (default drag handle)\n        edge.type = issueGraphNodes.NodeType.InterfaceConsumer;\n        delete edge.dragHandles;\n\n        // updates marker at the end of the edge\n        edge.markerEnd = {\n          template: 'interface-connector',\n          relativeRotation: 0,\n        };\n      }\n      // case: target of edge is not an interface (aka. null)\n      // => handles edge as of type provider\n      else {\n        // updates edge properties (no drag handles)\n        edge.type = issueGraphNodes.NodeType.Interface;\n        edge.dragHandles = [];\n\n        // updates marker at the end of the edge\n        // ? delete edge.markerEnd; ?\n        edge.markerEnd = {\n          template: 'interface-connector-initial',\n          relativeRotation: 0,\n          absoluteRotation: 0\n        };\n      }\n    }\n\n    return edge;\n  }\n\n  /**\n   * Method gets triggered after an edge gets added.\n   * @param event Event that is handled.\n   */\n  private onEdgeAdd = (event: CustomEvent) => {\n    const edge: Edge = event.detail.edge;\n\n    // case: source of event is the API\n    if (event.detail.eventSource === 'API') {\n      return;\n    }\n\n    // case: edge of type interface consumer\n    if (edge.type === issueGraphNodes.NodeType.InterfaceConsumer) {\n\n      // cancels edge creation\n      event.preventDefault();\n\n      // updates the graph via the API\n      const sourceNode = this.graph.getNode(edge.source);\n      const targetNode = this.graph.getNode(edge.target);\n\n      // case: edge has source and target\n      // => adds edge of type interface provider\n      if (sourceNode != null && targetNode != null) {\n        this.gs.addConsumedInterface(sourceNode.id.toString(), targetNode.id.toString()).subscribe(() => this.reload$.next(null));\n      }\n    }\n  }\n\n  /**\n   * Method gets triggered after an edge gets dropped.\n   * @param event Event that is handled.\n   */\n  private onEdgeDrop = (event: CustomEvent) => {\n    const edge: DraggedEdge = event.detail.edge;\n\n    // case: source of event is the API\n    if (event.detail.eventSource === 'API') {\n      return;\n    }\n\n    // case: edge created from an existing edge\n    if (edge.createdFrom != null) {\n      return;\n    }\n\n    // case: edge of type interface\n    // => opens the interface creation dialog\n    if (edge.type === issueGraphNodes.NodeType.Interface) {\n      this.addInterfaceToComponent(event.detail.sourceNode.id, event.detail.dropPosition);\n    }\n  }\n\n  /**\n   * Opens the interface creation dialog. If the user actually creates the interface\n   * it is added to the providing component at the position\n   * where the dragged edge was dropped by the user (before opening the interface creation dialog).\n   * @param offeredById Id of the component that will provide the interface.\n   * @param position Position of the interface.\n   */\n  private addInterfaceToComponent(offeredById: string, position: issueGraphNodes.Position) {\n    // interface data\n    const data: CreateInterfaceData = {\n      position,\n      offeredById\n    };\n\n    // interface dialog reference\n    const createInterfaceDialogRef = this.dialog.open(CreateInterfaceDialogComponent, {\n      data\n    });\n\n    // subscribes ...\n    createInterfaceDialogRef.afterClosed().subscribe((interfaceId) => {\n      this.savedPositions.nodes[interfaceId] = {\n        x: position.x,\n        y: position.y\n      };\n      this.savePositionsSubject.next();\n      this.reload$.next(null);\n    });\n  }\n\n  /**\n   * Method gets triggered after an edge gets removed.\n   * @param event Event that is handled.\n   */\n  private onEdgeRemove = (event: CustomEvent) => {\n    const edge: Edge = event.detail.edge;\n\n    // case: source of event is the API\n    if (event.detail.eventSource === 'API') {\n      return;\n    }\n\n    // case: edge of type interface consumer\n    if (edge.type === issueGraphNodes.NodeType.InterfaceConsumer) {\n\n      // cancels edge deletion\n      event.preventDefault();\n\n      // updates the graph via the API\n      const graph: GraphEditor = this.graphWrapper.nativeElement;\n      const sourceNode = graph.getNode(edge.source);\n      const targetNode = graph.getNode(edge.target);\n\n      // case: edge has source and target\n      // => removes edge of type interface provider\n      if (sourceNode != null && targetNode != null) {\n        this.gs.removeConsumedInterface(sourceNode.id.toString(), targetNode.id.toString()).subscribe(() => this.reload$.next(null));\n      }\n    }\n  }\n\n  /**\n   * Adds event listeners to a given GraphEditor instance.\n   * @param graph Reference to the GraphEditor instance of the graph that is handled.\n   * @param minimap Reference to the GraphEditor instance of the minimap that is handled.\n   */\n  private manageEventListeners(graph: GraphEditor, minimap: GraphEditor) {\n    // applies functionality for when a node is clicked\n    graph.addEventListener('nodeclick', this.onNodeClick);\n\n    // applies functionality for when the position of a node is changed\n    graph.addEventListener('nodepositionchange', (e: CustomEvent) => {\n      if (this.closeComponentActions(false)) {\n        this.reloadOnMouseUp = true;\n      }\n    });\n\n    // TODO: document and extract\n    graph.addEventListener('nodedragend', (event: CustomEvent) => {\n      const node = event.detail.node;\n      if (node.type === issueGraphNodes.NodeType.IssueGroupContainer) {\n        this.savedPositions.issueGroups[node.id] = node.position;\n      }\n\n      // store node positioning information\n      this.savedPositions.nodes[node.id] = {\n        x: node.x,\n        y: node.y,\n      };\n      this.savePositionsSubject.next();\n      if (this.reloadOnMouseUp) {\n        this.reloadOnMouseUp = false;\n        this.zoomOnRedraw = false;\n        this.reload();\n      }\n    });\n\n    // applies functionality for when a node is added to the minimap\n    graph.addEventListener('nodeadd', (event: CustomEvent) => {\n      if (event.detail.node.type === issueGraphNodes.NodeType.IssueGroupContainer) {\n        return;\n      }\n      const node = event.detail.node;\n      minimap.addNode(node);\n    });\n\n    // applies functionality for when a node is removed from the minimap\n    graph.addEventListener('noderemove', (event: CustomEvent) => {\n      const node = event.detail.node;\n      if (event.detail.node.type !== issueGraphNodes.NodeType.IssueGroupContainer) {\n        minimap.removeNode(node);\n      }\n    });\n\n    // applies functionality for when an edge is added to the minimap\n    graph.addEventListener('edgeadd', (event: CustomEvent) => {\n      minimap.addEdge(event.detail.edge);\n    });\n\n    // applies functionality for when an edge is removed from the minimap\n    graph.addEventListener('edgeremove', (event: CustomEvent) => {\n      minimap.removeEdge(event.detail.edge);\n    });\n\n    // applies functionality for when the minimap is rendered\n    graph.addEventListener('render', this.onMinimapRender(minimap));\n\n    // Close the component context menu when clicking anywhere in the graph\n    graph.addEventListener('click', (e) => this.closeComponentActions());\n\n    // applies functionality for when the zoom is changed\n    graph.addEventListener('zoomchange', (event: CustomEvent) => {\n      this.currentVisibleArea = event.detail.currentViewWindow;\n      if (!this.componentContextMenu) {\n        return;\n      }\n\n      // Update component context menu position when zoom changed\n      const node = this.graph.getNode(this.componentContextMenuNodeId);\n      const [x, y] = this.graph.currentZoomTransform.apply([node.x, node.y]);\n      this.componentContextMenu.updatePosition(Math.max(x, 0), Math.max(y, 0));\n    });\n  }\n\n  /**\n   * Method gets triggered after a node is clicked.\n   * @param event Event that is handled.\n   */\n  private onNodeClick = (event: CustomEvent) => {\n    // cancels node selection\n    event.preventDefault();\n\n    const node: Node = event.detail.node;\n\n    // Close existing context menu if the user clicked twice on the same node\n    if (this.componentContextMenu && this.componentContextMenu.data.nodeId === node.id) {\n      this.closeComponentActions();\n      return;\n    }\n\n    // Close context menu if one is already open\n    this.closeComponentActions();\n\n    // doesn't allow the view of the graph to change after the Details page has been closed\n    this.redrawByCloseOfComponentDetails = true;\n\n    // Open the details in a new page if a phone is used or if shift is pressed\n    if (event.detail.sourceEvent.shiftKey || this.isHandset) {\n      // case: node of type Component\n      // => opens View Component page\n      if (node.type === issueGraphNodes.NodeType.Component) {\n        this.router.navigate(['./component/', node.id], {relativeTo: this.activatedRoute.parent});\n        return;\n      }\n\n      // case: node of type Interface\n      // => opens View Interface page\n      if (node.type === issueGraphNodes.NodeType.Interface) {\n        this.router.navigate(['./interface/', node.id], {relativeTo: this.activatedRoute.parent});\n        return;\n      }\n    } else {\n      // sets the context menu type\n      const contextMenuType = this.contextMenuTypeForNodeType(node);\n\n      // case: context menu has a type\n      if (contextMenuType != null) {\n        this.nodeClickContextMenuHasType(node, event, contextMenuType);\n        return;\n      }\n    }\n\n    // case: clicked issue folder\n    // => determines issue count, opens corresponding issue page\n    this.nodeClickIssueFolder(node);\n  }\n\n  /**\n   * Sets the context menu type.\n   * @param node Node that is handled.\n   */\n  private contextMenuTypeForNodeType(node: Node): NodeDetailsType {\n    // case: node of type Component\n    // => sets the context menu type as Component\n    if (node.type === issueGraphNodes.NodeType.Component) {\n      return NodeDetailsType.Component;\n    }\n\n    // case: node of type Interface\n    // => sets the context menu type as Interface\n    if (node.type === issueGraphNodes.NodeType.Interface) {\n      return NodeDetailsType.Interface;\n    }\n\n    return null;\n  }\n\n  /**\n   * Open the component context menu\n   * @param node Node that is handled\n   * @param event Event that is handled\n   * @param contextMenuType Type of the context menu that is handled\n   */\n  private nodeClickContextMenuHasType(node: Node, event: CustomEvent, contextMenuType: NodeDetailsType) {\n    // Transform the node graph coordinates to screen coordinates\n    const [x, y] = this.graph.currentZoomTransform.apply([node.x, node.y]);\n\n    // Only open the dialog if it will fit into view\n    if (x >= 0 && y >= 0) {\n      this.componentContextMenuNodeId = node.id;\n\n      // Cancel the click event that would otherwise close the dialog again\n      event.detail.sourceEvent.stopImmediatePropagation();\n\n      this.componentContextMenu =\n        this.componentContextMenuService.open(\n          this.graphWrapper.nativeElement,\n          x,\n          y,\n          this.projectId,\n          node.id.toString(),\n          contextMenuType,\n          this);\n\n      // Make sure that the context menu is visible if it extends over the right/bottom edge\n      const visible = this.graph.currentViewWindow;\n      const scale = this.graph.currentZoomTransform.k;\n      // FIXME: this isn't ideal, as the padding is somewhat dependent on the aspect ratio\n      const padding = 85 / scale;\n      const edgeX = visible.width * scale;\n      const edgeY = visible.height * scale;\n      const moveX = Math.max(0, this.componentContextMenu.width + x - edgeX) / scale;\n      const moveY = Math.max(0, this.componentContextMenu.height + y - edgeY) / scale;\n\n      // case: Zoom has to change to make overlay visible\n      if (moveX || moveY) {\n        this.graph.zoomToBox({\n          x: visible.x + moveX + padding, y: visible.y + moveY + padding,\n          width: visible.width - 2 * padding, height: visible.height - 2 * padding\n        });\n      }\n    }\n  }\n\n  /**\n   * Handles the case in which an issue folder is clicked.\n   * Determines the number of issues in the issue folder\n   * and opens the corresponding issue page.\n   * @param node Issue folder that is handled.\n   */\n  private nodeClickIssueFolder(node: Node) {\n    // case: clicked issue folder\n    // => determines issue count, opens corresponding issue page\n    if (node.type === 'BUG' || node.type === 'UNCLASSIFIED' || node.type === 'FEATURE_REQUEST') {\n\n      // reference to the GraphEditor instance of the graph, the root ID and the root node\n      const graph: GraphEditor = this.graphWrapper.nativeElement;\n      const rootId = graph.groupingManager.getTreeRootOf(node.id);\n      const rootNode = graph.getNode(rootId);\n\n      // case: only one issue inside the clicked issue folder\n      // => opens Issue Details page\n      if (node.issueCount === 1) {\n        this.nodeClickOneIssue(rootId, rootNode, node);\n        return;\n      }\n\n      // case: many issues inside the clicked issue folder\n      // => opens Component Issues / Interface Issues page\n      else {\n        this.nodeClickManyIssues(rootNode);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Handles the case in which the clicked issue folder contains only one issues.\n   * @param rootNode Root node that is handled.\n   * @param rootId Root id that is handled.\n   * @param node Clicked node that is handled.\n   */\n  private nodeClickOneIssue(rootId: string, rootNode: Node, node: Node) {\n    // case: root node of type Component\n    // => handles a single component issue, opens its Issue Details page\n    if (rootNode.type === issueGraphNodes.NodeType.Component) {\n      this.componentStoreService.getFullComponent(rootId).subscribe(component => {\n        const currentIssueId = this.extractIssueId(component.node.issues.nodes, node.type);\n        this.router.navigate(['./', 'issues', currentIssueId], { relativeTo: this.activatedRoute.parent });\n      });\n    }\n\n    // case: root node of type Interface\n    // => handles a single interface issue, opens its Issue Details page\n    else if (rootNode.type === issueGraphNodes.NodeType.Interface) {\n      this.interfaceStoreService.getInterface(rootId).subscribe(interfaceComponent => {\n        const currentIssueId = this.extractIssueId(interfaceComponent.node.issuesOnLocation.nodes, node.type);\n        this.router.navigate(['./', 'issues', currentIssueId], { relativeTo: this.activatedRoute.parent });\n      });\n    }\n  }\n\n  /**\n   * Extracts the id of an issue in a given issue list.\n   * @param issueList Ids of the issues that are handled.\n   * @param category Category of issues that are handled.\n   * @returns Id of the first issue (in the issue list) with matching category.\n   */\n  private extractIssueId(issueList, category: string): string {\n    for (const issue of issueList) {\n      if (issue.category === category) {\n        return issue.id;\n      }\n    }\n  }\n\n  /**\n   * Handles the case in which the clicked issue folder contains many issues.\n   * @param rootNode Root node that is handled.\n   */\n  private nodeClickManyIssues(rootNode: Node) {\n    // case: root node of type Component\n    // => handles many component issues, opens their Component Issues page\n    if (rootNode.type === issueGraphNodes.NodeType.Component) {\n      this.router.navigate(['./component/', rootNode.id], { relativeTo: this.activatedRoute.parent });\n    }\n\n    // case: root node of type Interface\n    // => handles many interface issues, opens their Interface Issues page\n    if (rootNode.type === issueGraphNodes.NodeType.Interface) {\n      this.router.navigate(['./interface/', rootNode.id], { relativeTo: this.activatedRoute.parent });\n    }\n  }\n\n  /**\n   * Closes the component context menu, if one is open\n   * @param reload If true, reloads the graph if a context menu was closed\n   */\n  private closeComponentActions(reload: boolean = true): boolean {\n    // case: there are actions to close\n    if (this.componentContextMenu) {\n      // case: redraw of the graph needed\n      // => issues redraw\n      if (reload) {\n        this.reload();\n      }\n\n      // cancels component actions\n      this.componentContextMenu.close();\n      this.componentContextMenu = null;\n      this.componentContextMenuNodeId = null;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Issues a redraw of the graph. ?\n   */\n  public reload(): void {\n    this.reload$.next(null);\n  }\n\n  /**\n   * Method gets triggered when the minimap renders.\n   * @param minimap Minimap that is handled.\n   */\n  private onMinimapRender(minimap: GraphEditor): EventListenerOrEventListenerObject {\n    return (event: CustomEvent) => {\n      // case: renders the minimap completely\n      if (event.detail.rendered === 'complete') {\n        minimap.completeRender();\n        minimap.zoomToBoundingBox();\n      }\n\n      // case: renders texts\n      else if (event.detail.rendered === 'text') {\n        // irrelevant for the minimap\n      }\n\n      // case: renders node classes\n      else if (event.detail.rendered === 'classes') {\n        minimap.updateNodeClasses();\n      }\n\n      // case: renders node positions\n      else if (event.detail.rendered === 'positions') {\n        minimap.updateGraphPositions();\n        minimap.zoomToBoundingBox();\n      }\n    };\n  }\n\n  /**\n   * Responsible for drawing the graph based on this.graphData.\n   * Takes care of adding interfaces and components, and their connections.\n   * Additionally adds issue folders attached to each component and the dashed edges\n   * between them based on this.graphData.relatedFolders\n   */\n  drawGraph() {\n    const boundingBox = this.calculateBoundingBox();\n    // reset graph and remove all elements, gives us clean slate\n    this.resetGraph();\n\n    const layoutGraph = Object.keys(this.savedPositions.nodes).length === 0;\n    // create nodes corresponding to the components and interfaces of the project\n    const componentNodes = Array.from(this.graphData.components.values()).map(component =>\n      issueGraphNodes.createComponentNode(component, this.findIdealComponentPosition(component.id, boundingBox)));\n    const interfaceNodes = Array.from(this.graphData.interfaces.values()).map(\n      intrface => issueGraphNodes.createInterfaceNode(intrface, this.savedPositions.nodes[intrface.id]));\n    // issueNodes contains BOTH componentNodes and interfaceNodes\n    const issueNodes = (componentNodes as issueGraphNodes.IssueNode[]).concat(interfaceNodes as issueGraphNodes.IssueNode[]);\n    // For components AND interfaces: add the edges, issue folders and relations between folders\n    issueNodes.forEach(node => {\n      this.graph.addNode(node);\n      this.addIssueFolders(node);\n      this.drawFolderRelations(node);\n    });\n    // ONLY for interfaces: create edges connecting interface to offering component and consuming components to interface\n    interfaceNodes.forEach(interfaceNode => {\n      this.connectToOfferingComponent(interfaceNode);\n      this.connectConsumingComponents(interfaceNode);\n    });\n\n    // render all changes\n    this.graph.completeRender();\n    this.setGraphToLastView();\n    if (layoutGraph && issueNodes.length > 0) {\n      this.layoutGraph();\n      this.drawGraph();\n    }\n  }\n\n  /**\n   * Resets graph state. Called at start of draw(). Enables logic in draw()\n   * to assume a 'blank sheet' state avoiding complex updating logic.\n   */\n  resetGraph() {\n    this.graph.edgeList = [];\n    this.graph.nodeList = [];\n    this.issueGroupParents = [];\n    this.graph.groupingManager.clearAllGroups();\n  }\n\n  /**\n   * Finds the ideal component position if none is saved.\n   * @param id Id of component that is handled.\n   * @param boundingBox Bounding box of the component that is handled.\n   */\n  findIdealComponentPosition(id: string, boundingBox: Rect): Point {\n\n    // saved position\n    const saved = this.savedPositions.nodes[id];\n\n    // case: there is a saved position\n    // => return it\n    if (saved) {\n      return saved;\n    }\n\n    // calculates the ideal position\n    const point = {x: 0, y: 0};\n    if (boundingBox) {\n      point.x = boundingBox.x + boundingBox.width + 60;\n      point.y = boundingBox.y + boundingBox.height / 2;\n    }\n\n    // saves the ideal position\n    this.savedPositions.nodes[id] = point;\n\n    return point;\n  }\n\n  /**\n   * Creates and adds an edge between the node representing a component\n   * an the node representing the interface itself.\n   * @param node - Interface that is handled.\n   */\n  connectToOfferingComponent(node: issueGraphNodes.InterfaceNode) {\n    this.graph.addEdge(issueGraphNodes.createInterfaceProvisionEdge(node.offeredById, node.id));\n  }\n\n  /**\n   * Adds an edge from each connected component to the interface.\n   * @param interfaceNode - Interface (visualized by lollipop notation) that is handled.\n   */\n  connectConsumingComponents(interfaceNode: issueGraphNodes.InterfaceNode) {\n    for (const consumerId of this.graphData.interfaces.get(interfaceNode.id).consumedBy) {\n      this.graph.addEdge(issueGraphNodes.createConsumptionEdge(consumerId, interfaceNode.id));\n    }\n  }\n\n  /**\n   * Adds the issue folders with counts for each IssueCategory (currently 3)\n   * to the component or interface represented by node. The first methods call\n   * sets up invisible nodes in the graph to make the folders display properly.\n   * The second method takes care of actually adding the visible folders with\n   * the correct counts.\n   * @param node - Interface / component that is handled.\n   */\n  private addIssueFolders(node: issueGraphNodes.IssueNode) {\n    this.addIssueGroupContainer(node);\n    this.addIssueFolderNodes(node);\n  }\n\n  /**\n   * Creates the node groups necessary for displaying issue folders attached to a node.\n   * A Node represents a component or an interface.\n   * It also gets an issue group of IssueGroupContainerParentBehaviour,\n   * issueGroupContainerNode with IssueGroupContainerBehaviour gets added to it.\n   * This corresponds to the 4 'Grouping Manager' object\n   * on the upper two levels in the graph_structure_documentation.png.\n   * @param node - Node (component or interface) which can have issue folders attached.\n   */\n  private addIssueGroupContainer(node: issueGraphNodes.IssueNode) {\n    const gm = this.graph.groupingManager;\n    gm.markAsTreeRoot(node.id);\n    const issueGroupContainerNode = issueGraphNodes.createIssueGroupContainerNode(node);\n    const initialPosition = this.savedPositions.issueGroups[issueGroupContainerNode.id];\n    gm.setGroupBehaviourOf(\n      node.id,\n      new IssueGroupContainerParentBehaviour(initialPosition)\n    );\n\n    // the issueGroupContainerNode has no visual representation but contains the visible issue folders\n    node.issueGroupContainer = issueGroupContainerNode;\n    this.graph.addNode(issueGroupContainerNode);\n    gm.addNodeToGroup(node.id, issueGroupContainerNode.id);\n    gm.setGroupBehaviourOf(\n      issueGroupContainerNode.id,\n      new IssueGroupContainerBehaviour()\n    );\n    this.issueGroupParents.push(node);\n  }\n\n  /**\n   * This method presumes that node has the 4 'Grouping Manager Objects'\n   * depicted on the the upper levels in the graph_structure_documentation.png.\n   * correctly setup.\n   * @param node Interface / component that is handled.\n   */\n  private addIssueFolderNodes(node: issueGraphNodes.IssueNode) {\n    // get mapping from IssueCategory to number for the component or interface represented by node\n    const issueCounts = this.graphData.graphLocations.get(node.id).issues;\n    // iterate over issue categories and create a node if there is at least one issue of it\n    Object.keys(IssueCategory).forEach(key => {\n      const issueCategory = IssueCategory[key];\n      if (issueCounts.has(issueCategory)) {\n        const count = issueCounts.get(issueCategory);\n        // only show folders for issue categories with at least one issue\n        if (count > 0) {\n          const issueFolderNode = issueGraphNodes.createIssueFolderNode(node, issueCategory, count.toString());\n          this.graph.addNode(issueFolderNode);\n          this.graph.groupingManager.addNodeToGroup(node.issueGroupContainer.id, issueFolderNode.id);\n        }\n      }\n    });\n  }\n\n  /**\n   * Draws folder relations originating from the issue folder represented by node.\n   * @param node - Issue folder (for issues of a certain type) that is handled.\n   */\n  private drawFolderRelations(node: issueGraphNodes.IssueNode) {\n    // @ts-ignore\n    const folderNodes: IssueFolderNode[] = Array.from(node.issueGroupContainer.issueGroupNodeIds).map(\n      (id: string) => this.graph.getNode(id));\n    for (const folderNode of folderNodes) {\n      const relatedFolders = this.graphData.relatedFolders.getValue([node.id.toString(), folderNode.type]);\n      for (const relatedFolder of relatedFolders) {\n        const [issueNodeId, category] = relatedFolder;\n        const edge = issueGraphNodes.createRelationEdge(folderNode.id, issueGraphNodes.getIssueFolderId(issueNodeId, category));\n        this.graph.addEdge(edge);\n      }\n    }\n  }\n\n  /**\n   * Sets the view and the bounding box of the graph to how it was when the user left the graph with the help of localStorage.\n   * When theres no previous session available set the view to the optimized bounding box for the graph.\n   */\n  private setGraphToLastView() {\n    // The previous currentViewWindow of the graph as JSON string\n    const previousBoundingBoxAsString = localStorage.getItem(`zoomBoundingBox_${this.projectStorageKey}`);\n    // The previous zoomTransform of the graph as JSON string\n    const zoomTransformAsString = localStorage.getItem(`zoomTransform_${this.projectStorageKey}`);\n    // Only set the bounding box to the optimized bounding box for the graph when creating the first component\n    const firstComponent = this.graphData.components.size === 1 ? true : false;\n\n    // Set the bounding box to the bounding box of the last session or to the optimized bounding box if there wasnt a last session\n    if ((JSON.parse(previousBoundingBoxAsString) !== null) && (JSON.parse(zoomTransformAsString) !== null) && this.graphFirstRender\n      && !this.redrawByCloseOfComponentDetails && !firstComponent) {\n      const previousBoundingBox = JSON.parse(previousBoundingBoxAsString);\n      /* These calculations are necessary because of how GraphEditor.zoomToBox(box: Rect) works. GraphEditor.zoomToBox zooms to\n      the given box and adds some padding.These calculations get rid of the padding. Otherwise the padding would be added to the graph\n       with every execution of the setGraphToLastView() method. */\n      previousBoundingBox.width = previousBoundingBox.width * 0.9;\n      previousBoundingBox.height = previousBoundingBox.height * 0.9;\n      // Difference between Rect.x that is given into the GraphEdit.zoomToBox(box: Rect) method and the resulting Rect.x\n      const paddingX = 57.75 / JSON.parse(zoomTransformAsString).k;\n      // Difference between Rect.y that is given into the GraphEdit.zoomToBox(box: Rect) method and the resulting Rect.y\n      const paddingY = 17.2 / JSON.parse(zoomTransformAsString).k;\n      previousBoundingBox.x = previousBoundingBox.x + paddingX;\n      previousBoundingBox.y = previousBoundingBox.y + paddingY;\n      this.graph.zoomToBox(previousBoundingBox);\n      this.graphFirstRender = false;\n    }\n    // Zoom to the optimized bounding box if no graph view is stored from the last session or when the first component is created\n    else if ((this.zoomOnRedraw && !this.redrawByCloseOfComponentDetails) || firstComponent) {\n      this.fitGraphInView();\n      this.zoomOnRedraw = false;\n    }\n  }\n\n  /**\n   * Fits the graph into view.\n   */\n  fitGraphInView(): void {\n    // calculates the bounding box of the view\n    const rect = this.calculateBoundingBox();\n\n    // case: bounding box is calculated\n    // => zoom to bounding box\n    if (rect) {\n      this.graph.zoomToBox(rect);\n    }\n  }\n\n  /**\n   * Calculates the bounding box of the view.\n   * @returns The calculated bounding box.\n   */\n  calculateBoundingBox(): Rect {\n    const componentSize = {width: 100, height: 60};\n    const interfaceSize = {width: 14, height: 14};\n    const issueContainerSize = {width: 40, height: 30};\n\n    // calculates bounding box\n    let rect = null;\n    for (const node of this.graph.nodeList) {\n      let size;\n      if (node.type === issueGraphNodes.NodeType.Component) {\n        size = componentSize;\n      } else if (node.type === issueGraphNodes.NodeType.Interface || node.type === issueGraphNodes.NodeType.InterfaceConsumer) {\n        size = interfaceSize;\n      } else if (node.type === issueGraphNodes.NodeType.IssueGroupContainer) {\n        if (node.issueGroupNodeIds.size === 0) {\n          // irrelevant for empty issue group containers\n          continue;\n        }\n\n        size = issueContainerSize;\n      } else {\n        continue;\n      }\n\n      const nodeX = node.x - size.width / 2;\n      const nodeY = node.y - size.height / 2;\n\n      if (rect === null) {\n        rect = {xMin: nodeX, yMin: nodeY, xMax: nodeX + size.width, yMax: nodeY + size.height};\n      } else {\n        rect.xMin = Math.min(nodeX, rect.xMin);\n        rect.yMin = Math.min(nodeY, rect.yMin);\n\n        rect.xMax = Math.max(nodeX + size.width, rect.xMax);\n        rect.yMax = Math.max(nodeY + size.height, rect.yMax);\n      }\n    }\n\n    return rect ? {x: rect.xMin, y: rect.yMin, width: rect.xMax - rect.xMin, height: rect.yMax - rect.yMin} : null;\n  }\n\n  /**\n   * Handles the layour graph.\n   */\n  layoutGraph(): void {\n    const nodes = new Map();\n\n    for (const node of this.graph.nodeList) {\n      if (node.type === issueGraphNodes.NodeType.Component || node.type === issueGraphNodes.NodeType.Interface) {\n        nodes.set(node.id, new LayoutNode(node.id, node.x, node.y, node.type));\n      }\n    }\n\n    for (const edge of this.graph.edgeList) {\n      if (nodes.has(edge.source) && nodes.has(edge.target)) {\n        nodes.get(edge.source).connectTo(nodes.get(edge.target));\n        nodes.get(edge.target).connectTo(nodes.get(edge.source));\n      }\n    }\n\n    const nodeList = Array.from(nodes.values());\n    doGraphLayout(nodeList);\n\n    for (const node of nodeList) {\n      const layoutNode = nodes.get(node.id);\n      this.savedPositions.nodes[layoutNode.id] = {x: layoutNode.position.x, y: layoutNode.position.y};\n    }\n\n    this.savePositionsSubject.next();\n  }\n\n  /**\n   * Sets --show-relations css variable to initial or none. It is the value\n   * of the display attribute of the edges. If we set it to none the edges disappear.\n   * @param showRelations - Boolean derived from the setting of the switch slider for relation edges above the graph.\n   */\n  setRelationVisibility(showRelations: boolean) {\n    this.graph.getSVG().style('--show-relations', showRelations ? 'initial' : 'none');\n  }\n\n  /**\n   * Opens create component dialog and triggers reload of data after the dialog is closed.\n   */\n  public openCreateComponentDialog(): void {\n    const createComponentDialogRef = this.dialog.open(CreateComponentDialogComponent, {\n      data: {projectId: this.projectId}\n    });\n    createComponentDialogRef.afterClosed().subscribe(componentInformation => {\n      this.zoomOnRedraw = false;\n      this.reload$.next(null);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileSettingsDialogComponent.html":{"url":"components/ProfileSettingsDialogComponent.html","title":"component - ProfileSettingsDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileSettingsDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile-settings-dialog\n            \n\n            \n                styleUrls\n                ./profile-settings-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile-settings-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                hide\n                            \n                            \n                                updatePasswordFieldsShown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cancel\n                            \n                            \n                                    Public\n                                changePassword\n                            \n                            \n                                    Public\n                                goBackToSettings\n                            \n                            \n                                projectNameEdited\n                            \n                            \n                                    Public\n                                updatePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        cancel\n                        \n                    \n                \n            \n            \n                \n                    \n                    cancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        changePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    changePassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        goBackToSettings\n                        \n                    \n                \n            \n            \n                \n                    \n                    goBackToSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectNameEdited\n                        \n                    \n                \n            \n            \n                \nprojectNameEdited(saved: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    saved\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePasswordFieldsShown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { SettingsDialogComponent } from '../settings-dialog/settings-dialog.component';\n\n@Component({\n  selector: 'app-profile-settings-dialog',\n  templateUrl: './profile-settings-dialog.component.html',\n  styleUrls: ['./profile-settings-dialog.component.scss']\n})\nexport class ProfileSettingsDialogComponent implements OnInit {\n\n  hide = true;\n  updatePasswordFieldsShown = false;\n  description = '';\n\n  constructor(public dialogRef: MatDialogRef, private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n\n  //go one step back (to the settings menu)\n  public goBackToSettings() {\n    this.dialogRef.close();\n    this.dialog.open(SettingsDialogComponent);\n  }\n\n  //TODO\n  public changePassword() {\n    this.updatePasswordFieldsShown = true;\n  }\n\n  //TODO\n  public cancel() {\n    this.updatePasswordFieldsShown = false;\n  }\n\n  //TODO\n  public updatePassword() {\n    this.updatePasswordFieldsShown = false;\n  }\n\n  projectNameEdited(saved: boolean): void {\n    if (!saved) {\n      return;\n    }\n\n    alert('TODO: Save');\n  }\n}\n\n    \n\n    \n        \n\n    \n        arrow_back_ios\n        Back\n    \n    Profile Settings\n    \n    \n\n    \n    \n    \n\n    \n        Change Password\n    \n\n    \n\n    \n    \n\n        \n        \n            Enter old password\n            \n            \n                {{hide ? 'visibility_off' : 'visibility'}}\n            \n        \n\n        \n        \n            Enter new password\n            \n            \n                {{hide ? 'visibility_off' : 'visibility'}}\n            \n        \n\n        \n            Update Password\n        \n\n        \n            Cancel\n        \n\n    \n\n\n\n    \n\n    \n                \n                    ./profile-settings-dialog.component.scss\n                \n                .dialog{\n    width: 500px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            arrow_back_ios        Back        Profile Settings                                Change Password                                            Enter old password                                        {{hide ? \\'visibility_off\\' : \\'visibility\\'}}                                                Enter new password                                        {{hide ? \\'visibility_off\\' : \\'visibility\\'}}                                        Update Password                            Cancel            '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProfileSettingsDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectHeaderComponent.html":{"url":"components/ProjectHeaderComponent.html","title":"component - ProjectHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-header/project-header.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays the name and the id of a project\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-header\n            \n\n            \n                styleUrls\n                ./project-header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                projectId\n                            \n                            \n                                projectName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-header/project-header.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        projectName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-header/project-header.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\n\n/**\n * This component displays the name and the id of a project\n */\n@Component({\n  selector: 'app-project-header',\n  templateUrl: './project-header.component.html',\n  styleUrls: ['./project-header.component.scss']\n})\nexport class ProjectHeaderComponent {\n  @Input() projectName: string;\n  @Input() projectId: string;\n}\n\n\n    \n\n    \n        \n  \n  \n\n  \n    {{projectName}}\n    Project ID: {{projectId}}\n  \n\n\n    \n\n    \n                \n                    ./project-header.component.scss\n                \n                .project-title-row {\n  align-items: center;\n  width: fit-content;\n}\n\n.icon {\n  float: left;\n  vertical-align: top;\n  margin-right: 5px;\n  max-height: 64px;\n  max-width: 64px;\n}\n\n.content {\n  float: left;\n}\n\n.title, .sub-title {\n  margin: 0;\n  padding: 3px 10px 3px 0;\n}\n\n.title {\n  font-size: 17px;\n  font-weight: bold;\n}\n\n.sub-title {\n  font-weight: bold;\n  color: #3F3F3F;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{projectName}}    Project ID: {{projectId}}  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProjectHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectIssueListComponent.html":{"url":"components/ProjectIssueListComponent.html","title":"component - ProjectIssueListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectIssueListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-issue-list/project-issue-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is displayed when clicking on issues on the sidebar.\nIt contains the IssueHeaderComponent and the IssueListComponent.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-issue-list\n            \n\n            \n                styleUrls\n                ./project-issue-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-issue-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                issueListId\n                            \n                            \n                                    Public\n                                project$\n                            \n                            \n                                    Public\n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/project-issue-list/project-issue-list.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                for retrieving the id of the project through the url\n\n                                                        \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                for connection to API\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issueListId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ListId\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-issue-list/project-issue-list.component.ts:24\n                        \n                    \n\n            \n                \n                    ID of the list which is shown in the IssueListComponent\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataNode\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-issue-list/project-issue-list.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-issue-list/project-issue-list.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ListId, ListType, NodeType } from '@app/data-dgql/id';\nimport { DataNode } from '@app/data-dgql/query';\nimport { Project } from '../../generated/graphql-dgql';\nimport DataService from '@app/data-dgql';\n\n/**\n * This component is displayed when clicking on issues on the sidebar.\n * It contains the IssueHeaderComponent and the IssueListComponent.\n */\n@Component({\n  selector: 'app-project-issue-list',\n  templateUrl: './project-issue-list.component.html',\n  styleUrls: ['./project-issue-list.component.scss']\n})\nexport class ProjectIssueListComponent implements OnInit {\n\n  public projectId: string;\n  public project$: DataNode;\n  /**\n   * ID of the list which is shown in the IssueListComponent\n   */\n  public issueListId: ListId;\n\n  /**\n   * @param route for retrieving the id of the project through the url\n   * @param dataService for connection to API\n   */\n  constructor(private route: ActivatedRoute, private dataService: DataService) { }\n\n  ngOnInit(): void {\n    this.projectId = this.route.snapshot.paramMap.get('id');\n    const node = { type: NodeType.Project, id: this.projectId };\n    this.project$ = this.dataService.getNode(node);\n    this.issueListId = { node, type: ListType.Issues };\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n\n\n    \n\n    \n                \n                    ./project-issue-list.component.scss\n                \n                .center-horizontal{\n  width: 100%;\n  text-align: center;\n  margin-top: 15px;\n}\n.project-title-row {\n  width: 100%;\n  margin-bottom: 12px;\n  align-items: center;\n  height: 85px;\n}\n.box {\n  float: left;\n  //display: inline-block;\n  vertical-align: top;\n  width: 85px;\n  height: auto;\n  margin-right: 5px;\n}\n.content {\n  //display: inline-block;\n  float: left;\n\n}\n.title, .sub-title {\n  margin: 0;\n  padding: 3px 10px 3px 0;\n}\n.title {\n  font-size: 17px;\n  font-weight: bold;\n}\n.sub-title {\n  font-weight: bold;\n  color: #3F3F3F;\n}\n\nimg {\n  width:100%;\n}\n\n.pagefill {\n  width: 100%;\n  height: 300px;\n}\n.margin-left-top {\n  margin-top: 3px;\n  margin-left: 3px;\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProjectIssueListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectListComponent.html":{"url":"components/ProjectListComponent.html","title":"component - ProjectListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-list-component/project-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is the landing page for the user after loggin in to the system\nIt shows a list of all projects the user can access\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-list\n            \n\n            \n                styleUrls\n                ./project-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lastQueriedProjectName\n                            \n                            \n                                loading\n                            \n                            \n                                pendingCreate\n                            \n                            \n                                projectName\n                            \n                            \n                                projects\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                changeColour\n                            \n                            \n                                    Public\n                                nothing\n                            \n                            \n                                    Public\n                                openCreateProjectDialog\n                            \n                            \n                                    Public\n                                reloadProjects\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(projectStore: ProjectStoreService, dialog: MatDialog, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/project-list-component/project-list.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectStore\n                                                  \n                                                        \n                                                                        ProjectStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        changeColour\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeColour()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-list-component/project-list.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        nothing\n                        \n                    \n                \n            \n            \n                \n                    \n                    nothing(e: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-list-component/project-list.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openCreateProjectDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    openCreateProjectDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-list-component/project-list.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        reloadProjects\n                        \n                    \n                \n            \n            \n                \n                    \n                    reloadProjects()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-list-component/project-list.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        lastQueriedProjectName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-list-component/project-list.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-list-component/project-list.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pendingCreate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/project-list-component/project-list.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/project-list-component/project-list.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projects\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Pick[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/project-list-component/project-list.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {CreateProjectDialogComponent} from 'src/app/dialogs/create-project-dialog/create-project-dialog.component';\nimport {Project} from 'src/generated/graphql';\nimport {ProjectStoreService} from '../data/project/project-store.service';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\n\n/**\n * This component is the landing page for the user after loggin in to the system\n * It shows a list of all projects the user can access\n */\n@Component({\n  selector: 'app-project-list',\n  templateUrl: './project-list.component.html',\n  styleUrls: ['./project-list.component.scss']\n})\nexport class ProjectListComponent implements OnInit {\n  pendingCreate = false;\n  projectName = '';\n  lastQueriedProjectName: string;\n  projects: Pick[] = [];\n  loading: boolean;\n\n  constructor(private projectStore: ProjectStoreService,\n              private dialog: MatDialog,\n              private notify: UserNotifyService) {\n  }\n\n  ngOnInit(): void {\n    // get all projects from the database\n    this.reloadProjects();\n  }\n\n  public reloadProjects(): void {\n    if (this.lastQueriedProjectName === this.projectName && this.lastQueriedProjectName) {\n      return;\n    }\n\n    this.loading = true;\n    this.projectStore.getAll(this.projectName).subscribe(projects => {\n      this.loading = false;\n      this.projects = projects;\n      this.lastQueriedProjectName = this.projectName;\n    }, error => {\n      this.loading = false;\n      this.notify.notifyError('Failed to load projects', error);\n    });\n  }\n\n  public openCreateProjectDialog(): void {\n    const createProjectDialogRef = this.dialog.open(CreateProjectDialogComponent);\n    createProjectDialogRef.afterClosed().subscribe(result => {\n      this.changeColour();\n      if (result?.createdProjectId) {\n        this.projectName = '';\n        this.reloadProjects();\n      }\n    });\n  }\n\n  // remove the focus from the create project button after the project is created\n  private changeColour(): void {\n    const b = document.querySelector('#buttonCreateProject') as HTMLElement;\n    b.blur();\n  }\n\n  // if the shortcut icon to the graph view of a project is clicked the list view fires a event that a row was clicked\n  // and the user jumps to the project overview. This method prevents the default event and enable the shortcut button\n  // to perform its action\n  public nothing(e: Event): void {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n}\n\n\n    \n\n    \n        \n  My Projects\n\n\n  Project-List\n  Delete Project\n  \n  Create Project\n  \n  \n  Create Demo Project-->\n  -->\n\n\n\n\n\n  \n    \n  \n  \n  \n    \n      \n    \n  \n\n  \n  \n  \n    \n\n      \n      {{ project.name }}\n      \n        account_tree\n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./project-list.component.scss\n                \n                @import '~@angular/material/theming';\n@import 'variables';\n@import 'src/styles/spinner';\n\nspan[matLine] {\n  padding-left: 16px;\n}\n\n.nz-input-group{\nmax-width: 100%;\n}\n.nz-input-group{\n  max-width: 100%;\n}\n.listWrapper{\n  max-width: 50%;\n  //background-color: black;\n  -webkit-box-shadow: 2px 3px 18px -6px rgba(0,0,0,0.75);\n-moz-box-shadow: 2px 3px 18px -6px rgba(0,0,0,0.75);\nbox-shadow: 2px 3px 18px -6px rgba(0,0,0,0.75);\nmargin-top: 15px;\nmargin-left: auto;\nmargin-right: auto;\n}\n.centered-headline{\n  margin: auto;\n}\n\n\n\n.mat-nav-list-padding-removed{\n  padding-top: 0;\n}\n.floating-button{\nfloat: right;\n}\n.list-header{\nmax-width: 50%;\nmargin-left: auto;\nmargin-right: auto;\nheight: 36px;\nmargin-bottom: 5px;\n}\n.list-h2{\n  max-width: 50%;\n  float: left;\n  margin-bottom: 0;\n}\n\n.graph-icon {\n  color: $icon-gray;\n}\n\n#buttonDeleteProject{\n  margin: 5px;\n}\n\n#buttonCreateProject{\n  margin: 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  My Projects  Project-List  Delete Project    Create Project      Create Demo Project-->  -->                                                  {{ project.name }}              account_tree                  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProjectListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectMembersComponent.html":{"url":"components/ProjectMembersComponent.html","title":"component - ProjectMembersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectMembersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-members/project-members.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is an example for the manage members view\nAll users are displayed in a paginated list. The list can be filtered.\nThe members are hardcoded\nIf the backend offers an interface to get all users the mockUsers list schould be replaced\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-members\n            \n\n            \n                styleUrls\n                ./project-members.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-members.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addableUsers\n                            \n                            \n                                columnsToDisplay\n                            \n                            \n                                dataSource\n                            \n                            \n                                mockUsers\n                            \n                            \n                                paginator\n                            \n                            \n                                paginatorModule\n                            \n                            \n                                    Public\n                                project\n                            \n                            \n                                    Public\n                                project$\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                sort\n                            \n                            \n                                validationFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                clickedOnRow\n                            \n                            \n                                onAddClick\n                            \n                            \n                                onDeleteClick\n                            \n                            \n                                onPageChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, projectStore: ProjectStoreService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/project-members/project-members.component.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectStore\n                                                  \n                                                        \n                                                                        ProjectStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilter\n                        \n                    \n                \n            \n            \n                \napplyFilter(filterValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-members/project-members.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clickedOnRow\n                        \n                    \n                \n            \n            \n                \nclickedOnRow(rowData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-members/project-members.component.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rowData\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAddClick\n                        \n                    \n                \n            \n            \n                \nonAddClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-members/project-members.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteClick\n                        \n                    \n                \n            \n            \n                \nonDeleteClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-members/project-members.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPageChange\n                        \n                    \n                \n            \n            \n                \nonPageChange(event: PageEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-members/project-members.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            PageEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addableUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Default value : [\n    {id: '7', displayName: 'AddedUser1', email: 'AddedUser1.de'},\n    {id: '8', displayName: 'AddedUser2', email: 'AddedUser2.de'},\n    {id: '9', displayName: 'AddedUser3', email: 'AddedUser3.de'},\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columnsToDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['Name', 'Role', 'email']\n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatTableDataSource\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Default value : [{id: '1', displayName: 'User1', email: 'User1.de'},\n    {id: '2', displayName: 'User2', email: 'User2.de'},\n    {id: '3', displayName: 'User3', email: 'User3.de'},\n    {id: '4', displayName: 'User4', email: 'User4.de'},\n    {id: '5', displayName: 'User5', email: 'User5.de'},\n    {id: '6', displayName: 'User6', email: 'User6.de'}]\n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginator)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginatorModule\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginatorModule\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginatorModule)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GetFullProjectQuery\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSort\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatSort)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {ProjectStoreService} from '@app/data/project/project-store.service';\nimport {GetFullProjectQuery} from 'src/generated/graphql';\nimport {Observable} from 'rxjs';\nimport {FormControl} from '@angular/forms';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatSort, MatSortable} from '@angular/material/sort';\nimport {MatPaginator, MatPaginatorModule, PageEvent} from '@angular/material/paginator';\nimport {AddProjectMemberDialogComponent} from '@app/dialogs/add-project-member-dialog/add-project-member-dialog.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {RemoveProjectMemberComponentComponent} from '@app/dialogs/remove-project-member-component/remove-project-member-component.component';\n\n/**\n * This component is an example for the manage members view\n * All users are displayed in a paginated list. The list can be filtered.\n * The members are hardcoded\n * If the backend offers an interface to get all users the mockUsers list schould be replaced\n */\n@Component({\n  selector: 'app-project-members',\n  templateUrl: './project-members.component.html',\n  styleUrls: ['./project-members.component.scss']\n})\nexport class ProjectMembersComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatPaginatorModule) paginatorModule: MatPaginatorModule;\n  @ViewChild(MatSort) sort: MatSort;\n  public projectId: string;\n  public project$: Observable;\n  public project: GetFullProjectQuery;\n  validationFilter = new FormControl('');\n\n  columnsToDisplay = ['Name', 'Role', 'email'];\n  dataSource: MatTableDataSource;\n\n  //users\n  mockUsers: Array = [{id: '1', displayName: 'User1', email: 'User1.de'},\n    {id: '2', displayName: 'User2', email: 'User2.de'},\n    {id: '3', displayName: 'User3', email: 'User3.de'},\n    {id: '4', displayName: 'User4', email: 'User4.de'},\n    {id: '5', displayName: 'User5', email: 'User5.de'},\n    {id: '6', displayName: 'User6', email: 'User6.de'}];\n\n  // list of users who can be added to the project\n  //hardcoded\n  addableUsers: Array = [\n    {id: '7', displayName: 'AddedUser1', email: 'AddedUser1.de'},\n    {id: '8', displayName: 'AddedUser2', email: 'AddedUser2.de'},\n    {id: '9', displayName: 'AddedUser3', email: 'AddedUser3.de'},\n  ];\n\n\n  constructor(private dialog: MatDialog, private projectStore: ProjectStoreService, private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.projectId = this.route.snapshot.paramMap.get('id');\n    this.project$ = this.projectStore.getFullProject(this.projectId);\n    this.project$.subscribe(project => {\n      this.project = project;\n      // MOCK DATA for table\n      // FIXME Api change\n      // project.node.users.nodes.forEach(u => this.mockUsers.push(u));\n      this.dataSource = new MatTableDataSource(this.mockUsers);\n\n      // sort data in table\n      this.sort.sort(({id: 'Name', start: 'asc'}) as MatSortable);\n      this.dataSource.sort = this.sort;\n\n      //paginator\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n\n  // This method adds a user to the project members list without processing a task in the back-end\n  onAddClick() {\n    const addMemberDialogRef = this.dialog.open(AddProjectMemberDialogComponent,\n      {data: {addableMembers: this.addableUsers, projectId: this.projectId}});\n    addMemberDialogRef.afterClosed().subscribe(data => {\n      if (data) {\n        for (const user of data.usersToAdd) {\n          this.addableUsers.forEach(addableUser => {\n            if (addableUser.id == user) {\n              this.mockUsers.push(addableUser);\n            }\n          });\n        }\n        this.dataSource = new MatTableDataSource(this.mockUsers);\n\n      }\n    });\n\n  }\n\n  // This method deletes a user to the project members list without processing a task in the back-end\n  onDeleteClick() {\n    const deleteMemberDialogRef = this.dialog.open(RemoveProjectMemberComponentComponent,\n      {data: {mockMembers: this.mockUsers, projectId: this.projectId}});\n    deleteMemberDialogRef.afterClosed().subscribe(data => {\n      if (data) {\n        for (const user of data.usersToDelete) {\n          for (var i = 0; i (this.mockUsers);\n      }\n    });\n  }\n\n  //change pages\n  onPageChange(event: PageEvent) {\n  }\n\n  // on every key pressed in the filter-field this method is triggered and reduces the shown users in the list (table)\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  clickedOnRow(rowData) {\n    // there schould be the code when a user is selected\n    // TODO jump to the user information page\n  }\n\n}\n\n// defines the structure of a user\nexport interface userMock {\n  id: string;\n  displayName?: string;\n  username?: string;\n  email?: string;\n\n}\n\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n\n      \n        add\n      \n\n      \n        remove\n      \n\n\n      \n        \n          Filter\n          \n        \n      \n\n\n      \n\n        \n        \n\n          \n          \n             Name \n             {{element.displayName}} \n          \n\n          \n          \n             Role \n             Administrator \n          \n\n          \n          \n             Email \n             {{element.email}} \n          \n\n\n          \n          \n        \n\n      \n\n      \n      \n      \n    \n\n    \n\n  \n\n\n    \n\n    \n                \n                    ./project-members.component.scss\n                \n                .project-title-row {\n  width: 100%;\n  margin-bottom: 12px;\n  align-items: center;\n  height: 85px;\n}\n.box {\n  float: left;\n  //display: inline-block;\n  vertical-align: top;\n  width: 85px;\n  height: auto;\n  margin-right: 5px;\n}\n.content {\n  //display: inline-block;\n  float: left;\n\n}\n.title, .sub-title {\n  margin: 0;\n  padding: 3px 10px 3px 0;\n}\n.title {\n  font-size: 17px;\n  font-weight: bold;\n}\n.sub-title {\n  font-weight: bold;\n  color: #3F3F3F;\n}\n\nimg {\n  width:100%;\n}\n\n.pagefill {\n  width: 100%;\n  height: 300px;\n}\n.margin-left-top {\n  margin-top: 3px;\n  margin-left: 3px;\n}\n.text-left {\n  text-align: left;\n}\n.mat-row:hover {\n  box-shadow: inset 0 0 43px -17px rgba(201,195,201,1);\n  cursor: pointer;\n}\n.button-add {\n  margin: 10px 5px 10px 10px;\n  float: left;\n}\n\n.button-remove {\n  margin: 10px 15px 10px 5px;\n  float: left;\n}\n\n.table-container {\n  max-height: 500px;\n  overflow: auto;\n}\n.center-horizontal{\n  width: 100%;\n  text-align: center;\n  margin-top: 15px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            add                    remove                              Filter                                                                               Name              {{element.displayName}}                                            Role              Administrator                                            Email              {{element.email}}                                                                         '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProjectMembersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectOverviewComponent.html":{"url":"components/ProjectOverviewComponent.html","title":"component - ProjectOverviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectOverviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-overview/project-overview.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component offers a view showing the project name,\nowner, id and description.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-overview\n            \n\n            \n                styleUrls\n                ./project-overview.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-overview.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                    Public\n                                project\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                queryComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteProject\n                            \n                            \n                                projectNameEdited\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, projectStore: ProjectStoreService, route: ActivatedRoute, router: Router, changeDetector: ChangeDetectorRef, dialog: MatDialog, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/project-overview/project-overview.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectStore\n                                                  \n                                                        \n                                                                        ProjectStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProject\n                        \n                    \n                \n            \n            \n                \ndeleteProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-overview/project-overview.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectNameEdited\n                        \n                    \n                \n            \n            \n                \nprojectNameEdited(saved: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-overview/project-overview.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    saved\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/project-overview/project-overview.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataNode\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-overview/project-overview.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-overview/project-overview.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(QueryComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/project-overview/project-overview.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, ChangeDetectorRef, Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ProjectStoreService} from '@app/data/project/project-store.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {RemoveDialogComponent} from '@app/dialogs/remove-dialog/remove-dialog.component';\nimport {DataNode} from '@app/data-dgql/query';\nimport {Project} from '../../generated/graphql-dgql';\nimport DataService from '@app/data-dgql';\nimport {NodeType} from '@app/data-dgql/id';\nimport {QueryComponent} from '@app/utils/query-component/query.component';\n\n/**\n * This component offers a view showing the project name,\n * owner, id and description.\n */\n@Component({\n  selector: 'app-project-overview',\n  templateUrl: './project-overview.component.html',\n  styleUrls: ['./project-overview.component.scss']\n})\nexport class ProjectOverviewComponent implements OnInit, AfterViewInit {\n  @ViewChild(QueryComponent) queryComponent: QueryComponent;\n\n  public projectId: string;\n  public project: DataNode;\n  description = '';\n\n  constructor(private dataService: DataService,\n              private projectStore: ProjectStoreService,\n              private route: ActivatedRoute,\n              private router: Router,\n              private changeDetector: ChangeDetectorRef,\n              private dialog: MatDialog,\n              private notify: UserNotifyService) {\n  }\n\n  ngOnInit(): void {\n    this.projectId = this.route.snapshot.paramMap.get('id');\n    this.project = this.dataService.getNode({type: NodeType.Project, id: this.projectId});\n  }\n\n  ngAfterViewInit() {\n    this.queryComponent.listenTo(this.project, project => this.description = project.description);\n  }\n\n  projectNameEdited(saved: boolean): void {\n    if (!saved) {\n      return;\n    }\n\n    alert('TODO: Save');\n  }\n\n  deleteProject(): void {\n    const confirmDeleteDialogRef = this.dialog.open(RemoveDialogComponent,\n      {\n        data: {\n          title: 'Really delete project \\\"' + this.project.current.name + '\\\"?',\n          messages: ['Are you sure you want to delete the project \\\"' + this.project.current.name + '\\\"?',\n            'This action cannot be undone!'],\n          verificationName: this.project.current.name\n        }\n      });\n    confirmDeleteDialogRef.afterClosed().subscribe(del => {\n      if (del) {\n        this.projectStore.delete(this.projectId).subscribe(() => {\n            this.notify.notifyInfo('Successfully deleted project \\\"' + this.project.current.name + '\\\"');\n            this.router.navigate(['/']);\n          },\n          error => this.notify.notifyError('Failed to delete project!', error));\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n        \n\n        \n        \n          Delete\n        \n      \n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./project-overview.component.scss\n                \n                .delete-button-container {\n  width: 100%;\n  display: flex;\n  align-items: center;\n}\n\n.project-overview-container {\n  margin: 4px;\n}\n\n#button{\n  margin: 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                              Delete                                '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProjectOverviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectStoreService.html":{"url":"injectables/ProjectStoreService.html","title":"injectable - ProjectStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProjectStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/project/project-store.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service provides get, create and delete operations for projects\nWith the get-method only the id and name of one project, specified by the id, will be fetched\nThe getFulProject method fetches all the information of a project the database provides\nThe getAll method fetches the name and id for all projects. This is used to reduce\ntransfered data while showing the projects list\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getBasicProject\n                            \n                            \n                                getFullProject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, getAllQuery: GetAllProjectsGQL, getBasicProjectQuery: GetBasicProjectGQL, getFullQuery: GetFullProjectGQL, createProject: CreateProjectGQL, deleteProject: DeleteProjectGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/project/project-store.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getAllQuery\n                                                  \n                                                        \n                                                                    GetAllProjectsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getBasicProjectQuery\n                                                  \n                                                        \n                                                                    GetBasicProjectGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getFullQuery\n                                                  \n                                                        \n                                                                    GetFullProjectGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createProject\n                                                  \n                                                        \n                                                                    CreateProjectGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deleteProject\n                                                  \n                                                        \n                                                                    DeleteProjectGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(name: string, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/project/project-store.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/project/project-store.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(filterText: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/project/project-store.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBasicProject\n                        \n                    \n                \n            \n            \n                \ngetBasicProject(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/project/project-store.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFullProject\n                        \n                    \n                \n            \n            \n                \ngetFullProject(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/project/project-store.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {map} from 'rxjs/operators';\nimport {\n  CreateProjectGQL,\n  CreateProjectInput,\n  DeleteProjectGQL,\n  DeleteProjectInput,\n  GetAllProjectsGQL,\n  GetBasicProjectGQL,\n  GetBasicProjectQuery,\n  GetFullProjectGQL,\n  GetFullProjectQuery,\n  Project,\n  ProjectFilter\n} from 'src/generated/graphql';\nimport {Observable} from 'rxjs';\nimport {AuthenticationService} from '@app/auth/authentication.service';\n\n/**\n * This service provides get, create and delete operations for projects\n * With the get-method only the id and name of one project, specified by the id, will be fetched\n * The getFulProject method fetches all the information of a project the database provides\n * The getAll method fetches the name and id for all projects. This is used to reduce\n * transfered data while showing the projects list\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectStoreService {\n\n  constructor(private authService: AuthenticationService, private getAllQuery: GetAllProjectsGQL,\n              private getBasicProjectQuery: GetBasicProjectGQL, private getFullQuery: GetFullProjectGQL,\n              private createProject: CreateProjectGQL, private deleteProject: DeleteProjectGQL) {\n  }\n\n  create(name: string, description: string) {\n    const input: CreateProjectInput = {\n      name,\n      description\n    };\n    return this.createProject.mutate({input});\n  }\n\n  delete(id: string) {\n    const input: DeleteProjectInput = {\n      project: id\n    };\n    return this.deleteProject.mutate({input});\n  }\n\n  getBasicProject(id: string): Observable {\n    return this.getBasicProjectQuery.fetch({id}).pipe(map(({data}) => data));\n  }\n\n  getFullProject(id: string): Observable {\n    return this.getFullQuery.fetch({id}).pipe(map(({data}) => data));\n  }\n\n  getAll(filterText: string): Observable[]> {\n    const filter: ProjectFilter = {\n      name: filterText\n    };\n    return this.getAllQuery.fetch({filter}).pipe(\n      map(({data}) => data.projects.edges.map(edge => edge.node))\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectsService.html":{"url":"injectables/ProjectsService.html","title":"injectable - ProjectsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProjectsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/queries/projects.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProject\n                            \n                            \n                                listProjects\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(qListProjects: ListProjectsGQL, qGetProject: GetProjectGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data-dgql/queries/projects.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        qListProjects\n                                                  \n                                                        \n                                                                    ListProjectsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qGetProject\n                                                  \n                                                        \n                                                                    GetProjectGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getProject\n                        \n                    \n                \n            \n            \n                \ngetProject(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/queries/projects.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listProjects\n                        \n                    \n                \n            \n            \n                \nlistProjects(list: QueryListParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/queries/projects.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                            QueryListParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  GetProjectGQL,\n  ListProjectsGQL,\n  ProjectFilter,\n} from 'src/generated/graphql-dgql';\nimport { promisifyApolloFetch, QueryListParams } from '@app/data-dgql/queries/util';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectsService {\n  constructor(\n    private qListProjects: ListProjectsGQL,\n    private qGetProject: GetProjectGQL,\n  ) {}\n\n  listProjects(list: QueryListParams) {\n    return promisifyApolloFetch(this.qListProjects.fetch({ ...list }));\n  }\n\n  getProject(id: string) {\n    return promisifyApolloFetch(this.qGetProject.fetch({ id }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueriesService.html":{"url":"injectables/QueriesService.html","title":"injectable - QueriesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QueriesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/queries/queries.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                components\n                            \n                            \n                                    Public\n                                issues\n                            \n                            \n                                    Public\n                                projects\n                            \n                            \n                                    Public\n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(components: ComponentsService, issues: IssuesService, projects: ProjectsService, users: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data-dgql/queries/queries.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        components\n                                                  \n                                                        \n                                                                        ComponentsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        issues\n                                                  \n                                                        \n                                                                        IssuesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projects\n                                                  \n                                                        \n                                                                        ProjectsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        components\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ComponentsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/queries/queries.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IssuesService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/queries/queries.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projects\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProjectsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/queries/queries.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UsersService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/queries/queries.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IssuesService } from './issues.service';\nimport { ProjectsService } from './projects.service';\nimport { ComponentsService } from './components.service';\nimport { UsersService } from './users.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QueriesService {\n  constructor(\n    public components: ComponentsService,\n    public issues: IssuesService,\n    public projects: ProjectsService,\n    public users: UsersService,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryBodyDirective.html":{"url":"directives/QueryBodyDirective.html","title":"directive - QueryBodyDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  QueryBodyDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/query-component/query.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This directive is used on an ng-template, to indicate that the contents of it should be shown once\nthe query finished successfully\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appQueryBody]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef<>)\n                    \n                \n                        \n                            \n                                Defined in src/app/utils/query-component/query.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef<>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/query-component/query.component.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  Input,\n  OnDestroy,\n  TemplateRef\n} from '@angular/core';\nimport {Observable, Subscription} from 'rxjs';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {MatButton} from '@angular/material/button';\n\n/**\n * The current state of the query\n */\nexport enum QueryComponentState {\n  /** The query was executed successfully */\n  Ready,\n  /** The query has not yet finished */\n  Loading,\n  /** The query returned an error */\n  Error\n}\n\n/**\n * This directive is used on an `ng-template`, to indicate that the contents of it should be shown once\n * the query finished successfully\n */\n@Directive({\n  selector: '[appQueryBody]'\n})\nexport class QueryBodyDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used on a `button`, to inidcate that the {@link QueryComponent} should manage the state of this\n * button\n */\n@Directive({\n  selector: '[appQueryButton]'\n})\nexport class QueryButtonDirective {\n  constructor(public element: MatButton) {\n  }\n}\n\n/**\n * This component is intended to be used in combination with an `Observable`.\n * The component expects that either an `ng-template` or a `MatButton` is in the body and that the appropriate directive\n * is used on it ({@link QueryBodyDirective} with `ng-template`, {@link QueryButtonDirective} with `button`).\n * Once the appropriate function is called, the component subscribes to the observable, showing the user a loading\n * indication and, if applicable, disables the `button`.\n * Once the query finished, the content in the `ng-template` is shown or the button is enabled again.\n * If the subscription yielded an error, a message is shown instead of the `ng-template`, or the button is re-enabled.\n * Note that no verification has to be made if the query was successful, when using an `ng-template`.\n * The content of the `ng-template` is only executed once the {@link #queryState} is `Ready`.\n *\n * #### Example 1: Using `ng-template`\n * This example will show, instead of the content directly, a loading indicator as soon as the page is loaded.\n * ```html\n * \n *   \n *     This will only be shown if the query was successful!\n *      Not required! -->\n *     Result is: {{this.data}}\n *      -->\n *   \n * \n * ```\n *\n * ```ts\n * // ...\n *\n * @ViewChild(QueryComponent) query: QueryComponent;\n *\n * // ...\n *\n * ngAfterViewInit() {\n *   // Have to use ngAfterViewInit, otherwise query will be undefined!\n *\n *   this.query.listenTo(this.someObservable,\n *     result => {\n *       this.data = result;\n *       console.log('Result callback');\n *     },\n *     error => {\n *       console.log('Error callback');\n *     }\n *   );\n * }\n * ```\n *\n * #### Example 2: Using `button`\n * This example will subscribe to the observable as soon as the button is clicked.\n * The button is disabled and a loading indicator is shown as long as the subscription has not yielded a result.\n * ```html\n * \n *   \n *     Do something that takes a while...\n *   \n * \n * ```\n *\n * ```ts\n * // ...\n *\n * @ViewChild(QueryComponent) query: QueryComponent;\n *\n * // ...\n *\n * onClick() {\n *   this.query.listenTo(this.somethingThatTakesAWhile,\n *     result => {\n *       console.log('Result callback');\n *     },\n *     error => {\n *       console.log('Error callback');\n *     }\n *   );\n * }\n * ```\n */\n@Component({\n  templateUrl: 'query.component.html',\n  selector: 'app-query-component',\n  styleUrls: ['query.component.scss']\n})\nexport class QueryComponent implements OnDestroy, AfterViewInit {\n  /** Error message to be shown if the subscription failed */\n  @Input() errorMessage = 'Failed to run query!';\n  @ContentChild(QueryBodyDirective) body: QueryBodyDirective;\n  @ContentChild(QueryButtonDirective) button: QueryButtonDirective;\n\n  /** @ignore */\n  readonly State = QueryComponentState;\n  /** The current state of the query */\n  queryState: QueryComponentState = QueryComponentState.Loading;\n  private subscription?: Subscription;\n  /** If true, a button is in the query body, not a template*/\n  buttonMode: boolean;\n\n  constructor(private notify: UserNotifyService,\n              private changeDetector: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit() {\n    this.buttonMode = !this.body && !!this.button;\n    if (this.buttonMode) {\n      this.queryState = QueryComponentState.Ready;\n    }\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n\n  /** Quick way of checking if `this.query.queryState === QueryComponentState.Ready` */\n  public ready(): boolean {\n    return this.queryState === QueryComponentState.Ready;\n  }\n\n  /**\n   * Subscribe the query component to the observable\n   * @param query The observable\n   * @param success The function to be called if the query was successful\n   * @param error The function to be called if the query had an error\n   */\n  public listenTo(query: Observable, success?: (value: T) => void, error?: (error: any) => void): void {\n    this.queryState = QueryComponentState.Loading;\n    this.changeDetector.detectChanges();\n    this.subscription?.unsubscribe();\n    this.updateButton();\n\n    this.subscription = query.subscribe((value: T) => {\n      if (success) {\n        success(value);\n\n        // Check if the callback changed the query state, e.g. by calling setError()\n        if (this.queryState === QueryComponentState.Error) {\n          return;\n        }\n      }\n\n      this.queryState = QueryComponentState.Ready;\n      this.changeDetector.detectChanges();\n      this.updateButton();\n    }, err => {\n      if (error) {\n        error(err);\n      }\n\n      this.setError();\n      this.notify.notifyError(this.errorMessage, err);\n    });\n  }\n\n  /**\n   * Manually sets this query component to the error state.\n   * This may be useful if e.g. the query ran successfully, the contained data in it however is not valid.\n   */\n  public setError(): void {\n    this.queryState = QueryComponentState.Error;\n    this.changeDetector.detectChanges();\n    this.updateButton();\n  }\n\n  private updateButton(): void {\n    if (!this.buttonMode) {\n      return;\n    }\n\n    this.button.element.disabled = this.queryState === QueryComponentState.Loading;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryButtonDirective.html":{"url":"directives/QueryButtonDirective.html","title":"directive - QueryButtonDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  QueryButtonDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/query-component/query.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This directive is used on a button, to inidcate that the QueryComponent should manage the state of this\nbutton\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appQueryButton]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                element\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: MatButton)\n                    \n                \n                        \n                            \n                                Defined in src/app/utils/query-component/query.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    MatButton\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        element\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatButton\n\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/query-component/query.component.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  Input,\n  OnDestroy,\n  TemplateRef\n} from '@angular/core';\nimport {Observable, Subscription} from 'rxjs';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {MatButton} from '@angular/material/button';\n\n/**\n * The current state of the query\n */\nexport enum QueryComponentState {\n  /** The query was executed successfully */\n  Ready,\n  /** The query has not yet finished */\n  Loading,\n  /** The query returned an error */\n  Error\n}\n\n/**\n * This directive is used on an `ng-template`, to indicate that the contents of it should be shown once\n * the query finished successfully\n */\n@Directive({\n  selector: '[appQueryBody]'\n})\nexport class QueryBodyDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used on a `button`, to inidcate that the {@link QueryComponent} should manage the state of this\n * button\n */\n@Directive({\n  selector: '[appQueryButton]'\n})\nexport class QueryButtonDirective {\n  constructor(public element: MatButton) {\n  }\n}\n\n/**\n * This component is intended to be used in combination with an `Observable`.\n * The component expects that either an `ng-template` or a `MatButton` is in the body and that the appropriate directive\n * is used on it ({@link QueryBodyDirective} with `ng-template`, {@link QueryButtonDirective} with `button`).\n * Once the appropriate function is called, the component subscribes to the observable, showing the user a loading\n * indication and, if applicable, disables the `button`.\n * Once the query finished, the content in the `ng-template` is shown or the button is enabled again.\n * If the subscription yielded an error, a message is shown instead of the `ng-template`, or the button is re-enabled.\n * Note that no verification has to be made if the query was successful, when using an `ng-template`.\n * The content of the `ng-template` is only executed once the {@link #queryState} is `Ready`.\n *\n * #### Example 1: Using `ng-template`\n * This example will show, instead of the content directly, a loading indicator as soon as the page is loaded.\n * ```html\n * \n *   \n *     This will only be shown if the query was successful!\n *      Not required! -->\n *     Result is: {{this.data}}\n *      -->\n *   \n * \n * ```\n *\n * ```ts\n * // ...\n *\n * @ViewChild(QueryComponent) query: QueryComponent;\n *\n * // ...\n *\n * ngAfterViewInit() {\n *   // Have to use ngAfterViewInit, otherwise query will be undefined!\n *\n *   this.query.listenTo(this.someObservable,\n *     result => {\n *       this.data = result;\n *       console.log('Result callback');\n *     },\n *     error => {\n *       console.log('Error callback');\n *     }\n *   );\n * }\n * ```\n *\n * #### Example 2: Using `button`\n * This example will subscribe to the observable as soon as the button is clicked.\n * The button is disabled and a loading indicator is shown as long as the subscription has not yielded a result.\n * ```html\n * \n *   \n *     Do something that takes a while...\n *   \n * \n * ```\n *\n * ```ts\n * // ...\n *\n * @ViewChild(QueryComponent) query: QueryComponent;\n *\n * // ...\n *\n * onClick() {\n *   this.query.listenTo(this.somethingThatTakesAWhile,\n *     result => {\n *       console.log('Result callback');\n *     },\n *     error => {\n *       console.log('Error callback');\n *     }\n *   );\n * }\n * ```\n */\n@Component({\n  templateUrl: 'query.component.html',\n  selector: 'app-query-component',\n  styleUrls: ['query.component.scss']\n})\nexport class QueryComponent implements OnDestroy, AfterViewInit {\n  /** Error message to be shown if the subscription failed */\n  @Input() errorMessage = 'Failed to run query!';\n  @ContentChild(QueryBodyDirective) body: QueryBodyDirective;\n  @ContentChild(QueryButtonDirective) button: QueryButtonDirective;\n\n  /** @ignore */\n  readonly State = QueryComponentState;\n  /** The current state of the query */\n  queryState: QueryComponentState = QueryComponentState.Loading;\n  private subscription?: Subscription;\n  /** If true, a button is in the query body, not a template*/\n  buttonMode: boolean;\n\n  constructor(private notify: UserNotifyService,\n              private changeDetector: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit() {\n    this.buttonMode = !this.body && !!this.button;\n    if (this.buttonMode) {\n      this.queryState = QueryComponentState.Ready;\n    }\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n\n  /** Quick way of checking if `this.query.queryState === QueryComponentState.Ready` */\n  public ready(): boolean {\n    return this.queryState === QueryComponentState.Ready;\n  }\n\n  /**\n   * Subscribe the query component to the observable\n   * @param query The observable\n   * @param success The function to be called if the query was successful\n   * @param error The function to be called if the query had an error\n   */\n  public listenTo(query: Observable, success?: (value: T) => void, error?: (error: any) => void): void {\n    this.queryState = QueryComponentState.Loading;\n    this.changeDetector.detectChanges();\n    this.subscription?.unsubscribe();\n    this.updateButton();\n\n    this.subscription = query.subscribe((value: T) => {\n      if (success) {\n        success(value);\n\n        // Check if the callback changed the query state, e.g. by calling setError()\n        if (this.queryState === QueryComponentState.Error) {\n          return;\n        }\n      }\n\n      this.queryState = QueryComponentState.Ready;\n      this.changeDetector.detectChanges();\n      this.updateButton();\n    }, err => {\n      if (error) {\n        error(err);\n      }\n\n      this.setError();\n      this.notify.notifyError(this.errorMessage, err);\n    });\n  }\n\n  /**\n   * Manually sets this query component to the error state.\n   * This may be useful if e.g. the query ran successfully, the contained data in it however is not valid.\n   */\n  public setError(): void {\n    this.queryState = QueryComponentState.Error;\n    this.changeDetector.detectChanges();\n    this.updateButton();\n  }\n\n  private updateButton(): void {\n    if (!this.buttonMode) {\n      return;\n    }\n\n    this.button.element.disabled = this.queryState === QueryComponentState.Loading;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QueryComponent.html":{"url":"components/QueryComponent.html","title":"component - QueryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  QueryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/utils/query-component/query.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is intended to be used in combination with an Observable.\nThe component expects that either an ng-template or a MatButton is in the body and that the appropriate directive\nis used on it (QueryBodyDirective with ng-template, QueryButtonDirective with button).\nOnce the appropriate function is called, the component subscribes to the observable, showing the user a loading\nindication and, if applicable, disables the button.\nOnce the query finished, the content in the ng-template is shown or the button is enabled again.\nIf the subscription yielded an error, a message is shown instead of the ng-template, or the button is re-enabled.\nNote that no verification has to be made if the query was successful, when using an ng-template.\nThe content of the ng-template is only executed once the #queryState is Ready.\nExample 1: Using ng-template\nThis example will show, instead of the content directly, a loading indicator as soon as the page is loaded.\n\n  \n    This will only be shown if the query was successful!\n     Not required! -->\n    Result is: {{this.data}}\n     -->\n  \n// ...\n\n@ViewChild(QueryComponent) query: QueryComponent;\n\n// ...\n\nngAfterViewInit() {\n  // Have to use ngAfterViewInit, otherwise query will be undefined!\n\n  this.query.listenTo(this.someObservable,\n    result => {\n      this.data = result;\n      console.log('Result callback');\n    },\n    error => {\n      console.log('Error callback');\n    }\n  );\n}Example 2: Using button\nThis example will subscribe to the observable as soon as the button is clicked.\nThe button is disabled and a loading indicator is shown as long as the subscription has not yielded a result.\n\n  \n    Do something that takes a while...\n  \n// ...\n\n@ViewChild(QueryComponent) query: QueryComponent;\n\n// ...\n\nonClick() {\n  this.query.listenTo(this.somethingThatTakesAWhile,\n    result => {\n      console.log('Result callback');\n    },\n    error => {\n      console.log('Error callback');\n    }\n  );\n}\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-query-component\n            \n\n            \n                styleUrls\n                query.component.scss\n            \n\n\n\n            \n                templateUrl\n                query.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                button\n                            \n                            \n                                buttonMode\n                            \n                            \n                                queryState\n                            \n                            \n                                    Private\n                                    Optional\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                listenTo\n                            \n                            \n                                    Public\n                                ready\n                            \n                            \n                                    Public\n                                setError\n                            \n                            \n                                    Private\n                                updateButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(notify: UserNotifyService, changeDetector: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/utils/query-component/query.component.ts:144\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Failed to run query!'\n                    \n                \n                        \n                            \n                                    Defined in src/app/utils/query-component/query.component.ts:134\n                            \n                        \n                \n                    \n                        Error message to be shown if the subscription failed\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        listenTo\n                        \n                    \n                \n            \n            \n                \n                    \n                    listenTo(query: Observable, success?: (value?: T) => void, error?: (error?: any) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/query-component/query.component.ts:173\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Subscribe the query component to the observable\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The observable\n\n                                    \n                                \n                                \n                                    success\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The function to be called if the query was successful\n\n                                    \n                                \n                                \n                                    error\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The function to be called if the query had an error\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ready\n                        \n                    \n                \n            \n            \n                \n                    \n                    ready()\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/query-component/query.component.ts:163\n                \n            \n\n\n            \n                \n                    Quick way of checking if this.query.queryState === QueryComponentState.Ready\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setError\n                        \n                    \n                \n            \n            \n                \n                    \n                    setError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/query-component/query.component.ts:206\n                \n            \n\n\n            \n                \n                    Manually sets this query component to the error state.\nThis may be useful if e.g. the query ran successfully, the contained data in it however is not valid.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/query-component/query.component.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryBodyDirective\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(QueryBodyDirective)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/utils/query-component/query.component.ts:135\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        button\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryButtonDirective\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(QueryButtonDirective)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/utils/query-component/query.component.ts:136\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buttonMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/query-component/query.component.ts:144\n                        \n                    \n\n            \n                \n                    If true, a button is in the query body, not a template\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryComponentState\n\n                    \n                \n                \n                    \n                        Default value : QueryComponentState.Loading\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/query-component/query.component.ts:141\n                        \n                    \n\n            \n                \n                    The current state of the query\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/query-component/query.component.ts:142\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  Input,\n  OnDestroy,\n  TemplateRef\n} from '@angular/core';\nimport {Observable, Subscription} from 'rxjs';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {MatButton} from '@angular/material/button';\n\n/**\n * The current state of the query\n */\nexport enum QueryComponentState {\n  /** The query was executed successfully */\n  Ready,\n  /** The query has not yet finished */\n  Loading,\n  /** The query returned an error */\n  Error\n}\n\n/**\n * This directive is used on an `ng-template`, to indicate that the contents of it should be shown once\n * the query finished successfully\n */\n@Directive({\n  selector: '[appQueryBody]'\n})\nexport class QueryBodyDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used on a `button`, to inidcate that the {@link QueryComponent} should manage the state of this\n * button\n */\n@Directive({\n  selector: '[appQueryButton]'\n})\nexport class QueryButtonDirective {\n  constructor(public element: MatButton) {\n  }\n}\n\n/**\n * This component is intended to be used in combination with an `Observable`.\n * The component expects that either an `ng-template` or a `MatButton` is in the body and that the appropriate directive\n * is used on it ({@link QueryBodyDirective} with `ng-template`, {@link QueryButtonDirective} with `button`).\n * Once the appropriate function is called, the component subscribes to the observable, showing the user a loading\n * indication and, if applicable, disables the `button`.\n * Once the query finished, the content in the `ng-template` is shown or the button is enabled again.\n * If the subscription yielded an error, a message is shown instead of the `ng-template`, or the button is re-enabled.\n * Note that no verification has to be made if the query was successful, when using an `ng-template`.\n * The content of the `ng-template` is only executed once the {@link #queryState} is `Ready`.\n *\n * #### Example 1: Using `ng-template`\n * This example will show, instead of the content directly, a loading indicator as soon as the page is loaded.\n * ```html\n * \n *   \n *     This will only be shown if the query was successful!\n *      Not required! -->\n *     Result is: {{this.data}}\n *      -->\n *   \n * \n * ```\n *\n * ```ts\n * // ...\n *\n * @ViewChild(QueryComponent) query: QueryComponent;\n *\n * // ...\n *\n * ngAfterViewInit() {\n *   // Have to use ngAfterViewInit, otherwise query will be undefined!\n *\n *   this.query.listenTo(this.someObservable,\n *     result => {\n *       this.data = result;\n *       console.log('Result callback');\n *     },\n *     error => {\n *       console.log('Error callback');\n *     }\n *   );\n * }\n * ```\n *\n * #### Example 2: Using `button`\n * This example will subscribe to the observable as soon as the button is clicked.\n * The button is disabled and a loading indicator is shown as long as the subscription has not yielded a result.\n * ```html\n * \n *   \n *     Do something that takes a while...\n *   \n * \n * ```\n *\n * ```ts\n * // ...\n *\n * @ViewChild(QueryComponent) query: QueryComponent;\n *\n * // ...\n *\n * onClick() {\n *   this.query.listenTo(this.somethingThatTakesAWhile,\n *     result => {\n *       console.log('Result callback');\n *     },\n *     error => {\n *       console.log('Error callback');\n *     }\n *   );\n * }\n * ```\n */\n@Component({\n  templateUrl: 'query.component.html',\n  selector: 'app-query-component',\n  styleUrls: ['query.component.scss']\n})\nexport class QueryComponent implements OnDestroy, AfterViewInit {\n  /** Error message to be shown if the subscription failed */\n  @Input() errorMessage = 'Failed to run query!';\n  @ContentChild(QueryBodyDirective) body: QueryBodyDirective;\n  @ContentChild(QueryButtonDirective) button: QueryButtonDirective;\n\n  /** @ignore */\n  readonly State = QueryComponentState;\n  /** The current state of the query */\n  queryState: QueryComponentState = QueryComponentState.Loading;\n  private subscription?: Subscription;\n  /** If true, a button is in the query body, not a template*/\n  buttonMode: boolean;\n\n  constructor(private notify: UserNotifyService,\n              private changeDetector: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit() {\n    this.buttonMode = !this.body && !!this.button;\n    if (this.buttonMode) {\n      this.queryState = QueryComponentState.Ready;\n    }\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n\n  /** Quick way of checking if `this.query.queryState === QueryComponentState.Ready` */\n  public ready(): boolean {\n    return this.queryState === QueryComponentState.Ready;\n  }\n\n  /**\n   * Subscribe the query component to the observable\n   * @param query The observable\n   * @param success The function to be called if the query was successful\n   * @param error The function to be called if the query had an error\n   */\n  public listenTo(query: Observable, success?: (value: T) => void, error?: (error: any) => void): void {\n    this.queryState = QueryComponentState.Loading;\n    this.changeDetector.detectChanges();\n    this.subscription?.unsubscribe();\n    this.updateButton();\n\n    this.subscription = query.subscribe((value: T) => {\n      if (success) {\n        success(value);\n\n        // Check if the callback changed the query state, e.g. by calling setError()\n        if (this.queryState === QueryComponentState.Error) {\n          return;\n        }\n      }\n\n      this.queryState = QueryComponentState.Ready;\n      this.changeDetector.detectChanges();\n      this.updateButton();\n    }, err => {\n      if (error) {\n        error(err);\n      }\n\n      this.setError();\n      this.notify.notifyError(this.errorMessage, err);\n    });\n  }\n\n  /**\n   * Manually sets this query component to the error state.\n   * This may be useful if e.g. the query ran successfully, the contained data in it however is not valid.\n   */\n  public setError(): void {\n    this.queryState = QueryComponentState.Error;\n    this.changeDetector.detectChanges();\n    this.updateButton();\n  }\n\n  private updateButton(): void {\n    if (!this.buttonMode) {\n      return;\n    }\n\n    this.button.element.disabled = this.queryState === QueryComponentState.Loading;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n    \n  \n\n\n\n  \n    \n  \n\n  \n    \n      {{errorMessage}}\n    \n  \n\n  \n    \n      \n      Loading...\n    \n  \n\n\n\n\n    \n\n    \n                \n                    query.component.scss\n                \n                .container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  margin: 10px;\n}\n\n.error {\n  border: red 1px solid;\n  border-radius: 10px;\n  padding: 18px;\n  width: fit-content;\n  background-color: rgba(255, 0, 0, 0.1);\n}\n\n.load-container{\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  width: fit-content;\n  height: fit-content;\n  background-color: #ababab;\n  padding: 10px 16px 10px 16px;\n  border-radius: 100px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  font-weight: 500;\n  color: whitesmoke;\n}\n\n.error-text {\n  color: red;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{errorMessage}}                        Loading...      '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'QueryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryListParams.html":{"url":"interfaces/QueryListParams.html","title":"interface - QueryListParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QueryListParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/queries/util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            after\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            before\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            filterBy\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            first\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            last\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        after\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        after:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        before\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        before:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filterBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filterBy:     F\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     F\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\n\n// FIXME: why is this an observable? during runtime, we only ever observe one update emitted from\n//  the observable, yet the Apollo API uses this everywhere\n// TODO: investigate\nexport function promisifyApolloFetch(f: Observable): Promise {\n  return new Promise((resolve, reject) => {\n    f.subscribe(({ data }) => resolve(data), error => reject(error));\n  });\n}\n\nexport interface QueryListParams {\n  after?: string;\n  before?: string;\n  filterBy?: F;\n  first?: number;\n  last?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/register/register.component.ts\n\n\n\n    \n        Description\n    \n    \n        Allows the user to register for a Gropius account.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmValidator\n                            \n                            \n                                isLoading\n                            \n                            \n                                publicClientName\n                            \n                            \n                                userNameAsyncValidator\n                            \n                            \n                                validateForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                backToLogin\n                            \n                            \n                                resetForm\n                            \n                            \n                                submitForm\n                            \n                            \n                                validateConfirmPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, apollo: Apollo, router: Router, registerUserMutation: RegisterUserGQL, userAvailablyQuery: CheckUsernameGQL, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/register/register.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apollo\n                                                  \n                                                        \n                                                                    Apollo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        registerUserMutation\n                                                  \n                                                        \n                                                                        RegisterUserGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userAvailablyQuery\n                                                  \n                                                        \n                                                                        CheckUsernameGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        backToLogin\n                        \n                    \n                \n            \n            \n                \nbackToLogin(e: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:131\n                \n            \n\n\n            \n                \n                    Loads the login page.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nEvent affecting the form reset.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetForm\n                        \n                    \n                \n            \n            \n                \nresetForm(e: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:118\n                \n            \n\n\n            \n                \n                    Resets form fields and marks all controls as pristine.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nEvent affecting the form reset.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm(value: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:95\n                \n            \n\n\n            \n                \n                    Given data needed for account creation\nand carries out the creation by issuing a mutation to the backend.\nIf successfull, the user is redirected to the Login page.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nData (from the register form) that is handled.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateConfirmPassword\n                        \n                    \n                \n            \n            \n                \nvalidateConfirmPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:85\n                \n            \n\n\n            \n                \n                    Recalculates the value and validation status of the password confirmation field.\nThis is triggered whenever the user changes the password in the register form.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:67\n                        \n                    \n\n            \n                \n                    Checks that the password in the Confirm Password field\nmatches the password in the Password field.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    control\n                                                    \n                                                            Password that is handled.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        publicClientName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.publicClientName\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userNameAsyncValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:44\n                        \n                    \n\n            \n                \n                    Checks with backend to ensure that entered username is valid.\nA username is invalid when its taken or contains symbols like '*', etc.\ncontrol is not a valid username. Emits null when username is valid\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    control\n                                                    \n                                                            \nUsername that is handled.\n\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, ValidationErrors, Validators} from '@angular/forms';\nimport {Apollo} from 'apollo-angular';\nimport {Observable, Observer} from 'rxjs';\nimport {environment} from '@environments/environment';\nimport {CheckUsernameGQL, RegisterUserGQL, RegisterUserInput} from 'src/generated/public-graphql';\nimport {Router} from '@angular/router';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\n\n/**\n * Allows the user to register for a Gropius account.\n */\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n\n  validateForm: FormGroup;\n  isLoading = false;\n  publicClientName = environment.publicClientName;\n\n  constructor(private fb: FormBuilder, private apollo: Apollo, private router: Router,\n              private registerUserMutation: RegisterUserGQL, private userAvailablyQuery: CheckUsernameGQL,\n              private notify: UserNotifyService) {\n    this.registerUserMutation.client = this.publicClientName;\n    this.userAvailablyQuery.client = this.publicClientName;\n    this.validateForm = this.fb.group({\n      username: ['', [Validators.required], [this.userNameAsyncValidator]],\n      email: ['', [Validators.email, Validators.required]],\n      password: ['', [Validators.required]],\n      confirm: ['', [this.confirmValidator]],\n    });\n  }\n\n  /**\n   * Checks with backend to ensure that entered username is valid.\n   * A username is invalid when its taken or contains symbols like '*', etc.\n   * @param control - Username that is handled.\n   * @returns Observable emitting values indicating error when string entered in\n   * control is not a valid username. Emits null when username is valid\n   */\n  userNameAsyncValidator = (control: FormControl) =>\n   new Observable((observer: Observer) => {\n     this.userAvailablyQuery.fetch({username: control.value}).subscribe(({data}) => {\n\n       // case: username already taken\n       // => marks event as error\n       if (!data.checkUsername) {\n         // returns `{error: true}` to mark event as an error\n         observer.next({error: true, duplicated: true});\n       } else {\n         observer.next(null);\n       }\n       observer.complete();\n     }, (error) => {\n       this.notify.notifyError('Failed to verify user name!', error);\n     });\n   });\n\n  /**\n   * Checks that the password in the Confirm Password field \n   * matches the password in the Password field.\n   * @param control Password that is handled.\n   */\n  confirmValidator = (control: FormControl): { [s: string]: boolean } => {\n\n    // case: no password given\n    if (!control.value) {\n      return {error: true, required: true};\n    }\n    \n    // case: password does not match\n    else if (control.value !== this.validateForm.controls.password.value) {\n      return {confirm: true, error: true};\n    }\n    return {};\n  };\n\n  /**\n   * Recalculates the value and validation status of the password confirmation field.\n   * This is triggered whenever the user changes the password in the register form.\n   */\n  validateConfirmPassword(): void {\n    setTimeout(() => this.validateForm.controls.confirm.updateValueAndValidity());\n  }\n\n  /**\n   * Given data needed for account creation\n   * and carries out the creation by issuing a mutation to the backend. \n   * If successfull, the user is redirected to the Login page.\n   * @param value - Data (from the register form) that is handled.\n   */\n  submitForm(value: { username: string; email: string; password: string; confirm: string }): void {\n    for (const key of Object.keys(this.validateForm.controls)) {\n      this.validateForm.controls[key].markAsDirty();\n      this.validateForm.controls[key].updateValueAndValidity();\n    }\n    const input: RegisterUserInput = {\n      username: value.username,\n      displayName: value.username,\n      password: value.password,\n      email: value.email\n    };\n\n    this.registerUserMutation.mutate({input}).subscribe(({data}) => {\n      this.router.navigate(['login']);\n    }, (error) => {\n      this.notify.notifyError('Failed to register the user!', error);\n    });\n  }\n\n  /**\n   * Resets form fields and marks all controls as pristine.\n   * @param e - Event affecting the form reset.\n   */\n  resetForm(e: MouseEvent): void {\n    e.preventDefault();\n    this.validateForm.reset();\n    for (const key of Object.keys(this.validateForm.controls)) {\n      this.validateForm.controls[key].markAsPristine();\n      this.validateForm.controls[key].updateValueAndValidity();\n    }\n  }\n  \n  /**\n   * Loads the login page.\n   * @param e - Event affecting the form reset.\n   */\n  backToLogin(e: MouseEvent): void {\n    e.preventDefault();\n    this.router.navigate(['login']);\n  }\n}\n\n    \n\n    \n        \n\n  \n\n    \n\n      \n      \n        \n      \n\n      \n      \n        Register\n      \n\n    \n\n    \n\n      \n      \n\n        \n        \n          Username\n        \n\n        \n        \n          \n          \n            \n              Please enter a Username!\n            \n            \n              This Username is taken!\n            \n          \n        \n      \n\n      \n      \n\n        \n        \n          Email\n        \n\n        \n        \n          \n          \n            \n              Please enter a valid Email!\n            \n            \n              Please enter your Email!\n            \n          \n        \n      \n\n      \n      \n\n        \n        \n          Password\n        \n\n        \n        \n          \n        \n      \n\n      \n      \n\n        \n        \n          Confirm Password\n        \n\n        \n        \n          \n          \n            \n              Please enter your Password!\n            \n            \n              Passwords do not match!\n            \n          \n        \n      \n\n      \n      \n\n        \n        \n\n          \n          Register\n\n          \n          Reset\n\n          \n          Back\n        \n      \n    \n\n  \n\n\n    \n\n    \n                \n                    ./register.component.css\n                \n                \n      [nz-form] {\n        max-width: 600px;\n      }\n\n      button {\n        margin-left: 8px;\n      }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    Register                                                    Username                                                                      Please enter a Username!                                      This Username is taken!                                                                          Email                                                                      Please enter a valid Email!                                      Please enter your Email!                                                                          Password                                                                                      Confirm Password                                                                      Please enter your Password!                                      Passwords do not match!                                                                                    Register                    Reset                    Back                    '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RelationEdge.html":{"url":"interfaces/RelationEdge.html","title":"interface - RelationEdge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RelationEdge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/issue-graph-nodes.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Edge\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            sourceIssues\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sourceIssues\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sourceIssues:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {GraphComponent, GraphInterface} from '@app/data/issue-graph/graph-data';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\n\nexport {\n  IssueNode, ComponentNode, InterfaceNode, IssueGroupContainerNode, RelationEdge,\n  createComponentNode, createInterfaceNode, createIssueGroupContainerNode, createIssueFolderNode,\n  createRelationEdge, createConsumptionEdge, createInterfaceProvisionEdge,\n  Position,\n  getIssueFolderId\n};\n\nexport enum NodeType {\n  Component = 'component',\n  Interface = 'interface',\n  InterfaceConsumer = 'interface-connect',\n  IssueGroupContainer = 'issue-group-container'\n}\n\n/**\n * This file includes type definitions and creation functions (think constructors)\n * for nodes and edges that are added to the graph editor in order to visualize the project.\n * Since the data that is stored with these differs based on what they represent (e.g.\n * interface vs component node) we give each their own type. We do this by extending\n * the Node class or the Edge class of the grapheditor. These classes are instantiated\n * via calls to the contained create* functions within the drawGraph method of the IssueGraphComponent.\n */\n\ninterface IssueNode extends Node {\n  id: string;\n  title: string;\n  issueGroupContainer?: IssueGroupContainerNode;\n}\n\ninterface ComponentNode extends IssueNode {\n  data: GraphComponent;\n}\n\nfunction createComponentNode(component: GraphComponent, position: Position): ComponentNode {\n  return {\n    ...(position || zeroPosition),\n    id: component.id,\n    title: component.name,\n    type: NodeType.Component,\n    data: component\n  };\n}\n\ninterface InterfaceNode extends IssueNode {\n  offeredById: string;\n}\n\nfunction createInterfaceNode(intrface: GraphInterface, position: Position): InterfaceNode {\n  return {\n    ...(position || zeroPosition),\n    id: intrface.id,\n    title: intrface.name,\n    type: NodeType.Interface,\n    offeredById: intrface.offeredBy,\n  };\n}\n\ninterface IssueGroupContainerNode extends Node {\n  position: string;\n  issueGroupNodeIds: Set;\n}\n\nfunction createIssueGroupContainerNode(node: IssueNode): IssueGroupContainerNode {\n  return {\n    id: `${node.id}__issue-group-container`,\n    type: NodeType.IssueGroupContainer,\n    dynamicTemplate: 'issue-group-container',\n    x: 0,\n    y: 0,\n    position: 'bottom',\n    issueGroupNodeIds: new Set(),\n  };\n}\n\ninterface IssueFolderNode extends Node {\n  type: IssueCategory;\n  issueCount: string;\n}\n\nfunction createIssueFolderNode(node: IssueNode, issueCategory: IssueCategory, issueCount: string): IssueFolderNode {\n  return {\n    id: getIssueFolderId(node.id, issueCategory),\n    type: issueCategory,\n    x: 0,\n    y: 0,\n    issues: new Set(),\n    issueCount\n  };\n}\n\ninterface RelationEdge extends Edge {\n  sourceIssues: Set;\n}\n\nfunction createRelationEdge(sourceId: string, targetId: string, edgeType = folderEdgeTypes.RelatedTo): RelationEdge {\n  return {\n    id: `s${sourceId}t${targetId}r${edgeType}`,\n    source: sourceId,\n    target: targetId,\n    type: folderEdgeTypes.RelatedTo,\n    markerEnd: {\n      template: 'arrow',\n      relativeRotation: 0,\n    },\n    dragHandles: [],\n    sourceIssues: new Set()\n  };\n}\n\nfunction createConsumptionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.InterfaceConsumer,\n    markerEnd: {\n      template: 'interface-connector',\n      relativeRotation: 0,\n    },\n  };\n}\n\nfunction createInterfaceProvisionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.Interface,\n    dragHandles: [],\n  };\n}\n\nfunction getIssueFolderId(id: string, issueCategory: IssueCategory): string {\n  return `${id}__${issueCategory}`;\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst zeroPosition = {x: 0, y: 0};\n\nenum folderEdgeTypes {\n  RelatedTo = 'relatedTo',\n  Depends = 'dependency',\n  Duplicates = 'duplicate'\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RemoveDialogComponent.html":{"url":"components/RemoveDialogComponent.html","title":"component - RemoveDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RemoveDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/remove-dialog/remove-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is a confirmation dialog for anything that involves deleting\nExample\n// ...\n\nconstructor(private dialog: MatDialog, ...)\n\n// ...\n\nconst dialogRef = this.dialog.open(RemoveDialogComponent,\n{\n  data: {\n    title: 'This is the title of the dialog',\n    messages: ['Every entry is a new line',\n               'This is the next line',\n               ' Lines beginning with a space will be indented'],\n    verificationName: 'In order for the user to be able to click the confirm button, this text has to be typed',\n    confirmButtonText: 'This is the text of the confirm button'\n  }\n});\n\ndialogRef.afterClosed().subscribe(confirm => {\n  if (confirm) {\n    console.log('Deleted!');\n  } else {\n    console.log('Not deleted!');\n  }\n});\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-remove-dialog\n            \n\n            \n                styleUrls\n                ./remove-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./remove-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                matchValidator\n                            \n                            \n                                verificationNameInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onDeleteClick\n                            \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: DialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/remove-dialog/remove-dialog.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteClick\n                        \n                    \n                \n            \n            \n                \nonDeleteClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/remove-dialog/remove-dialog.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/remove-dialog/remove-dialog.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/remove-dialog/remove-dialog.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/remove-dialog/remove-dialog.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        matchValidator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ValidatorFn\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/remove-dialog/remove-dialog.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verificationNameInput\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', this.matchValidator)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/remove-dialog/remove-dialog.component.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormControl, ValidatorFn} from '@angular/forms';\n\n/**\n * This component is a confirmation dialog for anything that involves deleting\n *\n * #### Example\n * ```ts\n * // ...\n *\n * constructor(private dialog: MatDialog, ...)\n *\n * // ...\n *\n * const dialogRef = this.dialog.open(RemoveDialogComponent,\n * {\n *   data: {\n *     title: 'This is the title of the dialog',\n *     messages: ['Every entry is a new line',\n *                'This is the next line',\n *                ' Lines beginning with a space will be indented'],\n *     verificationName: 'In order for the user to be able to click the confirm button, this text has to be typed',\n *     confirmButtonText: 'This is the text of the confirm button'\n *   }\n * });\n *\n * dialogRef.afterClosed().subscribe(confirm => {\n *   if (confirm) {\n *     console.log('Deleted!');\n *   } else {\n *     console.log('Not deleted!');\n *   }\n * });\n * ```\n */\n@Component({\n  selector: 'app-remove-dialog',\n  templateUrl: './remove-dialog.component.html',\n  styleUrls: ['./remove-dialog.component.scss']\n})\nexport class RemoveDialogComponent implements OnInit {\n  matchValidator: ValidatorFn = control => {\n    return control.value === this.data.verificationName ? null : {'Names don\\'t match': true};\n  }\n\n  verificationNameInput = new FormControl('', this.matchValidator);\n\n  constructor(public dialogRef: MatDialogRef,\n              @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n  }\n\n  ngOnInit(): void {\n    this.verificationNameInput.markAsTouched();\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close(false);\n  }\n\n  onDeleteClick(): void {\n    this.dialogRef.close(true);\n  }\n}\n\nexport interface DialogData {\n  title: string;\n  /** The list of lines shown in the dialog. If a line starts with a space, the line will be indented */\n  messages: Array;\n  /** If set, shows a text box that forces the user to type the specified text before being able to click the confirm button */\n  verificationName?: string;\n  /** If set, shows this text as the text in the confirm button. If not set, button shows 'Delete' */\n  confirmButtonText?: string;\n}\n\n    \n\n    \n        \n  delete\n  {{data.title}}\n\n\n\n  \n    \n      &nbsp;&nbsp;&nbsp;&nbsp;\n      {{message.startsWith(' ') ? message.substring(1) : message}}\n    \n  \n  \n    \n      Type &quot;{{data.verificationName}}&quot; to confirm:\n      \n        Confirm name\n        \n        Names don't match!\n      \n    \n\n    \n      \n    \n  \n\n\n\n  Cancel\n  \n    {{this.data.confirmButtonText ? this.data.confirmButtonText : 'Delete'}}\n  \n\n\n    \n\n    \n                \n                    ./remove-dialog.component.scss\n                \n                .mat-dialog-content{\n  display: flex;\n  flex-direction: column;\n}\n\n.content {\n  display: inline-block;\n  align-self: center;\n  place-self: center;\n  vertical-align: middle;\n  border-top: lightgray;\n  border-top-style: solid;\n  border-bottom: lightgray;\n  border-bottom-style: solid;\n  font-weight: bold;\n  font-size: 1.1em;\n  padding: 8px;\n  margin: 0;\n  width: 100%;\n  overflow: auto;\n  flex: 1 1 auto;\n  white-space: nowrap;\n}\n\n.title{\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n\n.delete-icon {\n  flex: 0 0 auto;\n}\n\n.mat-success {\n  background-color: green;\n  color: #fff;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  delete  {{data.title}}                      {{message.startsWith(\\' \\') ? message.substring(1) : message}}                  Type \"{{data.verificationName}}\" to confirm:              Confirm name                Names don\\'t match!                            Cancel      {{this.data.confirmButtonText ? this.data.confirmButtonText : \\'Delete\\'}}  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'RemoveDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RemoveProjectMemberComponentComponent.html":{"url":"components/RemoveProjectMemberComponentComponent.html","title":"component - RemoveProjectMemberComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RemoveProjectMemberComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/remove-project-member-component/remove-project-member-component.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-remove-project-member-component\n            \n\n            \n                styleUrls\n                ./remove-project-member-component.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./remove-project-member-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                selectedUsers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onDeleteClick\n                            \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/remove-project-member-component/remove-project-member-component.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteClick\n                        \n                    \n                \n            \n            \n                \nonDeleteClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/remove-project-member-component/remove-project-member-component.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/remove-project-member-component/remove-project-member-component.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/remove-project-member-component/remove-project-member-component.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/remove-project-member-component/remove-project-member-component.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/remove-project-member-component/remove-project-member-component.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Inject } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-remove-project-member-component',\n  templateUrl: './remove-project-member-component.component.html',\n  styleUrls: ['./remove-project-member-component.component.scss']\n})\nexport class RemoveProjectMemberComponentComponent implements OnInit {\n\n\n  constructor(public dialogRef: MatDialogRef, @Inject(MAT_DIALOG_DATA) public data) { }\n\n  //users selected in the dialog to be deleted\n  selectedUsers = [];\n\n  ngOnInit(): void {\n  }\n\n  onNoClick() {\n    this.dialogRef.close();\n  }\n\n  onDeleteClick() {\n    const data = {usersToDelete: this.selectedUsers};\n    this.dialogRef.close(data);\n  }\n\n}\n\n    \n\n    \n        Remove Project Member\n\n\n  \n    \n    \n    \n\n      {{user.displayName}}\n    \n  \n\n\n\n  Cancel\n  Delete User \n\n\n    \n\n    \n                \n                    ./remove-project-member-component.component.scss\n                \n                .dialog-content {\n    min-height: 400px;\n    min-width: 400px;\n    max-width: 600px;\n  }\n  .actions {\n    float:right\n  }\n  .stretch {\n    width: 100%;\n  }\n\n  .mat-success {\n    background-color: green;\n    color: #fff;\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Remove Project Member                    {{user.displayName}}        Cancel  Delete User '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'RemoveProjectMemberComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SetEditorComponent.html":{"url":"components/SetEditorComponent.html","title":"component - SetEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SetEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/set-editor/set-editor.component.ts\n\n\n\n    \n        Description\n    \n    \n        The set editor displays and edits a list of items (used in the issue detail sidebar).\n\nThe list of selected items listSet may be either a local array of IDs or a ListId.\nWhen editing, items may be selected from a list of all available items #listAll.\nThe list of items may be searched using a search box (#makeFilter and #scoreKeys).\nUpon closing the edit dialog, a changeset of additions and deletions is passed to a callback (#applyChangeset).\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-set-editor\n            \n\n            \n                styleUrls\n                ./set-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./set-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                beginEditing\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                applyChangeset\n                            \n                            \n                                createItem\n                            \n                            \n                                editable\n                            \n                            \n                                emptyResultsLabel\n                            \n                            \n                                emptySuggestionsLabel\n                            \n                            \n                                hydrate\n                            \n                            \n                                itemOps\n                            \n                            \n                                listAll\n                            \n                            \n                                listSet\n                            \n                            \n                                makeFilter\n                            \n                            \n                                scoreKeys\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deleteItem\n                            \n                            \n                                editItem\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, dialogService: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/set-editor/set-editor.component.ts:79\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        applyChangeset\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:42\n                            \n                        \n                \n                    \n                        Callback for applying a changeset to the listSet.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        createItem\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:59\n                            \n                        \n                \n                    \n                        Callback to create a new item (enabled using itemOps). If the promise returns a node ID, it will be added to the set.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:48\n                            \n                        \n                \n                    \n                        Set editable to false to just display items in the set, without being able to edit them.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        emptyResultsLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'No results'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:52\n                            \n                        \n                \n                    \n                        Set to override the “no results” text in the dialog. Appears when there is a search query.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        emptySuggestionsLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'No suggestions'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:50\n                            \n                        \n                \n                    \n                        Set to override the “no results” text in the dialog. Appears only when there is no search query.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hydrate\n                    \n                \n                \n                    \n                        Type :         Promise>\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:54\n                            \n                        \n                \n                    \n                        Pass a HydrateList object to load the listSet with existing data instead of sending a request to the server.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        itemOps\n                    \n                \n                \n                    \n                        Type :         ItemOps\n\n                    \n                \n                \n                    \n                        Default value : 'none'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:56\n                            \n                        \n                \n                    \n                        Additional operations available from the set editor.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        listAll\n                    \n                \n                \n                    \n                        Type :     ListId | SetMultiSource\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:40\n                            \n                        \n                \n                    \n                        The list of all possible items. Should be a superset of listSet, as otherwise the user may not be able to deselect items.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        listSet\n                    \n                \n                \n                    \n                        Type :     ListId | NodeId[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:38\n                            \n                        \n                \n                    \n                        The list that contains all nodes that are part of the set. string[] is treated as local state.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        makeFilter\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:44\n                            \n                        \n                \n                    \n                        Callback for making a filter for the given search query.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        scoreKeys\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:46\n                            \n                        \n                \n                    \n                        Object keys used for scoring a search result. (e.g. 'title') Should correspond to fields searched in makeFilter.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deleteItem\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:63\n                            \n                        \n                \n                    \n                        Callback to delete an item.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editItem\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:61\n                            \n                        \n                \n                    \n                        Callback to edit an item.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        beginEditing\n                        \n                    \n                \n            \n            \n                \nbeginEditing()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor.component.ts:147\n                \n            \n\n\n            \n                \n                    Opens the editor dialog.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  ContentChild,\n  ElementRef, EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit, Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport { ListId, NodeId } from '@app/data-dgql/id';\nimport { DataList, HydrateList } from '@app/data-dgql/query';\nimport DataService from '@app/data-dgql';\nimport { Subscription } from 'rxjs';\nimport { ItemDirective } from '@app/components/item.directive';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SetEditorDialogComponent, SetEditorDialogData, SetMultiSource } from './set-editor-dialog.component';\n\ntype ItemOps = 'none' | 'edit' | 'create-edit' | 'create-edit-delete';\n\n/**\n * The set editor displays and edits a list of items (used in the issue detail sidebar).\n *\n * - The list of selected items {@link listSet} may be either a local array of IDs or a {@link ListId}.\n * - When editing, items may be selected from a list of all available items {@link #listAll}.\n * - The list of items may be searched using a search box ({@link #makeFilter} and {@link #scoreKeys}).\n * - Upon closing the edit dialog, a changeset of additions and deletions is passed to a callback ({@link #applyChangeset}).\n */\n@Component({\n  selector: 'app-set-editor',\n  templateUrl: './set-editor.component.html',\n  styleUrls: ['./set-editor.component.scss']\n})\nexport class SetEditorComponent implements OnInit, OnChanges, OnDestroy {\n  /** The list that contains all nodes that are part of the set. string[] is treated as local state. */\n  @Input() listSet: ListId | NodeId[];\n  /** The list of all possible items. Should be a superset of listSet, as otherwise the user may not be able to deselect items. */\n  @Input() listAll: ListId | SetMultiSource;\n  /** Callback for applying a changeset to the listSet. */\n  @Input() applyChangeset: (additions: NodeId[], deletions: NodeId[]) => Promise;\n  /** Callback for making a filter for the given search query. */\n  @Input() makeFilter: (searchQuery: string) => F;\n  /** Object keys used for scoring a search result. (e.g. 'title') Should correspond to fields searched in makeFilter. */\n  @Input() scoreKeys: string[];\n  /** Set editable to false to just display items in the set, without being able to edit them. */\n  @Input() editable = true;\n  /** Set to override the “no results” text in the dialog. Appears only when there is no search query. */\n  @Input() emptySuggestionsLabel = 'No suggestions';\n  /** Set to override the “no results” text in the dialog. Appears when there is a search query. */\n  @Input() emptyResultsLabel = 'No results';\n  /** Pass a HydrateList object to load the listSet with existing data instead of sending a request to the server. */\n  @Input() hydrate: Promise>;\n  /** Additional operations available from the set editor. */\n  @Input() itemOps: ItemOps = 'none';\n\n  /** Callback to create a new item (enabled using itemOps). If the promise returns a node ID, it will be added to the set. */\n  @Input() createItem: () => Promise;\n  /** Callback to edit an item. */\n  @Output() editItem = new EventEmitter();\n  /** Callback to delete an item. */\n  @Output() deleteItem = new EventEmitter();\n\n  /** @ignore */\n  @ViewChild('titleText') titleText: ElementRef;\n  /** @ignore */\n  @ContentChild(ItemDirective, { read: TemplateRef }) itemTemplate;\n\n  /** @ignore */\n  public listSet$: DataList;\n  /** @ignore */\n  private listSetSub: Subscription;\n\n  /**\n   * @ignore\n   * If true, the listSet$ variable is null and listSet contains an array of node IDs.\n   */\n  public isLocalSet = false;\n\n  constructor(\n    private dataService: DataService,\n    private dialogService: MatDialog\n  ) {}\n\n  /** @ignore */\n  reloadListSet() {\n    if (Array.isArray(this.listSet)) {\n      this.isLocalSet = true;\n      if (this.listSet$) {\n        this.listSetSub.unsubscribe();\n        this.listSet$ = null;\n      }\n    } else {\n      this.isLocalSet = false;\n      this.listSet$ = this.dataService.getList(this.listSet);\n      this.listSetSub = this.listSet$.subscribe();\n    }\n  }\n\n  ngOnInit() {\n    this.reloadListSet();\n    if (this.hydrate && this.listSet$) {\n      this.listSet$.hydrateInitial(this.hydrate);\n    }\n  }\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.listSet) {\n      const newValue = changes.listSet.currentValue;\n      if (this.isLocalSet !== (typeof newValue !== 'string')) {\n        this.reloadListSet();\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.listSetSub?.unsubscribe();\n  }\n\n  /**\n   * @ignore\n   * This method is needed to satisfy static type checking bounds\n   */\n  getListSetLength(): number {\n    if (this.isLocalSet) {\n      return (this.listSet as NodeId[]).length;\n    }\n    throw new Error('bad state');\n  }\n\n  /** @ignore */\n  private onDialogApplyChangeset = (additions: NodeId[], deletions: NodeId[]): Promise => {\n    return this.applyChangeset(additions, deletions);\n  }\n\n  /** @ignore */\n  private onDialogCreateItem = () => this.createItem();\n  /** @ignore */\n  private onDialogEditItem = (item) => this.editItem.emit(item);\n  /** @ignore */\n  private onDialogDeleteItem = (item) => this.deleteItem.emit(item);\n\n  /**\n   * @internal\n   * Opens the editor dialog.\n   */\n  beginEditing() {\n    this.dialogService.open>(SetEditorDialogComponent, {\n      width: '400px',\n      data: {\n        title: this.titleText?.nativeElement.textContent || '',\n        listSet: this.listSet,\n        listAll: this.listAll,\n        itemTemplate: this.itemTemplate,\n        applyChangeset: this.onDialogApplyChangeset,\n        makeFilter: this.makeFilter,\n        scoreKeys: this.scoreKeys,\n        emptySuggestionsLabel: this.emptySuggestionsLabel,\n        emptyResultsLabel: this.emptyResultsLabel,\n        createItem: this.itemOps.includes('create') ? this.onDialogCreateItem : null,\n        editItem: this.itemOps.includes('edit') ? this.onDialogEditItem : null,\n        deleteItem: this.itemOps.includes('delete') ? this.onDialogDeleteItem : null\n      } as SetEditorDialogData\n    });\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n        \n            settings\n        \n    \n    \n        \n            \n                \n                    \n                        \n                    \n                \n            \n        \n        \n            \n                \n            \n            \n                ...\n            \n        \n        \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./set-editor.component.scss\n                \n                :host {\n  display: block;\n}\n\n.app-set-editor {\n  .set-editor-title {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    min-height: 36px;\n\n    .title-text-container {\n      font-weight: bold;\n      line-height: 1.5;\n    }\n  }\n\n  .items-empty {\n    opacity: 0.5;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    settings                                                                                                                                                                                                                                    ...                                                    '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'SetEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SetEditorDialogComponent.html":{"url":"components/SetEditorDialogComponent.html","title":"component - SetEditorDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SetEditorDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/set-editor/set-editor-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        This is an internal component used in the set editor.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-set-editor-dialog\n            \n\n            \n                styleUrls\n                ./set-editor-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./set-editor-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                additions\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Private\n                                deletions\n                            \n                            \n                                    Public\n                                isLocalSet\n                            \n                            \n                                    Public\n                                listAll\n                            \n                            \n                                    Public\n                                listSet$\n                            \n                            \n                                    Private\n                                listSetSub\n                            \n                            \n                                    Public\n                                localSet\n                            \n                            \n                                    Public\n                                searchQuery\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                apply\n                            \n                            \n                                createItem\n                            \n                            \n                                getEncodedId\n                            \n                            \n                                getNodeId\n                            \n                            \n                                isInSet\n                            \n                            \n                                searchQueryDidChange\n                            \n                            \n                                toggleInSet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, notifyService: UserNotifyService, dialogRef: MatDialogRef>, data: SetEditorDialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:199\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notifyService\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    SetEditorDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        apply\n                        \n                    \n                \n            \n            \n                \napply()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:268\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createItem\n                        \n                    \n                \n            \n            \n                \ncreateItem()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:281\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEncodedId\n                        \n                    \n                \n            \n            \n                \ngetEncodedId(item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:239\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NodeIdEnc\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNodeId\n                        \n                    \n                \n            \n            \n                \ngetNodeId(item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:234\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NodeId\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isInSet\n                        \n                    \n                \n            \n            \n                \nisInSet(item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:243\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchQueryDidChange\n                        \n                    \n                \n            \n            \n                \nsearchQueryDidChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:227\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleInSet\n                        \n                    \n                \n            \n            \n                \ntoggleInSet(item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:257\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        additions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:197\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SetEditorDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:205\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        deletions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:198\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isLocalSet\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:192\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        listAll\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MultiSourceList\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:195\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        listSet$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataList\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:194\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        listSetSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:196\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        localSet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NodeIdEnc[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:193\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        searchQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:199\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnDestroy, OnInit, TemplateRef } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {\n  decodeListId,\n  decodeNodeId,\n  encodeListId,\n  encodeNodeId,\n  ListId,\n  ListIdEnc,\n  NodeId,\n  NodeIdEnc,\n  nodeTypeFromTypename\n} from '@app/data-dgql/id';\nimport { DataList } from '@app/data-dgql/query';\nimport { Subscription } from 'rxjs';\nimport DataService from '@app/data-dgql';\nimport { UserNotifyService } from '@app/user-notify/user-notify.service';\nimport { quickScore } from 'quick-score';\n\n/**\n * This interface is used to source items from multiple sources in the set editor.\n *\n * staticSources specifies lists whose items will always be loaded.\n * sourceNodes specifies a list of nodes whose the sub-items will be loaded (e.g. a list of components whose labels will be loaded).\n */\nexport interface SetMultiSource {\n  /** A static list of source lists. */\n  staticSources: ListId[];\n  /** A list of nodes that will be passed to listFromNode. */\n  sourceNodes?: ListId | NodeId[];\n  /** Maps nodes from sourceNodes to lists from which items will be sourced. */\n  listFromNode?: (n: NodeId) => ListId;\n}\n\n/**\n * This is an internal component used to load data from multiple sources and through a layer of indirection (also see SetMultiSource).\n */\nclass MultiSourceList {\n  public sourceNodeList?: DataList;\n  public sourceNodeListSub?: Subscription;\n  public staticSourceNodeList?: NodeId[];\n  public sources: Map> = new Map();\n  public sourceSubs: Map = new Map();\n  /** Max number of items in results. */\n  public limit = 10;\n  public results?: T[];\n  /** If true, there are more than `limit` items in the source data. */\n  public hasMore = false;\n  public query = '';\n\n  constructor(public spec: SetMultiSource, public scoreKeys: string[], private dataService: DataService) {\n    if (Array.isArray(spec.sourceNodes)) {\n      this.staticSourceNodeList = spec.sourceNodes;\n    } else if (typeof spec.sourceNodes === 'object') {\n      this.sourceNodeList = dataService.getList(spec.sourceNodes);\n      this.sourceNodeListSub = this.sourceNodeList.subscribe(() => this.update());\n    }\n    this.update();\n  }\n\n  static fromSingleList(list: ListId, scoreKeys: string[], dataService: DataService) {\n    return new this({ staticSources: [list] }, scoreKeys, dataService);\n  }\n\n  /** Updates lists. */\n  update() {\n    const newSourceSet = new Set();\n    for (const [id, node] of this.sourceNodeList?.current?.entries() || []) {\n      const nodeId = decodeNodeId(id);\n      newSourceSet.add(encodeListId(this.spec.listFromNode(nodeId)));\n    }\n    for (const nodeId of this.staticSourceNodeList || []) {\n      newSourceSet.add(encodeListId(this.spec.listFromNode(nodeId)));\n    }\n    for (const source of this.spec.staticSources) {\n      newSourceSet.add(encodeListId(source));\n    }\n\n    for (const source of newSourceSet) {\n      if (!this.sources.has(source)) {\n        const list = this.dataService.getList(decodeListId(source));\n        list.interactive = true;\n        this.sources.set(source, list);\n        this.sourceSubs.set(source, list.subscribe(() => this.updateResults()));\n      }\n    }\n    for (const source of [...this.sources.keys()]) {\n      if (!newSourceSet.has(source)) {\n        this.sourceSubs.get(source).unsubscribe();\n        this.sourceSubs.delete(source);\n        this.sources.delete(source);\n      }\n    }\n  }\n\n  /** Sets a filter on all lists. */\n  setFilter(query: string, filter: F) {\n    this.query = query;\n    for (const source of this.sources.values()) {\n      source.filter = filter;\n    }\n  }\n\n  /** Scores an item for ranking in results. */\n  score(item: T) {\n    const matchStrings = [];\n    for (const key of this.scoreKeys) {\n      let cursor = item;\n      for (const objKey of key.split('.')) {\n        cursor = cursor[objKey];\n        if (!cursor) {\n          break;\n        }\n      }\n      if (cursor) {\n        matchStrings.push(cursor);\n      }\n    }\n\n    return quickScore(matchStrings.join(' '), this.query);\n  }\n\n  /** Updates the results array from loaded data. */\n  updateResults() {\n    const seenItems = new Set();\n    const items = [];\n    this.hasMore = false;\n    for (const source of this.sources.values()) {\n      if (!source.hasData) {\n        continue;\n      }\n      for (const [id, item] of source.current.entries()) {\n        if (!seenItems.has(id)) {\n          seenItems.add(id);\n          items.push(item);\n        }\n      }\n      this.hasMore = this.hasMore || (source.current.size  this.score(a) - this.score(b));\n    items.splice(this.limit);\n\n    this.results = items;\n  }\n\n  /** If true, something is loading somewhere. */\n  isLoading() {\n    if (this.sourceNodeList?.loading) {\n      return true;\n    }\n    for (const source of this.sources.values()) {\n      if (source.loading) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /** Unsubscribes from all subscriptions. This object should no longer be used afterwards. */\n  unsubscribe() {\n    this.sourceNodeListSub?.unsubscribe();\n    this.sourceSubs.forEach(sub => sub.unsubscribe());\n  }\n}\n\nexport type ItemOps = 'none' | 'edit' | 'create-edit' | 'create-edit-delete';\n\nexport interface SetEditorDialogData {\n  title: string;\n  listSet: ListId | NodeId[];\n  listAll: ListId | SetMultiSource;\n  applyChangeset: (add: NodeId[], del: NodeId[]) => Promise;\n  itemTemplate: TemplateRef;\n  makeFilter: (query: string) => F;\n  scoreKeys: string[];\n  emptySuggestionsLabel: string;\n  emptyResultsLabel: string;\n  createItem?: () => Promise;\n  editItem?: ({ id: NodeId, preview: T }) => void;\n  deleteItem?: ({ id: NodeId, preview: T }) => void;\n}\n\n/** This is an internal component used in the set editor. */\n@Component({\n  selector: 'app-set-editor-dialog',\n  templateUrl: './set-editor-dialog.component.html',\n  styleUrls: ['./set-editor-dialog.component.scss']\n})\nexport class SetEditorDialogComponent implements OnInit, OnDestroy {\n  public isLocalSet = false;\n  public localSet: NodeIdEnc[] = [];\n  public listSet$: DataList;\n  public listAll: MultiSourceList;\n  private listSetSub: Subscription;\n  private additions: Set = new Set();\n  private deletions: Set = new Set();\n  public searchQuery = '';\n\n  constructor(\n    private dataService: DataService,\n    private notifyService: UserNotifyService,\n    private dialogRef: MatDialogRef>,\n    @Inject(MAT_DIALOG_DATA) public data: SetEditorDialogData\n  ) {}\n\n  ngOnInit() {\n    if (Array.isArray(this.data.listSet)) {\n      this.isLocalSet = true;\n      this.localSet = [...this.data.listSet].map(id => encodeNodeId(id));\n    } else {\n      this.listSet$ = this.dataService.getList(this.data.listSet);\n    }\n    this.listAll = ('staticSources' in this.data.listAll)\n      ? new MultiSourceList(this.data.listAll, this.data.scoreKeys, this.dataService)\n      : MultiSourceList.fromSingleList(this.data.listAll, this.data.scoreKeys, this.dataService);\n\n    if (this.listSet$) {\n      this.listSetSub = this.listSet$?.subscribe();\n      // TODO: is this a reasonable heuristic for the listSet count? we need to cover >= results from listAll\n      this.listSet$.count = 10;\n      this.listSet$.interactive = true;\n    }\n  }\n\n  searchQueryDidChange() {\n    if (this.listSet$) {\n      this.listSet$.filter = this.data.makeFilter(this.searchQuery);\n    }\n    this.listAll.setFilter(this.searchQuery, this.data.makeFilter(this.searchQuery));\n  }\n\n  getNodeId(item): NodeId {\n    const type = nodeTypeFromTypename(item.__typename);\n    return { type, id: item.id };\n  }\n\n  getEncodedId(item): NodeIdEnc {\n    return encodeNodeId(this.getNodeId(item));\n  }\n\n  isInSet(item): boolean {\n    const id = this.getEncodedId(item);\n    if (this.additions.has(id)) {\n      return true;\n    }\n    if (this.deletions.has(id)) {\n      return false;\n    }\n    if (this.isLocalSet) {\n      return this.localSet.includes(id);\n    }\n    return this.listSet$.current?.has(id) || false;\n  }\n\n  toggleInSet(item): void {\n    const id = this.getEncodedId(item);\n    if (this.isInSet(item)) {\n      this.additions.delete(id);\n      this.deletions.add(id);\n    } else {\n      this.deletions.delete(id);\n      this.additions.add(id);\n    }\n  }\n\n  apply() {\n    if (this.additions.size + this.deletions.size === 0) {\n      this.dialogRef.close(null);\n      return;\n    }\n\n    this.data.applyChangeset([...this.additions].map(decodeNodeId), [...this.deletions].map(decodeNodeId)).then(() => {\n      this.dialogRef.close(null);\n    }).catch(error => {\n      this.notifyService.notifyError('Failed to apply changes', error);\n    });\n  }\n\n  createItem() {\n    this.data.createItem().then(node => {\n      if (node) {\n        this.additions.add(encodeNodeId(node));\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.listSetSub?.unsubscribe();\n    this.listAll.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n    {{data.title}}\n    \n        \n            \n                Search\n                search\n                \n            \n        \n        \n            \n                \n                    \n                        \n                    \n\n                    \n                        \n                            \n                                \n                                    Edit\n                                \n                                \n                                    Delete\n                                \n                            \n                        \n                        \n                            more_vert\n                        \n                    \n                \n            \n            \n                \n                    \n                    \n                    \n                    \n                \n                Use search to find more items\n            \n            \n                \n                    {{data.emptyResultsLabel}}\n                \n                \n                    {{data.emptySuggestionsLabel}}\n                \n            \n            \n                \n                    add\n                    Create new\n                \n            \n        \n    \n    \n        \n            Cancel\n        \n        \n            Apply\n        \n    \n\n\n    \n\n    \n                \n                    ./set-editor-dialog.component.scss\n                \n                .set-editor-dialog {\n  .dialog-search {\n    .search-field {\n      width: 100%;\n    }\n  }\n\n  .dialog-items {\n    margin-bottom: 16px;\n\n    .selectable-item {\n      border-top: 1px solid rgba(0, 0, 0, 0.2);\n      display: flex;\n\n      &:first-child {\n        border-top: none;\n      }\n\n      .inner-checkbox {\n        display: block;\n        flex: 1;\n        padding: 8px 16px;\n      }\n    }\n\n    .items-more {\n      text-align: center;\n      opacity: 0.7;\n      font-size: smaller;\n\n      .more-dots {\n        display: block;\n        margin-bottom: 4px;\n\n        .dot {\n          display: block;\n          width: 4px;\n          height: 4px;\n          border-radius: 2px;\n          background: currentColor;\n          margin: 0 auto 3px auto;\n\n          &:nth-child(2) { opacity: 0.6; }\n          &:nth-child(3) { opacity: 0.27; }\n          &:nth-child(4) { opacity: 0.08; }\n        }\n      }\n    }\n\n    .items-empty {\n      text-align: center;\n      opacity: 0.5;\n    }\n\n    .items-create {\n      text-align: center;\n      margin-top: 16px;\n      margin-bottom: 8px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{data.title}}                                        Search                search                                                                                                                                                                                                                                                                                    Edit                                                                                                    Delete                                                                                                                                        more_vert                                                                                                                                                                                                                    Use search to find more items                                                            {{data.emptyResultsLabel}}                                                    {{data.emptySuggestionsLabel}}                                                                            add                    Create new                                                                Cancel                            Apply            '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'SetEditorDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SetEditorDialogData.html":{"url":"interfaces/SetEditorDialogData.html","title":"interface - SetEditorDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SetEditorDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/set-editor/set-editor-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            applyChangeset\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createItem\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            deleteItem\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            editItem\n                                        \n                                \n                                \n                                        \n                                            emptyResultsLabel\n                                        \n                                \n                                \n                                        \n                                            emptySuggestionsLabel\n                                        \n                                \n                                \n                                        \n                                            itemTemplate\n                                        \n                                \n                                \n                                        \n                                            listAll\n                                        \n                                \n                                \n                                        \n                                            listSet\n                                        \n                                \n                                \n                                        \n                                            makeFilter\n                                        \n                                \n                                \n                                        \n                                            scoreKeys\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        applyChangeset\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        applyChangeset:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createItem\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createItem:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deleteItem\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deleteItem:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editItem\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        editItem:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emptyResultsLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emptyResultsLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emptySuggestionsLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emptySuggestionsLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itemTemplate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        itemTemplate:     TemplateRef<>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TemplateRef<>\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listAll\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listAll:     ListId | SetMultiSource\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ListId | SetMultiSource\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listSet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listSet:     ListId | NodeId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ListId | NodeId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        makeFilter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        makeFilter:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scoreKeys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scoreKeys:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, OnDestroy, OnInit, TemplateRef } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {\n  decodeListId,\n  decodeNodeId,\n  encodeListId,\n  encodeNodeId,\n  ListId,\n  ListIdEnc,\n  NodeId,\n  NodeIdEnc,\n  nodeTypeFromTypename\n} from '@app/data-dgql/id';\nimport { DataList } from '@app/data-dgql/query';\nimport { Subscription } from 'rxjs';\nimport DataService from '@app/data-dgql';\nimport { UserNotifyService } from '@app/user-notify/user-notify.service';\nimport { quickScore } from 'quick-score';\n\n/**\n * This interface is used to source items from multiple sources in the set editor.\n *\n * staticSources specifies lists whose items will always be loaded.\n * sourceNodes specifies a list of nodes whose the sub-items will be loaded (e.g. a list of components whose labels will be loaded).\n */\nexport interface SetMultiSource {\n  /** A static list of source lists. */\n  staticSources: ListId[];\n  /** A list of nodes that will be passed to listFromNode. */\n  sourceNodes?: ListId | NodeId[];\n  /** Maps nodes from sourceNodes to lists from which items will be sourced. */\n  listFromNode?: (n: NodeId) => ListId;\n}\n\n/**\n * This is an internal component used to load data from multiple sources and through a layer of indirection (also see SetMultiSource).\n */\nclass MultiSourceList {\n  public sourceNodeList?: DataList;\n  public sourceNodeListSub?: Subscription;\n  public staticSourceNodeList?: NodeId[];\n  public sources: Map> = new Map();\n  public sourceSubs: Map = new Map();\n  /** Max number of items in results. */\n  public limit = 10;\n  public results?: T[];\n  /** If true, there are more than `limit` items in the source data. */\n  public hasMore = false;\n  public query = '';\n\n  constructor(public spec: SetMultiSource, public scoreKeys: string[], private dataService: DataService) {\n    if (Array.isArray(spec.sourceNodes)) {\n      this.staticSourceNodeList = spec.sourceNodes;\n    } else if (typeof spec.sourceNodes === 'object') {\n      this.sourceNodeList = dataService.getList(spec.sourceNodes);\n      this.sourceNodeListSub = this.sourceNodeList.subscribe(() => this.update());\n    }\n    this.update();\n  }\n\n  static fromSingleList(list: ListId, scoreKeys: string[], dataService: DataService) {\n    return new this({ staticSources: [list] }, scoreKeys, dataService);\n  }\n\n  /** Updates lists. */\n  update() {\n    const newSourceSet = new Set();\n    for (const [id, node] of this.sourceNodeList?.current?.entries() || []) {\n      const nodeId = decodeNodeId(id);\n      newSourceSet.add(encodeListId(this.spec.listFromNode(nodeId)));\n    }\n    for (const nodeId of this.staticSourceNodeList || []) {\n      newSourceSet.add(encodeListId(this.spec.listFromNode(nodeId)));\n    }\n    for (const source of this.spec.staticSources) {\n      newSourceSet.add(encodeListId(source));\n    }\n\n    for (const source of newSourceSet) {\n      if (!this.sources.has(source)) {\n        const list = this.dataService.getList(decodeListId(source));\n        list.interactive = true;\n        this.sources.set(source, list);\n        this.sourceSubs.set(source, list.subscribe(() => this.updateResults()));\n      }\n    }\n    for (const source of [...this.sources.keys()]) {\n      if (!newSourceSet.has(source)) {\n        this.sourceSubs.get(source).unsubscribe();\n        this.sourceSubs.delete(source);\n        this.sources.delete(source);\n      }\n    }\n  }\n\n  /** Sets a filter on all lists. */\n  setFilter(query: string, filter: F) {\n    this.query = query;\n    for (const source of this.sources.values()) {\n      source.filter = filter;\n    }\n  }\n\n  /** Scores an item for ranking in results. */\n  score(item: T) {\n    const matchStrings = [];\n    for (const key of this.scoreKeys) {\n      let cursor = item;\n      for (const objKey of key.split('.')) {\n        cursor = cursor[objKey];\n        if (!cursor) {\n          break;\n        }\n      }\n      if (cursor) {\n        matchStrings.push(cursor);\n      }\n    }\n\n    return quickScore(matchStrings.join(' '), this.query);\n  }\n\n  /** Updates the results array from loaded data. */\n  updateResults() {\n    const seenItems = new Set();\n    const items = [];\n    this.hasMore = false;\n    for (const source of this.sources.values()) {\n      if (!source.hasData) {\n        continue;\n      }\n      for (const [id, item] of source.current.entries()) {\n        if (!seenItems.has(id)) {\n          seenItems.add(id);\n          items.push(item);\n        }\n      }\n      this.hasMore = this.hasMore || (source.current.size  this.score(a) - this.score(b));\n    items.splice(this.limit);\n\n    this.results = items;\n  }\n\n  /** If true, something is loading somewhere. */\n  isLoading() {\n    if (this.sourceNodeList?.loading) {\n      return true;\n    }\n    for (const source of this.sources.values()) {\n      if (source.loading) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /** Unsubscribes from all subscriptions. This object should no longer be used afterwards. */\n  unsubscribe() {\n    this.sourceNodeListSub?.unsubscribe();\n    this.sourceSubs.forEach(sub => sub.unsubscribe());\n  }\n}\n\nexport type ItemOps = 'none' | 'edit' | 'create-edit' | 'create-edit-delete';\n\nexport interface SetEditorDialogData {\n  title: string;\n  listSet: ListId | NodeId[];\n  listAll: ListId | SetMultiSource;\n  applyChangeset: (add: NodeId[], del: NodeId[]) => Promise;\n  itemTemplate: TemplateRef;\n  makeFilter: (query: string) => F;\n  scoreKeys: string[];\n  emptySuggestionsLabel: string;\n  emptyResultsLabel: string;\n  createItem?: () => Promise;\n  editItem?: ({ id: NodeId, preview: T }) => void;\n  deleteItem?: ({ id: NodeId, preview: T }) => void;\n}\n\n/** This is an internal component used in the set editor. */\n@Component({\n  selector: 'app-set-editor-dialog',\n  templateUrl: './set-editor-dialog.component.html',\n  styleUrls: ['./set-editor-dialog.component.scss']\n})\nexport class SetEditorDialogComponent implements OnInit, OnDestroy {\n  public isLocalSet = false;\n  public localSet: NodeIdEnc[] = [];\n  public listSet$: DataList;\n  public listAll: MultiSourceList;\n  private listSetSub: Subscription;\n  private additions: Set = new Set();\n  private deletions: Set = new Set();\n  public searchQuery = '';\n\n  constructor(\n    private dataService: DataService,\n    private notifyService: UserNotifyService,\n    private dialogRef: MatDialogRef>,\n    @Inject(MAT_DIALOG_DATA) public data: SetEditorDialogData\n  ) {}\n\n  ngOnInit() {\n    if (Array.isArray(this.data.listSet)) {\n      this.isLocalSet = true;\n      this.localSet = [...this.data.listSet].map(id => encodeNodeId(id));\n    } else {\n      this.listSet$ = this.dataService.getList(this.data.listSet);\n    }\n    this.listAll = ('staticSources' in this.data.listAll)\n      ? new MultiSourceList(this.data.listAll, this.data.scoreKeys, this.dataService)\n      : MultiSourceList.fromSingleList(this.data.listAll, this.data.scoreKeys, this.dataService);\n\n    if (this.listSet$) {\n      this.listSetSub = this.listSet$?.subscribe();\n      // TODO: is this a reasonable heuristic for the listSet count? we need to cover >= results from listAll\n      this.listSet$.count = 10;\n      this.listSet$.interactive = true;\n    }\n  }\n\n  searchQueryDidChange() {\n    if (this.listSet$) {\n      this.listSet$.filter = this.data.makeFilter(this.searchQuery);\n    }\n    this.listAll.setFilter(this.searchQuery, this.data.makeFilter(this.searchQuery));\n  }\n\n  getNodeId(item): NodeId {\n    const type = nodeTypeFromTypename(item.__typename);\n    return { type, id: item.id };\n  }\n\n  getEncodedId(item): NodeIdEnc {\n    return encodeNodeId(this.getNodeId(item));\n  }\n\n  isInSet(item): boolean {\n    const id = this.getEncodedId(item);\n    if (this.additions.has(id)) {\n      return true;\n    }\n    if (this.deletions.has(id)) {\n      return false;\n    }\n    if (this.isLocalSet) {\n      return this.localSet.includes(id);\n    }\n    return this.listSet$.current?.has(id) || false;\n  }\n\n  toggleInSet(item): void {\n    const id = this.getEncodedId(item);\n    if (this.isInSet(item)) {\n      this.additions.delete(id);\n      this.deletions.add(id);\n    } else {\n      this.deletions.delete(id);\n      this.additions.add(id);\n    }\n  }\n\n  apply() {\n    if (this.additions.size + this.deletions.size === 0) {\n      this.dialogRef.close(null);\n      return;\n    }\n\n    this.data.applyChangeset([...this.additions].map(decodeNodeId), [...this.deletions].map(decodeNodeId)).then(() => {\n      this.dialogRef.close(null);\n    }).catch(error => {\n      this.notifyService.notifyError('Failed to apply changes', error);\n    });\n  }\n\n  createItem() {\n    this.data.createItem().then(node => {\n      if (node) {\n        this.additions.add(encodeNodeId(node));\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.listSetSub?.unsubscribe();\n    this.listAll.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SetMultiSource.html":{"url":"interfaces/SetMultiSource.html","title":"interface - SetMultiSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SetMultiSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/set-editor/set-editor-dialog.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This interface is used to source items from multiple sources in the set editor.\nstaticSources specifies lists whose items will always be loaded.\nsourceNodes specifies a list of nodes whose the sub-items will be loaded (e.g. a list of components whose labels will be loaded).\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            listFromNode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sourceNodes\n                                        \n                                \n                                \n                                        \n                                            staticSources\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        listFromNode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listFromNode:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Maps nodes from sourceNodes to lists from which items will be sourced.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceNodes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sourceNodes:     ListId | NodeId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ListId | NodeId[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A list of nodes that will be passed to listFromNode.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        staticSources\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        staticSources:         ListId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ListId[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A static list of source lists.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, OnDestroy, OnInit, TemplateRef } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {\n  decodeListId,\n  decodeNodeId,\n  encodeListId,\n  encodeNodeId,\n  ListId,\n  ListIdEnc,\n  NodeId,\n  NodeIdEnc,\n  nodeTypeFromTypename\n} from '@app/data-dgql/id';\nimport { DataList } from '@app/data-dgql/query';\nimport { Subscription } from 'rxjs';\nimport DataService from '@app/data-dgql';\nimport { UserNotifyService } from '@app/user-notify/user-notify.service';\nimport { quickScore } from 'quick-score';\n\n/**\n * This interface is used to source items from multiple sources in the set editor.\n *\n * staticSources specifies lists whose items will always be loaded.\n * sourceNodes specifies a list of nodes whose the sub-items will be loaded (e.g. a list of components whose labels will be loaded).\n */\nexport interface SetMultiSource {\n  /** A static list of source lists. */\n  staticSources: ListId[];\n  /** A list of nodes that will be passed to listFromNode. */\n  sourceNodes?: ListId | NodeId[];\n  /** Maps nodes from sourceNodes to lists from which items will be sourced. */\n  listFromNode?: (n: NodeId) => ListId;\n}\n\n/**\n * This is an internal component used to load data from multiple sources and through a layer of indirection (also see SetMultiSource).\n */\nclass MultiSourceList {\n  public sourceNodeList?: DataList;\n  public sourceNodeListSub?: Subscription;\n  public staticSourceNodeList?: NodeId[];\n  public sources: Map> = new Map();\n  public sourceSubs: Map = new Map();\n  /** Max number of items in results. */\n  public limit = 10;\n  public results?: T[];\n  /** If true, there are more than `limit` items in the source data. */\n  public hasMore = false;\n  public query = '';\n\n  constructor(public spec: SetMultiSource, public scoreKeys: string[], private dataService: DataService) {\n    if (Array.isArray(spec.sourceNodes)) {\n      this.staticSourceNodeList = spec.sourceNodes;\n    } else if (typeof spec.sourceNodes === 'object') {\n      this.sourceNodeList = dataService.getList(spec.sourceNodes);\n      this.sourceNodeListSub = this.sourceNodeList.subscribe(() => this.update());\n    }\n    this.update();\n  }\n\n  static fromSingleList(list: ListId, scoreKeys: string[], dataService: DataService) {\n    return new this({ staticSources: [list] }, scoreKeys, dataService);\n  }\n\n  /** Updates lists. */\n  update() {\n    const newSourceSet = new Set();\n    for (const [id, node] of this.sourceNodeList?.current?.entries() || []) {\n      const nodeId = decodeNodeId(id);\n      newSourceSet.add(encodeListId(this.spec.listFromNode(nodeId)));\n    }\n    for (const nodeId of this.staticSourceNodeList || []) {\n      newSourceSet.add(encodeListId(this.spec.listFromNode(nodeId)));\n    }\n    for (const source of this.spec.staticSources) {\n      newSourceSet.add(encodeListId(source));\n    }\n\n    for (const source of newSourceSet) {\n      if (!this.sources.has(source)) {\n        const list = this.dataService.getList(decodeListId(source));\n        list.interactive = true;\n        this.sources.set(source, list);\n        this.sourceSubs.set(source, list.subscribe(() => this.updateResults()));\n      }\n    }\n    for (const source of [...this.sources.keys()]) {\n      if (!newSourceSet.has(source)) {\n        this.sourceSubs.get(source).unsubscribe();\n        this.sourceSubs.delete(source);\n        this.sources.delete(source);\n      }\n    }\n  }\n\n  /** Sets a filter on all lists. */\n  setFilter(query: string, filter: F) {\n    this.query = query;\n    for (const source of this.sources.values()) {\n      source.filter = filter;\n    }\n  }\n\n  /** Scores an item for ranking in results. */\n  score(item: T) {\n    const matchStrings = [];\n    for (const key of this.scoreKeys) {\n      let cursor = item;\n      for (const objKey of key.split('.')) {\n        cursor = cursor[objKey];\n        if (!cursor) {\n          break;\n        }\n      }\n      if (cursor) {\n        matchStrings.push(cursor);\n      }\n    }\n\n    return quickScore(matchStrings.join(' '), this.query);\n  }\n\n  /** Updates the results array from loaded data. */\n  updateResults() {\n    const seenItems = new Set();\n    const items = [];\n    this.hasMore = false;\n    for (const source of this.sources.values()) {\n      if (!source.hasData) {\n        continue;\n      }\n      for (const [id, item] of source.current.entries()) {\n        if (!seenItems.has(id)) {\n          seenItems.add(id);\n          items.push(item);\n        }\n      }\n      this.hasMore = this.hasMore || (source.current.size  this.score(a) - this.score(b));\n    items.splice(this.limit);\n\n    this.results = items;\n  }\n\n  /** If true, something is loading somewhere. */\n  isLoading() {\n    if (this.sourceNodeList?.loading) {\n      return true;\n    }\n    for (const source of this.sources.values()) {\n      if (source.loading) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /** Unsubscribes from all subscriptions. This object should no longer be used afterwards. */\n  unsubscribe() {\n    this.sourceNodeListSub?.unsubscribe();\n    this.sourceSubs.forEach(sub => sub.unsubscribe());\n  }\n}\n\nexport type ItemOps = 'none' | 'edit' | 'create-edit' | 'create-edit-delete';\n\nexport interface SetEditorDialogData {\n  title: string;\n  listSet: ListId | NodeId[];\n  listAll: ListId | SetMultiSource;\n  applyChangeset: (add: NodeId[], del: NodeId[]) => Promise;\n  itemTemplate: TemplateRef;\n  makeFilter: (query: string) => F;\n  scoreKeys: string[];\n  emptySuggestionsLabel: string;\n  emptyResultsLabel: string;\n  createItem?: () => Promise;\n  editItem?: ({ id: NodeId, preview: T }) => void;\n  deleteItem?: ({ id: NodeId, preview: T }) => void;\n}\n\n/** This is an internal component used in the set editor. */\n@Component({\n  selector: 'app-set-editor-dialog',\n  templateUrl: './set-editor-dialog.component.html',\n  styleUrls: ['./set-editor-dialog.component.scss']\n})\nexport class SetEditorDialogComponent implements OnInit, OnDestroy {\n  public isLocalSet = false;\n  public localSet: NodeIdEnc[] = [];\n  public listSet$: DataList;\n  public listAll: MultiSourceList;\n  private listSetSub: Subscription;\n  private additions: Set = new Set();\n  private deletions: Set = new Set();\n  public searchQuery = '';\n\n  constructor(\n    private dataService: DataService,\n    private notifyService: UserNotifyService,\n    private dialogRef: MatDialogRef>,\n    @Inject(MAT_DIALOG_DATA) public data: SetEditorDialogData\n  ) {}\n\n  ngOnInit() {\n    if (Array.isArray(this.data.listSet)) {\n      this.isLocalSet = true;\n      this.localSet = [...this.data.listSet].map(id => encodeNodeId(id));\n    } else {\n      this.listSet$ = this.dataService.getList(this.data.listSet);\n    }\n    this.listAll = ('staticSources' in this.data.listAll)\n      ? new MultiSourceList(this.data.listAll, this.data.scoreKeys, this.dataService)\n      : MultiSourceList.fromSingleList(this.data.listAll, this.data.scoreKeys, this.dataService);\n\n    if (this.listSet$) {\n      this.listSetSub = this.listSet$?.subscribe();\n      // TODO: is this a reasonable heuristic for the listSet count? we need to cover >= results from listAll\n      this.listSet$.count = 10;\n      this.listSet$.interactive = true;\n    }\n  }\n\n  searchQueryDidChange() {\n    if (this.listSet$) {\n      this.listSet$.filter = this.data.makeFilter(this.searchQuery);\n    }\n    this.listAll.setFilter(this.searchQuery, this.data.makeFilter(this.searchQuery));\n  }\n\n  getNodeId(item): NodeId {\n    const type = nodeTypeFromTypename(item.__typename);\n    return { type, id: item.id };\n  }\n\n  getEncodedId(item): NodeIdEnc {\n    return encodeNodeId(this.getNodeId(item));\n  }\n\n  isInSet(item): boolean {\n    const id = this.getEncodedId(item);\n    if (this.additions.has(id)) {\n      return true;\n    }\n    if (this.deletions.has(id)) {\n      return false;\n    }\n    if (this.isLocalSet) {\n      return this.localSet.includes(id);\n    }\n    return this.listSet$.current?.has(id) || false;\n  }\n\n  toggleInSet(item): void {\n    const id = this.getEncodedId(item);\n    if (this.isInSet(item)) {\n      this.additions.delete(id);\n      this.deletions.add(id);\n    } else {\n      this.deletions.delete(id);\n      this.additions.add(id);\n    }\n  }\n\n  apply() {\n    if (this.additions.size + this.deletions.size === 0) {\n      this.dialogRef.close(null);\n      return;\n    }\n\n    this.data.applyChangeset([...this.additions].map(decodeNodeId), [...this.deletions].map(decodeNodeId)).then(() => {\n      this.dialogRef.close(null);\n    }).catch(error => {\n      this.notifyService.notifyError('Failed to apply changes', error);\n    });\n  }\n\n  createItem() {\n    this.data.createItem().then(node => {\n      if (node) {\n        this.additions.add(encodeNodeId(node));\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.listSetSub?.unsubscribe();\n    this.listAll.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsDialogComponent.html":{"url":"components/SettingsDialogComponent.html","title":"component - SettingsDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/settings-dialog/settings-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings-dialog\n            \n\n            \n                styleUrls\n                ./settings-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                mode\n                            \n                            \n                                modeIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                openAccessTokenSettings\n                            \n                            \n                                    Public\n                                openProfileSettings\n                            \n                            \n                                    Public\n                                switchTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/settings-dialog/settings-dialog.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openAccessTokenSettings\n                        \n                    \n                \n            \n            \n                \n                    \n                    openAccessTokenSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/settings-dialog/settings-dialog.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openProfileSettings\n                        \n                    \n                \n            \n            \n                \n                    \n                    openProfileSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/settings-dialog/settings-dialog.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        switchTheme\n                        \n                    \n                \n            \n            \n                \n                    \n                    switchTheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/settings-dialog/settings-dialog.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/settings-dialog/settings-dialog.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Dark Mode\"\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/settings-dialog/settings-dialog.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modeIcon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"dark_mode\"\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/settings-dialog/settings-dialog.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Inject } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Output, EventEmitter, Input } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { AuthenticationService } from '@app/auth/authentication.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ProfileSettingsDialogComponent } from '../profile-settings-dialog/profile-settings-dialog.component';\nimport { AccessTokenDialogComponent } from '../access-token-dialog/access-token-dialog.component';\n\n@Component({\n  selector: 'app-settings-dialog',\n  templateUrl: './settings-dialog.component.html',\n  styleUrls: ['./settings-dialog.component.scss']\n})\nexport class SettingsDialogComponent implements OnInit {\n\n  mode = \"Dark Mode\"\n  modeIcon = \"dark_mode\"\n\n  constructor(public dialogRef: MatDialogRef, private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n\n  //open the dialog with profile settings\n  public openProfileSettings() {\n    this.dialogRef.close();\n    this.dialog.open(ProfileSettingsDialogComponent);\n  }\n\n  //open the dialog with access token settings\n  public openAccessTokenSettings() {\n    this.dialogRef.close();\n    this.dialog.open(AccessTokenDialogComponent);\n  }\n\n  //switch to dark mode / light mode (TODO)\n  public switchTheme() {\n\n    if(this.mode === 'Light Mode') { \n      this.mode = 'Dark Mode'\n    } else {\n      this.mode = 'Light Mode'\n    }\n\n    if(this.modeIcon === 'light_mode') { \n      this.modeIcon = 'dark_mode'\n    } else {\n      this.modeIcon = 'light_mode'\n    }\n\n    console.log('dark mode / light mode');\n  }\n\n}\n\n    \n\n    \n        \nSettings\n\n      \n        account_circle\n          Profile Settings\n      \n        token\n         Access Token\n      \n        {{modeIcon}}\n         {{mode}} \n\n    \n\n    \n                \n                    ./settings-dialog.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Settings              account_circle          Profile Settings              token         Access Token              {{modeIcon}}         {{mode}} '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SideNavComponent.html":{"url":"components/SideNavComponent.html","title":"component - SideNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SideNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/side-nav/side-nav.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays and manages the sidemenu showing\nthe name of the current project at the top. Beneath it\nnavigation points e.g. 'Graph' are displayed.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-side-nav\n            \n\n            \n                styleUrls\n                ./side-nav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./side-nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                defaultMenuTitle\n                            \n                            \n                                graphLink\n                            \n                            \n                                issuesLink\n                            \n                            \n                                membersLink\n                            \n                            \n                                    Public\n                                menuTitle\n                            \n                            \n                                    Public\n                                notify\n                            \n                            \n                                overviewLink\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                ss\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ss: StateService, router: Router, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/side-nav/side-nav.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ss\n                                                  \n                                                        \n                                                                        StateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        defaultMenuTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Menu'\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        graphLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['/']\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issuesLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['/']\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        membersLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['/']\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        menuTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.defaultMenuTitle\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        notify\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserNotifyService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        overviewLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['/']\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ss\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StateService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {StateService} from '@app/state.service';\nimport {Router} from '@angular/router';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\n\n/**\n * This component displays and manages the sidemenu showing\n * the name of the current project at the top. Beneath it\n * navigation points e.g. 'Graph' are displayed.\n */\n@Component({\n  selector: 'app-side-nav',\n  templateUrl: './side-nav.component.html',\n  styleUrls: ['./side-nav.component.scss']\n})\nexport class SideNavComponent {\n  readonly defaultMenuTitle = 'Menu';\n  public menuTitle = this.defaultMenuTitle;\n  overviewLink = ['/'];\n  graphLink = ['/'];\n  issuesLink = ['/'];\n  membersLink = ['/'];\n\n  constructor(public ss: StateService,\n              public router: Router,\n              public notify: UserNotifyService) {\n    ss.state$.subscribe(appState => {\n      if (!appState.project) {\n        return;\n      }\n\n      if (appState.project.node) {\n        this.menuTitle = appState.project.node.name;\n        this.overviewLink = ['/projects', appState.project.node.id];\n        this.graphLink = ['/projects', appState.project.node.id, 'graph'];\n        this.issuesLink = ['/projects', appState.project.node.id, 'issues'];\n        this.membersLink = ['/projects', appState.project.node.id, 'members'];\n      } else {\n        this.router.navigate(['/']);\n        notify.notifyError('The specified project does not exist!');\n      }\n    });\n  }\n\n\n}\n\n    \n\n    \n        {{menuTitle}}\n\n    \n        info\n        Overview\n    \n    \n        account_tree\n        Graph\n    \n    \n        bug_report\n        Issues\n    \n    \n        group\n        Members\n    \n\n\n    \n\n    \n                \n                    ./side-nav.component.scss\n                \n                @import '~@angular/material/theming';\n@import 'variables';\n\nmat-icon {\n  color: rgba(0, 0, 0, 0.54);\n  margin-right: 20px;\n  padding-left: 4px;\n}\n\n.list-item-active {\n  font-weight: bold;\n  background-color: mat-color($accent, 300) !important;\n}\n\nmat-nav-list {\n  padding-top: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{menuTitle}}            info        Overview                account_tree        Graph                bug_report        Issues                group        Members    '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'SideNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StateService.html":{"url":"injectables/StateService.html","title":"injectable - StateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service exposes an observable of the name and id of the current project.\nIt determines the current project by listening for url changes and parsing the url.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                state\n                            \n                            \n                                state$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isProjectURL\n                            \n                            \n                                syncStateWithUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, ps: ProjectStoreService)\n                    \n                \n                        \n                            \n                                Defined in src/app/state.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ps\n                                                  \n                                                        \n                                                                        ProjectStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isProjectURL\n                        \n                    \n                \n            \n            \n                \n                    \n                    isProjectURL(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/state.service.ts:57\n                \n            \n\n\n            \n                \n                    Caution:\nIf you change the routing you might have to change this function too.\nThat is if it has the form 'projects/:id' + further stuff.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true iff url is a route pertaining to a project\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncStateWithUrl\n                        \n                    \n                \n            \n            \n                \nsyncStateWithUrl(router: Router, ps: ProjectStoreService)\n                \n            \n\n\n            \n                \n                    Defined in src/app/state.service.ts:31\n                \n            \n\n\n            \n                \n                    Sets up two mutually exclusive (look at filter) subscriptions to track whether we are at a\nurl referring to a project or not. If we are at a project we retrieve information about it\nfrom the backend and make it available in the state observable\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    router\n                                    \n                                                Router\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        allows to listen for routing events\n\n                                    \n                                \n                                \n                                    ps\n                                    \n                                                ProjectStoreService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppState\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/state.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in src/app/state.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {NavigationEnd, PRIMARY_OUTLET, Router} from '@angular/router';\nimport {ReplaySubject} from 'rxjs';\nimport {filter, switchMap} from 'rxjs/operators';\nimport {GetBasicProjectQuery} from 'src/generated/graphql';\nimport {ProjectStoreService} from './data/project/project-store.service';\n\n/**\n * This service exposes an observable of the name and id of the current project.\n * It determines the current project by listening for url changes and parsing the url.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateService {\n  state: AppState = {};\n  state$ = new ReplaySubject(1);\n\n  constructor(private router: Router, private ps: ProjectStoreService) {\n    this.syncStateWithUrl(router, ps);\n  }\n\n  /**\n   * Sets up two mutually exclusive (look at filter) subscriptions to track whether we are at a\n   * url referring to a project or not. If we are at a project we retrieve information about it\n   * from the backend and make it available in the state observable\n   *\n   * @param router allows to listen for routing events\n   * @param ps\n   */\n  syncStateWithUrl(router: Router, ps: ProjectStoreService) {\n    router.events.pipe(\n      filter(event => (event instanceof NavigationEnd && this.isProjectURL(event.url))),\n      switchMap((event: NavigationEnd) =>\n        ps.getBasicProject(this.router.parseUrl(event.url).root?.children[PRIMARY_OUTLET].segments[1].path)\n      )\n    ).subscribe(project => {\n      this.state.project = project;\n      this.state$.next(this.state);\n    });\n    // set project to null if new url is not specific to a project\n    router.events.pipe(\n      filter(event => (event instanceof NavigationEnd && !this.isProjectURL(event.url))),\n    ).subscribe(_ => {\n      this.state.project = null;\n      this.state$.next(this.state);\n    });\n  }\n\n  /**\n   * Caution:\n   * If you change the routing you might have to change this function too.\n   * That is if it has the form 'projects/:id' + further stuff.\n   * @param url\n   * @returns true iff url is a route pertaining to a project\n   */\n  private isProjectURL(url: string): boolean {\n    const tree = this.router.parseUrl(url);\n    const primary = tree.root.children[PRIMARY_OUTLET];\n    if (primary) {\n      const primarySegments = primary.segments;\n      return (primarySegments[0].path === 'projects' && primary.segments.length >= 2);\n    }\n    return false;\n  }\n}\n\nexport interface AppState {\n  project?: GetBasicProjectQuery;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextDisplayComponent.html":{"url":"components/TextDisplayComponent.html","title":"component - TextDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/text-display/text-display.component.ts\n\n\n\n    \n        Description\n    \n    \n        The text display component shows text in a labeled box, and if desired, allows the user to edit and save the\ntext\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-text-display\n            \n\n            \n                styleUrls\n                ./text-display.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./text-display.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editMode\n                            \n                            \n                                editText\n                            \n                            \n                                showPlaceholder\n                            \n                            \n                                    Private\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                finishEditing\n                            \n                            \n                                startEditing\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                labelText\n                            \n                            \n                                onEditFinished\n                            \n                            \n                                placeholder\n                            \n                            \n                                readonly\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    text\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        labelText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/text-display/text-display.component.ts:23\n                            \n                        \n                \n                    \n                        The title text.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        onEditFinished\n                    \n                \n                \n                    \n                        Type :         TextDisplayEditCallbackFn\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/text-display/text-display.component.ts:21\n                            \n                        \n                \n                    \n                        A callback function.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/text-display/text-display.component.ts:37\n                            \n                        \n                \n                    \n                        The placeholder will be shown if the content is empty\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        readonly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/text-display/text-display.component.ts:35\n                            \n                        \n                \n                    \n                        If true, the edit button is not shown\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/text-display/text-display.component.ts:25\n                            \n                        \n                \n                    \n                        Sets the content of the text display, and shows the placeholder if the text is empty\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        finishEditing\n                        \n                    \n                \n            \n            \n                \nfinishEditing(saved: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/text-display/text-display.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    saved\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startEditing\n                        \n                    \n                \n            \n            \n                \nstartEditing()\n                \n            \n\n\n            \n                \n                    Defined in src/app/text-display/text-display.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        editMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/text-display/text-display.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/text-display/text-display.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPlaceholder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/text-display/text-display.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        value\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/text-display/text-display.component.ts:39\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n\n                \n                    \n                        gettext()\n                    \n                \n                            \n                                \n                                    Defined in src/app/text-display/text-display.component.ts:30\n                                \n                            \n\n                \n                    \n                        settext(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/text-display/text-display.component.ts:25\n                                \n                            \n                    \n                        \n                                Sets the content of the text display, and shows the placeholder if the text is empty\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\n\n/**\n * A callback function that is called once the user finishes editing the text.\n * @param saved true if the user clicked save, false if the user cancelled the editing\n */\nexport type TextDisplayEditCallbackFn = (saved: boolean) => void;\n\n\n/**\n * The text display component shows text in a labeled box, and if desired, allows the user to edit and save the\n * text\n */\n@Component({\n  selector: 'app-text-display',\n  templateUrl: './text-display.component.html',\n  styleUrls: ['./text-display.component.scss']\n})\nexport class TextDisplayComponent {\n  /** A callback function. */\n  @Input() onEditFinished: TextDisplayEditCallbackFn;\n  /** The title text. */\n  @Input() labelText: string;\n  /** Sets the content of the text display, and shows the placeholder if the text is empty */\n  @Input() set text(value: string) {\n    this.value = value;\n    this.showPlaceholder = !value || value.length === 0;\n  }\n\n  get text() {\n    return this.value;\n  }\n\n  /** If true, the edit button is not shown */\n  @Input() readonly: boolean;\n  /** The placeholder will be shown if the content is empty */\n  @Input() placeholder = '';\n\n  private value;\n  editMode = false;\n  editText = '';\n  showPlaceholder = false;\n\n  finishEditing(saved: boolean): void {\n    this.editMode = false;\n    if (saved) {\n      this.text = this.editText;\n    }\n\n    if (this.onEditFinished) {\n      this.onEditFinished(saved);\n    }\n  }\n\n  startEditing() {\n    this.editText = this.text;\n    this.editMode = true;\n  }\n}\n\n    \n\n    \n        \n    \n        {{labelText}}\n        \n        \n            \n                save\n            \n            \n                cancel\n            \n        \n    \n\n\n\n    \n        \n            {{labelText}}\n        \n        \n            edit\n        \n        \n            \n                {{line.replace('\\n', '')}}\n            \n        \n    \n\n\n    \n\n    \n                \n                    ./text-display.component.scss\n                \n                @import \"src/styles/variables\";\n\n.text-display-label-container {\n  position: relative;\n  width: fit-content;\n  height: .8em;\n  line-height: .8em;\n  padding: 0 2px 0 2px;\n  top: -.5em;\n  left: -1px;\n  background-color: #fafafa; // FIXME: Hardcoded background color\n  color: rgba(0, 0, 0, .6);\n  text-align: center;\n}\n\n.text-display-label {\n  display: inline-block;\n  vertical-align: middle;\n  font-size: .8em;\n}\n\n.text-display-container {\n  margin-top: 10px;\n  padding: 0 8px 16px 8px;\n  width: 100%;\n  height: 100%;\n  border: 1px rgba(0, 0, 0, .2) solid;\n  border-radius: 4px;\n  word-break: break-all;\n  min-height: 60px;\n}\n\n.text-content-container {\n  padding-top: 8px;\n}\n\n.text-content-container-placeholder {\n  padding-top: 8px;\n  color: gray;\n  font-style: italic;\n}\n\n.text-edit-container{\n  width: 100%;\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{labelText}}                                            save                                        cancel                                                {{labelText}}                            edit                                            {{line.replace(\\'\\n\\', \\'\\')}}                        '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TextFragment.html":{"url":"interfaces/TextFragment.html","title":"interface - TextFragment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TextFragment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/label-search/label-search.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { concat, of, Subject, Observable, BehaviorSubject } from 'rxjs';\nimport { catchError, distinctUntilChanged, switchMap, tap } from 'rxjs/operators';\nimport { FilterLabel, isFilterLabel, LabelStoreService } from '../../data/label/label-store.service';\nimport { StateService } from '../../state.service';\n\n/**\n * This component is responsible for the display of the search bar above the graph.\n * It allows for filtering issues by multiple labels and text fragments.\n */\n@Component({\n  selector: 'app-label-search',\n  templateUrl: './label-search.component.html',\n  styleUrls: ['./label-search.component.scss']\n})\nexport class LabelSearchComponent implements OnInit {\n  public filterSelection$ = new BehaviorSubject({labels: [], texts: []});\n\n  labels$: Observable;\n  labelsLoading = false;\n  labelsInput$ = new Subject();\n  selectedLabels: FilterElement[] = [];\n\n  constructor(private labelStore: LabelStoreService, private ss: StateService) {\n  }\n\n  ngOnInit() {\n      this.loadLabels();\n  }\n\n  trackByFn(item: FilterLabel) {\n      return item.id;\n  }\n\n  /**\n   * Emit value representing label and text fragments in the search bar via this.filterSelection$\n   */\n  emitSelectedLabels() {\n    const selection: FilterSelection = {texts: [], labels: []};\n    // find out which elements in search bar correspond to an existing label on the backend and which to a text fragment\n    selection.texts = this.selectedLabels.filter(item => !isFilterLabel(item)).map(item => item.name);\n    selection.labels = this.selectedLabels.filter(label => isFilterLabel(label)) as FilterLabel[];\n    this.filterSelection$.next(selection);\n  }\n\n  /**\n   * Load all labels from backend that match the currently typed in ng-select element\n   */\n  private loadLabels() {\n      this.labels$ = concat(\n          of([]), // default items\n          this.labelsInput$.pipe(\n              distinctUntilChanged(),\n              tap(() => this.labelsLoading = true),\n              switchMap(term => this.labelStore.getMatchingLabels(this.ss.state.project.node.id, term).pipe(\n                  catchError(() => of([])), // empty list on error\n                  tap(() => this.labelsLoading = false)\n              ))\n          )\n      );\n  }\n\n}\n\n\n/**\n * The bar can contain elements standing for labels and elements for text fragments.\n */\ntype FilterElement = TextFragment | FilterLabel;\n\ninterface TextFragment {\n  name: string;\n}\n\nexport interface FilterSelection {\n  texts: string[];\n  labels: FilterLabel[];\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeFormatter.html":{"url":"classes/TimeFormatter.html","title":"class - TimeFormatter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeFormatter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/issue-detail/TimeFormatter.ts\n        \n\n\n            \n                Description\n            \n            \n                This class contains functionality for time formatting which is needed for correct time representation\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatTime\n                            \n                            \n                                formatTimeDifference\n                            \n                            \n                                pluralize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        formatTime\n                        \n                    \n                \n            \n            \n                \nformatTime(time: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/TimeFormatter.ts:11\n                \n            \n\n\n            \n                \n                    E.g. converts (2021-10-01T19:44:04.813Z) to\n(Fri Oct 01 2021 21:44:04 GMT+0200 (Mitteleuropäische Sommerzeit))\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatTimeDifference\n                        \n                    \n                \n            \n            \n                \nformatTimeDifference(dateString: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/TimeFormatter.ts:19\n                \n            \n\n\n            \n                \n                    E.g. converts (2021-11-02T12:27:58.192Z) to (8 days ago)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dateString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluralize\n                        \n                    \n                \n            \n            \n                \npluralize(n: number, singular: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/TimeFormatter.ts:50\n                \n            \n\n\n            \n                \n                    Change singular form of a word into pluralized form if necessary.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    n\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        number of entities\n\n                                    \n                                \n                                \n                                    singular\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        singular form of the word\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class TimeFormatter{\n\n  /**\n   * E.g. converts (2021-10-01T19:44:04.813Z) to\n   * (Fri Oct 01 2021 21:44:04 GMT+0200 (Mitteleuropäische Sommerzeit))\n   * @param time\n   */\n  formatTime(time: string): string {\n    return new Date(Date.parse(time)).toString();\n  }\n\n  /**\n   * E.g. converts (2021-11-02T12:27:58.192Z) to (8 days ago)\n   * @param dateString\n   */\n  formatTimeDifference(dateString: string): string {\n    const pastTimeMs = Date.parse(dateString);\n    const nowMs = Date.now();\n    const now = new Date(nowMs);\n    const pastTime = new Date(pastTimeMs);\n\n    const months = (now.getMonth() - pastTime.getMonth()) + (now.getFullYear() - pastTime.getFullYear()) * 12;\n    const minutes = Math.round((nowMs - pastTimeMs) / 1000 / 60);\n    const hours = Math.round(minutes / 60);\n    const days = Math.round(hours / 24);\n\n    if (months >= 12) {\n      return this.pluralize(months / 12, 'year') + ' ago';\n    } else if (days >= 31) {\n      return this.pluralize(months, 'month') + ' ago';\n    } else if (hours >= 24) {\n      return this.pluralize(days, 'day') + ' ago';\n    } else if (minutes >= 60) {\n      return this.pluralize(hours, 'hour') + ' ago';\n    } else if (minutes >= 1) {\n      return this.pluralize(minutes, 'minute') + ' ago';\n    }\n\n    return 'just now';\n  }\n\n  /**\n   * Change singular form of a word into pluralized form if necessary.\n   * @param n number of entities\n   * @param singular singular form of the word\n   */\n  pluralize(n: number, singular: string): string {\n    return (n === 1 ? n + ' ' + singular : n + ' ' + singular + 's');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TimelineCoalescedItemsDirective.html":{"url":"directives/TimelineCoalescedItemsDirective.html","title":"directive - TimelineCoalescedItemsDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  TimelineCoalescedItemsDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/issue-detail/timeline/coalesced/timeline-item.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This directive is used in conjunction with an ng-template.\nThe content of the ng-template specifies the content of a timeline item, if it was coalesced\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appCoalescedTimelineItems]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef<>)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef<>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, ChangeDetectorRef, Component, ContentChild, Directive, Input, TemplateRef} from '@angular/core';\nimport {CoalescedTimelineItem} from '@app/issue-detail/timeline/timeline.component';\nimport {TimeFormatter} from '@app/issue-detail/TimeFormatter';\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if it was *not* coalesced\n */\n@Directive({\n  selector: '[appSingleTimelineItem]'\n})\nexport class TimelineSingleItemDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if it was coalesced\n */\n@Directive({\n  selector: '[appCoalescedTimelineItems]'\n})\nexport class TimelineCoalescedItemsDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if the attribute `showDeleted` of the\n * {@link TimelineItemComponent} is set to `true`.\n */\n@Directive({\n  selector: '[appTimelineItemDeleted]'\n})\nexport class TimelineItemDeletedDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This component provides an easy method to switch between the different possible content types of a timeline item,\n * such as single, coalesced or deleted.\n * Additionally, the formatted time is shown.\n */\n@Component({\n  selector: 'app-timeline-item',\n  templateUrl: './timeline-item.component.html',\n  styleUrls: ['../timeline.component.scss']\n})\nexport class TimelineItemComponent implements AfterViewInit {\n  /** The timeline item to show */\n  @Input() timelineItem: CoalescedTimelineItem;\n  /** If this option is set to true, the template with the `appTimelineItemDeleted` directive is shown */\n  @Input() showDeleted = false;\n\n  /** The content to be shown if the timeline item was not coalesced */\n  @ContentChild(TimelineSingleItemDirective) timelineItemContent: TimelineSingleItemDirective;\n  /** The content to be shown if the timeline item was coalesced */\n  @ContentChild(TimelineCoalescedItemsDirective) timelineItemsContent: TimelineCoalescedItemsDirective;\n  /** The content to be shown if the timeline item contains deleted data */\n  @ContentChild(TimelineItemDeletedDirective) timelineItemDeletedContent: TimelineItemDeletedDirective;\n\n  timeFormatter: TimeFormatter = new TimeFormatter();\n  activeItemContent: TemplateRef = null;\n\n  constructor(private changeDetector: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit() {\n    if (this.showDeleted) {\n      this.activeItemContent = this.timelineItemDeletedContent.template;\n    } else if (this.timelineItem.isCoalesced && this.timelineItemsContent) {\n      this.activeItemContent = this.timelineItemsContent.template;\n    } else if (!this.timelineItem.isCoalesced) {\n      this.activeItemContent = this.timelineItemContent.template;\n    }\n\n    this.changeDetector.detectChanges();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimelineItemComponent.html":{"url":"components/TimelineItemComponent.html","title":"component - TimelineItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TimelineItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-detail/timeline/coalesced/timeline-item.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component provides an easy method to switch between the different possible content types of a timeline item,\nsuch as single, coalesced or deleted.\nAdditionally, the formatted time is shown.\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-timeline-item\n            \n\n            \n                styleUrls\n                ../timeline.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./timeline-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeItemContent\n                            \n                            \n                                timeFormatter\n                            \n                            \n                                timelineItemContent\n                            \n                            \n                                timelineItemDeletedContent\n                            \n                            \n                                timelineItemsContent\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                showDeleted\n                            \n                            \n                                timelineItem\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(changeDetector: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changeDetector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        showDeleted\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:56\n                            \n                        \n                \n                    \n                        If this option is set to true, the template with the appTimelineItemDeleted directive is shown\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        timelineItem\n                    \n                \n                \n                    \n                        Type :         CoalescedTimelineItem\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:54\n                            \n                        \n                \n                    \n                        The timeline item to show\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeItemContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef<>\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeFormatter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TimeFormatter\n\n                    \n                \n                \n                    \n                        Default value : new TimeFormatter()\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timelineItemContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TimelineSingleItemDirective\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(TimelineSingleItemDirective)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:59\n                        \n                    \n\n            \n                \n                    The content to be shown if the timeline item was not coalesced\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timelineItemDeletedContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TimelineItemDeletedDirective\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(TimelineItemDeletedDirective)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:63\n                        \n                    \n\n            \n                \n                    The content to be shown if the timeline item contains deleted data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timelineItemsContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TimelineCoalescedItemsDirective\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(TimelineCoalescedItemsDirective)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:61\n                        \n                    \n\n            \n                \n                    The content to be shown if the timeline item was coalesced\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, ChangeDetectorRef, Component, ContentChild, Directive, Input, TemplateRef} from '@angular/core';\nimport {CoalescedTimelineItem} from '@app/issue-detail/timeline/timeline.component';\nimport {TimeFormatter} from '@app/issue-detail/TimeFormatter';\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if it was *not* coalesced\n */\n@Directive({\n  selector: '[appSingleTimelineItem]'\n})\nexport class TimelineSingleItemDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if it was coalesced\n */\n@Directive({\n  selector: '[appCoalescedTimelineItems]'\n})\nexport class TimelineCoalescedItemsDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if the attribute `showDeleted` of the\n * {@link TimelineItemComponent} is set to `true`.\n */\n@Directive({\n  selector: '[appTimelineItemDeleted]'\n})\nexport class TimelineItemDeletedDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This component provides an easy method to switch between the different possible content types of a timeline item,\n * such as single, coalesced or deleted.\n * Additionally, the formatted time is shown.\n */\n@Component({\n  selector: 'app-timeline-item',\n  templateUrl: './timeline-item.component.html',\n  styleUrls: ['../timeline.component.scss']\n})\nexport class TimelineItemComponent implements AfterViewInit {\n  /** The timeline item to show */\n  @Input() timelineItem: CoalescedTimelineItem;\n  /** If this option is set to true, the template with the `appTimelineItemDeleted` directive is shown */\n  @Input() showDeleted = false;\n\n  /** The content to be shown if the timeline item was not coalesced */\n  @ContentChild(TimelineSingleItemDirective) timelineItemContent: TimelineSingleItemDirective;\n  /** The content to be shown if the timeline item was coalesced */\n  @ContentChild(TimelineCoalescedItemsDirective) timelineItemsContent: TimelineCoalescedItemsDirective;\n  /** The content to be shown if the timeline item contains deleted data */\n  @ContentChild(TimelineItemDeletedDirective) timelineItemDeletedContent: TimelineItemDeletedDirective;\n\n  timeFormatter: TimeFormatter = new TimeFormatter();\n  activeItemContent: TemplateRef = null;\n\n  constructor(private changeDetector: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit() {\n    if (this.showDeleted) {\n      this.activeItemContent = this.timelineItemDeletedContent.template;\n    } else if (this.timelineItem.isCoalesced && this.timelineItemsContent) {\n      this.activeItemContent = this.timelineItemsContent.template;\n    } else if (!this.timelineItem.isCoalesced) {\n      this.activeItemContent = this.timelineItemContent.template;\n    }\n\n    this.changeDetector.detectChanges();\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      {{this.timeFormatter.formatTimeDifference(timelineItem.time)}}\n    \n  \n\n\n    \n\n    \n                \n                    ../timeline.component.scss\n                \n                .timeline {\n  list-style: none;\n  margin: 0;\n  padding: 20px 0 20px;\n  position: relative;\n\n  &::before {\n    top: 0;\n    bottom: 0;\n    position: absolute;\n    content: \" \";\n    width: 2px;\n    background: rgba(0, 0, 0, 0.12);\n    left: 35px;\n  }\n\n  & > li {\n    margin-bottom: 20px;\n    position: relative;\n    display: flex;\n    align-items: flex-start;\n\n    & > .timeline-badge {\n      color: #fff;\n      $size: 50px;\n      width: $size;\n      height: $size;\n      line-height: 50px;\n      font-size: 2.5em;\n      text-align: center;\n      position: relative;\n      top: 16px;\n      margin-left: calc(36px - (#{$size} / 2));\n      margin-right: 12px;\n      background-color: #999999;\n      z-index: 100;\n      border-radius: 50%;\n    }\n\n    & > .timeline-panel {\n      flex: 1;\n      border: 1px solid #d4d4d4;\n      border-radius: 2px;\n      padding: 20px;\n      position: relative;\n      -webkit-box-shadow: 0 1px 6px rgba(0, 0, 0, 0.175);\n      box-shadow: 0 1px 6px rgba(0, 0, 0, 0.175);\n\n      &::before {\n        position: absolute;\n        top: 26px;\n        display: inline-block;\n        border-top: 15px solid transparent;\n        border-left: 15px solid #ccc;\n        border-right: 0 solid #ccc;\n        border-bottom: 15px solid transparent;\n        content: \" \";\n        border-left-width: 0;\n        border-right-width: 15px;\n        left: -15px;\n        right: auto;\n      }\n\n      &::after {\n        position: absolute;\n        top: 27px;\n        display: inline-block;\n        border-top: 14px solid transparent;\n        border-left: 14px solid #fafafa;\n        border-right: 0 solid #fafafa;\n        border-bottom: 14px solid transparent;\n        content: \" \";\n        border-left-width: 0;\n        border-right-width: 14px;\n        left: -14px;\n        right: auto;\n      }\n    }\n\n    & > .commentContainer {\n      flex: 1;\n      left: -36px;\n      z-index: 100;\n\n      ::ng-deep .timeline-item::before {\n        display: none; // hide duplicate line\n      }\n    }\n  }\n}\n.timeline-badge.warning {\n  background-color: #f0ad4e !important;\n}\n\n.timeline-badge.closed {\n  background-color: #ff0036 !important;\n}\n\n.timeline-badge.reopened {\n  background-color: #00ba39 !important;\n}\n\n.timeline-title {\n  margin-top: 0;\n  color: inherit;\n}\n\n.timeline-body > p,\n.timeline-body > ul {\n  margin-bottom: 0;\n}\n\n.timeline-body > p + p {\n  margin-top: 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{this.timeFormatter.formatTimeDifference(timelineItem.time)}}      '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimelineItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TimelineItemDeletedDirective.html":{"url":"directives/TimelineItemDeletedDirective.html","title":"directive - TimelineItemDeletedDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  TimelineItemDeletedDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/issue-detail/timeline/coalesced/timeline-item.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This directive is used in conjunction with an ng-template.\nThe content of the ng-template specifies the content of a timeline item, if the attribute showDeleted of the\nTimelineItemComponent is set to true.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appTimelineItemDeleted]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef<>)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef<>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, ChangeDetectorRef, Component, ContentChild, Directive, Input, TemplateRef} from '@angular/core';\nimport {CoalescedTimelineItem} from '@app/issue-detail/timeline/timeline.component';\nimport {TimeFormatter} from '@app/issue-detail/TimeFormatter';\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if it was *not* coalesced\n */\n@Directive({\n  selector: '[appSingleTimelineItem]'\n})\nexport class TimelineSingleItemDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if it was coalesced\n */\n@Directive({\n  selector: '[appCoalescedTimelineItems]'\n})\nexport class TimelineCoalescedItemsDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if the attribute `showDeleted` of the\n * {@link TimelineItemComponent} is set to `true`.\n */\n@Directive({\n  selector: '[appTimelineItemDeleted]'\n})\nexport class TimelineItemDeletedDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This component provides an easy method to switch between the different possible content types of a timeline item,\n * such as single, coalesced or deleted.\n * Additionally, the formatted time is shown.\n */\n@Component({\n  selector: 'app-timeline-item',\n  templateUrl: './timeline-item.component.html',\n  styleUrls: ['../timeline.component.scss']\n})\nexport class TimelineItemComponent implements AfterViewInit {\n  /** The timeline item to show */\n  @Input() timelineItem: CoalescedTimelineItem;\n  /** If this option is set to true, the template with the `appTimelineItemDeleted` directive is shown */\n  @Input() showDeleted = false;\n\n  /** The content to be shown if the timeline item was not coalesced */\n  @ContentChild(TimelineSingleItemDirective) timelineItemContent: TimelineSingleItemDirective;\n  /** The content to be shown if the timeline item was coalesced */\n  @ContentChild(TimelineCoalescedItemsDirective) timelineItemsContent: TimelineCoalescedItemsDirective;\n  /** The content to be shown if the timeline item contains deleted data */\n  @ContentChild(TimelineItemDeletedDirective) timelineItemDeletedContent: TimelineItemDeletedDirective;\n\n  timeFormatter: TimeFormatter = new TimeFormatter();\n  activeItemContent: TemplateRef = null;\n\n  constructor(private changeDetector: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit() {\n    if (this.showDeleted) {\n      this.activeItemContent = this.timelineItemDeletedContent.template;\n    } else if (this.timelineItem.isCoalesced && this.timelineItemsContent) {\n      this.activeItemContent = this.timelineItemsContent.template;\n    } else if (!this.timelineItem.isCoalesced) {\n      this.activeItemContent = this.timelineItemContent.template;\n    }\n\n    this.changeDetector.detectChanges();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TimelineSingleItemDirective.html":{"url":"directives/TimelineSingleItemDirective.html","title":"directive - TimelineSingleItemDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  TimelineSingleItemDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/issue-detail/timeline/coalesced/timeline-item.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This directive is used in conjunction with an ng-template.\nThe content of the ng-template specifies the content of a timeline item, if it was not coalesced\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appSingleTimelineItem]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef<>)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef<>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, ChangeDetectorRef, Component, ContentChild, Directive, Input, TemplateRef} from '@angular/core';\nimport {CoalescedTimelineItem} from '@app/issue-detail/timeline/timeline.component';\nimport {TimeFormatter} from '@app/issue-detail/TimeFormatter';\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if it was *not* coalesced\n */\n@Directive({\n  selector: '[appSingleTimelineItem]'\n})\nexport class TimelineSingleItemDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if it was coalesced\n */\n@Directive({\n  selector: '[appCoalescedTimelineItems]'\n})\nexport class TimelineCoalescedItemsDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if the attribute `showDeleted` of the\n * {@link TimelineItemComponent} is set to `true`.\n */\n@Directive({\n  selector: '[appTimelineItemDeleted]'\n})\nexport class TimelineItemDeletedDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This component provides an easy method to switch between the different possible content types of a timeline item,\n * such as single, coalesced or deleted.\n * Additionally, the formatted time is shown.\n */\n@Component({\n  selector: 'app-timeline-item',\n  templateUrl: './timeline-item.component.html',\n  styleUrls: ['../timeline.component.scss']\n})\nexport class TimelineItemComponent implements AfterViewInit {\n  /** The timeline item to show */\n  @Input() timelineItem: CoalescedTimelineItem;\n  /** If this option is set to true, the template with the `appTimelineItemDeleted` directive is shown */\n  @Input() showDeleted = false;\n\n  /** The content to be shown if the timeline item was not coalesced */\n  @ContentChild(TimelineSingleItemDirective) timelineItemContent: TimelineSingleItemDirective;\n  /** The content to be shown if the timeline item was coalesced */\n  @ContentChild(TimelineCoalescedItemsDirective) timelineItemsContent: TimelineCoalescedItemsDirective;\n  /** The content to be shown if the timeline item contains deleted data */\n  @ContentChild(TimelineItemDeletedDirective) timelineItemDeletedContent: TimelineItemDeletedDirective;\n\n  timeFormatter: TimeFormatter = new TimeFormatter();\n  activeItemContent: TemplateRef = null;\n\n  constructor(private changeDetector: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit() {\n    if (this.showDeleted) {\n      this.activeItemContent = this.timelineItemDeletedContent.template;\n    } else if (this.timelineItem.isCoalesced && this.timelineItemsContent) {\n      this.activeItemContent = this.timelineItemsContent.template;\n    } else if (!this.timelineItem.isCoalesced) {\n      this.activeItemContent = this.timelineItemContent.template;\n    }\n\n    this.changeDetector.detectChanges();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopToolbarComponent.html":{"url":"components/TopToolbarComponent.html","title":"component - TopToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TopToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/top-toolbar/top-toolbar.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is responsible for showing the top bar containing the home icon\non the left-hand side and the mock settings and user icon as well as the functional\nlog out button on the right-hand side. It does NOT determine whether to show the sandwich\nmenu icon itself, but gets this information passed from FrameComponent.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-top-toolbar\n            \n\n            \n                styleUrls\n                ./top-toolbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./top-toolbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                isHandset$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                handleClick\n                            \n                            \n                                    Public\n                                openSettingsDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                showMenuButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                menuClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver, authService: AuthenticationService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/top-toolbar/top-toolbar.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        showMenuButton\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/top-toolbar/top-toolbar.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        menuClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/top-toolbar/top-toolbar.component.ts:25\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        handleClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/top-toolbar/top-toolbar.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openSettingsDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    openSettingsDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/top-toolbar/top-toolbar.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthenticationService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/top-toolbar/top-toolbar.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isHandset$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/top-toolbar/top-toolbar.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Output, EventEmitter, Input } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { AuthenticationService } from '@app/auth/authentication.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsDialogComponent } from '@app/dialogs/settings-dialog/settings-dialog.component';\n\n/**\n * This component is responsible for showing the top bar containing the home icon\n * on the left-hand side and the mock settings and user icon as well as the functional\n * log out button on the right-hand side. It does NOT determine whether to show the sandwich\n * menu icon itself, but gets this information passed from FrameComponent.\n */\n@Component({\n  selector: 'app-top-toolbar',\n  templateUrl: './top-toolbar.component.html',\n  styleUrls: ['./top-toolbar.component.scss']\n})\nexport class TopToolbarComponent {\n  @Input()\n  showMenuButton = false;\n\n  @Output()\n  public menuClick = new EventEmitter();\n\n  isHandset$: Observable = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver, public authService: AuthenticationService, private dialog: MatDialog) { }\n  \n  public handleClick() {\n    this.menuClick.emit();\n  }\n\n  public openSettingsDialog() {\n    this.dialog.open(SettingsDialogComponent);\n  }\n}\n\n    \n\n    \n        \n  \n  \n    menu\n  \n  \n    home\n  \n  \n  \n  \n    \n      settings\n    \n    \n      account_circle\n    \n    \n      logout\n    \n  \n\n\n    \n\n    \n                \n                    ./top-toolbar.component.scss\n                \n                mat-toolbar {\n  position: sticky;\n  top: 0;\n  z-index: 1;\n}\n.toolbar-spacer {\n  flex: 1 1 auto;\n}\n\n.mat-toolbar {\n  justify-content: space-between;\n}\n\n.toolbar-spacer {\n  flex: 1 1 auto;\n}\n\n#current-project {\n  font-size: 12px;\n  border: 3px solid white;\n  border-radius: 0.5em;\n  padding: 0 4px 0 4px;\n  margin: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        menu        home                  settings              account_circle              logout      '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'TopToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/authentication.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {environment} from '@environments/environment';\nimport {Router} from '@angular/router';\nimport {map} from 'rxjs/operators';\n\n/**\n * Responsible for saving user name, id and jwt token in localstorage\n * and exposing the name and id through currentUserSubject\n */\n@Injectable({providedIn: 'root'})\nexport class AuthenticationService {\n\n  readonly userStorageKey = 'currentUser';\n  private currentUserSubject: BehaviorSubject;\n  public currentUser: Observable;\n\n  constructor(private http: HttpClient, private router: Router) {\n    this.currentUserSubject = new BehaviorSubject(this.fetchUserFromStorage());\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): User {\n    return this.currentUserSubject.value;\n  }\n\n  fetchUserFromStorage(): User {\n    return JSON.parse(localStorage.getItem(this.userStorageKey));\n  }\n\n  saveUserToStorage(user: User): void {\n    localStorage.setItem(this.userStorageKey, JSON.stringify(user));\n  }\n\n  /**\n   * If login is sucessfull save the user name, id and jwt token to local storage and expose the name and id\n   * through currentUserSubject. If the login fails the returned observable errors.\n   * @param username provided by user to LoginComponent\n   * @param password provided by user to LoginComponent\n   * @returns the logged in user, errors if login is not successful\n   */\n  login(username: string, password: string): Observable {\n    return this.http.post(environment.loginUrl, {username, password})\n      .pipe(map(response => {\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        localStorage.setItem('token', response.token);\n        const tokenPayload = JSON.parse(atob(response.token.split('.')[1]));\n        const user = {name: tokenPayload.name, id: tokenPayload.sub};\n        this.saveUserToStorage(user);\n        this.currentUserSubject.next(user);\n        return user;\n      }));\n  }\n\n  /**\n   * remove user from local storage and set subject holding the current user to null\n   */\n  logout() {\n    localStorage.removeItem('currentUser');\n    localStorage.removeItem('token');\n    this.router.navigate(['login']);\n    this.currentUserSubject.next(null);\n  }\n}\n\ninterface User {\n  name: string;\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserItemComponent.html":{"url":"components/UserItemComponent.html","title":"component - UserItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/user-item/user-item.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a user.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-item\n            \n\n            \n                styleUrls\n                ./user-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                noDisplay\n                            \n                            \n                                short\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        noDisplay\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/user-item/user-item.component.ts:15\n                            \n                        \n                \n                    \n                        Hides the display name.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        short\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/user-item/user-item.component.ts:13\n                            \n                        \n                \n                    \n                        Will show only the display name or username.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                \n                    \n                        Type :         User\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/user-item/user-item.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { User } from 'src/generated/graphql-dgql';\n\n/** This component displays a user. */\n@Component({\n  selector: 'app-user-item',\n  templateUrl: './user-item.component.html',\n  styleUrls: ['./user-item.component.scss']\n})\nexport class UserItemComponent {\n  @Input() user: User;\n  /** Will show only the display name or username. */\n  @Input() short = false;\n  /** Hides the display name. */\n  @Input() noDisplay = false;\n}\n\n    \n\n    \n        \n  \n    {{user.displayName}}\n  \n    \n    {{user.username}}\n  \n\n\n    \n\n    \n                \n                    ./user-item.component.scss\n                \n                .display-name {\n  font-weight: 500;\n}\n.username {\n  &.has-display-name {\n    opacity: 0.7;\n  }\n  &:not(.has-display-name) {\n    font-weight: 500;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{user.displayName}}          {{user.username}}  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'UserItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserNotifyService.html":{"url":"injectables/UserNotifyService.html","title":"injectable - UserNotifyService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserNotifyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user-notify/user-notify.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service provides functions for user notification\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                notifyError\n                            \n                            \n                                notifyInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-notify/user-notify.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        notifyError\n                        \n                    \n                \n            \n            \n                \nnotifyError(message: string, error?: Error)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-notify/user-notify.service.ts:33\n                \n            \n\n\n            \n                \n                    Notify the user that an error occurred\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The message to be shown\n\n                                    \n                                \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optionally, the error. This will be logged in the console, if defined.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notifyInfo\n                        \n                    \n                \n            \n            \n                \nnotifyInfo(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-notify/user-notify.service.ts:45\n                \n            \n\n\n            \n                \n                    Notify the user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The message to be shown\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {IndividualConfig, ToastrService} from 'ngx-toastr';\n\n/**\n * This service provides functions for user notification\n */\n@Injectable({providedIn: 'root'})\nexport class UserNotifyService {\n  /** @ignore */\n  private errorConfig: Partial = {\n    timeOut: 10000,\n    closeButton: true,\n    positionClass: 'toast-top-center',\n    enableHtml: true\n  };\n\n  /** @ignore */\n  private infoConfig: Partial = {\n    timeOut: 4000,\n    closeButton: true,\n    positionClass: 'toast-top-center',\n    enableHtml: true\n  };\n\n  constructor(private toastr: ToastrService) {\n  }\n\n  /**\n   * Notify the user that an error occurred\n   * @param message The message to be shown\n   * @param error Optionally, the error. This will be logged in the console, if defined.\n   */\n  notifyError(message: string, error?: Error) {\n    if (error !== undefined) {\n      console.log('Error:', error);\n    }\n\n    this.toastr.error(message, 'Error!', this.errorConfig);\n  }\n\n  /**\n   * Notify the user\n   * @param message The message to be shown\n   */\n  notifyInfo(message: string) {\n    this.toastr.info(message, 'Info', this.infoConfig);\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/queries/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                searchUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(qSearchUsers: SearchUsersGQL, qCurrentUser: CurrentUserGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data-dgql/queries/users.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        qSearchUsers\n                                                  \n                                                        \n                                                                        SearchUsersGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qCurrentUser\n                                                  \n                                                        \n                                                                        CurrentUserGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n            \n                \ncurrentUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/queries/users.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchUsers\n                        \n                    \n                \n            \n            \n                \nsearchUsers(filter: string | literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/queries/users.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            string | literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  CurrentUserGQL,\n  SearchUsersGQL\n} from 'src/generated/graphql-dgql';\nimport { promisifyApolloFetch } from '@app/data-dgql/queries/util';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n  constructor(\n    private qSearchUsers: SearchUsersGQL,\n    private qCurrentUser: CurrentUserGQL,\n  ) {}\n\n  searchUsers(filter: string | { username: string }) {\n    let query = '';\n    // filter accepts an object for compatibility with UserFilter\n    // FIXME: this is not very elegant of a solution\n    if (typeof filter === 'string') {\n      query = filter;\n    } else if (filter) {\n      query = filter.username;\n    }\n\n    if (!query) {\n      // searchUser does not work without a search string\n      return Promise.resolve([]);\n    }\n\n    return promisifyApolloFetch(this.qSearchUsers.fetch({ query })).then(data => data.searchUser);\n  }\n\n  currentUser() {\n    return promisifyApolloFetch(this.qCurrentUser.fetch());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Vector.html":{"url":"classes/Vector.html","title":"class - Vector","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Vector\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/automatic-layout.ts\n        \n\n\n            \n                Description\n            \n            \n                A simple 2D vector class.\nThe value of this vector is essentially immutable, every operation returns a new vector!\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                x\n                            \n                            \n                                    Public\n                                y\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                add\n                            \n                            \n                                    Public\n                                addSelf\n                            \n                            \n                                    Public\n                                distanceToLine\n                            \n                            \n                                    Public\n                                dot\n                            \n                            \n                                    Static\n                                isBehind\n                            \n                            \n                                    Public\n                                isZero\n                            \n                            \n                                    Public\n                                length\n                            \n                            \n                                    Public\n                                normalize\n                            \n                            \n                                    Public\n                                perpendicularClockwise\n                            \n                            \n                                    Public\n                                perpendicularCounterClockwise\n                            \n                            \n                                    Public\n                                scale\n                            \n                            \n                                    Public\n                                subtract\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(x: number, y: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/graphs/automatic-layout.ts:9\n                            \n                        \n\n                \n                    \n                            Vector constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        x\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                X component, 0 by default\n\n                                                        \n                                                \n                                                \n                                                        y\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Y component, 0 by default\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        x\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        y\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        add\n                        \n                    \n                \n            \n            \n                \n                    \n                    add(other: Vector)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:64\n                \n            \n\n\n            \n                \n                    Add this vector and another vector\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The other vector\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Vector\n\n                    \n                    \n                        A new vector, the sum of this vector and the other vector\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addSelf\n                        \n                    \n                \n            \n            \n                \n                    \n                    addSelf(other: Vector)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:73\n                \n            \n\n\n            \n                \n                    Add another vector on this vector\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The other vector\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Vector\n\n                    \n                    \n                        This vector\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        distanceToLine\n                        \n                    \n                \n            \n            \n                \n                    \n                    distanceToLine(sourcePoint: Vector, targetPoint: Vector)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:123\n                \n            \n\n\n            \n                \n                    Calculate the distance of a point, as represented by this vector, to a line, as defined by two other points.\nNote that the length of the line is infinite, and that this function calculates the distance to this infinitely\nlong line.\nIf this is not desired, the #isBehind function can be used to determine if a point is outside the defined\nline segment.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sourcePoint\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The source point of the line\n\n                                    \n                                \n                                \n                                    targetPoint\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The target point of the line\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The distance to the infinitely long line\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        dot\n                        \n                    \n                \n            \n            \n                \n                    \n                    dot(other: Vector)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:109\n                \n            \n\n\n            \n                \n                    Calculate the dot product\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The other vector\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        dot(this, other)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isBehind\n                        \n                    \n                \n            \n            \n                \n                    \n                    isBehind(source: Vector, target: Vector, point: Vector)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:29\n                \n            \n\n\n            \n                \n                    Check if the vector pointing from source to point is pointing away more than 90 degrees to the vector pointing\nfrom the source to the target.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The source point, as a vector\n\n                                    \n                                \n                                \n                                    target\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The target point, as a vector\n\n                                    \n                                \n                                \n                                    point\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The point to check, as a vector\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        dot(target - source, point - source) \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isZero\n                        \n                    \n                \n            \n            \n                \n                    \n                    isZero()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:133\n                \n            \n\n\n            \n                \n                    Check if both components of this vector are zero\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True if it is zero\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        length\n                        \n                    \n                \n            \n            \n                \n                    \n                    length()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:47\n                \n            \n\n\n            \n                \n                    Length of the vector\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        normalize\n                        \n                    \n                \n            \n            \n                \n                    \n                    normalize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:55\n                \n            \n\n\n            \n                \n                    Normalize the vector\n\n\n                    \n                    \n                    \n                        Returns :         Vector\n\n                    \n                    \n                        A new, normalized vector\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        perpendicularClockwise\n                        \n                    \n                \n            \n            \n                \n                    \n                    perpendicularClockwise()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:92\n                \n            \n\n\n            \n                \n                    Rotate this vector by 90 degrees in the clockwise direction\n\n\n                    \n                    \n                    \n                        Returns :         Vector\n\n                    \n                    \n                        A new, rotated vector\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        perpendicularCounterClockwise\n                        \n                    \n                \n            \n            \n                \n                    \n                    perpendicularCounterClockwise()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:100\n                \n            \n\n\n            \n                \n                    Rotate this vector by 90 degrees in the counter-clockwise direction\n\n\n                    \n                    \n                    \n                        Returns :         Vector\n\n                    \n                    \n                        A new, rotated vector\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        scale\n                        \n                    \n                \n            \n            \n                \n                    \n                    scale(factor: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:40\n                \n            \n\n\n            \n                \n                    Scale the vector\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    factor\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The scalar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Vector\n\n                    \n                    \n                        A new, scaled vector\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        subtract\n                        \n                    \n                \n            \n            \n                \n                    \n                    subtract(other: Vector)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:84\n                \n            \n\n\n            \n                \n                    Subtract this vector and another vector\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The other vector\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Vector\n\n                    \n                    \n                        A new vector, the difference of this vector and the other vector\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {NodeType} from '@app/graphs/issue-graph/issue-graph-nodes';\n\n/**\n * A simple 2D vector class.\n * The value of this vector is essentially immutable, every operation returns a new vector!\n */\nclass Vector {\n  public x: number;\n  public y: number;\n\n  /**\n   * Vector constructor\n   * @param x X component, 0 by default\n   * @param y Y component, 0 by default\n   */\n  constructor(x: number = 0, y: number = 0) {\n    this.x = x;\n    this.y = y;\n  }\n\n  /**\n   * Check if the vector pointing from `source` to `point` is pointing away more than 90 degrees to the vector pointing\n   * from the `source` to the `target`.\n   * @param source The source point, as a vector\n   * @param target The target point, as a vector\n   * @param point The point to check, as a vector\n   * @return dot(target - source, point - source)  = new Set();\n\n  /** Padding to be added to this node */\n  readonly padding: number;\n\n  constructor(id: string | number, positionX: number, positionY: number, nodeType: NodeType) {\n    this.id = id;\n    this.padding = nodeType === NodeType.Component ? LayoutNode.PADDING_COMPONENT : LayoutNode.PADDING_INTERFACE;\n    this.position = new Vector(positionX, positionY);\n  }\n\n  /**\n   * Create an edge between this node and another node.\n   * Does **not** create a connection from the other node to this node!\n   * @param other The other node\n   */\n  public connectTo(other: LayoutNode): void {\n    this.connectedTo.add(other);\n  }\n\n  /**\n   * Calculate the movement direction that this node should move in, based on all other nodes around it\n   * @param allNodes All nodes, can include this node as well\n   * @returns The direction in which this node wants to travel\n   */\n  public calculateMovement(allNodes: Array): Vector {\n    if (this.fixed) {\n      return new Vector();\n    }\n\n    // Total force acting on this node\n    const result = new Vector();\n\n    // Keeps track of edges already visited\n    const otherNodesVisited = new Set();\n\n    for (const otherNode of allNodes) {\n      // Iterate over all other nodes\n      if (otherNode.id === this.id) {\n        continue;\n      }\n\n      // If both nodes are at an identical position, add a small randomized offset to this nodes position\n      let towardsOther = otherNode.position.subtract(this.position);\n      if (towardsOther.isZero()) {\n        this.position.x += Math.random() - .5;\n        this.position.y += Math.random() - .5;\n        towardsOther = otherNode.position.subtract(this.position);\n      }\n\n      const pad = this.padding + otherNode.padding;\n      const distance = Math.max(1, towardsOther.length() - pad);\n      towardsOther = towardsOther.scale(1 / distance);\n\n      // Move this node towards connected nodes, and away from non-connected nodes.\n      // Also make sure that a minimum spacing between nodes exists, regardless of connection.\n      let scale = 0;\n      if (this.connectedTo.has(otherNode)) {\n        if (distance ): void {\n  if (nodes.length === 0) {\n    return;\n  }\n\n  const directions = new Array(nodes.length);\n  // Fix an arbitrary node in place to prevent the graph from flying away\n  const firstNode = nodes[0];\n  firstNode.fixed = true;\n\n  // FIXME: This loop should stop early if no more (significant) changes happen\n  for (let v = 0; v \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            antDesignIcons\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            icons\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            toasterConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/auth/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                src/app/auth/authentication.service.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/cache-node.component.ts\n            \n            component\n            CacheNodeComponent\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/components/cursor-paginator/cursor-paginator.component.ts\n            \n            component\n            CursorPaginatorComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/components/issue-category/issue-category.component.ts\n            \n            component\n            IssueCategoryComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/issue-icon/issue-icon.component.ts\n            \n            component\n            IssueIconComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/components/issue-item/issue-item.component.ts\n            \n            component\n            IssueItemComponent\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/app/components/issue-label/issue-label.component.ts\n            \n            component\n            IssueLabelComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/issue-location/issue-location.component.ts\n            \n            component\n            IssueLocationComponent\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/components/item.directive.ts\n            \n            directive\n            ItemDirective\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/set-editor/set-editor-dialog.component.ts\n            \n            component\n            SetEditorDialogComponent\n            \n                5 %\n                (1/18)\n            \n        \n        \n            \n                \n                src/app/components/set-editor/set-editor-dialog.component.ts\n            \n            class\n            MultiSourceList\n            \n                45 %\n                (9/20)\n            \n        \n        \n            \n                \n                src/app/components/set-editor/set-editor-dialog.component.ts\n            \n            interface\n            SetEditorDialogData\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/set-editor/set-editor-dialog.component.ts\n            \n            interface\n            SetMultiSource\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/set-editor/set-editor.component.ts\n            \n            component\n            SetEditorComponent\n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                src/app/components/user-item/user-item.component.ts\n            \n            component\n            UserItemComponent\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            interface\n            ListId\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            interface\n            ListParams\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            interface\n            NodeId\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            function\n            decodeListId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            function\n            decodeNodeId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            function\n            encodeListId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            function\n            encodeNodeId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            function\n            nodeTypeFromTypename\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            variable\n            CURRENT_USER_NODE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            variable\n            ROOT_NODE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/index.ts\n            \n            injectable\n            DataService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/data-dgql/load.ts\n            \n            function\n            listParams\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/load.ts\n            \n            variable\n            listQueries\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/load.ts\n            \n            variable\n            nodeQueries\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/load.ts\n            \n            variable\n            queryList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/load.ts\n            \n            variable\n            queryNode\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/mutate.ts\n            \n            class\n            Mutations\n            \n                3 %\n                (1/27)\n            \n        \n        \n            \n                \n                src/app/data-dgql/queries/components.service.ts\n            \n            injectable\n            ComponentsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/data-dgql/queries/issues.service.ts\n            \n            injectable\n            IssuesService\n            \n                0 %\n                (0/43)\n            \n        \n        \n            \n                \n                src/app/data-dgql/queries/projects.service.ts\n            \n            injectable\n            ProjectsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/data-dgql/queries/queries.service.ts\n            \n            injectable\n            QueriesService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/data-dgql/queries/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/data-dgql/queries/util.ts\n            \n            interface\n            QueryListParams\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/data-dgql/queries/util.ts\n            \n            function\n            promisifyApolloFetch\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/query.ts\n            \n            class\n            DataList\n            \n                94 %\n                (16/17)\n            \n        \n        \n            \n                \n                src/app/data-dgql/query.ts\n            \n            class\n            DataNode\n            \n                81 %\n                (9/11)\n            \n        \n        \n            \n                \n                src/app/data-dgql/query.ts\n            \n            class\n            DataQuery\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/app/data-dgql/query.ts\n            \n            class\n            NodeCache\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/data-dgql/query.ts\n            \n            variable\n            CACHE_FAST_DEBOUNCE_TIME_MS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/query.ts\n            \n            variable\n            CACHE_INTERACTIVE_DEBOUNCE_TIME_MS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/query.ts\n            \n            variable\n            CACHE_STALE_TIME_MS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/query.ts\n            \n            variable\n            identity\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data/component/component-store.service.ts\n            \n            injectable\n            ComponentStoreService\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/data/interface/interface-store.service.ts\n            \n            injectable\n            InterfaceStoreService\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/graph-data.ts\n            \n            class\n            GraphComponent\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/graph-data.ts\n            \n            class\n            GraphDataFactory\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/graph-data.ts\n            \n            class\n            GraphInterface\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/graph-data.ts\n            \n            class\n            GraphIssue\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/graph-data.ts\n            \n            interface\n            GraphData\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/graph-data.ts\n            \n            function\n            computeRelatedFolders\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/graph-data.ts\n            \n            function\n            issueCounts\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/graph-data.ts\n            \n            function\n            removeOfferingComponents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/issue-graph-api.service.ts\n            \n            injectable\n            IssueGraphApiService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/issue-graph-state.service.ts\n            \n            injectable\n            IssueGraphStateService\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/data/issue/issue-store.service.ts\n            \n            injectable\n            IssueStoreService\n            \n                6 %\n                (1/16)\n            \n        \n        \n            \n                \n                src/app/data/label/label-store.service.ts\n            \n            injectable\n            LabelStoreService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/data/label/label-store.service.ts\n            \n            function\n            isFilterLabel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data/project/project-store.service.ts\n            \n            injectable\n            ProjectStoreService\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/dialogs/access-token-dialog/access-token-dialog.component.ts\n            \n            component\n            AccessTokenDialogComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts\n            \n            component\n            AddProjectMemberDialogComponent\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-component-dialog/create-component-dialog.component.ts\n            \n            component\n            CreateComponentDialogComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-component-dialog/create-component-dialog.component.ts\n            \n            interface\n            CreateComponentData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts\n            \n            component\n            CreateInterfaceDialogComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts\n            \n            interface\n            CreateInterfaceData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts\n            \n            component\n            CreateIssueDialogComponent\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts\n            \n            interface\n            DialogData\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts\n            \n            component\n            CreateEditLabelDialogComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts\n            \n            interface\n            CreateLabelDialogData\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-project-dialog/create-project-dialog.component.ts\n            \n            component\n            CreateProjectDialogComponent\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts\n            \n            component\n            ProfileSettingsDialogComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/dialogs/remove-dialog/remove-dialog.component.ts\n            \n            component\n            RemoveDialogComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/dialogs/remove-dialog/remove-dialog.component.ts\n            \n            interface\n            DialogData\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/dialogs/remove-project-member-component/remove-project-member-component.component.ts\n            \n            component\n            RemoveProjectMemberComponentComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/dialogs/settings-dialog/settings-dialog.component.ts\n            \n            component\n            SettingsDialogComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/frame/frame.component.ts\n            \n            component\n            FrameComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/graphql.module.ts\n            \n            function\n            createErrorLink\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphql.module.ts\n            \n            function\n            provideDefaultApollo\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/graphql.module.ts\n            \n            function\n            providePublicApollo\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/graphql.module.ts\n            \n            variable\n            basic\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphql.module.ts\n            \n            variable\n            defaultOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/graphql.module.ts\n            \n            variable\n            networkErrorToast\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/graphs/automatic-layout.ts\n            \n            class\n            LayoutNode\n            \n                93 %\n                (14/15)\n            \n        \n        \n            \n                \n                src/app/graphs/automatic-layout.ts\n            \n            class\n            Vector\n            \n                87 %\n                (14/16)\n            \n        \n        \n            \n                \n                src/app/graphs/automatic-layout.ts\n            \n            function\n            doGraphLayout\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/graphs/component-context-menu/component-context-menu.component.ts\n            \n            component\n            ComponentContextMenuComponent\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/app/graphs/component-context-menu/component-context-menu.component.ts\n            \n            injectable\n            ComponentContextMenuService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/graphs/component-context-menu/component-context-menu.component.ts\n            \n            interface\n            ComponentContextMenuData\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/graphs/component-context-menu/component-context-menu.component.ts\n            \n            variable\n            COMPONENT_CONTEXT_MENU_DATA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts\n            \n            component\n            IssueGraphControlsComponent\n            \n                23 %\n                (4/17)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/class-setters/issue-graph-class-setters.service.ts\n            \n            injectable\n            IssueGraphClassSettersService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/dynamic-template-registry/issue-graph-dynamic-template-registry.service.ts\n            \n            injectable\n            IssueGraphDynamicTemplateRegistryService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/group-behaviours.ts\n            \n            class\n            IssueGroupContainerBehaviour\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/group-behaviours.ts\n            \n            class\n            IssueGroupContainerParentBehaviour\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/group-behaviours.ts\n            \n            function\n            distance\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            interface\n            ComponentNode\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            interface\n            InterfaceNode\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            interface\n            IssueFolderNode\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            interface\n            IssueGroupContainerNode\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            interface\n            IssueNode\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            interface\n            Position\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            interface\n            RelationEdge\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            function\n            createComponentNode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            function\n            createConsumptionEdge\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            function\n            createInterfaceNode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            function\n            createInterfaceProvisionEdge\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            function\n            createIssueFolderNode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            function\n            createIssueGroupContainerNode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            function\n            createRelationEdge\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            function\n            getIssueFolderId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            variable\n            zeroPosition\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph.component.ts\n            \n            component\n            IssueGraphComponent\n            \n                62 %\n                (37/59)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph.component.ts\n            \n            interface\n            Positions\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/link-handles/issue-graph-link-handles.service.ts\n            \n            injectable\n            IssueGraphLinkHandlesService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/graphs/label-search/label-search.component.ts\n            \n            component\n            LabelSearchComponent\n            \n                30 %\n                (3/10)\n            \n        \n        \n            \n                \n                src/app/graphs/label-search/label-search.component.ts\n            \n            interface\n            FilterSelection\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/graphs/label-search/label-search.component.ts\n            \n            interface\n            TextFragment\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/graphs/shared.ts\n            \n            interface\n            FilterState\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/issue-detail/TimeFormatter.ts\n            \n            class\n            TimeFormatter\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/issue-detail/comment/comment.component.ts\n            \n            component\n            CommentComponent\n            \n                16 %\n                (2/12)\n            \n        \n        \n            \n                \n                src/app/issue-detail/issue-contents.component.ts\n            \n            component\n            IssueContentsComponent\n            \n                20 %\n                (3/15)\n            \n        \n        \n            \n                \n                src/app/issue-detail/issue-detail.component.ts\n            \n            component\n            IssueDetailComponent\n            \n                17 %\n                (3/17)\n            \n        \n        \n            \n                \n                src/app/issue-detail/issue-sidebar.component.ts\n            \n            component\n            IssueSidebarComponent\n            \n                2 %\n                (1/39)\n            \n        \n        \n            \n                \n                src/app/issue-detail/linked-issue-item.component.ts\n            \n            component\n            LinkedIssueItemComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/issue-detail/timeline/coalesced/timeline-item.component.ts\n            \n            component\n            TimelineItemComponent\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/app/issue-detail/timeline/coalesced/timeline-item.component.ts\n            \n            directive\n            TimelineCoalescedItemsDirective\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/issue-detail/timeline/coalesced/timeline-item.component.ts\n            \n            directive\n            TimelineItemDeletedDirective\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/issue-detail/timeline/coalesced/timeline-item.component.ts\n            \n            directive\n            TimelineSingleItemDirective\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/issue-detail/timeline/timeline.component.ts\n            \n            component\n            TimelineComponent\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                src/app/issue-detail/timeline/timeline.component.ts\n            \n            interface\n            CoalescedTimelineItem\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/issue-list/issue-filter.component.ts\n            \n            component\n            IssueFilterComponent\n            \n                64 %\n                (11/17)\n            \n        \n        \n            \n                \n                src/app/issue-list/issue-filter.component.ts\n            \n            function\n            convertValueForFilter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/issue-list/issue-filter.component.ts\n            \n            function\n            getDefaultForType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/issue-list/issue-filter.component.ts\n            \n            variable\n            listAllIssues\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/issue-list/issue-filter.component.ts\n            \n            variable\n            PREDICATES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/issue-list/issue-list.component.ts\n            \n            component\n            IssueListComponent\n            \n                29 %\n                (8/27)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/markdown/markdown-editor/markdown-editor.component.ts\n            \n            component\n            MarkdownEditorComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/markdown/markdown-preview/markdown-preview.component.ts\n            \n            component\n            MarkdownPreviewComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/node-details-page/node-details-page.component.ts\n            \n            component\n            NodeDetailsPageComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/node-details/node-details.component.ts\n            \n            component\n            NodeDetailsComponent\n            \n                27 %\n                (8/29)\n            \n        \n        \n            \n                \n                src/app/project-header/project-header.component.ts\n            \n            component\n            ProjectHeaderComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/project-issue-list/project-issue-list.component.ts\n            \n            component\n            ProjectIssueListComponent\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/project-list-component/project-list.component.ts\n            \n            component\n            ProjectListComponent\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/project-members/project-members.component.ts\n            \n            component\n            ProjectMembersComponent\n            \n                5 %\n                (1/18)\n            \n        \n        \n            \n                \n                src/app/project-members/project-members.component.ts\n            \n            interface\n            userMock\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/project-overview/project-overview.component.ts\n            \n            component\n            ProjectOverviewComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                src/app/route-animations.ts\n            \n            function\n            slideTo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/route-animations.ts\n            \n            variable\n            slider\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/side-nav/side-nav.component.ts\n            \n            component\n            SideNavComponent\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/state.service.ts\n            \n            injectable\n            StateService\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/state.service.ts\n            \n            interface\n            AppState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/text-display/text-display.component.ts\n            \n            component\n            TextDisplayComponent\n            \n                50 %\n                (6/12)\n            \n        \n        \n            \n                \n                src/app/top-toolbar/top-toolbar.component.ts\n            \n            component\n            TopToolbarComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/user-notify/user-notify.service.ts\n            \n            injectable\n            UserNotifyService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/utils/query-component/query.component.ts\n            \n            component\n            QueryComponent\n            \n                58 %\n                (7/12)\n            \n        \n        \n            \n                \n                src/app/utils/query-component/query.component.ts\n            \n            directive\n            QueryBodyDirective\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/utils/query-component/query.component.ts\n            \n            directive\n            QueryButtonDirective\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/utils/validators.ts\n            \n            class\n            CCIMSValidators\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            host\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            host\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~9.1.12\n        \n            @angular/cdk : ^9.2.4\n        \n            @angular/common : ~9.1.12\n        \n            @angular/compiler : ~9.1.12\n        \n            @angular/core : ~9.1.12\n        \n            @angular/forms : ~9.1.12\n        \n            @angular/material : ^9.2.4\n        \n            @angular/platform-browser : ~9.1.12\n        \n            @angular/platform-browser-dynamic : ~9.1.12\n        \n            @angular/router : ~9.1.12\n        \n            @apollo/client : ^3.2.5\n        \n            @apollo/link-context : ^2.0.0-beta.3\n        \n            @clr/ui : ^4.0.4\n        \n            @github/time-elements : ^3.1.1\n        \n            @ng-select/ng-option-highlight : 0.0.5\n        \n            @ng-select/ng-select : ^4.0.4\n        \n            @primer/css : ^15.2.0\n        \n            @ustutt/grapheditor-webcomponent : ^0.6.0\n        \n            apollo-angular : ^2.0.4\n        \n            graphql : ^15.3.0\n        \n            monaco-editor : ^0.27.0\n        \n            ng-zorro-antd : ^9.3.0\n        \n            ngx-color-picker : ^10.1.0\n        \n            ngx-markdown : ^8.2.2\n        \n            ngx-monaco-editor : ^9.0.0\n        \n            ngx-toastr : ^13.1.0\n        \n            quick-score : ^0.0.12\n        \n            rxjs : ~6.5.4\n        \n            tslib : ^1.14.1\n        \n            typescript-collections : ^1.3.3\n        \n            zone.js : ~0.10.2\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            folderEdgeTypes   (src/.../issue-graph-nodes.ts)\n                        \n                        \n                            ListType   (src/.../id.ts)\n                        \n                        \n                            NodeDetailsType   (src/.../node-details.component.ts)\n                        \n                        \n                            NodeType   (src/.../id.ts)\n                        \n                        \n                            NodeType   (src/.../issue-graph-nodes.ts)\n                        \n                        \n                            QueryComponentState   (src/.../query.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/graphs/issue-graph/issue-graph-nodes.ts\n    \n        \n            \n                \n                    \n                        \n                        folderEdgeTypes\n                    \n                \n                        \n                            \n                                 RelatedTo\n                            \n                        \n                        \n                            \n                                Value : relatedTo\n                            \n                        \n                        \n                            \n                                 Depends\n                            \n                        \n                        \n                            \n                                Value : dependency\n                            \n                        \n                        \n                            \n                                 Duplicates\n                            \n                        \n                        \n                            \n                                Value : duplicate\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        NodeType\n                    \n                \n                        \n                            \n                                 Component\n                            \n                        \n                        \n                            \n                                Value : component\n                            \n                        \n                        \n                            \n                                 Interface\n                            \n                        \n                        \n                            \n                                Value : interface\n                            \n                        \n                        \n                            \n                                 InterfaceConsumer\n                            \n                        \n                        \n                            \n                                Value : interface-connect\n                            \n                        \n                        \n                            \n                                 IssueGroupContainer\n                            \n                        \n                        \n                            \n                                Value : issue-group-container\n                            \n                        \n            \n        \n\n    src/app/data-dgql/id.ts\n    \n        \n            \n                \n                    \n                        \n                        ListType\n                    \n                \n                        \n                            \n                                 Projects\n                            \n                        \n                        \n                            \n                                 Components\n                            \n                        \n                        \n                            \n                                 ComponentInterfaces\n                            \n                        \n                        \n                            \n                                 Issues\n                            \n                        \n                        \n                            \n                                 IssuesOnLocation\n                            \n                        \n                        \n                            \n                                 IssueLocations\n                            \n                        \n                        \n                            \n                                 TimelineItems\n                            \n                        \n                        \n                            \n                                 Labels\n                            \n                        \n                        \n                            \n                                 Artifacts\n                            \n                        \n                        \n                            \n                                 Participants\n                            \n                        \n                        \n                            \n                                 Assignees\n                            \n                        \n                        \n                            \n                                 SearchUsers\n                            \n                        \n                        \n                            \n                                 LinkedIssues\n                            \n                        \n                        \n                            \n                                 LinkedByIssues\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        NodeType\n                    \n                \n                    \n                        \n                            API node types. The names should match the respective value of __typename for a given node.\n\n                        \n                    \n                        \n                            \n                                 Root\n                            \n                        \n                        \n                            \n                                 Component\n                            \n                        \n                        \n                            \n                                 ComponentInterface\n                            \n                        \n                        \n                            \n                                 Issue\n                            \n                        \n                        \n                            \n                                 IssueTimelineItem\n                            \n                        \n                        \n                            \n                                 Label\n                            \n                        \n                        \n                            \n                                 Project\n                            \n                        \n                        \n                            \n                                 Artifact\n                            \n                        \n                        \n                            \n                                 User\n                            \n                        \n                        \n                            \n                                 IssueComment\n                            \n                        \n            \n        \n\n    src/app/node-details/node-details.component.ts\n    \n        \n            \n                \n                    \n                        \n                        NodeDetailsType\n                    \n                \n                    \n                        \n                            A node shown in the details component can either be a component or an interface\n\n                        \n                    \n                        \n                            \n                                 Component\n                            \n                        \n                        \n                            \n                                 Interface\n                            \n                        \n            \n        \n\n    src/app/utils/query-component/query.component.ts\n    \n        \n            \n                \n                    \n                        \n                        QueryComponentState\n                    \n                \n                    \n                        \n                            The current state of the query\n\n                        \n                    \n                        \n                            \n                                 Ready\n                            \n                        \n                        \n                            \n                                 Loading\n                            \n                        \n                        \n                            \n                                 Error\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nWebfrontend for Gropius\nDevelopment server\nThis project was generated with Angular CLI version 9.1.12.\nRun npm start for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nProject structure\nHave a look at the routing module to get a nice overview\nof the primary components of the app.\n\n\n\nAspect\nCode\n\n\n\n\nApp Layout\nFrameComponent\n\n\nGraph\nGraphsModule, look at the declarations\n\n\nProject Context\nStateService\n\n\nAccount Management and Auth with Backend\nLoginComponent, RegisterComponent, AuthenticationService, AuthGuard\n\n\nApollo GraphQL Client Setup\nGraphQLModule\n\n\nType Definitions for Data from Backend  Helper Objects for Queries & Mutations  All of this is output of code generator\ngenerated\n\n\n\nDocumentation generation\nThe documentation is generated with Compodoc. Run npm run compodocfor a documentation server. Navigate to http://localhost:6060/. The documentation will automatically reload if you change any of the source files. The configuration for the documentation is managed in tsconfig.doc.json.\nCodegeneration from .graphql files\nThe app uses GraphQL instead of REST to communicate with the backend. The graphql files are in the\ndata folder and subdivided by entities they pertain to e.g. label \nWhen you change .graphql files you have to rerun the code generator. It will update the files in\nsrc/generated to match the changes in the .graphql files.:warning: The backend has to be running with debugNoLogin set to true to make the backend schema\ndefinition accessible to the generator via the urls defined in the codegen configuration file.Run npm run generate to execute the codegenerator when this condition is met.\nCodegenerator explanation\nWe use a codegenerator (https://graphql-code-generator.com/) to create typescript classes from .graphql files\ncontaining queries and mutations. One class per query/mutation. We then use dependency injection to inject objects of theses classes \ninto e.g. services via dependency injection. These objects make it easy to parameterize the mutations and queries and\ninvoke them in typescript code.\nMocked Members Page\nEvery project offers a mocked 'Members' page. It shows a list of users in the project and\noffers a dialog to add users. However this area is purely a mock, changes are not persisted\nand there are no other users who really have access to your project.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphQLModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_GraphsModule\n\n\n\ncluster_GraphsModule_declarations\n\n\n\ncluster_GraphsModule_exports\n\n\n\n\nAccessTokenDialogComponent\n\nAccessTokenDialogComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccessTokenDialogComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommentComponent\n\nCommentComponent\n\nAppModule -->\n\nCommentComponent->AppModule\n\n\n\n\n\nComponentContextMenuComponent\n\nComponentContextMenuComponent\n\nAppModule -->\n\nComponentContextMenuComponent->AppModule\n\n\n\n\n\nCreateComponentDialogComponent\n\nCreateComponentDialogComponent\n\nAppModule -->\n\nCreateComponentDialogComponent->AppModule\n\n\n\n\n\nCreateEditLabelDialogComponent\n\nCreateEditLabelDialogComponent\n\nAppModule -->\n\nCreateEditLabelDialogComponent->AppModule\n\n\n\n\n\nCreateInterfaceDialogComponent\n\nCreateInterfaceDialogComponent\n\nAppModule -->\n\nCreateInterfaceDialogComponent->AppModule\n\n\n\n\n\nCreateIssueDialogComponent\n\nCreateIssueDialogComponent\n\nAppModule -->\n\nCreateIssueDialogComponent->AppModule\n\n\n\n\n\nCreateProjectDialogComponent\n\nCreateProjectDialogComponent\n\nAppModule -->\n\nCreateProjectDialogComponent->AppModule\n\n\n\n\n\nFrameComponent\n\nFrameComponent\n\nAppModule -->\n\nFrameComponent->AppModule\n\n\n\n\n\nIssueContentsComponent\n\nIssueContentsComponent\n\nAppModule -->\n\nIssueContentsComponent->AppModule\n\n\n\n\n\nIssueDetailComponent\n\nIssueDetailComponent\n\nAppModule -->\n\nIssueDetailComponent->AppModule\n\n\n\n\n\nLinkedIssueItemComponent\n\nLinkedIssueItemComponent\n\nAppModule -->\n\nLinkedIssueItemComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMarkdownEditorComponent\n\nMarkdownEditorComponent\n\nAppModule -->\n\nMarkdownEditorComponent->AppModule\n\n\n\n\n\nMarkdownPreviewComponent\n\nMarkdownPreviewComponent\n\nAppModule -->\n\nMarkdownPreviewComponent->AppModule\n\n\n\n\n\nNodeDetailsComponent\n\nNodeDetailsComponent\n\nAppModule -->\n\nNodeDetailsComponent->AppModule\n\n\n\n\n\nNodeDetailsPageComponent\n\nNodeDetailsPageComponent\n\nAppModule -->\n\nNodeDetailsPageComponent->AppModule\n\n\n\n\n\nProfileSettingsDialogComponent\n\nProfileSettingsDialogComponent\n\nAppModule -->\n\nProfileSettingsDialogComponent->AppModule\n\n\n\n\n\nProjectListComponent\n\nProjectListComponent\n\nAppModule -->\n\nProjectListComponent->AppModule\n\n\n\n\n\nProjectOverviewComponent\n\nProjectOverviewComponent\n\nAppModule -->\n\nProjectOverviewComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nRemoveDialogComponent\n\nRemoveDialogComponent\n\nAppModule -->\n\nRemoveDialogComponent->AppModule\n\n\n\n\n\nRemoveProjectMemberComponentComponent\n\nRemoveProjectMemberComponentComponent\n\nAppModule -->\n\nRemoveProjectMemberComponentComponent->AppModule\n\n\n\n\n\nSettingsDialogComponent\n\nSettingsDialogComponent\n\nAppModule -->\n\nSettingsDialogComponent->AppModule\n\n\n\n\n\nSideNavComponent\n\nSideNavComponent\n\nAppModule -->\n\nSideNavComponent->AppModule\n\n\n\n\n\nTextDisplayComponent\n\nTextDisplayComponent\n\nAppModule -->\n\nTextDisplayComponent->AppModule\n\n\n\n\n\nTimelineCoalescedItemsDirective\n\nTimelineCoalescedItemsDirective\n\nAppModule -->\n\nTimelineCoalescedItemsDirective->AppModule\n\n\n\n\n\nTimelineComponent\n\nTimelineComponent\n\nAppModule -->\n\nTimelineComponent->AppModule\n\n\n\n\n\nTimelineItemComponent\n\nTimelineItemComponent\n\nAppModule -->\n\nTimelineItemComponent->AppModule\n\n\n\n\n\nTimelineItemDeletedDirective\n\nTimelineItemDeletedDirective\n\nAppModule -->\n\nTimelineItemDeletedDirective->AppModule\n\n\n\n\n\nTimelineSingleItemDirective\n\nTimelineSingleItemDirective\n\nAppModule -->\n\nTimelineSingleItemDirective->AppModule\n\n\n\n\n\nTopToolbarComponent\n\nTopToolbarComponent\n\nAppModule -->\n\nTopToolbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGraphQLModule\n\nGraphQLModule\n\nAppModule -->\n\nGraphQLModule->AppModule\n\n\n\n\n\nGraphsModule\n\nGraphsModule\n\nAppModule -->\n\nGraphsModule->AppModule\n\n\n\n\n\nCursorPaginatorComponent \n\nCursorPaginatorComponent \n\nCursorPaginatorComponent  -->\n\nGraphsModule->CursorPaginatorComponent \n\n\n\n\n\nIssueCategoryComponent \n\nIssueCategoryComponent \n\nIssueCategoryComponent  -->\n\nGraphsModule->IssueCategoryComponent \n\n\n\n\n\nIssueGraphComponent \n\nIssueGraphComponent \n\nIssueGraphComponent  -->\n\nGraphsModule->IssueGraphComponent \n\n\n\n\n\nIssueGraphControlsComponent \n\nIssueGraphControlsComponent \n\nIssueGraphControlsComponent  -->\n\nGraphsModule->IssueGraphControlsComponent \n\n\n\n\n\nIssueIconComponent \n\nIssueIconComponent \n\nIssueIconComponent  -->\n\nGraphsModule->IssueIconComponent \n\n\n\n\n\nIssueItemComponent \n\nIssueItemComponent \n\nIssueItemComponent  -->\n\nGraphsModule->IssueItemComponent \n\n\n\n\n\nIssueLabelComponent \n\nIssueLabelComponent \n\nIssueLabelComponent  -->\n\nGraphsModule->IssueLabelComponent \n\n\n\n\n\nIssueListComponent \n\nIssueListComponent \n\nIssueListComponent  -->\n\nGraphsModule->IssueListComponent \n\n\n\n\n\nIssueLocationComponent \n\nIssueLocationComponent \n\nIssueLocationComponent  -->\n\nGraphsModule->IssueLocationComponent \n\n\n\n\n\nIssueSidebarComponent \n\nIssueSidebarComponent \n\nIssueSidebarComponent  -->\n\nGraphsModule->IssueSidebarComponent \n\n\n\n\n\nItemDirective \n\nItemDirective \n\nItemDirective  -->\n\nGraphsModule->ItemDirective \n\n\n\n\n\nProjectHeaderComponent \n\nProjectHeaderComponent \n\nProjectHeaderComponent  -->\n\nGraphsModule->ProjectHeaderComponent \n\n\n\n\n\nQueryBodyDirective \n\nQueryBodyDirective \n\nQueryBodyDirective  -->\n\nGraphsModule->QueryBodyDirective \n\n\n\n\n\nQueryButtonDirective \n\nQueryButtonDirective \n\nQueryButtonDirective  -->\n\nGraphsModule->QueryButtonDirective \n\n\n\n\n\nQueryComponent \n\nQueryComponent \n\nQueryComponent  -->\n\nGraphsModule->QueryComponent \n\n\n\n\n\nSetEditorComponent \n\nSetEditorComponent \n\nSetEditorComponent  -->\n\nGraphsModule->SetEditorComponent \n\n\n\n\n\nUserItemComponent \n\nUserItemComponent \n\nUserItemComponent  -->\n\nGraphsModule->UserItemComponent \n\n\n\n\n\nAddProjectMemberDialogComponent\n\nAddProjectMemberDialogComponent\n\nGraphsModule -->\n\nAddProjectMemberDialogComponent->GraphsModule\n\n\n\n\n\nCacheNodeComponent\n\nCacheNodeComponent\n\nGraphsModule -->\n\nCacheNodeComponent->GraphsModule\n\n\n\n\n\nCursorPaginatorComponent\n\nCursorPaginatorComponent\n\nGraphsModule -->\n\nCursorPaginatorComponent->GraphsModule\n\n\n\n\n\nIssueCategoryComponent\n\nIssueCategoryComponent\n\nGraphsModule -->\n\nIssueCategoryComponent->GraphsModule\n\n\n\n\n\nIssueFilterComponent\n\nIssueFilterComponent\n\nGraphsModule -->\n\nIssueFilterComponent->GraphsModule\n\n\n\n\n\nIssueGraphComponent\n\nIssueGraphComponent\n\nGraphsModule -->\n\nIssueGraphComponent->GraphsModule\n\n\n\n\n\nIssueGraphControlsComponent\n\nIssueGraphControlsComponent\n\nGraphsModule -->\n\nIssueGraphControlsComponent->GraphsModule\n\n\n\n\n\nIssueIconComponent\n\nIssueIconComponent\n\nGraphsModule -->\n\nIssueIconComponent->GraphsModule\n\n\n\n\n\nIssueItemComponent\n\nIssueItemComponent\n\nGraphsModule -->\n\nIssueItemComponent->GraphsModule\n\n\n\n\n\nIssueLabelComponent\n\nIssueLabelComponent\n\nGraphsModule -->\n\nIssueLabelComponent->GraphsModule\n\n\n\n\n\nIssueListComponent\n\nIssueListComponent\n\nGraphsModule -->\n\nIssueListComponent->GraphsModule\n\n\n\n\n\nIssueLocationComponent\n\nIssueLocationComponent\n\nGraphsModule -->\n\nIssueLocationComponent->GraphsModule\n\n\n\n\n\nIssueSidebarComponent\n\nIssueSidebarComponent\n\nGraphsModule -->\n\nIssueSidebarComponent->GraphsModule\n\n\n\n\n\nItemDirective\n\nItemDirective\n\nGraphsModule -->\n\nItemDirective->GraphsModule\n\n\n\n\n\nLabelSearchComponent\n\nLabelSearchComponent\n\nGraphsModule -->\n\nLabelSearchComponent->GraphsModule\n\n\n\n\n\nProjectHeaderComponent\n\nProjectHeaderComponent\n\nGraphsModule -->\n\nProjectHeaderComponent->GraphsModule\n\n\n\n\n\nProjectIssueListComponent\n\nProjectIssueListComponent\n\nGraphsModule -->\n\nProjectIssueListComponent->GraphsModule\n\n\n\n\n\nProjectMembersComponent\n\nProjectMembersComponent\n\nGraphsModule -->\n\nProjectMembersComponent->GraphsModule\n\n\n\n\n\nQueryBodyDirective\n\nQueryBodyDirective\n\nGraphsModule -->\n\nQueryBodyDirective->GraphsModule\n\n\n\n\n\nQueryButtonDirective\n\nQueryButtonDirective\n\nGraphsModule -->\n\nQueryButtonDirective->GraphsModule\n\n\n\n\n\nQueryComponent\n\nQueryComponent\n\nGraphsModule -->\n\nQueryComponent->GraphsModule\n\n\n\n\n\nSetEditorComponent\n\nSetEditorComponent\n\nGraphsModule -->\n\nSetEditorComponent->GraphsModule\n\n\n\n\n\nSetEditorDialogComponent\n\nSetEditorDialogComponent\n\nGraphsModule -->\n\nSetEditorDialogComponent->GraphsModule\n\n\n\n\n\nUserItemComponent\n\nUserItemComponent\n\nGraphsModule -->\n\nUserItemComponent->GraphsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    51 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    20 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    16 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    28 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        21 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EnumDictionary   (src/.../shared.ts)\n                        \n                        \n                            FilterElement   (src/.../label-search.component.ts)\n                        \n                        \n                            FilterLabel   (src/.../label-store.service.ts)\n                        \n                        \n                            GQLGraphComponent   (src/.../graph-data.ts)\n                        \n                        \n                            GQLInterface   (src/.../graph-data.ts)\n                        \n                        \n                            GQLIssue   (src/.../graph-data.ts)\n                        \n                        \n                            GraphFolder   (src/.../graph-data.ts)\n                        \n                        \n                            GraphLocation   (src/.../graph-data.ts)\n                        \n                        \n                            HydrateList   (src/.../query.ts)\n                        \n                        \n                            IssueListParams   (src/.../issues.service.ts)\n                        \n                        \n                            ItemFilterFunction   (src/.../timeline.component.ts)\n                        \n                        \n                            ItemOps   (src/.../set-editor-dialog.component.ts)\n                        \n                        \n                            ItemOps   (src/.../set-editor.component.ts)\n                        \n                        \n                            ListIdEnc   (src/.../id.ts)\n                        \n                        \n                            ListQueries   (src/.../load.ts)\n                        \n                        \n                            ListQueryInput   (src/.../load.ts)\n                        \n                        \n                            ListResult   (src/.../load.ts)\n                        \n                        \n                            LocalIssueData   (src/.../issue-sidebar.component.ts)\n                        \n                        \n                            LocationId   (src/.../graph-data.ts)\n                        \n                        \n                            MaybeLocalList   (src/.../issue-sidebar.component.ts)\n                        \n                        \n                            NodeIdEnc   (src/.../id.ts)\n                        \n                        \n                            NodeQueries   (src/.../load.ts)\n                        \n                        \n                            NodeQueryInput   (src/.../load.ts)\n                        \n                        \n                            NodeUpdatedCallbackFn   (src/.../node-details.component.ts)\n                        \n                        \n                            SelectedCategories   (src/.../shared.ts)\n                        \n                        \n                            TextDisplayEditCallbackFn   (src/.../text-display.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/graphs/shared.ts\n    \n    \n        \n            \n                \n                    \n                    EnumDictionary\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SelectedCategories\n                \n            \n            \n                \n                            EnumDictionary\n\n                \n            \n        \n    \n    src/app/graphs/label-search/label-search.component.ts\n    \n    \n        \n            \n                \n                    \n                    FilterElement\n                \n            \n            \n                \n                    The bar can contain elements standing for labels and elements for text fragments.\n\n                \n            \n            \n                \n                            TextFragment | FilterLabel\n\n                \n            \n        \n    \n    src/app/data/label/label-store.service.ts\n    \n    \n        \n            \n                \n                    \n                    FilterLabel\n                \n            \n            \n                \n                        Pick\n\n                \n            \n        \n    \n    src/app/data/issue-graph/graph-data.ts\n    \n    \n        \n            \n                \n                    \n                    GQLGraphComponent\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GQLInterface\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GQLIssue\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GraphFolder\n                \n            \n            \n                \n                            [LocationId, IssueCategory]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GraphLocation\n                \n            \n            \n                \n                        GraphInterface | GraphComponent\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LocationId\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/app/data-dgql/query.ts\n    \n    \n        \n            \n                \n                    \n                    HydrateList\n                \n            \n            \n                \n                    List hydration object (constructing this manually shouldn't be necessary as it mirrors the structure of GQL objects)\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/data-dgql/queries/issues.service.ts\n    \n    \n        \n            \n                \n                    \n                    IssueListParams\n                \n            \n            \n                \n                        QueryListParams\n\n                \n            \n        \n    \n    src/app/issue-detail/timeline/timeline.component.ts\n    \n    \n        \n            \n                \n                    \n                    ItemFilterFunction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/app/components/set-editor/set-editor-dialog.component.ts\n    \n    \n        \n            \n                \n                    \n                    ItemOps\n                \n            \n            \n                \n                        \"none\" | \"edit\" | \"create-edit\" | \"create-edit-delete\"\n\n                \n            \n        \n    \n    src/app/components/set-editor/set-editor.component.ts\n    \n    \n        \n            \n                \n                    \n                    ItemOps\n                \n            \n            \n                \n                        \"none\" | \"edit\" | \"create-edit\" | \"create-edit-delete\"\n\n                \n            \n        \n    \n    src/app/data-dgql/id.ts\n    \n    \n        \n            \n                \n                    \n                    ListIdEnc\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NodeIdEnc\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    src/app/data-dgql/load.ts\n    \n    \n        \n            \n                \n                    \n                    ListQueries\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ListQueryInput\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ListResult\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NodeQueries\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NodeQueryInput\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/issue-detail/issue-sidebar.component.ts\n    \n    \n        \n            \n                \n                    \n                    LocalIssueData\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MaybeLocalList\n                \n            \n            \n                \n                            ListId | T[]\n\n                \n            \n        \n    \n    src/app/node-details/node-details.component.ts\n    \n    \n        \n            \n                \n                    \n                    NodeUpdatedCallbackFn\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/app/text-display/text-display.component.ts\n    \n    \n        \n            \n                \n                    \n                    TextDisplayEditCallbackFn\n                \n            \n            \n                \n                    A callback function that is called once the user finishes editing the text.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/userMock.html":{"url":"interfaces/userMock.html","title":"interface - userMock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  userMock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/project-members/project-members.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            displayName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {ProjectStoreService} from '@app/data/project/project-store.service';\nimport {GetFullProjectQuery} from 'src/generated/graphql';\nimport {Observable} from 'rxjs';\nimport {FormControl} from '@angular/forms';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatSort, MatSortable} from '@angular/material/sort';\nimport {MatPaginator, MatPaginatorModule, PageEvent} from '@angular/material/paginator';\nimport {AddProjectMemberDialogComponent} from '@app/dialogs/add-project-member-dialog/add-project-member-dialog.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {RemoveProjectMemberComponentComponent} from '@app/dialogs/remove-project-member-component/remove-project-member-component.component';\n\n/**\n * This component is an example for the manage members view\n * All users are displayed in a paginated list. The list can be filtered.\n * The members are hardcoded\n * If the backend offers an interface to get all users the mockUsers list schould be replaced\n */\n@Component({\n  selector: 'app-project-members',\n  templateUrl: './project-members.component.html',\n  styleUrls: ['./project-members.component.scss']\n})\nexport class ProjectMembersComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatPaginatorModule) paginatorModule: MatPaginatorModule;\n  @ViewChild(MatSort) sort: MatSort;\n  public projectId: string;\n  public project$: Observable;\n  public project: GetFullProjectQuery;\n  validationFilter = new FormControl('');\n\n  columnsToDisplay = ['Name', 'Role', 'email'];\n  dataSource: MatTableDataSource;\n\n  //users\n  mockUsers: Array = [{id: '1', displayName: 'User1', email: 'User1.de'},\n    {id: '2', displayName: 'User2', email: 'User2.de'},\n    {id: '3', displayName: 'User3', email: 'User3.de'},\n    {id: '4', displayName: 'User4', email: 'User4.de'},\n    {id: '5', displayName: 'User5', email: 'User5.de'},\n    {id: '6', displayName: 'User6', email: 'User6.de'}];\n\n  // list of users who can be added to the project\n  //hardcoded\n  addableUsers: Array = [\n    {id: '7', displayName: 'AddedUser1', email: 'AddedUser1.de'},\n    {id: '8', displayName: 'AddedUser2', email: 'AddedUser2.de'},\n    {id: '9', displayName: 'AddedUser3', email: 'AddedUser3.de'},\n  ];\n\n\n  constructor(private dialog: MatDialog, private projectStore: ProjectStoreService, private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.projectId = this.route.snapshot.paramMap.get('id');\n    this.project$ = this.projectStore.getFullProject(this.projectId);\n    this.project$.subscribe(project => {\n      this.project = project;\n      // MOCK DATA for table\n      // FIXME Api change\n      // project.node.users.nodes.forEach(u => this.mockUsers.push(u));\n      this.dataSource = new MatTableDataSource(this.mockUsers);\n\n      // sort data in table\n      this.sort.sort(({id: 'Name', start: 'asc'}) as MatSortable);\n      this.dataSource.sort = this.sort;\n\n      //paginator\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n\n  // This method adds a user to the project members list without processing a task in the back-end\n  onAddClick() {\n    const addMemberDialogRef = this.dialog.open(AddProjectMemberDialogComponent,\n      {data: {addableMembers: this.addableUsers, projectId: this.projectId}});\n    addMemberDialogRef.afterClosed().subscribe(data => {\n      if (data) {\n        for (const user of data.usersToAdd) {\n          this.addableUsers.forEach(addableUser => {\n            if (addableUser.id == user) {\n              this.mockUsers.push(addableUser);\n            }\n          });\n        }\n        this.dataSource = new MatTableDataSource(this.mockUsers);\n\n      }\n    });\n\n  }\n\n  // This method deletes a user to the project members list without processing a task in the back-end\n  onDeleteClick() {\n    const deleteMemberDialogRef = this.dialog.open(RemoveProjectMemberComponentComponent,\n      {data: {mockMembers: this.mockUsers, projectId: this.projectId}});\n    deleteMemberDialogRef.afterClosed().subscribe(data => {\n      if (data) {\n        for (const user of data.usersToDelete) {\n          for (var i = 0; i (this.mockUsers);\n      }\n    });\n  }\n\n  //change pages\n  onPageChange(event: PageEvent) {\n  }\n\n  // on every key pressed in the filter-field this method is triggered and reduces the shown users in the list (table)\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  clickedOnRow(rowData) {\n    // there schould be the code when a user is selected\n    // TODO jump to the user information page\n  }\n\n}\n\n// defines the structure of a user\nexport interface userMock {\n  id: string;\n  displayName?: string;\n  username?: string;\n  email?: string;\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            antDesignIcons   (src/.../app.module.ts)\n                        \n                        \n                            basic   (src/.../graphql.module.ts)\n                        \n                        \n                            CACHE_FAST_DEBOUNCE_TIME_MS   (src/.../query.ts)\n                        \n                        \n                            CACHE_INTERACTIVE_DEBOUNCE_TIME_MS   (src/.../query.ts)\n                        \n                        \n                            CACHE_STALE_TIME_MS   (src/.../query.ts)\n                        \n                        \n                            COMPONENT_CONTEXT_MENU_DATA   (src/.../component-context-menu.component.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            CURRENT_USER_NODE   (src/.../id.ts)\n                        \n                        \n                            defaultOptions   (src/.../graphql.module.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            host   (src/.../environment.prod.ts)\n                        \n                        \n                            host   (src/.../environment.ts)\n                        \n                        \n                            icons   (src/.../app.module.ts)\n                        \n                        \n                            identity   (src/.../query.ts)\n                        \n                        \n                            listAllIssues   (src/.../issue-filter.component.ts)\n                        \n                        \n                            listQueries   (src/.../load.ts)\n                        \n                        \n                            networkErrorToast   (src/.../graphql.module.ts)\n                        \n                        \n                            nodeQueries   (src/.../load.ts)\n                        \n                        \n                            PREDICATES   (src/.../issue-filter.component.ts)\n                        \n                        \n                            queryList   (src/.../load.ts)\n                        \n                        \n                            queryNode   (src/.../load.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            ROOT_NODE   (src/.../id.ts)\n                        \n                        \n                            slider   (src/.../route-animations.ts)\n                        \n                        \n                            toasterConfig   (src/.../app.module.ts)\n                        \n                        \n                            zeroPosition   (src/.../issue-graph-nodes.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        antDesignIcons\n                        \n                    \n                \n            \n                \n                    \n                        Default value : AllIcons as {\n  [key: string]: IconDefinition;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        icons\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IconDefinition[]\n\n                    \n                \n                \n                    \n                        Default value : Object.keys(antDesignIcons).map(key => antDesignIcons[key])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toasterConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial\n\n                    \n                \n                \n                    \n                        Default value : {\n  maxOpened: 4,\n  autoDismiss: true\n}\n                    \n                \n\n\n        \n    \n\n    src/app/graphql.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        basic\n                        \n                    \n                \n            \n                \n                    \n                        Default value : setContext((operation, context) => ({\n  headers: {\n    Accept: 'charset=utf-8'\n  }\n}))\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DefaultOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  query: {\n    fetchPolicy: 'no-cache',\n    errorPolicy: 'all',\n  }\n}\n                    \n                \n\n            \n                \n                    This modules purpose is to provide define functions returning configurations\nfor the automatic creation of ApolloClients for graphql communication with the backend.\nThe key functions are providePublicApollo and provideDefaultApollo. The apollo instance\nconstructed from providePublicApollo is only used for registering.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        networkErrorToast\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial\n\n                    \n                \n                \n                    \n                        Default value : {\n  timeOut: 5000,\n  closeButton: true,\n  positionClass: 'toast-top-center',\n  enableHtml: true\n}\n                    \n                \n\n            \n                \n                    Congiuration for network error toast on register page.\n\n                \n            \n\n        \n    \n\n    src/app/data-dgql/query.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CACHE_FAST_DEBOUNCE_TIME_MS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 200\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CACHE_INTERACTIVE_DEBOUNCE_TIME_MS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 500\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CACHE_STALE_TIME_MS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5000\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        identity\n                        \n                    \n                \n            \n                \n                    \n                        Default value : id => id\n                    \n                \n\n            \n                \n                    ignore\n\n                \n            \n\n        \n    \n\n    src/app/graphs/component-context-menu/component-context-menu.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        COMPONENT_CONTEXT_MENU_DATA\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('COMPONENT_CONTEXT_MENU_DATA')\n                    \n                \n\n\n        \n    \n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/app/data-dgql/id.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CURRENT_USER_NODE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { type: NodeType.User, id: 'self' }\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROOT_NODE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { type: NodeType.Root, id: '' }\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  apiUrl: `${host}/api`,\n  signUpUrl: `${host}/api/public`,\n  loginUrl: `${host}/login`,\n  publicClientName: 'publicClient'\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        host\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:8080'\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  apiUrl: `${host}/api`,\n  // url for public api endpoint offering signup\n  signUpUrl: `${host}/api/public`,\n  loginUrl: `${host}/login`,\n  publicClientName: 'publicClient'\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        host\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:8080'\n                    \n                \n\n\n        \n    \n\n    src/app/issue-list/issue-filter.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        listAllIssues\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (self: IssueFilterComponent) => ({\n  node: { type: NodeType.Project, id: self.projectId },\n  type: ListType.Issues\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PREDICATES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  isOpen: { type: 'bool', label: 'Is open' },\n  isDuplicate: { type: 'bool', label: 'Is duplicate' },\n  category: {\n    type: 'enum',\n    label: 'Category',\n    options: [\n      [IssueCategory.Unclassified, 'Unclassified'],\n      [IssueCategory.Bug, 'Bug'],\n      [IssueCategory.FeatureRequest, 'Feature Request']\n    ]\n  },\n  labels: {\n    type: 'ids',\n    label: 'Labels',\n    dataType: 'label',\n    scoreKeys: ['name'],\n    listAll: (self: IssueFilterComponent) => self.allLabelsList,\n    makeFilter: (query: string) => ({ name: query }),\n    ifEmpty: 'No labels selected',\n  },\n  linksIssues: { type: 'bool', label: 'Has linked issues' },\n  linkedIssues: {\n    type: 'ids',\n    label: 'Linked issues',\n    dataType: 'issue',\n    scoreKeys: ['title'],\n    listAll: listAllIssues,\n    makeFilter: (query: string) => ({ title: query }),\n    ifEmpty: 'No issues selected',\n  },\n  isLinkedByIssues: { type: 'bool', label: 'Is linked by issues' },\n  linkedByIssues: {\n    type: 'ids',\n    label: 'Linked by issues',\n    dataType: 'issue',\n    scoreKeys: ['title'],\n    listAll: listAllIssues,\n    makeFilter: (query: string) => ({ title: query }),\n    ifEmpty: 'No issues selected',\n  },\n  participants: {\n    type: 'ids',\n    label: 'Participants',\n    dataType: 'user',\n    scoreKeys: ['username', 'displayName'],\n    listAll: () => ({ node: ROOT_NODE, type: ListType.SearchUsers }),\n    makeFilter: (query: string) => ({ username: query }),\n    ifEmpty: 'No users selected',\n  },\n  locations: {\n    type: 'ids',\n    label: 'Locations',\n    dataType: 'location',\n    scoreKeys: ['name'],\n    listAll: (self: IssueFilterComponent) => ({\n      staticSources: [\n        { node: { type: NodeType.Project, id: self.projectId }, type: ListType.Components },\n        { node: { type: NodeType.Project, id: self.projectId }, type: ListType.ComponentInterfaces },\n      ]\n    }),\n    makeFilter: (query: string) => ({ title: query }),\n    ifEmpty: 'No locations selected',\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/app/data-dgql/load.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        listQueries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ListQueries\n\n                    \n                \n                \n                    \n                        Default value : {\n  [ListType.Projects]: {\n    [NodeType.Root]: (i, list, params) => i.q.projects.listProjects(listParams(params)).then(data => ({\n      totalCount: data.projects.totalCount,\n      pageInfo: data.projects.pageInfo,\n      items: i.c.insertNodes(data.projects.nodes),\n    })),\n  },\n  [ListType.Components]: {\n    [NodeType.Project]: (i, list, params) => i.q.components.listProjectComponents(list.node.id, listParams(params)).then(data => ({\n      totalCount: data.node.components.totalCount,\n      pageInfo: data.node.components.pageInfo,\n      items: i.c.insertNodes(data.node.components.nodes),\n    })),\n    [NodeType.Issue]: (i, list, params) => i.q.issues.listIssueComponents(list.node.id, listParams(params)).then(data => ({\n      totalCount: data.node.components.totalCount,\n      pageInfo: data.node.components.pageInfo,\n      items: i.c.insertNodes(data.node.components.nodes),\n    })),\n    [NodeType.Label]: (i, list, params) => i.q.issues.listLabelComponents(list.node.id, listParams(params)).then(data => ({\n      totalCount: data.node.components.totalCount,\n      pageInfo: data.node.components.pageInfo,\n      items: i.c.insertNodes(data.node.components.nodes),\n    }))\n  },\n  [ListType.ComponentInterfaces]: {\n    [NodeType.Project]: (i, list, params) => i.q.components.listProjectInterfaces(list.node.id, listParams(params)).then(data => ({\n      totalCount: data.node.interfaces.totalCount,\n      pageInfo: data.node.interfaces.pageInfo,\n      items: i.c.insertNodes(data.node.interfaces.nodes),\n    })),\n  },\n  [ListType.Issues]: {\n    [NodeType.Project]: (i, list, params) => i.q.issues.listProjectIssues(list.node.id, listParams(params)).then(data => ({\n      totalCount: data.node.issues.totalCount,\n      pageInfo: data.node.issues.pageInfo,\n      items: i.c.insertNodes(data.node.issues.nodes),\n    })),\n    [NodeType.Component]: (i, list, params) => i.q.issues.listComponentIssues(list.node.id, listParams(params)).then(data => ({\n      totalCount: data.node.issues.totalCount,\n      pageInfo: data.node.issues.pageInfo,\n      items: i.c.insertNodes(data.node.issues.nodes),\n    })),\n  },\n  [ListType.IssuesOnLocation]: {\n    [NodeType.Component]: (i, list, params) => i.q.issues.listComponentIssuesOnLocation(list.node.id, listParams(params))\n      .then(data => ({\n        totalCount: data.node.issuesOnLocation.totalCount,\n        pageInfo: data.node.issuesOnLocation.pageInfo,\n        items: i.c.insertNodes(data.node.issuesOnLocation.nodes),\n      })),\n    [NodeType.ComponentInterface]: (i, list, params) => i.q.issues.listComponentInterfaceIssuesOnLocation(list.node.id, listParams(params))\n      .then(data => ({\n        totalCount: data.node.issuesOnLocation.totalCount,\n        pageInfo: data.node.issuesOnLocation.pageInfo,\n        items: i.c.insertNodes(data.node.issuesOnLocation.nodes),\n      })),\n  },\n  [ListType.TimelineItems]: {\n    [NodeType.Issue]: (i, list, params) => i.q.issues.listIssueTimelineItems(list.node.id, listParams(params))\n      .then(data => ({\n        totalCount: data.node.timeline.totalCount,\n        pageInfo: data.node.timeline.pageInfo,\n        items: i.c.insertNodes(data.node.timeline.nodes),\n      })),\n  },\n  [ListType.IssueLocations]: {\n    [NodeType.Issue]: (i, list, params) => i.q.issues.listIssueLocations(list.node.id, listParams(params))\n      .then(data => ({\n        totalCount: data.node.locations.totalCount,\n        pageInfo: data.node.locations.pageInfo,\n        items: i.c.insertNodes(data.node.locations.nodes),\n      }))\n  },\n  [ListType.Labels]: {\n    [NodeType.Project]: (i, list, params) => i.q.issues.listProjectLabels(list.node.id, listParams(params))\n      .then(data => ({\n        totalCount: data.node.labels.totalCount,\n        pageInfo: data.node.labels.pageInfo,\n        items: i.c.insertNodes(data.node.labels.nodes)\n      })),\n    [NodeType.Component]: (i, list, params) => i.q.issues.listComponentLabels(list.node.id, listParams(params))\n      .then(data => ({\n        totalCount: data.node.labels.totalCount,\n        pageInfo: data.node.labels.pageInfo,\n        items: i.c.insertNodes(data.node.labels.nodes)\n      })),\n    [NodeType.Issue]: (i, list, params) => i.q.issues.listIssueLabels(list.node.id, listParams(params))\n      .then(data => ({\n        totalCount: data.node.labels.totalCount,\n        pageInfo: data.node.labels.pageInfo,\n        items: i.c.insertNodes(data.node.labels.nodes)\n      }))\n  },\n  [ListType.Assignees]: {\n    [NodeType.Issue]: (i, list, params) => i.q.issues.listIssueAssignees(list.node.id, listParams(params))\n      .then(data => ({\n        totalCount: data.node.assignees.totalCount,\n        pageInfo: data.node.assignees.pageInfo,\n        items: i.c.insertNodes(data.node.assignees.nodes)\n      }))\n  },\n  [ListType.LinkedIssues]: {\n    [NodeType.Issue]: (i, list, params) => i.q.issues.listIssueLinksToIssues(list.node.id, listParams(params))\n      .then(data => ({\n        totalCount: data.node.linksToIssues.totalCount,\n        pageInfo: data.node.linksToIssues.pageInfo,\n        items: i.c.insertNodes(data.node.linksToIssues.nodes)\n      }))\n  },\n  [ListType.LinkedByIssues]: {\n    [NodeType.Issue]: (i, list, params) => i.q.issues.listIssueLinkedByIssues(list.node.id, listParams(params))\n      .then(data => ({\n        totalCount: data.node.linkedByIssues.totalCount,\n        pageInfo: data.node.linkedByIssues.pageInfo,\n        items: i.c.insertNodes(data.node.linkedByIssues.nodes)\n      }))\n  },\n  [ListType.SearchUsers]: {\n    [NodeType.Root]: (i, list, params) => i.q.users.searchUsers(params.filter as (string | { username: string }))\n      .then(data => ({\n        totalCount: data.length,\n        pageInfo: {\n          startCursor: data[0]?.id || null,\n          endCursor: data[data.length - 1]?.id || null,\n          hasNextPage: false,\n          hasPreviousPage: false,\n        },\n        items: i.c.insertNodes(data)\n      }))\n  }\n}\n                    \n                \n\n            \n                \n                    Available list queries.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nodeQueries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NodeQueries\n\n                    \n                \n                \n                    \n                        Default value : {\n  [NodeType.Project]: (i, id) => i.q.projects.getProject(id).then(data => data.node),\n  [NodeType.Component]: (i, id) => i.q.components.getComponent(id).then(data => data.node),\n  [NodeType.ComponentInterface]: (i, id) => i.q.components.getInterface(id).then(data => data.node),\n  [NodeType.Issue]: (i, id) => i.q.issues.getIssueHeader(id).then(data => data.node),\n  [NodeType.User]: (i, id) => id === CURRENT_USER_NODE.id\n    ? i.q.users.currentUser().then(data => data.currentUser)\n    : Promise.reject(new Error('not implemented')),\n  [NodeType.Label]: (i, id) => i.q.issues.getLabel(id).then(data => data.node)\n}\n                    \n                \n\n            \n                \n                    Types of nodes that can be loaded directly.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryList\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (q: QueriesService, c: NodeCache) => async (\n  listId: ListId,\n  params: ListParams\n): Promise> => {\n  const { node, type } = listId;\n\n  if (!listQueries[type] || !listQueries[type][node.type]) {\n    throw new Error(`${NodeType[node.type]} has no list ${ListType[type]}`);\n  }\n\n  const i = { q, c };\n  return (await listQueries[type][node.type](i, { node, type }, params)) as ListResult;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryNode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (q: QueriesService) => async (nodeId: NodeId): Promise => {\n  const { type, id } = nodeId;\n\n  if (!nodeQueries[type]) {\n    throw new Error(`${NodeType[type]} cannot be loaded directly`);\n  }\n\n  const i = { q };\n  return (await nodeQueries[type](i, id)) as T;\n}\n                    \n                \n\n            \n                \n                    Loads a node.\n\n                \n            \n\n        \n    \n\n    src/app/route-animations.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        slider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('routeAnimations', [\n    transition('* => isRight', slideTo('right')),\n  ])\n                    \n                \n\n            \n                \n                    Describes an animation of sliding to to the right, used for the entry of the ComponentDetails component\n\n                \n            \n\n        \n    \n\n    src/app/graphs/issue-graph/issue-graph-nodes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        zeroPosition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {x: 0, y: 0}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
